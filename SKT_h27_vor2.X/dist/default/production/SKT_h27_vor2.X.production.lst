

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed May 26 18:26:07 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F1938
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    13                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    30                           	dabs	1,0x7E,2
    31  0000                     
    32                           ; Version 2.20
    33                           ; Generated 12/02/2020 GMT
    34                           ; 
    35                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F1938 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  0008                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000D                     	;# 
    80  000E                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0015                     	;# 
    86  0016                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001C                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  010C                     	;# 
   115  010D                     	;# 
   116  010E                     	;# 
   117  0110                     	;# 
   118  0111                     	;# 
   119  0112                     	;# 
   120  0113                     	;# 
   121  0114                     	;# 
   122  0115                     	;# 
   123  0116                     	;# 
   124  0117                     	;# 
   125  0118                     	;# 
   126  0119                     	;# 
   127  011A                     	;# 
   128  011B                     	;# 
   129  011D                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0191                     	;# 
   133  0191                     	;# 
   134  0192                     	;# 
   135  0193                     	;# 
   136  0193                     	;# 
   137  0193                     	;# 
   138  0194                     	;# 
   139  0195                     	;# 
   140  0196                     	;# 
   141  0199                     	;# 
   142  019A                     	;# 
   143  019B                     	;# 
   144  019B                     	;# 
   145  019B                     	;# 
   146  019B                     	;# 
   147  019C                     	;# 
   148  019C                     	;# 
   149  019D                     	;# 
   150  019E                     	;# 
   151  019F                     	;# 
   152  020D                     	;# 
   153  0210                     	;# 
   154  0211                     	;# 
   155  0212                     	;# 
   156  0213                     	;# 
   157  0214                     	;# 
   158  0215                     	;# 
   159  0215                     	;# 
   160  0216                     	;# 
   161  0217                     	;# 
   162  0291                     	;# 
   163  0291                     	;# 
   164  0292                     	;# 
   165  0293                     	;# 
   166  0294                     	;# 
   167  0295                     	;# 
   168  0295                     	;# 
   169  0296                     	;# 
   170  0298                     	;# 
   171  0298                     	;# 
   172  0299                     	;# 
   173  029A                     	;# 
   174  029B                     	;# 
   175  029C                     	;# 
   176  029C                     	;# 
   177  029D                     	;# 
   178  029E                     	;# 
   179  029F                     	;# 
   180  0311                     	;# 
   181  0311                     	;# 
   182  0312                     	;# 
   183  0313                     	;# 
   184  0314                     	;# 
   185  0315                     	;# 
   186  0315                     	;# 
   187  0316                     	;# 
   188  0318                     	;# 
   189  0318                     	;# 
   190  0319                     	;# 
   191  031A                     	;# 
   192  031C                     	;# 
   193  031C                     	;# 
   194  031D                     	;# 
   195  031E                     	;# 
   196  0394                     	;# 
   197  0395                     	;# 
   198  0396                     	;# 
   199  0415                     	;# 
   200  0416                     	;# 
   201  0417                     	;# 
   202  041C                     	;# 
   203  041D                     	;# 
   204  041E                     	;# 
   205  0791                     	;# 
   206  0792                     	;# 
   207  0793                     	;# 
   208  0794                     	;# 
   209  0795                     	;# 
   210  0798                     	;# 
   211  0799                     	;# 
   212  07A0                     	;# 
   213  07A1                     	;# 
   214  07A3                     	;# 
   215  07A4                     	;# 
   216  07A6                     	;# 
   217  07A7                     	;# 
   218  07A9                     	;# 
   219  07AA                     	;# 
   220  0FE4                     	;# 
   221  0FE5                     	;# 
   222  0FE6                     	;# 
   223  0FE7                     	;# 
   224  0FE8                     	;# 
   225  0FE9                     	;# 
   226  0FEA                     	;# 
   227  0FEB                     	;# 
   228  0FED                     	;# 
   229  0FEE                     	;# 
   230  0FEF                     	;# 
   231  0000                     	;# 
   232  0001                     	;# 
   233  0002                     	;# 
   234  0003                     	;# 
   235  0004                     	;# 
   236  0005                     	;# 
   237  0006                     	;# 
   238  0007                     	;# 
   239  0008                     	;# 
   240  0009                     	;# 
   241  000A                     	;# 
   242  000B                     	;# 
   243  000C                     	;# 
   244  000D                     	;# 
   245  000E                     	;# 
   246  0010                     	;# 
   247  0011                     	;# 
   248  0012                     	;# 
   249  0013                     	;# 
   250  0015                     	;# 
   251  0016                     	;# 
   252  0016                     	;# 
   253  0017                     	;# 
   254  0018                     	;# 
   255  0019                     	;# 
   256  001A                     	;# 
   257  001B                     	;# 
   258  001C                     	;# 
   259  001E                     	;# 
   260  001F                     	;# 
   261  008C                     	;# 
   262  008D                     	;# 
   263  008E                     	;# 
   264  0090                     	;# 
   265  0091                     	;# 
   266  0092                     	;# 
   267  0093                     	;# 
   268  0095                     	;# 
   269  0096                     	;# 
   270  0097                     	;# 
   271  0098                     	;# 
   272  0099                     	;# 
   273  009A                     	;# 
   274  009B                     	;# 
   275  009B                     	;# 
   276  009C                     	;# 
   277  009D                     	;# 
   278  009E                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  0110                     	;# 
   283  0111                     	;# 
   284  0112                     	;# 
   285  0113                     	;# 
   286  0114                     	;# 
   287  0115                     	;# 
   288  0116                     	;# 
   289  0117                     	;# 
   290  0118                     	;# 
   291  0119                     	;# 
   292  011A                     	;# 
   293  011B                     	;# 
   294  011D                     	;# 
   295  018C                     	;# 
   296  018D                     	;# 
   297  0191                     	;# 
   298  0191                     	;# 
   299  0192                     	;# 
   300  0193                     	;# 
   301  0193                     	;# 
   302  0193                     	;# 
   303  0194                     	;# 
   304  0195                     	;# 
   305  0196                     	;# 
   306  0199                     	;# 
   307  019A                     	;# 
   308  019B                     	;# 
   309  019B                     	;# 
   310  019B                     	;# 
   311  019B                     	;# 
   312  019C                     	;# 
   313  019C                     	;# 
   314  019D                     	;# 
   315  019E                     	;# 
   316  019F                     	;# 
   317  020D                     	;# 
   318  0210                     	;# 
   319  0211                     	;# 
   320  0212                     	;# 
   321  0213                     	;# 
   322  0214                     	;# 
   323  0215                     	;# 
   324  0215                     	;# 
   325  0216                     	;# 
   326  0217                     	;# 
   327  0291                     	;# 
   328  0291                     	;# 
   329  0292                     	;# 
   330  0293                     	;# 
   331  0294                     	;# 
   332  0295                     	;# 
   333  0295                     	;# 
   334  0296                     	;# 
   335  0298                     	;# 
   336  0298                     	;# 
   337  0299                     	;# 
   338  029A                     	;# 
   339  029B                     	;# 
   340  029C                     	;# 
   341  029C                     	;# 
   342  029D                     	;# 
   343  029E                     	;# 
   344  029F                     	;# 
   345  0311                     	;# 
   346  0311                     	;# 
   347  0312                     	;# 
   348  0313                     	;# 
   349  0314                     	;# 
   350  0315                     	;# 
   351  0315                     	;# 
   352  0316                     	;# 
   353  0318                     	;# 
   354  0318                     	;# 
   355  0319                     	;# 
   356  031A                     	;# 
   357  031C                     	;# 
   358  031C                     	;# 
   359  031D                     	;# 
   360  031E                     	;# 
   361  0394                     	;# 
   362  0395                     	;# 
   363  0396                     	;# 
   364  0415                     	;# 
   365  0416                     	;# 
   366  0417                     	;# 
   367  041C                     	;# 
   368  041D                     	;# 
   369  041E                     	;# 
   370  0791                     	;# 
   371  0792                     	;# 
   372  0793                     	;# 
   373  0794                     	;# 
   374  0795                     	;# 
   375  0798                     	;# 
   376  0799                     	;# 
   377  07A0                     	;# 
   378  07A1                     	;# 
   379  07A3                     	;# 
   380  07A4                     	;# 
   381  07A6                     	;# 
   382  07A7                     	;# 
   383  07A9                     	;# 
   384  07AA                     	;# 
   385  0FE4                     	;# 
   386  0FE5                     	;# 
   387  0FE6                     	;# 
   388  0FE7                     	;# 
   389  0FE8                     	;# 
   390  0FE9                     	;# 
   391  0FEA                     	;# 
   392  0FEB                     	;# 
   393  0FED                     	;# 
   394  0FEE                     	;# 
   395  0FEF                     	;# 
   396                           
   397                           	psect	idataBANK1
   398  0206                     __pidataBANK1:
   399                           
   400                           ;initializer for _samp
   401  0206  343F               	retlw	63
   402  0207  3400               	retlw	0
   403  0208  3406               	retlw	6
   404  0209  3400               	retlw	0
   405  020A  345B               	retlw	91
   406  020B  3400               	retlw	0
   407  020C  344F               	retlw	79
   408  020D  3400               	retlw	0
   409  020E  3466               	retlw	102
   410  020F  3400               	retlw	0
   411  0210  346D               	retlw	109
   412  0211  3400               	retlw	0
   413  0212  347D               	retlw	125
   414  0213  3400               	retlw	0
   415  0214  3427               	retlw	39
   416  0215  3400               	retlw	0
   417  0216  347F               	retlw	127
   418  0217  3400               	retlw	0
   419  0218  346F               	retlw	111
   420  0219  3400               	retlw	0
   421  021A  345F               	retlw	95
   422  021B  3400               	retlw	0
   423  021C  347C               	retlw	124
   424  021D  3400               	retlw	0
   425  021E  3458               	retlw	88
   426  021F  3400               	retlw	0
   427  0220  345E               	retlw	94
   428  0221  3400               	retlw	0
   429  0222  3479               	retlw	121
   430  0223  3400               	retlw	0
   431  0224  3471               	retlw	113
   432  0225  3400               	retlw	0
   433                           
   434                           ;initializer for _num0
   435  0226  343F               	retlw	63
   436  0227  3400               	retlw	0
   437  0228  3406               	retlw	6
   438  0229  3400               	retlw	0
   439  022A  345B               	retlw	91
   440  022B  3400               	retlw	0
   441  022C  344F               	retlw	79
   442  022D  3400               	retlw	0
   443  022E  3466               	retlw	102
   444  022F  3400               	retlw	0
   445  0230  346D               	retlw	109
   446  0231  3400               	retlw	0
   447  0232  347D               	retlw	125
   448  0233  3400               	retlw	0
   449  0234  3427               	retlw	39
   450  0235  3400               	retlw	0
   451  0236  347F               	retlw	127
   452  0237  3400               	retlw	0
   453  0238  346F               	retlw	111
   454  0239  3400               	retlw	0
   455                           
   456                           ;initializer for _gusu
   457  023A  343F               	retlw	63
   458  023B  3400               	retlw	0
   459  023C  345B               	retlw	91
   460  023D  3400               	retlw	0
   461  023E  3466               	retlw	102
   462  023F  3400               	retlw	0
   463  0240  347D               	retlw	125
   464  0241  3400               	retlw	0
   465  0242  347F               	retlw	127
   466  0243  3400               	retlw	0
   467                           
   468                           ;initializer for _mojn
   469  0244  3454               	retlw	84
   470  0245  3400               	retlw	0
   471  0246  3473               	retlw	115
   472  0247  3400               	retlw	0
   473                           
   474                           ;initializer for _mojh
   475  0248  3476               	retlw	118
   476  0249  3400               	retlw	0
   477  024A  3438               	retlw	56
   478  024B  3400               	retlw	0
   479                           
   480                           	psect	idataBANK2
   481  0157                     __pidataBANK2:
   482                           
   483                           ;initializer for _moji
   484  0157  345F               	retlw	95
   485  0158  3400               	retlw	0
   486  0159  347C               	retlw	124
   487  015A  3400               	retlw	0
   488  015B  3458               	retlw	88
   489  015C  3400               	retlw	0
   490  015D  345E               	retlw	94
   491  015E  3400               	retlw	0
   492  015F  3479               	retlw	121
   493  0160  3400               	retlw	0
   494  0161  3471               	retlw	113
   495  0162  3400               	retlw	0
   496  0163  3476               	retlw	118
   497  0164  3400               	retlw	0
   498  0165  3438               	retlw	56
   499  0166  3400               	retlw	0
   500  0167  3454               	retlw	84
   501  0168  3400               	retlw	0
   502  0169  3473               	retlw	115
   503  016A  3400               	retlw	0
   504                           
   505                           ;initializer for _mojf
   506  016B  3471               	retlw	113
   507  016C  3400               	retlw	0
   508  016D  3479               	retlw	121
   509  016E  3400               	retlw	0
   510  016F  345E               	retlw	94
   511  0170  3400               	retlw	0
   512  0171  3458               	retlw	88
   513  0172  3400               	retlw	0
   514  0173  347C               	retlw	124
   515  0174  3400               	retlw	0
   516  0175  345F               	retlw	95
   517  0176  3400               	retlw	0
   518                           
   519                           ;initializer for _moja
   520  0177  345F               	retlw	95
   521  0178  3400               	retlw	0
   522  0179  347C               	retlw	124
   523  017A  3400               	retlw	0
   524  017B  3458               	retlw	88
   525  017C  3400               	retlw	0
   526  017D  345E               	retlw	94
   527  017E  3400               	retlw	0
   528  017F  3479               	retlw	121
   529  0180  3400               	retlw	0
   530  0181  3471               	retlw	113
   531  0182  3400               	retlw	0
   532                           
   533                           ;initializer for _kisu
   534  0183  3406               	retlw	6
   535  0184  3400               	retlw	0
   536  0185  344F               	retlw	79
   537  0186  3400               	retlw	0
   538  0187  346D               	retlw	109
   539  0188  3400               	retlw	0
   540  0189  3427               	retlw	39
   541  018A  3400               	retlw	0
   542  018B  346F               	retlw	111
   543  018C  3400               	retlw	0
   544                           
   545                           	psect	idataBANK3
   546  0113                     __pidataBANK3:
   547                           
   548                           ;initializer for _samf
   549  0113  3471               	retlw	113
   550  0114  3400               	retlw	0
   551  0115  3479               	retlw	121
   552  0116  3400               	retlw	0
   553  0117  345E               	retlw	94
   554  0118  3400               	retlw	0
   555  0119  3458               	retlw	88
   556  011A  3400               	retlw	0
   557  011B  347C               	retlw	124
   558  011C  3400               	retlw	0
   559  011D  345F               	retlw	95
   560  011E  3400               	retlw	0
   561  011F  346F               	retlw	111
   562  0120  3400               	retlw	0
   563  0121  347F               	retlw	127
   564  0122  3400               	retlw	0
   565  0123  3427               	retlw	39
   566  0124  3400               	retlw	0
   567  0125  347D               	retlw	125
   568  0126  3400               	retlw	0
   569  0127  346D               	retlw	109
   570  0128  3400               	retlw	0
   571  0129  3466               	retlw	102
   572  012A  3400               	retlw	0
   573  012B  344F               	retlw	79
   574  012C  3400               	retlw	0
   575  012D  345B               	retlw	91
   576  012E  3400               	retlw	0
   577  012F  3406               	retlw	6
   578  0130  3400               	retlw	0
   579  0131  343F               	retlw	63
   580  0132  3400               	retlw	0
   581  000E                     _PORTC	set	14
   582  000D                     _PORTB	set	13
   583  000C                     _PORTA	set	12
   584  0061                     _RA1	set	97
   585  0060                     _RA0	set	96
   586  0062                     _RA2	set	98
   587  0077                     _RC7	set	119
   588  0072                     _RC2	set	114
   589  0071                     _RC1	set	113
   590  0070                     _RC0	set	112
   591  0076                     _RC6	set	118
   592  0075                     _RC5	set	117
   593  0099                     _OSCCON	set	153
   594  008E                     _TRISC	set	142
   595  008D                     _TRISB	set	141
   596  008C                     _TRISA	set	140
   597  018D                     _ANSELB	set	397
   598  018C                     _ANSELA	set	396
   599                           
   600                           	psect	cinit
   601  07CC                     start_initialization:	
   602                           ; #config settings
   603                           
   604  07CC                     __initialization:
   605                           
   606                           ; Initialize objects allocated to BANK1
   607  07CC  3006               	movlw	low __pidataBANK1
   608  07CD  0084               	movwf	4
   609  07CE  3082               	movlw	(high __pidataBANK1)| (0+128)
   610  07CF  0085               	movwf	5
   611  07D0  30A0               	movlw	low __pdataBANK1
   612  07D1  0086               	movwf	6
   613  07D2  3000               	movlw	high __pdataBANK1
   614  07D3  0087               	movwf	7
   615  07D4  3046               	movlw	70
   616  07D5  3180  20D1  3187   	fcall	init_ram
   617                           
   618                           ; Initialize objects allocated to BANK2
   619  07D8  3057               	movlw	low __pidataBANK2
   620  07D9  0084               	movwf	4
   621  07DA  3081               	movlw	(high __pidataBANK2)| (0+128)
   622  07DB  0085               	movwf	5
   623  07DC  3020               	movlw	low __pdataBANK2
   624  07DD  0086               	movwf	6
   625  07DE  3001               	movlw	high __pdataBANK2
   626  07DF  0087               	movwf	7
   627  07E0  3036               	movlw	54
   628  07E1  3180  20D1  3187   	fcall	init_ram
   629                           
   630                           ; Initialize objects allocated to BANK3
   631  07E4  3013               	movlw	low __pidataBANK3
   632  07E5  0084               	movwf	4
   633  07E6  3081               	movlw	(high __pidataBANK3)| (0+128)
   634  07E7  0085               	movwf	5
   635  07E8  30A0               	movlw	low __pdataBANK3
   636  07E9  0086               	movwf	6
   637  07EA  3001               	movlw	high __pdataBANK3
   638  07EB  0087               	movwf	7
   639  07EC  3020               	movlw	32
   640  07ED  3180  20D1  3187   	fcall	init_ram
   641                           
   642                           ; Clear objects allocated to COMMON
   643  07F0  01FC               	clrf	__pbssCOMMON& (0+127)
   644  07F1  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   645                           
   646                           ; Clear objects allocated to BANK0
   647  07F2  3052               	movlw	low __pbssBANK0
   648  07F3  0084               	movwf	4
   649  07F4  3000               	movlw	high __pbssBANK0
   650  07F5  0085               	movwf	5
   651  07F6  301E               	movlw	30
   652  07F7  3180  20CB  3187   	fcall	clear_ram0
   653                           
   654                           ; Clear objects allocated to BANK1
   655  07FA  0021               	movlb	1	; select bank1
   656  07FB  01E6               	clrf	__pbssBANK1& (0+127)
   657  07FC  01E7               	clrf	(__pbssBANK1+1)& (0+127)
   658  07FD                     end_of_initialization:	
   659                           ;End of C runtime variable initialization code
   660                           
   661  07FD                     __end_of__initialization:
   662  07FD  0020               	movlb	0
   663  07FE  3185  2D28         	ljmp	_main	;jump to C main() function
   664                           
   665                           	psect	bssCOMMON
   666  007C                     __pbssCOMMON:
   667  007C                     _flag_sw3:
   668  007C                     	ds	2
   669                           
   670                           	psect	bssBANK0
   671  0052                     __pbssBANK0:
   672  0052                     _fugou:
   673  0052                     	ds	2
   674  0054                     _code10:
   675  0054                     	ds	2
   676  0056                     _code100:
   677  0056                     	ds	2
   678  0058                     _code1000:
   679  0058                     	ds	2
   680  005A                     _count:
   681  005A                     	ds	2
   682  005C                     _atai:
   683  005C                     	ds	2
   684  005E                     _atai1:
   685  005E                     	ds	2
   686  0060                     _atai10:
   687  0060                     	ds	2
   688  0062                     _ccw:
   689  0062                     	ds	2
   690  0064                     _cw:
   691  0064                     	ds	2
   692  0066                     _flg:
   693  0066                     	ds	2
   694  0068                     _flag_P:
   695  0068                     	ds	2
   696  006A                     _flag_R:
   697  006A                     	ds	2
   698  006C                     _flag_sw2:
   699  006C                     	ds	2
   700  006E                     _flag_sw1:
   701  006E                     	ds	2
   702                           
   703                           	psect	bssBANK1
   704  00E6                     __pbssBANK1:
   705  00E6                     _code1:
   706  00E6                     	ds	2
   707                           
   708                           	psect	dataBANK1
   709  00A0                     __pdataBANK1:
   710  00A0                     _samp:
   711  00A0                     	ds	32
   712  00C0                     _num0:
   713  00C0                     	ds	20
   714  00D4                     _gusu:
   715  00D4                     	ds	10
   716  00DE                     _mojn:
   717  00DE                     	ds	4
   718  00E2                     _mojh:
   719  00E2                     	ds	4
   720                           
   721                           	psect	dataBANK2
   722  0120                     __pdataBANK2:
   723  0120                     _moji:
   724  0120                     	ds	20
   725  0134                     _mojf:
   726  0134                     	ds	12
   727  0140                     _moja:
   728  0140                     	ds	12
   729  014C                     _kisu:
   730  014C                     	ds	10
   731                           
   732                           	psect	dataBANK3
   733  01A0                     __pdataBANK3:
   734  01A0                     _samf:
   735  01A0                     	ds	32
   736                           
   737                           	psect	inittext
   738  00D1                     init_ram:
   739  00D1  00FE               	movwf	btemp
   740  00D2                     initloop:
   741  00D2  0012               	moviw fsr0++
   742  00D3  001E               	movwi fsr1++
   743  00D4  0BFE               	decfsz	btemp,f
   744  00D5  28D2               	goto	initloop
   745  00D6  3400               	retlw	0
   746                           
   747                           	psect	clrtext
   748  00CB                     clear_ram0:	
   749                           ;	Called with FSR0 containing the base address, and
   750                           ;	WREG with the size to clear
   751                           
   752  00CB  0064               	clrwdt	;clear the watchdog before getting into this loop
   753  00CC                     clrloop0:
   754  00CC  0180               	clrf	0	;clear RAM location pointed to by FSR
   755  00CD  3101               	addfsr 0,1
   756  00CE  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   757  00CF  28CC               	goto	clrloop0	;have we reached the end yet?
   758  00D0  3400               	retlw	0	;all done for this memory range, return
   759                           
   760                           	psect	cstackCOMMON
   761  0070                     __pcstackCOMMON:
   762  0070                     ?_portinit:
   763  0070                     ??_portinit:	
   764                           ; 1 bytes @ 0x0
   765                           
   766  0070                     ?_zenoff:	
   767                           ; 1 bytes @ 0x0
   768                           
   769  0070                     ??_zenoff:	
   770                           ; 1 bytes @ 0x0
   771                           
   772  0070                     ?_dynam:	
   773                           ; 1 bytes @ 0x0
   774                           
   775  0070                     ?_tactsw:	
   776                           ; 1 bytes @ 0x0
   777                           
   778  0070                     ??_tactsw:	
   779                           ; 1 bytes @ 0x0
   780                           
   781  0070                     ?_fclr:	
   782                           ; 1 bytes @ 0x0
   783                           
   784  0070                     ?_main:	
   785                           ; 1 bytes @ 0x0
   786                           
   787  0070                     ?___lwdiv:	
   788                           ; 1 bytes @ 0x0
   789                           
   790  0070                     dynam@dig1data:	
   791                           ; 2 bytes @ 0x0
   792                           
   793  0070                     fclr@flg:	
   794                           ; 2 bytes @ 0x0
   795                           
   796  0070                     ___lwdiv@divisor:	
   797                           ; 2 bytes @ 0x0
   798                           
   799                           
   800                           ; 2 bytes @ 0x0
   801  0070                     	ds	2
   802  0072                     ??_fclr:
   803  0072                     dynam@dig2data:	
   804                           ; 1 bytes @ 0x2
   805                           
   806  0072                     tactsw@b:	
   807                           ; 2 bytes @ 0x2
   808                           
   809  0072                     ___lwdiv@dividend:	
   810                           ; 2 bytes @ 0x2
   811                           
   812                           
   813                           ; 2 bytes @ 0x2
   814  0072                     	ds	2
   815  0074                     ??___lwdiv:
   816  0074                     dynam@smdata:	
   817                           ; 1 bytes @ 0x4
   818                           
   819  0074                     tactsw@c:	
   820                           ; 2 bytes @ 0x4
   821                           
   822                           
   823                           ; 2 bytes @ 0x4
   824  0074                     	ds	1
   825  0075                     ___lwdiv@quotient:
   826                           
   827                           ; 2 bytes @ 0x5
   828  0075                     	ds	1
   829  0076                     dynam@tr:
   830  0076                     tactsw@a:	
   831                           ; 2 bytes @ 0x6
   832                           
   833                           
   834                           ; 2 bytes @ 0x6
   835  0076                     	ds	1
   836  0077                     ___lwdiv@counter:
   837                           
   838                           ; 1 bytes @ 0x7
   839  0077                     	ds	1
   840  0078                     ??_dynam:
   841  0078                     ?_tact:	
   842                           ; 1 bytes @ 0x8
   843                           
   844  0078                     ??_motor:	
   845                           ; 1 bytes @ 0x8
   846                           
   847  0078                     tact@mode:	
   848                           ; 1 bytes @ 0x8
   849                           
   850  0078                     motor@i:	
   851                           ; 2 bytes @ 0x8
   852                           
   853                           
   854                           ; 2 bytes @ 0x8
   855  0078                     	ds	2
   856  007A                     ??_tact:
   857  007A                     ??_waitSEGStop:	
   858                           ; 1 bytes @ 0xA
   859                           
   860  007A                     ??_motorStop:	
   861                           ; 1 bytes @ 0xA
   862                           
   863                           
   864                           ; 1 bytes @ 0xA
   865  007A                     	ds	2
   866  007C                     ??_main:
   867                           
   868                           	psect	cstackBANK0
   869  0020                     __pcstackBANK0:	
   870                           ; 1 bytes @ 0xC
   871                           
   872  0020                     dynam@smd:
   873                           
   874                           ; 2 bytes @ 0x0
   875  0020                     	ds	2
   876  0022                     dynam@tm:
   877                           
   878                           ; 2 bytes @ 0x2
   879  0022                     	ds	2
   880  0024                     dynam@j:
   881                           
   882                           ; 2 bytes @ 0x4
   883  0024                     	ds	2
   884  0026                     dynam@ext:
   885                           
   886                           ; 2 bytes @ 0x6
   887  0026                     	ds	2
   888  0028                     ?_motor:
   889  0028                     ?_waitSEGStop:	
   890                           ; 1 bytes @ 0x8
   891                           
   892  0028                     ?_motorStop:	
   893                           ; 2 bytes @ 0x8
   894                           
   895  0028                     waitSEGStop@seg1:	
   896                           ; 2 bytes @ 0x8
   897                           
   898  0028                     motor@kakudo:	
   899                           ; 2 bytes @ 0x8
   900                           
   901  0028                     motorStop@kakudo:	
   902                           ; 2 bytes @ 0x8
   903                           
   904                           
   905                           ; 2 bytes @ 0x8
   906  0028                     	ds	2
   907  002A                     waitSEGStop@seg2:
   908  002A                     motor@dig1data:	
   909                           ; 2 bytes @ 0xA
   910                           
   911  002A                     motorStop@dig1data:	
   912                           ; 2 bytes @ 0xA
   913                           
   914                           
   915                           ; 2 bytes @ 0xA
   916  002A                     	ds	2
   917  002C                     waitSEGStop@wt:
   918  002C                     motor@dig2data:	
   919                           ; 2 bytes @ 0xC
   920                           
   921  002C                     motorStop@dig2data:	
   922                           ; 2 bytes @ 0xC
   923                           
   924                           
   925                           ; 2 bytes @ 0xC
   926  002C                     	ds	2
   927  002E                     waitSEGStop@dousa:
   928  002E                     motor@smdata:	
   929                           ; 2 bytes @ 0xE
   930                           
   931  002E                     motorStop@smdata:	
   932                           ; 2 bytes @ 0xE
   933                           
   934                           
   935                           ; 2 bytes @ 0xE
   936  002E                     	ds	2
   937  0030                     waitSEGStop@cpSW1:
   938  0030                     motor@tr:	
   939                           ; 2 bytes @ 0x10
   940                           
   941  0030                     motorStop@tr:	
   942                           ; 2 bytes @ 0x10
   943                           
   944                           
   945                           ; 2 bytes @ 0x10
   946  0030                     	ds	2
   947  0032                     waitSEGStop@cpSW2:
   948  0032                     motorStop@dousa:	
   949                           ; 2 bytes @ 0x12
   950                           
   951                           
   952                           ; 2 bytes @ 0x12
   953  0032                     	ds	2
   954  0034                     waitSEGStop@i:
   955  0034                     motorStop@cpSW1:	
   956                           ; 2 bytes @ 0x14
   957                           
   958                           
   959                           ; 2 bytes @ 0x14
   960  0034                     	ds	2
   961  0036                     motorStop@cpSW2:
   962                           
   963                           ; 2 bytes @ 0x16
   964  0036                     	ds	2
   965  0038                     motorStop@i:
   966                           
   967                           ; 2 bytes @ 0x18
   968  0038                     	ds	24
   969  0050                     main@zyoutai:
   970                           
   971                           ; 2 bytes @ 0x30
   972  0050                     	ds	2
   973                           
   974                           	psect	maintext
   975  0528                     __pmaintext:	
   976 ;;
   977 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   978 ;;
   979 ;; *************** function _main *****************
   980 ;; Defined at:
   981 ;;		line 561 in file "Q4.c"
   982 ;; Parameters:    Size  Location     Type
   983 ;;		None
   984 ;; Auto vars:     Size  Location     Type
   985 ;;  zyoutai         2   48[BANK0 ] int 
   986 ;;  ataiR           2    0        int 
   987 ;;  ataiL           2    0        int 
   988 ;;  segR            2    0        unsigned short 
   989 ;;  segL            2    0        unsigned short 
   990 ;;  ans             2    0        int 
   991 ;;  time            2    0        int 
   992 ;;  n               2    0        int 
   993 ;;  m               2    0        int 
   994 ;;  k               2    0        int 
   995 ;;  j               2    0        int 
   996 ;;  i               2    0        int 
   997 ;; Return value:  Size  Location     Type
   998 ;;                  1    wreg      void 
   999 ;; Registers used:
  1000 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1001 ;; Tracked objects:
  1002 ;;		On entry : B1F/0
  1003 ;;		On exit  : 0/0
  1004 ;;		Unchanged: 0/0
  1005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1007 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1009 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1010 ;;Total ram usage:       24 bytes
  1011 ;; Hardware stack levels required when called:    3
  1012 ;; This function calls:
  1013 ;;		_dynam
  1014 ;;		_fclr
  1015 ;;		_motor
  1016 ;;		_motorStop
  1017 ;;		_portinit
  1018 ;;		_waitSEGStop
  1019 ;;		_zenoff
  1020 ;; This function is called by:
  1021 ;;		Startup code after reset
  1022 ;; This function uses a non-reentrant model
  1023 ;;
  1024                           
  1025                           
  1026                           ;psect for function _main
  1027  0528                     _main:
  1028  0528                     l2464:	
  1029                           ;incstack = 0
  1030                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1031                           
  1032                           
  1033                           ;Q4.c: 564:     OSCCON=0x7A;
  1034  0528  307A               	movlw	122
  1035  0529  0021               	movlb	1	; select bank1
  1036  052A  0099               	movwf	25	;volatile
  1037  052B                     l2466:
  1038                           
  1039                           ;Q4.c: 566:     portinit();
  1040  052B  3180  20E0  3185   	fcall	_portinit
  1041                           
  1042                           ;Q4.c: 568:     zenoff();
  1043  052E  3180  20D7  3185   	fcall	_zenoff
  1044  0531                     l2468:
  1045  0531                     l2470:
  1046  0531                     l2472:
  1047  0531                     l2474:
  1048  0531                     l2476:
  1049  0531                     l294:	
  1050                           ;Q4.c: 573:     while((RA0!=1)||(RA1!=1)||(RA2!=1));
  1051                           
  1052  0531  0020               	movlb	0	; select bank0
  1053  0532  1C0C               	btfss	12,0	;volatile
  1054  0533  2D35               	goto	u2171
  1055  0534  2D36               	goto	u2170
  1056  0535                     u2171:
  1057  0535  2D31               	goto	l294
  1058  0536                     u2170:
  1059  0536                     l2478:
  1060  0536  1C8C               	btfss	12,1	;volatile
  1061  0537  2D39               	goto	u2181
  1062  0538  2D3A               	goto	u2180
  1063  0539                     u2181:
  1064  0539  2D31               	goto	l294
  1065  053A                     u2180:
  1066  053A                     l2480:
  1067  053A  1D0C               	btfss	12,2	;volatile
  1068  053B  2D3D               	goto	u2191
  1069  053C  2D3E               	goto	u2190
  1070  053D                     u2191:
  1071  053D  2D31               	goto	l294
  1072  053E                     u2190:
  1073  053E                     l296:
  1074                           
  1075                           ;Q4.c: 576:     RC0=RC2=RC1=1;
  1076  053E  148E               	bsf	14,1	;volatile
  1077  053F  188E               	btfsc	14,1	;volatile
  1078  0540  2D42               	goto	u2201
  1079  0541  2D45               	goto	u2200
  1080  0542                     u2201:
  1081  0542  0020               	movlb	0	; select bank0
  1082  0543  150E               	bsf	14,2	;volatile
  1083  0544  2D47               	goto	u2214
  1084  0545                     u2200:
  1085  0545  0020               	movlb	0	; select bank0
  1086  0546  110E               	bcf	14,2	;volatile
  1087  0547                     u2214:
  1088  0547  190E               	btfsc	14,2	;volatile
  1089  0548  2D4A               	goto	u2211
  1090  0549  2D4D               	goto	u2210
  1091  054A                     u2211:
  1092  054A  0020               	movlb	0	; select bank0
  1093  054B  140E               	bsf	14,0	;volatile
  1094  054C  2D4F               	goto	u2224
  1095  054D                     u2210:
  1096  054D  0020               	movlb	0	; select bank0
  1097  054E  100E               	bcf	14,0	;volatile
  1098  054F                     u2224:
  1099  054F                     l2482:
  1100                           
  1101                           ;Q4.c: 579:     fclr(2);
  1102  054F  3002               	movlw	2
  1103  0550  00F0               	movwf	fclr@flg
  1104  0551  3000               	movlw	0
  1105  0552  00F1               	movwf	fclr@flg+1
  1106  0553  3180  20F3  3185   	fcall	_fclr
  1107  0556                     l2484:
  1108  0556                     l2486:
  1109  0556                     l2488:
  1110  0556                     l2490:
  1111  0556                     l2492:
  1112  0556                     l2494:
  1113  0556                     l2496:
  1114  0556                     l2498:
  1115                           
  1116                           ;Q4.c: 606:         if(RA0 == 1 && RA1 == 0){
  1117  0556  0020               	movlb	0	; select bank0
  1118  0557  1C0C               	btfss	12,0	;volatile
  1119  0558  2D5A               	goto	u2231
  1120  0559  2D5B               	goto	u2230
  1121  055A                     u2231:
  1122  055A  2D71               	goto	l2504
  1123  055B                     u2230:
  1124  055B                     l2500:
  1125  055B  188C               	btfsc	12,1	;volatile
  1126  055C  2D5E               	goto	u2241
  1127  055D  2D5F               	goto	u2240
  1128  055E                     u2241:
  1129  055E  2D71               	goto	l2504
  1130  055F                     u2240:
  1131  055F                     l2502:
  1132                           
  1133                           ;Q4.c: 607:             dynam(moji[5],moji[5],0,0);
  1134  055F  0022               	movlb	2	; select bank2
  1135  0560  082B               	movf	((_moji+1)^(0+256)+10),w
  1136  0561  00F1               	movwf	dynam@dig1data+1
  1137  0562  082A               	movf	(_moji^(0+256)+10),w
  1138  0563  00F0               	movwf	dynam@dig1data
  1139  0564  082B               	movf	((_moji+1)^(0+256)+10),w
  1140  0565  00F3               	movwf	dynam@dig2data+1
  1141  0566  082A               	movf	(_moji^(0+256)+10),w
  1142  0567  00F2               	movwf	dynam@dig2data
  1143  0568  3000               	movlw	0
  1144  0569  00F4               	movwf	dynam@smdata
  1145  056A  00F5               	movwf	dynam@smdata+1
  1146  056B  3000               	movlw	0
  1147  056C  00F6               	movwf	dynam@tr
  1148  056D  00F7               	movwf	dynam@tr+1
  1149  056E  3183  23BE  3185   	fcall	_dynam
  1150  0571                     l2504:
  1151                           
  1152                           ;Q4.c: 610:         if(RA0 == 0 && RA1 ==0){
  1153  0571  0020               	movlb	0	; select bank0
  1154  0572  180C               	btfsc	12,0	;volatile
  1155  0573  2D75               	goto	u2251
  1156  0574  2D76               	goto	u2250
  1157  0575                     u2251:
  1158  0575  2EBC               	goto	l300
  1159  0576                     u2250:
  1160  0576                     l2506:
  1161  0576  188C               	btfsc	12,1	;volatile
  1162  0577  2D79               	goto	u2261
  1163  0578  2D7A               	goto	u2260
  1164  0579                     u2261:
  1165  0579  2EBC               	goto	l300
  1166  057A                     u2260:
  1167  057A                     l2508:
  1168                           
  1169                           ;Q4.c: 611:             zyoutai = waitSEGStop(num0[1],num0[8],1000,0b001);
  1170  057A  0021               	movlb	1	; select bank1
  1171  057B  0843               	movf	((_num0+1)^(0+128)+2),w
  1172  057C  0020               	movlb	0	; select bank0
  1173  057D  00A9               	movwf	waitSEGStop@seg1+1
  1174  057E  0021               	movlb	1	; select bank1
  1175  057F  0842               	movf	(_num0^(0+128)+2),w
  1176  0580  0020               	movlb	0	; select bank0
  1177  0581  00A8               	movwf	waitSEGStop@seg1
  1178  0582  0021               	movlb	1	; select bank1
  1179  0583  0851               	movf	((_num0+1)^(0+128)+16),w
  1180  0584  0020               	movlb	0	; select bank0
  1181  0585  00AB               	movwf	waitSEGStop@seg2+1
  1182  0586  0021               	movlb	1	; select bank1
  1183  0587  0850               	movf	(_num0^(0+128)+16),w
  1184  0588  0020               	movlb	0	; select bank0
  1185  0589  00AA               	movwf	waitSEGStop@seg2
  1186  058A  30E8               	movlw	232
  1187  058B  00AC               	movwf	waitSEGStop@wt
  1188  058C  3003               	movlw	3
  1189  058D  00AD               	movwf	waitSEGStop@wt+1
  1190  058E  3001               	movlw	1
  1191  058F  00AE               	movwf	waitSEGStop@dousa
  1192  0590  3000               	movlw	0
  1193  0591  00AF               	movwf	waitSEGStop@dousa+1
  1194  0592  3183  2323  3185   	fcall	_waitSEGStop
  1195  0595  0020               	movlb	0	; select bank0
  1196  0596  0829               	movf	?_waitSEGStop+1,w
  1197  0597  00D1               	movwf	main@zyoutai+1
  1198  0598  0828               	movf	?_waitSEGStop,w
  1199  0599  00D0               	movwf	main@zyoutai
  1200  059A                     l2510:
  1201                           
  1202                           ;Q4.c: 612:             if(zyoutai == 1){
  1203  059A  0350               	decf	main@zyoutai,w
  1204  059B  0451               	iorwf	main@zyoutai+1,w
  1205  059C  1D03               	btfss	3,2
  1206  059D  2D9F               	goto	u2271
  1207  059E  2DA0               	goto	u2270
  1208  059F                     u2271:
  1209  059F  2DFB               	goto	l2520
  1210  05A0                     u2270:
  1211  05A0                     l2512:
  1212                           
  1213                           ;Q4.c: 613:                 motor(90,num0[0],num0[0],1,1);
  1214  05A0  305A               	movlw	90
  1215  05A1  00A8               	movwf	motor@kakudo
  1216  05A2  3000               	movlw	0
  1217  05A3  00A9               	movwf	motor@kakudo+1
  1218  05A4  0021               	movlb	1	; select bank1
  1219  05A5  0841               	movf	(_num0+1)^(0+128),w
  1220  05A6  0020               	movlb	0	; select bank0
  1221  05A7  00AB               	movwf	motor@dig1data+1
  1222  05A8  0021               	movlb	1	; select bank1
  1223  05A9  0840               	movf	_num0^(0+128),w
  1224  05AA  0020               	movlb	0	; select bank0
  1225  05AB  00AA               	movwf	motor@dig1data
  1226  05AC  0021               	movlb	1	; select bank1
  1227  05AD  0841               	movf	(_num0+1)^(0+128),w
  1228  05AE  0020               	movlb	0	; select bank0
  1229  05AF  00AD               	movwf	motor@dig2data+1
  1230  05B0  0021               	movlb	1	; select bank1
  1231  05B1  0840               	movf	_num0^(0+128),w
  1232  05B2  0020               	movlb	0	; select bank0
  1233  05B3  00AC               	movwf	motor@dig2data
  1234  05B4  3001               	movlw	1
  1235  05B5  00AE               	movwf	motor@smdata
  1236  05B6  3000               	movlw	0
  1237  05B7  00AF               	movwf	motor@smdata+1
  1238  05B8  3001               	movlw	1
  1239  05B9  00B0               	movwf	motor@tr
  1240  05BA  3000               	movlw	0
  1241  05BB  00B1               	movwf	motor@tr+1
  1242  05BC  3181  2133  3185   	fcall	_motor
  1243                           
  1244                           ;Q4.c: 614:                 motor(90,num0[9],num0[0],1,1);
  1245  05BF  305A               	movlw	90
  1246  05C0  0020               	movlb	0	; select bank0
  1247  05C1  00A8               	movwf	motor@kakudo
  1248  05C2  3000               	movlw	0
  1249  05C3  00A9               	movwf	motor@kakudo+1
  1250  05C4  0021               	movlb	1	; select bank1
  1251  05C5  0853               	movf	((_num0+1)^(0+128)+18),w
  1252  05C6  0020               	movlb	0	; select bank0
  1253  05C7  00AB               	movwf	motor@dig1data+1
  1254  05C8  0021               	movlb	1	; select bank1
  1255  05C9  0852               	movf	(_num0^(0+128)+18),w
  1256  05CA  0020               	movlb	0	; select bank0
  1257  05CB  00AA               	movwf	motor@dig1data
  1258  05CC  0021               	movlb	1	; select bank1
  1259  05CD  0841               	movf	(_num0+1)^(0+128),w
  1260  05CE  0020               	movlb	0	; select bank0
  1261  05CF  00AD               	movwf	motor@dig2data+1
  1262  05D0  0021               	movlb	1	; select bank1
  1263  05D1  0840               	movf	_num0^(0+128),w
  1264  05D2  0020               	movlb	0	; select bank0
  1265  05D3  00AC               	movwf	motor@dig2data
  1266  05D4  3001               	movlw	1
  1267  05D5  00AE               	movwf	motor@smdata
  1268  05D6  3000               	movlw	0
  1269  05D7  00AF               	movwf	motor@smdata+1
  1270  05D8  3001               	movlw	1
  1271  05D9  00B0               	movwf	motor@tr
  1272  05DA  3000               	movlw	0
  1273  05DB  00B1               	movwf	motor@tr+1
  1274  05DC  3181  2133  3185   	fcall	_motor
  1275  05DF                     l302:	
  1276                           ;Q4.c: 616:                 while(1){
  1277                           
  1278                           
  1279                           ;Q4.c: 617:                     dynam(num0[1],num0[8],0,0);
  1280  05DF  0021               	movlb	1	; select bank1
  1281  05E0  0843               	movf	((_num0+1)^(0+128)+2),w
  1282  05E1  00F1               	movwf	dynam@dig1data+1
  1283  05E2  0842               	movf	(_num0^(0+128)+2),w
  1284  05E3  00F0               	movwf	dynam@dig1data
  1285  05E4  0851               	movf	((_num0+1)^(0+128)+16),w
  1286  05E5  00F3               	movwf	dynam@dig2data+1
  1287  05E6  0850               	movf	(_num0^(0+128)+16),w
  1288  05E7  00F2               	movwf	dynam@dig2data
  1289  05E8  3000               	movlw	0
  1290  05E9  00F4               	movwf	dynam@smdata
  1291  05EA  00F5               	movwf	dynam@smdata+1
  1292  05EB  3000               	movlw	0
  1293  05EC  00F6               	movwf	dynam@tr
  1294  05ED  00F7               	movwf	dynam@tr+1
  1295  05EE  3183  23BE  3185   	fcall	_dynam
  1296  05F1                     l2514:
  1297                           
  1298                           ;Q4.c: 619:                     if(RA0 == 1 && RA1 == 0){
  1299  05F1  0020               	movlb	0	; select bank0
  1300  05F2  1C0C               	btfss	12,0	;volatile
  1301  05F3  2DF5               	goto	u2281
  1302  05F4  2DF6               	goto	u2280
  1303  05F5                     u2281:
  1304  05F5  2DDF               	goto	l302
  1305  05F6                     u2280:
  1306  05F6                     l2516:
  1307  05F6  188C               	btfsc	12,1	;volatile
  1308  05F7  2DF9               	goto	u2291
  1309  05F8  2DFA               	goto	u2290
  1310  05F9                     u2291:
  1311  05F9  2DDF               	goto	l302
  1312  05FA                     u2290:
  1313  05FA  2D56               	goto	l2498
  1314  05FB                     l2520:
  1315                           
  1316                           ;Q4.c: 625:             zyoutai = waitSEGStop(num0[3],num0[6],1000,0b001);
  1317  05FB  0021               	movlb	1	; select bank1
  1318  05FC  0847               	movf	((_num0+1)^(0+128)+6),w
  1319  05FD  0020               	movlb	0	; select bank0
  1320  05FE  00A9               	movwf	waitSEGStop@seg1+1
  1321  05FF  0021               	movlb	1	; select bank1
  1322  0600  0846               	movf	(_num0^(0+128)+6),w
  1323  0601  0020               	movlb	0	; select bank0
  1324  0602  00A8               	movwf	waitSEGStop@seg1
  1325  0603  0021               	movlb	1	; select bank1
  1326  0604  084D               	movf	((_num0+1)^(0+128)+12),w
  1327  0605  0020               	movlb	0	; select bank0
  1328  0606  00AB               	movwf	waitSEGStop@seg2+1
  1329  0607  0021               	movlb	1	; select bank1
  1330  0608  084C               	movf	(_num0^(0+128)+12),w
  1331  0609  0020               	movlb	0	; select bank0
  1332  060A  00AA               	movwf	waitSEGStop@seg2
  1333  060B  30E8               	movlw	232
  1334  060C  00AC               	movwf	waitSEGStop@wt
  1335  060D  3003               	movlw	3
  1336  060E  00AD               	movwf	waitSEGStop@wt+1
  1337  060F  3001               	movlw	1
  1338  0610  00AE               	movwf	waitSEGStop@dousa
  1339  0611  3000               	movlw	0
  1340  0612  00AF               	movwf	waitSEGStop@dousa+1
  1341  0613  3183  2323  3185   	fcall	_waitSEGStop
  1342  0616  0020               	movlb	0	; select bank0
  1343  0617  0829               	movf	?_waitSEGStop+1,w
  1344  0618  00D1               	movwf	main@zyoutai+1
  1345  0619  0828               	movf	?_waitSEGStop,w
  1346  061A  00D0               	movwf	main@zyoutai
  1347  061B                     l2522:
  1348                           
  1349                           ;Q4.c: 626:             if(zyoutai == 1){
  1350  061B  0350               	decf	main@zyoutai,w
  1351  061C  0451               	iorwf	main@zyoutai+1,w
  1352  061D  1D03               	btfss	3,2
  1353  061E  2E20               	goto	u2301
  1354  061F  2E21               	goto	u2300
  1355  0620                     u2301:
  1356  0620  2EBC               	goto	l300
  1357  0621                     u2300:
  1358  0621                     l2524:
  1359                           
  1360                           ;Q4.c: 627:                 motor(90,num0[0],num0[0],1,1);
  1361  0621  305A               	movlw	90
  1362  0622  00A8               	movwf	motor@kakudo
  1363  0623  3000               	movlw	0
  1364  0624  00A9               	movwf	motor@kakudo+1
  1365  0625  0021               	movlb	1	; select bank1
  1366  0626  0841               	movf	(_num0+1)^(0+128),w
  1367  0627  0020               	movlb	0	; select bank0
  1368  0628  00AB               	movwf	motor@dig1data+1
  1369  0629  0021               	movlb	1	; select bank1
  1370  062A  0840               	movf	_num0^(0+128),w
  1371  062B  0020               	movlb	0	; select bank0
  1372  062C  00AA               	movwf	motor@dig1data
  1373  062D  0021               	movlb	1	; select bank1
  1374  062E  0841               	movf	(_num0+1)^(0+128),w
  1375  062F  0020               	movlb	0	; select bank0
  1376  0630  00AD               	movwf	motor@dig2data+1
  1377  0631  0021               	movlb	1	; select bank1
  1378  0632  0840               	movf	_num0^(0+128),w
  1379  0633  0020               	movlb	0	; select bank0
  1380  0634  00AC               	movwf	motor@dig2data
  1381  0635  3001               	movlw	1
  1382  0636  00AE               	movwf	motor@smdata
  1383  0637  3000               	movlw	0
  1384  0638  00AF               	movwf	motor@smdata+1
  1385  0639  3001               	movlw	1
  1386  063A  00B0               	movwf	motor@tr
  1387  063B  3000               	movlw	0
  1388  063C  00B1               	movwf	motor@tr+1
  1389  063D  3181  2133  3185   	fcall	_motor
  1390                           
  1391                           ;Q4.c: 628:                 motor(90,num0[9],num0[0],1,1);
  1392  0640  305A               	movlw	90
  1393  0641  0020               	movlb	0	; select bank0
  1394  0642  00A8               	movwf	motor@kakudo
  1395  0643  3000               	movlw	0
  1396  0644  00A9               	movwf	motor@kakudo+1
  1397  0645  0021               	movlb	1	; select bank1
  1398  0646  0853               	movf	((_num0+1)^(0+128)+18),w
  1399  0647  0020               	movlb	0	; select bank0
  1400  0648  00AB               	movwf	motor@dig1data+1
  1401  0649  0021               	movlb	1	; select bank1
  1402  064A  0852               	movf	(_num0^(0+128)+18),w
  1403  064B  0020               	movlb	0	; select bank0
  1404  064C  00AA               	movwf	motor@dig1data
  1405  064D  0021               	movlb	1	; select bank1
  1406  064E  0841               	movf	(_num0+1)^(0+128),w
  1407  064F  0020               	movlb	0	; select bank0
  1408  0650  00AD               	movwf	motor@dig2data+1
  1409  0651  0021               	movlb	1	; select bank1
  1410  0652  0840               	movf	_num0^(0+128),w
  1411  0653  0020               	movlb	0	; select bank0
  1412  0654  00AC               	movwf	motor@dig2data
  1413  0655  3001               	movlw	1
  1414  0656  00AE               	movwf	motor@smdata
  1415  0657  3000               	movlw	0
  1416  0658  00AF               	movwf	motor@smdata+1
  1417  0659  3001               	movlw	1
  1418  065A  00B0               	movwf	motor@tr
  1419  065B  3000               	movlw	0
  1420  065C  00B1               	movwf	motor@tr+1
  1421  065D  3181  2133  3185   	fcall	_motor
  1422                           
  1423                           ;Q4.c: 629:                 motor(90,num0[1],num0[8],1,1);
  1424  0660  305A               	movlw	90
  1425  0661  0020               	movlb	0	; select bank0
  1426  0662  00A8               	movwf	motor@kakudo
  1427  0663  3000               	movlw	0
  1428  0664  00A9               	movwf	motor@kakudo+1
  1429  0665  0021               	movlb	1	; select bank1
  1430  0666  0843               	movf	((_num0+1)^(0+128)+2),w
  1431  0667  0020               	movlb	0	; select bank0
  1432  0668  00AB               	movwf	motor@dig1data+1
  1433  0669  0021               	movlb	1	; select bank1
  1434  066A  0842               	movf	(_num0^(0+128)+2),w
  1435  066B  0020               	movlb	0	; select bank0
  1436  066C  00AA               	movwf	motor@dig1data
  1437  066D  0021               	movlb	1	; select bank1
  1438  066E  0851               	movf	((_num0+1)^(0+128)+16),w
  1439  066F  0020               	movlb	0	; select bank0
  1440  0670  00AD               	movwf	motor@dig2data+1
  1441  0671  0021               	movlb	1	; select bank1
  1442  0672  0850               	movf	(_num0^(0+128)+16),w
  1443  0673  0020               	movlb	0	; select bank0
  1444  0674  00AC               	movwf	motor@dig2data
  1445  0675  3001               	movlw	1
  1446  0676  00AE               	movwf	motor@smdata
  1447  0677  3000               	movlw	0
  1448  0678  00AF               	movwf	motor@smdata+1
  1449  0679  3001               	movlw	1
  1450  067A  00B0               	movwf	motor@tr
  1451  067B  3000               	movlw	0
  1452  067C  00B1               	movwf	motor@tr+1
  1453  067D  3181  2133  3185   	fcall	_motor
  1454                           
  1455                           ;Q4.c: 630:                 motor(90,num0[2],num0[7],1,1);
  1456  0680  305A               	movlw	90
  1457  0681  0020               	movlb	0	; select bank0
  1458  0682  00A8               	movwf	motor@kakudo
  1459  0683  3000               	movlw	0
  1460  0684  00A9               	movwf	motor@kakudo+1
  1461  0685  0021               	movlb	1	; select bank1
  1462  0686  0845               	movf	((_num0+1)^(0+128)+4),w
  1463  0687  0020               	movlb	0	; select bank0
  1464  0688  00AB               	movwf	motor@dig1data+1
  1465  0689  0021               	movlb	1	; select bank1
  1466  068A  0844               	movf	(_num0^(0+128)+4),w
  1467  068B  0020               	movlb	0	; select bank0
  1468  068C  00AA               	movwf	motor@dig1data
  1469  068D  0021               	movlb	1	; select bank1
  1470  068E  084F               	movf	((_num0+1)^(0+128)+14),w
  1471  068F  0020               	movlb	0	; select bank0
  1472  0690  00AD               	movwf	motor@dig2data+1
  1473  0691  0021               	movlb	1	; select bank1
  1474  0692  084E               	movf	(_num0^(0+128)+14),w
  1475  0693  0020               	movlb	0	; select bank0
  1476  0694  00AC               	movwf	motor@dig2data
  1477  0695  3001               	movlw	1
  1478  0696  00AE               	movwf	motor@smdata
  1479  0697  3000               	movlw	0
  1480  0698  00AF               	movwf	motor@smdata+1
  1481  0699  3001               	movlw	1
  1482  069A  00B0               	movwf	motor@tr
  1483  069B  3000               	movlw	0
  1484  069C  00B1               	movwf	motor@tr+1
  1485  069D  3181  2133  3185   	fcall	_motor
  1486  06A0                     l307:	
  1487                           ;Q4.c: 632:                 while(1){
  1488                           
  1489                           
  1490                           ;Q4.c: 633:                     dynam(num0[3],num0[6],0,0);
  1491  06A0  0021               	movlb	1	; select bank1
  1492  06A1  0847               	movf	((_num0+1)^(0+128)+6),w
  1493  06A2  00F1               	movwf	dynam@dig1data+1
  1494  06A3  0846               	movf	(_num0^(0+128)+6),w
  1495  06A4  00F0               	movwf	dynam@dig1data
  1496  06A5  084D               	movf	((_num0+1)^(0+128)+12),w
  1497  06A6  00F3               	movwf	dynam@dig2data+1
  1498  06A7  084C               	movf	(_num0^(0+128)+12),w
  1499  06A8  00F2               	movwf	dynam@dig2data
  1500  06A9  3000               	movlw	0
  1501  06AA  00F4               	movwf	dynam@smdata
  1502  06AB  00F5               	movwf	dynam@smdata+1
  1503  06AC  3000               	movlw	0
  1504  06AD  00F6               	movwf	dynam@tr
  1505  06AE  00F7               	movwf	dynam@tr+1
  1506  06AF  3183  23BE  3185   	fcall	_dynam
  1507  06B2                     l2526:
  1508                           
  1509                           ;Q4.c: 635:                     if(RA0 == 1 && RA1 == 0){
  1510  06B2  0020               	movlb	0	; select bank0
  1511  06B3  1C0C               	btfss	12,0	;volatile
  1512  06B4  2EB6               	goto	u2311
  1513  06B5  2EB7               	goto	u2310
  1514  06B6                     u2311:
  1515  06B6  2EA0               	goto	l307
  1516  06B7                     u2310:
  1517  06B7                     l2528:
  1518  06B7  188C               	btfsc	12,1	;volatile
  1519  06B8  2EBA               	goto	u2321
  1520  06B9  2EBB               	goto	u2320
  1521  06BA                     u2321:
  1522  06BA  2EA0               	goto	l307
  1523  06BB                     u2320:
  1524  06BB  2D56               	goto	l2498
  1525  06BC                     l300:	
  1526                           ;Q4.c: 642:         }
  1527                           
  1528                           
  1529                           ;Q4.c: 645:         if(RA0 == 0 && RA1 == 1){
  1530  06BC  180C               	btfsc	12,0	;volatile
  1531  06BD  2EBF               	goto	u2331
  1532  06BE  2EC0               	goto	u2330
  1533  06BF                     u2331:
  1534  06BF  2D56               	goto	l2498
  1535  06C0                     u2330:
  1536  06C0                     l2532:
  1537  06C0  1C8C               	btfss	12,1	;volatile
  1538  06C1  2EC3               	goto	u2341
  1539  06C2  2EC4               	goto	u2340
  1540  06C3                     u2341:
  1541  06C3  2D56               	goto	l2498
  1542  06C4                     u2340:
  1543  06C4                     l2534:
  1544                           
  1545                           ;Q4.c: 646:             zyoutai = motorStop(180,num0[1],num0[8],1,5,0b001);
  1546  06C4  30B4               	movlw	180
  1547  06C5  00A8               	movwf	motorStop@kakudo
  1548  06C6  3000               	movlw	0
  1549  06C7  00A9               	movwf	motorStop@kakudo+1
  1550  06C8  0021               	movlb	1	; select bank1
  1551  06C9  0843               	movf	((_num0+1)^(0+128)+2),w
  1552  06CA  0020               	movlb	0	; select bank0
  1553  06CB  00AB               	movwf	motorStop@dig1data+1
  1554  06CC  0021               	movlb	1	; select bank1
  1555  06CD  0842               	movf	(_num0^(0+128)+2),w
  1556  06CE  0020               	movlb	0	; select bank0
  1557  06CF  00AA               	movwf	motorStop@dig1data
  1558  06D0  0021               	movlb	1	; select bank1
  1559  06D1  0851               	movf	((_num0+1)^(0+128)+16),w
  1560  06D2  0020               	movlb	0	; select bank0
  1561  06D3  00AD               	movwf	motorStop@dig2data+1
  1562  06D4  0021               	movlb	1	; select bank1
  1563  06D5  0850               	movf	(_num0^(0+128)+16),w
  1564  06D6  0020               	movlb	0	; select bank0
  1565  06D7  00AC               	movwf	motorStop@dig2data
  1566  06D8  3001               	movlw	1
  1567  06D9  00AE               	movwf	motorStop@smdata
  1568  06DA  3000               	movlw	0
  1569  06DB  00AF               	movwf	motorStop@smdata+1
  1570  06DC  3005               	movlw	5
  1571  06DD  00B0               	movwf	motorStop@tr
  1572  06DE  3000               	movlw	0
  1573  06DF  00B1               	movwf	motorStop@tr+1
  1574  06E0  3001               	movlw	1
  1575  06E1  00B2               	movwf	motorStop@dousa
  1576  06E2  3000               	movlw	0
  1577  06E3  00B3               	movwf	motorStop@dousa+1
  1578  06E4  3182  2298  3185   	fcall	_motorStop
  1579  06E7  0020               	movlb	0	; select bank0
  1580  06E8  0829               	movf	?_motorStop+1,w
  1581  06E9  00D1               	movwf	main@zyoutai+1
  1582  06EA  0828               	movf	?_motorStop,w
  1583  06EB  00D0               	movwf	main@zyoutai
  1584  06EC                     l2536:
  1585                           
  1586                           ;Q4.c: 647:             if(zyoutai != 0){
  1587  06EC  0850               	movf	main@zyoutai,w
  1588  06ED  0451               	iorwf	main@zyoutai+1,w
  1589  06EE  1903               	btfsc	3,2
  1590  06EF  2EF1               	goto	u2351
  1591  06F0  2EF2               	goto	u2350
  1592  06F1                     u2351:
  1593  06F1  2F39               	goto	l2546
  1594  06F2                     u2350:
  1595  06F2                     l2538:
  1596                           
  1597                           ;Q4.c: 648:                 motor(zyoutai,0,0,1,5);
  1598  06F2  0851               	movf	main@zyoutai+1,w
  1599  06F3  00A9               	movwf	motor@kakudo+1
  1600  06F4  0850               	movf	main@zyoutai,w
  1601  06F5  00A8               	movwf	motor@kakudo
  1602  06F6  3000               	movlw	0
  1603  06F7  00AA               	movwf	motor@dig1data
  1604  06F8  00AB               	movwf	motor@dig1data+1
  1605  06F9  3000               	movlw	0
  1606  06FA  00AC               	movwf	motor@dig2data
  1607  06FB  00AD               	movwf	motor@dig2data+1
  1608  06FC  3001               	movlw	1
  1609  06FD  00AE               	movwf	motor@smdata
  1610  06FE  3000               	movlw	0
  1611  06FF  00AF               	movwf	motor@smdata+1
  1612  0700  3005               	movlw	5
  1613  0701  00B0               	movwf	motor@tr
  1614  0702  3000               	movlw	0
  1615  0703  00B1               	movwf	motor@tr+1
  1616  0704  3181  2133  3185   	fcall	_motor
  1617                           
  1618                           ;Q4.c: 649:                 motor(180,0,0,2,1);
  1619  0707  30B4               	movlw	180
  1620  0708  0020               	movlb	0	; select bank0
  1621  0709  00A8               	movwf	motor@kakudo
  1622  070A  3000               	movlw	0
  1623  070B  00A9               	movwf	motor@kakudo+1
  1624  070C  3000               	movlw	0
  1625  070D  00AA               	movwf	motor@dig1data
  1626  070E  00AB               	movwf	motor@dig1data+1
  1627  070F  3000               	movlw	0
  1628  0710  00AC               	movwf	motor@dig2data
  1629  0711  00AD               	movwf	motor@dig2data+1
  1630  0712  3002               	movlw	2
  1631  0713  00AE               	movwf	motor@smdata
  1632  0714  3000               	movlw	0
  1633  0715  00AF               	movwf	motor@smdata+1
  1634  0716  3001               	movlw	1
  1635  0717  00B0               	movwf	motor@tr
  1636  0718  3000               	movlw	0
  1637  0719  00B1               	movwf	motor@tr+1
  1638  071A  3181  2133  3185   	fcall	_motor
  1639  071D                     l313:	
  1640                           ;Q4.c: 650:                 while(1){
  1641                           
  1642                           
  1643                           ;Q4.c: 651:                     dynam(num0[1],num0[8],0,0);
  1644  071D  0021               	movlb	1	; select bank1
  1645  071E  0843               	movf	((_num0+1)^(0+128)+2),w
  1646  071F  00F1               	movwf	dynam@dig1data+1
  1647  0720  0842               	movf	(_num0^(0+128)+2),w
  1648  0721  00F0               	movwf	dynam@dig1data
  1649  0722  0851               	movf	((_num0+1)^(0+128)+16),w
  1650  0723  00F3               	movwf	dynam@dig2data+1
  1651  0724  0850               	movf	(_num0^(0+128)+16),w
  1652  0725  00F2               	movwf	dynam@dig2data
  1653  0726  3000               	movlw	0
  1654  0727  00F4               	movwf	dynam@smdata
  1655  0728  00F5               	movwf	dynam@smdata+1
  1656  0729  3000               	movlw	0
  1657  072A  00F6               	movwf	dynam@tr
  1658  072B  00F7               	movwf	dynam@tr+1
  1659  072C  3183  23BE  3185   	fcall	_dynam
  1660  072F                     l2540:
  1661                           
  1662                           ;Q4.c: 653:                     if(RA0 == 1 && RA1==1){
  1663  072F  0020               	movlb	0	; select bank0
  1664  0730  1C0C               	btfss	12,0	;volatile
  1665  0731  2F33               	goto	u2361
  1666  0732  2F34               	goto	u2360
  1667  0733                     u2361:
  1668  0733  2F1D               	goto	l313
  1669  0734                     u2360:
  1670  0734                     l2542:
  1671  0734  1C8C               	btfss	12,1	;volatile
  1672  0735  2F37               	goto	u2371
  1673  0736  2F38               	goto	u2370
  1674  0737                     u2371:
  1675  0737  2F1D               	goto	l313
  1676  0738                     u2370:
  1677  0738  2D56               	goto	l2498
  1678  0739                     l2546:
  1679                           
  1680                           ;Q4.c: 659:             zyoutai = motorStop(180,num0[3],num0[6],1,5,0b001);
  1681  0739  30B4               	movlw	180
  1682  073A  00A8               	movwf	motorStop@kakudo
  1683  073B  3000               	movlw	0
  1684  073C  00A9               	movwf	motorStop@kakudo+1
  1685  073D  0021               	movlb	1	; select bank1
  1686  073E  0847               	movf	((_num0+1)^(0+128)+6),w
  1687  073F  0020               	movlb	0	; select bank0
  1688  0740  00AB               	movwf	motorStop@dig1data+1
  1689  0741  0021               	movlb	1	; select bank1
  1690  0742  0846               	movf	(_num0^(0+128)+6),w
  1691  0743  0020               	movlb	0	; select bank0
  1692  0744  00AA               	movwf	motorStop@dig1data
  1693  0745  0021               	movlb	1	; select bank1
  1694  0746  084D               	movf	((_num0+1)^(0+128)+12),w
  1695  0747  0020               	movlb	0	; select bank0
  1696  0748  00AD               	movwf	motorStop@dig2data+1
  1697  0749  0021               	movlb	1	; select bank1
  1698  074A  084C               	movf	(_num0^(0+128)+12),w
  1699  074B  0020               	movlb	0	; select bank0
  1700  074C  00AC               	movwf	motorStop@dig2data
  1701  074D  3001               	movlw	1
  1702  074E  00AE               	movwf	motorStop@smdata
  1703  074F  3000               	movlw	0
  1704  0750  00AF               	movwf	motorStop@smdata+1
  1705  0751  3005               	movlw	5
  1706  0752  00B0               	movwf	motorStop@tr
  1707  0753  3000               	movlw	0
  1708  0754  00B1               	movwf	motorStop@tr+1
  1709  0755  3001               	movlw	1
  1710  0756  00B2               	movwf	motorStop@dousa
  1711  0757  3000               	movlw	0
  1712  0758  00B3               	movwf	motorStop@dousa+1
  1713  0759  3182  2298  3185   	fcall	_motorStop
  1714  075C  0020               	movlb	0	; select bank0
  1715  075D  0829               	movf	?_motorStop+1,w
  1716  075E  00D1               	movwf	main@zyoutai+1
  1717  075F  0828               	movf	?_motorStop,w
  1718  0760  00D0               	movwf	main@zyoutai
  1719  0761                     l2548:
  1720                           
  1721                           ;Q4.c: 660:             if(zyoutai != 0){
  1722  0761  0850               	movf	main@zyoutai,w
  1723  0762  0451               	iorwf	main@zyoutai+1,w
  1724  0763  1903               	btfsc	3,2
  1725  0764  2F66               	goto	u2381
  1726  0765  2F67               	goto	u2380
  1727  0766                     u2381:
  1728  0766  2FAE               	goto	l2558
  1729  0767                     u2380:
  1730  0767                     l2550:
  1731                           
  1732                           ;Q4.c: 661:                 motor(zyoutai,0,0,1,5);
  1733  0767  0851               	movf	main@zyoutai+1,w
  1734  0768  00A9               	movwf	motor@kakudo+1
  1735  0769  0850               	movf	main@zyoutai,w
  1736  076A  00A8               	movwf	motor@kakudo
  1737  076B  3000               	movlw	0
  1738  076C  00AA               	movwf	motor@dig1data
  1739  076D  00AB               	movwf	motor@dig1data+1
  1740  076E  3000               	movlw	0
  1741  076F  00AC               	movwf	motor@dig2data
  1742  0770  00AD               	movwf	motor@dig2data+1
  1743  0771  3001               	movlw	1
  1744  0772  00AE               	movwf	motor@smdata
  1745  0773  3000               	movlw	0
  1746  0774  00AF               	movwf	motor@smdata+1
  1747  0775  3005               	movlw	5
  1748  0776  00B0               	movwf	motor@tr
  1749  0777  3000               	movlw	0
  1750  0778  00B1               	movwf	motor@tr+1
  1751  0779  3181  2133  3185   	fcall	_motor
  1752                           
  1753                           ;Q4.c: 662:                 motor(360,0,0,2,1);
  1754  077C  3068               	movlw	104
  1755  077D  0020               	movlb	0	; select bank0
  1756  077E  00A8               	movwf	motor@kakudo
  1757  077F  3001               	movlw	1
  1758  0780  00A9               	movwf	motor@kakudo+1
  1759  0781  3000               	movlw	0
  1760  0782  00AA               	movwf	motor@dig1data
  1761  0783  00AB               	movwf	motor@dig1data+1
  1762  0784  3000               	movlw	0
  1763  0785  00AC               	movwf	motor@dig2data
  1764  0786  00AD               	movwf	motor@dig2data+1
  1765  0787  3002               	movlw	2
  1766  0788  00AE               	movwf	motor@smdata
  1767  0789  3000               	movlw	0
  1768  078A  00AF               	movwf	motor@smdata+1
  1769  078B  3001               	movlw	1
  1770  078C  00B0               	movwf	motor@tr
  1771  078D  3000               	movlw	0
  1772  078E  00B1               	movwf	motor@tr+1
  1773  078F  3181  2133  3185   	fcall	_motor
  1774  0792                     l318:	
  1775                           ;Q4.c: 663:                 while(1){
  1776                           
  1777                           
  1778                           ;Q4.c: 664:                     dynam(num0[3],num0[6],0,0);
  1779  0792  0021               	movlb	1	; select bank1
  1780  0793  0847               	movf	((_num0+1)^(0+128)+6),w
  1781  0794  00F1               	movwf	dynam@dig1data+1
  1782  0795  0846               	movf	(_num0^(0+128)+6),w
  1783  0796  00F0               	movwf	dynam@dig1data
  1784  0797  084D               	movf	((_num0+1)^(0+128)+12),w
  1785  0798  00F3               	movwf	dynam@dig2data+1
  1786  0799  084C               	movf	(_num0^(0+128)+12),w
  1787  079A  00F2               	movwf	dynam@dig2data
  1788  079B  3000               	movlw	0
  1789  079C  00F4               	movwf	dynam@smdata
  1790  079D  00F5               	movwf	dynam@smdata+1
  1791  079E  3000               	movlw	0
  1792  079F  00F6               	movwf	dynam@tr
  1793  07A0  00F7               	movwf	dynam@tr+1
  1794  07A1  3183  23BE  3185   	fcall	_dynam
  1795  07A4                     l2552:
  1796                           
  1797                           ;Q4.c: 666:                     if(RA0 == 1 && RA1==1){
  1798  07A4  0020               	movlb	0	; select bank0
  1799  07A5  1C0C               	btfss	12,0	;volatile
  1800  07A6  2FA8               	goto	u2391
  1801  07A7  2FA9               	goto	u2390
  1802  07A8                     u2391:
  1803  07A8  2F92               	goto	l318
  1804  07A9                     u2390:
  1805  07A9                     l2554:
  1806  07A9  1C8C               	btfss	12,1	;volatile
  1807  07AA  2FAC               	goto	u2401
  1808  07AB  2FAD               	goto	u2400
  1809  07AC                     u2401:
  1810  07AC  2F92               	goto	l318
  1811  07AD                     u2400:
  1812  07AD  2D56               	goto	l2498
  1813  07AE                     l2558:
  1814                           
  1815                           ;Q4.c: 673:                 dynam(num0[3],num0[6],0,0);
  1816  07AE  0021               	movlb	1	; select bank1
  1817  07AF  0847               	movf	((_num0+1)^(0+128)+6),w
  1818  07B0  00F1               	movwf	dynam@dig1data+1
  1819  07B1  0846               	movf	(_num0^(0+128)+6),w
  1820  07B2  00F0               	movwf	dynam@dig1data
  1821  07B3  084D               	movf	((_num0+1)^(0+128)+12),w
  1822  07B4  00F3               	movwf	dynam@dig2data+1
  1823  07B5  084C               	movf	(_num0^(0+128)+12),w
  1824  07B6  00F2               	movwf	dynam@dig2data
  1825  07B7  3000               	movlw	0
  1826  07B8  00F4               	movwf	dynam@smdata
  1827  07B9  00F5               	movwf	dynam@smdata+1
  1828  07BA  3000               	movlw	0
  1829  07BB  00F6               	movwf	dynam@tr
  1830  07BC  00F7               	movwf	dynam@tr+1
  1831  07BD  3183  23BE  3185   	fcall	_dynam
  1832  07C0                     l2560:
  1833                           
  1834                           ;Q4.c: 674:                 if(RA0 == 1 && RA1==1){
  1835  07C0  0020               	movlb	0	; select bank0
  1836  07C1  1C0C               	btfss	12,0	;volatile
  1837  07C2  2FC4               	goto	u2411
  1838  07C3  2FC5               	goto	u2410
  1839  07C4                     u2411:
  1840  07C4  2FAE               	goto	l2558
  1841  07C5                     u2410:
  1842  07C5                     l2562:
  1843  07C5  1C8C               	btfss	12,1	;volatile
  1844  07C6  2FC8               	goto	u2421
  1845  07C7  2FC9               	goto	u2420
  1846  07C8                     u2421:
  1847  07C8  2FAE               	goto	l2558
  1848  07C9                     u2420:
  1849  07C9  2D56               	goto	l2498
  1850  07CA  3180  2802         	ljmp	start
  1851  07CC                     __end_of_main:
  1852                           
  1853                           	psect	text1
  1854  00D7                     __ptext1:	
  1855 ;; *************** function _zenoff *****************
  1856 ;; Defined at:
  1857 ;;		line 195 in file "Q4.c"
  1858 ;; Parameters:    Size  Location     Type
  1859 ;;		None
  1860 ;; Auto vars:     Size  Location     Type
  1861 ;;		None
  1862 ;; Return value:  Size  Location     Type
  1863 ;;                  1    wreg      void 
  1864 ;; Registers used:
  1865 ;;		status,2
  1866 ;; Tracked objects:
  1867 ;;		On entry : 0/0
  1868 ;;		On exit  : 0/0
  1869 ;;		Unchanged: 0/0
  1870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1875 ;;Total ram usage:        0 bytes
  1876 ;; Hardware stack levels used:    1
  1877 ;; This function calls:
  1878 ;;		Nothing
  1879 ;; This function is called by:
  1880 ;;		_main
  1881 ;; This function uses a non-reentrant model
  1882 ;;
  1883                           
  1884                           
  1885                           ;psect for function _zenoff
  1886  00D7                     _zenoff:
  1887  00D7                     l2086:	
  1888                           ;incstack = 0
  1889                           ; Regs used in _zenoff: [status,2]
  1890                           
  1891                           
  1892                           ;Q4.c: 197:     RC0=1;
  1893  00D7  0020               	movlb	0	; select bank0
  1894  00D8  140E               	bsf	14,0	;volatile
  1895                           
  1896                           ;Q4.c: 198:     RC1=1;
  1897  00D9  148E               	bsf	14,1	;volatile
  1898                           
  1899                           ;Q4.c: 199:     RC2=1;
  1900  00DA  150E               	bsf	14,2	;volatile
  1901  00DB                     l2088:
  1902                           
  1903                           ;Q4.c: 200:     PORTB=0x00;
  1904  00DB  018D               	clrf	13	;volatile
  1905  00DC                     l2090:
  1906                           
  1907                           ;Q4.c: 201:     RC7=0;RC7=1;RC7=0;
  1908  00DC  138E               	bcf	14,7	;volatile
  1909  00DD                     l2092:
  1910  00DD  178E               	bsf	14,7	;volatile
  1911  00DE                     l2094:
  1912  00DE  138E               	bcf	14,7	;volatile
  1913  00DF                     l108:
  1914  00DF  0008               	return
  1915  00E0                     __end_of_zenoff:
  1916                           
  1917                           	psect	text2
  1918  0323                     __ptext2:	
  1919 ;; *************** function _waitSEGStop *****************
  1920 ;; Defined at:
  1921 ;;		line 464 in file "Q4.c"
  1922 ;; Parameters:    Size  Location     Type
  1923 ;;  seg1            2    8[BANK0 ] unsigned short 
  1924 ;;  seg2            2   10[BANK0 ] unsigned short 
  1925 ;;  wt              2   12[BANK0 ] unsigned short 
  1926 ;;  dousa           2   14[BANK0 ] int 
  1927 ;; Auto vars:     Size  Location     Type
  1928 ;;  i               2   20[BANK0 ] unsigned int 
  1929 ;;  cpSW2           2   18[BANK0 ] int 
  1930 ;;  cpSW1           2   16[BANK0 ] int 
  1931 ;; Return value:  Size  Location     Type
  1932 ;;                  2    8[BANK0 ] int 
  1933 ;; Registers used:
  1934 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1935 ;; Tracked objects:
  1936 ;;		On entry : 0/0
  1937 ;;		On exit  : 0/0
  1938 ;;		Unchanged: 0/0
  1939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1940 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1941 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1942 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1943 ;;      Totals:         2      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1944 ;;Total ram usage:       16 bytes
  1945 ;; Hardware stack levels used:    1
  1946 ;; Hardware stack levels required when called:    2
  1947 ;; This function calls:
  1948 ;;		___lwdiv
  1949 ;;		_dynam
  1950 ;;		_fclr
  1951 ;;		_tact
  1952 ;; This function is called by:
  1953 ;;		_main
  1954 ;; This function uses a non-reentrant model
  1955 ;;
  1956                           
  1957                           
  1958                           ;psect for function _waitSEGStop
  1959  0323                     _waitSEGStop:
  1960  0323                     l2096:	
  1961                           ;incstack = 0
  1962                           ; Regs used in _waitSEGStop: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1963                           
  1964                           
  1965                           ;Q4.c: 464: int waitSEGStop(unsigned short seg1,unsigned short seg2,unsigned short wt,in
      +                          t dousa);Q4.c: 465: {;Q4.c: 467:     int cpSW1 = RA0;
  1966  0323  1003               	clrc
  1967  0324  0020               	movlb	0	; select bank0
  1968  0325  180C               	btfsc	12,0	;volatile
  1969  0326  1403               	setc
  1970  0327  3000               	movlw	0
  1971  0328  3D09               	addwfc	9,w
  1972  0329  00FA               	movwf	??_waitSEGStop
  1973  032A  01FB               	clrf	??_waitSEGStop+1
  1974  032B  087A               	movf	??_waitSEGStop,w
  1975  032C  00B0               	movwf	waitSEGStop@cpSW1
  1976  032D  087B               	movf	??_waitSEGStop+1,w
  1977  032E  00B1               	movwf	waitSEGStop@cpSW1+1
  1978                           
  1979                           ;Q4.c: 468:     int cpSW2 = RA1;
  1980  032F  1003               	clrc
  1981  0330  188C               	btfsc	12,1	;volatile
  1982  0331  1403               	setc
  1983  0332  3000               	movlw	0
  1984  0333  3D09               	addwfc	9,w
  1985  0334  00FA               	movwf	??_waitSEGStop
  1986  0335  01FB               	clrf	??_waitSEGStop+1
  1987  0336  087A               	movf	??_waitSEGStop,w
  1988  0337  00B2               	movwf	waitSEGStop@cpSW2
  1989  0338  087B               	movf	??_waitSEGStop+1,w
  1990  0339  00B3               	movwf	waitSEGStop@cpSW2+1
  1991  033A                     l2098:
  1992                           
  1993                           ;Q4.c: 472:     wt = wt / 10;
  1994  033A  300A               	movlw	10
  1995  033B  00F0               	movwf	___lwdiv@divisor
  1996  033C  3000               	movlw	0
  1997  033D  00F1               	movwf	___lwdiv@divisor+1
  1998  033E  082D               	movf	waitSEGStop@wt+1,w
  1999  033F  00F3               	movwf	___lwdiv@dividend+1
  2000  0340  082C               	movf	waitSEGStop@wt,w
  2001  0341  00F2               	movwf	___lwdiv@dividend
  2002  0342  3181  218D  3183   	fcall	___lwdiv
  2003  0345  0871               	movf	?___lwdiv+1,w
  2004  0346  0020               	movlb	0	; select bank0
  2005  0347  00AD               	movwf	waitSEGStop@wt+1
  2006  0348  0870               	movf	?___lwdiv,w
  2007  0349  00AC               	movwf	waitSEGStop@wt
  2008  034A                     l2100:
  2009                           
  2010                           ;Q4.c: 473:     unsigned int i;;Q4.c: 475:     for(i=wt;i>0;--i){
  2011  034A  082D               	movf	waitSEGStop@wt+1,w
  2012  034B  00B5               	movwf	waitSEGStop@i+1
  2013  034C  082C               	movf	waitSEGStop@wt,w
  2014  034D  00B4               	movwf	waitSEGStop@i
  2015  034E                     l2102:
  2016  034E  0834               	movf	waitSEGStop@i,w
  2017  034F  0435               	iorwf	waitSEGStop@i+1,w
  2018  0350  1D03               	btfss	3,2
  2019  0351  2B53               	goto	u1621
  2020  0352  2B54               	goto	u1620
  2021  0353                     u1621:
  2022  0353  2B55               	goto	l2106
  2023  0354                     u1620:
  2024  0354  2BBB               	goto	l2144
  2025  0355                     l2106:
  2026                           
  2027                           ;Q4.c: 476:         dynam(seg1,seg2,0,0);
  2028  0355  0829               	movf	waitSEGStop@seg1+1,w
  2029  0356  00F1               	movwf	dynam@dig1data+1
  2030  0357  0828               	movf	waitSEGStop@seg1,w
  2031  0358  00F0               	movwf	dynam@dig1data
  2032  0359  082B               	movf	waitSEGStop@seg2+1,w
  2033  035A  00F3               	movwf	dynam@dig2data+1
  2034  035B  082A               	movf	waitSEGStop@seg2,w
  2035  035C  00F2               	movwf	dynam@dig2data
  2036  035D  3000               	movlw	0
  2037  035E  00F4               	movwf	dynam@smdata
  2038  035F  00F5               	movwf	dynam@smdata+1
  2039  0360  3000               	movlw	0
  2040  0361  00F6               	movwf	dynam@tr
  2041  0362  00F7               	movwf	dynam@tr+1
  2042  0363  3183  23BE  3183   	fcall	_dynam
  2043                           
  2044                           ;Q4.c: 478:         tact(0);
  2045  0366  3000               	movlw	0
  2046  0367  00F8               	movwf	tact@mode
  2047  0368  00F9               	movwf	tact@mode+1
  2048  0369  3182  224C  3183   	fcall	_tact
  2049  036C                     l2108:
  2050                           
  2051                           ;Q4.c: 480:         if(cpSW1 != RA0){
  2052  036C  1003               	clrc
  2053  036D  0020               	movlb	0	; select bank0
  2054  036E  180C               	btfsc	12,0	;volatile
  2055  036F  1403               	setc
  2056  0370  3000               	movlw	0
  2057  0371  3D09               	addwfc	9,w
  2058  0372  00FA               	movwf	??_waitSEGStop
  2059  0373  01FB               	clrf	??_waitSEGStop+1
  2060  0374  0831               	movf	waitSEGStop@cpSW1+1,w
  2061  0375  067B               	xorwf	??_waitSEGStop+1,w
  2062  0376  1D03               	skipz
  2063  0377  2B7A               	goto	u1635
  2064  0378  0830               	movf	waitSEGStop@cpSW1,w
  2065  0379  067A               	xorwf	??_waitSEGStop,w
  2066  037A                     u1635:
  2067  037A  1903               	skipnz
  2068  037B  2B7D               	goto	u1631
  2069  037C  2B7E               	goto	u1630
  2070  037D                     u1631:
  2071  037D  2B8F               	goto	l2118
  2072  037E                     u1630:
  2073  037E                     l2110:
  2074                           
  2075                           ;Q4.c: 481:             if((0b100 & dousa) == 0b100){
  2076  037E  1D2E               	btfss	waitSEGStop@dousa,2
  2077  037F  2B81               	goto	u1641
  2078  0380  2B82               	goto	u1640
  2079  0381                     u1641:
  2080  0381  2B8F               	goto	l2118
  2081  0382                     u1640:
  2082  0382                     l2112:
  2083                           
  2084                           ;Q4.c: 483:                 fclr(2);
  2085  0382  3002               	movlw	2
  2086  0383  00F0               	movwf	fclr@flg
  2087  0384  3000               	movlw	0
  2088  0385  00F1               	movwf	fclr@flg+1
  2089  0386  3180  20F3  3183   	fcall	_fclr
  2090  0389                     l2114:
  2091                           
  2092                           ;Q4.c: 484:                 return 1;
  2093  0389  3001               	movlw	1
  2094  038A  0020               	movlb	0	; select bank0
  2095  038B  00A8               	movwf	?_waitSEGStop
  2096  038C  3000               	movlw	0
  2097  038D  00A9               	movwf	?_waitSEGStop+1
  2098  038E  2BBD               	goto	l265
  2099  038F                     l2118:
  2100                           
  2101                           ;Q4.c: 487:         if(cpSW2 != RA1){
  2102  038F  1003               	clrc
  2103  0390  188C               	btfsc	12,1	;volatile
  2104  0391  1403               	setc
  2105  0392  3000               	movlw	0
  2106  0393  3D09               	addwfc	9,w
  2107  0394  00FA               	movwf	??_waitSEGStop
  2108  0395  01FB               	clrf	??_waitSEGStop+1
  2109  0396  0833               	movf	waitSEGStop@cpSW2+1,w
  2110  0397  067B               	xorwf	??_waitSEGStop+1,w
  2111  0398  1D03               	skipz
  2112  0399  2B9C               	goto	u1655
  2113  039A  0832               	movf	waitSEGStop@cpSW2,w
  2114  039B  067A               	xorwf	??_waitSEGStop,w
  2115  039C                     u1655:
  2116  039C  1903               	skipnz
  2117  039D  2B9F               	goto	u1651
  2118  039E  2BA0               	goto	u1650
  2119  039F                     u1651:
  2120  039F  2BA5               	goto	l2128
  2121  03A0                     u1650:
  2122  03A0                     l2120:
  2123                           
  2124                           ;Q4.c: 488:             if((0b010 & dousa) == 0b010){
  2125  03A0  1CAE               	btfss	waitSEGStop@dousa,1
  2126  03A1  2BA3               	goto	u1661
  2127  03A2  2BA4               	goto	u1660
  2128  03A3                     u1661:
  2129  03A3  2BA5               	goto	l2128
  2130  03A4                     u1660:
  2131  03A4  2B82               	goto	l2112
  2132  03A5                     l2128:
  2133                           
  2134                           ;Q4.c: 494:         if(((flag_sw3==1)&&(flag_R==1))){
  2135  03A5  037C               	decf	_flag_sw3,w
  2136  03A6  047D               	iorwf	_flag_sw3+1,w
  2137  03A7  1D03               	btfss	3,2
  2138  03A8  2BAA               	goto	u1671
  2139  03A9  2BAB               	goto	u1670
  2140  03AA                     u1671:
  2141  03AA  2BB6               	goto	l2140
  2142  03AB                     u1670:
  2143  03AB                     l2130:
  2144  03AB  036A               	decf	_flag_R,w
  2145  03AC  046B               	iorwf	_flag_R+1,w
  2146  03AD  1D03               	btfss	3,2
  2147  03AE  2BB0               	goto	u1681
  2148  03AF  2BB1               	goto	u1680
  2149  03B0                     u1681:
  2150  03B0  2BB6               	goto	l2140
  2151  03B1                     u1680:
  2152  03B1                     l2132:
  2153                           
  2154                           ;Q4.c: 495:             if((0b001 & dousa) == 0b001){
  2155  03B1  1C2E               	btfss	waitSEGStop@dousa,0
  2156  03B2  2BB4               	goto	u1691
  2157  03B3  2BB5               	goto	u1690
  2158  03B4                     u1691:
  2159  03B4  2BB6               	goto	l2140
  2160  03B5                     u1690:
  2161  03B5  2B82               	goto	l2112
  2162  03B6                     l2140:
  2163                           
  2164                           ;Q4.c: 501:     }
  2165  03B6  3001               	movlw	1
  2166  03B7  02B4               	subwf	waitSEGStop@i,f
  2167  03B8  3000               	movlw	0
  2168  03B9  3BB5               	subwfb	waitSEGStop@i+1,f
  2169  03BA  2B4E               	goto	l2102
  2170  03BB                     l2144:
  2171                           
  2172                           ;Q4.c: 503:     return 0;
  2173  03BB  01A8               	clrf	?_waitSEGStop
  2174  03BC  01A9               	clrf	?_waitSEGStop+1
  2175  03BD                     l265:
  2176  03BD  0008               	return
  2177  03BE                     __end_of_waitSEGStop:
  2178                           
  2179                           	psect	text3
  2180  018D                     __ptext3:	
  2181 ;; *************** function ___lwdiv *****************
  2182 ;; Defined at:
  2183 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\lwdiv.c"
  2184 ;; Parameters:    Size  Location     Type
  2185 ;;  divisor         2    0[COMMON] unsigned int 
  2186 ;;  dividend        2    2[COMMON] unsigned int 
  2187 ;; Auto vars:     Size  Location     Type
  2188 ;;  quotient        2    5[COMMON] unsigned int 
  2189 ;;  counter         1    7[COMMON] unsigned char 
  2190 ;; Return value:  Size  Location     Type
  2191 ;;                  2    0[COMMON] unsigned int 
  2192 ;; Registers used:
  2193 ;;		wreg, status,2, status,0
  2194 ;; Tracked objects:
  2195 ;;		On entry : 0/0
  2196 ;;		On exit  : 0/0
  2197 ;;		Unchanged: 0/0
  2198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2199 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2200 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2201 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2202 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2203 ;;Total ram usage:        8 bytes
  2204 ;; Hardware stack levels used:    1
  2205 ;; This function calls:
  2206 ;;		Nothing
  2207 ;; This function is called by:
  2208 ;;		_waitSEGStop
  2209 ;;		_waitSEG
  2210 ;; This function uses a non-reentrant model
  2211 ;;
  2212                           
  2213                           
  2214                           ;psect for function ___lwdiv
  2215  018D                     ___lwdiv:
  2216  018D                     l2030:	
  2217                           ;incstack = 0
  2218                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2219                           
  2220  018D  01F5               	clrf	___lwdiv@quotient
  2221  018E  01F6               	clrf	___lwdiv@quotient+1
  2222  018F                     l2032:
  2223  018F  0870               	movf	___lwdiv@divisor,w
  2224  0190  0471               	iorwf	___lwdiv@divisor+1,w
  2225  0191  1903               	btfsc	3,2
  2226  0192  2994               	goto	u1531
  2227  0193  2995               	goto	u1530
  2228  0194                     u1531:
  2229  0194  29C4               	goto	l2052
  2230  0195                     u1530:
  2231  0195                     l2034:
  2232  0195  01F7               	clrf	___lwdiv@counter
  2233  0196  0AF7               	incf	___lwdiv@counter,f
  2234  0197  29A1               	goto	l2040
  2235  0198                     l2036:
  2236  0198  3001               	movlw	1
  2237  0199                     u1545:
  2238  0199  35F0               	lslf	___lwdiv@divisor,f
  2239  019A  0DF1               	rlf	___lwdiv@divisor+1,f
  2240  019B  0B89               	decfsz	9,f
  2241  019C  2999               	goto	u1545
  2242  019D                     l2038:
  2243  019D  3001               	movlw	1
  2244  019E  00F4               	movwf	??___lwdiv
  2245  019F  0874               	movf	??___lwdiv,w
  2246  01A0  07F7               	addwf	___lwdiv@counter,f
  2247  01A1                     l2040:
  2248  01A1  1FF1               	btfss	___lwdiv@divisor+1,7
  2249  01A2  29A4               	goto	u1551
  2250  01A3  29A5               	goto	u1550
  2251  01A4                     u1551:
  2252  01A4  2998               	goto	l2036
  2253  01A5                     u1550:
  2254  01A5                     l2042:
  2255  01A5  3001               	movlw	1
  2256  01A6                     u1565:
  2257  01A6  35F5               	lslf	___lwdiv@quotient,f
  2258  01A7  0DF6               	rlf	___lwdiv@quotient+1,f
  2259  01A8  0B89               	decfsz	9,f
  2260  01A9  29A6               	goto	u1565
  2261  01AA  0871               	movf	___lwdiv@divisor+1,w
  2262  01AB  0273               	subwf	___lwdiv@dividend+1,w
  2263  01AC  1D03               	skipz
  2264  01AD  29B0               	goto	u1575
  2265  01AE  0870               	movf	___lwdiv@divisor,w
  2266  01AF  0272               	subwf	___lwdiv@dividend,w
  2267  01B0                     u1575:
  2268  01B0  1C03               	skipc
  2269  01B1  29B3               	goto	u1571
  2270  01B2  29B4               	goto	u1570
  2271  01B3                     u1571:
  2272  01B3  29B9               	goto	l2048
  2273  01B4                     u1570:
  2274  01B4                     l2044:
  2275  01B4  0870               	movf	___lwdiv@divisor,w
  2276  01B5  02F2               	subwf	___lwdiv@dividend,f
  2277  01B6  0871               	movf	___lwdiv@divisor+1,w
  2278  01B7  3BF3               	subwfb	___lwdiv@dividend+1,f
  2279  01B8                     l2046:
  2280  01B8  1475               	bsf	___lwdiv@quotient,0
  2281  01B9                     l2048:
  2282  01B9  3001               	movlw	1
  2283  01BA                     u1585:
  2284  01BA  36F1               	lsrf	___lwdiv@divisor+1,f
  2285  01BB  0CF0               	rrf	___lwdiv@divisor,f
  2286  01BC  0B89               	decfsz	9,f
  2287  01BD  29BA               	goto	u1585
  2288  01BE                     l2050:
  2289  01BE  3001               	movlw	1
  2290  01BF  02F7               	subwf	___lwdiv@counter,f
  2291  01C0  1D03               	btfss	3,2
  2292  01C1  29C3               	goto	u1591
  2293  01C2  29C4               	goto	u1590
  2294  01C3                     u1591:
  2295  01C3  29A5               	goto	l2042
  2296  01C4                     u1590:
  2297  01C4                     l2052:
  2298  01C4  0876               	movf	___lwdiv@quotient+1,w
  2299  01C5  00F1               	movwf	?___lwdiv+1
  2300  01C6  0875               	movf	___lwdiv@quotient,w
  2301  01C7  00F0               	movwf	?___lwdiv
  2302  01C8                     l758:
  2303  01C8  0008               	return
  2304  01C9                     __end_of___lwdiv:
  2305                           
  2306                           	psect	text4
  2307  00E0                     __ptext4:	
  2308 ;; *************** function _portinit *****************
  2309 ;; Defined at:
  2310 ;;		line 160 in file "Q4.c"
  2311 ;; Parameters:    Size  Location     Type
  2312 ;;		None
  2313 ;; Auto vars:     Size  Location     Type
  2314 ;;		None
  2315 ;; Return value:  Size  Location     Type
  2316 ;;                  1    wreg      void 
  2317 ;; Registers used:
  2318 ;;		wreg, status,2
  2319 ;; Tracked objects:
  2320 ;;		On entry : 0/0
  2321 ;;		On exit  : 0/0
  2322 ;;		Unchanged: 0/0
  2323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2328 ;;Total ram usage:        0 bytes
  2329 ;; Hardware stack levels used:    1
  2330 ;; This function calls:
  2331 ;;		Nothing
  2332 ;; This function is called by:
  2333 ;;		_main
  2334 ;; This function uses a non-reentrant model
  2335 ;;
  2336                           
  2337                           
  2338                           ;psect for function _portinit
  2339  00E0                     _portinit:
  2340  00E0                     l2056:	
  2341                           ;incstack = 0
  2342                           ; Regs used in _portinit: [wreg+status,2]
  2343                           
  2344                           
  2345                           ;Q4.c: 163:     ANSELA=0x00;
  2346  00E0  0023               	movlb	3	; select bank3
  2347  00E1  018C               	clrf	12	;volatile
  2348                           
  2349                           ;Q4.c: 164:     ANSELB=0x00;
  2350  00E2  018D               	clrf	13	;volatile
  2351  00E3                     l2058:
  2352                           
  2353                           ;Q4.c: 166:     PORTA=0x07;
  2354  00E3  3007               	movlw	7
  2355  00E4  0020               	movlb	0	; select bank0
  2356  00E5  008C               	movwf	12	;volatile
  2357  00E6                     l2060:
  2358                           
  2359                           ;Q4.c: 167:     TRISA=0x07;
  2360  00E6  3007               	movlw	7
  2361  00E7  0021               	movlb	1	; select bank1
  2362  00E8  008C               	movwf	12	;volatile
  2363                           
  2364                           ;Q4.c: 168:     PORTB=0x00;
  2365  00E9  0020               	movlb	0	; select bank0
  2366  00EA  018D               	clrf	13	;volatile
  2367                           
  2368                           ;Q4.c: 169:     TRISB=0x00;
  2369  00EB  0021               	movlb	1	; select bank1
  2370  00EC  018D               	clrf	13	;volatile
  2371  00ED                     l2062:
  2372                           
  2373                           ;Q4.c: 170:     PORTC=0x07;
  2374  00ED  3007               	movlw	7
  2375  00EE  0020               	movlb	0	; select bank0
  2376  00EF  008E               	movwf	14	;volatile
  2377  00F0                     l2064:
  2378                           
  2379                           ;Q4.c: 171:     TRISC=0x00;
  2380  00F0  0021               	movlb	1	; select bank1
  2381  00F1  018E               	clrf	14	;volatile
  2382  00F2                     l95:
  2383  00F2  0008               	return
  2384  00F3                     __end_of_portinit:
  2385                           
  2386                           	psect	text5
  2387  0298                     __ptext5:	
  2388 ;; *************** function _motorStop *****************
  2389 ;; Defined at:
  2390 ;;		line 513 in file "Q4.c"
  2391 ;; Parameters:    Size  Location     Type
  2392 ;;  kakudo          2    8[BANK0 ] int 
  2393 ;;  dig1data        2   10[BANK0 ] unsigned short 
  2394 ;;  dig2data        2   12[BANK0 ] unsigned short 
  2395 ;;  smdata          2   14[BANK0 ] unsigned short 
  2396 ;;  tr              2   16[BANK0 ] unsigned int 
  2397 ;;  dousa           2   18[BANK0 ] int 
  2398 ;; Auto vars:     Size  Location     Type
  2399 ;;  i               2   24[BANK0 ] int 
  2400 ;;  cpSW2           2   22[BANK0 ] int 
  2401 ;;  cpSW1           2   20[BANK0 ] int 
  2402 ;; Return value:  Size  Location     Type
  2403 ;;                  2    8[BANK0 ] int 
  2404 ;; Registers used:
  2405 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2406 ;; Tracked objects:
  2407 ;;		On entry : 0/0
  2408 ;;		On exit  : 0/0
  2409 ;;		Unchanged: 0/0
  2410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2411 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2412 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2413 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2414 ;;      Totals:         2      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2415 ;;Total ram usage:       20 bytes
  2416 ;; Hardware stack levels used:    1
  2417 ;; Hardware stack levels required when called:    2
  2418 ;; This function calls:
  2419 ;;		_dynam
  2420 ;;		_fclr
  2421 ;;		_tact
  2422 ;; This function is called by:
  2423 ;;		_main
  2424 ;; This function uses a non-reentrant model
  2425 ;;
  2426                           
  2427                           
  2428                           ;psect for function _motorStop
  2429  0298                     _motorStop:
  2430  0298                     l2160:	
  2431                           ;incstack = 0
  2432                           ; Regs used in _motorStop: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2433                           
  2434                           
  2435                           ;Q4.c: 516:     int cpSW1 = RA0;
  2436  0298  1003               	clrc
  2437  0299  0020               	movlb	0	; select bank0
  2438  029A  180C               	btfsc	12,0	;volatile
  2439  029B  1403               	setc
  2440  029C  3000               	movlw	0
  2441  029D  3D09               	addwfc	9,w
  2442  029E  00FA               	movwf	??_motorStop
  2443  029F  01FB               	clrf	??_motorStop+1
  2444  02A0  087A               	movf	??_motorStop,w
  2445  02A1  00B4               	movwf	motorStop@cpSW1
  2446  02A2  087B               	movf	??_motorStop+1,w
  2447  02A3  00B5               	movwf	motorStop@cpSW1+1
  2448                           
  2449                           ;Q4.c: 517:     int cpSW2 = RA1;
  2450  02A4  1003               	clrc
  2451  02A5  188C               	btfsc	12,1	;volatile
  2452  02A6  1403               	setc
  2453  02A7  3000               	movlw	0
  2454  02A8  3D09               	addwfc	9,w
  2455  02A9  00FA               	movwf	??_motorStop
  2456  02AA  01FB               	clrf	??_motorStop+1
  2457  02AB  087A               	movf	??_motorStop,w
  2458  02AC  00B6               	movwf	motorStop@cpSW2
  2459  02AD  087B               	movf	??_motorStop+1,w
  2460  02AE  00B7               	movwf	motorStop@cpSW2+1
  2461  02AF                     l2162:
  2462                           
  2463                           ;Q4.c: 519:     for(int i = kakudo;i>=0;i--){
  2464  02AF  0829               	movf	motorStop@kakudo+1,w
  2465  02B0  00B9               	movwf	motorStop@i+1
  2466  02B1  0828               	movf	motorStop@kakudo,w
  2467  02B2  00B8               	movwf	motorStop@i
  2468  02B3                     l2164:
  2469  02B3  1FB9               	btfss	motorStop@i+1,7
  2470  02B4  2AB6               	goto	u1711
  2471  02B5  2AB7               	goto	u1710
  2472  02B6                     u1711:
  2473  02B6  2AB8               	goto	l2168
  2474  02B7                     u1710:
  2475  02B7  2B20               	goto	l2206
  2476  02B8                     l2168:
  2477                           
  2478                           ;Q4.c: 520:         dynam(dig1data,dig2data,smdata,tr);
  2479  02B8  082B               	movf	motorStop@dig1data+1,w
  2480  02B9  00F1               	movwf	dynam@dig1data+1
  2481  02BA  082A               	movf	motorStop@dig1data,w
  2482  02BB  00F0               	movwf	dynam@dig1data
  2483  02BC  082D               	movf	motorStop@dig2data+1,w
  2484  02BD  00F3               	movwf	dynam@dig2data+1
  2485  02BE  082C               	movf	motorStop@dig2data,w
  2486  02BF  00F2               	movwf	dynam@dig2data
  2487  02C0  082F               	movf	motorStop@smdata+1,w
  2488  02C1  00F5               	movwf	dynam@smdata+1
  2489  02C2  082E               	movf	motorStop@smdata,w
  2490  02C3  00F4               	movwf	dynam@smdata
  2491  02C4  0831               	movf	motorStop@tr+1,w
  2492  02C5  00F7               	movwf	dynam@tr+1
  2493  02C6  0830               	movf	motorStop@tr,w
  2494  02C7  00F6               	movwf	dynam@tr
  2495  02C8  3183  23BE  3182   	fcall	_dynam
  2496                           
  2497                           ;Q4.c: 522:         tact(0);
  2498  02CB  3000               	movlw	0
  2499  02CC  00F8               	movwf	tact@mode
  2500  02CD  00F9               	movwf	tact@mode+1
  2501  02CE  3182  224C  3182   	fcall	_tact
  2502  02D1                     l2170:
  2503                           
  2504                           ;Q4.c: 524:         if(cpSW1 != RA0){
  2505  02D1  1003               	clrc
  2506  02D2  0020               	movlb	0	; select bank0
  2507  02D3  180C               	btfsc	12,0	;volatile
  2508  02D4  1403               	setc
  2509  02D5  3000               	movlw	0
  2510  02D6  3D09               	addwfc	9,w
  2511  02D7  00FA               	movwf	??_motorStop
  2512  02D8  01FB               	clrf	??_motorStop+1
  2513  02D9  0835               	movf	motorStop@cpSW1+1,w
  2514  02DA  067B               	xorwf	??_motorStop+1,w
  2515  02DB  1D03               	skipz
  2516  02DC  2ADF               	goto	u1725
  2517  02DD  0834               	movf	motorStop@cpSW1,w
  2518  02DE  067A               	xorwf	??_motorStop,w
  2519  02DF                     u1725:
  2520  02DF  1903               	skipnz
  2521  02E0  2AE2               	goto	u1721
  2522  02E1  2AE3               	goto	u1720
  2523  02E2                     u1721:
  2524  02E2  2AF4               	goto	l2180
  2525  02E3                     u1720:
  2526  02E3                     l2172:
  2527                           
  2528                           ;Q4.c: 525:             if((0b100 & dousa) == 0b100){
  2529  02E3  1D32               	btfss	motorStop@dousa,2
  2530  02E4  2AE6               	goto	u1731
  2531  02E5  2AE7               	goto	u1730
  2532  02E6                     u1731:
  2533  02E6  2AF4               	goto	l2180
  2534  02E7                     u1730:
  2535  02E7                     l2174:
  2536                           
  2537                           ;Q4.c: 527:                 fclr(2);
  2538  02E7  3002               	movlw	2
  2539  02E8  00F0               	movwf	fclr@flg
  2540  02E9  3000               	movlw	0
  2541  02EA  00F1               	movwf	fclr@flg+1
  2542  02EB  3180  20F3  3182   	fcall	_fclr
  2543  02EE                     l2176:
  2544                           
  2545                           ;Q4.c: 528:                 return i;
  2546  02EE  0020               	movlb	0	; select bank0
  2547  02EF  0839               	movf	motorStop@i+1,w
  2548  02F0  00A9               	movwf	?_motorStop+1
  2549  02F1  0838               	movf	motorStop@i,w
  2550  02F2  00A8               	movwf	?_motorStop
  2551  02F3  2B22               	goto	l281
  2552  02F4                     l2180:
  2553                           
  2554                           ;Q4.c: 531:         if(cpSW2 != RA1){
  2555  02F4  1003               	clrc
  2556  02F5  188C               	btfsc	12,1	;volatile
  2557  02F6  1403               	setc
  2558  02F7  3000               	movlw	0
  2559  02F8  3D09               	addwfc	9,w
  2560  02F9  00FA               	movwf	??_motorStop
  2561  02FA  01FB               	clrf	??_motorStop+1
  2562  02FB  0837               	movf	motorStop@cpSW2+1,w
  2563  02FC  067B               	xorwf	??_motorStop+1,w
  2564  02FD  1D03               	skipz
  2565  02FE  2B01               	goto	u1745
  2566  02FF  0836               	movf	motorStop@cpSW2,w
  2567  0300  067A               	xorwf	??_motorStop,w
  2568  0301                     u1745:
  2569  0301  1903               	skipnz
  2570  0302  2B04               	goto	u1741
  2571  0303  2B05               	goto	u1740
  2572  0304                     u1741:
  2573  0304  2B0A               	goto	l2190
  2574  0305                     u1740:
  2575  0305                     l2182:
  2576                           
  2577                           ;Q4.c: 532:             if((0b010 & dousa) == 0b010){
  2578  0305  1CB2               	btfss	motorStop@dousa,1
  2579  0306  2B08               	goto	u1751
  2580  0307  2B09               	goto	u1750
  2581  0308                     u1751:
  2582  0308  2B0A               	goto	l2190
  2583  0309                     u1750:
  2584  0309  2AE7               	goto	l2174
  2585  030A                     l2190:
  2586                           
  2587                           ;Q4.c: 538:         if(((flag_sw3==1)&&(flag_R==1))){
  2588  030A  037C               	decf	_flag_sw3,w
  2589  030B  047D               	iorwf	_flag_sw3+1,w
  2590  030C  1D03               	btfss	3,2
  2591  030D  2B0F               	goto	u1761
  2592  030E  2B10               	goto	u1760
  2593  030F                     u1761:
  2594  030F  2B1B               	goto	l2202
  2595  0310                     u1760:
  2596  0310                     l2192:
  2597  0310  036A               	decf	_flag_R,w
  2598  0311  046B               	iorwf	_flag_R+1,w
  2599  0312  1D03               	btfss	3,2
  2600  0313  2B15               	goto	u1771
  2601  0314  2B16               	goto	u1770
  2602  0315                     u1771:
  2603  0315  2B1B               	goto	l2202
  2604  0316                     u1770:
  2605  0316                     l2194:
  2606                           
  2607                           ;Q4.c: 539:             if((0b001 & dousa) == 0b001){
  2608  0316  1C32               	btfss	motorStop@dousa,0
  2609  0317  2B19               	goto	u1781
  2610  0318  2B1A               	goto	u1780
  2611  0319                     u1781:
  2612  0319  2B1B               	goto	l2202
  2613  031A                     u1780:
  2614  031A  2AE7               	goto	l2174
  2615  031B                     l2202:
  2616                           
  2617                           ;Q4.c: 545:     }
  2618  031B  30FF               	movlw	255
  2619  031C  07B8               	addwf	motorStop@i,f
  2620  031D  30FF               	movlw	255
  2621  031E  3DB9               	addwfc	motorStop@i+1,f
  2622  031F  2AB3               	goto	l2164
  2623  0320                     l2206:
  2624                           
  2625                           ;Q4.c: 547:     return 0;
  2626  0320  01A8               	clrf	?_motorStop
  2627  0321  01A9               	clrf	?_motorStop+1
  2628  0322                     l281:
  2629  0322  0008               	return
  2630  0323                     __end_of_motorStop:
  2631                           
  2632                           	psect	text6
  2633  024C                     __ptext6:	
  2634 ;; *************** function _tact *****************
  2635 ;; Defined at:
  2636 ;;		line 346 in file "Q4.c"
  2637 ;; Parameters:    Size  Location     Type
  2638 ;;  mode            2    8[COMMON] unsigned short 
  2639 ;; Auto vars:     Size  Location     Type
  2640 ;;		None
  2641 ;; Return value:  Size  Location     Type
  2642 ;;                  1    wreg      void 
  2643 ;; Registers used:
  2644 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2645 ;; Tracked objects:
  2646 ;;		On entry : 0/0
  2647 ;;		On exit  : 0/0
  2648 ;;		Unchanged: 0/0
  2649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2650 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2653 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2654 ;;Total ram usage:        2 bytes
  2655 ;; Hardware stack levels used:    1
  2656 ;; Hardware stack levels required when called:    1
  2657 ;; This function calls:
  2658 ;;		_tactsw
  2659 ;; This function is called by:
  2660 ;;		_waitSEGStop
  2661 ;;		_motorStop
  2662 ;;		_kaisu
  2663 ;; This function uses a non-reentrant model
  2664 ;;
  2665                           
  2666                           
  2667                           ;psect for function _tact
  2668  024C                     _tact:
  2669  024C                     l1980:	
  2670                           ;incstack = 0
  2671                           ; Regs used in _tact: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2672                           
  2673                           
  2674                           ;Q4.c: 346: void tact(unsigned short mode);Q4.c: 347: {;Q4.c: 348:     switch(mode){
  2675  024C  2A87               	goto	l2008
  2676  024D                     l1982:
  2677                           
  2678                           ;Q4.c: 350:                 tactsw();
  2679  024D  3181  21C9  3182   	fcall	_tactsw
  2680  0250                     l1984:
  2681                           
  2682                           ;Q4.c: 351:                 if(flag_sw3==0)flag_R=1;
  2683  0250  087C               	movf	_flag_sw3,w
  2684  0251  047D               	iorwf	_flag_sw3+1,w
  2685  0252  1D03               	btfss	3,2
  2686  0253  2A55               	goto	u1481
  2687  0254  2A56               	goto	u1480
  2688  0255                     u1481:
  2689  0255  2A97               	goto	l208
  2690  0256                     u1480:
  2691  0256                     l1986:
  2692  0256  3001               	movlw	1
  2693  0257  0020               	movlb	0	; select bank0
  2694  0258  00EA               	movwf	_flag_R
  2695  0259  3000               	movlw	0
  2696  025A  00EB               	movwf	_flag_R+1
  2697  025B  2A97               	goto	l208
  2698  025C                     l1988:
  2699                           
  2700                           ;Q4.c: 354:                 tactsw();
  2701  025C  3181  21C9  3182   	fcall	_tactsw
  2702  025F                     l1990:
  2703                           
  2704                           ;Q4.c: 355:                 if(flag_sw3==1)flag_P=1;
  2705  025F  037C               	decf	_flag_sw3,w
  2706  0260  047D               	iorwf	_flag_sw3+1,w
  2707  0261  1D03               	btfss	3,2
  2708  0262  2A64               	goto	u1491
  2709  0263  2A65               	goto	u1490
  2710  0264                     u1491:
  2711  0264  2A97               	goto	l208
  2712  0265                     u1490:
  2713  0265                     l1992:
  2714  0265  3001               	movlw	1
  2715  0266  0020               	movlb	0	; select bank0
  2716  0267  00E8               	movwf	_flag_P
  2717  0268  3000               	movlw	0
  2718  0269  00E9               	movwf	_flag_P+1
  2719  026A  2A97               	goto	l208
  2720  026B                     l1994:
  2721                           
  2722                           ;Q4.c: 358:                 tactsw();
  2723  026B  3181  21C9  3182   	fcall	_tactsw
  2724  026E                     l1996:
  2725                           
  2726                           ;Q4.c: 359:                 if(flag_sw3==0)flag_R=1;
  2727  026E  087C               	movf	_flag_sw3,w
  2728  026F  047D               	iorwf	_flag_sw3+1,w
  2729  0270  1D03               	btfss	3,2
  2730  0271  2A73               	goto	u1501
  2731  0272  2A74               	goto	u1500
  2732  0273                     u1501:
  2733  0273  2A79               	goto	l2000
  2734  0274                     u1500:
  2735  0274                     l1998:
  2736  0274  3001               	movlw	1
  2737  0275  0020               	movlb	0	; select bank0
  2738  0276  00EA               	movwf	_flag_R
  2739  0277  3000               	movlw	0
  2740  0278  00EB               	movwf	_flag_R+1
  2741  0279                     l2000:
  2742                           
  2743                           ;Q4.c: 360:                 if((flag_sw3==1)&&(flag_R==1))flag_P=1;
  2744  0279  037C               	decf	_flag_sw3,w
  2745  027A  047D               	iorwf	_flag_sw3+1,w
  2746  027B  1D03               	btfss	3,2
  2747  027C  2A7E               	goto	u1511
  2748  027D  2A7F               	goto	u1510
  2749  027E                     u1511:
  2750  027E  2A97               	goto	l208
  2751  027F                     u1510:
  2752  027F                     l2002:
  2753  027F  0020               	movlb	0	; select bank0
  2754  0280  036A               	decf	_flag_R,w
  2755  0281  046B               	iorwf	_flag_R+1,w
  2756  0282  1D03               	btfss	3,2
  2757  0283  2A85               	goto	u1521
  2758  0284  2A86               	goto	u1520
  2759  0285                     u1521:
  2760  0285  2A97               	goto	l208
  2761  0286                     u1520:
  2762  0286  2A65               	goto	l1992
  2763  0287                     l2008:
  2764                           
  2765                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2766                           ; Switch size 1, requested type "simple"
  2767                           ; Number of cases is 1, Range of values is 0 to 0
  2768                           ; switch strategies available:
  2769                           ; Name         Instructions Cycles
  2770                           ; simple_byte            4     3 (average)
  2771                           ; direct_byte            8     6 (fixed)
  2772                           ; jumptable            260     6 (fixed)
  2773                           ;	Chosen strategy is simple_byte
  2774  0287  0879               	movf	tact@mode+1,w
  2775  0288  3A00               	xorlw	0	; case 0
  2776  0289  1903               	skipnz
  2777  028A  2A8C               	goto	l2722
  2778  028B  2A97               	goto	l208
  2779  028C                     l2722:
  2780                           
  2781                           ; Switch size 1, requested type "simple"
  2782                           ; Number of cases is 3, Range of values is 0 to 2
  2783                           ; switch strategies available:
  2784                           ; Name         Instructions Cycles
  2785                           ; simple_byte           10     6 (average)
  2786                           ; direct_byte           12     6 (fixed)
  2787                           ; jumptable            260     6 (fixed)
  2788                           ;	Chosen strategy is simple_byte
  2789  028C  0878               	movf	tact@mode,w
  2790  028D  3A00               	xorlw	0	; case 0
  2791  028E  1903               	skipnz
  2792  028F  2A4D               	goto	l1982
  2793  0290  3A01               	xorlw	1	; case 1
  2794  0291  1903               	skipnz
  2795  0292  2A5C               	goto	l1988
  2796  0293  3A03               	xorlw	3	; case 2
  2797  0294  1903               	skipnz
  2798  0295  2A6B               	goto	l1994
  2799  0296  2A97               	goto	l208
  2800  0297                     l208:
  2801  0297  0008               	return
  2802  0298                     __end_of_tact:
  2803                           
  2804                           	psect	text7
  2805  01C9                     __ptext7:	
  2806 ;; *************** function _tactsw *****************
  2807 ;; Defined at:
  2808 ;;		line 331 in file "Q4.c"
  2809 ;; Parameters:    Size  Location     Type
  2810 ;;		None
  2811 ;; Auto vars:     Size  Location     Type
  2812 ;;  a               2    6[COMMON] unsigned short 
  2813 ;;  c               2    4[COMMON] unsigned short 
  2814 ;;  b               2    2[COMMON] unsigned short 
  2815 ;; Return value:  Size  Location     Type
  2816 ;;                  1    wreg      void 
  2817 ;; Registers used:
  2818 ;;		wreg, status,2, status,0
  2819 ;; Tracked objects:
  2820 ;;		On entry : 0/0
  2821 ;;		On exit  : 0/0
  2822 ;;		Unchanged: 0/0
  2823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2825 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2826 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2827 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2828 ;;Total ram usage:        8 bytes
  2829 ;; Hardware stack levels used:    1
  2830 ;; This function calls:
  2831 ;;		Nothing
  2832 ;; This function is called by:
  2833 ;;		_tact
  2834 ;; This function uses a non-reentrant model
  2835 ;;
  2836                           
  2837                           
  2838                           ;psect for function _tactsw
  2839  01C9                     _tactsw:
  2840  01C9                     l1806:	
  2841                           ;incstack = 0
  2842                           ; Regs used in _tactsw: [wreg+status,2+status,0]
  2843                           
  2844                           
  2845                           ;Q4.c: 333:     unsigned short a,b,c;;Q4.c: 334:     b=c=0;
  2846  01C9  01F4               	clrf	tactsw@c
  2847  01CA  01F5               	clrf	tactsw@c+1
  2848  01CB  01F2               	clrf	tactsw@b
  2849  01CC  01F3               	clrf	tactsw@b+1
  2850  01CD                     l1808:
  2851                           
  2852                           ;Q4.c: 336:             a=RA2;
  2853  01CD  1003               	clrc
  2854  01CE  0020               	movlb	0	; select bank0
  2855  01CF  190C               	btfsc	12,2	;volatile
  2856  01D0  1403               	setc
  2857  01D1  3000               	movlw	0
  2858  01D2  3D09               	addwfc	9,w
  2859  01D3  00F0               	movwf	??_tactsw
  2860  01D4  01F1               	clrf	??_tactsw+1
  2861  01D5  0870               	movf	??_tactsw,w
  2862  01D6  00F6               	movwf	tactsw@a
  2863  01D7  0871               	movf	??_tactsw+1,w
  2864  01D8  00F7               	movwf	tactsw@a+1
  2865  01D9                     l1810:
  2866                           
  2867                           ;Q4.c: 337:             if(b==a)++c;
  2868  01D9  0877               	movf	tactsw@a+1,w
  2869  01DA  0673               	xorwf	tactsw@b+1,w
  2870  01DB  1D03               	skipz
  2871  01DC  29DF               	goto	u1245
  2872  01DD  0876               	movf	tactsw@a,w
  2873  01DE  0672               	xorwf	tactsw@b,w
  2874  01DF                     u1245:
  2875  01DF  1D03               	skipz
  2876  01E0  29E2               	goto	u1241
  2877  01E1  29E3               	goto	u1240
  2878  01E2                     u1241:
  2879  01E2  29E8               	goto	l1814
  2880  01E3                     u1240:
  2881  01E3                     l1812:
  2882  01E3  3001               	movlw	1
  2883  01E4  07F4               	addwf	tactsw@c,f
  2884  01E5  3000               	movlw	0
  2885  01E6  3DF5               	addwfc	tactsw@c+1,f
  2886  01E7  29EA               	goto	l1816
  2887  01E8                     l1814:
  2888  01E8  01F4               	clrf	tactsw@c
  2889  01E9  01F5               	clrf	tactsw@c+1
  2890  01EA                     l1816:
  2891                           
  2892                           ;Q4.c: 339:             if(c>10){flag_sw3=(~a)&0x01;return;}
  2893  01EA  3000               	movlw	0
  2894  01EB  0275               	subwf	tactsw@c+1,w
  2895  01EC  300B               	movlw	11
  2896  01ED  1903               	skipnz
  2897  01EE  0274               	subwf	tactsw@c,w
  2898  01EF  1C03               	skipc
  2899  01F0  29F2               	goto	u1251
  2900  01F1  29F3               	goto	u1250
  2901  01F2                     u1251:
  2902  01F2  2A00               	goto	l1822
  2903  01F3                     u1250:
  2904  01F3                     l1818:
  2905  01F3  0877               	movf	tactsw@a+1,w
  2906  01F4  00F1               	movwf	??_tactsw+1
  2907  01F5  0876               	movf	tactsw@a,w
  2908  01F6  00F0               	movwf	??_tactsw
  2909  01F7  09F0               	comf	??_tactsw,f
  2910  01F8  09F1               	comf	??_tactsw+1,f
  2911  01F9  3001               	movlw	1
  2912  01FA  0570               	andwf	??_tactsw,w
  2913  01FB  00FC               	movwf	_flag_sw3
  2914  01FC  3000               	movlw	0
  2915  01FD  0571               	andwf	??_tactsw+1,w
  2916  01FE  00FD               	movwf	_flag_sw3+1
  2917  01FF  2A05               	goto	l193
  2918  0200                     l1822:
  2919                           
  2920                           ;Q4.c: 340:             b=a;
  2921  0200  0877               	movf	tactsw@a+1,w
  2922  0201  00F3               	movwf	tactsw@b+1
  2923  0202  0876               	movf	tactsw@a,w
  2924  0203  00F2               	movwf	tactsw@b
  2925  0204  29CD               	goto	l1808
  2926  0205                     l193:
  2927  0205  0008               	return
  2928  0206                     __end_of_tactsw:
  2929                           
  2930                           	psect	text8
  2931  00F3                     __ptext8:	
  2932 ;; *************** function _fclr *****************
  2933 ;; Defined at:
  2934 ;;		line 369 in file "Q4.c"
  2935 ;; Parameters:    Size  Location     Type
  2936 ;;  flg             2    0[COMMON] unsigned short 
  2937 ;; Auto vars:     Size  Location     Type
  2938 ;;		None
  2939 ;; Return value:  Size  Location     Type
  2940 ;;                  1    wreg      void 
  2941 ;; Registers used:
  2942 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2943 ;; Tracked objects:
  2944 ;;		On entry : 0/0
  2945 ;;		On exit  : 0/0
  2946 ;;		Unchanged: 0/0
  2947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2948 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2951 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2952 ;;Total ram usage:        2 bytes
  2953 ;; Hardware stack levels used:    1
  2954 ;; This function calls:
  2955 ;;		Nothing
  2956 ;; This function is called by:
  2957 ;;		_waitSEGStop
  2958 ;;		_motorStop
  2959 ;;		_main
  2960 ;;		_kaisu
  2961 ;; This function uses a non-reentrant model
  2962 ;;
  2963                           
  2964                           
  2965                           ;psect for function _fclr
  2966  00F3                     _fclr:
  2967  00F3                     l2014:	
  2968                           ;incstack = 0
  2969                           ; Regs used in _fclr: [wreg-fsr0h+status,2+status,0]
  2970                           
  2971                           
  2972                           ;Q4.c: 369: void fclr(unsigned short flg);Q4.c: 370: {;Q4.c: 371:     switch(flg){
  2973  00F3  2902               	goto	l2024
  2974  00F4                     l2016:
  2975                           
  2976                           ;Q4.c: 373:                     flag_R=0;
  2977  00F4  0020               	movlb	0	; select bank0
  2978  00F5  01EA               	clrf	_flag_R
  2979  00F6  01EB               	clrf	_flag_R+1
  2980                           
  2981                           ;Q4.c: 374:                     break;
  2982  00F7  2912               	goto	l217
  2983  00F8                     l2018:
  2984                           
  2985                           ;Q4.c: 376:                     flag_P=0;
  2986  00F8  0020               	movlb	0	; select bank0
  2987  00F9  01E8               	clrf	_flag_P
  2988  00FA  01E9               	clrf	_flag_P+1
  2989                           
  2990                           ;Q4.c: 377:                     break;
  2991  00FB  2912               	goto	l217
  2992  00FC                     l2020:
  2993                           
  2994                           ;Q4.c: 379:                     flag_P=flag_R=0;
  2995  00FC  0020               	movlb	0	; select bank0
  2996  00FD  01EA               	clrf	_flag_R
  2997  00FE  01EB               	clrf	_flag_R+1
  2998  00FF  01E8               	clrf	_flag_P
  2999  0100  01E9               	clrf	_flag_P+1
  3000                           
  3001                           ;Q4.c: 380:                     break;
  3002  0101  2912               	goto	l217
  3003  0102                     l2024:
  3004                           
  3005                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3006                           ; Switch size 1, requested type "simple"
  3007                           ; Number of cases is 1, Range of values is 0 to 0
  3008                           ; switch strategies available:
  3009                           ; Name         Instructions Cycles
  3010                           ; simple_byte            4     3 (average)
  3011                           ; direct_byte            8     6 (fixed)
  3012                           ; jumptable            260     6 (fixed)
  3013                           ;	Chosen strategy is simple_byte
  3014  0102  0871               	movf	fclr@flg+1,w
  3015  0103  3A00               	xorlw	0	; case 0
  3016  0104  1903               	skipnz
  3017  0105  2907               	goto	l2724
  3018  0106  2912               	goto	l217
  3019  0107                     l2724:
  3020                           
  3021                           ; Switch size 1, requested type "simple"
  3022                           ; Number of cases is 3, Range of values is 0 to 2
  3023                           ; switch strategies available:
  3024                           ; Name         Instructions Cycles
  3025                           ; simple_byte           10     6 (average)
  3026                           ; direct_byte           12     6 (fixed)
  3027                           ; jumptable            260     6 (fixed)
  3028                           ;	Chosen strategy is simple_byte
  3029  0107  0870               	movf	fclr@flg,w
  3030  0108  3A00               	xorlw	0	; case 0
  3031  0109  1903               	skipnz
  3032  010A  28F4               	goto	l2016
  3033  010B  3A01               	xorlw	1	; case 1
  3034  010C  1903               	skipnz
  3035  010D  28F8               	goto	l2018
  3036  010E  3A03               	xorlw	3	; case 2
  3037  010F  1903               	skipnz
  3038  0110  28FC               	goto	l2020
  3039  0111  2912               	goto	l217
  3040  0112                     l217:
  3041  0112  0008               	return
  3042  0113                     __end_of_fclr:
  3043                           
  3044                           	psect	text9
  3045  0133                     __ptext9:	
  3046 ;; *************** function _motor *****************
  3047 ;; Defined at:
  3048 ;;		line 506 in file "Q4.c"
  3049 ;; Parameters:    Size  Location     Type
  3050 ;;  kakudo          2    8[BANK0 ] int 
  3051 ;;  dig1data        2   10[BANK0 ] unsigned short 
  3052 ;;  dig2data        2   12[BANK0 ] unsigned short 
  3053 ;;  smdata          2   14[BANK0 ] unsigned short 
  3054 ;;  tr              2   16[BANK0 ] unsigned int 
  3055 ;; Auto vars:     Size  Location     Type
  3056 ;;  i               2    8[COMMON] int 
  3057 ;; Return value:  Size  Location     Type
  3058 ;;                  1    wreg      void 
  3059 ;; Registers used:
  3060 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3061 ;; Tracked objects:
  3062 ;;		On entry : 0/0
  3063 ;;		On exit  : 0/0
  3064 ;;		Unchanged: 0/0
  3065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3066 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3067 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3069 ;;      Totals:         2      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3070 ;;Total ram usage:       12 bytes
  3071 ;; Hardware stack levels used:    1
  3072 ;; Hardware stack levels required when called:    1
  3073 ;; This function calls:
  3074 ;;		_dynam
  3075 ;; This function is called by:
  3076 ;;		_main
  3077 ;;		_henka
  3078 ;; This function uses a non-reentrant model
  3079 ;;
  3080                           
  3081                           
  3082                           ;psect for function _motor
  3083  0133                     _motor:
  3084  0133                     l2148:	
  3085                           ;incstack = 0
  3086                           ; Regs used in _motor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3087                           
  3088                           
  3089                           ;Q4.c: 508:     for(int i = kakudo;i>=0;i--){
  3090  0133  0020               	movlb	0	; select bank0
  3091  0134  0829               	movf	motor@kakudo+1,w
  3092  0135  00F9               	movwf	motor@i+1
  3093  0136  0828               	movf	motor@kakudo,w
  3094  0137  00F8               	movwf	motor@i
  3095  0138                     l2150:
  3096  0138  1FF9               	btfss	motor@i+1,7
  3097  0139  293B               	goto	u1701
  3098  013A  293C               	goto	u1700
  3099  013B                     u1701:
  3100  013B  293D               	goto	l2154
  3101  013C                     u1700:
  3102  013C  2956               	goto	l274
  3103  013D                     l2154:
  3104                           
  3105                           ;Q4.c: 509:         dynam(dig1data,dig2data,smdata,tr);
  3106  013D  0020               	movlb	0	; select bank0
  3107  013E  082B               	movf	motor@dig1data+1,w
  3108  013F  00F1               	movwf	dynam@dig1data+1
  3109  0140  082A               	movf	motor@dig1data,w
  3110  0141  00F0               	movwf	dynam@dig1data
  3111  0142  082D               	movf	motor@dig2data+1,w
  3112  0143  00F3               	movwf	dynam@dig2data+1
  3113  0144  082C               	movf	motor@dig2data,w
  3114  0145  00F2               	movwf	dynam@dig2data
  3115  0146  082F               	movf	motor@smdata+1,w
  3116  0147  00F5               	movwf	dynam@smdata+1
  3117  0148  082E               	movf	motor@smdata,w
  3118  0149  00F4               	movwf	dynam@smdata
  3119  014A  0831               	movf	motor@tr+1,w
  3120  014B  00F7               	movwf	dynam@tr+1
  3121  014C  0830               	movf	motor@tr,w
  3122  014D  00F6               	movwf	dynam@tr
  3123  014E  3183  23BE  3181   	fcall	_dynam
  3124  0151                     l2156:
  3125                           
  3126                           ;Q4.c: 510:     }
  3127  0151  30FF               	movlw	255
  3128  0152  07F8               	addwf	motor@i,f
  3129  0153  30FF               	movlw	255
  3130  0154  3DF9               	addwfc	motor@i+1,f
  3131  0155  2938               	goto	l2150
  3132  0156                     l274:
  3133  0156  0008               	return
  3134  0157                     __end_of_motor:
  3135                           
  3136                           	psect	text10
  3137  03BE                     __ptext10:	
  3138 ;; *************** function _dynam *****************
  3139 ;; Defined at:
  3140 ;;		line 206 in file "Q4.c"
  3141 ;; Parameters:    Size  Location     Type
  3142 ;;  dig1data        2    0[COMMON] unsigned short 
  3143 ;;  dig2data        2    2[COMMON] unsigned short 
  3144 ;;  smdata          2    4[COMMON] unsigned short 
  3145 ;;  tr              2    6[COMMON] unsigned int 
  3146 ;; Auto vars:     Size  Location     Type
  3147 ;;  ext             2    6[BANK0 ] unsigned short 
  3148 ;;  j               2    4[BANK0 ] unsigned int 
  3149 ;;  tm              2    2[BANK0 ] unsigned int 
  3150 ;;  smd             2    0[BANK0 ] unsigned short 
  3151 ;; Return value:  Size  Location     Type
  3152 ;;                  1    wreg      void 
  3153 ;; Registers used:
  3154 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3155 ;; Tracked objects:
  3156 ;;		On entry : 0/0
  3157 ;;		On exit  : 0/0
  3158 ;;		Unchanged: 0/0
  3159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3160 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3161 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3163 ;;      Totals:         8       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3164 ;;Total ram usage:       16 bytes
  3165 ;; Hardware stack levels used:    1
  3166 ;; This function calls:
  3167 ;;		Nothing
  3168 ;; This function is called by:
  3169 ;;		_waitSEGStop
  3170 ;;		_motor
  3171 ;;		_motorStop
  3172 ;;		_main
  3173 ;;		_clear
  3174 ;;		_waitSEG
  3175 ;; This function uses a non-reentrant model
  3176 ;;
  3177                           
  3178                           
  3179                           ;psect for function _dynam
  3180  03BE                     _dynam:
  3181  03BE                     l1824:	
  3182                           ;incstack = 0
  3183                           ; Regs used in _dynam: [wreg-fsr0h+status,2+status,0]
  3184                           
  3185  03BE  0020               	movlb	0	; select bank0
  3186  03BF  01A2               	clrf	dynam@tm
  3187  03C0  01A3               	clrf	dynam@tm+1
  3188                           
  3189                           ;Q4.c: 209:     unsigned short ext=0,smd=0;
  3190  03C1  01A6               	clrf	dynam@ext
  3191  03C2  01A7               	clrf	dynam@ext+1
  3192  03C3  01A0               	clrf	dynam@smd
  3193  03C4  01A1               	clrf	dynam@smd+1
  3194  03C5                     l1826:
  3195                           
  3196                           ;Q4.c: 210:     RC7=0;
  3197  03C5  138E               	bcf	14,7	;volatile
  3198  03C6                     l1828:
  3199                           
  3200                           ;Q4.c: 211:     PORTB=dig1data;
  3201  03C6  0870               	movf	dynam@dig1data,w
  3202  03C7  008D               	movwf	13	;volatile
  3203  03C8                     l1830:
  3204                           
  3205                           ;Q4.c: 212:     RC5=0;RC6=1;
  3206  03C8  128E               	bcf	14,5	;volatile
  3207  03C9                     l1832:
  3208  03C9  170E               	bsf	14,6	;volatile
  3209  03CA                     l1834:
  3210                           
  3211                           ;Q4.c: 213:     if(tr==5){tm=4000;}
  3212  03CA  3005               	movlw	5
  3213  03CB  0676               	xorwf	dynam@tr,w
  3214  03CC  0477               	iorwf	dynam@tr+1,w
  3215  03CD  1D03               	btfss	3,2
  3216  03CE  2BD0               	goto	u1261
  3217  03CF  2BD1               	goto	u1260
  3218  03D0                     u1261:
  3219  03D0  2BD6               	goto	l1838
  3220  03D1                     u1260:
  3221  03D1                     l1836:
  3222  03D1  30A0               	movlw	160
  3223  03D2  00A2               	movwf	dynam@tm
  3224  03D3  300F               	movlw	15
  3225  03D4  00A3               	movwf	dynam@tm+1
  3226  03D5  2BDA               	goto	l112
  3227  03D6                     l1838:
  3228  03D6  30D0               	movlw	208
  3229  03D7  00A2               	movwf	dynam@tm
  3230  03D8  3007               	movlw	7
  3231  03D9  00A3               	movwf	dynam@tm+1
  3232  03DA                     l112:
  3233                           
  3234                           ;Q4.c: 215:     for(j=tm;j>0;--j);
  3235  03DA  0823               	movf	dynam@tm+1,w
  3236  03DB  00A5               	movwf	dynam@j+1
  3237  03DC  0822               	movf	dynam@tm,w
  3238  03DD  00A4               	movwf	dynam@j
  3239  03DE                     l1840:
  3240  03DE  0824               	movf	dynam@j,w
  3241  03DF  0425               	iorwf	dynam@j+1,w
  3242  03E0  1D03               	btfss	3,2
  3243  03E1  2BE3               	goto	u1271
  3244  03E2  2BE4               	goto	u1270
  3245  03E3                     u1271:
  3246  03E3  2BE5               	goto	l1844
  3247  03E4                     u1270:
  3248  03E4  2BEA               	goto	l114
  3249  03E5                     l1844:
  3250  03E5  3001               	movlw	1
  3251  03E6  02A4               	subwf	dynam@j,f
  3252  03E7  3000               	movlw	0
  3253  03E8  3BA5               	subwfb	dynam@j+1,f
  3254  03E9  2BDE               	goto	l1840
  3255  03EA                     l114:
  3256                           
  3257                           ;Q4.c: 216:     RC5=0;RC6=0;
  3258  03EA  128E               	bcf	14,5	;volatile
  3259  03EB  130E               	bcf	14,6	;volatile
  3260  03EC                     l1848:
  3261                           
  3262                           ;Q4.c: 217:     PORTB=dig2data;
  3263  03EC  0872               	movf	dynam@dig2data,w
  3264  03ED  008D               	movwf	13	;volatile
  3265  03EE                     l1850:
  3266                           
  3267                           ;Q4.c: 218:     RC6=0;RC5=1;
  3268  03EE  130E               	bcf	14,6	;volatile
  3269  03EF                     l1852:
  3270  03EF  168E               	bsf	14,5	;volatile
  3271  03F0                     l1854:
  3272                           
  3273                           ;Q4.c: 219:     if(tr==5){tm=4000;}
  3274  03F0  3005               	movlw	5
  3275  03F1  0676               	xorwf	dynam@tr,w
  3276  03F2  0477               	iorwf	dynam@tr+1,w
  3277  03F3  1D03               	btfss	3,2
  3278  03F4  2BF6               	goto	u1281
  3279  03F5  2BF7               	goto	u1280
  3280  03F6                     u1281:
  3281  03F6  2BFC               	goto	l1858
  3282  03F7                     u1280:
  3283  03F7                     l1856:
  3284  03F7  30A0               	movlw	160
  3285  03F8  00A2               	movwf	dynam@tm
  3286  03F9  300F               	movlw	15
  3287  03FA  00A3               	movwf	dynam@tm+1
  3288  03FB  2C00               	goto	l116
  3289  03FC                     l1858:
  3290  03FC  30D0               	movlw	208
  3291  03FD  00A2               	movwf	dynam@tm
  3292  03FE  3007               	movlw	7
  3293  03FF  00A3               	movwf	dynam@tm+1
  3294  0400                     l116:
  3295                           
  3296                           ;Q4.c: 221:     for(j=tm;j>0;--j);
  3297  0400  0823               	movf	dynam@tm+1,w
  3298  0401  00A5               	movwf	dynam@j+1
  3299  0402  0822               	movf	dynam@tm,w
  3300  0403  00A4               	movwf	dynam@j
  3301  0404                     l1860:
  3302  0404  0824               	movf	dynam@j,w
  3303  0405  0425               	iorwf	dynam@j+1,w
  3304  0406  1D03               	btfss	3,2
  3305  0407  2C09               	goto	u1291
  3306  0408  2C0A               	goto	u1290
  3307  0409                     u1291:
  3308  0409  2C0B               	goto	l1864
  3309  040A                     u1290:
  3310  040A  2C10               	goto	l118
  3311  040B                     l1864:
  3312  040B  3001               	movlw	1
  3313  040C  02A4               	subwf	dynam@j,f
  3314  040D  3000               	movlw	0
  3315  040E  3BA5               	subwfb	dynam@j+1,f
  3316  040F  2C04               	goto	l1860
  3317  0410                     l118:
  3318                           
  3319                           ;Q4.c: 222:     RC5=0;RC6=0;
  3320  0410  128E               	bcf	14,5	;volatile
  3321  0411  130E               	bcf	14,6	;volatile
  3322                           
  3323                           ;Q4.c: 223:     switch(smdata){
  3324  0412  2D17               	goto	l1974
  3325  0413                     l1868:
  3326                           
  3327                           ;Q4.c: 225:                 PORTB=0x00;smd=(0x01|0x02|0x04|0x08|0x10|0x20);
  3328  0413  018D               	clrf	13	;volatile
  3329  0414                     l1870:
  3330  0414                     l1872:
  3331                           
  3332                           ;Q4.c: 226:                 RC7=0;RC7=1;RC7=0;
  3333  0414  138E               	bcf	14,7	;volatile
  3334  0415                     l1874:
  3335  0415  178E               	bsf	14,7	;volatile
  3336  0416                     l1876:
  3337  0416  138E               	bcf	14,7	;volatile
  3338                           
  3339                           ;Q4.c: 227:                 break;
  3340  0417  2D27               	goto	l135
  3341  0418                     l1878:
  3342                           
  3343                           ;Q4.c: 229:                 if(flg==1)cw=0;flg=0;
  3344  0418  0366               	decf	_flg,w
  3345  0419  0467               	iorwf	_flg+1,w
  3346  041A  1D03               	btfss	3,2
  3347  041B  2C1D               	goto	u1301
  3348  041C  2C1E               	goto	u1300
  3349  041D                     u1301:
  3350  041D  2C20               	goto	l123
  3351  041E                     u1300:
  3352  041E                     l1880:
  3353  041E  01E4               	clrf	_cw
  3354  041F  01E5               	clrf	_cw+1
  3355  0420                     l123:
  3356  0420  01E6               	clrf	_flg
  3357  0421  01E7               	clrf	_flg+1
  3358  0422                     l1882:
  3359                           
  3360                           ;Q4.c: 230:                 if((cw==0)&&(ext==0)){cw=1;ccw=0;ext=1;PORTB=smd=0x09;}
  3361  0422  0864               	movf	_cw,w
  3362  0423  0465               	iorwf	_cw+1,w
  3363  0424  1D03               	btfss	3,2
  3364  0425  2C27               	goto	u1311
  3365  0426  2C28               	goto	u1310
  3366  0427                     u1311:
  3367  0427  2C3E               	goto	l1894
  3368  0428                     u1310:
  3369  0428                     l1884:
  3370  0428  0826               	movf	dynam@ext,w
  3371  0429  0427               	iorwf	dynam@ext+1,w
  3372  042A  1D03               	btfss	3,2
  3373  042B  2C2D               	goto	u1321
  3374  042C  2C2E               	goto	u1320
  3375  042D                     u1321:
  3376  042D  2C3E               	goto	l1894
  3377  042E                     u1320:
  3378  042E                     l1886:
  3379  042E  3001               	movlw	1
  3380  042F  00E4               	movwf	_cw
  3381  0430  3000               	movlw	0
  3382  0431  00E5               	movwf	_cw+1
  3383  0432                     l1888:
  3384  0432  01E2               	clrf	_ccw
  3385  0433  01E3               	clrf	_ccw+1
  3386  0434                     l1890:
  3387  0434  3001               	movlw	1
  3388  0435  00A6               	movwf	dynam@ext
  3389  0436  3000               	movlw	0
  3390  0437  00A7               	movwf	dynam@ext+1
  3391  0438                     l1892:
  3392  0438  3009               	movlw	9
  3393  0439  00A0               	movwf	dynam@smd
  3394  043A  3000               	movlw	0
  3395  043B  00A1               	movwf	dynam@smd+1
  3396  043C  0820               	movf	dynam@smd,w
  3397  043D  008D               	movwf	13	;volatile
  3398  043E                     l1894:
  3399                           
  3400                           ;Q4.c: 231:                 if((cw==1)&&(ext==0)){cw=2;ccw=3;ext=1;PORTB=smd=0x0C;}
  3401  043E  0364               	decf	_cw,w
  3402  043F  0465               	iorwf	_cw+1,w
  3403  0440  1D03               	btfss	3,2
  3404  0441  2C43               	goto	u1331
  3405  0442  2C44               	goto	u1330
  3406  0443                     u1331:
  3407  0443  2C5C               	goto	l1900
  3408  0444                     u1330:
  3409  0444                     l1896:
  3410  0444  0826               	movf	dynam@ext,w
  3411  0445  0427               	iorwf	dynam@ext+1,w
  3412  0446  1D03               	btfss	3,2
  3413  0447  2C49               	goto	u1341
  3414  0448  2C4A               	goto	u1340
  3415  0449                     u1341:
  3416  0449  2C5C               	goto	l1900
  3417  044A                     u1340:
  3418  044A                     l1898:
  3419  044A  3002               	movlw	2
  3420  044B  00E4               	movwf	_cw
  3421  044C  3000               	movlw	0
  3422  044D  00E5               	movwf	_cw+1
  3423  044E  3003               	movlw	3
  3424  044F  00E2               	movwf	_ccw
  3425  0450  3000               	movlw	0
  3426  0451  00E3               	movwf	_ccw+1
  3427  0452  3001               	movlw	1
  3428  0453  00A6               	movwf	dynam@ext
  3429  0454  3000               	movlw	0
  3430  0455  00A7               	movwf	dynam@ext+1
  3431  0456  300C               	movlw	12
  3432  0457  00A0               	movwf	dynam@smd
  3433  0458  3000               	movlw	0
  3434  0459  00A1               	movwf	dynam@smd+1
  3435  045A  0820               	movf	dynam@smd,w
  3436  045B  008D               	movwf	13	;volatile
  3437  045C                     l1900:
  3438                           
  3439                           ;Q4.c: 232:                 if((cw==2)&&(ext==0)){cw=3;ccw=2;ext=1;PORTB=smd=0x06;}
  3440  045C  3002               	movlw	2
  3441  045D  0664               	xorwf	_cw,w
  3442  045E  0465               	iorwf	_cw+1,w
  3443  045F  1D03               	btfss	3,2
  3444  0460  2C62               	goto	u1351
  3445  0461  2C63               	goto	u1350
  3446  0462                     u1351:
  3447  0462  2C7B               	goto	l1906
  3448  0463                     u1350:
  3449  0463                     l1902:
  3450  0463  0826               	movf	dynam@ext,w
  3451  0464  0427               	iorwf	dynam@ext+1,w
  3452  0465  1D03               	btfss	3,2
  3453  0466  2C68               	goto	u1361
  3454  0467  2C69               	goto	u1360
  3455  0468                     u1361:
  3456  0468  2C7B               	goto	l1906
  3457  0469                     u1360:
  3458  0469                     l1904:
  3459  0469  3003               	movlw	3
  3460  046A  00E4               	movwf	_cw
  3461  046B  3000               	movlw	0
  3462  046C  00E5               	movwf	_cw+1
  3463  046D  3002               	movlw	2
  3464  046E  00E2               	movwf	_ccw
  3465  046F  3000               	movlw	0
  3466  0470  00E3               	movwf	_ccw+1
  3467  0471  3001               	movlw	1
  3468  0472  00A6               	movwf	dynam@ext
  3469  0473  3000               	movlw	0
  3470  0474  00A7               	movwf	dynam@ext+1
  3471  0475  3006               	movlw	6
  3472  0476  00A0               	movwf	dynam@smd
  3473  0477  3000               	movlw	0
  3474  0478  00A1               	movwf	dynam@smd+1
  3475  0479  0820               	movf	dynam@smd,w
  3476  047A  008D               	movwf	13	;volatile
  3477  047B                     l1906:
  3478                           
  3479                           ;Q4.c: 233:                 if((cw==3)&&(ext==0)){cw=0;ccw=1;ext=1;PORTB=smd=0x03;}
  3480  047B  3003               	movlw	3
  3481  047C  0664               	xorwf	_cw,w
  3482  047D  0465               	iorwf	_cw+1,w
  3483  047E  1D03               	btfss	3,2
  3484  047F  2C81               	goto	u1371
  3485  0480  2C82               	goto	u1370
  3486  0481                     u1371:
  3487  0481  2C14               	goto	l1872
  3488  0482                     u1370:
  3489  0482                     l1908:
  3490  0482  0826               	movf	dynam@ext,w
  3491  0483  0427               	iorwf	dynam@ext+1,w
  3492  0484  1D03               	btfss	3,2
  3493  0485  2C87               	goto	u1381
  3494  0486  2C88               	goto	u1380
  3495  0487                     u1381:
  3496  0487  2C14               	goto	l1872
  3497  0488                     u1380:
  3498  0488                     l1910:
  3499  0488  01E4               	clrf	_cw
  3500  0489  01E5               	clrf	_cw+1
  3501  048A                     l1912:
  3502  048A  3001               	movlw	1
  3503  048B  00E2               	movwf	_ccw
  3504  048C  3000               	movlw	0
  3505  048D  00E3               	movwf	_ccw+1
  3506  048E                     l1914:
  3507  048E                     l1916:
  3508  048E  3003               	movlw	3
  3509  048F  00A0               	movwf	dynam@smd
  3510  0490  3000               	movlw	0
  3511  0491  00A1               	movwf	dynam@smd+1
  3512  0492  0820               	movf	dynam@smd,w
  3513  0493  008D               	movwf	13	;volatile
  3514  0494  2C14               	goto	l1872
  3515  0495                     l1924:
  3516                           
  3517                           ;Q4.c: 237:                 if(flg==1)ccw=0;flg=0;
  3518  0495  0366               	decf	_flg,w
  3519  0496  0467               	iorwf	_flg+1,w
  3520  0497  1D03               	btfss	3,2
  3521  0498  2C9A               	goto	u1391
  3522  0499  2C9B               	goto	u1390
  3523  049A                     u1391:
  3524  049A  2C9D               	goto	l129
  3525  049B                     u1390:
  3526  049B                     l1926:
  3527  049B  01E2               	clrf	_ccw
  3528  049C  01E3               	clrf	_ccw+1
  3529  049D                     l129:
  3530  049D  01E6               	clrf	_flg
  3531  049E  01E7               	clrf	_flg+1
  3532  049F                     l1928:
  3533                           
  3534                           ;Q4.c: 238:                 if((ccw==0)&&(ext==0)){ccw=1;cw=0;ext=1;PORTB=smd=0x03;}
  3535  049F  0862               	movf	_ccw,w
  3536  04A0  0463               	iorwf	_ccw+1,w
  3537  04A1  1D03               	btfss	3,2
  3538  04A2  2CA4               	goto	u1401
  3539  04A3  2CA5               	goto	u1400
  3540  04A4                     u1401:
  3541  04A4  2CBB               	goto	l1940
  3542  04A5                     u1400:
  3543  04A5                     l1930:
  3544  04A5  0826               	movf	dynam@ext,w
  3545  04A6  0427               	iorwf	dynam@ext+1,w
  3546  04A7  1D03               	btfss	3,2
  3547  04A8  2CAA               	goto	u1411
  3548  04A9  2CAB               	goto	u1410
  3549  04AA                     u1411:
  3550  04AA  2CBB               	goto	l1940
  3551  04AB                     u1410:
  3552  04AB                     l1932:
  3553  04AB  3001               	movlw	1
  3554  04AC  00E2               	movwf	_ccw
  3555  04AD  3000               	movlw	0
  3556  04AE  00E3               	movwf	_ccw+1
  3557  04AF                     l1934:
  3558  04AF  01E4               	clrf	_cw
  3559  04B0  01E5               	clrf	_cw+1
  3560  04B1                     l1936:
  3561  04B1  3001               	movlw	1
  3562  04B2  00A6               	movwf	dynam@ext
  3563  04B3  3000               	movlw	0
  3564  04B4  00A7               	movwf	dynam@ext+1
  3565  04B5                     l1938:
  3566  04B5  3003               	movlw	3
  3567  04B6  00A0               	movwf	dynam@smd
  3568  04B7  3000               	movlw	0
  3569  04B8  00A1               	movwf	dynam@smd+1
  3570  04B9  0820               	movf	dynam@smd,w
  3571  04BA  008D               	movwf	13	;volatile
  3572  04BB                     l1940:
  3573                           
  3574                           ;Q4.c: 239:                 if((ccw==1)&&(ext==0)){ccw=2;cw=3;ext=1;PORTB=smd=0x06;}
  3575  04BB  0362               	decf	_ccw,w
  3576  04BC  0463               	iorwf	_ccw+1,w
  3577  04BD  1D03               	btfss	3,2
  3578  04BE  2CC0               	goto	u1421
  3579  04BF  2CC1               	goto	u1420
  3580  04C0                     u1421:
  3581  04C0  2CD9               	goto	l1946
  3582  04C1                     u1420:
  3583  04C1                     l1942:
  3584  04C1  0826               	movf	dynam@ext,w
  3585  04C2  0427               	iorwf	dynam@ext+1,w
  3586  04C3  1D03               	btfss	3,2
  3587  04C4  2CC6               	goto	u1431
  3588  04C5  2CC7               	goto	u1430
  3589  04C6                     u1431:
  3590  04C6  2CD9               	goto	l1946
  3591  04C7                     u1430:
  3592  04C7                     l1944:
  3593  04C7  3002               	movlw	2
  3594  04C8  00E2               	movwf	_ccw
  3595  04C9  3000               	movlw	0
  3596  04CA  00E3               	movwf	_ccw+1
  3597  04CB  3003               	movlw	3
  3598  04CC  00E4               	movwf	_cw
  3599  04CD  3000               	movlw	0
  3600  04CE  00E5               	movwf	_cw+1
  3601  04CF  3001               	movlw	1
  3602  04D0  00A6               	movwf	dynam@ext
  3603  04D1  3000               	movlw	0
  3604  04D2  00A7               	movwf	dynam@ext+1
  3605  04D3  3006               	movlw	6
  3606  04D4  00A0               	movwf	dynam@smd
  3607  04D5  3000               	movlw	0
  3608  04D6  00A1               	movwf	dynam@smd+1
  3609  04D7  0820               	movf	dynam@smd,w
  3610  04D8  008D               	movwf	13	;volatile
  3611  04D9                     l1946:
  3612                           
  3613                           ;Q4.c: 240:                 if((ccw==2)&&(ext==0)){ccw=3;cw=2;ext=1;PORTB=smd=0x0C;}
  3614  04D9  3002               	movlw	2
  3615  04DA  0662               	xorwf	_ccw,w
  3616  04DB  0463               	iorwf	_ccw+1,w
  3617  04DC  1D03               	btfss	3,2
  3618  04DD  2CDF               	goto	u1441
  3619  04DE  2CE0               	goto	u1440
  3620  04DF                     u1441:
  3621  04DF  2CF8               	goto	l1952
  3622  04E0                     u1440:
  3623  04E0                     l1948:
  3624  04E0  0826               	movf	dynam@ext,w
  3625  04E1  0427               	iorwf	dynam@ext+1,w
  3626  04E2  1D03               	btfss	3,2
  3627  04E3  2CE5               	goto	u1451
  3628  04E4  2CE6               	goto	u1450
  3629  04E5                     u1451:
  3630  04E5  2CF8               	goto	l1952
  3631  04E6                     u1450:
  3632  04E6                     l1950:
  3633  04E6  3003               	movlw	3
  3634  04E7  00E2               	movwf	_ccw
  3635  04E8  3000               	movlw	0
  3636  04E9  00E3               	movwf	_ccw+1
  3637  04EA  3002               	movlw	2
  3638  04EB  00E4               	movwf	_cw
  3639  04EC  3000               	movlw	0
  3640  04ED  00E5               	movwf	_cw+1
  3641  04EE  3001               	movlw	1
  3642  04EF  00A6               	movwf	dynam@ext
  3643  04F0  3000               	movlw	0
  3644  04F1  00A7               	movwf	dynam@ext+1
  3645  04F2  300C               	movlw	12
  3646  04F3  00A0               	movwf	dynam@smd
  3647  04F4  3000               	movlw	0
  3648  04F5  00A1               	movwf	dynam@smd+1
  3649  04F6  0820               	movf	dynam@smd,w
  3650  04F7  008D               	movwf	13	;volatile
  3651  04F8                     l1952:
  3652                           
  3653                           ;Q4.c: 241:                 if((ccw==3)&&(ext==0)){ccw=0;cw=1;ext=1;PORTB=smd=0x09;}
  3654  04F8  3003               	movlw	3
  3655  04F9  0662               	xorwf	_ccw,w
  3656  04FA  0463               	iorwf	_ccw+1,w
  3657  04FB  1D03               	btfss	3,2
  3658  04FC  2CFE               	goto	u1461
  3659  04FD  2CFF               	goto	u1460
  3660  04FE                     u1461:
  3661  04FE  2C14               	goto	l1872
  3662  04FF                     u1460:
  3663  04FF                     l1954:
  3664  04FF  0826               	movf	dynam@ext,w
  3665  0500  0427               	iorwf	dynam@ext+1,w
  3666  0501  1D03               	btfss	3,2
  3667  0502  2D04               	goto	u1471
  3668  0503  2D05               	goto	u1470
  3669  0504                     u1471:
  3670  0504  2C14               	goto	l1872
  3671  0505                     u1470:
  3672  0505                     l1956:
  3673  0505  01E2               	clrf	_ccw
  3674  0506  01E3               	clrf	_ccw+1
  3675  0507                     l1958:
  3676  0507  3001               	movlw	1
  3677  0508  00E4               	movwf	_cw
  3678  0509  3000               	movlw	0
  3679  050A  00E5               	movwf	_cw+1
  3680  050B                     l1960:
  3681  050B                     l1962:
  3682  050B  3009               	movlw	9
  3683  050C  00A0               	movwf	dynam@smd
  3684  050D  3000               	movlw	0
  3685  050E  00A1               	movwf	dynam@smd+1
  3686  050F  0820               	movf	dynam@smd,w
  3687  0510  008D               	movwf	13	;volatile
  3688  0511  2C14               	goto	l1872
  3689  0512                     l1970:
  3690                           
  3691                           ;Q4.c: 245:                 cw=ccw=0;
  3692  0512  01E2               	clrf	_ccw
  3693  0513  01E3               	clrf	_ccw+1
  3694  0514  01E4               	clrf	_cw
  3695  0515  01E5               	clrf	_cw+1
  3696                           
  3697                           ;Q4.c: 246:                 break;
  3698  0516  2D27               	goto	l135
  3699  0517                     l1974:
  3700                           
  3701                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3702                           ; Switch size 1, requested type "simple"
  3703                           ; Number of cases is 1, Range of values is 0 to 0
  3704                           ; switch strategies available:
  3705                           ; Name         Instructions Cycles
  3706                           ; simple_byte            4     3 (average)
  3707                           ; direct_byte            8     6 (fixed)
  3708                           ; jumptable            260     6 (fixed)
  3709                           ;	Chosen strategy is simple_byte
  3710  0517  0875               	movf	dynam@smdata+1,w
  3711  0518  3A00               	xorlw	0	; case 0
  3712  0519  1903               	skipnz
  3713  051A  2D1C               	goto	l2726
  3714  051B  2D12               	goto	l1970
  3715  051C                     l2726:
  3716                           
  3717                           ; Switch size 1, requested type "simple"
  3718                           ; Number of cases is 3, Range of values is 0 to 2
  3719                           ; switch strategies available:
  3720                           ; Name         Instructions Cycles
  3721                           ; simple_byte           10     6 (average)
  3722                           ; direct_byte           12     6 (fixed)
  3723                           ; jumptable            260     6 (fixed)
  3724                           ;	Chosen strategy is simple_byte
  3725  051C  0874               	movf	dynam@smdata,w
  3726  051D  3A00               	xorlw	0	; case 0
  3727  051E  1903               	skipnz
  3728  051F  2C13               	goto	l1868
  3729  0520  3A01               	xorlw	1	; case 1
  3730  0521  1903               	skipnz
  3731  0522  2C18               	goto	l1878
  3732  0523  3A03               	xorlw	3	; case 2
  3733  0524  1903               	skipnz
  3734  0525  2C95               	goto	l1924
  3735  0526  2D12               	goto	l1970
  3736  0527                     l135:
  3737  0527  0008               	return
  3738  0528                     __end_of_dynam:
  3739  007E                     btemp	set	126	;btemp
  3740  007E                     wtemp0	set	126
  3741                           
  3742                           	psect	config
  3743                           
  3744                           ;Config register CONFIG1 @ 0x8007
  3745                           ;	Oscillator Selection
  3746                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  3747                           ;	Watchdog Timer Enable
  3748                           ;	WDTE = OFF, WDT disabled
  3749                           ;	Power-up Timer Enable
  3750                           ;	PWRTE = OFF, PWRT disabled
  3751                           ;	MCLR Pin Function Select
  3752                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  3753                           ;	Flash Program Memory Code Protection
  3754                           ;	CP = OFF, Program memory code protection is disabled
  3755                           ;	Data Memory Code Protection
  3756                           ;	CPD = OFF, Data memory code protection is disabled
  3757                           ;	Brown-out Reset Enable
  3758                           ;	BOREN = OFF, Brown-out Reset disabled
  3759                           ;	Clock Out Enable
  3760                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  3761                           ;	Internal/External Switchover
  3762                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3763                           ;	Fail-Safe Clock Monitor Enable
  3764                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3765  8007                     	org	32775
  3766  8007  09E4               	dw	2532
  3767                           
  3768                           ;Config register CONFIG2 @ 0x8008
  3769                           ;	Flash Memory Self-Write Protection
  3770                           ;	WRT = OFF, Write protection off
  3771                           ;	Voltage Regulator Capacitor Enable
  3772                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
  3773                           ;	PLL Enable
  3774                           ;	PLLEN = OFF, 4x PLL disabled
  3775                           ;	Stack Overflow/Underflow Reset Enable
  3776                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  3777                           ;	Brown-out Reset Voltage Selection
  3778                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  3779                           ;	Low-Voltage Programming Enable
  3780                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  3781  8008                     	org	32776
  3782  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    0
    Data        156
    BSS         34
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     50      80
    BANK1            80      0      72
    BANK2            80      0      54
    BANK3            80      0      32
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_motorStop
    _main->_waitSEGStop
    _waitSEGStop->_tact
    _motorStop->_tact
    _tact->_tactsw
    _motor->_dynam

Critical Paths under _main in BANK0

    _main->_motorStop
    _waitSEGStop->_dynam
    _motorStop->_dynam
    _motor->_dynam

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                24    24      0   25217
                                             26 BANK0     24    24      0
                              _dynam
                               _fclr
                              _motor
                          _motorStop
                           _portinit
                        _waitSEGStop
                             _zenoff
 ---------------------------------------------------------------------------------
 (1) _zenoff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _waitSEGStop                                         16     8      8    6260
                                             10 COMMON     2     2      0
                                              8 BANK0     14     6      8
                            ___lwdiv
                              _dynam
                               _fclr
                               _tact
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     466
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _portinit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorStop                                           20     8     12    6185
                                             10 COMMON     2     2      0
                                              8 BANK0     18     6     12
                              _dynam
                               _fclr
                               _tact
 ---------------------------------------------------------------------------------
 (2) _tact                                                 2     0      2     442
                                              8 COMMON     2     0      2
                             _tactsw
 ---------------------------------------------------------------------------------
 (3) _tactsw                                               8     8      0     116
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 (2) _fclr                                                 2     0      2     706
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _motor                                               12     2     10    8127
                                              8 COMMON     2     2      0
                                              8 BANK0     10     0     10
                              _dynam
 ---------------------------------------------------------------------------------
 (2) _dynam                                               16     8      8    3791
                                              0 COMMON     8     0      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _dynam
   _fclr
   _motor
     _dynam
   _motorStop
     _dynam
     _fclr
     _tact
       _tactsw
   _portinit
   _waitSEGStop
     ___lwdiv
     _dynam
     _fclr
     _tact
       _tactsw
   _zenoff

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     32      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      48       7       90.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      36       9       67.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      20      11       40.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      FC      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      FC      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed May 26 18:26:07 2021

                     l95 00F2                       _cw 0064                      l112 03DA  
                    l114 03EA                      l123 0420                      l116 0400  
                    l108 00DF                      l300 06BC                      l118 0410  
                    l302 05DF                      l135 0527                      l208 0297  
                    l129 049D                      l217 0112                      l313 071D  
                    l307 06A0                      l318 0792                      l193 0205  
                    l281 0322                      l265 03BD                      l274 0156  
                    l294 0531                      l296 053E                      l758 01C8  
                    _RA0 0060                      _RA1 0061                      _RA2 0062  
                    _RC0 0070                      _RC1 0071                      _RC2 0072  
                    _RC5 0075                      _RC6 0076                      _RC7 0077  
                    _ccw 0062                      _flg 0066                      wreg 0009  
                   l2000 0279                     l2002 027F                     l2020 00FC  
                   l2100 034A                     l2014 00F3                     l2030 018D  
                   l2110 037E                     l2102 034E                     l2016 00F4  
                   l2024 0102                     l2008 0287                     l2040 01A1  
                   l2032 018F                     l2120 03A0                     l2112 0382  
                   l2018 00F8                     l2202 031B                     l2050 01BE  
                   l2042 01A5                     l2034 0195                     l2130 03AB  
                   l2114 0389                     l2106 0355                     l2060 00E6  
                   l2044 01B4                     l2036 0198                     l2052 01C4  
                   l2132 03B1                     l2140 03B6                     l2108 036C  
                   l2150 0138                     l2206 0320                     l2062 00ED  
                   l2046 01B8                     l2038 019D                     l2118 038F  
                   l2160 0298                     l2064 00F0                     l2056 00E0  
                   l2048 01B9                     l2128 03A5                     l2144 03BB  
                   l2154 013D                     l2170 02D1                     l2162 02AF  
                   l2058 00E3                     l2090 00DC                     l2156 0151  
                   l2148 0133                     l2172 02E3                     l2180 02F4  
                   l2164 02B3                     l2092 00DD                     l2500 055B  
                   l2182 0305                     l2190 030A                     l2174 02E7  
                   l2094 00DE                     l2086 00D7                     l2510 059A  
                   l2502 055F                     l2192 0310                     l2176 02EE  
                   l2168 02B8                     l2096 0323                     l2088 00DB  
                   l2512 05A0                     l2520 05FB                     l2504 0571  
                   l1810 01D9                     l2194 0316                     l2098 033A  
                   l2522 061B                     l2514 05F1                     l2506 0576  
                   l1900 045C                     l1812 01E3                     l2540 072F  
                   l2532 06C0                     l2524 0621                     l2516 05F6  
                   l2508 057A                     l1910 0488                     l1902 0463  
                   l1830 03C8                     l1822 0200                     l1814 01E8  
                   l1806 01C9                     l2550 0767                     l2542 0734  
                   l2534 06C4                     l2526 06B2                     l2470 0531  
                   l1912 048A                     l1904 0469                     l1840 03DE  
                   l1832 03C9                     l1824 03BE                     l1816 01EA  
                   l1808 01CD                     l2560 07C0                     l2552 07A4  
                   l2536 06EC                     l2528 06B7                     l2480 053A  
                   l2472 0531                     l2464 0528                     l1930 04A5  
                   l1914 048E                     l1906 047B                     l1850 03EE  
                   l1834 03CA                     l1826 03C5                     l1818 01F3  
                   l2722 028C                     l2562 07C5                     l2554 07A9  
                   l2538 06F2                     l2546 0739                     l2490 0556  
                   l2482 054F                     l2474 0531                     l2466 052B  
                   l1932 04AB                     l1940 04BB                     l1924 0495  
                   l1916 048E                     l1908 0482                     l1860 0404  
                   l1852 03EF                     l1844 03E5                     l1836 03D1  
                   l1828 03C6                     l2724 0107                     l2548 0761  
                   l2492 0556                     l2484 0556                     l2476 0531  
                   l2468 0531                     l2726 051C                     l1950 04E6  
                   l1942 04C1                     l1934 04AF                     l1926 049B  
                   l1870 0414                     l1854 03F0                     l1838 03D6  
                   l2558 07AE                     l2494 0556                     l2486 0556  
                   l2478 0536                     l1960 050B                     l1952 04F8  
                   l1944 04C7                     l1936 04B1                     l1928 049F  
                   l1880 041E                     l1872 0414                     l1864 040B  
                   l1856 03F7                     l1848 03EC                     l2496 0556  
                   l2488 0556                     l1970 0512                     l1962 050B  
                   l1954 04FF                     l1946 04D9                     l1938 04B5  
                   l1890 0434                     l1882 0422                     l1874 0415  
                   l1858 03FC                     l2498 0556                     l1956 0505  
                   l1948 04E0                     l1892 0438                     l1884 0428  
                   l1876 0416                     l1868 0413                     l1980 024C  
                   l1958 0507                     l1886 042E                     l1894 043E  
                   l1878 0418                     l1974 0517                     l1990 025F  
                   l1982 024D                     l1896 0444                     l1888 0432  
                   l1992 0265                     l1984 0250                     l1898 044A  
                   l1994 026B                     l1986 0256                     l1996 026E  
                   l1988 025C                     l1998 0274                     u1300 041E  
                   u1301 041D                     u1310 0428                     u1311 0427  
                   u1400 04A5                     u1320 042E                     u1240 01E3  
                   u2200 0545                     u1401 04A4                     u1321 042D  
                   u1241 01E2                     u2201 0542                     u1410 04AB  
                   u1330 0444                     u1250 01F3                     u2210 054D  
                   u1411 04AA                     u1331 0443                     u1251 01F2  
                   u2211 054A                     u1420 04C1                     u1340 044A  
                   u1260 03D1                     u1500 0274                     u2300 0621  
                   u1421 04C0                     u1341 0449                     u1261 03D0  
                   u1245 01DF                     u1501 0273                     u2301 0620  
                   u1430 04C7                     u1350 0463                     u1270 03E4  
                   u1510 027F                     u2310 06B7                     u2230 055B  
                   u2214 0547                     u1431 04C6                     u1351 0462  
                   u1271 03E3                     u1511 027E                     u2311 06B6  
                   u2231 055A                     u1440 04E0                     u1360 0469  
                   u1280 03F7                     u1520 0286                     u2400 07AD  
                   u2320 06BB                     u2240 055F                     u2224 054F  
                   u1441 04DF                     u1361 0468                     u1281 03F6  
                   u1521 0285                     u2401 07AC                     u2321 06BA  
                   u2241 055E                     u1450 04E6                     u1370 0482  
                   u1290 040A                     u1530 0195                     u2410 07C5  
                   u2330 06C0                     u2250 0576                     u2170 0536  
                   u1451 04E5                     u1371 0481                     u1291 0409  
                   u1531 0194                     u2411 07C4                     u2331 06BF  
                   u2251 0575                     u2171 0535                     u1460 04FF  
                   u1380 0488                     u1700 013C                     u1620 0354  
                   u2420 07C9                     u2340 06C4                     u2260 057A  
                   u2180 053A                     u1461 04FE                     u1381 0487  
                   u1701 013B                     u1621 0353                     u2421 07C8  
                   u2341 06C3                     u2261 0579                     u2181 0539  
                   u1470 0505                     u1390 049B                     u1710 02B7  
                   u1550 01A5                     u1630 037E                     u2350 06F2  
                   u2270 05A0                     u2190 053E                     u1471 0504  
                   u1391 049A                     u1711 02B6                     u1551 01A4  
                   u1631 037D                     u2351 06F1                     u2271 059F  
                   u2191 053D                     u1480 0256                     u1720 02E3  
                   u1640 0382                     u2360 0734                     u2280 05F6  
                   u1481 0255                     u1721 02E2                     u1545 0199  
                   u1641 0381                     u2361 0733                     u2281 05F5  
                   u1490 0265                     u1730 02E7                     u1570 01B4  
                   u1650 03A0                     u2370 0738                     u2290 05FA  
                   u1491 0264                     u1731 02E6                     u1571 01B3  
                   u1651 039F                     u1635 037A                     u2371 0737  
                   u2291 05F9                     u1740 0305                     u1660 03A4  
                   u2380 0767                     u1741 0304                     u1725 02DF  
                   u1565 01A6                     u1661 03A3                     u2381 0766  
                   u1750 0309                     u1590 01C4                     u1670 03AB  
                   u2390 07A9                     u1751 0308                     u1591 01C3  
                   u1575 01B0                     u1671 03AA                     u1655 039C  
                   u2391 07A8                     u1760 0310                     u1680 03B1  
                   u1761 030F                     u1745 0301                     u1585 01BA  
                   u1681 03B0                     u1770 0316                     u1690 03B5  
                   u1771 0315                     u1691 03B4                     u1780 031A  
                   u1781 0319                     _atai 005C                     _fclr 00F3  
                   _main 0528                     _num0 00C0                     _kisu 014C  
                   _moja 0140                     _samf 01A0                     _mojf 0134  
                   _tact 024C                     _mojh 00E2                     _moji 0120  
                   _mojn 00DE                     _samp 00A0                     _gusu 00D4  
                   fsr0h 0005                     fsr1h 0007                     indf0 0000  
                   fsr0l 0004                     fsr1l 0006                     btemp 007E  
                   start 0002              main@zyoutai 0050                    ?_fclr 0070  
                  ?_main 0070                    ?_tact 0078          __end_of___lwdiv 01C9  
                  _PORTA 000C                    _PORTB 000D                    _PORTC 000E  
                  _TRISA 008C                    _TRISB 008D                    _TRISC 008E  
                  _code1 00E6                    _atai1 005E                    _count 005A  
                  _dynam 03BE                    _fugou 0052                    _motor 0133  
                  status 0003                    wtemp0 007E          __initialization 07CC  
           __end_of_fclr 0113             __end_of_main 07CC             __end_of_tact 0298  
                 ??_fclr 0072                   ??_main 007C                   ??_tact 007A  
                 ?_dynam 0070                   ?_motor 0028             ?_waitSEGStop 0028  
                 _ANSELA 018C                   _ANSELB 018D                   _OSCCON 0099  
            dynam@smdata 0074          waitSEGStop@seg1 0028          waitSEGStop@seg2 002A  
                 _code10 0054                   _atai10 0060                   _flag_P 0068  
                 _flag_R 006A                ??___lwdiv 0074                   _tactsw 01C9  
                 _zenoff 00D7                   dynam@j 0024                   motor@i 0078  
       __end_of_portinit 00F3  __end_of__initialization 07FD           __pcstackCOMMON 0070  
           __pidataBANK1 0206             __pidataBANK2 0157             __pidataBANK3 0113  
          __end_of_dynam 0528            __end_of_motor 0157                  ??_dynam 0078  
                ??_motor 0078               __pbssBANK0 0052               __pbssBANK1 00E6  
             __pmaintext 0528                  ?_tactsw 0070                  ?_zenoff 0070  
     __size_of_motorStop 008B     __size_of_waitSEGStop 009B         waitSEGStop@cpSW1 0030  
       waitSEGStop@cpSW2 0032         waitSEGStop@dousa 002E                ?_portinit 0070  
                ___lwdiv 018D                  _code100 0056          __size_of_tactsw 003D  
                __ptext1 00D7                  __ptext2 0323                  __ptext3 018D  
                __ptext4 00E0                  __ptext5 0298                  __ptext6 024C  
                __ptext7 01C9                  __ptext8 00F3                  __ptext9 0133  
        __size_of_zenoff 0009                  fclr@flg 0070              motor@kakudo 0028  
                clrloop0 00CC     end_of_initialization 07FD              motor@smdata 002E  
                dynam@tm 0022                  dynam@tr 0076                  init_ram 00D1  
                initloop 00D2        __end_of_motorStop 0323                  tactsw@a 0076  
                tactsw@b 0072                  tactsw@c 0074          motorStop@kakudo 0028  
                motor@tr 0030              motorStop@tr 0030          motorStop@smdata 002E  
             ??_portinit 0070            waitSEGStop@wt 002C           __end_of_tactsw 0206  
         __end_of_zenoff 00E0      start_initialization 07CC              __pdataBANK1 00A0  
            __pdataBANK2 0120              __pdataBANK3 01A0                 ??_tactsw 0070  
               ??_zenoff 0070              __pbssCOMMON 007C                ___latbits 0003  
          __pcstackBANK0 0020         ___lwdiv@dividend 0072                 ?___lwdiv 0070  
      __size_of_portinit 0013         ___lwdiv@quotient 0075            ??_waitSEGStop 007A  
         __size_of_dynam 016A           __size_of_motor 0024            dynam@dig1data 0070  
          dynam@dig2data 0072                clear_ram0 00CB           motorStop@cpSW1 0034  
         motorStop@cpSW2 0036           motorStop@dousa 0032               motorStop@i 0038  
          motor@dig1data 002A            motor@dig2data 002C                _motorStop 0298  
           waitSEGStop@i 0034      __end_of_waitSEGStop 03BE               ?_motorStop 0028  
       __size_of___lwdiv 003C                 _code1000 0058        motorStop@dig1data 002A  
      motorStop@dig2data 002C          ___lwdiv@divisor 0070          ___lwdiv@counter 0077  
               __ptext10 03BE                 _flag_sw1 006E                 _flag_sw2 006C  
               _flag_sw3 007C            __size_of_fclr 0020            __size_of_main 02A4  
          __size_of_tact 004C                 _portinit 00E0                 dynam@ext 0026  
               dynam@smd 0020                 tact@mode 0078              _waitSEGStop 0323  
            ??_motorStop 007A  
