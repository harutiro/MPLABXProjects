

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Jun 05 11:52:48 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F1938
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    12                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.20
    32                           ; Generated 12/02/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F1938 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0016                     	;# 
    87  0017                     	;# 
    88  0018                     	;# 
    89  0019                     	;# 
    90  001A                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  010C                     	;# 
   114  010D                     	;# 
   115  010E                     	;# 
   116  0110                     	;# 
   117  0111                     	;# 
   118  0112                     	;# 
   119  0113                     	;# 
   120  0114                     	;# 
   121  0115                     	;# 
   122  0116                     	;# 
   123  0117                     	;# 
   124  0118                     	;# 
   125  0119                     	;# 
   126  011A                     	;# 
   127  011B                     	;# 
   128  011D                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0191                     	;# 
   132  0191                     	;# 
   133  0192                     	;# 
   134  0193                     	;# 
   135  0193                     	;# 
   136  0193                     	;# 
   137  0194                     	;# 
   138  0195                     	;# 
   139  0196                     	;# 
   140  0199                     	;# 
   141  019A                     	;# 
   142  019B                     	;# 
   143  019B                     	;# 
   144  019B                     	;# 
   145  019B                     	;# 
   146  019C                     	;# 
   147  019C                     	;# 
   148  019D                     	;# 
   149  019E                     	;# 
   150  019F                     	;# 
   151  020D                     	;# 
   152  0210                     	;# 
   153  0211                     	;# 
   154  0212                     	;# 
   155  0213                     	;# 
   156  0214                     	;# 
   157  0215                     	;# 
   158  0215                     	;# 
   159  0216                     	;# 
   160  0217                     	;# 
   161  0291                     	;# 
   162  0291                     	;# 
   163  0292                     	;# 
   164  0293                     	;# 
   165  0294                     	;# 
   166  0295                     	;# 
   167  0295                     	;# 
   168  0296                     	;# 
   169  0298                     	;# 
   170  0298                     	;# 
   171  0299                     	;# 
   172  029A                     	;# 
   173  029B                     	;# 
   174  029C                     	;# 
   175  029C                     	;# 
   176  029D                     	;# 
   177  029E                     	;# 
   178  029F                     	;# 
   179  0311                     	;# 
   180  0311                     	;# 
   181  0312                     	;# 
   182  0313                     	;# 
   183  0314                     	;# 
   184  0315                     	;# 
   185  0315                     	;# 
   186  0316                     	;# 
   187  0318                     	;# 
   188  0318                     	;# 
   189  0319                     	;# 
   190  031A                     	;# 
   191  031C                     	;# 
   192  031C                     	;# 
   193  031D                     	;# 
   194  031E                     	;# 
   195  0394                     	;# 
   196  0395                     	;# 
   197  0396                     	;# 
   198  0415                     	;# 
   199  0416                     	;# 
   200  0417                     	;# 
   201  041C                     	;# 
   202  041D                     	;# 
   203  041E                     	;# 
   204  0791                     	;# 
   205  0792                     	;# 
   206  0793                     	;# 
   207  0794                     	;# 
   208  0795                     	;# 
   209  0798                     	;# 
   210  0799                     	;# 
   211  07A0                     	;# 
   212  07A1                     	;# 
   213  07A3                     	;# 
   214  07A4                     	;# 
   215  07A6                     	;# 
   216  07A7                     	;# 
   217  07A9                     	;# 
   218  07AA                     	;# 
   219  0FE4                     	;# 
   220  0FE5                     	;# 
   221  0FE6                     	;# 
   222  0FE7                     	;# 
   223  0FE8                     	;# 
   224  0FE9                     	;# 
   225  0FEA                     	;# 
   226  0FEB                     	;# 
   227  0FED                     	;# 
   228  0FEE                     	;# 
   229  0FEF                     	;# 
   230  0000                     	;# 
   231  0001                     	;# 
   232  0002                     	;# 
   233  0003                     	;# 
   234  0004                     	;# 
   235  0005                     	;# 
   236  0006                     	;# 
   237  0007                     	;# 
   238  0008                     	;# 
   239  0009                     	;# 
   240  000A                     	;# 
   241  000B                     	;# 
   242  000C                     	;# 
   243  000D                     	;# 
   244  000E                     	;# 
   245  0010                     	;# 
   246  0011                     	;# 
   247  0012                     	;# 
   248  0013                     	;# 
   249  0015                     	;# 
   250  0016                     	;# 
   251  0016                     	;# 
   252  0017                     	;# 
   253  0018                     	;# 
   254  0019                     	;# 
   255  001A                     	;# 
   256  001B                     	;# 
   257  001C                     	;# 
   258  001E                     	;# 
   259  001F                     	;# 
   260  008C                     	;# 
   261  008D                     	;# 
   262  008E                     	;# 
   263  0090                     	;# 
   264  0091                     	;# 
   265  0092                     	;# 
   266  0093                     	;# 
   267  0095                     	;# 
   268  0096                     	;# 
   269  0097                     	;# 
   270  0098                     	;# 
   271  0099                     	;# 
   272  009A                     	;# 
   273  009B                     	;# 
   274  009B                     	;# 
   275  009C                     	;# 
   276  009D                     	;# 
   277  009E                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  0110                     	;# 
   282  0111                     	;# 
   283  0112                     	;# 
   284  0113                     	;# 
   285  0114                     	;# 
   286  0115                     	;# 
   287  0116                     	;# 
   288  0117                     	;# 
   289  0118                     	;# 
   290  0119                     	;# 
   291  011A                     	;# 
   292  011B                     	;# 
   293  011D                     	;# 
   294  018C                     	;# 
   295  018D                     	;# 
   296  0191                     	;# 
   297  0191                     	;# 
   298  0192                     	;# 
   299  0193                     	;# 
   300  0193                     	;# 
   301  0193                     	;# 
   302  0194                     	;# 
   303  0195                     	;# 
   304  0196                     	;# 
   305  0199                     	;# 
   306  019A                     	;# 
   307  019B                     	;# 
   308  019B                     	;# 
   309  019B                     	;# 
   310  019B                     	;# 
   311  019C                     	;# 
   312  019C                     	;# 
   313  019D                     	;# 
   314  019E                     	;# 
   315  019F                     	;# 
   316  020D                     	;# 
   317  0210                     	;# 
   318  0211                     	;# 
   319  0212                     	;# 
   320  0213                     	;# 
   321  0214                     	;# 
   322  0215                     	;# 
   323  0215                     	;# 
   324  0216                     	;# 
   325  0217                     	;# 
   326  0291                     	;# 
   327  0291                     	;# 
   328  0292                     	;# 
   329  0293                     	;# 
   330  0294                     	;# 
   331  0295                     	;# 
   332  0295                     	;# 
   333  0296                     	;# 
   334  0298                     	;# 
   335  0298                     	;# 
   336  0299                     	;# 
   337  029A                     	;# 
   338  029B                     	;# 
   339  029C                     	;# 
   340  029C                     	;# 
   341  029D                     	;# 
   342  029E                     	;# 
   343  029F                     	;# 
   344  0311                     	;# 
   345  0311                     	;# 
   346  0312                     	;# 
   347  0313                     	;# 
   348  0314                     	;# 
   349  0315                     	;# 
   350  0315                     	;# 
   351  0316                     	;# 
   352  0318                     	;# 
   353  0318                     	;# 
   354  0319                     	;# 
   355  031A                     	;# 
   356  031C                     	;# 
   357  031C                     	;# 
   358  031D                     	;# 
   359  031E                     	;# 
   360  0394                     	;# 
   361  0395                     	;# 
   362  0396                     	;# 
   363  0415                     	;# 
   364  0416                     	;# 
   365  0417                     	;# 
   366  041C                     	;# 
   367  041D                     	;# 
   368  041E                     	;# 
   369  0791                     	;# 
   370  0792                     	;# 
   371  0793                     	;# 
   372  0794                     	;# 
   373  0795                     	;# 
   374  0798                     	;# 
   375  0799                     	;# 
   376  07A0                     	;# 
   377  07A1                     	;# 
   378  07A3                     	;# 
   379  07A4                     	;# 
   380  07A6                     	;# 
   381  07A7                     	;# 
   382  07A9                     	;# 
   383  07AA                     	;# 
   384  0FE4                     	;# 
   385  0FE5                     	;# 
   386  0FE6                     	;# 
   387  0FE7                     	;# 
   388  0FE8                     	;# 
   389  0FE9                     	;# 
   390  0FEA                     	;# 
   391  0FEB                     	;# 
   392  0FED                     	;# 
   393  0FEE                     	;# 
   394  0FEF                     	;# 
   395                           
   396                           	psect	idataBANK1
   397  0297                     __pidataBANK1:
   398                           
   399                           ;initializer for _samp
   400  0297  343F               	retlw	63
   401  0298  3400               	retlw	0
   402  0299  3406               	retlw	6
   403  029A  3400               	retlw	0
   404  029B  345B               	retlw	91
   405  029C  3400               	retlw	0
   406  029D  344F               	retlw	79
   407  029E  3400               	retlw	0
   408  029F  3466               	retlw	102
   409  02A0  3400               	retlw	0
   410  02A1  346D               	retlw	109
   411  02A2  3400               	retlw	0
   412  02A3  347D               	retlw	125
   413  02A4  3400               	retlw	0
   414  02A5  3427               	retlw	39
   415  02A6  3400               	retlw	0
   416  02A7  347F               	retlw	127
   417  02A8  3400               	retlw	0
   418  02A9  346F               	retlw	111
   419  02AA  3400               	retlw	0
   420  02AB  345F               	retlw	95
   421  02AC  3400               	retlw	0
   422  02AD  347C               	retlw	124
   423  02AE  3400               	retlw	0
   424  02AF  3458               	retlw	88
   425  02B0  3400               	retlw	0
   426  02B1  345E               	retlw	94
   427  02B2  3400               	retlw	0
   428  02B3  3479               	retlw	121
   429  02B4  3400               	retlw	0
   430  02B5  3471               	retlw	113
   431  02B6  3400               	retlw	0
   432                           
   433                           ;initializer for _num0
   434  02B7  343F               	retlw	63
   435  02B8  3400               	retlw	0
   436  02B9  3406               	retlw	6
   437  02BA  3400               	retlw	0
   438  02BB  345B               	retlw	91
   439  02BC  3400               	retlw	0
   440  02BD  344F               	retlw	79
   441  02BE  3400               	retlw	0
   442  02BF  3466               	retlw	102
   443  02C0  3400               	retlw	0
   444  02C1  346D               	retlw	109
   445  02C2  3400               	retlw	0
   446  02C3  347D               	retlw	125
   447  02C4  3400               	retlw	0
   448  02C5  3427               	retlw	39
   449  02C6  3400               	retlw	0
   450  02C7  347F               	retlw	127
   451  02C8  3400               	retlw	0
   452  02C9  346F               	retlw	111
   453  02CA  3400               	retlw	0
   454                           
   455                           ;initializer for _gusu
   456  02CB  343F               	retlw	63
   457  02CC  3400               	retlw	0
   458  02CD  345B               	retlw	91
   459  02CE  3400               	retlw	0
   460  02CF  3466               	retlw	102
   461  02D0  3400               	retlw	0
   462  02D1  347D               	retlw	125
   463  02D2  3400               	retlw	0
   464  02D3  347F               	retlw	127
   465  02D4  3400               	retlw	0
   466                           
   467                           ;initializer for _mojn
   468  02D5  3454               	retlw	84
   469  02D6  3400               	retlw	0
   470  02D7  3473               	retlw	115
   471  02D8  3400               	retlw	0
   472                           
   473                           ;initializer for _mojh
   474  02D9  3476               	retlw	118
   475  02DA  3400               	retlw	0
   476  02DB  3438               	retlw	56
   477  02DC  3400               	retlw	0
   478                           
   479                           	psect	idataBANK2
   480  01E8                     __pidataBANK2:
   481                           
   482                           ;initializer for _moji
   483  01E8  345F               	retlw	95
   484  01E9  3400               	retlw	0
   485  01EA  347C               	retlw	124
   486  01EB  3400               	retlw	0
   487  01EC  3458               	retlw	88
   488  01ED  3400               	retlw	0
   489  01EE  345E               	retlw	94
   490  01EF  3400               	retlw	0
   491  01F0  3479               	retlw	121
   492  01F1  3400               	retlw	0
   493  01F2  3471               	retlw	113
   494  01F3  3400               	retlw	0
   495  01F4  3476               	retlw	118
   496  01F5  3400               	retlw	0
   497  01F6  3438               	retlw	56
   498  01F7  3400               	retlw	0
   499  01F8  3454               	retlw	84
   500  01F9  3400               	retlw	0
   501  01FA  3473               	retlw	115
   502  01FB  3400               	retlw	0
   503                           
   504                           ;initializer for _mojf
   505  01FC  3471               	retlw	113
   506  01FD  3400               	retlw	0
   507  01FE  3479               	retlw	121
   508  01FF  3400               	retlw	0
   509  0200  345E               	retlw	94
   510  0201  3400               	retlw	0
   511  0202  3458               	retlw	88
   512  0203  3400               	retlw	0
   513  0204  347C               	retlw	124
   514  0205  3400               	retlw	0
   515  0206  345F               	retlw	95
   516  0207  3400               	retlw	0
   517                           
   518                           ;initializer for _moja
   519  0208  345F               	retlw	95
   520  0209  3400               	retlw	0
   521  020A  347C               	retlw	124
   522  020B  3400               	retlw	0
   523  020C  3458               	retlw	88
   524  020D  3400               	retlw	0
   525  020E  345E               	retlw	94
   526  020F  3400               	retlw	0
   527  0210  3479               	retlw	121
   528  0211  3400               	retlw	0
   529  0212  3471               	retlw	113
   530  0213  3400               	retlw	0
   531                           
   532                           ;initializer for _kisu
   533  0214  3406               	retlw	6
   534  0215  3400               	retlw	0
   535  0216  344F               	retlw	79
   536  0217  3400               	retlw	0
   537  0218  346D               	retlw	109
   538  0219  3400               	retlw	0
   539  021A  3427               	retlw	39
   540  021B  3400               	retlw	0
   541  021C  346F               	retlw	111
   542  021D  3400               	retlw	0
   543                           
   544                           	psect	idataBANK3
   545  01A4                     __pidataBANK3:
   546                           
   547                           ;initializer for _samf
   548  01A4  3471               	retlw	113
   549  01A5  3400               	retlw	0
   550  01A6  3479               	retlw	121
   551  01A7  3400               	retlw	0
   552  01A8  345E               	retlw	94
   553  01A9  3400               	retlw	0
   554  01AA  3458               	retlw	88
   555  01AB  3400               	retlw	0
   556  01AC  347C               	retlw	124
   557  01AD  3400               	retlw	0
   558  01AE  345F               	retlw	95
   559  01AF  3400               	retlw	0
   560  01B0  346F               	retlw	111
   561  01B1  3400               	retlw	0
   562  01B2  347F               	retlw	127
   563  01B3  3400               	retlw	0
   564  01B4  3427               	retlw	39
   565  01B5  3400               	retlw	0
   566  01B6  347D               	retlw	125
   567  01B7  3400               	retlw	0
   568  01B8  346D               	retlw	109
   569  01B9  3400               	retlw	0
   570  01BA  3466               	retlw	102
   571  01BB  3400               	retlw	0
   572  01BC  344F               	retlw	79
   573  01BD  3400               	retlw	0
   574  01BE  345B               	retlw	91
   575  01BF  3400               	retlw	0
   576  01C0  3406               	retlw	6
   577  01C1  3400               	retlw	0
   578  01C2  343F               	retlw	63
   579  01C3  3400               	retlw	0
   580  000E                     _PORTC	set	14
   581  000D                     _PORTB	set	13
   582  000C                     _PORTA	set	12
   583  0061                     _RA1	set	97
   584  0060                     _RA0	set	96
   585  0062                     _RA2	set	98
   586  0077                     _RC7	set	119
   587  0070                     _RC0	set	112
   588  0071                     _RC1	set	113
   589  0072                     _RC2	set	114
   590  0076                     _RC6	set	118
   591  0075                     _RC5	set	117
   592  0099                     _OSCCON	set	153
   593  008E                     _TRISC	set	142
   594  008D                     _TRISB	set	141
   595  008C                     _TRISA	set	140
   596  018D                     _ANSELB	set	397
   597  018C                     _ANSELA	set	396
   598                           
   599                           	psect	cinit
   600  07CA                     start_initialization:	
   601                           ; #config settings
   602                           
   603  07CA                     __initialization:
   604                           
   605                           ; Initialize objects allocated to BANK1
   606  07CA  3097               	movlw	low __pidataBANK1
   607  07CB  0084               	movwf	4
   608  07CC  3082               	movlw	(high __pidataBANK1)| (0+128)
   609  07CD  0085               	movwf	5
   610  07CE  30A0               	movlw	low __pdataBANK1
   611  07CF  0086               	movwf	6
   612  07D0  3000               	movlw	high __pdataBANK1
   613  07D1  0087               	movwf	7
   614  07D2  3046               	movlw	70
   615  07D3  3181  2143  3187   	fcall	init_ram
   616                           
   617                           ; Initialize objects allocated to BANK2
   618  07D6  30E8               	movlw	low __pidataBANK2
   619  07D7  0084               	movwf	4
   620  07D8  3081               	movlw	(high __pidataBANK2)| (0+128)
   621  07D9  0085               	movwf	5
   622  07DA  3020               	movlw	low __pdataBANK2
   623  07DB  0086               	movwf	6
   624  07DC  3001               	movlw	high __pdataBANK2
   625  07DD  0087               	movwf	7
   626  07DE  3036               	movlw	54
   627  07DF  3181  2143  3187   	fcall	init_ram
   628                           
   629                           ; Initialize objects allocated to BANK3
   630  07E2  30A4               	movlw	low __pidataBANK3
   631  07E3  0084               	movwf	4
   632  07E4  3081               	movlw	(high __pidataBANK3)| (0+128)
   633  07E5  0085               	movwf	5
   634  07E6  30A0               	movlw	low __pdataBANK3
   635  07E7  0086               	movwf	6
   636  07E8  3001               	movlw	high __pdataBANK3
   637  07E9  0087               	movwf	7
   638  07EA  3020               	movlw	32
   639  07EB  3181  2143  3187   	fcall	init_ram
   640                           
   641                           ; Clear objects allocated to BANK0
   642  07EE  3052               	movlw	low __pbssBANK0
   643  07EF  0084               	movwf	4
   644  07F0  3000               	movlw	high __pbssBANK0
   645  07F1  0085               	movwf	5
   646  07F2  301E               	movlw	30
   647  07F3  3181  213D  3187   	fcall	clear_ram0
   648                           
   649                           ; Clear objects allocated to BANK1
   650  07F6  0021               	movlb	1	; select bank1
   651  07F7  01E6               	clrf	__pbssBANK1& (0+127)
   652  07F8  01E7               	clrf	(__pbssBANK1+1)& (0+127)
   653  07F9  01E8               	clrf	(__pbssBANK1+2)& (0+127)
   654  07FA  01E9               	clrf	(__pbssBANK1+3)& (0+127)
   655  07FB  01EA               	clrf	(__pbssBANK1+4)& (0+127)
   656  07FC  01EB               	clrf	(__pbssBANK1+5)& (0+127)
   657  07FD                     end_of_initialization:	
   658                           ;End of C runtime variable initialization code
   659                           
   660  07FD                     __end_of__initialization:
   661  07FD  0020               	movlb	0
   662  07FE  3185  2D6B         	ljmp	_main	;jump to C main() function
   663                           
   664                           	psect	bssBANK0
   665  0052                     __pbssBANK0:
   666  0052                     _zyoutai:
   667  0052                     	ds	2
   668  0054                     _fugou:
   669  0054                     	ds	2
   670  0056                     _code1000:
   671  0056                     	ds	2
   672  0058                     _count:
   673  0058                     	ds	2
   674  005A                     _atai:
   675  005A                     	ds	2
   676  005C                     _atai1:
   677  005C                     	ds	2
   678  005E                     _atai10:
   679  005E                     	ds	2
   680  0060                     _ccw:
   681  0060                     	ds	2
   682  0062                     _cw:
   683  0062                     	ds	2
   684  0064                     _flg:
   685  0064                     	ds	2
   686  0066                     _flag_P:
   687  0066                     	ds	2
   688  0068                     _flag_R:
   689  0068                     	ds	2
   690  006A                     _flag_sw3:
   691  006A                     	ds	2
   692  006C                     _flag_sw2:
   693  006C                     	ds	2
   694  006E                     _flag_sw1:
   695  006E                     	ds	2
   696                           
   697                           	psect	bssBANK1
   698  00E6                     __pbssBANK1:
   699  00E6                     _code1:
   700  00E6                     	ds	2
   701  00E8                     _code10:
   702  00E8                     	ds	2
   703  00EA                     _code100:
   704  00EA                     	ds	2
   705                           
   706                           	psect	dataBANK1
   707  00A0                     __pdataBANK1:
   708  00A0                     _samp:
   709  00A0                     	ds	32
   710  00C0                     _num0:
   711  00C0                     	ds	20
   712  00D4                     _gusu:
   713  00D4                     	ds	10
   714  00DE                     _mojn:
   715  00DE                     	ds	4
   716  00E2                     _mojh:
   717  00E2                     	ds	4
   718                           
   719                           	psect	dataBANK2
   720  0120                     __pdataBANK2:
   721  0120                     _moji:
   722  0120                     	ds	20
   723  0134                     _mojf:
   724  0134                     	ds	12
   725  0140                     _moja:
   726  0140                     	ds	12
   727  014C                     _kisu:
   728  014C                     	ds	10
   729                           
   730                           	psect	dataBANK3
   731  01A0                     __pdataBANK3:
   732  01A0                     _samf:
   733  01A0                     	ds	32
   734                           
   735                           	psect	inittext
   736  0143                     init_ram:
   737  0143  00FE               	movwf	btemp
   738  0144                     initloop:
   739  0144  0012               	moviw fsr0++
   740  0145  001E               	movwi fsr1++
   741  0146  0BFE               	decfsz	btemp,f
   742  0147  2944               	goto	initloop
   743  0148  3400               	retlw	0
   744                           
   745                           	psect	clrtext
   746  013D                     clear_ram0:	
   747                           ;	Called with FSR0 containing the base address, and
   748                           ;	WREG with the size to clear
   749                           
   750  013D  0064               	clrwdt	;clear the watchdog before getting into this loop
   751  013E                     clrloop0:
   752  013E  0180               	clrf	0	;clear RAM location pointed to by FSR
   753  013F  3101               	addfsr 0,1
   754  0140  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   755  0141  293E               	goto	clrloop0	;have we reached the end yet?
   756  0142  3400               	retlw	0	;all done for this memory range, return
   757                           
   758                           	psect	cstackCOMMON
   759  0070                     __pcstackCOMMON:
   760  0070                     ?_portinit:
   761  0070                     ??_portinit:	
   762                           ; 1 bytes @ 0x0
   763                           
   764  0070                     ?_zenoff:	
   765                           ; 1 bytes @ 0x0
   766                           
   767  0070                     ??_zenoff:	
   768                           ; 1 bytes @ 0x0
   769                           
   770  0070                     ?_dynam:	
   771                           ; 1 bytes @ 0x0
   772                           
   773  0070                     ?_tactsw:	
   774                           ; 1 bytes @ 0x0
   775                           
   776  0070                     ??_tactsw:	
   777                           ; 1 bytes @ 0x0
   778                           
   779  0070                     ?_fclr:	
   780                           ; 1 bytes @ 0x0
   781                           
   782  0070                     ?_main:	
   783                           ; 1 bytes @ 0x0
   784                           
   785  0070                     ?___lwdiv:	
   786                           ; 1 bytes @ 0x0
   787                           
   788  0070                     dynam@dig1data:	
   789                           ; 2 bytes @ 0x0
   790                           
   791  0070                     fclr@flg:	
   792                           ; 2 bytes @ 0x0
   793                           
   794  0070                     ___lwdiv@divisor:	
   795                           ; 2 bytes @ 0x0
   796                           
   797                           
   798                           ; 2 bytes @ 0x0
   799  0070                     	ds	2
   800  0072                     ??_fclr:
   801  0072                     dynam@dig2data:	
   802                           ; 1 bytes @ 0x2
   803                           
   804  0072                     tactsw@b:	
   805                           ; 2 bytes @ 0x2
   806                           
   807  0072                     ___lwdiv@dividend:	
   808                           ; 2 bytes @ 0x2
   809                           
   810                           
   811                           ; 2 bytes @ 0x2
   812  0072                     	ds	2
   813  0074                     ??___lwdiv:
   814  0074                     dynam@smdata:	
   815                           ; 1 bytes @ 0x4
   816                           
   817  0074                     tactsw@c:	
   818                           ; 2 bytes @ 0x4
   819                           
   820                           
   821                           ; 2 bytes @ 0x4
   822  0074                     	ds	1
   823  0075                     ___lwdiv@quotient:
   824                           
   825                           ; 2 bytes @ 0x5
   826  0075                     	ds	1
   827  0076                     dynam@tr:
   828  0076                     tactsw@a:	
   829                           ; 2 bytes @ 0x6
   830                           
   831                           
   832                           ; 2 bytes @ 0x6
   833  0076                     	ds	1
   834  0077                     ___lwdiv@counter:
   835                           
   836                           ; 1 bytes @ 0x7
   837  0077                     	ds	1
   838  0078                     ??_dynam:
   839  0078                     ?_tact:	
   840                           ; 1 bytes @ 0x8
   841                           
   842  0078                     ?___wmul:	
   843                           ; 1 bytes @ 0x8
   844                           
   845  0078                     tact@mode:	
   846                           ; 2 bytes @ 0x8
   847                           
   848  0078                     ___wmul@multiplier:	
   849                           ; 2 bytes @ 0x8
   850                           
   851                           
   852                           ; 2 bytes @ 0x8
   853  0078                     	ds	2
   854  007A                     ??_tact:
   855  007A                     ___wmul@multiplicand:	
   856                           ; 1 bytes @ 0xA
   857                           
   858                           
   859                           ; 2 bytes @ 0xA
   860  007A                     	ds	2
   861  007C                     ??___wmul:
   862  007C                     ___wmul@product:	
   863                           ; 1 bytes @ 0xC
   864                           
   865                           
   866                           ; 2 bytes @ 0xC
   867  007C                     	ds	2
   868  007E                     ??_motor:
   869                           
   870                           	psect	cstackBANK0
   871  0020                     __pcstackBANK0:	
   872                           ; 1 bytes @ 0xE
   873                           
   874  0020                     dynam@smd:
   875                           
   876                           ; 2 bytes @ 0x0
   877  0020                     	ds	2
   878  0022                     dynam@tm:
   879                           
   880                           ; 2 bytes @ 0x2
   881  0022                     	ds	2
   882  0024                     dynam@j:
   883                           
   884                           ; 2 bytes @ 0x4
   885  0024                     	ds	2
   886  0026                     dynam@ext:
   887                           
   888                           ; 2 bytes @ 0x6
   889  0026                     	ds	2
   890  0028                     ?_motor:
   891  0028                     ?_waitSEGStop:	
   892                           ; 1 bytes @ 0x8
   893                           
   894  0028                     waitSEGStop@seg1:	
   895                           ; 2 bytes @ 0x8
   896                           
   897  0028                     motor@kakudo:	
   898                           ; 2 bytes @ 0x8
   899                           
   900                           
   901                           ; 2 bytes @ 0x8
   902  0028                     	ds	2
   903  002A                     waitSEGStop@seg2:
   904  002A                     motor@dig1data:	
   905                           ; 2 bytes @ 0xA
   906                           
   907                           
   908                           ; 2 bytes @ 0xA
   909  002A                     	ds	2
   910  002C                     waitSEGStop@wt:
   911  002C                     motor@dig2data:	
   912                           ; 2 bytes @ 0xC
   913                           
   914                           
   915                           ; 2 bytes @ 0xC
   916  002C                     	ds	2
   917  002E                     waitSEGStop@dousa:
   918  002E                     motor@smdata:	
   919                           ; 2 bytes @ 0xE
   920                           
   921                           
   922                           ; 2 bytes @ 0xE
   923  002E                     	ds	2
   924  0030                     ??_waitSEGStop:
   925  0030                     motor@tr:	
   926                           ; 1 bytes @ 0x10
   927                           
   928                           
   929                           ; 2 bytes @ 0x10
   930  0030                     	ds	2
   931  0032                     waitSEGStop@cpSW1:
   932  0032                     motor@i:	
   933                           ; 2 bytes @ 0x12
   934                           
   935                           
   936                           ; 2 bytes @ 0x12
   937  0032                     	ds	2
   938  0034                     waitSEGStop@cpSW2:
   939                           
   940                           ; 2 bytes @ 0x14
   941  0034                     	ds	2
   942  0036                     waitSEGStop@cpSW3:
   943                           
   944                           ; 2 bytes @ 0x16
   945  0036                     	ds	2
   946  0038                     waitSEGStop@i:
   947                           
   948                           ; 2 bytes @ 0x18
   949  0038                     	ds	2
   950  003A                     ??_main:
   951                           
   952                           ; 1 bytes @ 0x1A
   953  003A                     	ds	20
   954  004E                     main@ans:
   955                           
   956                           ; 2 bytes @ 0x2E
   957  004E                     	ds	2
   958  0050                     main@i:
   959                           
   960                           ; 2 bytes @ 0x30
   961  0050                     	ds	2
   962                           
   963                           	psect	maintext
   964  056B                     __pmaintext:	
   965 ;;
   966 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   967 ;;
   968 ;; *************** function _main *****************
   969 ;; Defined at:
   970 ;;		line 770 in file "Q4.c"
   971 ;; Parameters:    Size  Location     Type
   972 ;;		None
   973 ;; Auto vars:     Size  Location     Type
   974 ;;  i               2   48[BANK0 ] int 
   975 ;;  ans             2   46[BANK0 ] int 
   976 ;;  ataiR           2    0        int 
   977 ;;  ataiL           2    0        int 
   978 ;;  segR            2    0        unsigned short 
   979 ;;  segL            2    0        unsigned short 
   980 ;;  time            2    0        int 
   981 ;;  n               2    0        int 
   982 ;;  m               2    0        int 
   983 ;;  k               2    0        int 
   984 ;;  j               2    0        int 
   985 ;; Return value:  Size  Location     Type
   986 ;;                  1    wreg      void 
   987 ;; Registers used:
   988 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   989 ;; Tracked objects:
   990 ;;		On entry : B1F/0
   991 ;;		On exit  : 0/0
   992 ;;		Unchanged: 0/0
   993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   995 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0
   996 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   997 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
   998 ;;Total ram usage:       24 bytes
   999 ;; Hardware stack levels required when called:    3
  1000 ;; This function calls:
  1001 ;;		___wmul
  1002 ;;		_dynam
  1003 ;;		_fclr
  1004 ;;		_motor
  1005 ;;		_portinit
  1006 ;;		_waitSEGStop
  1007 ;;		_zenoff
  1008 ;; This function is called by:
  1009 ;;		Startup code after reset
  1010 ;; This function uses a non-reentrant model
  1011 ;;
  1012                           
  1013                           
  1014                           ;psect for function _main
  1015  056B                     _main:
  1016  056B                     l3189:	
  1017                           ;incstack = 0
  1018                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1019                           
  1020                           
  1021                           ;Q4.c: 773:     OSCCON=0x7A;
  1022  056B  307A               	movlw	122
  1023  056C  0021               	movlb	1	; select bank1
  1024  056D  0099               	movwf	25	;volatile
  1025  056E                     l3191:
  1026                           
  1027                           ;Q4.c: 775:     portinit();
  1028  056E  3181  2152  3185   	fcall	_portinit
  1029                           
  1030                           ;Q4.c: 777:     zenoff();
  1031  0571  3181  2149  3185   	fcall	_zenoff
  1032  0574                     l3193:
  1033  0574                     l3195:
  1034  0574                     l3197:
  1035  0574                     l3199:
  1036  0574                     l3201:
  1037  0574                     l358:	
  1038                           ;Q4.c: 782:     while((RA0!=1)||(RA1!=1)||(RA2!=1));
  1039                           
  1040  0574  0020               	movlb	0	; select bank0
  1041  0575  1C0C               	btfss	12,0	;volatile
  1042  0576  2D78               	goto	u3371
  1043  0577  2D79               	goto	u3370
  1044  0578                     u3371:
  1045  0578  2D74               	goto	l358
  1046  0579                     u3370:
  1047  0579                     l3203:
  1048  0579  1C8C               	btfss	12,1	;volatile
  1049  057A  2D7C               	goto	u3381
  1050  057B  2D7D               	goto	u3380
  1051  057C                     u3381:
  1052  057C  2D74               	goto	l358
  1053  057D                     u3380:
  1054  057D                     l3205:
  1055  057D  1D0C               	btfss	12,2	;volatile
  1056  057E  2D80               	goto	u3391
  1057  057F  2D81               	goto	u3390
  1058  0580                     u3391:
  1059  0580  2D74               	goto	l358
  1060  0581                     u3390:
  1061  0581                     l361:	
  1062                           ;Q4.c: 786:     hukki:
  1063                           
  1064                           
  1065                           ;Q4.c: 789:     RC2=RC0=RC1=1;
  1066  0581  0020               	movlb	0	; select bank0
  1067  0582  148E               	bsf	14,1	;volatile
  1068  0583  188E               	btfsc	14,1	;volatile
  1069  0584  2D86               	goto	u3401
  1070  0585  2D89               	goto	u3400
  1071  0586                     u3401:
  1072  0586  0020               	movlb	0	; select bank0
  1073  0587  140E               	bsf	14,0	;volatile
  1074  0588  2D8B               	goto	u3414
  1075  0589                     u3400:
  1076  0589  0020               	movlb	0	; select bank0
  1077  058A  100E               	bcf	14,0	;volatile
  1078  058B                     u3414:
  1079  058B  180E               	btfsc	14,0	;volatile
  1080  058C  2D8E               	goto	u3411
  1081  058D  2D91               	goto	u3410
  1082  058E                     u3411:
  1083  058E  0020               	movlb	0	; select bank0
  1084  058F  150E               	bsf	14,2	;volatile
  1085  0590  2D93               	goto	u3424
  1086  0591                     u3410:
  1087  0591  0020               	movlb	0	; select bank0
  1088  0592  110E               	bcf	14,2	;volatile
  1089  0593                     u3424:
  1090  0593                     l3207:
  1091                           
  1092                           ;Q4.c: 792:     fclr(2);
  1093  0593  3002               	movlw	2
  1094  0594  00F0               	movwf	fclr@flg
  1095  0595  3000               	movlw	0
  1096  0596  00F1               	movwf	fclr@flg+1
  1097  0597  3181  2184  3185   	fcall	_fclr
  1098  059A                     l3209:
  1099  059A                     l3211:
  1100                           
  1101                           ;Q4.c: 804:     int ans = -1;
  1102  059A  30FF               	movlw	255
  1103  059B  0020               	movlb	0	; select bank0
  1104  059C  00CE               	movwf	main@ans
  1105  059D  30FF               	movlw	255
  1106  059E  00CF               	movwf	main@ans+1
  1107  059F                     l3213:
  1108  059F                     l3215:
  1109  059F                     l3217:
  1110  059F                     l3219:
  1111  059F                     l3221:
  1112                           
  1113                           ;Q4.c: 818:         if(RA0 ==1 && RA1 == 0){
  1114  059F  0020               	movlb	0	; select bank0
  1115  05A0  1C0C               	btfss	12,0	;volatile
  1116  05A1  2DA3               	goto	u3431
  1117  05A2  2DA4               	goto	u3430
  1118  05A3                     u3431:
  1119  05A3  2DB9               	goto	l3227
  1120  05A4                     u3430:
  1121  05A4                     l3223:
  1122  05A4  188C               	btfsc	12,1	;volatile
  1123  05A5  2DA7               	goto	u3441
  1124  05A6  2DA8               	goto	u3440
  1125  05A7                     u3441:
  1126  05A7  2DB9               	goto	l3227
  1127  05A8                     u3440:
  1128  05A8                     l3225:
  1129                           
  1130                           ;Q4.c: 819:             dynam(0x40,0x40,0,0);
  1131  05A8  3040               	movlw	64
  1132  05A9  00F0               	movwf	dynam@dig1data
  1133  05AA  3000               	movlw	0
  1134  05AB  00F1               	movwf	dynam@dig1data+1
  1135  05AC  3040               	movlw	64
  1136  05AD  00F2               	movwf	dynam@dig2data
  1137  05AE  3000               	movlw	0
  1138  05AF  00F3               	movwf	dynam@dig2data+1
  1139  05B0  3000               	movlw	0
  1140  05B1  00F4               	movwf	dynam@smdata
  1141  05B2  00F5               	movwf	dynam@smdata+1
  1142  05B3  3000               	movlw	0
  1143  05B4  00F6               	movwf	dynam@tr
  1144  05B5  00F7               	movwf	dynam@tr+1
  1145  05B6  3184  2401  3185   	fcall	_dynam
  1146  05B9                     l3227:
  1147                           
  1148                           ;Q4.c: 822:         if(RA0 ==0 && RA1 == 0){
  1149  05B9  0020               	movlb	0	; select bank0
  1150  05BA  180C               	btfsc	12,0	;volatile
  1151  05BB  2DBD               	goto	u3451
  1152  05BC  2DBE               	goto	u3450
  1153  05BD                     u3451:
  1154  05BD  2D9F               	goto	l3221
  1155  05BE                     u3450:
  1156  05BE                     l3229:
  1157  05BE  188C               	btfsc	12,1	;volatile
  1158  05BF  2DC1               	goto	u3461
  1159  05C0  2DC2               	goto	u3460
  1160  05C1                     u3461:
  1161  05C1  2D9F               	goto	l3221
  1162  05C2                     u3460:
  1163  05C2                     l3231:
  1164                           
  1165                           ;Q4.c: 823:             zyoutai = waitSEGStop(0x40,0x40,1000,0b001);
  1166  05C2  3040               	movlw	64
  1167  05C3  00A8               	movwf	waitSEGStop@seg1
  1168  05C4  3000               	movlw	0
  1169  05C5  00A9               	movwf	waitSEGStop@seg1+1
  1170  05C6  3040               	movlw	64
  1171  05C7  00AA               	movwf	waitSEGStop@seg2
  1172  05C8  3000               	movlw	0
  1173  05C9  00AB               	movwf	waitSEGStop@seg2+1
  1174  05CA  30E8               	movlw	232
  1175  05CB  00AC               	movwf	waitSEGStop@wt
  1176  05CC  3003               	movlw	3
  1177  05CD  00AD               	movwf	waitSEGStop@wt+1
  1178  05CE  3001               	movlw	1
  1179  05CF  00AE               	movwf	waitSEGStop@dousa
  1180  05D0  3000               	movlw	0
  1181  05D1  00AF               	movwf	waitSEGStop@dousa+1
  1182  05D2  3183  2328  3185   	fcall	_waitSEGStop
  1183  05D5  0020               	movlb	0	; select bank0
  1184  05D6  0829               	movf	?_waitSEGStop+1,w
  1185  05D7  00D3               	movwf	_zyoutai+1
  1186  05D8  0828               	movf	?_waitSEGStop,w
  1187  05D9  00D2               	movwf	_zyoutai
  1188  05DA                     l3233:
  1189                           
  1190                           ;Q4.c: 825:             if(zyoutai >= 1){
  1191  05DA  0853               	movf	_zyoutai+1,w
  1192  05DB  3A80               	xorlw	128
  1193  05DC  00BA               	movwf	??_main
  1194  05DD  3080               	movlw	128
  1195  05DE  023A               	subwf	??_main,w
  1196  05DF  1D03               	skipz
  1197  05E0  2DE3               	goto	u3475
  1198  05E1  3001               	movlw	1
  1199  05E2  0252               	subwf	_zyoutai,w
  1200  05E3                     u3475:
  1201  05E3  1C03               	skipc
  1202  05E4  2DE6               	goto	u3471
  1203  05E5  2DE7               	goto	u3470
  1204  05E6                     u3471:
  1205  05E6  2EC4               	goto	l3263
  1206  05E7                     u3470:
  1207  05E7                     l3235:
  1208                           
  1209                           ;Q4.c: 826:                 _delay((unsigned long)((500)*(16000000/4000UL)));
  1210  05E7  300B               	movlw	11
  1211  05E8  0020               	movlb	0	; select bank0
  1212  05E9  00BB               	movwf	??_main+1
  1213  05EA  3026               	movlw	38
  1214  05EB  00BA               	movwf	??_main
  1215  05EC  305D               	movlw	93
  1216  05ED                     u3807:
  1217  05ED  0B89               	decfsz	9,f
  1218  05EE  2DED               	goto	u3807
  1219  05EF  0BBA               	decfsz	??_main,f
  1220  05F0  2DED               	goto	u3807
  1221  05F1  0BBB               	decfsz	??_main+1,f
  1222  05F2  2DED               	goto	u3807
  1223  05F3  3200               	nop2
  1224  05F4                     l366:	
  1225                           ;Q4.c: 827:                 while(1){
  1226                           
  1227                           
  1228                           ;Q4.c: 828:                     for(i = 1;i<=6;i++){
  1229  05F4  3001               	movlw	1
  1230  05F5  0020               	movlb	0	; select bank0
  1231  05F6  00D0               	movwf	main@i
  1232  05F7  3000               	movlw	0
  1233  05F8  00D1               	movwf	main@i+1
  1234  05F9                     l3239:
  1235                           
  1236                           ;Q4.c: 829:                         zyoutai = waitSEGStop(0x40,num0[i],1000,0b001);
  1237  05F9  3040               	movlw	64
  1238  05FA  0020               	movlb	0	; select bank0
  1239  05FB  00A8               	movwf	waitSEGStop@seg1
  1240  05FC  3000               	movlw	0
  1241  05FD  00A9               	movwf	waitSEGStop@seg1+1
  1242  05FE  3550               	lslf	main@i,w
  1243  05FF  3EC0               	addlw	(low (_num0| 0))& (0+255)
  1244  0600  0086               	movwf	6
  1245  0601  0187               	clrf	7
  1246  0602  3F40               	moviw [0]fsr1
  1247  0603  00AA               	movwf	waitSEGStop@seg2
  1248  0604  3F41               	moviw [1]fsr1
  1249  0605  00AB               	movwf	waitSEGStop@seg2+1
  1250  0606  30E8               	movlw	232
  1251  0607  00AC               	movwf	waitSEGStop@wt
  1252  0608  3003               	movlw	3
  1253  0609  00AD               	movwf	waitSEGStop@wt+1
  1254  060A  3001               	movlw	1
  1255  060B  00AE               	movwf	waitSEGStop@dousa
  1256  060C  3000               	movlw	0
  1257  060D  00AF               	movwf	waitSEGStop@dousa+1
  1258  060E  3183  2328  3185   	fcall	_waitSEGStop
  1259  0611  0020               	movlb	0	; select bank0
  1260  0612  0829               	movf	?_waitSEGStop+1,w
  1261  0613  00D3               	movwf	_zyoutai+1
  1262  0614  0828               	movf	?_waitSEGStop,w
  1263  0615  00D2               	movwf	_zyoutai
  1264  0616                     l3241:
  1265                           
  1266                           ;Q4.c: 830:                         if(zyoutai > 0){
  1267  0616  0853               	movf	_zyoutai+1,w
  1268  0617  3A80               	xorlw	128
  1269  0618  00BA               	movwf	??_main
  1270  0619  3080               	movlw	128
  1271  061A  023A               	subwf	??_main,w
  1272  061B  1D03               	skipz
  1273  061C  2E1F               	goto	u3485
  1274  061D  3001               	movlw	1
  1275  061E  0252               	subwf	_zyoutai,w
  1276  061F                     u3485:
  1277  061F  1C03               	skipc
  1278  0620  2E22               	goto	u3481
  1279  0621  2E23               	goto	u3480
  1280  0622                     u3481:
  1281  0622  2E56               	goto	l3251
  1282  0623                     u3480:
  1283  0623                     l3243:
  1284                           
  1285                           ;Q4.c: 831:                             ans++;
  1286  0623  3001               	movlw	1
  1287  0624  0020               	movlb	0	; select bank0
  1288  0625  07CE               	addwf	main@ans,f
  1289  0626  3000               	movlw	0
  1290  0627  3DCF               	addwfc	main@ans+1,f
  1291  0628                     l3245:
  1292                           
  1293                           ;Q4.c: 832:                             zyoutai = waitSEGStop(0x40,num0[i],zyoutai,0b001
      +                          );
  1294  0628  3040               	movlw	64
  1295  0629  00A8               	movwf	waitSEGStop@seg1
  1296  062A  3000               	movlw	0
  1297  062B  00A9               	movwf	waitSEGStop@seg1+1
  1298  062C  3550               	lslf	main@i,w
  1299  062D  3EC0               	addlw	(low (_num0| 0))& (0+255)
  1300  062E  0086               	movwf	6
  1301  062F  0187               	clrf	7
  1302  0630  3F40               	moviw [0]fsr1
  1303  0631  00AA               	movwf	waitSEGStop@seg2
  1304  0632  3F41               	moviw [1]fsr1
  1305  0633  00AB               	movwf	waitSEGStop@seg2+1
  1306  0634  0853               	movf	_zyoutai+1,w
  1307  0635  00AD               	movwf	waitSEGStop@wt+1
  1308  0636  0852               	movf	_zyoutai,w
  1309  0637  00AC               	movwf	waitSEGStop@wt
  1310  0638  3001               	movlw	1
  1311  0639  00AE               	movwf	waitSEGStop@dousa
  1312  063A  3000               	movlw	0
  1313  063B  00AF               	movwf	waitSEGStop@dousa+1
  1314  063C  3183  2328  3185   	fcall	_waitSEGStop
  1315  063F  0020               	movlb	0	; select bank0
  1316  0640  0829               	movf	?_waitSEGStop+1,w
  1317  0641  00D3               	movwf	_zyoutai+1
  1318  0642  0828               	movf	?_waitSEGStop,w
  1319  0643  00D2               	movwf	_zyoutai
  1320  0644                     l3247:
  1321                           
  1322                           ;Q4.c: 833:                             if(zyoutai > 0){
  1323  0644  0853               	movf	_zyoutai+1,w
  1324  0645  3A80               	xorlw	128
  1325  0646  00BA               	movwf	??_main
  1326  0647  3080               	movlw	128
  1327  0648  023A               	subwf	??_main,w
  1328  0649  1D03               	skipz
  1329  064A  2E4D               	goto	u3495
  1330  064B  3001               	movlw	1
  1331  064C  0252               	subwf	_zyoutai,w
  1332  064D                     u3495:
  1333  064D  1C03               	skipc
  1334  064E  2E50               	goto	u3491
  1335  064F  2E51               	goto	u3490
  1336  0650                     u3491:
  1337  0650  2E56               	goto	l3251
  1338  0651                     u3490:
  1339  0651                     l3249:
  1340                           
  1341                           ;Q4.c: 834:                                 ans++;
  1342  0651  3001               	movlw	1
  1343  0652  0020               	movlb	0	; select bank0
  1344  0653  07CE               	addwf	main@ans,f
  1345  0654  3000               	movlw	0
  1346  0655  3DCF               	addwfc	main@ans+1,f
  1347  0656                     l3251:
  1348                           
  1349                           ;Q4.c: 838:                         if(ans == 2){
  1350  0656  3002               	movlw	2
  1351  0657  0020               	movlb	0	; select bank0
  1352  0658  064E               	xorwf	main@ans,w
  1353  0659  044F               	iorwf	main@ans+1,w
  1354  065A  1D03               	btfss	3,2
  1355  065B  2E5D               	goto	u3501
  1356  065C  2E5E               	goto	u3500
  1357  065D                     u3501:
  1358  065D  2EB2               	goto	l3261
  1359  065E                     u3500:
  1360  065E                     l3253:
  1361                           
  1362                           ;Q4.c: 839:                             motor(60*i,0x40,num0[i],2,5);
  1363  065E  0851               	movf	main@i+1,w
  1364  065F  00F9               	movwf	___wmul@multiplier+1
  1365  0660  0850               	movf	main@i,w
  1366  0661  00F8               	movwf	___wmul@multiplier
  1367  0662  303C               	movlw	60
  1368  0663  00FA               	movwf	___wmul@multiplicand
  1369  0664  3000               	movlw	0
  1370  0665  00FB               	movwf	___wmul@multiplicand+1
  1371  0666  3181  2165  3185   	fcall	___wmul
  1372  0669  0879               	movf	?___wmul+1,w
  1373  066A  0020               	movlb	0	; select bank0
  1374  066B  00A9               	movwf	motor@kakudo+1
  1375  066C  0878               	movf	?___wmul,w
  1376  066D  00A8               	movwf	motor@kakudo
  1377  066E  3040               	movlw	64
  1378  066F  00AA               	movwf	motor@dig1data
  1379  0670  3000               	movlw	0
  1380  0671  00AB               	movwf	motor@dig1data+1
  1381  0672  3550               	lslf	main@i,w
  1382  0673  3EC0               	addlw	(low (_num0| 0))& (0+255)
  1383  0674  0086               	movwf	6
  1384  0675  0187               	clrf	7
  1385  0676  3F40               	moviw [0]fsr1
  1386  0677  00AC               	movwf	motor@dig2data
  1387  0678  3F41               	moviw [1]fsr1
  1388  0679  00AD               	movwf	motor@dig2data+1
  1389  067A  3002               	movlw	2
  1390  067B  00AE               	movwf	motor@smdata
  1391  067C  3000               	movlw	0
  1392  067D  00AF               	movwf	motor@smdata+1
  1393  067E  3005               	movlw	5
  1394  067F  00B0               	movwf	motor@tr
  1395  0680  3000               	movlw	0
  1396  0681  00B1               	movwf	motor@tr+1
  1397  0682  3181  21C4  3185   	fcall	_motor
  1398  0685                     l3255:
  1399                           
  1400                           ;Q4.c: 842:                                 if(RA0==1 && RA1 == 0){
  1401  0685  0020               	movlb	0	; select bank0
  1402  0686  1C0C               	btfss	12,0	;volatile
  1403  0687  2E89               	goto	u3511
  1404  0688  2E8A               	goto	u3510
  1405  0689                     u3511:
  1406  0689  2E85               	goto	l3255
  1407  068A                     u3510:
  1408  068A                     l3257:
  1409  068A  188C               	btfsc	12,1	;volatile
  1410  068B  2E8D               	goto	u3521
  1411  068C  2E8E               	goto	u3520
  1412  068D                     u3521:
  1413  068D  2E85               	goto	l3255
  1414  068E                     u3520:
  1415  068E                     l3259:
  1416                           
  1417                           ;Q4.c: 843:                                     motor(60*i,0x40,0x40,1,1);
  1418  068E  0851               	movf	main@i+1,w
  1419  068F  00F9               	movwf	___wmul@multiplier+1
  1420  0690  0850               	movf	main@i,w
  1421  0691  00F8               	movwf	___wmul@multiplier
  1422  0692  303C               	movlw	60
  1423  0693  00FA               	movwf	___wmul@multiplicand
  1424  0694  3000               	movlw	0
  1425  0695  00FB               	movwf	___wmul@multiplicand+1
  1426  0696  3181  2165  3185   	fcall	___wmul
  1427  0699  0879               	movf	?___wmul+1,w
  1428  069A  0020               	movlb	0	; select bank0
  1429  069B  00A9               	movwf	motor@kakudo+1
  1430  069C  0878               	movf	?___wmul,w
  1431  069D  00A8               	movwf	motor@kakudo
  1432  069E  3040               	movlw	64
  1433  069F  00AA               	movwf	motor@dig1data
  1434  06A0  3000               	movlw	0
  1435  06A1  00AB               	movwf	motor@dig1data+1
  1436  06A2  3040               	movlw	64
  1437  06A3  00AC               	movwf	motor@dig2data
  1438  06A4  3000               	movlw	0
  1439  06A5  00AD               	movwf	motor@dig2data+1
  1440  06A6  3001               	movlw	1
  1441  06A7  00AE               	movwf	motor@smdata
  1442  06A8  3000               	movlw	0
  1443  06A9  00AF               	movwf	motor@smdata+1
  1444  06AA  3001               	movlw	1
  1445  06AB  00B0               	movwf	motor@tr
  1446  06AC  3000               	movlw	0
  1447  06AD  00B1               	movwf	motor@tr+1
  1448  06AE  3181  21C4  3185   	fcall	_motor
  1449                           
  1450                           ;Q4.c: 844:                                     goto hukki;
  1451  06B1  2D81               	goto	l361
  1452  06B2                     l3261:
  1453                           
  1454                           ;Q4.c: 848:                     }
  1455  06B2  3001               	movlw	1
  1456  06B3  07D0               	addwf	main@i,f
  1457  06B4  3000               	movlw	0
  1458  06B5  3DD1               	addwfc	main@i+1,f
  1459  06B6  0851               	movf	main@i+1,w
  1460  06B7  3A80               	xorlw	128
  1461  06B8  00BA               	movwf	??_main
  1462  06B9  3080               	movlw	128
  1463  06BA  023A               	subwf	??_main,w
  1464  06BB  1D03               	skipz
  1465  06BC  2EBF               	goto	u3535
  1466  06BD  3007               	movlw	7
  1467  06BE  0250               	subwf	main@i,w
  1468  06BF                     u3535:
  1469  06BF  1C03               	skipc
  1470  06C0  2EC2               	goto	u3531
  1471  06C1  2EC3               	goto	u3530
  1472  06C2                     u3531:
  1473  06C2  2DF9               	goto	l3239
  1474  06C3                     u3530:
  1475  06C3  2DF4               	goto	l366
  1476  06C4                     l3263:
  1477                           
  1478                           ;Q4.c: 852:             zyoutai = waitSEGStop(0,0x40,1000,0b001);
  1479  06C4  3000               	movlw	0
  1480  06C5  0020               	movlb	0	; select bank0
  1481  06C6  00A8               	movwf	waitSEGStop@seg1
  1482  06C7  00A9               	movwf	waitSEGStop@seg1+1
  1483  06C8  3040               	movlw	64
  1484  06C9  00AA               	movwf	waitSEGStop@seg2
  1485  06CA  3000               	movlw	0
  1486  06CB  00AB               	movwf	waitSEGStop@seg2+1
  1487  06CC  30E8               	movlw	232
  1488  06CD  00AC               	movwf	waitSEGStop@wt
  1489  06CE  3003               	movlw	3
  1490  06CF  00AD               	movwf	waitSEGStop@wt+1
  1491  06D0  3001               	movlw	1
  1492  06D1  00AE               	movwf	waitSEGStop@dousa
  1493  06D2  3000               	movlw	0
  1494  06D3  00AF               	movwf	waitSEGStop@dousa+1
  1495  06D4  3183  2328  3185   	fcall	_waitSEGStop
  1496  06D7  0020               	movlb	0	; select bank0
  1497  06D8  0829               	movf	?_waitSEGStop+1,w
  1498  06D9  00D3               	movwf	_zyoutai+1
  1499  06DA  0828               	movf	?_waitSEGStop,w
  1500  06DB  00D2               	movwf	_zyoutai
  1501  06DC                     l3265:
  1502                           
  1503                           ;Q4.c: 854:             if(zyoutai >= 1){
  1504  06DC  0853               	movf	_zyoutai+1,w
  1505  06DD  3A80               	xorlw	128
  1506  06DE  00BA               	movwf	??_main
  1507  06DF  3080               	movlw	128
  1508  06E0  023A               	subwf	??_main,w
  1509  06E1  1D03               	skipz
  1510  06E2  2EE5               	goto	u3545
  1511  06E3  3001               	movlw	1
  1512  06E4  0252               	subwf	_zyoutai,w
  1513  06E5                     u3545:
  1514  06E5  1C03               	skipc
  1515  06E6  2EE8               	goto	u3541
  1516  06E7  2EE9               	goto	u3540
  1517  06E8                     u3541:
  1518  06E8  2D9F               	goto	l3221
  1519  06E9                     u3540:
  1520  06E9                     l3267:
  1521                           
  1522                           ;Q4.c: 855:                 _delay((unsigned long)((500)*(16000000/4000UL)));
  1523  06E9  300B               	movlw	11
  1524  06EA  0020               	movlb	0	; select bank0
  1525  06EB  00BB               	movwf	??_main+1
  1526  06EC  3026               	movlw	38
  1527  06ED  00BA               	movwf	??_main
  1528  06EE  305D               	movlw	93
  1529  06EF                     u3817:
  1530  06EF  0B89               	decfsz	9,f
  1531  06F0  2EEF               	goto	u3817
  1532  06F1  0BBA               	decfsz	??_main,f
  1533  06F2  2EEF               	goto	u3817
  1534  06F3  0BBB               	decfsz	??_main+1,f
  1535  06F4  2EEF               	goto	u3817
  1536  06F5  3200               	nop2
  1537  06F6                     l379:	
  1538                           ;Q4.c: 856:                 while(1){
  1539                           
  1540                           
  1541                           ;Q4.c: 857:                     for(i = 1;i<=6;i++){
  1542  06F6  3001               	movlw	1
  1543  06F7  0020               	movlb	0	; select bank0
  1544  06F8  00D0               	movwf	main@i
  1545  06F9  3000               	movlw	0
  1546  06FA  00D1               	movwf	main@i+1
  1547  06FB                     l3271:
  1548                           
  1549                           ;Q4.c: 858:                         zyoutai = waitSEGStop(0,num0[i],1000,0b001);
  1550  06FB  3000               	movlw	0
  1551  06FC  0020               	movlb	0	; select bank0
  1552  06FD  00A8               	movwf	waitSEGStop@seg1
  1553  06FE  00A9               	movwf	waitSEGStop@seg1+1
  1554  06FF  3550               	lslf	main@i,w
  1555  0700  3EC0               	addlw	(low (_num0| 0))& (0+255)
  1556  0701  0086               	movwf	6
  1557  0702  0187               	clrf	7
  1558  0703  3F40               	moviw [0]fsr1
  1559  0704  00AA               	movwf	waitSEGStop@seg2
  1560  0705  3F41               	moviw [1]fsr1
  1561  0706  00AB               	movwf	waitSEGStop@seg2+1
  1562  0707  30E8               	movlw	232
  1563  0708  00AC               	movwf	waitSEGStop@wt
  1564  0709  3003               	movlw	3
  1565  070A  00AD               	movwf	waitSEGStop@wt+1
  1566  070B  3001               	movlw	1
  1567  070C  00AE               	movwf	waitSEGStop@dousa
  1568  070D  3000               	movlw	0
  1569  070E  00AF               	movwf	waitSEGStop@dousa+1
  1570  070F  3183  2328  3185   	fcall	_waitSEGStop
  1571  0712  0020               	movlb	0	; select bank0
  1572  0713  0829               	movf	?_waitSEGStop+1,w
  1573  0714  00D3               	movwf	_zyoutai+1
  1574  0715  0828               	movf	?_waitSEGStop,w
  1575  0716  00D2               	movwf	_zyoutai
  1576  0717                     l3273:
  1577                           
  1578                           ;Q4.c: 859:                         if(zyoutai > 0){
  1579  0717  0853               	movf	_zyoutai+1,w
  1580  0718  3A80               	xorlw	128
  1581  0719  00BA               	movwf	??_main
  1582  071A  3080               	movlw	128
  1583  071B  023A               	subwf	??_main,w
  1584  071C  1D03               	skipz
  1585  071D  2F20               	goto	u3555
  1586  071E  3001               	movlw	1
  1587  071F  0252               	subwf	_zyoutai,w
  1588  0720                     u3555:
  1589  0720  1C03               	skipc
  1590  0721  2F23               	goto	u3551
  1591  0722  2F24               	goto	u3550
  1592  0723                     u3551:
  1593  0723  2F56               	goto	l3283
  1594  0724                     u3550:
  1595  0724                     l3275:
  1596                           
  1597                           ;Q4.c: 860:                             ans++;
  1598  0724  3001               	movlw	1
  1599  0725  0020               	movlb	0	; select bank0
  1600  0726  07CE               	addwf	main@ans,f
  1601  0727  3000               	movlw	0
  1602  0728  3DCF               	addwfc	main@ans+1,f
  1603  0729                     l3277:
  1604                           
  1605                           ;Q4.c: 861:                             zyoutai = waitSEGStop(0,num0[i],zyoutai,0b001);
  1606  0729  3000               	movlw	0
  1607  072A  00A8               	movwf	waitSEGStop@seg1
  1608  072B  00A9               	movwf	waitSEGStop@seg1+1
  1609  072C  3550               	lslf	main@i,w
  1610  072D  3EC0               	addlw	(low (_num0| 0))& (0+255)
  1611  072E  0086               	movwf	6
  1612  072F  0187               	clrf	7
  1613  0730  3F40               	moviw [0]fsr1
  1614  0731  00AA               	movwf	waitSEGStop@seg2
  1615  0732  3F41               	moviw [1]fsr1
  1616  0733  00AB               	movwf	waitSEGStop@seg2+1
  1617  0734  0853               	movf	_zyoutai+1,w
  1618  0735  00AD               	movwf	waitSEGStop@wt+1
  1619  0736  0852               	movf	_zyoutai,w
  1620  0737  00AC               	movwf	waitSEGStop@wt
  1621  0738  3001               	movlw	1
  1622  0739  00AE               	movwf	waitSEGStop@dousa
  1623  073A  3000               	movlw	0
  1624  073B  00AF               	movwf	waitSEGStop@dousa+1
  1625  073C  3183  2328  3185   	fcall	_waitSEGStop
  1626  073F  0020               	movlb	0	; select bank0
  1627  0740  0829               	movf	?_waitSEGStop+1,w
  1628  0741  00D3               	movwf	_zyoutai+1
  1629  0742  0828               	movf	?_waitSEGStop,w
  1630  0743  00D2               	movwf	_zyoutai
  1631  0744                     l3279:
  1632                           
  1633                           ;Q4.c: 862:                             if(zyoutai > 0){
  1634  0744  0853               	movf	_zyoutai+1,w
  1635  0745  3A80               	xorlw	128
  1636  0746  00BA               	movwf	??_main
  1637  0747  3080               	movlw	128
  1638  0748  023A               	subwf	??_main,w
  1639  0749  1D03               	skipz
  1640  074A  2F4D               	goto	u3565
  1641  074B  3001               	movlw	1
  1642  074C  0252               	subwf	_zyoutai,w
  1643  074D                     u3565:
  1644  074D  1C03               	skipc
  1645  074E  2F50               	goto	u3561
  1646  074F  2F51               	goto	u3560
  1647  0750                     u3561:
  1648  0750  2F56               	goto	l3283
  1649  0751                     u3560:
  1650  0751                     l3281:
  1651                           
  1652                           ;Q4.c: 863:                                 ans++;
  1653  0751  3001               	movlw	1
  1654  0752  0020               	movlb	0	; select bank0
  1655  0753  07CE               	addwf	main@ans,f
  1656  0754  3000               	movlw	0
  1657  0755  3DCF               	addwfc	main@ans+1,f
  1658  0756                     l3283:
  1659                           
  1660                           ;Q4.c: 867:                         if(ans == 2){
  1661  0756  3002               	movlw	2
  1662  0757  0020               	movlb	0	; select bank0
  1663  0758  064E               	xorwf	main@ans,w
  1664  0759  044F               	iorwf	main@ans+1,w
  1665  075A  1D03               	btfss	3,2
  1666  075B  2F5D               	goto	u3571
  1667  075C  2F5E               	goto	u3570
  1668  075D                     u3571:
  1669  075D  2FB6               	goto	l3293
  1670  075E                     u3570:
  1671  075E                     l3285:
  1672                           
  1673                           ;Q4.c: 868:                             motor(60*i,0,num0[i],1,5);
  1674  075E  0851               	movf	main@i+1,w
  1675  075F  00F9               	movwf	___wmul@multiplier+1
  1676  0760  0850               	movf	main@i,w
  1677  0761  00F8               	movwf	___wmul@multiplier
  1678  0762  303C               	movlw	60
  1679  0763  00FA               	movwf	___wmul@multiplicand
  1680  0764  3000               	movlw	0
  1681  0765  00FB               	movwf	___wmul@multiplicand+1
  1682  0766  3181  2165  3185   	fcall	___wmul
  1683  0769  0879               	movf	?___wmul+1,w
  1684  076A  0020               	movlb	0	; select bank0
  1685  076B  00A9               	movwf	motor@kakudo+1
  1686  076C  0878               	movf	?___wmul,w
  1687  076D  00A8               	movwf	motor@kakudo
  1688  076E  3000               	movlw	0
  1689  076F  00AA               	movwf	motor@dig1data
  1690  0770  00AB               	movwf	motor@dig1data+1
  1691  0771  3550               	lslf	main@i,w
  1692  0772  3EC0               	addlw	(low (_num0| 0))& (0+255)
  1693  0773  0086               	movwf	6
  1694  0774  0187               	clrf	7
  1695  0775  3F40               	moviw [0]fsr1
  1696  0776  00AC               	movwf	motor@dig2data
  1697  0777  3F41               	moviw [1]fsr1
  1698  0778  00AD               	movwf	motor@dig2data+1
  1699  0779  3001               	movlw	1
  1700  077A  00AE               	movwf	motor@smdata
  1701  077B  3000               	movlw	0
  1702  077C  00AF               	movwf	motor@smdata+1
  1703  077D  3005               	movlw	5
  1704  077E  00B0               	movwf	motor@tr
  1705  077F  3000               	movlw	0
  1706  0780  00B1               	movwf	motor@tr+1
  1707  0781  3181  21C4  3185   	fcall	_motor
  1708  0784                     l3287:
  1709                           
  1710                           ;Q4.c: 871:                                 if(RA0==1 && RA1 == 0){
  1711  0784  0020               	movlb	0	; select bank0
  1712  0785  1C0C               	btfss	12,0	;volatile
  1713  0786  2F88               	goto	u3581
  1714  0787  2F89               	goto	u3580
  1715  0788                     u3581:
  1716  0788  2F84               	goto	l3287
  1717  0789                     u3580:
  1718  0789                     l3289:
  1719  0789  188C               	btfsc	12,1	;volatile
  1720  078A  2F8C               	goto	u3591
  1721  078B  2F8D               	goto	u3590
  1722  078C                     u3591:
  1723  078C  2F84               	goto	l3287
  1724  078D                     u3590:
  1725  078D                     l3291:
  1726                           
  1727                           ;Q4.c: 872:                                     motor(60*(6-i),0x40,0x40,1,1);
  1728  078D  3006               	movlw	6
  1729  078E  00BA               	movwf	??_main
  1730  078F  0850               	movf	main@i,w
  1731  0790  023A               	subwf	??_main,w
  1732  0791  00F8               	movwf	___wmul@multiplier
  1733  0792  0951               	comf	main@i+1,w
  1734  0793  1803               	skipnc
  1735  0794  0A89               	incf	9,f
  1736  0795  00F9               	movwf	___wmul@multiplier+1
  1737  0796  303C               	movlw	60
  1738  0797  00FA               	movwf	___wmul@multiplicand
  1739  0798  3000               	movlw	0
  1740  0799  00FB               	movwf	___wmul@multiplicand+1
  1741  079A  3181  2165  3185   	fcall	___wmul
  1742  079D  0879               	movf	?___wmul+1,w
  1743  079E  0020               	movlb	0	; select bank0
  1744  079F  00A9               	movwf	motor@kakudo+1
  1745  07A0  0878               	movf	?___wmul,w
  1746  07A1  00A8               	movwf	motor@kakudo
  1747  07A2  3040               	movlw	64
  1748  07A3  00AA               	movwf	motor@dig1data
  1749  07A4  3000               	movlw	0
  1750  07A5  00AB               	movwf	motor@dig1data+1
  1751  07A6  3040               	movlw	64
  1752  07A7  00AC               	movwf	motor@dig2data
  1753  07A8  3000               	movlw	0
  1754  07A9  00AD               	movwf	motor@dig2data+1
  1755  07AA  3001               	movlw	1
  1756  07AB  00AE               	movwf	motor@smdata
  1757  07AC  3000               	movlw	0
  1758  07AD  00AF               	movwf	motor@smdata+1
  1759  07AE  3001               	movlw	1
  1760  07AF  00B0               	movwf	motor@tr
  1761  07B0  3000               	movlw	0
  1762  07B1  00B1               	movwf	motor@tr+1
  1763  07B2  3181  21C4  3185   	fcall	_motor
  1764                           
  1765                           ;Q4.c: 873:                                     goto hukki;
  1766  07B5  2D81               	goto	l361
  1767  07B6                     l3293:
  1768                           
  1769                           ;Q4.c: 878:                     }
  1770  07B6  3001               	movlw	1
  1771  07B7  07D0               	addwf	main@i,f
  1772  07B8  3000               	movlw	0
  1773  07B9  3DD1               	addwfc	main@i+1,f
  1774  07BA  0851               	movf	main@i+1,w
  1775  07BB  3A80               	xorlw	128
  1776  07BC  00BA               	movwf	??_main
  1777  07BD  3080               	movlw	128
  1778  07BE  023A               	subwf	??_main,w
  1779  07BF  1D03               	skipz
  1780  07C0  2FC3               	goto	u3605
  1781  07C1  3007               	movlw	7
  1782  07C2  0250               	subwf	main@i,w
  1783  07C3                     u3605:
  1784  07C3  1C03               	skipc
  1785  07C4  2FC6               	goto	u3601
  1786  07C5  2FC7               	goto	u3600
  1787  07C6                     u3601:
  1788  07C6  2EFB               	goto	l3271
  1789  07C7                     u3600:
  1790  07C7  2EF6               	goto	l379
  1791  07C8  3180  2802         	ljmp	start
  1792  07CA                     __end_of_main:
  1793                           
  1794                           	psect	text1
  1795  0149                     __ptext1:	
  1796 ;; *************** function _zenoff *****************
  1797 ;; Defined at:
  1798 ;;		line 195 in file "Q4.c"
  1799 ;; Parameters:    Size  Location     Type
  1800 ;;		None
  1801 ;; Auto vars:     Size  Location     Type
  1802 ;;		None
  1803 ;; Return value:  Size  Location     Type
  1804 ;;                  1    wreg      void 
  1805 ;; Registers used:
  1806 ;;		status,2
  1807 ;; Tracked objects:
  1808 ;;		On entry : 0/0
  1809 ;;		On exit  : 0/0
  1810 ;;		Unchanged: 0/0
  1811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1816 ;;Total ram usage:        0 bytes
  1817 ;; Hardware stack levels used:    1
  1818 ;; This function calls:
  1819 ;;		Nothing
  1820 ;; This function is called by:
  1821 ;;		_main
  1822 ;; This function uses a non-reentrant model
  1823 ;;
  1824                           
  1825                           
  1826                           ;psect for function _zenoff
  1827  0149                     _zenoff:
  1828  0149                     l2477:	
  1829                           ;incstack = 0
  1830                           ; Regs used in _zenoff: [status,2]
  1831                           
  1832                           
  1833                           ;Q4.c: 197:     RC2=1;
  1834  0149  0020               	movlb	0	; select bank0
  1835  014A  150E               	bsf	14,2	;volatile
  1836                           
  1837                           ;Q4.c: 198:     RC1=1;
  1838  014B  148E               	bsf	14,1	;volatile
  1839                           
  1840                           ;Q4.c: 199:     RC0=1;
  1841  014C  140E               	bsf	14,0	;volatile
  1842  014D                     l2479:
  1843                           
  1844                           ;Q4.c: 200:     PORTB=0x00;
  1845  014D  018D               	clrf	13	;volatile
  1846  014E                     l2481:
  1847                           
  1848                           ;Q4.c: 201:     RC7=0;RC7=1;RC7=0;
  1849  014E  138E               	bcf	14,7	;volatile
  1850  014F                     l2483:
  1851  014F  178E               	bsf	14,7	;volatile
  1852  0150                     l2485:
  1853  0150  138E               	bcf	14,7	;volatile
  1854  0151                     l108:
  1855  0151  0008               	return
  1856  0152                     __end_of_zenoff:
  1857                           
  1858                           	psect	text2
  1859  0328                     __ptext2:	
  1860 ;; *************** function _waitSEGStop *****************
  1861 ;; Defined at:
  1862 ;;		line 464 in file "Q4.c"
  1863 ;; Parameters:    Size  Location     Type
  1864 ;;  seg1            2    8[BANK0 ] unsigned short 
  1865 ;;  seg2            2   10[BANK0 ] unsigned short 
  1866 ;;  wt              2   12[BANK0 ] unsigned short 
  1867 ;;  dousa           2   14[BANK0 ] int 
  1868 ;; Auto vars:     Size  Location     Type
  1869 ;;  i               2   24[BANK0 ] unsigned int 
  1870 ;;  cpSW3           2   22[BANK0 ] int 
  1871 ;;  cpSW2           2   20[BANK0 ] int 
  1872 ;;  cpSW1           2   18[BANK0 ] int 
  1873 ;; Return value:  Size  Location     Type
  1874 ;;                  2    8[BANK0 ] int 
  1875 ;; Registers used:
  1876 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1877 ;; Tracked objects:
  1878 ;;		On entry : 0/0
  1879 ;;		On exit  : 0/0
  1880 ;;		Unchanged: 0/0
  1881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1882 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1883 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1884 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1885 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1886 ;;Total ram usage:       18 bytes
  1887 ;; Hardware stack levels used:    1
  1888 ;; Hardware stack levels required when called:    2
  1889 ;; This function calls:
  1890 ;;		___lwdiv
  1891 ;;		___wmul
  1892 ;;		_dynam
  1893 ;;		_fclr
  1894 ;;		_tact
  1895 ;; This function is called by:
  1896 ;;		_main
  1897 ;; This function uses a non-reentrant model
  1898 ;;
  1899                           
  1900                           
  1901                           ;psect for function _waitSEGStop
  1902  0328                     _waitSEGStop:
  1903  0328                     l2527:	
  1904                           ;incstack = 0
  1905                           ; Regs used in _waitSEGStop: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1906                           
  1907                           
  1908                           ;Q4.c: 464: int waitSEGStop(unsigned short seg1,unsigned short seg2,unsigned short wt,in
      +                          t dousa);Q4.c: 465: {;Q4.c: 467:     int cpSW1 = RA0;
  1909  0328  1003               	clrc
  1910  0329  0020               	movlb	0	; select bank0
  1911  032A  180C               	btfsc	12,0	;volatile
  1912  032B  1403               	setc
  1913  032C  3000               	movlw	0
  1914  032D  3D09               	addwfc	9,w
  1915  032E  00B0               	movwf	??_waitSEGStop
  1916  032F  01B1               	clrf	??_waitSEGStop+1
  1917  0330  0830               	movf	??_waitSEGStop,w
  1918  0331  00B2               	movwf	waitSEGStop@cpSW1
  1919  0332  0831               	movf	??_waitSEGStop+1,w
  1920  0333  00B3               	movwf	waitSEGStop@cpSW1+1
  1921                           
  1922                           ;Q4.c: 468:     int cpSW2 = RA1;
  1923  0334  1003               	clrc
  1924  0335  188C               	btfsc	12,1	;volatile
  1925  0336  1403               	setc
  1926  0337  3000               	movlw	0
  1927  0338  3D09               	addwfc	9,w
  1928  0339  00B0               	movwf	??_waitSEGStop
  1929  033A  01B1               	clrf	??_waitSEGStop+1
  1930  033B  0830               	movf	??_waitSEGStop,w
  1931  033C  00B4               	movwf	waitSEGStop@cpSW2
  1932  033D  0831               	movf	??_waitSEGStop+1,w
  1933  033E  00B5               	movwf	waitSEGStop@cpSW2+1
  1934                           
  1935                           ;Q4.c: 469:     int cpSW3 = RA2;
  1936  033F  1003               	clrc
  1937  0340  190C               	btfsc	12,2	;volatile
  1938  0341  1403               	setc
  1939  0342  3000               	movlw	0
  1940  0343  3D09               	addwfc	9,w
  1941  0344  00B0               	movwf	??_waitSEGStop
  1942  0345  01B1               	clrf	??_waitSEGStop+1
  1943  0346  0830               	movf	??_waitSEGStop,w
  1944  0347  00B6               	movwf	waitSEGStop@cpSW3
  1945  0348  0831               	movf	??_waitSEGStop+1,w
  1946  0349  00B7               	movwf	waitSEGStop@cpSW3+1
  1947  034A                     l2529:
  1948                           
  1949                           ;Q4.c: 473:     wt = wt / 10 + wt/1000*60;
  1950  034A  30E8               	movlw	232
  1951  034B  00F0               	movwf	___lwdiv@divisor
  1952  034C  3003               	movlw	3
  1953  034D  00F1               	movwf	___lwdiv@divisor+1
  1954  034E  082D               	movf	waitSEGStop@wt+1,w
  1955  034F  00F3               	movwf	___lwdiv@dividend+1
  1956  0350  082C               	movf	waitSEGStop@wt,w
  1957  0351  00F2               	movwf	___lwdiv@dividend
  1958  0352  3182  221E  3183   	fcall	___lwdiv
  1959  0355  0871               	movf	?___lwdiv+1,w
  1960  0356  00F9               	movwf	___wmul@multiplier+1
  1961  0357  0870               	movf	?___lwdiv,w
  1962  0358  00F8               	movwf	___wmul@multiplier
  1963  0359  303C               	movlw	60
  1964  035A  00FA               	movwf	___wmul@multiplicand
  1965  035B  3000               	movlw	0
  1966  035C  00FB               	movwf	___wmul@multiplicand+1
  1967  035D  3181  2165  3183   	fcall	___wmul
  1968  0360  0878               	movf	?___wmul,w
  1969  0361  0020               	movlb	0	; select bank0
  1970  0362  00B0               	movwf	??_waitSEGStop
  1971  0363  0879               	movf	?___wmul+1,w
  1972  0364  00B1               	movwf	??_waitSEGStop+1
  1973  0365  300A               	movlw	10
  1974  0366  00F0               	movwf	___lwdiv@divisor
  1975  0367  3000               	movlw	0
  1976  0368  00F1               	movwf	___lwdiv@divisor+1
  1977  0369  082D               	movf	waitSEGStop@wt+1,w
  1978  036A  00F3               	movwf	___lwdiv@dividend+1
  1979  036B  082C               	movf	waitSEGStop@wt,w
  1980  036C  00F2               	movwf	___lwdiv@dividend
  1981  036D  3182  221E  3183   	fcall	___lwdiv
  1982  0370  0870               	movf	?___lwdiv,w
  1983  0371  0020               	movlb	0	; select bank0
  1984  0372  0730               	addwf	??_waitSEGStop,w
  1985  0373  00AC               	movwf	waitSEGStop@wt
  1986  0374  0871               	movf	?___lwdiv+1,w
  1987  0375  3D31               	addwfc	??_waitSEGStop+1,w
  1988  0376  00AD               	movwf	waitSEGStop@wt+1
  1989  0377                     l2531:
  1990                           
  1991                           ;Q4.c: 474:     unsigned int i;;Q4.c: 476:     for(i=wt;i>0;--i){
  1992  0377  082D               	movf	waitSEGStop@wt+1,w
  1993  0378  00B9               	movwf	waitSEGStop@i+1
  1994  0379  082C               	movf	waitSEGStop@wt,w
  1995  037A  00B8               	movwf	waitSEGStop@i
  1996  037B                     l2533:
  1997  037B  0838               	movf	waitSEGStop@i,w
  1998  037C  0439               	iorwf	waitSEGStop@i+1,w
  1999  037D  1D03               	btfss	3,2
  2000  037E  2B80               	goto	u2271
  2001  037F  2B81               	goto	u2270
  2002  0380                     u2271:
  2003  0380  2B82               	goto	l2537
  2004  0381                     u2270:
  2005  0381  2BFE               	goto	l2583
  2006  0382                     l2537:
  2007                           
  2008                           ;Q4.c: 477:         dynam(seg1,seg2,0,0);
  2009  0382  0829               	movf	waitSEGStop@seg1+1,w
  2010  0383  00F1               	movwf	dynam@dig1data+1
  2011  0384  0828               	movf	waitSEGStop@seg1,w
  2012  0385  00F0               	movwf	dynam@dig1data
  2013  0386  082B               	movf	waitSEGStop@seg2+1,w
  2014  0387  00F3               	movwf	dynam@dig2data+1
  2015  0388  082A               	movf	waitSEGStop@seg2,w
  2016  0389  00F2               	movwf	dynam@dig2data
  2017  038A  3000               	movlw	0
  2018  038B  00F4               	movwf	dynam@smdata
  2019  038C  00F5               	movwf	dynam@smdata+1
  2020  038D  3000               	movlw	0
  2021  038E  00F6               	movwf	dynam@tr
  2022  038F  00F7               	movwf	dynam@tr+1
  2023  0390  3184  2401  3183   	fcall	_dynam
  2024                           
  2025                           ;Q4.c: 479:         tact(0);
  2026  0393  3000               	movlw	0
  2027  0394  00F8               	movwf	tact@mode
  2028  0395  00F9               	movwf	tact@mode+1
  2029  0396  3182  22DD  3183   	fcall	_tact
  2030  0399                     l2539:
  2031                           
  2032                           ;Q4.c: 481:         if(cpSW1 != RA0){
  2033  0399  1003               	clrc
  2034  039A  0020               	movlb	0	; select bank0
  2035  039B  180C               	btfsc	12,0	;volatile
  2036  039C  1403               	setc
  2037  039D  3000               	movlw	0
  2038  039E  3D09               	addwfc	9,w
  2039  039F  00B0               	movwf	??_waitSEGStop
  2040  03A0  01B1               	clrf	??_waitSEGStop+1
  2041  03A1  0833               	movf	waitSEGStop@cpSW1+1,w
  2042  03A2  0631               	xorwf	??_waitSEGStop+1,w
  2043  03A3  1D03               	skipz
  2044  03A4  2BA7               	goto	u2285
  2045  03A5  0832               	movf	waitSEGStop@cpSW1,w
  2046  03A6  0630               	xorwf	??_waitSEGStop,w
  2047  03A7                     u2285:
  2048  03A7  1903               	skipnz
  2049  03A8  2BAA               	goto	u2281
  2050  03A9  2BAB               	goto	u2280
  2051  03AA                     u2281:
  2052  03AA  2BBC               	goto	l2549
  2053  03AB                     u2280:
  2054  03AB                     l2541:
  2055                           
  2056                           ;Q4.c: 482:             if((0b100 & dousa) == 0b100){
  2057  03AB  1D2E               	btfss	waitSEGStop@dousa,2
  2058  03AC  2BAE               	goto	u2291
  2059  03AD  2BAF               	goto	u2290
  2060  03AE                     u2291:
  2061  03AE  2BBC               	goto	l2549
  2062  03AF                     u2290:
  2063  03AF                     l2543:
  2064                           
  2065                           ;Q4.c: 484:                 fclr(2);
  2066  03AF  3002               	movlw	2
  2067  03B0  00F0               	movwf	fclr@flg
  2068  03B1  3000               	movlw	0
  2069  03B2  00F1               	movwf	fclr@flg+1
  2070  03B3  3181  2184  3183   	fcall	_fclr
  2071  03B6                     l2545:
  2072                           
  2073                           ;Q4.c: 485:                 return i;
  2074  03B6  0020               	movlb	0	; select bank0
  2075  03B7  0839               	movf	waitSEGStop@i+1,w
  2076  03B8  00A9               	movwf	?_waitSEGStop+1
  2077  03B9  0838               	movf	waitSEGStop@i,w
  2078  03BA  00A8               	movwf	?_waitSEGStop
  2079  03BB  2C00               	goto	l265
  2080  03BC                     l2549:
  2081                           
  2082                           ;Q4.c: 488:         if(cpSW2 != RA1){
  2083  03BC  1003               	clrc
  2084  03BD  188C               	btfsc	12,1	;volatile
  2085  03BE  1403               	setc
  2086  03BF  3000               	movlw	0
  2087  03C0  3D09               	addwfc	9,w
  2088  03C1  00B0               	movwf	??_waitSEGStop
  2089  03C2  01B1               	clrf	??_waitSEGStop+1
  2090  03C3  0835               	movf	waitSEGStop@cpSW2+1,w
  2091  03C4  0631               	xorwf	??_waitSEGStop+1,w
  2092  03C5  1D03               	skipz
  2093  03C6  2BC9               	goto	u2305
  2094  03C7  0834               	movf	waitSEGStop@cpSW2,w
  2095  03C8  0630               	xorwf	??_waitSEGStop,w
  2096  03C9                     u2305:
  2097  03C9  1903               	skipnz
  2098  03CA  2BCC               	goto	u2301
  2099  03CB  2BCD               	goto	u2300
  2100  03CC                     u2301:
  2101  03CC  2BD2               	goto	l2559
  2102  03CD                     u2300:
  2103  03CD                     l2551:
  2104                           
  2105                           ;Q4.c: 489:             if((0b010 & dousa) == 0b010){
  2106  03CD  1CAE               	btfss	waitSEGStop@dousa,1
  2107  03CE  2BD0               	goto	u2311
  2108  03CF  2BD1               	goto	u2310
  2109  03D0                     u2311:
  2110  03D0  2BD2               	goto	l2559
  2111  03D1                     u2310:
  2112  03D1  2BAF               	goto	l2543
  2113  03D2                     l2559:
  2114                           
  2115                           ;Q4.c: 495:         if(((flag_sw3==1)&&(flag_R==1))){
  2116  03D2  036A               	decf	_flag_sw3,w
  2117  03D3  046B               	iorwf	_flag_sw3+1,w
  2118  03D4  1D03               	btfss	3,2
  2119  03D5  2BD7               	goto	u2321
  2120  03D6  2BD8               	goto	u2320
  2121  03D7                     u2321:
  2122  03D7  2BE3               	goto	l2571
  2123  03D8                     u2320:
  2124  03D8                     l2561:
  2125  03D8  0368               	decf	_flag_R,w
  2126  03D9  0469               	iorwf	_flag_R+1,w
  2127  03DA  1D03               	btfss	3,2
  2128  03DB  2BDD               	goto	u2331
  2129  03DC  2BDE               	goto	u2330
  2130  03DD                     u2331:
  2131  03DD  2BE3               	goto	l2571
  2132  03DE                     u2330:
  2133  03DE                     l2563:
  2134                           
  2135                           ;Q4.c: 496:             if((0b001 & dousa) == 0b001){
  2136  03DE  1C2E               	btfss	waitSEGStop@dousa,0
  2137  03DF  2BE1               	goto	u2341
  2138  03E0  2BE2               	goto	u2340
  2139  03E1                     u2341:
  2140  03E1  2BE3               	goto	l2571
  2141  03E2                     u2340:
  2142  03E2  2BAF               	goto	l2543
  2143  03E3                     l2571:
  2144                           
  2145                           ;Q4.c: 502:         if(cpSW3 != RA2){
  2146  03E3  1003               	clrc
  2147  03E4  190C               	btfsc	12,2	;volatile
  2148  03E5  1403               	setc
  2149  03E6  3000               	movlw	0
  2150  03E7  3D09               	addwfc	9,w
  2151  03E8  00B0               	movwf	??_waitSEGStop
  2152  03E9  01B1               	clrf	??_waitSEGStop+1
  2153  03EA  0837               	movf	waitSEGStop@cpSW3+1,w
  2154  03EB  0631               	xorwf	??_waitSEGStop+1,w
  2155  03EC  1D03               	skipz
  2156  03ED  2BF0               	goto	u2355
  2157  03EE  0836               	movf	waitSEGStop@cpSW3,w
  2158  03EF  0630               	xorwf	??_waitSEGStop,w
  2159  03F0                     u2355:
  2160  03F0  1903               	skipnz
  2161  03F1  2BF3               	goto	u2351
  2162  03F2  2BF4               	goto	u2350
  2163  03F3                     u2351:
  2164  03F3  2BF9               	goto	l2579
  2165  03F4                     u2350:
  2166  03F4                     l2573:
  2167                           
  2168                           ;Q4.c: 503:             if((0b0001 & dousa) == 0b0001){
  2169  03F4  1C2E               	btfss	waitSEGStop@dousa,0
  2170  03F5  2BF7               	goto	u2361
  2171  03F6  2BF8               	goto	u2360
  2172  03F7                     u2361:
  2173  03F7  2BF9               	goto	l2579
  2174  03F8                     u2360:
  2175  03F8  2BB6               	goto	l2545
  2176  03F9                     l2579:
  2177                           
  2178                           ;Q4.c: 508:     }
  2179  03F9  3001               	movlw	1
  2180  03FA  02B8               	subwf	waitSEGStop@i,f
  2181  03FB  3000               	movlw	0
  2182  03FC  3BB9               	subwfb	waitSEGStop@i+1,f
  2183  03FD  2B7B               	goto	l2533
  2184  03FE                     l2583:
  2185                           
  2186                           ;Q4.c: 510:     return 0;
  2187  03FE  01A8               	clrf	?_waitSEGStop
  2188  03FF  01A9               	clrf	?_waitSEGStop+1
  2189  0400                     l265:
  2190  0400  0008               	return
  2191  0401                     __end_of_waitSEGStop:
  2192                           
  2193                           	psect	text3
  2194  02DD                     __ptext3:	
  2195 ;; *************** function _tact *****************
  2196 ;; Defined at:
  2197 ;;		line 346 in file "Q4.c"
  2198 ;; Parameters:    Size  Location     Type
  2199 ;;  mode            2    8[COMMON] unsigned short 
  2200 ;; Auto vars:     Size  Location     Type
  2201 ;;		None
  2202 ;; Return value:  Size  Location     Type
  2203 ;;                  1    wreg      void 
  2204 ;; Registers used:
  2205 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2206 ;; Tracked objects:
  2207 ;;		On entry : 0/0
  2208 ;;		On exit  : 0/0
  2209 ;;		Unchanged: 0/0
  2210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2211 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2214 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2215 ;;Total ram usage:        2 bytes
  2216 ;; Hardware stack levels used:    1
  2217 ;; Hardware stack levels required when called:    1
  2218 ;; This function calls:
  2219 ;;		_tactsw
  2220 ;; This function is called by:
  2221 ;;		_waitSEGStop
  2222 ;;		_kaisu
  2223 ;;		_motorStop
  2224 ;;		_buzzStop
  2225 ;; This function uses a non-reentrant model
  2226 ;;
  2227                           
  2228                           
  2229                           ;psect for function _tact
  2230  02DD                     _tact:
  2231  02DD                     l2357:	
  2232                           ;incstack = 0
  2233                           ; Regs used in _tact: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2234                           
  2235                           
  2236                           ;Q4.c: 346: void tact(unsigned short mode);Q4.c: 347: {;Q4.c: 348:     switch(mode){
  2237  02DD  2B17               	goto	l2385
  2238  02DE                     l2359:
  2239                           
  2240                           ;Q4.c: 350:                 tactsw();
  2241  02DE  3182  225A  3182   	fcall	_tactsw
  2242  02E1                     l2361:
  2243                           
  2244                           ;Q4.c: 351:                 if(flag_sw3==0)flag_R=1;
  2245  02E1  0020               	movlb	0	; select bank0
  2246  02E2  086A               	movf	_flag_sw3,w
  2247  02E3  046B               	iorwf	_flag_sw3+1,w
  2248  02E4  1D03               	btfss	3,2
  2249  02E5  2AE7               	goto	u2051
  2250  02E6  2AE8               	goto	u2050
  2251  02E7                     u2051:
  2252  02E7  2B27               	goto	l208
  2253  02E8                     u2050:
  2254  02E8                     l2363:
  2255  02E8  3001               	movlw	1
  2256  02E9  00E8               	movwf	_flag_R
  2257  02EA  3000               	movlw	0
  2258  02EB  00E9               	movwf	_flag_R+1
  2259  02EC  2B27               	goto	l208
  2260  02ED                     l2365:
  2261                           
  2262                           ;Q4.c: 354:                 tactsw();
  2263  02ED  3182  225A  3182   	fcall	_tactsw
  2264  02F0                     l2367:
  2265                           
  2266                           ;Q4.c: 355:                 if(flag_sw3==1)flag_P=1;
  2267  02F0  0020               	movlb	0	; select bank0
  2268  02F1  036A               	decf	_flag_sw3,w
  2269  02F2  046B               	iorwf	_flag_sw3+1,w
  2270  02F3  1D03               	btfss	3,2
  2271  02F4  2AF6               	goto	u2061
  2272  02F5  2AF7               	goto	u2060
  2273  02F6                     u2061:
  2274  02F6  2B27               	goto	l208
  2275  02F7                     u2060:
  2276  02F7                     l2369:
  2277  02F7  3001               	movlw	1
  2278  02F8  00E6               	movwf	_flag_P
  2279  02F9  3000               	movlw	0
  2280  02FA  00E7               	movwf	_flag_P+1
  2281  02FB  2B27               	goto	l208
  2282  02FC                     l2371:
  2283                           
  2284                           ;Q4.c: 358:                 tactsw();
  2285  02FC  3182  225A  3182   	fcall	_tactsw
  2286  02FF                     l2373:
  2287                           
  2288                           ;Q4.c: 359:                 if(flag_sw3==0)flag_R=1;
  2289  02FF  0020               	movlb	0	; select bank0
  2290  0300  086A               	movf	_flag_sw3,w
  2291  0301  046B               	iorwf	_flag_sw3+1,w
  2292  0302  1D03               	btfss	3,2
  2293  0303  2B05               	goto	u2071
  2294  0304  2B06               	goto	u2070
  2295  0305                     u2071:
  2296  0305  2B0A               	goto	l2377
  2297  0306                     u2070:
  2298  0306                     l2375:
  2299  0306  3001               	movlw	1
  2300  0307  00E8               	movwf	_flag_R
  2301  0308  3000               	movlw	0
  2302  0309  00E9               	movwf	_flag_R+1
  2303  030A                     l2377:
  2304                           
  2305                           ;Q4.c: 360:                 if((flag_sw3==1)&&(flag_R==1))flag_P=1;
  2306  030A  036A               	decf	_flag_sw3,w
  2307  030B  046B               	iorwf	_flag_sw3+1,w
  2308  030C  1D03               	btfss	3,2
  2309  030D  2B0F               	goto	u2081
  2310  030E  2B10               	goto	u2080
  2311  030F                     u2081:
  2312  030F  2B27               	goto	l208
  2313  0310                     u2080:
  2314  0310                     l2379:
  2315  0310  0368               	decf	_flag_R,w
  2316  0311  0469               	iorwf	_flag_R+1,w
  2317  0312  1D03               	btfss	3,2
  2318  0313  2B15               	goto	u2091
  2319  0314  2B16               	goto	u2090
  2320  0315                     u2091:
  2321  0315  2B27               	goto	l208
  2322  0316                     u2090:
  2323  0316  2AF7               	goto	l2369
  2324  0317                     l2385:
  2325                           
  2326                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2327                           ; Switch size 1, requested type "simple"
  2328                           ; Number of cases is 1, Range of values is 0 to 0
  2329                           ; switch strategies available:
  2330                           ; Name         Instructions Cycles
  2331                           ; simple_byte            4     3 (average)
  2332                           ; direct_byte            8     6 (fixed)
  2333                           ; jumptable            260     6 (fixed)
  2334                           ;	Chosen strategy is simple_byte
  2335  0317  0879               	movf	tact@mode+1,w
  2336  0318  3A00               	xorlw	0	; case 0
  2337  0319  1903               	skipnz
  2338  031A  2B1C               	goto	l3437
  2339  031B  2B27               	goto	l208
  2340  031C                     l3437:
  2341                           
  2342                           ; Switch size 1, requested type "simple"
  2343                           ; Number of cases is 3, Range of values is 0 to 2
  2344                           ; switch strategies available:
  2345                           ; Name         Instructions Cycles
  2346                           ; simple_byte           10     6 (average)
  2347                           ; direct_byte           12     6 (fixed)
  2348                           ; jumptable            260     6 (fixed)
  2349                           ;	Chosen strategy is simple_byte
  2350  031C  0878               	movf	tact@mode,w
  2351  031D  3A00               	xorlw	0	; case 0
  2352  031E  1903               	skipnz
  2353  031F  2ADE               	goto	l2359
  2354  0320  3A01               	xorlw	1	; case 1
  2355  0321  1903               	skipnz
  2356  0322  2AED               	goto	l2365
  2357  0323  3A03               	xorlw	3	; case 2
  2358  0324  1903               	skipnz
  2359  0325  2AFC               	goto	l2371
  2360  0326  2B27               	goto	l208
  2361  0327                     l208:
  2362  0327  0008               	return
  2363  0328                     __end_of_tact:
  2364                           
  2365                           	psect	text4
  2366  025A                     __ptext4:	
  2367 ;; *************** function _tactsw *****************
  2368 ;; Defined at:
  2369 ;;		line 331 in file "Q4.c"
  2370 ;; Parameters:    Size  Location     Type
  2371 ;;		None
  2372 ;; Auto vars:     Size  Location     Type
  2373 ;;  a               2    6[COMMON] unsigned short 
  2374 ;;  c               2    4[COMMON] unsigned short 
  2375 ;;  b               2    2[COMMON] unsigned short 
  2376 ;; Return value:  Size  Location     Type
  2377 ;;                  1    wreg      void 
  2378 ;; Registers used:
  2379 ;;		wreg, status,2, status,0
  2380 ;; Tracked objects:
  2381 ;;		On entry : 0/0
  2382 ;;		On exit  : 0/0
  2383 ;;		Unchanged: 0/0
  2384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2386 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2387 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2388 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2389 ;;Total ram usage:        8 bytes
  2390 ;; Hardware stack levels used:    1
  2391 ;; This function calls:
  2392 ;;		Nothing
  2393 ;; This function is called by:
  2394 ;;		_tact
  2395 ;; This function uses a non-reentrant model
  2396 ;;
  2397                           
  2398                           
  2399                           ;psect for function _tactsw
  2400  025A                     _tactsw:
  2401  025A                     l2183:	
  2402                           ;incstack = 0
  2403                           ; Regs used in _tactsw: [wreg+status,2+status,0]
  2404                           
  2405                           
  2406                           ;Q4.c: 333:     unsigned short a,b,c;;Q4.c: 334:     b=c=0;
  2407  025A  01F4               	clrf	tactsw@c
  2408  025B  01F5               	clrf	tactsw@c+1
  2409  025C  01F2               	clrf	tactsw@b
  2410  025D  01F3               	clrf	tactsw@b+1
  2411  025E                     l2185:
  2412                           
  2413                           ;Q4.c: 336:             a=RA2;
  2414  025E  1003               	clrc
  2415  025F  0020               	movlb	0	; select bank0
  2416  0260  190C               	btfsc	12,2	;volatile
  2417  0261  1403               	setc
  2418  0262  3000               	movlw	0
  2419  0263  3D09               	addwfc	9,w
  2420  0264  00F0               	movwf	??_tactsw
  2421  0265  01F1               	clrf	??_tactsw+1
  2422  0266  0870               	movf	??_tactsw,w
  2423  0267  00F6               	movwf	tactsw@a
  2424  0268  0871               	movf	??_tactsw+1,w
  2425  0269  00F7               	movwf	tactsw@a+1
  2426  026A                     l2187:
  2427                           
  2428                           ;Q4.c: 337:             if(b==a)++c;
  2429  026A  0877               	movf	tactsw@a+1,w
  2430  026B  0673               	xorwf	tactsw@b+1,w
  2431  026C  1D03               	skipz
  2432  026D  2A70               	goto	u1815
  2433  026E  0876               	movf	tactsw@a,w
  2434  026F  0672               	xorwf	tactsw@b,w
  2435  0270                     u1815:
  2436  0270  1D03               	skipz
  2437  0271  2A73               	goto	u1811
  2438  0272  2A74               	goto	u1810
  2439  0273                     u1811:
  2440  0273  2A79               	goto	l2191
  2441  0274                     u1810:
  2442  0274                     l2189:
  2443  0274  3001               	movlw	1
  2444  0275  07F4               	addwf	tactsw@c,f
  2445  0276  3000               	movlw	0
  2446  0277  3DF5               	addwfc	tactsw@c+1,f
  2447  0278  2A7B               	goto	l2193
  2448  0279                     l2191:
  2449  0279  01F4               	clrf	tactsw@c
  2450  027A  01F5               	clrf	tactsw@c+1
  2451  027B                     l2193:
  2452                           
  2453                           ;Q4.c: 339:             if(c>10){flag_sw3=(~a)&0x01;return;}
  2454  027B  3000               	movlw	0
  2455  027C  0275               	subwf	tactsw@c+1,w
  2456  027D  300B               	movlw	11
  2457  027E  1903               	skipnz
  2458  027F  0274               	subwf	tactsw@c,w
  2459  0280  1C03               	skipc
  2460  0281  2A83               	goto	u1821
  2461  0282  2A84               	goto	u1820
  2462  0283                     u1821:
  2463  0283  2A91               	goto	l2199
  2464  0284                     u1820:
  2465  0284                     l2195:
  2466  0284  0877               	movf	tactsw@a+1,w
  2467  0285  00F1               	movwf	??_tactsw+1
  2468  0286  0876               	movf	tactsw@a,w
  2469  0287  00F0               	movwf	??_tactsw
  2470  0288  09F0               	comf	??_tactsw,f
  2471  0289  09F1               	comf	??_tactsw+1,f
  2472  028A  3001               	movlw	1
  2473  028B  0570               	andwf	??_tactsw,w
  2474  028C  00EA               	movwf	_flag_sw3
  2475  028D  3000               	movlw	0
  2476  028E  0571               	andwf	??_tactsw+1,w
  2477  028F  00EB               	movwf	_flag_sw3+1
  2478  0290  2A96               	goto	l193
  2479  0291                     l2199:
  2480                           
  2481                           ;Q4.c: 340:             b=a;
  2482  0291  0877               	movf	tactsw@a+1,w
  2483  0292  00F3               	movwf	tactsw@b+1
  2484  0293  0876               	movf	tactsw@a,w
  2485  0294  00F2               	movwf	tactsw@b
  2486  0295  2A5E               	goto	l2185
  2487  0296                     l193:
  2488  0296  0008               	return
  2489  0297                     __end_of_tactsw:
  2490                           
  2491                           	psect	text5
  2492  0184                     __ptext5:	
  2493 ;; *************** function _fclr *****************
  2494 ;; Defined at:
  2495 ;;		line 369 in file "Q4.c"
  2496 ;; Parameters:    Size  Location     Type
  2497 ;;  flg             2    0[COMMON] unsigned short 
  2498 ;; Auto vars:     Size  Location     Type
  2499 ;;		None
  2500 ;; Return value:  Size  Location     Type
  2501 ;;                  1    wreg      void 
  2502 ;; Registers used:
  2503 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2504 ;; Tracked objects:
  2505 ;;		On entry : 0/0
  2506 ;;		On exit  : 0/0
  2507 ;;		Unchanged: 0/0
  2508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2509 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2512 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2513 ;;Total ram usage:        2 bytes
  2514 ;; Hardware stack levels used:    1
  2515 ;; This function calls:
  2516 ;;		Nothing
  2517 ;; This function is called by:
  2518 ;;		_waitSEGStop
  2519 ;;		_main
  2520 ;;		_kaisu
  2521 ;;		_motorStop
  2522 ;;		_buzzStop
  2523 ;; This function uses a non-reentrant model
  2524 ;;
  2525                           
  2526                           
  2527                           ;psect for function _fclr
  2528  0184                     _fclr:
  2529  0184                     l2391:	
  2530                           ;incstack = 0
  2531                           ; Regs used in _fclr: [wreg-fsr0h+status,2+status,0]
  2532                           
  2533                           
  2534                           ;Q4.c: 369: void fclr(unsigned short flg);Q4.c: 370: {;Q4.c: 371:     switch(flg){
  2535  0184  2993               	goto	l2401
  2536  0185                     l2393:
  2537                           
  2538                           ;Q4.c: 373:                     flag_R=0;
  2539  0185  0020               	movlb	0	; select bank0
  2540  0186  01E8               	clrf	_flag_R
  2541  0187  01E9               	clrf	_flag_R+1
  2542                           
  2543                           ;Q4.c: 374:                     break;
  2544  0188  29A3               	goto	l217
  2545  0189                     l2395:
  2546                           
  2547                           ;Q4.c: 376:                     flag_P=0;
  2548  0189  0020               	movlb	0	; select bank0
  2549  018A  01E6               	clrf	_flag_P
  2550  018B  01E7               	clrf	_flag_P+1
  2551                           
  2552                           ;Q4.c: 377:                     break;
  2553  018C  29A3               	goto	l217
  2554  018D                     l2397:
  2555                           
  2556                           ;Q4.c: 379:                     flag_P=flag_R=0;
  2557  018D  0020               	movlb	0	; select bank0
  2558  018E  01E8               	clrf	_flag_R
  2559  018F  01E9               	clrf	_flag_R+1
  2560  0190  01E6               	clrf	_flag_P
  2561  0191  01E7               	clrf	_flag_P+1
  2562                           
  2563                           ;Q4.c: 380:                     break;
  2564  0192  29A3               	goto	l217
  2565  0193                     l2401:
  2566                           
  2567                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2568                           ; Switch size 1, requested type "simple"
  2569                           ; Number of cases is 1, Range of values is 0 to 0
  2570                           ; switch strategies available:
  2571                           ; Name         Instructions Cycles
  2572                           ; simple_byte            4     3 (average)
  2573                           ; direct_byte            8     6 (fixed)
  2574                           ; jumptable            260     6 (fixed)
  2575                           ;	Chosen strategy is simple_byte
  2576  0193  0871               	movf	fclr@flg+1,w
  2577  0194  3A00               	xorlw	0	; case 0
  2578  0195  1903               	skipnz
  2579  0196  2998               	goto	l3439
  2580  0197  29A3               	goto	l217
  2581  0198                     l3439:
  2582                           
  2583                           ; Switch size 1, requested type "simple"
  2584                           ; Number of cases is 3, Range of values is 0 to 2
  2585                           ; switch strategies available:
  2586                           ; Name         Instructions Cycles
  2587                           ; simple_byte           10     6 (average)
  2588                           ; direct_byte           12     6 (fixed)
  2589                           ; jumptable            260     6 (fixed)
  2590                           ;	Chosen strategy is simple_byte
  2591  0198  0870               	movf	fclr@flg,w
  2592  0199  3A00               	xorlw	0	; case 0
  2593  019A  1903               	skipnz
  2594  019B  2985               	goto	l2393
  2595  019C  3A01               	xorlw	1	; case 1
  2596  019D  1903               	skipnz
  2597  019E  2989               	goto	l2395
  2598  019F  3A03               	xorlw	3	; case 2
  2599  01A0  1903               	skipnz
  2600  01A1  298D               	goto	l2397
  2601  01A2  29A3               	goto	l217
  2602  01A3                     l217:
  2603  01A3  0008               	return
  2604  01A4                     __end_of_fclr:
  2605                           
  2606                           	psect	text6
  2607  0165                     __ptext6:	
  2608 ;; *************** function ___wmul *****************
  2609 ;; Defined at:
  2610 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  2611 ;; Parameters:    Size  Location     Type
  2612 ;;  multiplier      2    8[COMMON] unsigned int 
  2613 ;;  multiplicand    2   10[COMMON] unsigned int 
  2614 ;; Auto vars:     Size  Location     Type
  2615 ;;  product         2   12[COMMON] unsigned int 
  2616 ;; Return value:  Size  Location     Type
  2617 ;;                  2    8[COMMON] unsigned int 
  2618 ;; Registers used:
  2619 ;;		wreg, status,2, status,0
  2620 ;; Tracked objects:
  2621 ;;		On entry : 0/0
  2622 ;;		On exit  : 0/0
  2623 ;;		Unchanged: 0/0
  2624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2625 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2626 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2628 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2629 ;;Total ram usage:        6 bytes
  2630 ;; Hardware stack levels used:    1
  2631 ;; This function calls:
  2632 ;;		Nothing
  2633 ;; This function is called by:
  2634 ;;		_waitSEGStop
  2635 ;;		_main
  2636 ;;		_wait
  2637 ;;		_hen7
  2638 ;;		_hens
  2639 ;; This function uses a non-reentrant model
  2640 ;;
  2641                           
  2642                           
  2643                           ;psect for function ___wmul
  2644  0165                     ___wmul:
  2645  0165                     l2407:	
  2646                           ;incstack = 0
  2647                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2648                           
  2649  0165  01FC               	clrf	___wmul@product
  2650  0166  01FD               	clrf	___wmul@product+1
  2651  0167                     l2409:
  2652  0167  1C78               	btfss	___wmul@multiplier,0
  2653  0168  296A               	goto	u2101
  2654  0169  296B               	goto	u2100
  2655  016A                     u2101:
  2656  016A  296F               	goto	l543
  2657  016B                     u2100:
  2658  016B                     l2411:
  2659  016B  087A               	movf	___wmul@multiplicand,w
  2660  016C  07FC               	addwf	___wmul@product,f
  2661  016D  087B               	movf	___wmul@multiplicand+1,w
  2662  016E  3DFD               	addwfc	___wmul@product+1,f
  2663  016F                     l543:
  2664  016F  3001               	movlw	1
  2665  0170                     u2115:
  2666  0170  35FA               	lslf	___wmul@multiplicand,f
  2667  0171  0DFB               	rlf	___wmul@multiplicand+1,f
  2668  0172  0B89               	decfsz	9,f
  2669  0173  2970               	goto	u2115
  2670  0174                     l2413:
  2671  0174  3001               	movlw	1
  2672  0175                     u2125:
  2673  0175  36F9               	lsrf	___wmul@multiplier+1,f
  2674  0176  0CF8               	rrf	___wmul@multiplier,f
  2675  0177  0B89               	decfsz	9,f
  2676  0178  2975               	goto	u2125
  2677  0179                     l2415:
  2678  0179  0878               	movf	___wmul@multiplier,w
  2679  017A  0479               	iorwf	___wmul@multiplier+1,w
  2680  017B  1D03               	btfss	3,2
  2681  017C  297E               	goto	u2131
  2682  017D  297F               	goto	u2130
  2683  017E                     u2131:
  2684  017E  2967               	goto	l2409
  2685  017F                     u2130:
  2686  017F                     l2417:
  2687  017F  087D               	movf	___wmul@product+1,w
  2688  0180  00F9               	movwf	?___wmul+1
  2689  0181  087C               	movf	___wmul@product,w
  2690  0182  00F8               	movwf	?___wmul
  2691  0183                     l545:
  2692  0183  0008               	return
  2693  0184                     __end_of___wmul:
  2694                           
  2695                           	psect	text7
  2696  021E                     __ptext7:	
  2697 ;; *************** function ___lwdiv *****************
  2698 ;; Defined at:
  2699 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\lwdiv.c"
  2700 ;; Parameters:    Size  Location     Type
  2701 ;;  divisor         2    0[COMMON] unsigned int 
  2702 ;;  dividend        2    2[COMMON] unsigned int 
  2703 ;; Auto vars:     Size  Location     Type
  2704 ;;  quotient        2    5[COMMON] unsigned int 
  2705 ;;  counter         1    7[COMMON] unsigned char 
  2706 ;; Return value:  Size  Location     Type
  2707 ;;                  2    0[COMMON] unsigned int 
  2708 ;; Registers used:
  2709 ;;		wreg, status,2, status,0
  2710 ;; Tracked objects:
  2711 ;;		On entry : 0/0
  2712 ;;		On exit  : 0/0
  2713 ;;		Unchanged: 0/0
  2714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2715 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2716 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2717 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2718 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2719 ;;Total ram usage:        8 bytes
  2720 ;; Hardware stack levels used:    1
  2721 ;; This function calls:
  2722 ;;		Nothing
  2723 ;; This function is called by:
  2724 ;;		_waitSEGStop
  2725 ;;		_waitSEG
  2726 ;; This function uses a non-reentrant model
  2727 ;;
  2728                           
  2729                           
  2730                           ;psect for function ___lwdiv
  2731  021E                     ___lwdiv:
  2732  021E                     l2421:	
  2733                           ;incstack = 0
  2734                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2735                           
  2736  021E  01F5               	clrf	___lwdiv@quotient
  2737  021F  01F6               	clrf	___lwdiv@quotient+1
  2738  0220                     l2423:
  2739  0220  0870               	movf	___lwdiv@divisor,w
  2740  0221  0471               	iorwf	___lwdiv@divisor+1,w
  2741  0222  1903               	btfsc	3,2
  2742  0223  2A25               	goto	u2141
  2743  0224  2A26               	goto	u2140
  2744  0225                     u2141:
  2745  0225  2A55               	goto	l2443
  2746  0226                     u2140:
  2747  0226                     l2425:
  2748  0226  01F7               	clrf	___lwdiv@counter
  2749  0227  0AF7               	incf	___lwdiv@counter,f
  2750  0228  2A32               	goto	l2431
  2751  0229                     l2427:
  2752  0229  3001               	movlw	1
  2753  022A                     u2155:
  2754  022A  35F0               	lslf	___lwdiv@divisor,f
  2755  022B  0DF1               	rlf	___lwdiv@divisor+1,f
  2756  022C  0B89               	decfsz	9,f
  2757  022D  2A2A               	goto	u2155
  2758  022E                     l2429:
  2759  022E  3001               	movlw	1
  2760  022F  00F4               	movwf	??___lwdiv
  2761  0230  0874               	movf	??___lwdiv,w
  2762  0231  07F7               	addwf	___lwdiv@counter,f
  2763  0232                     l2431:
  2764  0232  1FF1               	btfss	___lwdiv@divisor+1,7
  2765  0233  2A35               	goto	u2161
  2766  0234  2A36               	goto	u2160
  2767  0235                     u2161:
  2768  0235  2A29               	goto	l2427
  2769  0236                     u2160:
  2770  0236                     l2433:
  2771  0236  3001               	movlw	1
  2772  0237                     u2175:
  2773  0237  35F5               	lslf	___lwdiv@quotient,f
  2774  0238  0DF6               	rlf	___lwdiv@quotient+1,f
  2775  0239  0B89               	decfsz	9,f
  2776  023A  2A37               	goto	u2175
  2777  023B  0871               	movf	___lwdiv@divisor+1,w
  2778  023C  0273               	subwf	___lwdiv@dividend+1,w
  2779  023D  1D03               	skipz
  2780  023E  2A41               	goto	u2185
  2781  023F  0870               	movf	___lwdiv@divisor,w
  2782  0240  0272               	subwf	___lwdiv@dividend,w
  2783  0241                     u2185:
  2784  0241  1C03               	skipc
  2785  0242  2A44               	goto	u2181
  2786  0243  2A45               	goto	u2180
  2787  0244                     u2181:
  2788  0244  2A4A               	goto	l2439
  2789  0245                     u2180:
  2790  0245                     l2435:
  2791  0245  0870               	movf	___lwdiv@divisor,w
  2792  0246  02F2               	subwf	___lwdiv@dividend,f
  2793  0247  0871               	movf	___lwdiv@divisor+1,w
  2794  0248  3BF3               	subwfb	___lwdiv@dividend+1,f
  2795  0249                     l2437:
  2796  0249  1475               	bsf	___lwdiv@quotient,0
  2797  024A                     l2439:
  2798  024A  3001               	movlw	1
  2799  024B                     u2195:
  2800  024B  36F1               	lsrf	___lwdiv@divisor+1,f
  2801  024C  0CF0               	rrf	___lwdiv@divisor,f
  2802  024D  0B89               	decfsz	9,f
  2803  024E  2A4B               	goto	u2195
  2804  024F                     l2441:
  2805  024F  3001               	movlw	1
  2806  0250  02F7               	subwf	___lwdiv@counter,f
  2807  0251  1D03               	btfss	3,2
  2808  0252  2A54               	goto	u2201
  2809  0253  2A55               	goto	u2200
  2810  0254                     u2201:
  2811  0254  2A36               	goto	l2433
  2812  0255                     u2200:
  2813  0255                     l2443:
  2814  0255  0876               	movf	___lwdiv@quotient+1,w
  2815  0256  00F1               	movwf	?___lwdiv+1
  2816  0257  0875               	movf	___lwdiv@quotient,w
  2817  0258  00F0               	movwf	?___lwdiv
  2818  0259                     l823:
  2819  0259  0008               	return
  2820  025A                     __end_of___lwdiv:
  2821                           
  2822                           	psect	text8
  2823  0152                     __ptext8:	
  2824 ;; *************** function _portinit *****************
  2825 ;; Defined at:
  2826 ;;		line 160 in file "Q4.c"
  2827 ;; Parameters:    Size  Location     Type
  2828 ;;		None
  2829 ;; Auto vars:     Size  Location     Type
  2830 ;;		None
  2831 ;; Return value:  Size  Location     Type
  2832 ;;                  1    wreg      void 
  2833 ;; Registers used:
  2834 ;;		wreg, status,2
  2835 ;; Tracked objects:
  2836 ;;		On entry : 0/0
  2837 ;;		On exit  : 0/0
  2838 ;;		Unchanged: 0/0
  2839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2844 ;;Total ram usage:        0 bytes
  2845 ;; Hardware stack levels used:    1
  2846 ;; This function calls:
  2847 ;;		Nothing
  2848 ;; This function is called by:
  2849 ;;		_main
  2850 ;; This function uses a non-reentrant model
  2851 ;;
  2852                           
  2853                           
  2854                           ;psect for function _portinit
  2855  0152                     _portinit:
  2856  0152                     l2447:	
  2857                           ;incstack = 0
  2858                           ; Regs used in _portinit: [wreg+status,2]
  2859                           
  2860                           
  2861                           ;Q4.c: 163:     ANSELA=0x00;
  2862  0152  0023               	movlb	3	; select bank3
  2863  0153  018C               	clrf	12	;volatile
  2864                           
  2865                           ;Q4.c: 164:     ANSELB=0x00;
  2866  0154  018D               	clrf	13	;volatile
  2867  0155                     l2449:
  2868                           
  2869                           ;Q4.c: 166:     PORTA=0x07;
  2870  0155  3007               	movlw	7
  2871  0156  0020               	movlb	0	; select bank0
  2872  0157  008C               	movwf	12	;volatile
  2873  0158                     l2451:
  2874                           
  2875                           ;Q4.c: 167:     TRISA=0x07;
  2876  0158  3007               	movlw	7
  2877  0159  0021               	movlb	1	; select bank1
  2878  015A  008C               	movwf	12	;volatile
  2879                           
  2880                           ;Q4.c: 168:     PORTB=0x00;
  2881  015B  0020               	movlb	0	; select bank0
  2882  015C  018D               	clrf	13	;volatile
  2883                           
  2884                           ;Q4.c: 169:     TRISB=0x00;
  2885  015D  0021               	movlb	1	; select bank1
  2886  015E  018D               	clrf	13	;volatile
  2887  015F                     l2453:
  2888                           
  2889                           ;Q4.c: 170:     PORTC=0x07;
  2890  015F  3007               	movlw	7
  2891  0160  0020               	movlb	0	; select bank0
  2892  0161  008E               	movwf	14	;volatile
  2893  0162                     l2455:
  2894                           
  2895                           ;Q4.c: 171:     TRISC=0x00;
  2896  0162  0021               	movlb	1	; select bank1
  2897  0163  018E               	clrf	14	;volatile
  2898  0164                     l95:
  2899  0164  0008               	return
  2900  0165                     __end_of_portinit:
  2901                           
  2902                           	psect	text9
  2903  01C4                     __ptext9:	
  2904 ;; *************** function _motor *****************
  2905 ;; Defined at:
  2906 ;;		line 513 in file "Q4.c"
  2907 ;; Parameters:    Size  Location     Type
  2908 ;;  kakudo          2    8[BANK0 ] int 
  2909 ;;  dig1data        2   10[BANK0 ] unsigned short 
  2910 ;;  dig2data        2   12[BANK0 ] unsigned short 
  2911 ;;  smdata          2   14[BANK0 ] unsigned short 
  2912 ;;  tr              2   16[BANK0 ] unsigned int 
  2913 ;; Auto vars:     Size  Location     Type
  2914 ;;  i               2   18[BANK0 ] int 
  2915 ;; Return value:  Size  Location     Type
  2916 ;;                  1    wreg      void 
  2917 ;; Registers used:
  2918 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2919 ;; Tracked objects:
  2920 ;;		On entry : 0/0
  2921 ;;		On exit  : 0/0
  2922 ;;		Unchanged: 0/0
  2923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2924 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2925 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2927 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2928 ;;Total ram usage:       12 bytes
  2929 ;; Hardware stack levels used:    1
  2930 ;; Hardware stack levels required when called:    1
  2931 ;; This function calls:
  2932 ;;		_dynam
  2933 ;; This function is called by:
  2934 ;;		_main
  2935 ;; This function uses a non-reentrant model
  2936 ;;
  2937                           
  2938                           
  2939                           ;psect for function _motor
  2940  01C4                     _motor:
  2941  01C4                     l2587:	
  2942                           ;incstack = 0
  2943                           ; Regs used in _motor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2944                           
  2945                           
  2946                           ;Q4.c: 515:     for(int i = kakudo;i>=0;i--){
  2947  01C4  0020               	movlb	0	; select bank0
  2948  01C5  0829               	movf	motor@kakudo+1,w
  2949  01C6  00B3               	movwf	motor@i+1
  2950  01C7  0828               	movf	motor@kakudo,w
  2951  01C8  00B2               	movwf	motor@i
  2952  01C9                     l2589:
  2953  01C9  1FB3               	btfss	motor@i+1,7
  2954  01CA  29CC               	goto	u2371
  2955  01CB  29CD               	goto	u2370
  2956  01CC                     u2371:
  2957  01CC  29CE               	goto	l2593
  2958  01CD                     u2370:
  2959  01CD  29E7               	goto	l276
  2960  01CE                     l2593:
  2961                           
  2962                           ;Q4.c: 516:         dynam(dig1data,dig2data,smdata,tr);
  2963  01CE  082B               	movf	motor@dig1data+1,w
  2964  01CF  00F1               	movwf	dynam@dig1data+1
  2965  01D0  082A               	movf	motor@dig1data,w
  2966  01D1  00F0               	movwf	dynam@dig1data
  2967  01D2  082D               	movf	motor@dig2data+1,w
  2968  01D3  00F3               	movwf	dynam@dig2data+1
  2969  01D4  082C               	movf	motor@dig2data,w
  2970  01D5  00F2               	movwf	dynam@dig2data
  2971  01D6  082F               	movf	motor@smdata+1,w
  2972  01D7  00F5               	movwf	dynam@smdata+1
  2973  01D8  082E               	movf	motor@smdata,w
  2974  01D9  00F4               	movwf	dynam@smdata
  2975  01DA  0831               	movf	motor@tr+1,w
  2976  01DB  00F7               	movwf	dynam@tr+1
  2977  01DC  0830               	movf	motor@tr,w
  2978  01DD  00F6               	movwf	dynam@tr
  2979  01DE  3184  2401  3181   	fcall	_dynam
  2980  01E1                     l2595:
  2981                           
  2982                           ;Q4.c: 517:     }
  2983  01E1  30FF               	movlw	255
  2984  01E2  0020               	movlb	0	; select bank0
  2985  01E3  07B2               	addwf	motor@i,f
  2986  01E4  30FF               	movlw	255
  2987  01E5  3DB3               	addwfc	motor@i+1,f
  2988  01E6  29C9               	goto	l2589
  2989  01E7                     l276:
  2990  01E7  0008               	return
  2991  01E8                     __end_of_motor:
  2992                           
  2993                           	psect	text10
  2994  0401                     __ptext10:	
  2995 ;; *************** function _dynam *****************
  2996 ;; Defined at:
  2997 ;;		line 206 in file "Q4.c"
  2998 ;; Parameters:    Size  Location     Type
  2999 ;;  dig1data        2    0[COMMON] unsigned short 
  3000 ;;  dig2data        2    2[COMMON] unsigned short 
  3001 ;;  smdata          2    4[COMMON] unsigned short 
  3002 ;;  tr              2    6[COMMON] unsigned int 
  3003 ;; Auto vars:     Size  Location     Type
  3004 ;;  ext             2    6[BANK0 ] unsigned short 
  3005 ;;  j               2    4[BANK0 ] unsigned int 
  3006 ;;  tm              2    2[BANK0 ] unsigned int 
  3007 ;;  smd             2    0[BANK0 ] unsigned short 
  3008 ;; Return value:  Size  Location     Type
  3009 ;;                  1    wreg      void 
  3010 ;; Registers used:
  3011 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3012 ;; Tracked objects:
  3013 ;;		On entry : 0/0
  3014 ;;		On exit  : 0/0
  3015 ;;		Unchanged: 0/0
  3016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3017 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3018 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3020 ;;      Totals:         8       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3021 ;;Total ram usage:       16 bytes
  3022 ;; Hardware stack levels used:    1
  3023 ;; This function calls:
  3024 ;;		Nothing
  3025 ;; This function is called by:
  3026 ;;		_waitSEGStop
  3027 ;;		_motor
  3028 ;;		_main
  3029 ;;		_clear
  3030 ;;		_waitSEG
  3031 ;;		_motorStop
  3032 ;; This function uses a non-reentrant model
  3033 ;;
  3034                           
  3035                           
  3036                           ;psect for function _dynam
  3037  0401                     _dynam:
  3038  0401                     l2201:	
  3039                           ;incstack = 0
  3040                           ; Regs used in _dynam: [wreg-fsr0h+status,2+status,0]
  3041                           
  3042  0401  0020               	movlb	0	; select bank0
  3043  0402  01A2               	clrf	dynam@tm
  3044  0403  01A3               	clrf	dynam@tm+1
  3045                           
  3046                           ;Q4.c: 209:     unsigned short ext=0,smd=0;
  3047  0404  01A6               	clrf	dynam@ext
  3048  0405  01A7               	clrf	dynam@ext+1
  3049  0406  01A0               	clrf	dynam@smd
  3050  0407  01A1               	clrf	dynam@smd+1
  3051  0408                     l2203:
  3052                           
  3053                           ;Q4.c: 210:     RC7=0;
  3054  0408  138E               	bcf	14,7	;volatile
  3055  0409                     l2205:
  3056                           
  3057                           ;Q4.c: 211:     PORTB=dig1data;
  3058  0409  0870               	movf	dynam@dig1data,w
  3059  040A  008D               	movwf	13	;volatile
  3060  040B                     l2207:
  3061                           
  3062                           ;Q4.c: 212:     RC5=0;RC6=1;
  3063  040B  128E               	bcf	14,5	;volatile
  3064  040C                     l2209:
  3065  040C  170E               	bsf	14,6	;volatile
  3066  040D                     l2211:
  3067                           
  3068                           ;Q4.c: 213:     if(tr==5){tm=3000;}
  3069  040D  3005               	movlw	5
  3070  040E  0676               	xorwf	dynam@tr,w
  3071  040F  0477               	iorwf	dynam@tr+1,w
  3072  0410  1D03               	btfss	3,2
  3073  0411  2C13               	goto	u1831
  3074  0412  2C14               	goto	u1830
  3075  0413                     u1831:
  3076  0413  2C19               	goto	l2215
  3077  0414                     u1830:
  3078  0414                     l2213:
  3079  0414  30B8               	movlw	184
  3080  0415  00A2               	movwf	dynam@tm
  3081  0416  300B               	movlw	11
  3082  0417  00A3               	movwf	dynam@tm+1
  3083  0418  2C1D               	goto	l112
  3084  0419                     l2215:
  3085  0419  30E8               	movlw	232
  3086  041A  00A2               	movwf	dynam@tm
  3087  041B  3003               	movlw	3
  3088  041C  00A3               	movwf	dynam@tm+1
  3089  041D                     l112:
  3090                           
  3091                           ;Q4.c: 215:     for(j=tm;j>0;--j);
  3092  041D  0823               	movf	dynam@tm+1,w
  3093  041E  00A5               	movwf	dynam@j+1
  3094  041F  0822               	movf	dynam@tm,w
  3095  0420  00A4               	movwf	dynam@j
  3096  0421                     l2217:
  3097  0421  0824               	movf	dynam@j,w
  3098  0422  0425               	iorwf	dynam@j+1,w
  3099  0423  1D03               	btfss	3,2
  3100  0424  2C26               	goto	u1841
  3101  0425  2C27               	goto	u1840
  3102  0426                     u1841:
  3103  0426  2C28               	goto	l2221
  3104  0427                     u1840:
  3105  0427  2C2D               	goto	l114
  3106  0428                     l2221:
  3107  0428  3001               	movlw	1
  3108  0429  02A4               	subwf	dynam@j,f
  3109  042A  3000               	movlw	0
  3110  042B  3BA5               	subwfb	dynam@j+1,f
  3111  042C  2C21               	goto	l2217
  3112  042D                     l114:
  3113                           
  3114                           ;Q4.c: 216:     RC5=0;RC6=0;
  3115  042D  128E               	bcf	14,5	;volatile
  3116  042E  130E               	bcf	14,6	;volatile
  3117  042F                     l2225:
  3118                           
  3119                           ;Q4.c: 217:     PORTB=dig2data;
  3120  042F  0872               	movf	dynam@dig2data,w
  3121  0430  008D               	movwf	13	;volatile
  3122  0431                     l2227:
  3123                           
  3124                           ;Q4.c: 218:     RC6=0;RC5=1;
  3125  0431  130E               	bcf	14,6	;volatile
  3126  0432                     l2229:
  3127  0432  168E               	bsf	14,5	;volatile
  3128  0433                     l2231:
  3129                           
  3130                           ;Q4.c: 219:     if(tr==5){tm=3000;}
  3131  0433  3005               	movlw	5
  3132  0434  0676               	xorwf	dynam@tr,w
  3133  0435  0477               	iorwf	dynam@tr+1,w
  3134  0436  1D03               	btfss	3,2
  3135  0437  2C39               	goto	u1851
  3136  0438  2C3A               	goto	u1850
  3137  0439                     u1851:
  3138  0439  2C3F               	goto	l2235
  3139  043A                     u1850:
  3140  043A                     l2233:
  3141  043A  30B8               	movlw	184
  3142  043B  00A2               	movwf	dynam@tm
  3143  043C  300B               	movlw	11
  3144  043D  00A3               	movwf	dynam@tm+1
  3145  043E  2C43               	goto	l116
  3146  043F                     l2235:
  3147  043F  30E8               	movlw	232
  3148  0440  00A2               	movwf	dynam@tm
  3149  0441  3003               	movlw	3
  3150  0442  00A3               	movwf	dynam@tm+1
  3151  0443                     l116:
  3152                           
  3153                           ;Q4.c: 221:     for(j=tm;j>0;--j);
  3154  0443  0823               	movf	dynam@tm+1,w
  3155  0444  00A5               	movwf	dynam@j+1
  3156  0445  0822               	movf	dynam@tm,w
  3157  0446  00A4               	movwf	dynam@j
  3158  0447                     l2237:
  3159  0447  0824               	movf	dynam@j,w
  3160  0448  0425               	iorwf	dynam@j+1,w
  3161  0449  1D03               	btfss	3,2
  3162  044A  2C4C               	goto	u1861
  3163  044B  2C4D               	goto	u1860
  3164  044C                     u1861:
  3165  044C  2C4E               	goto	l2241
  3166  044D                     u1860:
  3167  044D  2C53               	goto	l118
  3168  044E                     l2241:
  3169  044E  3001               	movlw	1
  3170  044F  02A4               	subwf	dynam@j,f
  3171  0450  3000               	movlw	0
  3172  0451  3BA5               	subwfb	dynam@j+1,f
  3173  0452  2C47               	goto	l2237
  3174  0453                     l118:
  3175                           
  3176                           ;Q4.c: 222:     RC5=0;RC6=0;
  3177  0453  128E               	bcf	14,5	;volatile
  3178  0454  130E               	bcf	14,6	;volatile
  3179                           
  3180                           ;Q4.c: 223:     switch(smdata){
  3181  0455  2D5A               	goto	l2351
  3182  0456                     l2245:
  3183                           
  3184                           ;Q4.c: 225:                 PORTB=0x00;smd=(0x01|0x02|0x04|0x08|0x10|0x20);
  3185  0456  018D               	clrf	13	;volatile
  3186  0457                     l2247:
  3187  0457                     l2249:
  3188                           
  3189                           ;Q4.c: 226:                 RC7=0;RC7=1;RC7=0;
  3190  0457  138E               	bcf	14,7	;volatile
  3191  0458                     l2251:
  3192  0458  178E               	bsf	14,7	;volatile
  3193  0459                     l2253:
  3194  0459  138E               	bcf	14,7	;volatile
  3195                           
  3196                           ;Q4.c: 227:                 break;
  3197  045A  2D6A               	goto	l135
  3198  045B                     l2255:
  3199                           
  3200                           ;Q4.c: 229:                 if(flg==1)cw=0;flg=0;
  3201  045B  0364               	decf	_flg,w
  3202  045C  0465               	iorwf	_flg+1,w
  3203  045D  1D03               	btfss	3,2
  3204  045E  2C60               	goto	u1871
  3205  045F  2C61               	goto	u1870
  3206  0460                     u1871:
  3207  0460  2C63               	goto	l123
  3208  0461                     u1870:
  3209  0461                     l2257:
  3210  0461  01E2               	clrf	_cw
  3211  0462  01E3               	clrf	_cw+1
  3212  0463                     l123:
  3213  0463  01E4               	clrf	_flg
  3214  0464  01E5               	clrf	_flg+1
  3215  0465                     l2259:
  3216                           
  3217                           ;Q4.c: 230:                 if((cw==0)&&(ext==0)){cw=1;ccw=0;ext=1;PORTB=smd=0x09;}
  3218  0465  0862               	movf	_cw,w
  3219  0466  0463               	iorwf	_cw+1,w
  3220  0467  1D03               	btfss	3,2
  3221  0468  2C6A               	goto	u1881
  3222  0469  2C6B               	goto	u1880
  3223  046A                     u1881:
  3224  046A  2C81               	goto	l2271
  3225  046B                     u1880:
  3226  046B                     l2261:
  3227  046B  0826               	movf	dynam@ext,w
  3228  046C  0427               	iorwf	dynam@ext+1,w
  3229  046D  1D03               	btfss	3,2
  3230  046E  2C70               	goto	u1891
  3231  046F  2C71               	goto	u1890
  3232  0470                     u1891:
  3233  0470  2C81               	goto	l2271
  3234  0471                     u1890:
  3235  0471                     l2263:
  3236  0471  3001               	movlw	1
  3237  0472  00E2               	movwf	_cw
  3238  0473  3000               	movlw	0
  3239  0474  00E3               	movwf	_cw+1
  3240  0475                     l2265:
  3241  0475  01E0               	clrf	_ccw
  3242  0476  01E1               	clrf	_ccw+1
  3243  0477                     l2267:
  3244  0477  3001               	movlw	1
  3245  0478  00A6               	movwf	dynam@ext
  3246  0479  3000               	movlw	0
  3247  047A  00A7               	movwf	dynam@ext+1
  3248  047B                     l2269:
  3249  047B  3009               	movlw	9
  3250  047C  00A0               	movwf	dynam@smd
  3251  047D  3000               	movlw	0
  3252  047E  00A1               	movwf	dynam@smd+1
  3253  047F  0820               	movf	dynam@smd,w
  3254  0480  008D               	movwf	13	;volatile
  3255  0481                     l2271:
  3256                           
  3257                           ;Q4.c: 231:                 if((cw==1)&&(ext==0)){cw=2;ccw=3;ext=1;PORTB=smd=0x0C;}
  3258  0481  0362               	decf	_cw,w
  3259  0482  0463               	iorwf	_cw+1,w
  3260  0483  1D03               	btfss	3,2
  3261  0484  2C86               	goto	u1901
  3262  0485  2C87               	goto	u1900
  3263  0486                     u1901:
  3264  0486  2C9F               	goto	l2277
  3265  0487                     u1900:
  3266  0487                     l2273:
  3267  0487  0826               	movf	dynam@ext,w
  3268  0488  0427               	iorwf	dynam@ext+1,w
  3269  0489  1D03               	btfss	3,2
  3270  048A  2C8C               	goto	u1911
  3271  048B  2C8D               	goto	u1910
  3272  048C                     u1911:
  3273  048C  2C9F               	goto	l2277
  3274  048D                     u1910:
  3275  048D                     l2275:
  3276  048D  3002               	movlw	2
  3277  048E  00E2               	movwf	_cw
  3278  048F  3000               	movlw	0
  3279  0490  00E3               	movwf	_cw+1
  3280  0491  3003               	movlw	3
  3281  0492  00E0               	movwf	_ccw
  3282  0493  3000               	movlw	0
  3283  0494  00E1               	movwf	_ccw+1
  3284  0495  3001               	movlw	1
  3285  0496  00A6               	movwf	dynam@ext
  3286  0497  3000               	movlw	0
  3287  0498  00A7               	movwf	dynam@ext+1
  3288  0499  300C               	movlw	12
  3289  049A  00A0               	movwf	dynam@smd
  3290  049B  3000               	movlw	0
  3291  049C  00A1               	movwf	dynam@smd+1
  3292  049D  0820               	movf	dynam@smd,w
  3293  049E  008D               	movwf	13	;volatile
  3294  049F                     l2277:
  3295                           
  3296                           ;Q4.c: 232:                 if((cw==2)&&(ext==0)){cw=3;ccw=2;ext=1;PORTB=smd=0x06;}
  3297  049F  3002               	movlw	2
  3298  04A0  0662               	xorwf	_cw,w
  3299  04A1  0463               	iorwf	_cw+1,w
  3300  04A2  1D03               	btfss	3,2
  3301  04A3  2CA5               	goto	u1921
  3302  04A4  2CA6               	goto	u1920
  3303  04A5                     u1921:
  3304  04A5  2CBE               	goto	l2283
  3305  04A6                     u1920:
  3306  04A6                     l2279:
  3307  04A6  0826               	movf	dynam@ext,w
  3308  04A7  0427               	iorwf	dynam@ext+1,w
  3309  04A8  1D03               	btfss	3,2
  3310  04A9  2CAB               	goto	u1931
  3311  04AA  2CAC               	goto	u1930
  3312  04AB                     u1931:
  3313  04AB  2CBE               	goto	l2283
  3314  04AC                     u1930:
  3315  04AC                     l2281:
  3316  04AC  3003               	movlw	3
  3317  04AD  00E2               	movwf	_cw
  3318  04AE  3000               	movlw	0
  3319  04AF  00E3               	movwf	_cw+1
  3320  04B0  3002               	movlw	2
  3321  04B1  00E0               	movwf	_ccw
  3322  04B2  3000               	movlw	0
  3323  04B3  00E1               	movwf	_ccw+1
  3324  04B4  3001               	movlw	1
  3325  04B5  00A6               	movwf	dynam@ext
  3326  04B6  3000               	movlw	0
  3327  04B7  00A7               	movwf	dynam@ext+1
  3328  04B8  3006               	movlw	6
  3329  04B9  00A0               	movwf	dynam@smd
  3330  04BA  3000               	movlw	0
  3331  04BB  00A1               	movwf	dynam@smd+1
  3332  04BC  0820               	movf	dynam@smd,w
  3333  04BD  008D               	movwf	13	;volatile
  3334  04BE                     l2283:
  3335                           
  3336                           ;Q4.c: 233:                 if((cw==3)&&(ext==0)){cw=0;ccw=1;ext=1;PORTB=smd=0x03;}
  3337  04BE  3003               	movlw	3
  3338  04BF  0662               	xorwf	_cw,w
  3339  04C0  0463               	iorwf	_cw+1,w
  3340  04C1  1D03               	btfss	3,2
  3341  04C2  2CC4               	goto	u1941
  3342  04C3  2CC5               	goto	u1940
  3343  04C4                     u1941:
  3344  04C4  2C57               	goto	l2249
  3345  04C5                     u1940:
  3346  04C5                     l2285:
  3347  04C5  0826               	movf	dynam@ext,w
  3348  04C6  0427               	iorwf	dynam@ext+1,w
  3349  04C7  1D03               	btfss	3,2
  3350  04C8  2CCA               	goto	u1951
  3351  04C9  2CCB               	goto	u1950
  3352  04CA                     u1951:
  3353  04CA  2C57               	goto	l2249
  3354  04CB                     u1950:
  3355  04CB                     l2287:
  3356  04CB  01E2               	clrf	_cw
  3357  04CC  01E3               	clrf	_cw+1
  3358  04CD                     l2289:
  3359  04CD  3001               	movlw	1
  3360  04CE  00E0               	movwf	_ccw
  3361  04CF  3000               	movlw	0
  3362  04D0  00E1               	movwf	_ccw+1
  3363  04D1                     l2291:
  3364  04D1                     l2293:
  3365  04D1  3003               	movlw	3
  3366  04D2  00A0               	movwf	dynam@smd
  3367  04D3  3000               	movlw	0
  3368  04D4  00A1               	movwf	dynam@smd+1
  3369  04D5  0820               	movf	dynam@smd,w
  3370  04D6  008D               	movwf	13	;volatile
  3371  04D7  2C57               	goto	l2249
  3372  04D8                     l2301:
  3373                           
  3374                           ;Q4.c: 237:                 if(flg==1)ccw=0;flg=0;
  3375  04D8  0364               	decf	_flg,w
  3376  04D9  0465               	iorwf	_flg+1,w
  3377  04DA  1D03               	btfss	3,2
  3378  04DB  2CDD               	goto	u1961
  3379  04DC  2CDE               	goto	u1960
  3380  04DD                     u1961:
  3381  04DD  2CE0               	goto	l129
  3382  04DE                     u1960:
  3383  04DE                     l2303:
  3384  04DE  01E0               	clrf	_ccw
  3385  04DF  01E1               	clrf	_ccw+1
  3386  04E0                     l129:
  3387  04E0  01E4               	clrf	_flg
  3388  04E1  01E5               	clrf	_flg+1
  3389  04E2                     l2305:
  3390                           
  3391                           ;Q4.c: 238:                 if((ccw==0)&&(ext==0)){ccw=1;cw=0;ext=1;PORTB=smd=0x03;}
  3392  04E2  0860               	movf	_ccw,w
  3393  04E3  0461               	iorwf	_ccw+1,w
  3394  04E4  1D03               	btfss	3,2
  3395  04E5  2CE7               	goto	u1971
  3396  04E6  2CE8               	goto	u1970
  3397  04E7                     u1971:
  3398  04E7  2CFE               	goto	l2317
  3399  04E8                     u1970:
  3400  04E8                     l2307:
  3401  04E8  0826               	movf	dynam@ext,w
  3402  04E9  0427               	iorwf	dynam@ext+1,w
  3403  04EA  1D03               	btfss	3,2
  3404  04EB  2CED               	goto	u1981
  3405  04EC  2CEE               	goto	u1980
  3406  04ED                     u1981:
  3407  04ED  2CFE               	goto	l2317
  3408  04EE                     u1980:
  3409  04EE                     l2309:
  3410  04EE  3001               	movlw	1
  3411  04EF  00E0               	movwf	_ccw
  3412  04F0  3000               	movlw	0
  3413  04F1  00E1               	movwf	_ccw+1
  3414  04F2                     l2311:
  3415  04F2  01E2               	clrf	_cw
  3416  04F3  01E3               	clrf	_cw+1
  3417  04F4                     l2313:
  3418  04F4  3001               	movlw	1
  3419  04F5  00A6               	movwf	dynam@ext
  3420  04F6  3000               	movlw	0
  3421  04F7  00A7               	movwf	dynam@ext+1
  3422  04F8                     l2315:
  3423  04F8  3003               	movlw	3
  3424  04F9  00A0               	movwf	dynam@smd
  3425  04FA  3000               	movlw	0
  3426  04FB  00A1               	movwf	dynam@smd+1
  3427  04FC  0820               	movf	dynam@smd,w
  3428  04FD  008D               	movwf	13	;volatile
  3429  04FE                     l2317:
  3430                           
  3431                           ;Q4.c: 239:                 if((ccw==1)&&(ext==0)){ccw=2;cw=3;ext=1;PORTB=smd=0x06;}
  3432  04FE  0360               	decf	_ccw,w
  3433  04FF  0461               	iorwf	_ccw+1,w
  3434  0500  1D03               	btfss	3,2
  3435  0501  2D03               	goto	u1991
  3436  0502  2D04               	goto	u1990
  3437  0503                     u1991:
  3438  0503  2D1C               	goto	l2323
  3439  0504                     u1990:
  3440  0504                     l2319:
  3441  0504  0826               	movf	dynam@ext,w
  3442  0505  0427               	iorwf	dynam@ext+1,w
  3443  0506  1D03               	btfss	3,2
  3444  0507  2D09               	goto	u2001
  3445  0508  2D0A               	goto	u2000
  3446  0509                     u2001:
  3447  0509  2D1C               	goto	l2323
  3448  050A                     u2000:
  3449  050A                     l2321:
  3450  050A  3002               	movlw	2
  3451  050B  00E0               	movwf	_ccw
  3452  050C  3000               	movlw	0
  3453  050D  00E1               	movwf	_ccw+1
  3454  050E  3003               	movlw	3
  3455  050F  00E2               	movwf	_cw
  3456  0510  3000               	movlw	0
  3457  0511  00E3               	movwf	_cw+1
  3458  0512  3001               	movlw	1
  3459  0513  00A6               	movwf	dynam@ext
  3460  0514  3000               	movlw	0
  3461  0515  00A7               	movwf	dynam@ext+1
  3462  0516  3006               	movlw	6
  3463  0517  00A0               	movwf	dynam@smd
  3464  0518  3000               	movlw	0
  3465  0519  00A1               	movwf	dynam@smd+1
  3466  051A  0820               	movf	dynam@smd,w
  3467  051B  008D               	movwf	13	;volatile
  3468  051C                     l2323:
  3469                           
  3470                           ;Q4.c: 240:                 if((ccw==2)&&(ext==0)){ccw=3;cw=2;ext=1;PORTB=smd=0x0C;}
  3471  051C  3002               	movlw	2
  3472  051D  0660               	xorwf	_ccw,w
  3473  051E  0461               	iorwf	_ccw+1,w
  3474  051F  1D03               	btfss	3,2
  3475  0520  2D22               	goto	u2011
  3476  0521  2D23               	goto	u2010
  3477  0522                     u2011:
  3478  0522  2D3B               	goto	l2329
  3479  0523                     u2010:
  3480  0523                     l2325:
  3481  0523  0826               	movf	dynam@ext,w
  3482  0524  0427               	iorwf	dynam@ext+1,w
  3483  0525  1D03               	btfss	3,2
  3484  0526  2D28               	goto	u2021
  3485  0527  2D29               	goto	u2020
  3486  0528                     u2021:
  3487  0528  2D3B               	goto	l2329
  3488  0529                     u2020:
  3489  0529                     l2327:
  3490  0529  3003               	movlw	3
  3491  052A  00E0               	movwf	_ccw
  3492  052B  3000               	movlw	0
  3493  052C  00E1               	movwf	_ccw+1
  3494  052D  3002               	movlw	2
  3495  052E  00E2               	movwf	_cw
  3496  052F  3000               	movlw	0
  3497  0530  00E3               	movwf	_cw+1
  3498  0531  3001               	movlw	1
  3499  0532  00A6               	movwf	dynam@ext
  3500  0533  3000               	movlw	0
  3501  0534  00A7               	movwf	dynam@ext+1
  3502  0535  300C               	movlw	12
  3503  0536  00A0               	movwf	dynam@smd
  3504  0537  3000               	movlw	0
  3505  0538  00A1               	movwf	dynam@smd+1
  3506  0539  0820               	movf	dynam@smd,w
  3507  053A  008D               	movwf	13	;volatile
  3508  053B                     l2329:
  3509                           
  3510                           ;Q4.c: 241:                 if((ccw==3)&&(ext==0)){ccw=0;cw=1;ext=1;PORTB=smd=0x09;}
  3511  053B  3003               	movlw	3
  3512  053C  0660               	xorwf	_ccw,w
  3513  053D  0461               	iorwf	_ccw+1,w
  3514  053E  1D03               	btfss	3,2
  3515  053F  2D41               	goto	u2031
  3516  0540  2D42               	goto	u2030
  3517  0541                     u2031:
  3518  0541  2C57               	goto	l2249
  3519  0542                     u2030:
  3520  0542                     l2331:
  3521  0542  0826               	movf	dynam@ext,w
  3522  0543  0427               	iorwf	dynam@ext+1,w
  3523  0544  1D03               	btfss	3,2
  3524  0545  2D47               	goto	u2041
  3525  0546  2D48               	goto	u2040
  3526  0547                     u2041:
  3527  0547  2C57               	goto	l2249
  3528  0548                     u2040:
  3529  0548                     l2333:
  3530  0548  01E0               	clrf	_ccw
  3531  0549  01E1               	clrf	_ccw+1
  3532  054A                     l2335:
  3533  054A  3001               	movlw	1
  3534  054B  00E2               	movwf	_cw
  3535  054C  3000               	movlw	0
  3536  054D  00E3               	movwf	_cw+1
  3537  054E                     l2337:
  3538  054E                     l2339:
  3539  054E  3009               	movlw	9
  3540  054F  00A0               	movwf	dynam@smd
  3541  0550  3000               	movlw	0
  3542  0551  00A1               	movwf	dynam@smd+1
  3543  0552  0820               	movf	dynam@smd,w
  3544  0553  008D               	movwf	13	;volatile
  3545  0554  2C57               	goto	l2249
  3546  0555                     l2347:
  3547                           
  3548                           ;Q4.c: 245:                 cw=ccw=0;
  3549  0555  01E0               	clrf	_ccw
  3550  0556  01E1               	clrf	_ccw+1
  3551  0557  01E2               	clrf	_cw
  3552  0558  01E3               	clrf	_cw+1
  3553                           
  3554                           ;Q4.c: 246:                 break;
  3555  0559  2D6A               	goto	l135
  3556  055A                     l2351:
  3557                           
  3558                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3559                           ; Switch size 1, requested type "simple"
  3560                           ; Number of cases is 1, Range of values is 0 to 0
  3561                           ; switch strategies available:
  3562                           ; Name         Instructions Cycles
  3563                           ; simple_byte            4     3 (average)
  3564                           ; direct_byte            8     6 (fixed)
  3565                           ; jumptable            260     6 (fixed)
  3566                           ;	Chosen strategy is simple_byte
  3567  055A  0875               	movf	dynam@smdata+1,w
  3568  055B  3A00               	xorlw	0	; case 0
  3569  055C  1903               	skipnz
  3570  055D  2D5F               	goto	l3441
  3571  055E  2D55               	goto	l2347
  3572  055F                     l3441:
  3573                           
  3574                           ; Switch size 1, requested type "simple"
  3575                           ; Number of cases is 3, Range of values is 0 to 2
  3576                           ; switch strategies available:
  3577                           ; Name         Instructions Cycles
  3578                           ; simple_byte           10     6 (average)
  3579                           ; direct_byte           12     6 (fixed)
  3580                           ; jumptable            260     6 (fixed)
  3581                           ;	Chosen strategy is simple_byte
  3582  055F  0874               	movf	dynam@smdata,w
  3583  0560  3A00               	xorlw	0	; case 0
  3584  0561  1903               	skipnz
  3585  0562  2C56               	goto	l2245
  3586  0563  3A01               	xorlw	1	; case 1
  3587  0564  1903               	skipnz
  3588  0565  2C5B               	goto	l2255
  3589  0566  3A03               	xorlw	3	; case 2
  3590  0567  1903               	skipnz
  3591  0568  2CD8               	goto	l2301
  3592  0569  2D55               	goto	l2347
  3593  056A                     l135:
  3594  056A  0008               	return
  3595  056B                     __end_of_dynam:
  3596  007E                     btemp	set	126	;btemp
  3597  007E                     wtemp0	set	126
  3598                           
  3599                           	psect	config
  3600                           
  3601                           ;Config register CONFIG1 @ 0x8007
  3602                           ;	Oscillator Selection
  3603                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  3604                           ;	Watchdog Timer Enable
  3605                           ;	WDTE = OFF, WDT disabled
  3606                           ;	Power-up Timer Enable
  3607                           ;	PWRTE = OFF, PWRT disabled
  3608                           ;	MCLR Pin Function Select
  3609                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  3610                           ;	Flash Program Memory Code Protection
  3611                           ;	CP = OFF, Program memory code protection is disabled
  3612                           ;	Data Memory Code Protection
  3613                           ;	CPD = OFF, Data memory code protection is disabled
  3614                           ;	Brown-out Reset Enable
  3615                           ;	BOREN = OFF, Brown-out Reset disabled
  3616                           ;	Clock Out Enable
  3617                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  3618                           ;	Internal/External Switchover
  3619                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3620                           ;	Fail-Safe Clock Monitor Enable
  3621                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3622  8007                     	org	32775
  3623  8007  09E4               	dw	2532
  3624                           
  3625                           ;Config register CONFIG2 @ 0x8008
  3626                           ;	Flash Memory Self-Write Protection
  3627                           ;	WRT = OFF, Write protection off
  3628                           ;	Voltage Regulator Capacitor Enable
  3629                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
  3630                           ;	PLL Enable
  3631                           ;	PLLEN = OFF, 4x PLL disabled
  3632                           ;	Stack Overflow/Underflow Reset Enable
  3633                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  3634                           ;	Brown-out Reset Voltage Selection
  3635                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  3636                           ;	Low-Voltage Programming Enable
  3637                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  3638  8008                     	org	32776
  3639  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    0
    Data        156
    BSS         36
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     50      80
    BANK1            80      0      76
    BANK2            80      0      54
    BANK3            80      0      32
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___wmul
    _waitSEGStop->___wmul
    _tact->_tactsw
    ___wmul->___lwdiv
    _motor->___wmul

Critical Paths under _main in BANK0

    _main->_waitSEGStop
    _waitSEGStop->_dynam
    _motor->_dynam

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                24    24      0   18302
                                             26 BANK0     24    24      0
                             ___wmul
                              _dynam
                               _fclr
                              _motor
                           _portinit
                        _waitSEGStop
                             _zenoff
 ---------------------------------------------------------------------------------
 (1) _zenoff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _waitSEGStop                                         18    10      8    8787
                                              8 BANK0     18    10      8
                            ___lwdiv
                             ___wmul
                              _dynam
                               _fclr
                               _tact
 ---------------------------------------------------------------------------------
 (2) _tact                                                 2     0      2     746
                                              8 COMMON     2     0      2
                             _tactsw
 ---------------------------------------------------------------------------------
 (3) _tactsw                                               8     8      0     116
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 (2) _fclr                                                 2     0      2    1618
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1308
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     618
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _portinit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motor                                               12     2     10    3947
                                              8 BANK0     12     2     10
                             ___wmul (ARG)
                              _dynam
 ---------------------------------------------------------------------------------
 (2) _dynam                                               16     8      8    2271
                                              0 COMMON     8     0      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___wmul
     ___lwdiv (ARG)
   _dynam
   _fclr
   _motor
     ___wmul (ARG)
       ___lwdiv (ARG)
     _dynam (ARG)
   _portinit
   _waitSEGStop
     ___lwdiv
     ___wmul
       ___lwdiv (ARG)
     _dynam
     _fclr
     _tact
       _tactsw
   _zenoff

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     32      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      4C       7       95.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      36       9       67.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      20      11       40.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     100      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     100      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Jun 05 11:52:48 2021

                     l95 0164                       _cw 0062      ___wmul@multiplicand 007A  
                    l112 041D                      l114 042D                      l123 0463  
                    l116 0443                      l108 0151                      l118 0453  
                    l135 056A                      l208 0327                      l129 04E0  
                    l217 01A3                      l193 0296                      l265 0400  
                    l361 0581                      l276 01E7                      l366 05F4  
                    l358 0574                      l543 016F                      l545 0183  
                    l379 06F6                      l823 0259                      _RA0 0060  
                    _RA1 0061                      _RA2 0062                      _RC0 0070  
                    _RC1 0071                      _RC2 0072                      _RC5 0075  
                    _RC6 0076                      _RC7 0077                      _ccw 0060  
                    _flg 0064                      wreg 0009                     l2201 0401  
                   l2211 040D                     l2203 0408                     l2301 04D8  
                   l2221 0428                     l2213 0414                     l2205 0409  
                   l2311 04F2                     l2303 04DE                     l2231 0433  
                   l2215 0419                     l2207 040B                     l2321 050A  
                   l2313 04F4                     l2305 04E2                     l2241 044E  
                   l2233 043A                     l2225 042F                     l2217 0421  
                   l2209 040C                     l2401 0193                     l3201 0574  
                   l2331 0542                     l2323 051C                     l2315 04F8  
                   l2307 04E8                     l2251 0458                     l2235 043F  
                   l2227 0431                     l2411 016B                     l3211 059A  
                   l3203 0579                     l2333 0548                     l2325 0523  
                   l2309 04EE                     l2317 04FE                     l2261 046B  
                   l2253 0459                     l2245 0456                     l2237 0447  
                   l2229 0432                     l2421 021E                     l2413 0174  
                   l3221 059F                     l3213 059F                     l3205 057D  
                   l2335 054A                     l2327 0529                     l2319 0504  
                   l2263 0471                     l2271 0481                     l2255 045B  
                   l2247 0457                     l2351 055A                     l2431 0232  
                   l2423 0220                     l2415 0179                     l2407 0165  
                   l2191 0279                     l2183 025A                     l3231 05C2  
                   l3223 05A4                     l3215 059F                     l3207 0593  
                   l2337 054E                     l2329 053B                     l2281 04AC  
                   l2273 0487                     l2265 0475                     l2257 0461  
                   l2249 0457                     l2441 024F                     l2433 0236  
                   l2425 0226                     l2417 017F                     l2409 0167  
                   l2193 027B                     l2185 025E                     l2361 02E1  
                   l3241 0616                     l3233 05DA                     l3225 05A8  
                   l3217 059F                     l3209 059A                     l2347 0555  
                   l2339 054E                     l2291 04D1                     l2283 04BE  
                   l2275 048D                     l2267 0477                     l2259 0465  
                   l2451 0158                     l2435 0245                     l2427 0229  
                   l2443 0255                     l2195 0284                     l2187 026A  
                   l2371 02FC                     l2363 02E8                     l2531 0377  
                   l3243 0623                     l3251 0656                     l3235 05E7  
                   l3227 05B9                     l3219 059F                     l2293 04D1  
                   l2285 04C5                     l2277 049F                     l2269 047B  
                   l2453 015F                     l2437 0249                     l2429 022E  
                   l2189 0274                     l2373 02FF                     l2365 02ED  
                   l2357 02DD                     l2541 03AB                     l2533 037B  
                   l3253 065E                     l3261 06B2                     l3245 0628  
                   l3229 05BE                     l2287 04CB                     l2279 04A6  
                   l2455 0162                     l2447 0152                     l2439 024A  
                   l2391 0184                     l2199 0291                     l2375 0306  
                   l2367 02F0                     l2359 02DE                     l2551 03CD  
                   l2543 03AF                     l2527 0328                     l3271 06FB  
                   l3255 0685                     l3247 0644                     l3239 05F9  
                   l3263 06C4                     l3191 056E                     l3441 055F  
                   l2289 04CD                     l2449 0155                     l2393 0185  
                   l2377 030A                     l2369 02F7                     l2385 0317  
                   l2561 03D8                     l2545 03B6                     l2537 0382  
                   l2529 034A                     l2481 014E                     l3281 0751  
                   l3273 0717                     l3265 06DC                     l3257 068A  
                   l3249 0651                     l3193 0574                     l2395 0189  
                   l2379 0310                     l2563 03DE                     l2571 03E3  
                   l2539 0399                     l2483 014F                     l3291 078D  
                   l3275 0724                     l3283 0756                     l3267 06E9  
                   l3259 068E                     l3195 0574                     l2397 018D  
                   l3437 031C                     l2573 03F4                     l2549 03BC  
                   l2485 0150                     l2477 0149                     l3285 075E  
                   l3293 07B6                     l3277 0729                     l3197 0574  
                   l3189 056B                     l3439 0198                     l2559 03D2  
                   l2583 03FE                     l2479 014D                     l3287 0784  
                   l3279 0744                     l3199 0574                     l2593 01CE  
                   l3289 0789                     l2595 01E1                     l2587 01C4  
                   l2579 03F9                     l2589 01C9                     u2000 050A  
                   u2001 0509                     u2010 0523                     u2011 0522  
                   u2020 0529                     u2100 016B                     u2021 0528  
                   u2101 016A                     u2030 0542                     u2031 0541  
                   u2040 0548                     u2200 0255                     u2041 0547  
                   u2201 0254                     u2130 017F                     u2050 02E8  
                   u2131 017E                     u2115 0170                     u2051 02E7  
                   u2140 0226                     u2060 02F7                     u2300 03CD  
                   u2141 0225                     u2125 0175                     u2061 02F6  
                   u2301 03CC                     u2070 0306                     u2310 03D1  
                   u2071 0305                     u2311 03D0                     u2160 0236  
                   u2080 0310                     u2320 03D8                     u2161 0235  
                   u2081 030F                     u2321 03D7                     u2305 03C9  
                   u2090 0316                     u2330 03DE                     u2155 022A  
                   u2091 0315                     u2331 03DD                     u2180 0245  
                   u2340 03E2                     u2181 0244                     u2341 03E1  
                   u2350 03F4                     u2270 0381                     u2175 0237  
                   u2351 03F3                     u2271 0380                     u2360 03F8  
                   u2280 03AB                     u3400 0589                     u2185 0241  
                   u2361 03F7                     u2281 03AA                     u3401 0586  
                   u2370 01CD                     u1810 0274                     u2290 03AF  
                   u3410 0591                     u2371 01CC                     u2195 024B  
                   u1811 0273                     u2355 03F0                     u2291 03AE  
                   u3411 058E                     u1900 0487                     u1820 0284  
                   u3500 065E                     u1901 0486                     u1821 0283  
                   u2285 03A7                     u3501 065D                     u1910 048D  
                   u1830 0414                     u3510 068A                     u3430 05A4  
                   u3414 058B                     u1911 048C                     u1831 0413  
                   u1815 0270                     u3511 0689                     u3431 05A3  
                   u1920 04A6                     u1840 0427                     u3600 07C7  
                   u3520 068E                     u3440 05A8                     u3424 0593  
                   u1921 04A5                     u1841 0426                     u3601 07C6  
                   u3521 068D                     u3441 05A7                     u1930 04AC  
                   u1850 043A                     u3530 06C3                     u3450 05BE  
                   u3370 0579                     u1931 04AB                     u1851 0439  
                   u3531 06C2                     u3451 05BD                     u3371 0578  
                   u1940 04C5                     u1860 044D                     u3540 06E9  
                   u3460 05C2                     u3380 057D                     u1941 04C4  
                   u1861 044C                     u3605 07C3                     u3541 06E8  
                   u3461 05C1                     u3381 057C                     u1950 04CB  
                   u1870 0461                     u3550 0724                     u3470 05E7  
                   u3390 0581                     u1951 04CA                     u1871 0460  
                   u3551 0723                     u3535 06BF                     u3471 05E6  
                   u3391 0580                     u1960 04DE                     u1880 046B  
                   u3560 0751                     u3480 0623                     u1961 04DD  
                   u1881 046A                     u3561 0750                     u3545 06E5  
                   u3481 0622                     u1970 04E8                     u1890 0471  
                   u3570 075E                     u3490 0651                     u1971 04E7  
                   u1891 0470                     u3571 075D                     u3555 0720  
                   u3491 0650                     u3475 05E3                     u1980 04EE  
                   u3580 0789                     u1981 04ED                     u3581 0788  
                   u3565 074D                     u3485 061F                     u1990 0504  
                   u3590 078D                     u1991 0503                     u3591 078C  
                   u3495 064D                     u3807 05ED                     u3817 06EF  
                   _atai 005A                     _fclr 0184                     _main 056B  
                   _num0 00C0                     _kisu 014C                     _moja 0140  
                   _samf 01A0                     _mojf 0134                     _tact 02DD  
                   _mojh 00E2                     _moji 0120                     _mojn 00DE  
                   _samp 00A0                     _gusu 00D4                     fsr0h 0005  
                   fsr1h 0007                     indf0 0000                     fsr0l 0004  
                   fsr1l 0006                     btemp 007E                     start 0002  
                  ?_fclr 0070                    ?_main 0070                    ?_tact 0078  
        __end_of___lwdiv 025A                    _PORTA 000C                    _PORTB 000D  
                  _PORTC 000E                    _TRISA 008C                    _TRISB 008D  
                  _TRISC 008E                    _code1 00E6                    _atai1 005C  
                  _count 0058                    _dynam 0401                    _fugou 0054  
                  _motor 01C4                    main@i 0050                    status 0003  
                  wtemp0 007E          __initialization 07CA             __end_of_fclr 01A4  
           __end_of_main 07CA             __end_of_tact 0328                   ??_fclr 0072  
                 ??_main 003A                   ??_tact 007A                   ?_dynam 0070  
                 ?_motor 0028             ?_waitSEGStop 0028                   _ANSELA 018C  
                 _ANSELB 018D                   _OSCCON 0099              dynam@smdata 0074  
        waitSEGStop@seg1 0028          waitSEGStop@seg2 002A                   ___wmul 0165  
                 _code10 00E8                   _atai10 005E                   _flag_P 0066  
                 _flag_R 0068                ??___lwdiv 0074                   _tactsw 025A  
                 _zenoff 0149                   dynam@j 0024                   motor@i 0032  
       __end_of_portinit 0165  __end_of__initialization 07FD           __pcstackCOMMON 0070  
           __pidataBANK1 0297             __pidataBANK2 01E8             __pidataBANK3 01A4  
          __end_of_dynam 056B            __end_of_motor 01E8                  ??_dynam 0078  
                ??_motor 007E               __pbssBANK0 0052               __pbssBANK1 00E6  
             __pmaintext 056B                  ?___wmul 0078                  ?_tactsw 0070  
                ?_zenoff 0070     __size_of_waitSEGStop 00D9         waitSEGStop@cpSW1 0032  
       waitSEGStop@cpSW2 0034         waitSEGStop@cpSW3 0036         waitSEGStop@dousa 002E  
        __size_of___wmul 001F                ?_portinit 0070                  ___lwdiv 021E  
                _code100 00EA          __size_of_tactsw 003D                  __ptext1 0149  
                __ptext2 0328                  __ptext3 02DD                  __ptext4 025A  
                __ptext5 0184                  __ptext6 0165                  __ptext7 021E  
                __ptext8 0152                  __ptext9 01C4          __size_of_zenoff 0009  
                fclr@flg 0070                  main@ans 004E              motor@kakudo 0028  
                clrloop0 013E     end_of_initialization 07FD              motor@smdata 002E  
                dynam@tm 0022                  dynam@tr 0076                  init_ram 0143  
                _zyoutai 0052                  initloop 0144                  tactsw@a 0076  
                tactsw@b 0072                  tactsw@c 0074                  motor@tr 0030  
             ??_portinit 0070           __end_of___wmul 0184            waitSEGStop@wt 002C  
         __end_of_tactsw 0297           __end_of_zenoff 0152      start_initialization 07CA  
               ??___wmul 007C              __pdataBANK1 00A0              __pdataBANK2 0120  
            __pdataBANK3 01A0                 ??_tactsw 0070                 ??_zenoff 0070  
              ___latbits 0003            __pcstackBANK0 0020         ___lwdiv@dividend 0072  
               ?___lwdiv 0070        __size_of_portinit 0013         ___lwdiv@quotient 0075  
          ??_waitSEGStop 0030           __size_of_dynam 016A           __size_of_motor 0024  
          dynam@dig1data 0070            dynam@dig2data 0072           ___wmul@product 007C  
              clear_ram0 013D            motor@dig1data 002A            motor@dig2data 002C  
      ___wmul@multiplier 0078             waitSEGStop@i 0038      __end_of_waitSEGStop 0401  
       __size_of___lwdiv 003C                 _code1000 0056          ___lwdiv@divisor 0070  
        ___lwdiv@counter 0077                 __ptext10 0401                 _flag_sw1 006E  
               _flag_sw2 006C                 _flag_sw3 006A            __size_of_fclr 0020  
          __size_of_main 025F            __size_of_tact 004B                 _portinit 0152  
               dynam@ext 0026                 dynam@smd 0020                 tact@mode 0078  
            _waitSEGStop 0328  
