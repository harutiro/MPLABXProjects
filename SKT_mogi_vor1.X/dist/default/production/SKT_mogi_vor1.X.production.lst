

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Jun  5 22:26:00 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F1938
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     7                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    13                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    30                           	dabs	1,0x7E,2
    31  0000                     
    32                           ; Version 2.20
    33                           ; Generated 12/02/2020 GMT
    34                           ; 
    35                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F1938 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  0008                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000D                     	;# 
    80  000E                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0015                     	;# 
    86  0016                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001C                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  010C                     	;# 
   115  010D                     	;# 
   116  010E                     	;# 
   117  0110                     	;# 
   118  0111                     	;# 
   119  0112                     	;# 
   120  0113                     	;# 
   121  0114                     	;# 
   122  0115                     	;# 
   123  0116                     	;# 
   124  0117                     	;# 
   125  0118                     	;# 
   126  0119                     	;# 
   127  011A                     	;# 
   128  011B                     	;# 
   129  011D                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0191                     	;# 
   133  0191                     	;# 
   134  0192                     	;# 
   135  0193                     	;# 
   136  0193                     	;# 
   137  0193                     	;# 
   138  0194                     	;# 
   139  0195                     	;# 
   140  0196                     	;# 
   141  0199                     	;# 
   142  019A                     	;# 
   143  019B                     	;# 
   144  019B                     	;# 
   145  019B                     	;# 
   146  019B                     	;# 
   147  019C                     	;# 
   148  019C                     	;# 
   149  019D                     	;# 
   150  019E                     	;# 
   151  019F                     	;# 
   152  020D                     	;# 
   153  0210                     	;# 
   154  0211                     	;# 
   155  0212                     	;# 
   156  0213                     	;# 
   157  0214                     	;# 
   158  0215                     	;# 
   159  0215                     	;# 
   160  0216                     	;# 
   161  0217                     	;# 
   162  0291                     	;# 
   163  0291                     	;# 
   164  0292                     	;# 
   165  0293                     	;# 
   166  0294                     	;# 
   167  0295                     	;# 
   168  0295                     	;# 
   169  0296                     	;# 
   170  0298                     	;# 
   171  0298                     	;# 
   172  0299                     	;# 
   173  029A                     	;# 
   174  029B                     	;# 
   175  029C                     	;# 
   176  029C                     	;# 
   177  029D                     	;# 
   178  029E                     	;# 
   179  029F                     	;# 
   180  0311                     	;# 
   181  0311                     	;# 
   182  0312                     	;# 
   183  0313                     	;# 
   184  0314                     	;# 
   185  0315                     	;# 
   186  0315                     	;# 
   187  0316                     	;# 
   188  0318                     	;# 
   189  0318                     	;# 
   190  0319                     	;# 
   191  031A                     	;# 
   192  031C                     	;# 
   193  031C                     	;# 
   194  031D                     	;# 
   195  031E                     	;# 
   196  0394                     	;# 
   197  0395                     	;# 
   198  0396                     	;# 
   199  0415                     	;# 
   200  0416                     	;# 
   201  0417                     	;# 
   202  041C                     	;# 
   203  041D                     	;# 
   204  041E                     	;# 
   205  0791                     	;# 
   206  0792                     	;# 
   207  0793                     	;# 
   208  0794                     	;# 
   209  0795                     	;# 
   210  0798                     	;# 
   211  0799                     	;# 
   212  07A0                     	;# 
   213  07A1                     	;# 
   214  07A3                     	;# 
   215  07A4                     	;# 
   216  07A6                     	;# 
   217  07A7                     	;# 
   218  07A9                     	;# 
   219  07AA                     	;# 
   220  0FE4                     	;# 
   221  0FE5                     	;# 
   222  0FE6                     	;# 
   223  0FE7                     	;# 
   224  0FE8                     	;# 
   225  0FE9                     	;# 
   226  0FEA                     	;# 
   227  0FEB                     	;# 
   228  0FED                     	;# 
   229  0FEE                     	;# 
   230  0FEF                     	;# 
   231  0000                     	;# 
   232  0001                     	;# 
   233  0002                     	;# 
   234  0003                     	;# 
   235  0004                     	;# 
   236  0005                     	;# 
   237  0006                     	;# 
   238  0007                     	;# 
   239  0008                     	;# 
   240  0009                     	;# 
   241  000A                     	;# 
   242  000B                     	;# 
   243  000C                     	;# 
   244  000D                     	;# 
   245  000E                     	;# 
   246  0010                     	;# 
   247  0011                     	;# 
   248  0012                     	;# 
   249  0013                     	;# 
   250  0015                     	;# 
   251  0016                     	;# 
   252  0016                     	;# 
   253  0017                     	;# 
   254  0018                     	;# 
   255  0019                     	;# 
   256  001A                     	;# 
   257  001B                     	;# 
   258  001C                     	;# 
   259  001E                     	;# 
   260  001F                     	;# 
   261  008C                     	;# 
   262  008D                     	;# 
   263  008E                     	;# 
   264  0090                     	;# 
   265  0091                     	;# 
   266  0092                     	;# 
   267  0093                     	;# 
   268  0095                     	;# 
   269  0096                     	;# 
   270  0097                     	;# 
   271  0098                     	;# 
   272  0099                     	;# 
   273  009A                     	;# 
   274  009B                     	;# 
   275  009B                     	;# 
   276  009C                     	;# 
   277  009D                     	;# 
   278  009E                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  0110                     	;# 
   283  0111                     	;# 
   284  0112                     	;# 
   285  0113                     	;# 
   286  0114                     	;# 
   287  0115                     	;# 
   288  0116                     	;# 
   289  0117                     	;# 
   290  0118                     	;# 
   291  0119                     	;# 
   292  011A                     	;# 
   293  011B                     	;# 
   294  011D                     	;# 
   295  018C                     	;# 
   296  018D                     	;# 
   297  0191                     	;# 
   298  0191                     	;# 
   299  0192                     	;# 
   300  0193                     	;# 
   301  0193                     	;# 
   302  0193                     	;# 
   303  0194                     	;# 
   304  0195                     	;# 
   305  0196                     	;# 
   306  0199                     	;# 
   307  019A                     	;# 
   308  019B                     	;# 
   309  019B                     	;# 
   310  019B                     	;# 
   311  019B                     	;# 
   312  019C                     	;# 
   313  019C                     	;# 
   314  019D                     	;# 
   315  019E                     	;# 
   316  019F                     	;# 
   317  020D                     	;# 
   318  0210                     	;# 
   319  0211                     	;# 
   320  0212                     	;# 
   321  0213                     	;# 
   322  0214                     	;# 
   323  0215                     	;# 
   324  0215                     	;# 
   325  0216                     	;# 
   326  0217                     	;# 
   327  0291                     	;# 
   328  0291                     	;# 
   329  0292                     	;# 
   330  0293                     	;# 
   331  0294                     	;# 
   332  0295                     	;# 
   333  0295                     	;# 
   334  0296                     	;# 
   335  0298                     	;# 
   336  0298                     	;# 
   337  0299                     	;# 
   338  029A                     	;# 
   339  029B                     	;# 
   340  029C                     	;# 
   341  029C                     	;# 
   342  029D                     	;# 
   343  029E                     	;# 
   344  029F                     	;# 
   345  0311                     	;# 
   346  0311                     	;# 
   347  0312                     	;# 
   348  0313                     	;# 
   349  0314                     	;# 
   350  0315                     	;# 
   351  0315                     	;# 
   352  0316                     	;# 
   353  0318                     	;# 
   354  0318                     	;# 
   355  0319                     	;# 
   356  031A                     	;# 
   357  031C                     	;# 
   358  031C                     	;# 
   359  031D                     	;# 
   360  031E                     	;# 
   361  0394                     	;# 
   362  0395                     	;# 
   363  0396                     	;# 
   364  0415                     	;# 
   365  0416                     	;# 
   366  0417                     	;# 
   367  041C                     	;# 
   368  041D                     	;# 
   369  041E                     	;# 
   370  0791                     	;# 
   371  0792                     	;# 
   372  0793                     	;# 
   373  0794                     	;# 
   374  0795                     	;# 
   375  0798                     	;# 
   376  0799                     	;# 
   377  07A0                     	;# 
   378  07A1                     	;# 
   379  07A3                     	;# 
   380  07A4                     	;# 
   381  07A6                     	;# 
   382  07A7                     	;# 
   383  07A9                     	;# 
   384  07AA                     	;# 
   385  0FE4                     	;# 
   386  0FE5                     	;# 
   387  0FE6                     	;# 
   388  0FE7                     	;# 
   389  0FE8                     	;# 
   390  0FE9                     	;# 
   391  0FEA                     	;# 
   392  0FEB                     	;# 
   393  0FED                     	;# 
   394  0FEE                     	;# 
   395  0FEF                     	;# 
   396                           
   397                           	psect	idataBANK0
   398  00BD                     __pidataBANK0:
   399                           
   400                           ;initializer for _mojn
   401  00BD  3454               	retlw	84
   402  00BE  3400               	retlw	0
   403  00BF  3473               	retlw	115
   404  00C0  3400               	retlw	0
   405                           
   406                           ;initializer for _mojh
   407  00C1  3476               	retlw	118
   408  00C2  3400               	retlw	0
   409  00C3  3438               	retlw	56
   410  00C4  3400               	retlw	0
   411                           
   412                           	psect	idataBANK1
   413  0221                     __pidataBANK1:
   414                           
   415                           ;initializer for _samp
   416  0221  343F               	retlw	63
   417  0222  3400               	retlw	0
   418  0223  3406               	retlw	6
   419  0224  3400               	retlw	0
   420  0225  345B               	retlw	91
   421  0226  3400               	retlw	0
   422  0227  344F               	retlw	79
   423  0228  3400               	retlw	0
   424  0229  3466               	retlw	102
   425  022A  3400               	retlw	0
   426  022B  346D               	retlw	109
   427  022C  3400               	retlw	0
   428  022D  347D               	retlw	125
   429  022E  3400               	retlw	0
   430  022F  3427               	retlw	39
   431  0230  3400               	retlw	0
   432  0231  347F               	retlw	127
   433  0232  3400               	retlw	0
   434  0233  346F               	retlw	111
   435  0234  3400               	retlw	0
   436  0235  345F               	retlw	95
   437  0236  3400               	retlw	0
   438  0237  347C               	retlw	124
   439  0238  3400               	retlw	0
   440  0239  3458               	retlw	88
   441  023A  3400               	retlw	0
   442  023B  345E               	retlw	94
   443  023C  3400               	retlw	0
   444  023D  3479               	retlw	121
   445  023E  3400               	retlw	0
   446  023F  3471               	retlw	113
   447  0240  3400               	retlw	0
   448                           
   449                           ;initializer for _num0
   450  0241  343F               	retlw	63
   451  0242  3400               	retlw	0
   452  0243  3406               	retlw	6
   453  0244  3400               	retlw	0
   454  0245  345B               	retlw	91
   455  0246  3400               	retlw	0
   456  0247  344F               	retlw	79
   457  0248  3400               	retlw	0
   458  0249  3466               	retlw	102
   459  024A  3400               	retlw	0
   460  024B  346D               	retlw	109
   461  024C  3400               	retlw	0
   462  024D  347D               	retlw	125
   463  024E  3400               	retlw	0
   464  024F  3427               	retlw	39
   465  0250  3400               	retlw	0
   466  0251  347F               	retlw	127
   467  0252  3400               	retlw	0
   468  0253  346F               	retlw	111
   469  0254  3400               	retlw	0
   470                           
   471                           ;initializer for _kisu
   472  0255  3406               	retlw	6
   473  0256  3400               	retlw	0
   474  0257  344F               	retlw	79
   475  0258  3400               	retlw	0
   476  0259  346D               	retlw	109
   477  025A  3400               	retlw	0
   478  025B  3427               	retlw	39
   479  025C  3400               	retlw	0
   480  025D  346F               	retlw	111
   481  025E  3400               	retlw	0
   482                           
   483                           ;initializer for _gusu
   484  025F  343F               	retlw	63
   485  0260  3400               	retlw	0
   486  0261  345B               	retlw	91
   487  0262  3400               	retlw	0
   488  0263  3466               	retlw	102
   489  0264  3400               	retlw	0
   490  0265  347D               	retlw	125
   491  0266  3400               	retlw	0
   492  0267  347F               	retlw	127
   493  0268  3400               	retlw	0
   494                           
   495                           	psect	idataBANK2
   496  01DD                     __pidataBANK2:
   497                           
   498                           ;initializer for _moji
   499  01DD  345F               	retlw	95
   500  01DE  3400               	retlw	0
   501  01DF  347C               	retlw	124
   502  01E0  3400               	retlw	0
   503  01E1  3458               	retlw	88
   504  01E2  3400               	retlw	0
   505  01E3  345E               	retlw	94
   506  01E4  3400               	retlw	0
   507  01E5  3479               	retlw	121
   508  01E6  3400               	retlw	0
   509  01E7  3471               	retlw	113
   510  01E8  3400               	retlw	0
   511  01E9  3476               	retlw	118
   512  01EA  3400               	retlw	0
   513  01EB  3438               	retlw	56
   514  01EC  3400               	retlw	0
   515  01ED  3454               	retlw	84
   516  01EE  3400               	retlw	0
   517  01EF  3473               	retlw	115
   518  01F0  3400               	retlw	0
   519                           
   520                           ;initializer for _gegiHidari
   521  01F1  3400               	retlw	0
   522  01F2  3400               	retlw	0
   523  01F3  3400               	retlw	0
   524  01F4  3400               	retlw	0
   525  01F5  3400               	retlw	0
   526  01F6  3400               	retlw	0
   527  01F7  3408               	retlw	8
   528  01F8  3400               	retlw	0
   529  01F9  3438               	retlw	56
   530  01FA  3400               	retlw	0
   531  01FB  3478               	retlw	120
   532  01FC  3400               	retlw	0
   533                           
   534                           ;initializer for _gegiMigi
   535  01FD  3401               	retlw	1
   536  01FE  3400               	retlw	0
   537  01FF  3407               	retlw	7
   538  0200  3400               	retlw	0
   539  0201  340F               	retlw	15
   540  0202  3400               	retlw	0
   541  0203  340F               	retlw	15
   542  0204  3400               	retlw	0
   543  0205  340F               	retlw	15
   544  0206  3400               	retlw	0
   545  0207  340F               	retlw	15
   546  0208  3400               	retlw	0
   547                           
   548                           ;initializer for _mojf
   549  0209  3471               	retlw	113
   550  020A  3400               	retlw	0
   551  020B  3479               	retlw	121
   552  020C  3400               	retlw	0
   553  020D  345E               	retlw	94
   554  020E  3400               	retlw	0
   555  020F  3458               	retlw	88
   556  0210  3400               	retlw	0
   557  0211  347C               	retlw	124
   558  0212  3400               	retlw	0
   559  0213  345F               	retlw	95
   560  0214  3400               	retlw	0
   561                           
   562                           ;initializer for _moja
   563  0215  345F               	retlw	95
   564  0216  3400               	retlw	0
   565  0217  347C               	retlw	124
   566  0218  3400               	retlw	0
   567  0219  3458               	retlw	88
   568  021A  3400               	retlw	0
   569  021B  345E               	retlw	94
   570  021C  3400               	retlw	0
   571  021D  3479               	retlw	121
   572  021E  3400               	retlw	0
   573  021F  3471               	retlw	113
   574  0220  3400               	retlw	0
   575                           
   576                           	psect	idataBANK3
   577  0120                     __pidataBANK3:
   578                           
   579                           ;initializer for _samf
   580  0120  3471               	retlw	113
   581  0121  3400               	retlw	0
   582  0122  3479               	retlw	121
   583  0123  3400               	retlw	0
   584  0124  345E               	retlw	94
   585  0125  3400               	retlw	0
   586  0126  3458               	retlw	88
   587  0127  3400               	retlw	0
   588  0128  347C               	retlw	124
   589  0129  3400               	retlw	0
   590  012A  345F               	retlw	95
   591  012B  3400               	retlw	0
   592  012C  346F               	retlw	111
   593  012D  3400               	retlw	0
   594  012E  347F               	retlw	127
   595  012F  3400               	retlw	0
   596  0130  3427               	retlw	39
   597  0131  3400               	retlw	0
   598  0132  347D               	retlw	125
   599  0133  3400               	retlw	0
   600  0134  346D               	retlw	109
   601  0135  3400               	retlw	0
   602  0136  3466               	retlw	102
   603  0137  3400               	retlw	0
   604  0138  344F               	retlw	79
   605  0139  3400               	retlw	0
   606  013A  345B               	retlw	91
   607  013B  3400               	retlw	0
   608  013C  3406               	retlw	6
   609  013D  3400               	retlw	0
   610  013E  343F               	retlw	63
   611  013F  3400               	retlw	0
   612  000E                     _PORTC	set	14
   613  000D                     _PORTB	set	13
   614  000C                     _PORTA	set	12
   615  0061                     _RA1	set	97
   616  0060                     _RA0	set	96
   617  0062                     _RA2	set	98
   618  0077                     _RC7	set	119
   619  0070                     _RC0	set	112
   620  0071                     _RC1	set	113
   621  0072                     _RC2	set	114
   622  0076                     _RC6	set	118
   623  0075                     _RC5	set	117
   624  0099                     _OSCCON	set	153
   625  008E                     _TRISC	set	142
   626  008D                     _TRISB	set	141
   627  008C                     _TRISA	set	140
   628  018D                     _ANSELB	set	397
   629  018C                     _ANSELA	set	396
   630                           
   631                           	psect	cinit
   632  07C5                     start_initialization:	
   633                           ; #config settings
   634                           
   635  07C5                     __initialization:
   636                           
   637                           ; Initialize objects allocated to BANK0
   638  07C5  30BD               	movlw	low __pidataBANK0
   639  07C6  0084               	movwf	4
   640  07C7  3080               	movlw	(high __pidataBANK0)| (0+128)
   641  07C8  0085               	movwf	5
   642  07C9  3066               	movlw	low __pdataBANK0
   643  07CA  0086               	movwf	6
   644  07CB  3000               	movlw	high __pdataBANK0
   645  07CC  0087               	movwf	7
   646  07CD  3008               	movlw	8
   647  07CE  3180  20B7  3187   	fcall	init_ram
   648                           
   649                           ; Initialize objects allocated to BANK1
   650  07D1  3021               	movlw	low __pidataBANK1
   651  07D2  0084               	movwf	4
   652  07D3  3082               	movlw	(high __pidataBANK1)| (0+128)
   653  07D4  0085               	movwf	5
   654  07D5  30A0               	movlw	low __pdataBANK1
   655  07D6  0086               	movwf	6
   656  07D7  3000               	movlw	high __pdataBANK1
   657  07D8  0087               	movwf	7
   658  07D9  3048               	movlw	72
   659  07DA  3180  20B7  3187   	fcall	init_ram
   660                           
   661                           ; Initialize objects allocated to BANK2
   662  07DD  30DD               	movlw	low __pidataBANK2
   663  07DE  0084               	movwf	4
   664  07DF  3081               	movlw	(high __pidataBANK2)| (0+128)
   665  07E0  0085               	movwf	5
   666  07E1  3020               	movlw	low __pdataBANK2
   667  07E2  0086               	movwf	6
   668  07E3  3001               	movlw	high __pdataBANK2
   669  07E4  0087               	movwf	7
   670  07E5  3044               	movlw	68
   671  07E6  3180  20B7  3187   	fcall	init_ram
   672                           
   673                           ; Initialize objects allocated to BANK3
   674  07E9  3020               	movlw	low __pidataBANK3
   675  07EA  0084               	movwf	4
   676  07EB  3081               	movlw	(high __pidataBANK3)| (0+128)
   677  07EC  0085               	movwf	5
   678  07ED  30A0               	movlw	low __pdataBANK3
   679  07EE  0086               	movwf	6
   680  07EF  3001               	movlw	high __pdataBANK3
   681  07F0  0087               	movwf	7
   682  07F1  3020               	movlw	32
   683  07F2  3180  20B7  3187   	fcall	init_ram
   684                           
   685                           ; Clear objects allocated to BANK0
   686  07F5  3020               	movlw	low __pbssBANK0
   687  07F6  0084               	movwf	4
   688  07F7  3000               	movlw	high __pbssBANK0
   689  07F8  0085               	movwf	5
   690  07F9  3024               	movlw	36
   691  07FA  3180  20B1  3187   	fcall	clear_ram0
   692  07FD                     end_of_initialization:	
   693                           ;End of C runtime variable initialization code
   694                           
   695  07FD                     __end_of__initialization:
   696  07FD  0020               	movlb	0
   697  07FE  3184  2CFB         	ljmp	_main	;jump to C main() function
   698                           
   699                           	psect	bssBANK0
   700  0020                     __pbssBANK0:
   701  0020                     _zyoutai:
   702  0020                     	ds	2
   703  0022                     _fugou:
   704  0022                     	ds	2
   705  0024                     _code1:
   706  0024                     	ds	2
   707  0026                     _code10:
   708  0026                     	ds	2
   709  0028                     _code100:
   710  0028                     	ds	2
   711  002A                     _code1000:
   712  002A                     	ds	2
   713  002C                     _count:
   714  002C                     	ds	2
   715  002E                     _atai:
   716  002E                     	ds	2
   717  0030                     _atai1:
   718  0030                     	ds	2
   719  0032                     _atai10:
   720  0032                     	ds	2
   721  0034                     _ccw:
   722  0034                     	ds	2
   723  0036                     _cw:
   724  0036                     	ds	2
   725  0038                     _flg:
   726  0038                     	ds	2
   727  003A                     _flag_P:
   728  003A                     	ds	2
   729  003C                     _flag_R:
   730  003C                     	ds	2
   731  003E                     _flag_sw3:
   732  003E                     	ds	2
   733  0040                     _flag_sw2:
   734  0040                     	ds	2
   735  0042                     _flag_sw1:
   736  0042                     	ds	2
   737                           
   738                           	psect	dataBANK0
   739  0066                     __pdataBANK0:
   740  0066                     _mojn:
   741  0066                     	ds	4
   742  006A                     _mojh:
   743  006A                     	ds	4
   744                           
   745                           	psect	dataBANK1
   746  00A0                     __pdataBANK1:
   747  00A0                     _samp:
   748  00A0                     	ds	32
   749  00C0                     _num0:
   750  00C0                     	ds	20
   751  00D4                     _kisu:
   752  00D4                     	ds	10
   753  00DE                     _gusu:
   754  00DE                     	ds	10
   755                           
   756                           	psect	dataBANK2
   757  0120                     __pdataBANK2:
   758  0120                     _moji:
   759  0120                     	ds	20
   760  0134                     _gegiHidari:
   761  0134                     	ds	12
   762  0140                     _gegiMigi:
   763  0140                     	ds	12
   764  014C                     _mojf:
   765  014C                     	ds	12
   766  0158                     _moja:
   767  0158                     	ds	12
   768                           
   769                           	psect	dataBANK3
   770  01A0                     __pdataBANK3:
   771  01A0                     _samf:
   772  01A0                     	ds	32
   773                           
   774                           	psect	inittext
   775  00B7                     init_ram:
   776  00B7  00FE               	movwf	btemp
   777  00B8                     initloop:
   778  00B8  0012               	moviw fsr0++
   779  00B9  001E               	movwi fsr1++
   780  00BA  0BFE               	decfsz	btemp,f
   781  00BB  28B8               	goto	initloop
   782  00BC  3400               	retlw	0
   783                           
   784                           	psect	clrtext
   785  00B1                     clear_ram0:	
   786                           ;	Called with FSR0 containing the base address, and
   787                           ;	WREG with the size to clear
   788                           
   789  00B1  0064               	clrwdt	;clear the watchdog before getting into this loop
   790  00B2                     clrloop0:
   791  00B2  0180               	clrf	0	;clear RAM location pointed to by FSR
   792  00B3  3101               	addfsr 0,1
   793  00B4  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   794  00B5  28B2               	goto	clrloop0	;have we reached the end yet?
   795  00B6  3400               	retlw	0	;all done for this memory range, return
   796                           
   797                           	psect	cstackCOMMON
   798  0070                     __pcstackCOMMON:
   799  0070                     ?_portinit:
   800  0070                     ??_portinit:	
   801                           ; 1 bytes @ 0x0
   802                           
   803  0070                     ?_zenoff:	
   804                           ; 1 bytes @ 0x0
   805                           
   806  0070                     ??_zenoff:	
   807                           ; 1 bytes @ 0x0
   808                           
   809  0070                     ?_dynam:	
   810                           ; 1 bytes @ 0x0
   811                           
   812  0070                     ?_tactsw:	
   813                           ; 1 bytes @ 0x0
   814                           
   815  0070                     ??_tactsw:	
   816                           ; 1 bytes @ 0x0
   817                           
   818  0070                     ?_fclr:	
   819                           ; 1 bytes @ 0x0
   820                           
   821  0070                     ?_main:	
   822                           ; 1 bytes @ 0x0
   823                           
   824  0070                     ?___lwdiv:	
   825                           ; 1 bytes @ 0x0
   826                           
   827  0070                     dynam@dig1data:	
   828                           ; 2 bytes @ 0x0
   829                           
   830  0070                     fclr@flg:	
   831                           ; 2 bytes @ 0x0
   832                           
   833  0070                     ___lwdiv@divisor:	
   834                           ; 2 bytes @ 0x0
   835                           
   836                           
   837                           ; 2 bytes @ 0x0
   838  0070                     	ds	2
   839  0072                     ??_fclr:
   840  0072                     dynam@dig2data:	
   841                           ; 1 bytes @ 0x2
   842                           
   843  0072                     tactsw@b:	
   844                           ; 2 bytes @ 0x2
   845                           
   846  0072                     ___lwdiv@dividend:	
   847                           ; 2 bytes @ 0x2
   848                           
   849                           
   850                           ; 2 bytes @ 0x2
   851  0072                     	ds	2
   852  0074                     ??___lwdiv:
   853  0074                     dynam@smdata:	
   854                           ; 1 bytes @ 0x4
   855                           
   856  0074                     tactsw@c:	
   857                           ; 2 bytes @ 0x4
   858                           
   859                           
   860                           ; 2 bytes @ 0x4
   861  0074                     	ds	1
   862  0075                     ___lwdiv@quotient:
   863                           
   864                           ; 2 bytes @ 0x5
   865  0075                     	ds	1
   866  0076                     dynam@tr:
   867  0076                     tactsw@a:	
   868                           ; 2 bytes @ 0x6
   869                           
   870                           
   871                           ; 2 bytes @ 0x6
   872  0076                     	ds	1
   873  0077                     ___lwdiv@counter:
   874                           
   875                           ; 1 bytes @ 0x7
   876  0077                     	ds	1
   877  0078                     ??_dynam:
   878  0078                     ?_tact:	
   879                           ; 1 bytes @ 0x8
   880                           
   881  0078                     ?___wmul:	
   882                           ; 1 bytes @ 0x8
   883                           
   884  0078                     tact@mode:	
   885                           ; 2 bytes @ 0x8
   886                           
   887  0078                     ___wmul@multiplier:	
   888                           ; 2 bytes @ 0x8
   889                           
   890                           
   891                           ; 2 bytes @ 0x8
   892  0078                     	ds	2
   893  007A                     ??_tact:
   894  007A                     ___wmul@multiplicand:	
   895                           ; 1 bytes @ 0xA
   896                           
   897                           
   898                           ; 2 bytes @ 0xA
   899  007A                     	ds	2
   900  007C                     ??___wmul:
   901  007C                     ___wmul@product:	
   902                           ; 1 bytes @ 0xC
   903                           
   904                           
   905                           ; 2 bytes @ 0xC
   906  007C                     	ds	2
   907  007E                     ??_motor:
   908                           
   909                           	psect	cstackBANK0
   910  0044                     __pcstackBANK0:	
   911                           ; 1 bytes @ 0xE
   912                           
   913  0044                     dynam@smd:
   914                           
   915                           ; 2 bytes @ 0x0
   916  0044                     	ds	2
   917  0046                     dynam@tm:
   918                           
   919                           ; 2 bytes @ 0x2
   920  0046                     	ds	2
   921  0048                     dynam@j:
   922                           
   923                           ; 2 bytes @ 0x4
   924  0048                     	ds	2
   925  004A                     dynam@ext:
   926                           
   927                           ; 2 bytes @ 0x6
   928  004A                     	ds	2
   929  004C                     ?_motor:
   930  004C                     ?_waitSEGStop:	
   931                           ; 1 bytes @ 0x8
   932                           
   933  004C                     waitSEGStop@seg1:	
   934                           ; 2 bytes @ 0x8
   935                           
   936  004C                     motor@kakudo:	
   937                           ; 2 bytes @ 0x8
   938                           
   939                           
   940                           ; 2 bytes @ 0x8
   941  004C                     	ds	2
   942  004E                     waitSEGStop@seg2:
   943  004E                     motor@dig1data:	
   944                           ; 2 bytes @ 0xA
   945                           
   946                           
   947                           ; 2 bytes @ 0xA
   948  004E                     	ds	2
   949  0050                     waitSEGStop@wt:
   950  0050                     motor@dig2data:	
   951                           ; 2 bytes @ 0xC
   952                           
   953                           
   954                           ; 2 bytes @ 0xC
   955  0050                     	ds	2
   956  0052                     waitSEGStop@dousa:
   957  0052                     motor@smdata:	
   958                           ; 2 bytes @ 0xE
   959                           
   960                           
   961                           ; 2 bytes @ 0xE
   962  0052                     	ds	2
   963  0054                     ??_waitSEGStop:
   964  0054                     motor@tr:	
   965                           ; 1 bytes @ 0x10
   966                           
   967                           
   968                           ; 2 bytes @ 0x10
   969  0054                     	ds	2
   970  0056                     waitSEGStop@cpSW1:
   971  0056                     motor@i:	
   972                           ; 2 bytes @ 0x12
   973                           
   974                           
   975                           ; 2 bytes @ 0x12
   976  0056                     	ds	2
   977  0058                     waitSEGStop@cpSW2:
   978                           
   979                           ; 2 bytes @ 0x14
   980  0058                     	ds	2
   981  005A                     waitSEGStop@cpSW3:
   982                           
   983                           ; 2 bytes @ 0x16
   984  005A                     	ds	2
   985  005C                     waitSEGStop@i:
   986                           
   987                           ; 2 bytes @ 0x18
   988  005C                     	ds	2
   989  005E                     ??_main:
   990                           
   991                           ; 1 bytes @ 0x1A
   992  005E                     	ds	2
   993  0060                     main@ans:
   994                           
   995                           ; 2 bytes @ 0x1C
   996  0060                     	ds	2
   997  0062                     main@j:
   998                           
   999                           ; 2 bytes @ 0x1E
  1000  0062                     	ds	2
  1001  0064                     main@i:
  1002                           
  1003                           ; 2 bytes @ 0x20
  1004  0064                     	ds	2
  1005                           
  1006                           	psect	maintext
  1007  04FB                     __pmaintext:	
  1008 ;;
  1009 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1010 ;;
  1011 ;; *************** function _main *****************
  1012 ;; Defined at:
  1013 ;;		line 773 in file "Q4.c"
  1014 ;; Parameters:    Size  Location     Type
  1015 ;;		None
  1016 ;; Auto vars:     Size  Location     Type
  1017 ;;  i               2   32[BANK0 ] int 
  1018 ;;  j               2   30[BANK0 ] int 
  1019 ;;  ans             2   28[BANK0 ] int 
  1020 ;;  ataiR           2    0        int 
  1021 ;;  ataiL           2    0        int 
  1022 ;;  segR            2    0        unsigned short 
  1023 ;;  segL            2    0        unsigned short 
  1024 ;;  time            2    0        int 
  1025 ;;  n               2    0        int 
  1026 ;;  m               2    0        int 
  1027 ;;  k               2    0        int 
  1028 ;; Return value:  Size  Location     Type
  1029 ;;                  1    wreg      void 
  1030 ;; Registers used:
  1031 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1032 ;; Tracked objects:
  1033 ;;		On entry : B1F/0
  1034 ;;		On exit  : 0/0
  1035 ;;		Unchanged: 0/0
  1036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1038 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1039 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1040 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1041 ;;Total ram usage:        8 bytes
  1042 ;; Hardware stack levels required when called: 3
  1043 ;; This function calls:
  1044 ;;		___wmul
  1045 ;;		_dynam
  1046 ;;		_fclr
  1047 ;;		_motor
  1048 ;;		_portinit
  1049 ;;		_waitSEGStop
  1050 ;;		_zenoff
  1051 ;; This function is called by:
  1052 ;;		Startup code after reset
  1053 ;; This function uses a non-reentrant model
  1054 ;;
  1055                           
  1056                           
  1057                           ;psect for function _main
  1058  04FB                     _main:
  1059  04FB                     l3218:	
  1060                           ;incstack = 0
  1061                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1062                           
  1063                           
  1064                           ;Q4.c: 776:     OSCCON=0x7A;
  1065  04FB  307A               	movlw	122
  1066  04FC  0021               	movlb	1	; select bank1
  1067  04FD  0099               	movwf	25	;volatile
  1068  04FE                     l3220:
  1069                           
  1070                           ;Q4.c: 778:     portinit();
  1071  04FE  3180  20CE  3184   	fcall	_portinit
  1072                           
  1073                           ;Q4.c: 780:     zenoff();
  1074  0501  3180  20C5  3184   	fcall	_zenoff
  1075  0504                     l3222:
  1076  0504                     l3224:
  1077  0504                     l3226:
  1078  0504                     l3228:
  1079  0504                     l3230:
  1080  0504                     l362:	
  1081                           ;Q4.c: 785:     while((RA0!=1)||(RA1!=1)||(RA2!=1));
  1082                           
  1083  0504  0020               	movlb	0	; select bank0
  1084  0505  1C0C               	btfss	12,0	;volatile
  1085  0506  2D08               	goto	u3421
  1086  0507  2D09               	goto	u3420
  1087  0508                     u3421:
  1088  0508  2D04               	goto	l362
  1089  0509                     u3420:
  1090  0509                     l3232:
  1091  0509  1C8C               	btfss	12,1	;volatile
  1092  050A  2D0C               	goto	u3431
  1093  050B  2D0D               	goto	u3430
  1094  050C                     u3431:
  1095  050C  2D04               	goto	l362
  1096  050D                     u3430:
  1097  050D                     l3234:
  1098  050D  1D0C               	btfss	12,2	;volatile
  1099  050E  2D10               	goto	u3441
  1100  050F  2D11               	goto	u3440
  1101  0510                     u3441:
  1102  0510  2D04               	goto	l362
  1103  0511                     u3440:
  1104  0511                     l365:	
  1105                           ;Q4.c: 789:     hukki:
  1106                           
  1107                           
  1108                           ;Q4.c: 792:     RC2=RC0=RC1=1;
  1109  0511  0020               	movlb	0	; select bank0
  1110  0512  148E               	bsf	14,1	;volatile
  1111  0513  188E               	btfsc	14,1	;volatile
  1112  0514  2D16               	goto	u3451
  1113  0515  2D19               	goto	u3450
  1114  0516                     u3451:
  1115  0516  0020               	movlb	0	; select bank0
  1116  0517  140E               	bsf	14,0	;volatile
  1117  0518  2D1B               	goto	u3464
  1118  0519                     u3450:
  1119  0519  0020               	movlb	0	; select bank0
  1120  051A  100E               	bcf	14,0	;volatile
  1121  051B                     u3464:
  1122  051B  180E               	btfsc	14,0	;volatile
  1123  051C  2D1E               	goto	u3461
  1124  051D  2D21               	goto	u3460
  1125  051E                     u3461:
  1126  051E  0020               	movlb	0	; select bank0
  1127  051F  150E               	bsf	14,2	;volatile
  1128  0520  2D23               	goto	u3474
  1129  0521                     u3460:
  1130  0521  0020               	movlb	0	; select bank0
  1131  0522  110E               	bcf	14,2	;volatile
  1132  0523                     u3474:
  1133  0523                     l3236:
  1134                           
  1135                           ;Q4.c: 795:     fclr(2);
  1136  0523  3002               	movlw	2
  1137  0524  00F0               	movwf	fclr@flg
  1138  0525  3000               	movlw	0
  1139  0526  00F1               	movwf	fclr@flg+1
  1140  0527  3181  2100  3184   	fcall	_fclr
  1141  052A                     l3238:
  1142  052A                     l3240:
  1143                           
  1144                           ;Q4.c: 807:     int ans = -1;
  1145  052A  30FF               	movlw	255
  1146  052B  0020               	movlb	0	; select bank0
  1147  052C  00E0               	movwf	main@ans
  1148  052D  30FF               	movlw	255
  1149  052E  00E1               	movwf	main@ans+1
  1150  052F                     l3242:
  1151  052F                     l3244:
  1152  052F                     l3246:
  1153  052F                     l3248:
  1154  052F                     l3250:
  1155                           
  1156                           ;Q4.c: 821:         if(RA0 ==1 && RA1 == 0){
  1157  052F  0020               	movlb	0	; select bank0
  1158  0530  1C0C               	btfss	12,0	;volatile
  1159  0531  2D33               	goto	u3481
  1160  0532  2D34               	goto	u3480
  1161  0533                     u3481:
  1162  0533  2D49               	goto	l3256
  1163  0534                     u3480:
  1164  0534                     l3252:
  1165  0534  188C               	btfsc	12,1	;volatile
  1166  0535  2D37               	goto	u3491
  1167  0536  2D38               	goto	u3490
  1168  0537                     u3491:
  1169  0537  2D49               	goto	l3256
  1170  0538                     u3490:
  1171  0538                     l3254:
  1172                           
  1173                           ;Q4.c: 822:             dynam(0x40,0x40,0,0);
  1174  0538  3040               	movlw	64
  1175  0539  00F0               	movwf	dynam@dig1data
  1176  053A  3000               	movlw	0
  1177  053B  00F1               	movwf	dynam@dig1data+1
  1178  053C  3040               	movlw	64
  1179  053D  00F2               	movwf	dynam@dig2data
  1180  053E  3000               	movlw	0
  1181  053F  00F3               	movwf	dynam@dig2data+1
  1182  0540  3000               	movlw	0
  1183  0541  00F4               	movwf	dynam@smdata
  1184  0542  00F5               	movwf	dynam@smdata+1
  1185  0543  3000               	movlw	0
  1186  0544  00F6               	movwf	dynam@tr
  1187  0545  00F7               	movwf	dynam@tr+1
  1188  0546  3183  2391  3184   	fcall	_dynam
  1189  0549                     l3256:
  1190                           
  1191                           ;Q4.c: 825:         if(RA0 ==0 && RA1 == 0){
  1192  0549  0020               	movlb	0	; select bank0
  1193  054A  180C               	btfsc	12,0	;volatile
  1194  054B  2D4D               	goto	u3501
  1195  054C  2D4E               	goto	u3500
  1196  054D                     u3501:
  1197  054D  2D2F               	goto	l3250
  1198  054E                     u3500:
  1199  054E                     l3258:
  1200  054E  188C               	btfsc	12,1	;volatile
  1201  054F  2D51               	goto	u3511
  1202  0550  2D52               	goto	u3510
  1203  0551                     u3511:
  1204  0551  2D2F               	goto	l3250
  1205  0552                     u3510:
  1206  0552                     l3260:
  1207                           
  1208                           ;Q4.c: 826:             zyoutai = waitSEGStop(0x40,0x40,1000,0b001);
  1209  0552  3040               	movlw	64
  1210  0553  00CC               	movwf	waitSEGStop@seg1
  1211  0554  3000               	movlw	0
  1212  0555  00CD               	movwf	waitSEGStop@seg1+1
  1213  0556  3040               	movlw	64
  1214  0557  00CE               	movwf	waitSEGStop@seg2
  1215  0558  3000               	movlw	0
  1216  0559  00CF               	movwf	waitSEGStop@seg2+1
  1217  055A  30E8               	movlw	232
  1218  055B  00D0               	movwf	waitSEGStop@wt
  1219  055C  3003               	movlw	3
  1220  055D  00D1               	movwf	waitSEGStop@wt+1
  1221  055E  3001               	movlw	1
  1222  055F  00D2               	movwf	waitSEGStop@dousa
  1223  0560  3000               	movlw	0
  1224  0561  00D3               	movwf	waitSEGStop@dousa+1
  1225  0562  3182  22B4  3184   	fcall	_waitSEGStop
  1226  0565  0020               	movlb	0	; select bank0
  1227  0566  084D               	movf	?_waitSEGStop+1,w
  1228  0567  00A1               	movwf	_zyoutai+1
  1229  0568  084C               	movf	?_waitSEGStop,w
  1230  0569  00A0               	movwf	_zyoutai
  1231  056A                     l3262:
  1232                           
  1233                           ;Q4.c: 828:             if(zyoutai >= 1){
  1234  056A  0821               	movf	_zyoutai+1,w
  1235  056B  3A80               	xorlw	128
  1236  056C  00DE               	movwf	??_main
  1237  056D  3080               	movlw	128
  1238  056E  025E               	subwf	??_main,w
  1239  056F  1D03               	skipz
  1240  0570  2D73               	goto	u3525
  1241  0571  3001               	movlw	1
  1242  0572  0220               	subwf	_zyoutai,w
  1243  0573                     u3525:
  1244  0573  1C03               	skipc
  1245  0574  2D76               	goto	u3521
  1246  0575  2D77               	goto	u3520
  1247  0576                     u3521:
  1248  0576  2E56               	goto	l3294
  1249  0577                     u3520:
  1250  0577                     l3264:
  1251                           
  1252                           ;Q4.c: 829:                 _delay((unsigned long)((500)*(16000000/4000UL)));
  1253  0577  300B               	movlw	11
  1254  0578  0020               	movlb	0	; select bank0
  1255  0579  00DF               	movwf	??_main+1
  1256  057A  3026               	movlw	38
  1257  057B  00DE               	movwf	??_main
  1258  057C  305D               	movlw	93
  1259  057D                     u3887:
  1260  057D  0B89               	decfsz	9,f
  1261  057E  2D7D               	goto	u3887
  1262  057F  0BDE               	decfsz	??_main,f
  1263  0580  2D7D               	goto	u3887
  1264  0581  0BDF               	decfsz	??_main+1,f
  1265  0582  2D7D               	goto	u3887
  1266  0583  3200               	nop2
  1267  0584                     l370:	
  1268                           ;Q4.c: 830:                 while(1){
  1269                           
  1270                           
  1271                           ;Q4.c: 831:                     for(i = 1;i<=6;i++){
  1272  0584  3001               	movlw	1
  1273  0585  0020               	movlb	0	; select bank0
  1274  0586  00E4               	movwf	main@i
  1275  0587  3000               	movlw	0
  1276  0588  00E5               	movwf	main@i+1
  1277  0589                     l3268:
  1278                           
  1279                           ;Q4.c: 832:                         zyoutai = waitSEGStop(0x40,num0[i],1000,0b001);
  1280  0589  3040               	movlw	64
  1281  058A  0020               	movlb	0	; select bank0
  1282  058B  00CC               	movwf	waitSEGStop@seg1
  1283  058C  3000               	movlw	0
  1284  058D  00CD               	movwf	waitSEGStop@seg1+1
  1285  058E  3564               	lslf	main@i,w
  1286  058F  3EC0               	addlw	(low (_num0| 0))& (0+255)
  1287  0590  0086               	movwf	6
  1288  0591  0187               	clrf	7
  1289  0592  3F40               	moviw [0]fsr1
  1290  0593  00CE               	movwf	waitSEGStop@seg2
  1291  0594  3F41               	moviw [1]fsr1
  1292  0595  00CF               	movwf	waitSEGStop@seg2+1
  1293  0596  30E8               	movlw	232
  1294  0597  00D0               	movwf	waitSEGStop@wt
  1295  0598  3003               	movlw	3
  1296  0599  00D1               	movwf	waitSEGStop@wt+1
  1297  059A  3001               	movlw	1
  1298  059B  00D2               	movwf	waitSEGStop@dousa
  1299  059C  3000               	movlw	0
  1300  059D  00D3               	movwf	waitSEGStop@dousa+1
  1301  059E  3182  22B4  3184   	fcall	_waitSEGStop
  1302  05A1  0020               	movlb	0	; select bank0
  1303  05A2  084D               	movf	?_waitSEGStop+1,w
  1304  05A3  00A1               	movwf	_zyoutai+1
  1305  05A4  084C               	movf	?_waitSEGStop,w
  1306  05A5  00A0               	movwf	_zyoutai
  1307  05A6                     l3270:
  1308                           
  1309                           ;Q4.c: 833:                         if(zyoutai > 0){
  1310  05A6  0821               	movf	_zyoutai+1,w
  1311  05A7  3A80               	xorlw	128
  1312  05A8  00DE               	movwf	??_main
  1313  05A9  3080               	movlw	128
  1314  05AA  025E               	subwf	??_main,w
  1315  05AB  1D03               	skipz
  1316  05AC  2DAF               	goto	u3535
  1317  05AD  3001               	movlw	1
  1318  05AE  0220               	subwf	_zyoutai,w
  1319  05AF                     u3535:
  1320  05AF  1C03               	skipc
  1321  05B0  2DB2               	goto	u3531
  1322  05B1  2DB3               	goto	u3530
  1323  05B2                     u3531:
  1324  05B2  2DE8               	goto	l3282
  1325  05B3                     u3530:
  1326  05B3                     l3272:
  1327                           
  1328                           ;Q4.c: 834:                             ans++;
  1329  05B3  3001               	movlw	1
  1330  05B4  0020               	movlb	0	; select bank0
  1331  05B5  07E0               	addwf	main@ans,f
  1332  05B6  3000               	movlw	0
  1333  05B7  3DE1               	addwfc	main@ans+1,f
  1334  05B8                     l3274:
  1335                           
  1336                           ;Q4.c: 835:                             zyoutai = waitSEGStop(0x40,num0[i],zyoutai,0b001
      +                          );
  1337  05B8  3040               	movlw	64
  1338  05B9  00CC               	movwf	waitSEGStop@seg1
  1339  05BA  3000               	movlw	0
  1340  05BB  00CD               	movwf	waitSEGStop@seg1+1
  1341  05BC  3564               	lslf	main@i,w
  1342  05BD  3EC0               	addlw	(low (_num0| 0))& (0+255)
  1343  05BE  0086               	movwf	6
  1344  05BF  0187               	clrf	7
  1345  05C0  3F40               	moviw [0]fsr1
  1346  05C1  00CE               	movwf	waitSEGStop@seg2
  1347  05C2  3F41               	moviw [1]fsr1
  1348  05C3  00CF               	movwf	waitSEGStop@seg2+1
  1349  05C4  0821               	movf	_zyoutai+1,w
  1350  05C5  00D1               	movwf	waitSEGStop@wt+1
  1351  05C6  0820               	movf	_zyoutai,w
  1352  05C7  00D0               	movwf	waitSEGStop@wt
  1353  05C8  3001               	movlw	1
  1354  05C9  00D2               	movwf	waitSEGStop@dousa
  1355  05CA  3000               	movlw	0
  1356  05CB  00D3               	movwf	waitSEGStop@dousa+1
  1357  05CC  3182  22B4  3184   	fcall	_waitSEGStop
  1358  05CF  0020               	movlb	0	; select bank0
  1359  05D0  084D               	movf	?_waitSEGStop+1,w
  1360  05D1  00A1               	movwf	_zyoutai+1
  1361  05D2  084C               	movf	?_waitSEGStop,w
  1362  05D3  00A0               	movwf	_zyoutai
  1363  05D4                     l3276:
  1364                           
  1365                           ;Q4.c: 836:                             zyoutai =0;
  1366  05D4  01A0               	clrf	_zyoutai
  1367  05D5  01A1               	clrf	_zyoutai+1
  1368  05D6                     l3278:
  1369                           
  1370                           ;Q4.c: 837:                             if(zyoutai > 0){
  1371  05D6  0821               	movf	_zyoutai+1,w
  1372  05D7  3A80               	xorlw	128
  1373  05D8  00DE               	movwf	??_main
  1374  05D9  3080               	movlw	128
  1375  05DA  025E               	subwf	??_main,w
  1376  05DB  1D03               	skipz
  1377  05DC  2DDF               	goto	u3545
  1378  05DD  3001               	movlw	1
  1379  05DE  0220               	subwf	_zyoutai,w
  1380  05DF                     u3545:
  1381  05DF  1C03               	skipc
  1382  05E0  2DE2               	goto	u3541
  1383  05E1  2DE3               	goto	u3540
  1384  05E2                     u3541:
  1385  05E2  2DE8               	goto	l3282
  1386  05E3                     u3540:
  1387  05E3                     l3280:
  1388                           
  1389                           ;Q4.c: 838:                                 ans++;
  1390  05E3  3001               	movlw	1
  1391  05E4  0020               	movlb	0	; select bank0
  1392  05E5  07E0               	addwf	main@ans,f
  1393  05E6  3000               	movlw	0
  1394  05E7  3DE1               	addwfc	main@ans+1,f
  1395  05E8                     l3282:
  1396                           
  1397                           ;Q4.c: 842:                         if(ans == 2){
  1398  05E8  3002               	movlw	2
  1399  05E9  0020               	movlb	0	; select bank0
  1400  05EA  0660               	xorwf	main@ans,w
  1401  05EB  0461               	iorwf	main@ans+1,w
  1402  05EC  1D03               	btfss	3,2
  1403  05ED  2DEF               	goto	u3551
  1404  05EE  2DF0               	goto	u3550
  1405  05EF                     u3551:
  1406  05EF  2E44               	goto	l3292
  1407  05F0                     u3550:
  1408  05F0                     l3284:
  1409                           
  1410                           ;Q4.c: 843:                             motor(60*i,0x40,num0[i],2,5);
  1411  05F0  0865               	movf	main@i+1,w
  1412  05F1  00F9               	movwf	___wmul@multiplier+1
  1413  05F2  0864               	movf	main@i,w
  1414  05F3  00F8               	movwf	___wmul@multiplier
  1415  05F4  303C               	movlw	60
  1416  05F5  00FA               	movwf	___wmul@multiplicand
  1417  05F6  3000               	movlw	0
  1418  05F7  00FB               	movwf	___wmul@multiplicand+1
  1419  05F8  3180  20E1  3184   	fcall	___wmul
  1420  05FB  0879               	movf	?___wmul+1,w
  1421  05FC  0020               	movlb	0	; select bank0
  1422  05FD  00CD               	movwf	motor@kakudo+1
  1423  05FE  0878               	movf	?___wmul,w
  1424  05FF  00CC               	movwf	motor@kakudo
  1425  0600  3040               	movlw	64
  1426  0601  00CE               	movwf	motor@dig1data
  1427  0602  3000               	movlw	0
  1428  0603  00CF               	movwf	motor@dig1data+1
  1429  0604  3564               	lslf	main@i,w
  1430  0605  3EC0               	addlw	(low (_num0| 0))& (0+255)
  1431  0606  0086               	movwf	6
  1432  0607  0187               	clrf	7
  1433  0608  3F40               	moviw [0]fsr1
  1434  0609  00D0               	movwf	motor@dig2data
  1435  060A  3F41               	moviw [1]fsr1
  1436  060B  00D1               	movwf	motor@dig2data+1
  1437  060C  3002               	movlw	2
  1438  060D  00D2               	movwf	motor@smdata
  1439  060E  3000               	movlw	0
  1440  060F  00D3               	movwf	motor@smdata+1
  1441  0610  3005               	movlw	5
  1442  0611  00D4               	movwf	motor@tr
  1443  0612  3000               	movlw	0
  1444  0613  00D5               	movwf	motor@tr+1
  1445  0614  3181  2140  3184   	fcall	_motor
  1446  0617                     l3286:
  1447                           
  1448                           ;Q4.c: 846:                                 if(RA0==1 && RA1 == 0){
  1449  0617  0020               	movlb	0	; select bank0
  1450  0618  1C0C               	btfss	12,0	;volatile
  1451  0619  2E1B               	goto	u3561
  1452  061A  2E1C               	goto	u3560
  1453  061B                     u3561:
  1454  061B  2E17               	goto	l3286
  1455  061C                     u3560:
  1456  061C                     l3288:
  1457  061C  188C               	btfsc	12,1	;volatile
  1458  061D  2E1F               	goto	u3571
  1459  061E  2E20               	goto	u3570
  1460  061F                     u3571:
  1461  061F  2E17               	goto	l3286
  1462  0620                     u3570:
  1463  0620                     l3290:
  1464                           
  1465                           ;Q4.c: 847:                                     motor(60*i,0x40,0x40,1,1);
  1466  0620  0865               	movf	main@i+1,w
  1467  0621  00F9               	movwf	___wmul@multiplier+1
  1468  0622  0864               	movf	main@i,w
  1469  0623  00F8               	movwf	___wmul@multiplier
  1470  0624  303C               	movlw	60
  1471  0625  00FA               	movwf	___wmul@multiplicand
  1472  0626  3000               	movlw	0
  1473  0627  00FB               	movwf	___wmul@multiplicand+1
  1474  0628  3180  20E1  3184   	fcall	___wmul
  1475  062B  0879               	movf	?___wmul+1,w
  1476  062C  0020               	movlb	0	; select bank0
  1477  062D  00CD               	movwf	motor@kakudo+1
  1478  062E  0878               	movf	?___wmul,w
  1479  062F  00CC               	movwf	motor@kakudo
  1480  0630  3040               	movlw	64
  1481  0631  00CE               	movwf	motor@dig1data
  1482  0632  3000               	movlw	0
  1483  0633  00CF               	movwf	motor@dig1data+1
  1484  0634  3040               	movlw	64
  1485  0635  00D0               	movwf	motor@dig2data
  1486  0636  3000               	movlw	0
  1487  0637  00D1               	movwf	motor@dig2data+1
  1488  0638  3001               	movlw	1
  1489  0639  00D2               	movwf	motor@smdata
  1490  063A  3000               	movlw	0
  1491  063B  00D3               	movwf	motor@smdata+1
  1492  063C  3001               	movlw	1
  1493  063D  00D4               	movwf	motor@tr
  1494  063E  3000               	movlw	0
  1495  063F  00D5               	movwf	motor@tr+1
  1496  0640  3181  2140  3184   	fcall	_motor
  1497                           
  1498                           ;Q4.c: 848:                                     goto hukki;
  1499  0643  2D11               	goto	l365
  1500  0644                     l3292:
  1501                           
  1502                           ;Q4.c: 852:                     }
  1503  0644  3001               	movlw	1
  1504  0645  07E4               	addwf	main@i,f
  1505  0646  3000               	movlw	0
  1506  0647  3DE5               	addwfc	main@i+1,f
  1507  0648  0865               	movf	main@i+1,w
  1508  0649  3A80               	xorlw	128
  1509  064A  00DE               	movwf	??_main
  1510  064B  3080               	movlw	128
  1511  064C  025E               	subwf	??_main,w
  1512  064D  1D03               	skipz
  1513  064E  2E51               	goto	u3585
  1514  064F  3007               	movlw	7
  1515  0650  0264               	subwf	main@i,w
  1516  0651                     u3585:
  1517  0651  1C03               	skipc
  1518  0652  2E54               	goto	u3581
  1519  0653  2E55               	goto	u3580
  1520  0654                     u3581:
  1521  0654  2D89               	goto	l3268
  1522  0655                     u3580:
  1523  0655  2D84               	goto	l370
  1524  0656                     l3294:
  1525                           
  1526                           ;Q4.c: 856:             zyoutai = waitSEGStop(0,0x40,1000,0b001);
  1527  0656  3000               	movlw	0
  1528  0657  0020               	movlb	0	; select bank0
  1529  0658  00CC               	movwf	waitSEGStop@seg1
  1530  0659  00CD               	movwf	waitSEGStop@seg1+1
  1531  065A  3040               	movlw	64
  1532  065B  00CE               	movwf	waitSEGStop@seg2
  1533  065C  3000               	movlw	0
  1534  065D  00CF               	movwf	waitSEGStop@seg2+1
  1535  065E  30E8               	movlw	232
  1536  065F  00D0               	movwf	waitSEGStop@wt
  1537  0660  3003               	movlw	3
  1538  0661  00D1               	movwf	waitSEGStop@wt+1
  1539  0662  3001               	movlw	1
  1540  0663  00D2               	movwf	waitSEGStop@dousa
  1541  0664  3000               	movlw	0
  1542  0665  00D3               	movwf	waitSEGStop@dousa+1
  1543  0666  3182  22B4  3184   	fcall	_waitSEGStop
  1544  0669  0020               	movlb	0	; select bank0
  1545  066A  084D               	movf	?_waitSEGStop+1,w
  1546  066B  00A1               	movwf	_zyoutai+1
  1547  066C  084C               	movf	?_waitSEGStop,w
  1548  066D  00A0               	movwf	_zyoutai
  1549  066E                     l3296:
  1550                           
  1551                           ;Q4.c: 858:             if(zyoutai >= 1){
  1552  066E  0821               	movf	_zyoutai+1,w
  1553  066F  3A80               	xorlw	128
  1554  0670  00DE               	movwf	??_main
  1555  0671  3080               	movlw	128
  1556  0672  025E               	subwf	??_main,w
  1557  0673  1D03               	skipz
  1558  0674  2E77               	goto	u3595
  1559  0675  3001               	movlw	1
  1560  0676  0220               	subwf	_zyoutai,w
  1561  0677                     u3595:
  1562  0677  1C03               	skipc
  1563  0678  2E7A               	goto	u3591
  1564  0679  2E7B               	goto	u3590
  1565  067A                     u3591:
  1566  067A  2D2F               	goto	l3250
  1567  067B                     u3590:
  1568  067B                     l3298:
  1569                           
  1570                           ;Q4.c: 859:                 _delay((unsigned long)((500)*(16000000/4000UL)));
  1571  067B  300B               	movlw	11
  1572  067C  0020               	movlb	0	; select bank0
  1573  067D  00DF               	movwf	??_main+1
  1574  067E  3026               	movlw	38
  1575  067F  00DE               	movwf	??_main
  1576  0680  305D               	movlw	93
  1577  0681                     u3897:
  1578  0681  0B89               	decfsz	9,f
  1579  0682  2E81               	goto	u3897
  1580  0683  0BDE               	decfsz	??_main,f
  1581  0684  2E81               	goto	u3897
  1582  0685  0BDF               	decfsz	??_main+1,f
  1583  0686  2E81               	goto	u3897
  1584  0687  3200               	nop2
  1585  0688                     l383:	
  1586                           ;Q4.c: 860:                 while(1){
  1587                           
  1588                           
  1589                           ;Q4.c: 861:                     for(i = 1;i<=6;i++){
  1590  0688  3001               	movlw	1
  1591  0689  0020               	movlb	0	; select bank0
  1592  068A  00E4               	movwf	main@i
  1593  068B  3000               	movlw	0
  1594  068C  00E5               	movwf	main@i+1
  1595  068D                     l3302:
  1596                           
  1597                           ;Q4.c: 862:                         zyoutai = waitSEGStop(0,num0[i],1000,0b001);
  1598  068D  3000               	movlw	0
  1599  068E  0020               	movlb	0	; select bank0
  1600  068F  00CC               	movwf	waitSEGStop@seg1
  1601  0690  00CD               	movwf	waitSEGStop@seg1+1
  1602  0691  3564               	lslf	main@i,w
  1603  0692  3EC0               	addlw	(low (_num0| 0))& (0+255)
  1604  0693  0086               	movwf	6
  1605  0694  0187               	clrf	7
  1606  0695  3F40               	moviw [0]fsr1
  1607  0696  00CE               	movwf	waitSEGStop@seg2
  1608  0697  3F41               	moviw [1]fsr1
  1609  0698  00CF               	movwf	waitSEGStop@seg2+1
  1610  0699  30E8               	movlw	232
  1611  069A  00D0               	movwf	waitSEGStop@wt
  1612  069B  3003               	movlw	3
  1613  069C  00D1               	movwf	waitSEGStop@wt+1
  1614  069D  3001               	movlw	1
  1615  069E  00D2               	movwf	waitSEGStop@dousa
  1616  069F  3000               	movlw	0
  1617  06A0  00D3               	movwf	waitSEGStop@dousa+1
  1618  06A1  3182  22B4  3184   	fcall	_waitSEGStop
  1619  06A4  0020               	movlb	0	; select bank0
  1620  06A5  084D               	movf	?_waitSEGStop+1,w
  1621  06A6  00A1               	movwf	_zyoutai+1
  1622  06A7  084C               	movf	?_waitSEGStop,w
  1623  06A8  00A0               	movwf	_zyoutai
  1624  06A9                     l3304:
  1625                           
  1626                           ;Q4.c: 863:                         if(zyoutai > 0){
  1627  06A9  0821               	movf	_zyoutai+1,w
  1628  06AA  3A80               	xorlw	128
  1629  06AB  00DE               	movwf	??_main
  1630  06AC  3080               	movlw	128
  1631  06AD  025E               	subwf	??_main,w
  1632  06AE  1D03               	skipz
  1633  06AF  2EB2               	goto	u3605
  1634  06B0  3001               	movlw	1
  1635  06B1  0220               	subwf	_zyoutai,w
  1636  06B2                     u3605:
  1637  06B2  1C03               	skipc
  1638  06B3  2EB5               	goto	u3601
  1639  06B4  2EB6               	goto	u3600
  1640  06B5                     u3601:
  1641  06B5  2EE8               	goto	l3314
  1642  06B6                     u3600:
  1643  06B6                     l3306:
  1644                           
  1645                           ;Q4.c: 864:                             ans++;
  1646  06B6  3001               	movlw	1
  1647  06B7  0020               	movlb	0	; select bank0
  1648  06B8  07E0               	addwf	main@ans,f
  1649  06B9  3000               	movlw	0
  1650  06BA  3DE1               	addwfc	main@ans+1,f
  1651  06BB                     l3308:
  1652                           
  1653                           ;Q4.c: 865:                             zyoutai = waitSEGStop(0,num0[i],zyoutai,0b001);
  1654  06BB  3000               	movlw	0
  1655  06BC  00CC               	movwf	waitSEGStop@seg1
  1656  06BD  00CD               	movwf	waitSEGStop@seg1+1
  1657  06BE  3564               	lslf	main@i,w
  1658  06BF  3EC0               	addlw	(low (_num0| 0))& (0+255)
  1659  06C0  0086               	movwf	6
  1660  06C1  0187               	clrf	7
  1661  06C2  3F40               	moviw [0]fsr1
  1662  06C3  00CE               	movwf	waitSEGStop@seg2
  1663  06C4  3F41               	moviw [1]fsr1
  1664  06C5  00CF               	movwf	waitSEGStop@seg2+1
  1665  06C6  0821               	movf	_zyoutai+1,w
  1666  06C7  00D1               	movwf	waitSEGStop@wt+1
  1667  06C8  0820               	movf	_zyoutai,w
  1668  06C9  00D0               	movwf	waitSEGStop@wt
  1669  06CA  3001               	movlw	1
  1670  06CB  00D2               	movwf	waitSEGStop@dousa
  1671  06CC  3000               	movlw	0
  1672  06CD  00D3               	movwf	waitSEGStop@dousa+1
  1673  06CE  3182  22B4  3184   	fcall	_waitSEGStop
  1674  06D1  0020               	movlb	0	; select bank0
  1675  06D2  084D               	movf	?_waitSEGStop+1,w
  1676  06D3  00A1               	movwf	_zyoutai+1
  1677  06D4  084C               	movf	?_waitSEGStop,w
  1678  06D5  00A0               	movwf	_zyoutai
  1679  06D6                     l3310:
  1680                           
  1681                           ;Q4.c: 866:                             if(zyoutai > 0){
  1682  06D6  0821               	movf	_zyoutai+1,w
  1683  06D7  3A80               	xorlw	128
  1684  06D8  00DE               	movwf	??_main
  1685  06D9  3080               	movlw	128
  1686  06DA  025E               	subwf	??_main,w
  1687  06DB  1D03               	skipz
  1688  06DC  2EDF               	goto	u3615
  1689  06DD  3001               	movlw	1
  1690  06DE  0220               	subwf	_zyoutai,w
  1691  06DF                     u3615:
  1692  06DF  1C03               	skipc
  1693  06E0  2EE2               	goto	u3611
  1694  06E1  2EE3               	goto	u3610
  1695  06E2                     u3611:
  1696  06E2  2EE8               	goto	l3314
  1697  06E3                     u3610:
  1698  06E3                     l3312:
  1699                           
  1700                           ;Q4.c: 867:                                 ans++;
  1701  06E3  3001               	movlw	1
  1702  06E4  0020               	movlb	0	; select bank0
  1703  06E5  07E0               	addwf	main@ans,f
  1704  06E6  3000               	movlw	0
  1705  06E7  3DE1               	addwfc	main@ans+1,f
  1706  06E8                     l3314:
  1707                           
  1708                           ;Q4.c: 871:                         if(ans == 2){
  1709  06E8  3002               	movlw	2
  1710  06E9  0020               	movlb	0	; select bank0
  1711  06EA  0660               	xorwf	main@ans,w
  1712  06EB  0461               	iorwf	main@ans+1,w
  1713  06EC  1D03               	btfss	3,2
  1714  06ED  2EEF               	goto	u3621
  1715  06EE  2EF0               	goto	u3620
  1716  06EF                     u3621:
  1717  06EF  2FB1               	goto	l3340
  1718  06F0                     u3620:
  1719  06F0                     l3316:
  1720                           
  1721                           ;Q4.c: 872:                             motor(60*i,0,num0[i],1,5);
  1722  06F0  0865               	movf	main@i+1,w
  1723  06F1  00F9               	movwf	___wmul@multiplier+1
  1724  06F2  0864               	movf	main@i,w
  1725  06F3  00F8               	movwf	___wmul@multiplier
  1726  06F4  303C               	movlw	60
  1727  06F5  00FA               	movwf	___wmul@multiplicand
  1728  06F6  3000               	movlw	0
  1729  06F7  00FB               	movwf	___wmul@multiplicand+1
  1730  06F8  3180  20E1  3184   	fcall	___wmul
  1731  06FB  0879               	movf	?___wmul+1,w
  1732  06FC  0020               	movlb	0	; select bank0
  1733  06FD  00CD               	movwf	motor@kakudo+1
  1734  06FE  0878               	movf	?___wmul,w
  1735  06FF  00CC               	movwf	motor@kakudo
  1736  0700  3000               	movlw	0
  1737  0701  00CE               	movwf	motor@dig1data
  1738  0702  00CF               	movwf	motor@dig1data+1
  1739  0703  3564               	lslf	main@i,w
  1740  0704  3EC0               	addlw	(low (_num0| 0))& (0+255)
  1741  0705  0086               	movwf	6
  1742  0706  0187               	clrf	7
  1743  0707  3F40               	moviw [0]fsr1
  1744  0708  00D0               	movwf	motor@dig2data
  1745  0709  3F41               	moviw [1]fsr1
  1746  070A  00D1               	movwf	motor@dig2data+1
  1747  070B  3001               	movlw	1
  1748  070C  00D2               	movwf	motor@smdata
  1749  070D  3000               	movlw	0
  1750  070E  00D3               	movwf	motor@smdata+1
  1751  070F  3005               	movlw	5
  1752  0710  00D4               	movwf	motor@tr
  1753  0711  3000               	movlw	0
  1754  0712  00D5               	movwf	motor@tr+1
  1755  0713  3181  2140  3184   	fcall	_motor
  1756  0716                     l3318:
  1757                           
  1758                           ;Q4.c: 875:                                 if(RA0==1 && RA1 == 0){
  1759  0716  0020               	movlb	0	; select bank0
  1760  0717  1C0C               	btfss	12,0	;volatile
  1761  0718  2F1A               	goto	u3631
  1762  0719  2F1B               	goto	u3630
  1763  071A                     u3631:
  1764  071A  2F48               	goto	l390
  1765  071B                     u3630:
  1766  071B                     l3320:
  1767  071B  188C               	btfsc	12,1	;volatile
  1768  071C  2F1E               	goto	u3641
  1769  071D  2F1F               	goto	u3640
  1770  071E                     u3641:
  1771  071E  2F48               	goto	l390
  1772  071F                     u3640:
  1773  071F                     l3322:
  1774                           
  1775                           ;Q4.c: 876:                                     motor(60*(6-i),0x40,0x40,1,1);
  1776  071F  3006               	movlw	6
  1777  0720  00DE               	movwf	??_main
  1778  0721  0864               	movf	main@i,w
  1779  0722  025E               	subwf	??_main,w
  1780  0723  00F8               	movwf	___wmul@multiplier
  1781  0724  0965               	comf	main@i+1,w
  1782  0725  1803               	skipnc
  1783  0726  0A89               	incf	9,f
  1784  0727  00F9               	movwf	___wmul@multiplier+1
  1785  0728  303C               	movlw	60
  1786  0729  00FA               	movwf	___wmul@multiplicand
  1787  072A  3000               	movlw	0
  1788  072B  00FB               	movwf	___wmul@multiplicand+1
  1789  072C  3180  20E1  3184   	fcall	___wmul
  1790  072F  0879               	movf	?___wmul+1,w
  1791  0730  0020               	movlb	0	; select bank0
  1792  0731  00CD               	movwf	motor@kakudo+1
  1793  0732  0878               	movf	?___wmul,w
  1794  0733  00CC               	movwf	motor@kakudo
  1795  0734  3040               	movlw	64
  1796  0735  00CE               	movwf	motor@dig1data
  1797  0736  3000               	movlw	0
  1798  0737  00CF               	movwf	motor@dig1data+1
  1799  0738  3040               	movlw	64
  1800  0739  00D0               	movwf	motor@dig2data
  1801  073A  3000               	movlw	0
  1802  073B  00D1               	movwf	motor@dig2data+1
  1803  073C  3001               	movlw	1
  1804  073D  00D2               	movwf	motor@smdata
  1805  073E  3000               	movlw	0
  1806  073F  00D3               	movwf	motor@smdata+1
  1807  0740  3001               	movlw	1
  1808  0741  00D4               	movwf	motor@tr
  1809  0742  3000               	movlw	0
  1810  0743  00D5               	movwf	motor@tr+1
  1811  0744  3181  2140  3184   	fcall	_motor
  1812                           
  1813                           ;Q4.c: 877:                                     goto hukki;
  1814  0747  2D11               	goto	l365
  1815  0748                     l390:	
  1816                           ;Q4.c: 879:                                 }
  1817                           
  1818                           
  1819                           ;Q4.c: 880:                                 if(RA0 ==0 && RA1 ==1){
  1820  0748  180C               	btfsc	12,0	;volatile
  1821  0749  2F4B               	goto	u3651
  1822  074A  2F4C               	goto	u3650
  1823  074B                     u3651:
  1824  074B  2F16               	goto	l3318
  1825  074C                     u3650:
  1826  074C                     l3324:
  1827  074C  1C8C               	btfss	12,1	;volatile
  1828  074D  2F4F               	goto	u3661
  1829  074E  2F50               	goto	u3660
  1830  074F                     u3661:
  1831  074F  2F16               	goto	l3318
  1832  0750                     u3660:
  1833  0750                     l3326:
  1834                           
  1835                           ;Q4.c: 881:                                     motor(60*(6-i),0x40,0x40,1,1);
  1836  0750  3006               	movlw	6
  1837  0751  00DE               	movwf	??_main
  1838  0752  0864               	movf	main@i,w
  1839  0753  025E               	subwf	??_main,w
  1840  0754  00F8               	movwf	___wmul@multiplier
  1841  0755  0965               	comf	main@i+1,w
  1842  0756  1803               	skipnc
  1843  0757  0A89               	incf	9,f
  1844  0758  00F9               	movwf	___wmul@multiplier+1
  1845  0759  303C               	movlw	60
  1846  075A  00FA               	movwf	___wmul@multiplicand
  1847  075B  3000               	movlw	0
  1848  075C  00FB               	movwf	___wmul@multiplicand+1
  1849  075D  3180  20E1  3184   	fcall	___wmul
  1850  0760  0879               	movf	?___wmul+1,w
  1851  0761  0020               	movlb	0	; select bank0
  1852  0762  00CD               	movwf	motor@kakudo+1
  1853  0763  0878               	movf	?___wmul,w
  1854  0764  00CC               	movwf	motor@kakudo
  1855  0765  3040               	movlw	64
  1856  0766  00CE               	movwf	motor@dig1data
  1857  0767  3000               	movlw	0
  1858  0768  00CF               	movwf	motor@dig1data+1
  1859  0769  3040               	movlw	64
  1860  076A  00D0               	movwf	motor@dig2data
  1861  076B  3000               	movlw	0
  1862  076C  00D1               	movwf	motor@dig2data+1
  1863  076D  3001               	movlw	1
  1864  076E  00D2               	movwf	motor@smdata
  1865  076F  3000               	movlw	0
  1866  0770  00D3               	movwf	motor@smdata+1
  1867  0771  3001               	movlw	1
  1868  0772  00D4               	movwf	motor@tr
  1869  0773  3000               	movlw	0
  1870  0774  00D5               	movwf	motor@tr+1
  1871  0775  3181  2140  3184   	fcall	_motor
  1872  0778                     l3328:
  1873                           
  1874                           ;Q4.c: 883:                                     for(j = 0 ; j<=6; j++){
  1875  0778  0020               	movlb	0	; select bank0
  1876  0779  01E2               	clrf	main@j
  1877  077A  01E3               	clrf	main@j+1
  1878  077B                     l3334:
  1879                           
  1880                           ;Q4.c: 884:                                     motor(36*j,0,0x40,1,1);
  1881  077B  0020               	movlb	0	; select bank0
  1882  077C  0863               	movf	main@j+1,w
  1883  077D  00F9               	movwf	___wmul@multiplier+1
  1884  077E  0862               	movf	main@j,w
  1885  077F  00F8               	movwf	___wmul@multiplier
  1886  0780  3024               	movlw	36
  1887  0781  00FA               	movwf	___wmul@multiplicand
  1888  0782  3000               	movlw	0
  1889  0783  00FB               	movwf	___wmul@multiplicand+1
  1890  0784  3180  20E1  3184   	fcall	___wmul
  1891  0787  0879               	movf	?___wmul+1,w
  1892  0788  0020               	movlb	0	; select bank0
  1893  0789  00CD               	movwf	motor@kakudo+1
  1894  078A  0878               	movf	?___wmul,w
  1895  078B  00CC               	movwf	motor@kakudo
  1896  078C  3000               	movlw	0
  1897  078D  00CE               	movwf	motor@dig1data
  1898  078E  00CF               	movwf	motor@dig1data+1
  1899  078F  3040               	movlw	64
  1900  0790  00D0               	movwf	motor@dig2data
  1901  0791  3000               	movlw	0
  1902  0792  00D1               	movwf	motor@dig2data+1
  1903  0793  3001               	movlw	1
  1904  0794  00D2               	movwf	motor@smdata
  1905  0795  3000               	movlw	0
  1906  0796  00D3               	movwf	motor@smdata+1
  1907  0797  3001               	movlw	1
  1908  0798  00D4               	movwf	motor@tr
  1909  0799  3000               	movlw	0
  1910  079A  00D5               	movwf	motor@tr+1
  1911  079B  3181  2140  3184   	fcall	_motor
  1912  079E                     l3336:
  1913                           
  1914                           ;Q4.c: 886:                                     }
  1915  079E  3001               	movlw	1
  1916  079F  0020               	movlb	0	; select bank0
  1917  07A0  07E2               	addwf	main@j,f
  1918  07A1  3000               	movlw	0
  1919  07A2  3DE3               	addwfc	main@j+1,f
  1920  07A3                     l3338:
  1921  07A3  0863               	movf	main@j+1,w
  1922  07A4  3A80               	xorlw	128
  1923  07A5  00DE               	movwf	??_main
  1924  07A6  3080               	movlw	128
  1925  07A7  025E               	subwf	??_main,w
  1926  07A8  1D03               	skipz
  1927  07A9  2FAC               	goto	u3675
  1928  07AA  3007               	movlw	7
  1929  07AB  0262               	subwf	main@j,w
  1930  07AC                     u3675:
  1931  07AC  1C03               	skipc
  1932  07AD  2FAF               	goto	u3671
  1933  07AE  2FB0               	goto	u3670
  1934  07AF                     u3671:
  1935  07AF  2F7B               	goto	l3334
  1936  07B0                     u3670:
  1937  07B0  2F16               	goto	l3318
  1938  07B1                     l3340:
  1939                           
  1940                           ;Q4.c: 890:                     }
  1941  07B1  3001               	movlw	1
  1942  07B2  07E4               	addwf	main@i,f
  1943  07B3  3000               	movlw	0
  1944  07B4  3DE5               	addwfc	main@i+1,f
  1945  07B5  0865               	movf	main@i+1,w
  1946  07B6  3A80               	xorlw	128
  1947  07B7  00DE               	movwf	??_main
  1948  07B8  3080               	movlw	128
  1949  07B9  025E               	subwf	??_main,w
  1950  07BA  1D03               	skipz
  1951  07BB  2FBE               	goto	u3685
  1952  07BC  3007               	movlw	7
  1953  07BD  0264               	subwf	main@i,w
  1954  07BE                     u3685:
  1955  07BE  1C03               	skipc
  1956  07BF  2FC1               	goto	u3681
  1957  07C0  2FC2               	goto	u3680
  1958  07C1                     u3681:
  1959  07C1  2E8D               	goto	l3302
  1960  07C2                     u3680:
  1961  07C2  2E88               	goto	l383
  1962  07C3  3180  2802         	ljmp	start
  1963  07C5                     __end_of_main:
  1964                           
  1965                           	psect	text1
  1966  00C5                     __ptext1:	
  1967 ;; *************** function _zenoff *****************
  1968 ;; Defined at:
  1969 ;;		line 195 in file "Q4.c"
  1970 ;; Parameters:    Size  Location     Type
  1971 ;;		None
  1972 ;; Auto vars:     Size  Location     Type
  1973 ;;		None
  1974 ;; Return value:  Size  Location     Type
  1975 ;;                  1    wreg      void 
  1976 ;; Registers used:
  1977 ;;		status,2
  1978 ;; Tracked objects:
  1979 ;;		On entry : 0/0
  1980 ;;		On exit  : 0/0
  1981 ;;		Unchanged: 0/0
  1982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1987 ;;Total ram usage:        0 bytes
  1988 ;; Hardware stack levels used: 1
  1989 ;; This function calls:
  1990 ;;		Nothing
  1991 ;; This function is called by:
  1992 ;;		_main
  1993 ;; This function uses a non-reentrant model
  1994 ;;
  1995                           
  1996                           
  1997                           ;psect for function _zenoff
  1998  00C5                     _zenoff:
  1999  00C5                     l2504:	
  2000                           ;incstack = 0
  2001                           ; Regs used in _zenoff: [status,2]
  2002                           
  2003                           
  2004                           ;Q4.c: 197:     RC2=1;
  2005  00C5  0020               	movlb	0	; select bank0
  2006  00C6  150E               	bsf	14,2	;volatile
  2007                           
  2008                           ;Q4.c: 198:     RC1=1;
  2009  00C7  148E               	bsf	14,1	;volatile
  2010                           
  2011                           ;Q4.c: 199:     RC0=1;
  2012  00C8  140E               	bsf	14,0	;volatile
  2013  00C9                     l2506:
  2014                           
  2015                           ;Q4.c: 200:     PORTB=0x00;
  2016  00C9  018D               	clrf	13	;volatile
  2017  00CA                     l2508:
  2018                           
  2019                           ;Q4.c: 201:     RC7=0;RC7=1;RC7=0;
  2020  00CA  138E               	bcf	14,7	;volatile
  2021  00CB                     l2510:
  2022  00CB  178E               	bsf	14,7	;volatile
  2023  00CC                     l2512:
  2024  00CC  138E               	bcf	14,7	;volatile
  2025  00CD                     l108:
  2026  00CD  0008               	return
  2027  00CE                     __end_of_zenoff:
  2028                           
  2029                           	psect	text2
  2030  02B4                     __ptext2:	
  2031 ;; *************** function _waitSEGStop *****************
  2032 ;; Defined at:
  2033 ;;		line 464 in file "Q4.c"
  2034 ;; Parameters:    Size  Location     Type
  2035 ;;  seg1            2    8[BANK0 ] unsigned short 
  2036 ;;  seg2            2   10[BANK0 ] unsigned short 
  2037 ;;  wt              2   12[BANK0 ] unsigned short 
  2038 ;;  dousa           2   14[BANK0 ] int 
  2039 ;; Auto vars:     Size  Location     Type
  2040 ;;  i               2   24[BANK0 ] unsigned int 
  2041 ;;  cpSW3           2   22[BANK0 ] int 
  2042 ;;  cpSW2           2   20[BANK0 ] int 
  2043 ;;  cpSW1           2   18[BANK0 ] int 
  2044 ;; Return value:  Size  Location     Type
  2045 ;;                  2    8[BANK0 ] int 
  2046 ;; Registers used:
  2047 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2048 ;; Tracked objects:
  2049 ;;		On entry : 0/0
  2050 ;;		On exit  : 0/0
  2051 ;;		Unchanged: 0/0
  2052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2053 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2054 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2055 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2056 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2057 ;;Total ram usage:       18 bytes
  2058 ;; Hardware stack levels used: 1
  2059 ;; Hardware stack levels required when called: 2
  2060 ;; This function calls:
  2061 ;;		___lwdiv
  2062 ;;		___wmul
  2063 ;;		_dynam
  2064 ;;		_fclr
  2065 ;;		_tact
  2066 ;; This function is called by:
  2067 ;;		_main
  2068 ;; This function uses a non-reentrant model
  2069 ;;
  2070                           
  2071                           
  2072                           ;psect for function _waitSEGStop
  2073  02B4                     _waitSEGStop:
  2074  02B4                     l2554:	
  2075                           ;incstack = 0
  2076                           ; Regs used in _waitSEGStop: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2077                           
  2078                           
  2079                           ;Q4.c: 464: int waitSEGStop(unsigned short seg1,unsigned short seg2,unsigned short wt,in
      +                          t dousa);Q4.c: 465: {;Q4.c: 467:     int cpSW1 = RA0;
  2080  02B4  1003               	clrc
  2081  02B5  0020               	movlb	0	; select bank0
  2082  02B6  180C               	btfsc	12,0	;volatile
  2083  02B7  1403               	setc
  2084  02B8  3000               	movlw	0
  2085  02B9  3D09               	addwfc	9,w
  2086  02BA  00D4               	movwf	??_waitSEGStop
  2087  02BB  01D5               	clrf	??_waitSEGStop+1
  2088  02BC  0854               	movf	??_waitSEGStop,w
  2089  02BD  00D6               	movwf	waitSEGStop@cpSW1
  2090  02BE  0855               	movf	??_waitSEGStop+1,w
  2091  02BF  00D7               	movwf	waitSEGStop@cpSW1+1
  2092                           
  2093                           ;Q4.c: 468:     int cpSW2 = RA1;
  2094  02C0  1003               	clrc
  2095  02C1  188C               	btfsc	12,1	;volatile
  2096  02C2  1403               	setc
  2097  02C3  3000               	movlw	0
  2098  02C4  3D09               	addwfc	9,w
  2099  02C5  00D4               	movwf	??_waitSEGStop
  2100  02C6  01D5               	clrf	??_waitSEGStop+1
  2101  02C7  0854               	movf	??_waitSEGStop,w
  2102  02C8  00D8               	movwf	waitSEGStop@cpSW2
  2103  02C9  0855               	movf	??_waitSEGStop+1,w
  2104  02CA  00D9               	movwf	waitSEGStop@cpSW2+1
  2105                           
  2106                           ;Q4.c: 469:     int cpSW3 = RA2;
  2107  02CB  1003               	clrc
  2108  02CC  190C               	btfsc	12,2	;volatile
  2109  02CD  1403               	setc
  2110  02CE  3000               	movlw	0
  2111  02CF  3D09               	addwfc	9,w
  2112  02D0  00D4               	movwf	??_waitSEGStop
  2113  02D1  01D5               	clrf	??_waitSEGStop+1
  2114  02D2  0854               	movf	??_waitSEGStop,w
  2115  02D3  00DA               	movwf	waitSEGStop@cpSW3
  2116  02D4  0855               	movf	??_waitSEGStop+1,w
  2117  02D5  00DB               	movwf	waitSEGStop@cpSW3+1
  2118  02D6                     l2556:
  2119                           
  2120                           ;Q4.c: 473:     wt = wt / 10 + wt/1000*60;
  2121  02D6  30E8               	movlw	232
  2122  02D7  00F0               	movwf	___lwdiv@divisor
  2123  02D8  3003               	movlw	3
  2124  02D9  00F1               	movwf	___lwdiv@divisor+1
  2125  02DA  0851               	movf	waitSEGStop@wt+1,w
  2126  02DB  00F3               	movwf	___lwdiv@dividend+1
  2127  02DC  0850               	movf	waitSEGStop@wt,w
  2128  02DD  00F2               	movwf	___lwdiv@dividend
  2129  02DE  3181  2164  3182   	fcall	___lwdiv
  2130  02E1  0871               	movf	?___lwdiv+1,w
  2131  02E2  00F9               	movwf	___wmul@multiplier+1
  2132  02E3  0870               	movf	?___lwdiv,w
  2133  02E4  00F8               	movwf	___wmul@multiplier
  2134  02E5  303C               	movlw	60
  2135  02E6  00FA               	movwf	___wmul@multiplicand
  2136  02E7  3000               	movlw	0
  2137  02E8  00FB               	movwf	___wmul@multiplicand+1
  2138  02E9  3180  20E1  3182   	fcall	___wmul
  2139  02EC  0878               	movf	?___wmul,w
  2140  02ED  0020               	movlb	0	; select bank0
  2141  02EE  00D4               	movwf	??_waitSEGStop
  2142  02EF  0879               	movf	?___wmul+1,w
  2143  02F0  00D5               	movwf	??_waitSEGStop+1
  2144  02F1  300A               	movlw	10
  2145  02F2  00F0               	movwf	___lwdiv@divisor
  2146  02F3  3000               	movlw	0
  2147  02F4  00F1               	movwf	___lwdiv@divisor+1
  2148  02F5  0851               	movf	waitSEGStop@wt+1,w
  2149  02F6  00F3               	movwf	___lwdiv@dividend+1
  2150  02F7  0850               	movf	waitSEGStop@wt,w
  2151  02F8  00F2               	movwf	___lwdiv@dividend
  2152  02F9  3181  2164  3182   	fcall	___lwdiv
  2153  02FC  0870               	movf	?___lwdiv,w
  2154  02FD  0020               	movlb	0	; select bank0
  2155  02FE  0754               	addwf	??_waitSEGStop,w
  2156  02FF  00D0               	movwf	waitSEGStop@wt
  2157  0300  0871               	movf	?___lwdiv+1,w
  2158  0301  3D55               	addwfc	??_waitSEGStop+1,w
  2159  0302  00D1               	movwf	waitSEGStop@wt+1
  2160  0303                     l2558:
  2161                           
  2162                           ;Q4.c: 474:     unsigned int i;;Q4.c: 476:     for(i=wt;i>0;--i){
  2163  0303  0851               	movf	waitSEGStop@wt+1,w
  2164  0304  00DD               	movwf	waitSEGStop@i+1
  2165  0305  0850               	movf	waitSEGStop@wt,w
  2166  0306  00DC               	movwf	waitSEGStop@i
  2167  0307                     l2560:
  2168  0307  085C               	movf	waitSEGStop@i,w
  2169  0308  045D               	iorwf	waitSEGStop@i+1,w
  2170  0309  1D03               	btfss	3,2
  2171  030A  2B0C               	goto	u2311
  2172  030B  2B0D               	goto	u2310
  2173  030C                     u2311:
  2174  030C  2B0E               	goto	l2564
  2175  030D                     u2310:
  2176  030D  2B8E               	goto	l2612
  2177  030E                     l2564:
  2178                           
  2179                           ;Q4.c: 477:         dynam(seg1,seg2,0,0);
  2180  030E  084D               	movf	waitSEGStop@seg1+1,w
  2181  030F  00F1               	movwf	dynam@dig1data+1
  2182  0310  084C               	movf	waitSEGStop@seg1,w
  2183  0311  00F0               	movwf	dynam@dig1data
  2184  0312  084F               	movf	waitSEGStop@seg2+1,w
  2185  0313  00F3               	movwf	dynam@dig2data+1
  2186  0314  084E               	movf	waitSEGStop@seg2,w
  2187  0315  00F2               	movwf	dynam@dig2data
  2188  0316  3000               	movlw	0
  2189  0317  00F4               	movwf	dynam@smdata
  2190  0318  00F5               	movwf	dynam@smdata+1
  2191  0319  3000               	movlw	0
  2192  031A  00F6               	movwf	dynam@tr
  2193  031B  00F7               	movwf	dynam@tr+1
  2194  031C  3183  2391  3182   	fcall	_dynam
  2195                           
  2196                           ;Q4.c: 479:         tact(0);
  2197  031F  3000               	movlw	0
  2198  0320  00F8               	movwf	tact@mode
  2199  0321  00F9               	movwf	tact@mode+1
  2200  0322  3182  2269  3182   	fcall	_tact
  2201  0325                     l2566:
  2202                           
  2203                           ;Q4.c: 481:         if(cpSW1 != RA0){
  2204  0325  1003               	clrc
  2205  0326  0020               	movlb	0	; select bank0
  2206  0327  180C               	btfsc	12,0	;volatile
  2207  0328  1403               	setc
  2208  0329  3000               	movlw	0
  2209  032A  3D09               	addwfc	9,w
  2210  032B  00D4               	movwf	??_waitSEGStop
  2211  032C  01D5               	clrf	??_waitSEGStop+1
  2212  032D  0857               	movf	waitSEGStop@cpSW1+1,w
  2213  032E  0655               	xorwf	??_waitSEGStop+1,w
  2214  032F  1D03               	skipz
  2215  0330  2B33               	goto	u2325
  2216  0331  0856               	movf	waitSEGStop@cpSW1,w
  2217  0332  0654               	xorwf	??_waitSEGStop,w
  2218  0333                     u2325:
  2219  0333  1903               	skipnz
  2220  0334  2B36               	goto	u2321
  2221  0335  2B37               	goto	u2320
  2222  0336                     u2321:
  2223  0336  2B48               	goto	l2576
  2224  0337                     u2320:
  2225  0337                     l2568:
  2226                           
  2227                           ;Q4.c: 482:             if((0b100 & dousa) == 0b100){
  2228  0337  1D52               	btfss	waitSEGStop@dousa,2
  2229  0338  2B3A               	goto	u2331
  2230  0339  2B3B               	goto	u2330
  2231  033A                     u2331:
  2232  033A  2B48               	goto	l2576
  2233  033B                     u2330:
  2234  033B                     l2570:
  2235                           
  2236                           ;Q4.c: 484:                 fclr(2);
  2237  033B  3002               	movlw	2
  2238  033C  00F0               	movwf	fclr@flg
  2239  033D  3000               	movlw	0
  2240  033E  00F1               	movwf	fclr@flg+1
  2241  033F  3181  2100  3182   	fcall	_fclr
  2242  0342                     l2572:
  2243                           
  2244                           ;Q4.c: 485:                 return i;
  2245  0342  0020               	movlb	0	; select bank0
  2246  0343  085D               	movf	waitSEGStop@i+1,w
  2247  0344  00CD               	movwf	?_waitSEGStop+1
  2248  0345  085C               	movf	waitSEGStop@i,w
  2249  0346  00CC               	movwf	?_waitSEGStop
  2250  0347  2B90               	goto	l265
  2251  0348                     l2576:
  2252                           
  2253                           ;Q4.c: 488:         if(cpSW2 != RA1){
  2254  0348  1003               	clrc
  2255  0349  188C               	btfsc	12,1	;volatile
  2256  034A  1403               	setc
  2257  034B  3000               	movlw	0
  2258  034C  3D09               	addwfc	9,w
  2259  034D  00D4               	movwf	??_waitSEGStop
  2260  034E  01D5               	clrf	??_waitSEGStop+1
  2261  034F  0859               	movf	waitSEGStop@cpSW2+1,w
  2262  0350  0655               	xorwf	??_waitSEGStop+1,w
  2263  0351  1D03               	skipz
  2264  0352  2B55               	goto	u2345
  2265  0353  0858               	movf	waitSEGStop@cpSW2,w
  2266  0354  0654               	xorwf	??_waitSEGStop,w
  2267  0355                     u2345:
  2268  0355  1903               	skipnz
  2269  0356  2B58               	goto	u2341
  2270  0357  2B59               	goto	u2340
  2271  0358                     u2341:
  2272  0358  2B5E               	goto	l2586
  2273  0359                     u2340:
  2274  0359                     l2578:
  2275                           
  2276                           ;Q4.c: 489:             if((0b010 & dousa) == 0b010){
  2277  0359  1CD2               	btfss	waitSEGStop@dousa,1
  2278  035A  2B5C               	goto	u2351
  2279  035B  2B5D               	goto	u2350
  2280  035C                     u2351:
  2281  035C  2B5E               	goto	l2586
  2282  035D                     u2350:
  2283  035D  2B3B               	goto	l2570
  2284  035E                     l2586:
  2285                           
  2286                           ;Q4.c: 495:         if(((flag_sw3==1)&&(flag_R==1))){
  2287  035E  033E               	decf	_flag_sw3,w
  2288  035F  043F               	iorwf	_flag_sw3+1,w
  2289  0360  1D03               	btfss	3,2
  2290  0361  2B63               	goto	u2361
  2291  0362  2B64               	goto	u2360
  2292  0363                     u2361:
  2293  0363  2B73               	goto	l2600
  2294  0364                     u2360:
  2295  0364                     l2588:
  2296  0364  033C               	decf	_flag_R,w
  2297  0365  043D               	iorwf	_flag_R+1,w
  2298  0366  1D03               	btfss	3,2
  2299  0367  2B69               	goto	u2371
  2300  0368  2B6A               	goto	u2370
  2301  0369                     u2371:
  2302  0369  2B73               	goto	l2600
  2303  036A                     u2370:
  2304  036A                     l2590:
  2305                           
  2306                           ;Q4.c: 496:             if(RA2 != 0 && (0b001 & dousa) == 0b001){
  2307  036A  1D0C               	btfss	12,2	;volatile
  2308  036B  2B6D               	goto	u2381
  2309  036C  2B6E               	goto	u2380
  2310  036D                     u2381:
  2311  036D  2B73               	goto	l2600
  2312  036E                     u2380:
  2313  036E                     l2592:
  2314  036E  1C52               	btfss	waitSEGStop@dousa,0
  2315  036F  2B71               	goto	u2391
  2316  0370  2B72               	goto	u2390
  2317  0371                     u2391:
  2318  0371  2B73               	goto	l2600
  2319  0372                     u2390:
  2320  0372  2B3B               	goto	l2570
  2321  0373                     l2600:
  2322                           
  2323                           ;Q4.c: 502:         if(cpSW3 != RA2){
  2324  0373  1003               	clrc
  2325  0374  190C               	btfsc	12,2	;volatile
  2326  0375  1403               	setc
  2327  0376  3000               	movlw	0
  2328  0377  3D09               	addwfc	9,w
  2329  0378  00D4               	movwf	??_waitSEGStop
  2330  0379  01D5               	clrf	??_waitSEGStop+1
  2331  037A  085B               	movf	waitSEGStop@cpSW3+1,w
  2332  037B  0655               	xorwf	??_waitSEGStop+1,w
  2333  037C  1D03               	skipz
  2334  037D  2B80               	goto	u2405
  2335  037E  085A               	movf	waitSEGStop@cpSW3,w
  2336  037F  0654               	xorwf	??_waitSEGStop,w
  2337  0380                     u2405:
  2338  0380  1903               	skipnz
  2339  0381  2B83               	goto	u2401
  2340  0382  2B84               	goto	u2400
  2341  0383                     u2401:
  2342  0383  2B89               	goto	l2608
  2343  0384                     u2400:
  2344  0384                     l2602:
  2345                           
  2346                           ;Q4.c: 503:             if((0b0001 & dousa) == 0b0001){
  2347  0384  1C52               	btfss	waitSEGStop@dousa,0
  2348  0385  2B87               	goto	u2411
  2349  0386  2B88               	goto	u2410
  2350  0387                     u2411:
  2351  0387  2B89               	goto	l2608
  2352  0388                     u2410:
  2353  0388  2B42               	goto	l2572
  2354  0389                     l2608:
  2355                           
  2356                           ;Q4.c: 508:     }
  2357  0389  3001               	movlw	1
  2358  038A  02DC               	subwf	waitSEGStop@i,f
  2359  038B  3000               	movlw	0
  2360  038C  3BDD               	subwfb	waitSEGStop@i+1,f
  2361  038D  2B07               	goto	l2560
  2362  038E                     l2612:
  2363                           
  2364                           ;Q4.c: 510:     return 0;
  2365  038E  01CC               	clrf	?_waitSEGStop
  2366  038F  01CD               	clrf	?_waitSEGStop+1
  2367  0390                     l265:
  2368  0390  0008               	return
  2369  0391                     __end_of_waitSEGStop:
  2370                           
  2371                           	psect	text3
  2372  0269                     __ptext3:	
  2373 ;; *************** function _tact *****************
  2374 ;; Defined at:
  2375 ;;		line 346 in file "Q4.c"
  2376 ;; Parameters:    Size  Location     Type
  2377 ;;  mode            2    8[COMMON] unsigned short 
  2378 ;; Auto vars:     Size  Location     Type
  2379 ;;		None
  2380 ;; Return value:  Size  Location     Type
  2381 ;;                  1    wreg      void 
  2382 ;; Registers used:
  2383 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2384 ;; Tracked objects:
  2385 ;;		On entry : 0/0
  2386 ;;		On exit  : 0/0
  2387 ;;		Unchanged: 0/0
  2388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2389 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2392 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2393 ;;Total ram usage:        2 bytes
  2394 ;; Hardware stack levels used: 1
  2395 ;; Hardware stack levels required when called: 1
  2396 ;; This function calls:
  2397 ;;		_tactsw
  2398 ;; This function is called by:
  2399 ;;		_waitSEGStop
  2400 ;;		_kaisu
  2401 ;;		_motorStop
  2402 ;;		_buzzStop
  2403 ;; This function uses a non-reentrant model
  2404 ;;
  2405                           
  2406                           
  2407                           ;psect for function _tact
  2408  0269                     _tact:
  2409  0269                     l2384:	
  2410                           ;incstack = 0
  2411                           ; Regs used in _tact: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2412                           
  2413                           
  2414                           ;Q4.c: 346: void tact(unsigned short mode);Q4.c: 347: {;Q4.c: 348:     switch(mode){
  2415  0269  2AA3               	goto	l2412
  2416  026A                     l2386:
  2417                           
  2418                           ;Q4.c: 350:                 tactsw();
  2419  026A  3181  21A0  3182   	fcall	_tactsw
  2420  026D                     l2388:
  2421                           
  2422                           ;Q4.c: 351:                 if(flag_sw3==0)flag_R=1;
  2423  026D  0020               	movlb	0	; select bank0
  2424  026E  083E               	movf	_flag_sw3,w
  2425  026F  043F               	iorwf	_flag_sw3+1,w
  2426  0270  1D03               	btfss	3,2
  2427  0271  2A73               	goto	u2091
  2428  0272  2A74               	goto	u2090
  2429  0273                     u2091:
  2430  0273  2AB3               	goto	l208
  2431  0274                     u2090:
  2432  0274                     l2390:
  2433  0274  3001               	movlw	1
  2434  0275  00BC               	movwf	_flag_R
  2435  0276  3000               	movlw	0
  2436  0277  00BD               	movwf	_flag_R+1
  2437  0278  2AB3               	goto	l208
  2438  0279                     l2392:
  2439                           
  2440                           ;Q4.c: 354:                 tactsw();
  2441  0279  3181  21A0  3182   	fcall	_tactsw
  2442  027C                     l2394:
  2443                           
  2444                           ;Q4.c: 355:                 if(flag_sw3==1)flag_P=1;
  2445  027C  0020               	movlb	0	; select bank0
  2446  027D  033E               	decf	_flag_sw3,w
  2447  027E  043F               	iorwf	_flag_sw3+1,w
  2448  027F  1D03               	btfss	3,2
  2449  0280  2A82               	goto	u2101
  2450  0281  2A83               	goto	u2100
  2451  0282                     u2101:
  2452  0282  2AB3               	goto	l208
  2453  0283                     u2100:
  2454  0283                     l2396:
  2455  0283  3001               	movlw	1
  2456  0284  00BA               	movwf	_flag_P
  2457  0285  3000               	movlw	0
  2458  0286  00BB               	movwf	_flag_P+1
  2459  0287  2AB3               	goto	l208
  2460  0288                     l2398:
  2461                           
  2462                           ;Q4.c: 358:                 tactsw();
  2463  0288  3181  21A0  3182   	fcall	_tactsw
  2464  028B                     l2400:
  2465                           
  2466                           ;Q4.c: 359:                 if(flag_sw3==0)flag_R=1;
  2467  028B  0020               	movlb	0	; select bank0
  2468  028C  083E               	movf	_flag_sw3,w
  2469  028D  043F               	iorwf	_flag_sw3+1,w
  2470  028E  1D03               	btfss	3,2
  2471  028F  2A91               	goto	u2111
  2472  0290  2A92               	goto	u2110
  2473  0291                     u2111:
  2474  0291  2A96               	goto	l2404
  2475  0292                     u2110:
  2476  0292                     l2402:
  2477  0292  3001               	movlw	1
  2478  0293  00BC               	movwf	_flag_R
  2479  0294  3000               	movlw	0
  2480  0295  00BD               	movwf	_flag_R+1
  2481  0296                     l2404:
  2482                           
  2483                           ;Q4.c: 360:                 if((flag_sw3==1)&&(flag_R==1))flag_P=1;
  2484  0296  033E               	decf	_flag_sw3,w
  2485  0297  043F               	iorwf	_flag_sw3+1,w
  2486  0298  1D03               	btfss	3,2
  2487  0299  2A9B               	goto	u2121
  2488  029A  2A9C               	goto	u2120
  2489  029B                     u2121:
  2490  029B  2AB3               	goto	l208
  2491  029C                     u2120:
  2492  029C                     l2406:
  2493  029C  033C               	decf	_flag_R,w
  2494  029D  043D               	iorwf	_flag_R+1,w
  2495  029E  1D03               	btfss	3,2
  2496  029F  2AA1               	goto	u2131
  2497  02A0  2AA2               	goto	u2130
  2498  02A1                     u2131:
  2499  02A1  2AB3               	goto	l208
  2500  02A2                     u2130:
  2501  02A2  2A83               	goto	l2396
  2502  02A3                     l2412:
  2503                           
  2504                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2505                           ; Switch size 1, requested type "simple"
  2506                           ; Number of cases is 1, Range of values is 0 to 0
  2507                           ; switch strategies available:
  2508                           ; Name         Instructions Cycles
  2509                           ; simple_byte            4     3 (average)
  2510                           ; direct_byte            8     6 (fixed)
  2511                           ; jumptable            260     6 (fixed)
  2512                           ;	Chosen strategy is simple_byte
  2513  02A3  0879               	movf	tact@mode+1,w
  2514  02A4  3A00               	xorlw	0	; case 0
  2515  02A5  1903               	skipnz
  2516  02A6  2AA8               	goto	l3484
  2517  02A7  2AB3               	goto	l208
  2518  02A8                     l3484:
  2519                           
  2520                           ; Switch size 1, requested type "simple"
  2521                           ; Number of cases is 3, Range of values is 0 to 2
  2522                           ; switch strategies available:
  2523                           ; Name         Instructions Cycles
  2524                           ; simple_byte           10     6 (average)
  2525                           ; direct_byte           12     6 (fixed)
  2526                           ; jumptable            260     6 (fixed)
  2527                           ;	Chosen strategy is simple_byte
  2528  02A8  0878               	movf	tact@mode,w
  2529  02A9  3A00               	xorlw	0	; case 0
  2530  02AA  1903               	skipnz
  2531  02AB  2A6A               	goto	l2386
  2532  02AC  3A01               	xorlw	1	; case 1
  2533  02AD  1903               	skipnz
  2534  02AE  2A79               	goto	l2392
  2535  02AF  3A03               	xorlw	3	; case 2
  2536  02B0  1903               	skipnz
  2537  02B1  2A88               	goto	l2398
  2538  02B2  2AB3               	goto	l208
  2539  02B3                     l208:
  2540  02B3  0008               	return
  2541  02B4                     __end_of_tact:
  2542                           
  2543                           	psect	text4
  2544  01A0                     __ptext4:	
  2545 ;; *************** function _tactsw *****************
  2546 ;; Defined at:
  2547 ;;		line 331 in file "Q4.c"
  2548 ;; Parameters:    Size  Location     Type
  2549 ;;		None
  2550 ;; Auto vars:     Size  Location     Type
  2551 ;;  a               2    6[COMMON] unsigned short 
  2552 ;;  c               2    4[COMMON] unsigned short 
  2553 ;;  b               2    2[COMMON] unsigned short 
  2554 ;; Return value:  Size  Location     Type
  2555 ;;                  1    wreg      void 
  2556 ;; Registers used:
  2557 ;;		wreg, status,2, status,0
  2558 ;; Tracked objects:
  2559 ;;		On entry : 0/0
  2560 ;;		On exit  : 0/0
  2561 ;;		Unchanged: 0/0
  2562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2564 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2565 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2566 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2567 ;;Total ram usage:        8 bytes
  2568 ;; Hardware stack levels used: 1
  2569 ;; This function calls:
  2570 ;;		Nothing
  2571 ;; This function is called by:
  2572 ;;		_tact
  2573 ;; This function uses a non-reentrant model
  2574 ;;
  2575                           
  2576                           
  2577                           ;psect for function _tactsw
  2578  01A0                     _tactsw:
  2579  01A0                     l2210:	
  2580                           ;incstack = 0
  2581                           ; Regs used in _tactsw: [wreg+status,2+status,0]
  2582                           
  2583                           
  2584                           ;Q4.c: 333:     unsigned short a,b,c;;Q4.c: 334:     b=c=0;
  2585  01A0  01F4               	clrf	tactsw@c
  2586  01A1  01F5               	clrf	tactsw@c+1
  2587  01A2  01F2               	clrf	tactsw@b
  2588  01A3  01F3               	clrf	tactsw@b+1
  2589  01A4                     l2212:
  2590                           
  2591                           ;Q4.c: 336:             a=RA2;
  2592  01A4  1003               	clrc
  2593  01A5  0020               	movlb	0	; select bank0
  2594  01A6  190C               	btfsc	12,2	;volatile
  2595  01A7  1403               	setc
  2596  01A8  3000               	movlw	0
  2597  01A9  3D09               	addwfc	9,w
  2598  01AA  00F0               	movwf	??_tactsw
  2599  01AB  01F1               	clrf	??_tactsw+1
  2600  01AC  0870               	movf	??_tactsw,w
  2601  01AD  00F6               	movwf	tactsw@a
  2602  01AE  0871               	movf	??_tactsw+1,w
  2603  01AF  00F7               	movwf	tactsw@a+1
  2604  01B0                     l2214:
  2605                           
  2606                           ;Q4.c: 337:             if(b==a)++c;
  2607  01B0  0877               	movf	tactsw@a+1,w
  2608  01B1  0673               	xorwf	tactsw@b+1,w
  2609  01B2  1D03               	skipz
  2610  01B3  29B6               	goto	u1855
  2611  01B4  0876               	movf	tactsw@a,w
  2612  01B5  0672               	xorwf	tactsw@b,w
  2613  01B6                     u1855:
  2614  01B6  1D03               	skipz
  2615  01B7  29B9               	goto	u1851
  2616  01B8  29BA               	goto	u1850
  2617  01B9                     u1851:
  2618  01B9  29BF               	goto	l2218
  2619  01BA                     u1850:
  2620  01BA                     l2216:
  2621  01BA  3001               	movlw	1
  2622  01BB  07F4               	addwf	tactsw@c,f
  2623  01BC  3000               	movlw	0
  2624  01BD  3DF5               	addwfc	tactsw@c+1,f
  2625  01BE  29C1               	goto	l2220
  2626  01BF                     l2218:
  2627  01BF  01F4               	clrf	tactsw@c
  2628  01C0  01F5               	clrf	tactsw@c+1
  2629  01C1                     l2220:
  2630                           
  2631                           ;Q4.c: 339:             if(c>10){flag_sw3=(~a)&0x01;return;}
  2632  01C1  3000               	movlw	0
  2633  01C2  0275               	subwf	tactsw@c+1,w
  2634  01C3  300B               	movlw	11
  2635  01C4  1903               	skipnz
  2636  01C5  0274               	subwf	tactsw@c,w
  2637  01C6  1C03               	skipc
  2638  01C7  29C9               	goto	u1861
  2639  01C8  29CA               	goto	u1860
  2640  01C9                     u1861:
  2641  01C9  29D7               	goto	l2226
  2642  01CA                     u1860:
  2643  01CA                     l2222:
  2644  01CA  0877               	movf	tactsw@a+1,w
  2645  01CB  00F1               	movwf	??_tactsw+1
  2646  01CC  0876               	movf	tactsw@a,w
  2647  01CD  00F0               	movwf	??_tactsw
  2648  01CE  09F0               	comf	??_tactsw,f
  2649  01CF  09F1               	comf	??_tactsw+1,f
  2650  01D0  3001               	movlw	1
  2651  01D1  0570               	andwf	??_tactsw,w
  2652  01D2  00BE               	movwf	_flag_sw3
  2653  01D3  3000               	movlw	0
  2654  01D4  0571               	andwf	??_tactsw+1,w
  2655  01D5  00BF               	movwf	_flag_sw3+1
  2656  01D6  29DC               	goto	l193
  2657  01D7                     l2226:
  2658                           
  2659                           ;Q4.c: 340:             b=a;
  2660  01D7  0877               	movf	tactsw@a+1,w
  2661  01D8  00F3               	movwf	tactsw@b+1
  2662  01D9  0876               	movf	tactsw@a,w
  2663  01DA  00F2               	movwf	tactsw@b
  2664  01DB  29A4               	goto	l2212
  2665  01DC                     l193:
  2666  01DC  0008               	return
  2667  01DD                     __end_of_tactsw:
  2668                           
  2669                           	psect	text5
  2670  0100                     __ptext5:	
  2671 ;; *************** function _fclr *****************
  2672 ;; Defined at:
  2673 ;;		line 369 in file "Q4.c"
  2674 ;; Parameters:    Size  Location     Type
  2675 ;;  flg             2    0[COMMON] unsigned short 
  2676 ;; Auto vars:     Size  Location     Type
  2677 ;;		None
  2678 ;; Return value:  Size  Location     Type
  2679 ;;                  1    wreg      void 
  2680 ;; Registers used:
  2681 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2682 ;; Tracked objects:
  2683 ;;		On entry : 0/0
  2684 ;;		On exit  : 0/0
  2685 ;;		Unchanged: 0/0
  2686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2687 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2690 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2691 ;;Total ram usage:        2 bytes
  2692 ;; Hardware stack levels used: 1
  2693 ;; This function calls:
  2694 ;;		Nothing
  2695 ;; This function is called by:
  2696 ;;		_waitSEGStop
  2697 ;;		_main
  2698 ;;		_kaisu
  2699 ;;		_motorStop
  2700 ;;		_buzzStop
  2701 ;; This function uses a non-reentrant model
  2702 ;;
  2703                           
  2704                           
  2705                           ;psect for function _fclr
  2706  0100                     _fclr:
  2707  0100                     l2418:	
  2708                           ;incstack = 0
  2709                           ; Regs used in _fclr: [wreg-fsr0h+status,2+status,0]
  2710                           
  2711                           
  2712                           ;Q4.c: 369: void fclr(unsigned short flg);Q4.c: 370: {;Q4.c: 371:     switch(flg){
  2713  0100  290F               	goto	l2428
  2714  0101                     l2420:
  2715                           
  2716                           ;Q4.c: 373:                     flag_R=0;
  2717  0101  0020               	movlb	0	; select bank0
  2718  0102  01BC               	clrf	_flag_R
  2719  0103  01BD               	clrf	_flag_R+1
  2720                           
  2721                           ;Q4.c: 374:                     break;
  2722  0104  291F               	goto	l217
  2723  0105                     l2422:
  2724                           
  2725                           ;Q4.c: 376:                     flag_P=0;
  2726  0105  0020               	movlb	0	; select bank0
  2727  0106  01BA               	clrf	_flag_P
  2728  0107  01BB               	clrf	_flag_P+1
  2729                           
  2730                           ;Q4.c: 377:                     break;
  2731  0108  291F               	goto	l217
  2732  0109                     l2424:
  2733                           
  2734                           ;Q4.c: 379:                     flag_P=flag_R=0;
  2735  0109  0020               	movlb	0	; select bank0
  2736  010A  01BC               	clrf	_flag_R
  2737  010B  01BD               	clrf	_flag_R+1
  2738  010C  01BA               	clrf	_flag_P
  2739  010D  01BB               	clrf	_flag_P+1
  2740                           
  2741                           ;Q4.c: 380:                     break;
  2742  010E  291F               	goto	l217
  2743  010F                     l2428:
  2744                           
  2745                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2746                           ; Switch size 1, requested type "simple"
  2747                           ; Number of cases is 1, Range of values is 0 to 0
  2748                           ; switch strategies available:
  2749                           ; Name         Instructions Cycles
  2750                           ; simple_byte            4     3 (average)
  2751                           ; direct_byte            8     6 (fixed)
  2752                           ; jumptable            260     6 (fixed)
  2753                           ;	Chosen strategy is simple_byte
  2754  010F  0871               	movf	fclr@flg+1,w
  2755  0110  3A00               	xorlw	0	; case 0
  2756  0111  1903               	skipnz
  2757  0112  2914               	goto	l3486
  2758  0113  291F               	goto	l217
  2759  0114                     l3486:
  2760                           
  2761                           ; Switch size 1, requested type "simple"
  2762                           ; Number of cases is 3, Range of values is 0 to 2
  2763                           ; switch strategies available:
  2764                           ; Name         Instructions Cycles
  2765                           ; simple_byte           10     6 (average)
  2766                           ; direct_byte           12     6 (fixed)
  2767                           ; jumptable            260     6 (fixed)
  2768                           ;	Chosen strategy is simple_byte
  2769  0114  0870               	movf	fclr@flg,w
  2770  0115  3A00               	xorlw	0	; case 0
  2771  0116  1903               	skipnz
  2772  0117  2901               	goto	l2420
  2773  0118  3A01               	xorlw	1	; case 1
  2774  0119  1903               	skipnz
  2775  011A  2905               	goto	l2422
  2776  011B  3A03               	xorlw	3	; case 2
  2777  011C  1903               	skipnz
  2778  011D  2909               	goto	l2424
  2779  011E  291F               	goto	l217
  2780  011F                     l217:
  2781  011F  0008               	return
  2782  0120                     __end_of_fclr:
  2783                           
  2784                           	psect	text6
  2785  00E1                     __ptext6:	
  2786 ;; *************** function ___wmul *****************
  2787 ;; Defined at:
  2788 ;;		line 15 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/Umul16.c"
  2789 ;; Parameters:    Size  Location     Type
  2790 ;;  multiplier      2    8[COMMON] unsigned int 
  2791 ;;  multiplicand    2   10[COMMON] unsigned int 
  2792 ;; Auto vars:     Size  Location     Type
  2793 ;;  product         2   12[COMMON] unsigned int 
  2794 ;; Return value:  Size  Location     Type
  2795 ;;                  2    8[COMMON] unsigned int 
  2796 ;; Registers used:
  2797 ;;		wreg, status,2, status,0
  2798 ;; Tracked objects:
  2799 ;;		On entry : 0/0
  2800 ;;		On exit  : 0/0
  2801 ;;		Unchanged: 0/0
  2802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2803 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2804 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2806 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2807 ;;Total ram usage:        6 bytes
  2808 ;; Hardware stack levels used: 1
  2809 ;; This function calls:
  2810 ;;		Nothing
  2811 ;; This function is called by:
  2812 ;;		_waitSEGStop
  2813 ;;		_main
  2814 ;;		_wait
  2815 ;;		_hen7
  2816 ;;		_hens
  2817 ;; This function uses a non-reentrant model
  2818 ;;
  2819                           
  2820                           
  2821                           ;psect for function ___wmul
  2822  00E1                     ___wmul:
  2823  00E1                     l2434:	
  2824                           ;incstack = 0
  2825                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2826                           
  2827  00E1  01FC               	clrf	___wmul@product
  2828  00E2  01FD               	clrf	___wmul@product+1
  2829  00E3                     l2436:
  2830  00E3  1C78               	btfss	___wmul@multiplier,0
  2831  00E4  28E6               	goto	u2141
  2832  00E5  28E7               	goto	u2140
  2833  00E6                     u2141:
  2834  00E6  28EB               	goto	l550
  2835  00E7                     u2140:
  2836  00E7                     l2438:
  2837  00E7  087A               	movf	___wmul@multiplicand,w
  2838  00E8  07FC               	addwf	___wmul@product,f
  2839  00E9  087B               	movf	___wmul@multiplicand+1,w
  2840  00EA  3DFD               	addwfc	___wmul@product+1,f
  2841  00EB                     l550:
  2842  00EB  3001               	movlw	1
  2843  00EC                     u2155:
  2844  00EC  35FA               	lslf	___wmul@multiplicand,f
  2845  00ED  0DFB               	rlf	___wmul@multiplicand+1,f
  2846  00EE  0B89               	decfsz	9,f
  2847  00EF  28EC               	goto	u2155
  2848  00F0                     l2440:
  2849  00F0  3001               	movlw	1
  2850  00F1                     u2165:
  2851  00F1  36F9               	lsrf	___wmul@multiplier+1,f
  2852  00F2  0CF8               	rrf	___wmul@multiplier,f
  2853  00F3  0B89               	decfsz	9,f
  2854  00F4  28F1               	goto	u2165
  2855  00F5                     l2442:
  2856  00F5  0878               	movf	___wmul@multiplier,w
  2857  00F6  0479               	iorwf	___wmul@multiplier+1,w
  2858  00F7  1D03               	btfss	3,2
  2859  00F8  28FA               	goto	u2171
  2860  00F9  28FB               	goto	u2170
  2861  00FA                     u2171:
  2862  00FA  28E3               	goto	l2436
  2863  00FB                     u2170:
  2864  00FB                     l2444:
  2865  00FB  087D               	movf	___wmul@product+1,w
  2866  00FC  00F9               	movwf	?___wmul+1
  2867  00FD  087C               	movf	___wmul@product,w
  2868  00FE  00F8               	movwf	?___wmul
  2869  00FF                     l552:
  2870  00FF  0008               	return
  2871  0100                     __end_of___wmul:
  2872                           
  2873                           	psect	text7
  2874  0164                     __ptext7:	
  2875 ;; *************** function ___lwdiv *****************
  2876 ;; Defined at:
  2877 ;;		line 5 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/lwdiv.c"
  2878 ;; Parameters:    Size  Location     Type
  2879 ;;  divisor         2    0[COMMON] unsigned int 
  2880 ;;  dividend        2    2[COMMON] unsigned int 
  2881 ;; Auto vars:     Size  Location     Type
  2882 ;;  quotient        2    5[COMMON] unsigned int 
  2883 ;;  counter         1    7[COMMON] unsigned char 
  2884 ;; Return value:  Size  Location     Type
  2885 ;;                  2    0[COMMON] unsigned int 
  2886 ;; Registers used:
  2887 ;;		wreg, status,2, status,0
  2888 ;; Tracked objects:
  2889 ;;		On entry : 0/0
  2890 ;;		On exit  : 0/0
  2891 ;;		Unchanged: 0/0
  2892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2893 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2894 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2895 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2896 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2897 ;;Total ram usage:        8 bytes
  2898 ;; Hardware stack levels used: 1
  2899 ;; This function calls:
  2900 ;;		Nothing
  2901 ;; This function is called by:
  2902 ;;		_waitSEGStop
  2903 ;;		_waitSEG
  2904 ;; This function uses a non-reentrant model
  2905 ;;
  2906                           
  2907                           
  2908                           ;psect for function ___lwdiv
  2909  0164                     ___lwdiv:
  2910  0164                     l2448:	
  2911                           ;incstack = 0
  2912                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2913                           
  2914  0164  01F5               	clrf	___lwdiv@quotient
  2915  0165  01F6               	clrf	___lwdiv@quotient+1
  2916  0166                     l2450:
  2917  0166  0870               	movf	___lwdiv@divisor,w
  2918  0167  0471               	iorwf	___lwdiv@divisor+1,w
  2919  0168  1903               	btfsc	3,2
  2920  0169  296B               	goto	u2181
  2921  016A  296C               	goto	u2180
  2922  016B                     u2181:
  2923  016B  299B               	goto	l2470
  2924  016C                     u2180:
  2925  016C                     l2452:
  2926  016C  01F7               	clrf	___lwdiv@counter
  2927  016D  0AF7               	incf	___lwdiv@counter,f
  2928  016E  2978               	goto	l2458
  2929  016F                     l2454:
  2930  016F  3001               	movlw	1
  2931  0170                     u2195:
  2932  0170  35F0               	lslf	___lwdiv@divisor,f
  2933  0171  0DF1               	rlf	___lwdiv@divisor+1,f
  2934  0172  0B89               	decfsz	9,f
  2935  0173  2970               	goto	u2195
  2936  0174                     l2456:
  2937  0174  3001               	movlw	1
  2938  0175  00F4               	movwf	??___lwdiv
  2939  0176  0874               	movf	??___lwdiv,w
  2940  0177  07F7               	addwf	___lwdiv@counter,f
  2941  0178                     l2458:
  2942  0178  1FF1               	btfss	___lwdiv@divisor+1,7
  2943  0179  297B               	goto	u2201
  2944  017A  297C               	goto	u2200
  2945  017B                     u2201:
  2946  017B  296F               	goto	l2454
  2947  017C                     u2200:
  2948  017C                     l2460:
  2949  017C  3001               	movlw	1
  2950  017D                     u2215:
  2951  017D  35F5               	lslf	___lwdiv@quotient,f
  2952  017E  0DF6               	rlf	___lwdiv@quotient+1,f
  2953  017F  0B89               	decfsz	9,f
  2954  0180  297D               	goto	u2215
  2955  0181  0871               	movf	___lwdiv@divisor+1,w
  2956  0182  0273               	subwf	___lwdiv@dividend+1,w
  2957  0183  1D03               	skipz
  2958  0184  2987               	goto	u2225
  2959  0185  0870               	movf	___lwdiv@divisor,w
  2960  0186  0272               	subwf	___lwdiv@dividend,w
  2961  0187                     u2225:
  2962  0187  1C03               	skipc
  2963  0188  298A               	goto	u2221
  2964  0189  298B               	goto	u2220
  2965  018A                     u2221:
  2966  018A  2990               	goto	l2466
  2967  018B                     u2220:
  2968  018B                     l2462:
  2969  018B  0870               	movf	___lwdiv@divisor,w
  2970  018C  02F2               	subwf	___lwdiv@dividend,f
  2971  018D  0871               	movf	___lwdiv@divisor+1,w
  2972  018E  3BF3               	subwfb	___lwdiv@dividend+1,f
  2973  018F                     l2464:
  2974  018F  1475               	bsf	___lwdiv@quotient,0
  2975  0190                     l2466:
  2976  0190  3001               	movlw	1
  2977  0191                     u2235:
  2978  0191  36F1               	lsrf	___lwdiv@divisor+1,f
  2979  0192  0CF0               	rrf	___lwdiv@divisor,f
  2980  0193  0B89               	decfsz	9,f
  2981  0194  2991               	goto	u2235
  2982  0195                     l2468:
  2983  0195  3001               	movlw	1
  2984  0196  02F7               	subwf	___lwdiv@counter,f
  2985  0197  1D03               	btfss	3,2
  2986  0198  299A               	goto	u2241
  2987  0199  299B               	goto	u2240
  2988  019A                     u2241:
  2989  019A  297C               	goto	l2460
  2990  019B                     u2240:
  2991  019B                     l2470:
  2992  019B  0876               	movf	___lwdiv@quotient+1,w
  2993  019C  00F1               	movwf	?___lwdiv+1
  2994  019D  0875               	movf	___lwdiv@quotient,w
  2995  019E  00F0               	movwf	?___lwdiv
  2996  019F                     l830:
  2997  019F  0008               	return
  2998  01A0                     __end_of___lwdiv:
  2999                           
  3000                           	psect	text8
  3001  00CE                     __ptext8:	
  3002 ;; *************** function _portinit *****************
  3003 ;; Defined at:
  3004 ;;		line 160 in file "Q4.c"
  3005 ;; Parameters:    Size  Location     Type
  3006 ;;		None
  3007 ;; Auto vars:     Size  Location     Type
  3008 ;;		None
  3009 ;; Return value:  Size  Location     Type
  3010 ;;                  1    wreg      void 
  3011 ;; Registers used:
  3012 ;;		wreg, status,2
  3013 ;; Tracked objects:
  3014 ;;		On entry : 0/0
  3015 ;;		On exit  : 0/0
  3016 ;;		Unchanged: 0/0
  3017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3022 ;;Total ram usage:        0 bytes
  3023 ;; Hardware stack levels used: 1
  3024 ;; This function calls:
  3025 ;;		Nothing
  3026 ;; This function is called by:
  3027 ;;		_main
  3028 ;; This function uses a non-reentrant model
  3029 ;;
  3030                           
  3031                           
  3032                           ;psect for function _portinit
  3033  00CE                     _portinit:
  3034  00CE                     l2474:	
  3035                           ;incstack = 0
  3036                           ; Regs used in _portinit: [wreg+status,2]
  3037                           
  3038                           
  3039                           ;Q4.c: 163:     ANSELA=0x00;
  3040  00CE  0023               	movlb	3	; select bank3
  3041  00CF  018C               	clrf	12	;volatile
  3042                           
  3043                           ;Q4.c: 164:     ANSELB=0x00;
  3044  00D0  018D               	clrf	13	;volatile
  3045  00D1                     l2476:
  3046                           
  3047                           ;Q4.c: 166:     PORTA=0x07;
  3048  00D1  3007               	movlw	7
  3049  00D2  0020               	movlb	0	; select bank0
  3050  00D3  008C               	movwf	12	;volatile
  3051  00D4                     l2478:
  3052                           
  3053                           ;Q4.c: 167:     TRISA=0x07;
  3054  00D4  3007               	movlw	7
  3055  00D5  0021               	movlb	1	; select bank1
  3056  00D6  008C               	movwf	12	;volatile
  3057                           
  3058                           ;Q4.c: 168:     PORTB=0x00;
  3059  00D7  0020               	movlb	0	; select bank0
  3060  00D8  018D               	clrf	13	;volatile
  3061                           
  3062                           ;Q4.c: 169:     TRISB=0x00;
  3063  00D9  0021               	movlb	1	; select bank1
  3064  00DA  018D               	clrf	13	;volatile
  3065  00DB                     l2480:
  3066                           
  3067                           ;Q4.c: 170:     PORTC=0x07;
  3068  00DB  3007               	movlw	7
  3069  00DC  0020               	movlb	0	; select bank0
  3070  00DD  008E               	movwf	14	;volatile
  3071  00DE                     l2482:
  3072                           
  3073                           ;Q4.c: 171:     TRISC=0x00;
  3074  00DE  0021               	movlb	1	; select bank1
  3075  00DF  018E               	clrf	14	;volatile
  3076  00E0                     l95:
  3077  00E0  0008               	return
  3078  00E1                     __end_of_portinit:
  3079                           
  3080                           	psect	text9
  3081  0140                     __ptext9:	
  3082 ;; *************** function _motor *****************
  3083 ;; Defined at:
  3084 ;;		line 513 in file "Q4.c"
  3085 ;; Parameters:    Size  Location     Type
  3086 ;;  kakudo          2    8[BANK0 ] int 
  3087 ;;  dig1data        2   10[BANK0 ] unsigned short 
  3088 ;;  dig2data        2   12[BANK0 ] unsigned short 
  3089 ;;  smdata          2   14[BANK0 ] unsigned short 
  3090 ;;  tr              2   16[BANK0 ] unsigned int 
  3091 ;; Auto vars:     Size  Location     Type
  3092 ;;  i               2   18[BANK0 ] int 
  3093 ;; Return value:  Size  Location     Type
  3094 ;;                  1    wreg      void 
  3095 ;; Registers used:
  3096 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3097 ;; Tracked objects:
  3098 ;;		On entry : 0/0
  3099 ;;		On exit  : 0/0
  3100 ;;		Unchanged: 0/0
  3101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3102 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3103 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3105 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3106 ;;Total ram usage:       12 bytes
  3107 ;; Hardware stack levels used: 1
  3108 ;; Hardware stack levels required when called: 1
  3109 ;; This function calls:
  3110 ;;		_dynam
  3111 ;; This function is called by:
  3112 ;;		_main
  3113 ;; This function uses a non-reentrant model
  3114 ;;
  3115                           
  3116                           
  3117                           ;psect for function _motor
  3118  0140                     _motor:
  3119  0140                     l2616:	
  3120                           ;incstack = 0
  3121                           ; Regs used in _motor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3122                           
  3123                           
  3124                           ;Q4.c: 515:     for(int i = kakudo;i>=0;i--){
  3125  0140  0020               	movlb	0	; select bank0
  3126  0141  084D               	movf	motor@kakudo+1,w
  3127  0142  00D7               	movwf	motor@i+1
  3128  0143  084C               	movf	motor@kakudo,w
  3129  0144  00D6               	movwf	motor@i
  3130  0145                     l2618:
  3131  0145  1FD7               	btfss	motor@i+1,7
  3132  0146  2948               	goto	u2421
  3133  0147  2949               	goto	u2420
  3134  0148                     u2421:
  3135  0148  294A               	goto	l2622
  3136  0149                     u2420:
  3137  0149  2963               	goto	l276
  3138  014A                     l2622:
  3139                           
  3140                           ;Q4.c: 516:         dynam(dig1data,dig2data,smdata,tr);
  3141  014A  084F               	movf	motor@dig1data+1,w
  3142  014B  00F1               	movwf	dynam@dig1data+1
  3143  014C  084E               	movf	motor@dig1data,w
  3144  014D  00F0               	movwf	dynam@dig1data
  3145  014E  0851               	movf	motor@dig2data+1,w
  3146  014F  00F3               	movwf	dynam@dig2data+1
  3147  0150  0850               	movf	motor@dig2data,w
  3148  0151  00F2               	movwf	dynam@dig2data
  3149  0152  0853               	movf	motor@smdata+1,w
  3150  0153  00F5               	movwf	dynam@smdata+1
  3151  0154  0852               	movf	motor@smdata,w
  3152  0155  00F4               	movwf	dynam@smdata
  3153  0156  0855               	movf	motor@tr+1,w
  3154  0157  00F7               	movwf	dynam@tr+1
  3155  0158  0854               	movf	motor@tr,w
  3156  0159  00F6               	movwf	dynam@tr
  3157  015A  3183  2391  3181   	fcall	_dynam
  3158  015D                     l2624:
  3159                           
  3160                           ;Q4.c: 517:     }
  3161  015D  30FF               	movlw	255
  3162  015E  0020               	movlb	0	; select bank0
  3163  015F  07D6               	addwf	motor@i,f
  3164  0160  30FF               	movlw	255
  3165  0161  3DD7               	addwfc	motor@i+1,f
  3166  0162  2945               	goto	l2618
  3167  0163                     l276:
  3168  0163  0008               	return
  3169  0164                     __end_of_motor:
  3170                           
  3171                           	psect	text10
  3172  0391                     __ptext10:	
  3173 ;; *************** function _dynam *****************
  3174 ;; Defined at:
  3175 ;;		line 206 in file "Q4.c"
  3176 ;; Parameters:    Size  Location     Type
  3177 ;;  dig1data        2    0[COMMON] unsigned short 
  3178 ;;  dig2data        2    2[COMMON] unsigned short 
  3179 ;;  smdata          2    4[COMMON] unsigned short 
  3180 ;;  tr              2    6[COMMON] unsigned int 
  3181 ;; Auto vars:     Size  Location     Type
  3182 ;;  ext             2    6[BANK0 ] unsigned short 
  3183 ;;  j               2    4[BANK0 ] unsigned int 
  3184 ;;  tm              2    2[BANK0 ] unsigned int 
  3185 ;;  smd             2    0[BANK0 ] unsigned short 
  3186 ;; Return value:  Size  Location     Type
  3187 ;;                  1    wreg      void 
  3188 ;; Registers used:
  3189 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3190 ;; Tracked objects:
  3191 ;;		On entry : 0/0
  3192 ;;		On exit  : 0/0
  3193 ;;		Unchanged: 0/0
  3194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3195 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3196 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3198 ;;      Totals:         8       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3199 ;;Total ram usage:       16 bytes
  3200 ;; Hardware stack levels used: 1
  3201 ;; This function calls:
  3202 ;;		Nothing
  3203 ;; This function is called by:
  3204 ;;		_waitSEGStop
  3205 ;;		_motor
  3206 ;;		_main
  3207 ;;		_clear
  3208 ;;		_waitSEG
  3209 ;;		_motorStop
  3210 ;; This function uses a non-reentrant model
  3211 ;;
  3212                           
  3213                           
  3214                           ;psect for function _dynam
  3215  0391                     _dynam:
  3216  0391                     l2228:	
  3217                           ;incstack = 0
  3218                           ; Regs used in _dynam: [wreg-fsr0h+status,2+status,0]
  3219                           
  3220  0391  0020               	movlb	0	; select bank0
  3221  0392  01C6               	clrf	dynam@tm
  3222  0393  01C7               	clrf	dynam@tm+1
  3223                           
  3224                           ;Q4.c: 209:     unsigned short ext=0,smd=0;
  3225  0394  01CA               	clrf	dynam@ext
  3226  0395  01CB               	clrf	dynam@ext+1
  3227  0396  01C4               	clrf	dynam@smd
  3228  0397  01C5               	clrf	dynam@smd+1
  3229  0398                     l2230:
  3230                           
  3231                           ;Q4.c: 210:     RC7=0;
  3232  0398  138E               	bcf	14,7	;volatile
  3233  0399                     l2232:
  3234                           
  3235                           ;Q4.c: 211:     PORTB=dig1data;
  3236  0399  0870               	movf	dynam@dig1data,w
  3237  039A  008D               	movwf	13	;volatile
  3238  039B                     l2234:
  3239                           
  3240                           ;Q4.c: 212:     RC5=0;RC6=1;
  3241  039B  128E               	bcf	14,5	;volatile
  3242  039C                     l2236:
  3243  039C  170E               	bsf	14,6	;volatile
  3244  039D                     l2238:
  3245                           
  3246                           ;Q4.c: 213:     if(tr==5){tm=3000;}
  3247  039D  3005               	movlw	5
  3248  039E  0676               	xorwf	dynam@tr,w
  3249  039F  0477               	iorwf	dynam@tr+1,w
  3250  03A0  1D03               	btfss	3,2
  3251  03A1  2BA3               	goto	u1871
  3252  03A2  2BA4               	goto	u1870
  3253  03A3                     u1871:
  3254  03A3  2BA9               	goto	l2242
  3255  03A4                     u1870:
  3256  03A4                     l2240:
  3257  03A4  30B8               	movlw	184
  3258  03A5  00C6               	movwf	dynam@tm
  3259  03A6  300B               	movlw	11
  3260  03A7  00C7               	movwf	dynam@tm+1
  3261  03A8  2BAD               	goto	l112
  3262  03A9                     l2242:
  3263  03A9  30E8               	movlw	232
  3264  03AA  00C6               	movwf	dynam@tm
  3265  03AB  3003               	movlw	3
  3266  03AC  00C7               	movwf	dynam@tm+1
  3267  03AD                     l112:
  3268                           
  3269                           ;Q4.c: 215:     for(j=tm;j>0;--j);
  3270  03AD  0847               	movf	dynam@tm+1,w
  3271  03AE  00C9               	movwf	dynam@j+1
  3272  03AF  0846               	movf	dynam@tm,w
  3273  03B0  00C8               	movwf	dynam@j
  3274  03B1                     l2244:
  3275  03B1  0848               	movf	dynam@j,w
  3276  03B2  0449               	iorwf	dynam@j+1,w
  3277  03B3  1D03               	btfss	3,2
  3278  03B4  2BB6               	goto	u1881
  3279  03B5  2BB7               	goto	u1880
  3280  03B6                     u1881:
  3281  03B6  2BB8               	goto	l2248
  3282  03B7                     u1880:
  3283  03B7  2BBD               	goto	l114
  3284  03B8                     l2248:
  3285  03B8  3001               	movlw	1
  3286  03B9  02C8               	subwf	dynam@j,f
  3287  03BA  3000               	movlw	0
  3288  03BB  3BC9               	subwfb	dynam@j+1,f
  3289  03BC  2BB1               	goto	l2244
  3290  03BD                     l114:
  3291                           
  3292                           ;Q4.c: 216:     RC5=0;RC6=0;
  3293  03BD  128E               	bcf	14,5	;volatile
  3294  03BE  130E               	bcf	14,6	;volatile
  3295  03BF                     l2252:
  3296                           
  3297                           ;Q4.c: 217:     PORTB=dig2data;
  3298  03BF  0872               	movf	dynam@dig2data,w
  3299  03C0  008D               	movwf	13	;volatile
  3300  03C1                     l2254:
  3301                           
  3302                           ;Q4.c: 218:     RC6=0;RC5=1;
  3303  03C1  130E               	bcf	14,6	;volatile
  3304  03C2                     l2256:
  3305  03C2  168E               	bsf	14,5	;volatile
  3306  03C3                     l2258:
  3307                           
  3308                           ;Q4.c: 219:     if(tr==5){tm=3000;}
  3309  03C3  3005               	movlw	5
  3310  03C4  0676               	xorwf	dynam@tr,w
  3311  03C5  0477               	iorwf	dynam@tr+1,w
  3312  03C6  1D03               	btfss	3,2
  3313  03C7  2BC9               	goto	u1891
  3314  03C8  2BCA               	goto	u1890
  3315  03C9                     u1891:
  3316  03C9  2BCF               	goto	l2262
  3317  03CA                     u1890:
  3318  03CA                     l2260:
  3319  03CA  30B8               	movlw	184
  3320  03CB  00C6               	movwf	dynam@tm
  3321  03CC  300B               	movlw	11
  3322  03CD  00C7               	movwf	dynam@tm+1
  3323  03CE  2BD3               	goto	l116
  3324  03CF                     l2262:
  3325  03CF  30E8               	movlw	232
  3326  03D0  00C6               	movwf	dynam@tm
  3327  03D1  3003               	movlw	3
  3328  03D2  00C7               	movwf	dynam@tm+1
  3329  03D3                     l116:
  3330                           
  3331                           ;Q4.c: 221:     for(j=tm;j>0;--j);
  3332  03D3  0847               	movf	dynam@tm+1,w
  3333  03D4  00C9               	movwf	dynam@j+1
  3334  03D5  0846               	movf	dynam@tm,w
  3335  03D6  00C8               	movwf	dynam@j
  3336  03D7                     l2264:
  3337  03D7  0848               	movf	dynam@j,w
  3338  03D8  0449               	iorwf	dynam@j+1,w
  3339  03D9  1D03               	btfss	3,2
  3340  03DA  2BDC               	goto	u1901
  3341  03DB  2BDD               	goto	u1900
  3342  03DC                     u1901:
  3343  03DC  2BDE               	goto	l2268
  3344  03DD                     u1900:
  3345  03DD  2BE3               	goto	l118
  3346  03DE                     l2268:
  3347  03DE  3001               	movlw	1
  3348  03DF  02C8               	subwf	dynam@j,f
  3349  03E0  3000               	movlw	0
  3350  03E1  3BC9               	subwfb	dynam@j+1,f
  3351  03E2  2BD7               	goto	l2264
  3352  03E3                     l118:
  3353                           
  3354                           ;Q4.c: 222:     RC5=0;RC6=0;
  3355  03E3  128E               	bcf	14,5	;volatile
  3356  03E4  130E               	bcf	14,6	;volatile
  3357                           
  3358                           ;Q4.c: 223:     switch(smdata){
  3359  03E5  2CEA               	goto	l2378
  3360  03E6                     l2272:
  3361                           
  3362                           ;Q4.c: 225:                 PORTB=0x00;smd=(0x01|0x02|0x04|0x08|0x10|0x20);
  3363  03E6  018D               	clrf	13	;volatile
  3364  03E7                     l2274:
  3365  03E7                     l2276:
  3366                           
  3367                           ;Q4.c: 226:                 RC7=0;RC7=1;RC7=0;
  3368  03E7  138E               	bcf	14,7	;volatile
  3369  03E8                     l2278:
  3370  03E8  178E               	bsf	14,7	;volatile
  3371  03E9                     l2280:
  3372  03E9  138E               	bcf	14,7	;volatile
  3373                           
  3374                           ;Q4.c: 227:                 break;
  3375  03EA  2CFA               	goto	l135
  3376  03EB                     l2282:
  3377                           
  3378                           ;Q4.c: 229:                 if(flg==1)cw=0;flg=0;
  3379  03EB  0338               	decf	_flg,w
  3380  03EC  0439               	iorwf	_flg+1,w
  3381  03ED  1D03               	btfss	3,2
  3382  03EE  2BF0               	goto	u1911
  3383  03EF  2BF1               	goto	u1910
  3384  03F0                     u1911:
  3385  03F0  2BF3               	goto	l123
  3386  03F1                     u1910:
  3387  03F1                     l2284:
  3388  03F1  01B6               	clrf	_cw
  3389  03F2  01B7               	clrf	_cw+1
  3390  03F3                     l123:
  3391  03F3  01B8               	clrf	_flg
  3392  03F4  01B9               	clrf	_flg+1
  3393  03F5                     l2286:
  3394                           
  3395                           ;Q4.c: 230:                 if((cw==0)&&(ext==0)){cw=1;ccw=0;ext=1;PORTB=smd=0x09;}
  3396  03F5  0836               	movf	_cw,w
  3397  03F6  0437               	iorwf	_cw+1,w
  3398  03F7  1D03               	btfss	3,2
  3399  03F8  2BFA               	goto	u1921
  3400  03F9  2BFB               	goto	u1920
  3401  03FA                     u1921:
  3402  03FA  2C11               	goto	l2298
  3403  03FB                     u1920:
  3404  03FB                     l2288:
  3405  03FB  084A               	movf	dynam@ext,w
  3406  03FC  044B               	iorwf	dynam@ext+1,w
  3407  03FD  1D03               	btfss	3,2
  3408  03FE  2C00               	goto	u1931
  3409  03FF  2C01               	goto	u1930
  3410  0400                     u1931:
  3411  0400  2C11               	goto	l2298
  3412  0401                     u1930:
  3413  0401                     l2290:
  3414  0401  3001               	movlw	1
  3415  0402  00B6               	movwf	_cw
  3416  0403  3000               	movlw	0
  3417  0404  00B7               	movwf	_cw+1
  3418  0405                     l2292:
  3419  0405  01B4               	clrf	_ccw
  3420  0406  01B5               	clrf	_ccw+1
  3421  0407                     l2294:
  3422  0407  3001               	movlw	1
  3423  0408  00CA               	movwf	dynam@ext
  3424  0409  3000               	movlw	0
  3425  040A  00CB               	movwf	dynam@ext+1
  3426  040B                     l2296:
  3427  040B  3009               	movlw	9
  3428  040C  00C4               	movwf	dynam@smd
  3429  040D  3000               	movlw	0
  3430  040E  00C5               	movwf	dynam@smd+1
  3431  040F  0844               	movf	dynam@smd,w
  3432  0410  008D               	movwf	13	;volatile
  3433  0411                     l2298:
  3434                           
  3435                           ;Q4.c: 231:                 if((cw==1)&&(ext==0)){cw=2;ccw=3;ext=1;PORTB=smd=0x0C;}
  3436  0411  0336               	decf	_cw,w
  3437  0412  0437               	iorwf	_cw+1,w
  3438  0413  1D03               	btfss	3,2
  3439  0414  2C16               	goto	u1941
  3440  0415  2C17               	goto	u1940
  3441  0416                     u1941:
  3442  0416  2C2F               	goto	l2304
  3443  0417                     u1940:
  3444  0417                     l2300:
  3445  0417  084A               	movf	dynam@ext,w
  3446  0418  044B               	iorwf	dynam@ext+1,w
  3447  0419  1D03               	btfss	3,2
  3448  041A  2C1C               	goto	u1951
  3449  041B  2C1D               	goto	u1950
  3450  041C                     u1951:
  3451  041C  2C2F               	goto	l2304
  3452  041D                     u1950:
  3453  041D                     l2302:
  3454  041D  3002               	movlw	2
  3455  041E  00B6               	movwf	_cw
  3456  041F  3000               	movlw	0
  3457  0420  00B7               	movwf	_cw+1
  3458  0421  3003               	movlw	3
  3459  0422  00B4               	movwf	_ccw
  3460  0423  3000               	movlw	0
  3461  0424  00B5               	movwf	_ccw+1
  3462  0425  3001               	movlw	1
  3463  0426  00CA               	movwf	dynam@ext
  3464  0427  3000               	movlw	0
  3465  0428  00CB               	movwf	dynam@ext+1
  3466  0429  300C               	movlw	12
  3467  042A  00C4               	movwf	dynam@smd
  3468  042B  3000               	movlw	0
  3469  042C  00C5               	movwf	dynam@smd+1
  3470  042D  0844               	movf	dynam@smd,w
  3471  042E  008D               	movwf	13	;volatile
  3472  042F                     l2304:
  3473                           
  3474                           ;Q4.c: 232:                 if((cw==2)&&(ext==0)){cw=3;ccw=2;ext=1;PORTB=smd=0x06;}
  3475  042F  3002               	movlw	2
  3476  0430  0636               	xorwf	_cw,w
  3477  0431  0437               	iorwf	_cw+1,w
  3478  0432  1D03               	btfss	3,2
  3479  0433  2C35               	goto	u1961
  3480  0434  2C36               	goto	u1960
  3481  0435                     u1961:
  3482  0435  2C4E               	goto	l2310
  3483  0436                     u1960:
  3484  0436                     l2306:
  3485  0436  084A               	movf	dynam@ext,w
  3486  0437  044B               	iorwf	dynam@ext+1,w
  3487  0438  1D03               	btfss	3,2
  3488  0439  2C3B               	goto	u1971
  3489  043A  2C3C               	goto	u1970
  3490  043B                     u1971:
  3491  043B  2C4E               	goto	l2310
  3492  043C                     u1970:
  3493  043C                     l2308:
  3494  043C  3003               	movlw	3
  3495  043D  00B6               	movwf	_cw
  3496  043E  3000               	movlw	0
  3497  043F  00B7               	movwf	_cw+1
  3498  0440  3002               	movlw	2
  3499  0441  00B4               	movwf	_ccw
  3500  0442  3000               	movlw	0
  3501  0443  00B5               	movwf	_ccw+1
  3502  0444  3001               	movlw	1
  3503  0445  00CA               	movwf	dynam@ext
  3504  0446  3000               	movlw	0
  3505  0447  00CB               	movwf	dynam@ext+1
  3506  0448  3006               	movlw	6
  3507  0449  00C4               	movwf	dynam@smd
  3508  044A  3000               	movlw	0
  3509  044B  00C5               	movwf	dynam@smd+1
  3510  044C  0844               	movf	dynam@smd,w
  3511  044D  008D               	movwf	13	;volatile
  3512  044E                     l2310:
  3513                           
  3514                           ;Q4.c: 233:                 if((cw==3)&&(ext==0)){cw=0;ccw=1;ext=1;PORTB=smd=0x03;}
  3515  044E  3003               	movlw	3
  3516  044F  0636               	xorwf	_cw,w
  3517  0450  0437               	iorwf	_cw+1,w
  3518  0451  1D03               	btfss	3,2
  3519  0452  2C54               	goto	u1981
  3520  0453  2C55               	goto	u1980
  3521  0454                     u1981:
  3522  0454  2BE7               	goto	l2276
  3523  0455                     u1980:
  3524  0455                     l2312:
  3525  0455  084A               	movf	dynam@ext,w
  3526  0456  044B               	iorwf	dynam@ext+1,w
  3527  0457  1D03               	btfss	3,2
  3528  0458  2C5A               	goto	u1991
  3529  0459  2C5B               	goto	u1990
  3530  045A                     u1991:
  3531  045A  2BE7               	goto	l2276
  3532  045B                     u1990:
  3533  045B                     l2314:
  3534  045B  01B6               	clrf	_cw
  3535  045C  01B7               	clrf	_cw+1
  3536  045D                     l2316:
  3537  045D  3001               	movlw	1
  3538  045E  00B4               	movwf	_ccw
  3539  045F  3000               	movlw	0
  3540  0460  00B5               	movwf	_ccw+1
  3541  0461                     l2318:
  3542  0461                     l2320:
  3543  0461  3003               	movlw	3
  3544  0462  00C4               	movwf	dynam@smd
  3545  0463  3000               	movlw	0
  3546  0464  00C5               	movwf	dynam@smd+1
  3547  0465  0844               	movf	dynam@smd,w
  3548  0466  008D               	movwf	13	;volatile
  3549  0467  2BE7               	goto	l2276
  3550  0468                     l2328:
  3551                           
  3552                           ;Q4.c: 237:                 if(flg==1)ccw=0;flg=0;
  3553  0468  0338               	decf	_flg,w
  3554  0469  0439               	iorwf	_flg+1,w
  3555  046A  1D03               	btfss	3,2
  3556  046B  2C6D               	goto	u2001
  3557  046C  2C6E               	goto	u2000
  3558  046D                     u2001:
  3559  046D  2C70               	goto	l129
  3560  046E                     u2000:
  3561  046E                     l2330:
  3562  046E  01B4               	clrf	_ccw
  3563  046F  01B5               	clrf	_ccw+1
  3564  0470                     l129:
  3565  0470  01B8               	clrf	_flg
  3566  0471  01B9               	clrf	_flg+1
  3567  0472                     l2332:
  3568                           
  3569                           ;Q4.c: 238:                 if((ccw==0)&&(ext==0)){ccw=1;cw=0;ext=1;PORTB=smd=0x03;}
  3570  0472  0834               	movf	_ccw,w
  3571  0473  0435               	iorwf	_ccw+1,w
  3572  0474  1D03               	btfss	3,2
  3573  0475  2C77               	goto	u2011
  3574  0476  2C78               	goto	u2010
  3575  0477                     u2011:
  3576  0477  2C8E               	goto	l2344
  3577  0478                     u2010:
  3578  0478                     l2334:
  3579  0478  084A               	movf	dynam@ext,w
  3580  0479  044B               	iorwf	dynam@ext+1,w
  3581  047A  1D03               	btfss	3,2
  3582  047B  2C7D               	goto	u2021
  3583  047C  2C7E               	goto	u2020
  3584  047D                     u2021:
  3585  047D  2C8E               	goto	l2344
  3586  047E                     u2020:
  3587  047E                     l2336:
  3588  047E  3001               	movlw	1
  3589  047F  00B4               	movwf	_ccw
  3590  0480  3000               	movlw	0
  3591  0481  00B5               	movwf	_ccw+1
  3592  0482                     l2338:
  3593  0482  01B6               	clrf	_cw
  3594  0483  01B7               	clrf	_cw+1
  3595  0484                     l2340:
  3596  0484  3001               	movlw	1
  3597  0485  00CA               	movwf	dynam@ext
  3598  0486  3000               	movlw	0
  3599  0487  00CB               	movwf	dynam@ext+1
  3600  0488                     l2342:
  3601  0488  3003               	movlw	3
  3602  0489  00C4               	movwf	dynam@smd
  3603  048A  3000               	movlw	0
  3604  048B  00C5               	movwf	dynam@smd+1
  3605  048C  0844               	movf	dynam@smd,w
  3606  048D  008D               	movwf	13	;volatile
  3607  048E                     l2344:
  3608                           
  3609                           ;Q4.c: 239:                 if((ccw==1)&&(ext==0)){ccw=2;cw=3;ext=1;PORTB=smd=0x06;}
  3610  048E  0334               	decf	_ccw,w
  3611  048F  0435               	iorwf	_ccw+1,w
  3612  0490  1D03               	btfss	3,2
  3613  0491  2C93               	goto	u2031
  3614  0492  2C94               	goto	u2030
  3615  0493                     u2031:
  3616  0493  2CAC               	goto	l2350
  3617  0494                     u2030:
  3618  0494                     l2346:
  3619  0494  084A               	movf	dynam@ext,w
  3620  0495  044B               	iorwf	dynam@ext+1,w
  3621  0496  1D03               	btfss	3,2
  3622  0497  2C99               	goto	u2041
  3623  0498  2C9A               	goto	u2040
  3624  0499                     u2041:
  3625  0499  2CAC               	goto	l2350
  3626  049A                     u2040:
  3627  049A                     l2348:
  3628  049A  3002               	movlw	2
  3629  049B  00B4               	movwf	_ccw
  3630  049C  3000               	movlw	0
  3631  049D  00B5               	movwf	_ccw+1
  3632  049E  3003               	movlw	3
  3633  049F  00B6               	movwf	_cw
  3634  04A0  3000               	movlw	0
  3635  04A1  00B7               	movwf	_cw+1
  3636  04A2  3001               	movlw	1
  3637  04A3  00CA               	movwf	dynam@ext
  3638  04A4  3000               	movlw	0
  3639  04A5  00CB               	movwf	dynam@ext+1
  3640  04A6  3006               	movlw	6
  3641  04A7  00C4               	movwf	dynam@smd
  3642  04A8  3000               	movlw	0
  3643  04A9  00C5               	movwf	dynam@smd+1
  3644  04AA  0844               	movf	dynam@smd,w
  3645  04AB  008D               	movwf	13	;volatile
  3646  04AC                     l2350:
  3647                           
  3648                           ;Q4.c: 240:                 if((ccw==2)&&(ext==0)){ccw=3;cw=2;ext=1;PORTB=smd=0x0C;}
  3649  04AC  3002               	movlw	2
  3650  04AD  0634               	xorwf	_ccw,w
  3651  04AE  0435               	iorwf	_ccw+1,w
  3652  04AF  1D03               	btfss	3,2
  3653  04B0  2CB2               	goto	u2051
  3654  04B1  2CB3               	goto	u2050
  3655  04B2                     u2051:
  3656  04B2  2CCB               	goto	l2356
  3657  04B3                     u2050:
  3658  04B3                     l2352:
  3659  04B3  084A               	movf	dynam@ext,w
  3660  04B4  044B               	iorwf	dynam@ext+1,w
  3661  04B5  1D03               	btfss	3,2
  3662  04B6  2CB8               	goto	u2061
  3663  04B7  2CB9               	goto	u2060
  3664  04B8                     u2061:
  3665  04B8  2CCB               	goto	l2356
  3666  04B9                     u2060:
  3667  04B9                     l2354:
  3668  04B9  3003               	movlw	3
  3669  04BA  00B4               	movwf	_ccw
  3670  04BB  3000               	movlw	0
  3671  04BC  00B5               	movwf	_ccw+1
  3672  04BD  3002               	movlw	2
  3673  04BE  00B6               	movwf	_cw
  3674  04BF  3000               	movlw	0
  3675  04C0  00B7               	movwf	_cw+1
  3676  04C1  3001               	movlw	1
  3677  04C2  00CA               	movwf	dynam@ext
  3678  04C3  3000               	movlw	0
  3679  04C4  00CB               	movwf	dynam@ext+1
  3680  04C5  300C               	movlw	12
  3681  04C6  00C4               	movwf	dynam@smd
  3682  04C7  3000               	movlw	0
  3683  04C8  00C5               	movwf	dynam@smd+1
  3684  04C9  0844               	movf	dynam@smd,w
  3685  04CA  008D               	movwf	13	;volatile
  3686  04CB                     l2356:
  3687                           
  3688                           ;Q4.c: 241:                 if((ccw==3)&&(ext==0)){ccw=0;cw=1;ext=1;PORTB=smd=0x09;}
  3689  04CB  3003               	movlw	3
  3690  04CC  0634               	xorwf	_ccw,w
  3691  04CD  0435               	iorwf	_ccw+1,w
  3692  04CE  1D03               	btfss	3,2
  3693  04CF  2CD1               	goto	u2071
  3694  04D0  2CD2               	goto	u2070
  3695  04D1                     u2071:
  3696  04D1  2BE7               	goto	l2276
  3697  04D2                     u2070:
  3698  04D2                     l2358:
  3699  04D2  084A               	movf	dynam@ext,w
  3700  04D3  044B               	iorwf	dynam@ext+1,w
  3701  04D4  1D03               	btfss	3,2
  3702  04D5  2CD7               	goto	u2081
  3703  04D6  2CD8               	goto	u2080
  3704  04D7                     u2081:
  3705  04D7  2BE7               	goto	l2276
  3706  04D8                     u2080:
  3707  04D8                     l2360:
  3708  04D8  01B4               	clrf	_ccw
  3709  04D9  01B5               	clrf	_ccw+1
  3710  04DA                     l2362:
  3711  04DA  3001               	movlw	1
  3712  04DB  00B6               	movwf	_cw
  3713  04DC  3000               	movlw	0
  3714  04DD  00B7               	movwf	_cw+1
  3715  04DE                     l2364:
  3716  04DE                     l2366:
  3717  04DE  3009               	movlw	9
  3718  04DF  00C4               	movwf	dynam@smd
  3719  04E0  3000               	movlw	0
  3720  04E1  00C5               	movwf	dynam@smd+1
  3721  04E2  0844               	movf	dynam@smd,w
  3722  04E3  008D               	movwf	13	;volatile
  3723  04E4  2BE7               	goto	l2276
  3724  04E5                     l2374:
  3725                           
  3726                           ;Q4.c: 245:                 cw=ccw=0;
  3727  04E5  01B4               	clrf	_ccw
  3728  04E6  01B5               	clrf	_ccw+1
  3729  04E7  01B6               	clrf	_cw
  3730  04E8  01B7               	clrf	_cw+1
  3731                           
  3732                           ;Q4.c: 246:                 break;
  3733  04E9  2CFA               	goto	l135
  3734  04EA                     l2378:
  3735                           
  3736                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3737                           ; Switch size 1, requested type "simple"
  3738                           ; Number of cases is 1, Range of values is 0 to 0
  3739                           ; switch strategies available:
  3740                           ; Name         Instructions Cycles
  3741                           ; simple_byte            4     3 (average)
  3742                           ; direct_byte            8     6 (fixed)
  3743                           ; jumptable            260     6 (fixed)
  3744                           ;	Chosen strategy is simple_byte
  3745  04EA  0875               	movf	dynam@smdata+1,w
  3746  04EB  3A00               	xorlw	0	; case 0
  3747  04EC  1903               	skipnz
  3748  04ED  2CEF               	goto	l3488
  3749  04EE  2CE5               	goto	l2374
  3750  04EF                     l3488:
  3751                           
  3752                           ; Switch size 1, requested type "simple"
  3753                           ; Number of cases is 3, Range of values is 0 to 2
  3754                           ; switch strategies available:
  3755                           ; Name         Instructions Cycles
  3756                           ; simple_byte           10     6 (average)
  3757                           ; direct_byte           12     6 (fixed)
  3758                           ; jumptable            260     6 (fixed)
  3759                           ;	Chosen strategy is simple_byte
  3760  04EF  0874               	movf	dynam@smdata,w
  3761  04F0  3A00               	xorlw	0	; case 0
  3762  04F1  1903               	skipnz
  3763  04F2  2BE6               	goto	l2272
  3764  04F3  3A01               	xorlw	1	; case 1
  3765  04F4  1903               	skipnz
  3766  04F5  2BEB               	goto	l2282
  3767  04F6  3A03               	xorlw	3	; case 2
  3768  04F7  1903               	skipnz
  3769  04F8  2C68               	goto	l2328
  3770  04F9  2CE5               	goto	l2374
  3771  04FA                     l135:
  3772  04FA  0008               	return
  3773  04FB                     __end_of_dynam:
  3774  007E                     btemp	set	126	;btemp
  3775  007E                     wtemp0	set	126
  3776                           
  3777                           	psect	config
  3778                           
  3779                           ;Config register CONFIG1 @ 0x8007
  3780                           ;	Oscillator Selection
  3781                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  3782                           ;	Watchdog Timer Enable
  3783                           ;	WDTE = OFF, WDT disabled
  3784                           ;	Power-up Timer Enable
  3785                           ;	PWRTE = OFF, PWRT disabled
  3786                           ;	MCLR Pin Function Select
  3787                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  3788                           ;	Flash Program Memory Code Protection
  3789                           ;	CP = OFF, Program memory code protection is disabled
  3790                           ;	Data Memory Code Protection
  3791                           ;	CPD = OFF, Data memory code protection is disabled
  3792                           ;	Brown-out Reset Enable
  3793                           ;	BOREN = OFF, Brown-out Reset disabled
  3794                           ;	Clock Out Enable
  3795                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  3796                           ;	Internal/External Switchover
  3797                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3798                           ;	Fail-Safe Clock Monitor Enable
  3799                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3800  8007                     	org	32775
  3801  8007  09E4               	dw	2532
  3802                           
  3803                           ;Config register CONFIG2 @ 0x8008
  3804                           ;	Flash Memory Self-Write Protection
  3805                           ;	WRT = OFF, Write protection off
  3806                           ;	Voltage Regulator Capacitor Enable
  3807                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
  3808                           ;	PLL Enable
  3809                           ;	PLLEN = OFF, 4x PLL disabled
  3810                           ;	Stack Overflow/Underflow Reset Enable
  3811                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  3812                           ;	Brown-out Reset Voltage Selection
  3813                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  3814                           ;	Low-Voltage Programming Enable
  3815                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  3816  8008                     	org	32776
  3817  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    0
    Data        180
    BSS         36
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     34      78
    BANK1            80      0      72
    BANK2            80      0      68
    BANK3            80      0      32
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___wmul
    _waitSEGStop->___wmul
    _tact->_tactsw
    ___wmul->___lwdiv
    _motor->___wmul

Critical Paths under _main in BANK0

    _main->_waitSEGStop
    _waitSEGStop->_dynam
    _motor->_dynam

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                24    24      0   19760
                                             26 BANK0      8     8      0
                             ___wmul
                              _dynam
                               _fclr
                              _motor
                           _portinit
                        _waitSEGStop
                             _zenoff
 ---------------------------------------------------------------------------------
 (1) _zenoff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _waitSEGStop                                         18    10      8    9091
                                              8 BANK0     18    10      8
                            ___lwdiv
                             ___wmul
                              _dynam
                               _fclr
                               _tact
 ---------------------------------------------------------------------------------
 (2) _tact                                                 2     0      2     746
                                              8 COMMON     2     0      2
                             _tactsw
 ---------------------------------------------------------------------------------
 (3) _tactsw                                               8     8      0     116
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 (2) _fclr                                                 2     0      2    1618
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1612
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     618
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _portinit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motor                                               12     2     10    4707
                                              8 BANK0     12     2     10
                             ___wmul (ARG)
                              _dynam
 ---------------------------------------------------------------------------------
 (2) _dynam                                               16     8      8    2271
                                              0 COMMON     8     0      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___wmul
     ___lwdiv (ARG)
   _dynam
   _fclr
   _motor
     ___wmul (ARG)
     _dynam (ARG)
   _portinit
   _waitSEGStop
     ___lwdiv
     ___wmul
     _dynam
     _fclr
     _tact
       _tactsw
   _zenoff

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     22      4E       5       97.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      48       7       90.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      44       9       85.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      20      11       40.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     108      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     108      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Jun  5 22:26:00 2021

                     l95 00E0                       _cw 0036      ___wmul@multiplicand 007A  
                    l112 03AD                      l114 03BD                      l123 03F3  
                    l116 03D3                      l108 00CD                      l118 03E3  
                    l135 04FA                      l208 02B3                      l129 0470  
                    l217 011F                      l193 01DC                      l265 0390  
                    l370 0584                      l362 0504                      l276 0163  
                    l365 0511                      l550 00EB                      l390 0748  
                    l383 0688                      l552 00FF                      l830 019F  
                    _RA0 0060                      _RA1 0061                      _RA2 0062  
                    _RC0 0070                      _RC1 0071                      _RC2 0072  
                    _RC5 0075                      _RC6 0076                      _RC7 0077  
                    _ccw 0034                      _flg 0038                      wreg 0009  
                   l2210 01A0                     l2300 0417                     l2220 01C1  
                   l2212 01A4                     l2310 044E                     l2302 041D  
                   l2230 0398                     l2222 01CA                     l2214 01B0  
                   l2320 0461                     l2312 0455                     l2304 042F  
                   l2240 03A4                     l2232 0399                     l2216 01BA  
                   l2400 028B                     l2330 046E                     l2314 045B  
                   l2306 0436                     l2242 03A9                     l2234 039B  
                   l2226 01D7                     l2218 01BF                     l2402 0292  
                   l2340 0484                     l2332 0472                     l2316 045D  
                   l2308 043C                     l2260 03CA                     l2252 03BF  
                   l2244 03B1                     l2236 039C                     l2228 0391  
                   l2420 0101                     l2404 0296                     l2412 02A3  
                   l3220 04FE                     l2350 04AC                     l2342 0488  
                   l2334 0478                     l2318 0461                     l2262 03CF  
                   l2254 03C1                     l2238 039D                     l2422 0105  
                   l2406 029C                     l2510 00CB                     l3310 06D6  
                   l3302 068D                     l3230 0504                     l3222 0504  
                   l2360 04D8                     l2352 04B3                     l2336 047E  
                   l2344 048E                     l2328 0468                     l2280 03E9  
                   l2272 03E6                     l2264 03D7                     l2256 03C2  
                   l2248 03B8                     l2440 00F0                     l2424 0109  
                   l2600 0373                     l2512 00CC                     l2504 00C5  
                   l3320 071B                     l3312 06E3                     l3304 06A9  
                   l3240 052A                     l3232 0509                     l3224 0504  
                   l2362 04DA                     l2354 04B9                     l2346 0494  
                   l2338 0482                     l2290 0401                     l2282 03EB  
                   l2274 03E7                     l2258 03C3                     l2450 0166  
                   l2442 00F5                     l2434 00E1                     l2418 0100  
                   l2602 0384                     l2506 00C9                     l3322 071F  
                   l3306 06B6                     l3314 06E8                     l3250 052F  
                   l3242 052F                     l3234 050D                     l3226 0504  
                   l3218 04FB                     l2364 04DE                     l2356 04CB  
                   l2348 049A                     l2292 0405                     l2284 03F1  
                   l2276 03E7                     l2268 03DE                     l2460 017C  
                   l2452 016C                     l2444 00FB                     l2436 00E3  
                   l2428 010F                     l2612 038E                     l2508 00CA  
                   l3324 074C                     l3316 06F0                     l3340 07B1  
                   l3308 06BB                     l3260 0552                     l3252 0534  
                   l3244 052F                     l3236 0523                     l3228 0504  
                   l2374 04E5                     l2366 04DE                     l2358 04D2  
                   l2294 0407                     l2286 03F5                     l2278 03E8  
                   l2622 014A                     l2462 018B                     l2454 016F  
                   l2470 019B                     l2438 00E7                     l2390 0274  
                   l3334 077B                     l3326 0750                     l3318 0716  
                   l3270 05A6                     l3262 056A                     l3254 0538  
                   l3246 052F                     l3238 052A                     l2296 040B  
                   l2288 03FB                     l2624 015D                     l2616 0140  
                   l2480 00DB                     l2464 018F                     l2456 0174  
                   l2448 0164                     l2392 0279                     l2384 0269  
                   l2608 0389                     l2560 0307                     l3336 079E  
                   l3328 0778                     l3280 05E3                     l3272 05B3  
                   l3264 0577                     l3256 0549                     l3248 052F  
                   l2298 0411                     l2378 04EA                     l2618 0145  
                   l2482 00DE                     l2474 00CE                     l2466 0190  
                   l2458 0178                     l2394 027C                     l2386 026A  
                   l2570 033B                     l2554 02B4                     l3338 07A3  
                   l3290 0620                     l3274 05B8                     l3282 05E8  
                   l3258 054E                     l2476 00D1                     l2468 0195  
                   l2396 0283                     l2388 026D                     l2572 0342  
                   l2564 030E                     l2556 02D6                     l3284 05F0  
                   l3292 0644                     l3276 05D4                     l3268 0589  
                   l2478 00D4                     l2398 0288                     l2590 036A  
                   l2566 0325                     l2558 0303                     l3286 0617  
                   l3278 05D6                     l3294 0656                     l2592 036E  
                   l2568 0337                     l2576 0348                     l3296 066E  
                   l3288 061C                     l2578 0359                     l2586 035E  
                   l3298 067B                     l3484 02A8                     l2588 0364  
                   l3486 0114                     l3488 04EF                     u2000 046E  
                   u2001 046D                     u2010 0478                     u2011 0477  
                   u2020 047E                     u2100 0283                     u2021 047D  
                   u2101 0282                     u2030 0494                     u2110 0292  
                   u2031 0493                     u2111 0291                     u2040 049A  
                   u2200 017C                     u2120 029C                     u2041 0499  
                   u2201 017B                     u2121 029B                     u2050 04B3  
                   u2130 02A2                     u2051 04B2                     u2131 02A1  
                   u2060 04B9                     u2220 018B                     u2140 00E7  
                   u2061 04B8                     u2221 018A                     u2141 00E6  
                   u2070 04D2                     u2310 030D                     u2071 04D1  
                   u2215 017D                     u2311 030C                     u2080 04D8  
                   u2240 019B                     u2400 0384                     u2320 0337  
                   u2081 04D7                     u2241 019A                     u2225 0187  
                   u2401 0383                     u2321 0336                     u2170 00FB  
                   u2090 0274                     u2410 0388                     u2330 033B  
                   u2235 0191                     u2171 00FA                     u2155 00EC  
                   u2091 0273                     u2411 0387                     u2331 033A  
                   u2420 0149                     u2180 016C                     u2340 0359  
                   u2421 0148                     u2181 016B                     u2165 00F1  
                   u2405 0380                     u2341 0358                     u2325 0333  
                   u2350 035D                     u2351 035C                     u2360 0364  
                   u2361 0363                     u2345 0355                     u2370 036A  
                   u2195 0170                     u2371 0369                     u1900 03DD  
                   u2380 036E                     u3500 054E                     u3420 0509  
                   u1901 03DC                     u2381 036D                     u3501 054D  
                   u3421 0508                     u1910 03F1                     u2390 0372  
                   u3510 0552                     u3430 050D                     u1911 03F0  
                   u2391 0371                     u3511 0551                     u3431 050C  
                   u1920 03FB                     u3600 06B6                     u3520 0577  
                   u3440 0511                     u1921 03FA                     u3601 06B5  
                   u3521 0576                     u3441 0510                     u1930 0401  
                   u1850 01BA                     u3610 06E3                     u3530 05B3  
                   u3450 0519                     u1931 0400                     u1851 01B9  
                   u3611 06E2                     u3531 05B2                     u3451 0516  
                   u1940 0417                     u1860 01CA                     u3620 06F0  
                   u3540 05E3                     u3460 0521                     u1941 0416  
                   u1861 01C9                     u3621 06EF                     u3605 06B2  
                   u3541 05E2                     u3525 0573                     u3461 051E  
                   u1950 041D                     u1870 03A4                     u3630 071B  
                   u3550 05F0                     u1951 041C                     u1871 03A3  
                   u1855 01B6                     u3631 071A                     u3615 06DF  
                   u3551 05EF                     u3535 05AF                     u1960 0436  
                   u1880 03B7                     u3640 071F                     u3560 061C  
                   u3480 0534                     u3464 051B                     u1961 0435  
                   u1881 03B6                     u3641 071E                     u3561 061B  
                   u3545 05DF                     u3481 0533                     u1970 043C  
                   u1890 03CA                     u3650 074C                     u3570 0620  
                   u3490 0538                     u3474 0523                     u1971 043B  
                   u1891 03C9                     u3651 074B                     u3571 061F  
                   u3491 0537                     u1980 0455                     u3660 0750  
                   u3580 0655                     u1981 0454                     u3661 074F  
                   u3581 0654                     u1990 045B                     u3670 07B0  
                   u3590 067B                     u1991 045A                     u3671 07AF  
                   u3591 067A                     u3680 07C2                     u3681 07C1  
                   u3585 0651                     u3675 07AC                     u3595 0677  
                   u3685 07BE                     u3887 057D                     u3897 0681  
                   _atai 002E                     _fclr 0100                     _main 04FB  
                   _num0 00C0                     _kisu 00D4                     _moja 0158  
                   _samf 01A0                     _mojf 014C                     _tact 0269  
                   _mojh 006A                     _moji 0120                     _mojn 0066  
                   _samp 00A0                     _gusu 00DE                     fsr0h 0005  
                   fsr1h 0007                     indf0 0000                     fsr0l 0004  
                   fsr1l 0006                     btemp 007E                     start 0002  
                  ?_fclr 0070                    ?_main 0070                    ?_tact 0078  
        __end_of___lwdiv 01A0                    _PORTA 000C                    _PORTB 000D  
                  _PORTC 000E                    _TRISA 008C                    _TRISB 008D  
                  _TRISC 008E                    _code1 0024                    _atai1 0030  
                  _count 002C                    _dynam 0391                    _fugou 0022  
                  _motor 0140                    main@i 0064                    main@j 0062  
                  status 0003                    wtemp0 007E          __initialization 07C5  
           __end_of_fclr 0120             __end_of_main 07C5             __end_of_tact 02B4  
                 ??_fclr 0072                   ??_main 005E                   ??_tact 007A  
                 ?_dynam 0070                   ?_motor 004C             ?_waitSEGStop 004C  
                 _ANSELA 018C                   _ANSELB 018D                   _OSCCON 0099  
            dynam@smdata 0074          waitSEGStop@seg1 004C          waitSEGStop@seg2 004E  
                 ___wmul 00E1                   _code10 0026                   _atai10 0032  
                 _flag_P 003A                   _flag_R 003C                ??___lwdiv 0074  
                 _tactsw 01A0                   _zenoff 00C5                   dynam@j 0048  
                 motor@i 0056         __end_of_portinit 00E1  __end_of__initialization 07FD  
         __pcstackCOMMON 0070             __pidataBANK0 00BD             __pidataBANK1 0221  
           __pidataBANK2 01DD             __pidataBANK3 0120            __end_of_dynam 04FB  
          __end_of_motor 0164                  ??_dynam 0078                  ??_motor 007E  
             __pbssBANK0 0020               _gegiHidari 0134               __pmaintext 04FB  
                ?___wmul 0078                  ?_tactsw 0070                  ?_zenoff 0070  
   __size_of_waitSEGStop 00DD         waitSEGStop@cpSW1 0056         waitSEGStop@cpSW2 0058  
       waitSEGStop@cpSW3 005A         waitSEGStop@dousa 0052          __size_of___wmul 001F  
              ?_portinit 0070                  ___lwdiv 0164                  _code100 0028  
        __size_of_tactsw 003D                  __ptext1 00C5                  __ptext2 02B4  
                __ptext3 0269                  __ptext4 01A0                  __ptext5 0100  
                __ptext6 00E1                  __ptext7 0164                  __ptext8 00CE  
                __ptext9 0140          __size_of_zenoff 0009                  fclr@flg 0070  
                main@ans 0060              motor@kakudo 004C                  clrloop0 00B2  
   end_of_initialization 07FD              motor@smdata 0052                  dynam@tm 0046  
                dynam@tr 0076                  init_ram 00B7                  _zyoutai 0020  
                initloop 00B8                  tactsw@a 0076                  tactsw@b 0072  
                tactsw@c 0074                  motor@tr 0054               ??_portinit 0070  
         __end_of___wmul 0100            waitSEGStop@wt 0050           __end_of_tactsw 01DD  
         __end_of_zenoff 00CE      start_initialization 07C5                 ??___wmul 007C  
            __pdataBANK0 0066              __pdataBANK1 00A0              __pdataBANK2 0120  
            __pdataBANK3 01A0                 ??_tactsw 0070                 ??_zenoff 0070  
              ___latbits 0003            __pcstackBANK0 0044         ___lwdiv@dividend 0072  
               ?___lwdiv 0070        __size_of_portinit 0013         ___lwdiv@quotient 0075  
          ??_waitSEGStop 0054           __size_of_dynam 016A           __size_of_motor 0024  
          dynam@dig1data 0070            dynam@dig2data 0072           ___wmul@product 007C  
              clear_ram0 00B1            motor@dig1data 004E            motor@dig2data 0050  
      ___wmul@multiplier 0078             waitSEGStop@i 005C      __end_of_waitSEGStop 0391  
       __size_of___lwdiv 003C                 _code1000 002A                 _gegiMigi 0140  
        ___lwdiv@divisor 0070          ___lwdiv@counter 0077                 __ptext10 0391  
               _flag_sw1 0042                 _flag_sw2 0040                 _flag_sw3 003E  
          __size_of_fclr 0020            __size_of_main 02CA            __size_of_tact 004B  
               _portinit 00CE                 dynam@ext 004A                 dynam@smd 0044  
               tact@mode 0078              _waitSEGStop 02B4  
