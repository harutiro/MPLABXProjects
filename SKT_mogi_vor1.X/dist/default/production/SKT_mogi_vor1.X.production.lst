

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Jun 05 12:30:38 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F1938
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    12                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.20
    32                           ; Generated 12/02/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F1938 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0016                     	;# 
    87  0017                     	;# 
    88  0018                     	;# 
    89  0019                     	;# 
    90  001A                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  010C                     	;# 
   114  010D                     	;# 
   115  010E                     	;# 
   116  0110                     	;# 
   117  0111                     	;# 
   118  0112                     	;# 
   119  0113                     	;# 
   120  0114                     	;# 
   121  0115                     	;# 
   122  0116                     	;# 
   123  0117                     	;# 
   124  0118                     	;# 
   125  0119                     	;# 
   126  011A                     	;# 
   127  011B                     	;# 
   128  011D                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0191                     	;# 
   132  0191                     	;# 
   133  0192                     	;# 
   134  0193                     	;# 
   135  0193                     	;# 
   136  0193                     	;# 
   137  0194                     	;# 
   138  0195                     	;# 
   139  0196                     	;# 
   140  0199                     	;# 
   141  019A                     	;# 
   142  019B                     	;# 
   143  019B                     	;# 
   144  019B                     	;# 
   145  019B                     	;# 
   146  019C                     	;# 
   147  019C                     	;# 
   148  019D                     	;# 
   149  019E                     	;# 
   150  019F                     	;# 
   151  020D                     	;# 
   152  0210                     	;# 
   153  0211                     	;# 
   154  0212                     	;# 
   155  0213                     	;# 
   156  0214                     	;# 
   157  0215                     	;# 
   158  0215                     	;# 
   159  0216                     	;# 
   160  0217                     	;# 
   161  0291                     	;# 
   162  0291                     	;# 
   163  0292                     	;# 
   164  0293                     	;# 
   165  0294                     	;# 
   166  0295                     	;# 
   167  0295                     	;# 
   168  0296                     	;# 
   169  0298                     	;# 
   170  0298                     	;# 
   171  0299                     	;# 
   172  029A                     	;# 
   173  029B                     	;# 
   174  029C                     	;# 
   175  029C                     	;# 
   176  029D                     	;# 
   177  029E                     	;# 
   178  029F                     	;# 
   179  0311                     	;# 
   180  0311                     	;# 
   181  0312                     	;# 
   182  0313                     	;# 
   183  0314                     	;# 
   184  0315                     	;# 
   185  0315                     	;# 
   186  0316                     	;# 
   187  0318                     	;# 
   188  0318                     	;# 
   189  0319                     	;# 
   190  031A                     	;# 
   191  031C                     	;# 
   192  031C                     	;# 
   193  031D                     	;# 
   194  031E                     	;# 
   195  0394                     	;# 
   196  0395                     	;# 
   197  0396                     	;# 
   198  0415                     	;# 
   199  0416                     	;# 
   200  0417                     	;# 
   201  041C                     	;# 
   202  041D                     	;# 
   203  041E                     	;# 
   204  0791                     	;# 
   205  0792                     	;# 
   206  0793                     	;# 
   207  0794                     	;# 
   208  0795                     	;# 
   209  0798                     	;# 
   210  0799                     	;# 
   211  07A0                     	;# 
   212  07A1                     	;# 
   213  07A3                     	;# 
   214  07A4                     	;# 
   215  07A6                     	;# 
   216  07A7                     	;# 
   217  07A9                     	;# 
   218  07AA                     	;# 
   219  0FE4                     	;# 
   220  0FE5                     	;# 
   221  0FE6                     	;# 
   222  0FE7                     	;# 
   223  0FE8                     	;# 
   224  0FE9                     	;# 
   225  0FEA                     	;# 
   226  0FEB                     	;# 
   227  0FED                     	;# 
   228  0FEE                     	;# 
   229  0FEF                     	;# 
   230  0000                     	;# 
   231  0001                     	;# 
   232  0002                     	;# 
   233  0003                     	;# 
   234  0004                     	;# 
   235  0005                     	;# 
   236  0006                     	;# 
   237  0007                     	;# 
   238  0008                     	;# 
   239  0009                     	;# 
   240  000A                     	;# 
   241  000B                     	;# 
   242  000C                     	;# 
   243  000D                     	;# 
   244  000E                     	;# 
   245  0010                     	;# 
   246  0011                     	;# 
   247  0012                     	;# 
   248  0013                     	;# 
   249  0015                     	;# 
   250  0016                     	;# 
   251  0016                     	;# 
   252  0017                     	;# 
   253  0018                     	;# 
   254  0019                     	;# 
   255  001A                     	;# 
   256  001B                     	;# 
   257  001C                     	;# 
   258  001E                     	;# 
   259  001F                     	;# 
   260  008C                     	;# 
   261  008D                     	;# 
   262  008E                     	;# 
   263  0090                     	;# 
   264  0091                     	;# 
   265  0092                     	;# 
   266  0093                     	;# 
   267  0095                     	;# 
   268  0096                     	;# 
   269  0097                     	;# 
   270  0098                     	;# 
   271  0099                     	;# 
   272  009A                     	;# 
   273  009B                     	;# 
   274  009B                     	;# 
   275  009C                     	;# 
   276  009D                     	;# 
   277  009E                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  0110                     	;# 
   282  0111                     	;# 
   283  0112                     	;# 
   284  0113                     	;# 
   285  0114                     	;# 
   286  0115                     	;# 
   287  0116                     	;# 
   288  0117                     	;# 
   289  0118                     	;# 
   290  0119                     	;# 
   291  011A                     	;# 
   292  011B                     	;# 
   293  011D                     	;# 
   294  018C                     	;# 
   295  018D                     	;# 
   296  0191                     	;# 
   297  0191                     	;# 
   298  0192                     	;# 
   299  0193                     	;# 
   300  0193                     	;# 
   301  0193                     	;# 
   302  0194                     	;# 
   303  0195                     	;# 
   304  0196                     	;# 
   305  0199                     	;# 
   306  019A                     	;# 
   307  019B                     	;# 
   308  019B                     	;# 
   309  019B                     	;# 
   310  019B                     	;# 
   311  019C                     	;# 
   312  019C                     	;# 
   313  019D                     	;# 
   314  019E                     	;# 
   315  019F                     	;# 
   316  020D                     	;# 
   317  0210                     	;# 
   318  0211                     	;# 
   319  0212                     	;# 
   320  0213                     	;# 
   321  0214                     	;# 
   322  0215                     	;# 
   323  0215                     	;# 
   324  0216                     	;# 
   325  0217                     	;# 
   326  0291                     	;# 
   327  0291                     	;# 
   328  0292                     	;# 
   329  0293                     	;# 
   330  0294                     	;# 
   331  0295                     	;# 
   332  0295                     	;# 
   333  0296                     	;# 
   334  0298                     	;# 
   335  0298                     	;# 
   336  0299                     	;# 
   337  029A                     	;# 
   338  029B                     	;# 
   339  029C                     	;# 
   340  029C                     	;# 
   341  029D                     	;# 
   342  029E                     	;# 
   343  029F                     	;# 
   344  0311                     	;# 
   345  0311                     	;# 
   346  0312                     	;# 
   347  0313                     	;# 
   348  0314                     	;# 
   349  0315                     	;# 
   350  0315                     	;# 
   351  0316                     	;# 
   352  0318                     	;# 
   353  0318                     	;# 
   354  0319                     	;# 
   355  031A                     	;# 
   356  031C                     	;# 
   357  031C                     	;# 
   358  031D                     	;# 
   359  031E                     	;# 
   360  0394                     	;# 
   361  0395                     	;# 
   362  0396                     	;# 
   363  0415                     	;# 
   364  0416                     	;# 
   365  0417                     	;# 
   366  041C                     	;# 
   367  041D                     	;# 
   368  041E                     	;# 
   369  0791                     	;# 
   370  0792                     	;# 
   371  0793                     	;# 
   372  0794                     	;# 
   373  0795                     	;# 
   374  0798                     	;# 
   375  0799                     	;# 
   376  07A0                     	;# 
   377  07A1                     	;# 
   378  07A3                     	;# 
   379  07A4                     	;# 
   380  07A6                     	;# 
   381  07A7                     	;# 
   382  07A9                     	;# 
   383  07AA                     	;# 
   384  0FE4                     	;# 
   385  0FE5                     	;# 
   386  0FE6                     	;# 
   387  0FE7                     	;# 
   388  0FE8                     	;# 
   389  0FE9                     	;# 
   390  0FEA                     	;# 
   391  0FEB                     	;# 
   392  0FED                     	;# 
   393  0FEE                     	;# 
   394  0FEF                     	;# 
   395                           
   396                           	psect	idataBANK1
   397  01DA                     __pidataBANK1:
   398                           
   399                           ;initializer for _samp
   400  01DA  343F               	retlw	63
   401  01DB  3400               	retlw	0
   402  01DC  3406               	retlw	6
   403  01DD  3400               	retlw	0
   404  01DE  345B               	retlw	91
   405  01DF  3400               	retlw	0
   406  01E0  344F               	retlw	79
   407  01E1  3400               	retlw	0
   408  01E2  3466               	retlw	102
   409  01E3  3400               	retlw	0
   410  01E4  346D               	retlw	109
   411  01E5  3400               	retlw	0
   412  01E6  347D               	retlw	125
   413  01E7  3400               	retlw	0
   414  01E8  3427               	retlw	39
   415  01E9  3400               	retlw	0
   416  01EA  347F               	retlw	127
   417  01EB  3400               	retlw	0
   418  01EC  346F               	retlw	111
   419  01ED  3400               	retlw	0
   420  01EE  345F               	retlw	95
   421  01EF  3400               	retlw	0
   422  01F0  347C               	retlw	124
   423  01F1  3400               	retlw	0
   424  01F2  3458               	retlw	88
   425  01F3  3400               	retlw	0
   426  01F4  345E               	retlw	94
   427  01F5  3400               	retlw	0
   428  01F6  3479               	retlw	121
   429  01F7  3400               	retlw	0
   430  01F8  3471               	retlw	113
   431  01F9  3400               	retlw	0
   432                           
   433                           ;initializer for _num0
   434  01FA  343F               	retlw	63
   435  01FB  3400               	retlw	0
   436  01FC  3406               	retlw	6
   437  01FD  3400               	retlw	0
   438  01FE  345B               	retlw	91
   439  01FF  3400               	retlw	0
   440  0200  344F               	retlw	79
   441  0201  3400               	retlw	0
   442  0202  3466               	retlw	102
   443  0203  3400               	retlw	0
   444  0204  346D               	retlw	109
   445  0205  3400               	retlw	0
   446  0206  347D               	retlw	125
   447  0207  3400               	retlw	0
   448  0208  3427               	retlw	39
   449  0209  3400               	retlw	0
   450  020A  347F               	retlw	127
   451  020B  3400               	retlw	0
   452  020C  346F               	retlw	111
   453  020D  3400               	retlw	0
   454                           
   455                           ;initializer for _gusu
   456  020E  343F               	retlw	63
   457  020F  3400               	retlw	0
   458  0210  345B               	retlw	91
   459  0211  3400               	retlw	0
   460  0212  3466               	retlw	102
   461  0213  3400               	retlw	0
   462  0214  347D               	retlw	125
   463  0215  3400               	retlw	0
   464  0216  347F               	retlw	127
   465  0217  3400               	retlw	0
   466                           
   467                           ;initializer for _mojn
   468  0218  3454               	retlw	84
   469  0219  3400               	retlw	0
   470  021A  3473               	retlw	115
   471  021B  3400               	retlw	0
   472                           
   473                           ;initializer for _mojh
   474  021C  3476               	retlw	118
   475  021D  3400               	retlw	0
   476  021E  3438               	retlw	56
   477  021F  3400               	retlw	0
   478                           
   479                           	psect	idataBANK2
   480  026B                     __pidataBANK2:
   481                           
   482                           ;initializer for _moji
   483  026B  345F               	retlw	95
   484  026C  3400               	retlw	0
   485  026D  347C               	retlw	124
   486  026E  3400               	retlw	0
   487  026F  3458               	retlw	88
   488  0270  3400               	retlw	0
   489  0271  345E               	retlw	94
   490  0272  3400               	retlw	0
   491  0273  3479               	retlw	121
   492  0274  3400               	retlw	0
   493  0275  3471               	retlw	113
   494  0276  3400               	retlw	0
   495  0277  3476               	retlw	118
   496  0278  3400               	retlw	0
   497  0279  3438               	retlw	56
   498  027A  3400               	retlw	0
   499  027B  3454               	retlw	84
   500  027C  3400               	retlw	0
   501  027D  3473               	retlw	115
   502  027E  3400               	retlw	0
   503                           
   504                           ;initializer for _gegiHidari
   505  027F  3400               	retlw	0
   506  0280  3400               	retlw	0
   507  0281  3400               	retlw	0
   508  0282  3400               	retlw	0
   509  0283  3400               	retlw	0
   510  0284  3400               	retlw	0
   511  0285  3408               	retlw	8
   512  0286  3400               	retlw	0
   513  0287  3438               	retlw	56
   514  0288  3400               	retlw	0
   515  0289  3478               	retlw	120
   516  028A  3400               	retlw	0
   517                           
   518                           ;initializer for _gegiMigi
   519  028B  3401               	retlw	1
   520  028C  3400               	retlw	0
   521  028D  3407               	retlw	7
   522  028E  3400               	retlw	0
   523  028F  340F               	retlw	15
   524  0290  3400               	retlw	0
   525  0291  340F               	retlw	15
   526  0292  3400               	retlw	0
   527  0293  340F               	retlw	15
   528  0294  3400               	retlw	0
   529  0295  340F               	retlw	15
   530  0296  3400               	retlw	0
   531                           
   532                           ;initializer for _mojf
   533  0297  3471               	retlw	113
   534  0298  3400               	retlw	0
   535  0299  3479               	retlw	121
   536  029A  3400               	retlw	0
   537  029B  345E               	retlw	94
   538  029C  3400               	retlw	0
   539  029D  3458               	retlw	88
   540  029E  3400               	retlw	0
   541  029F  347C               	retlw	124
   542  02A0  3400               	retlw	0
   543  02A1  345F               	retlw	95
   544  02A2  3400               	retlw	0
   545                           
   546                           ;initializer for _moja
   547  02A3  345F               	retlw	95
   548  02A4  3400               	retlw	0
   549  02A5  347C               	retlw	124
   550  02A6  3400               	retlw	0
   551  02A7  3458               	retlw	88
   552  02A8  3400               	retlw	0
   553  02A9  345E               	retlw	94
   554  02AA  3400               	retlw	0
   555  02AB  3479               	retlw	121
   556  02AC  3400               	retlw	0
   557  02AD  3471               	retlw	113
   558  02AE  3400               	retlw	0
   559                           
   560                           ;initializer for _kisu
   561  02AF  3406               	retlw	6
   562  02B0  3400               	retlw	0
   563  02B1  344F               	retlw	79
   564  02B2  3400               	retlw	0
   565  02B3  346D               	retlw	109
   566  02B4  3400               	retlw	0
   567  02B5  3427               	retlw	39
   568  02B6  3400               	retlw	0
   569  02B7  346F               	retlw	111
   570  02B8  3400               	retlw	0
   571                           
   572                           	psect	idataBANK3
   573  011D                     __pidataBANK3:
   574                           
   575                           ;initializer for _samf
   576  011D  3471               	retlw	113
   577  011E  3400               	retlw	0
   578  011F  3479               	retlw	121
   579  0120  3400               	retlw	0
   580  0121  345E               	retlw	94
   581  0122  3400               	retlw	0
   582  0123  3458               	retlw	88
   583  0124  3400               	retlw	0
   584  0125  347C               	retlw	124
   585  0126  3400               	retlw	0
   586  0127  345F               	retlw	95
   587  0128  3400               	retlw	0
   588  0129  346F               	retlw	111
   589  012A  3400               	retlw	0
   590  012B  347F               	retlw	127
   591  012C  3400               	retlw	0
   592  012D  3427               	retlw	39
   593  012E  3400               	retlw	0
   594  012F  347D               	retlw	125
   595  0130  3400               	retlw	0
   596  0131  346D               	retlw	109
   597  0132  3400               	retlw	0
   598  0133  3466               	retlw	102
   599  0134  3400               	retlw	0
   600  0135  344F               	retlw	79
   601  0136  3400               	retlw	0
   602  0137  345B               	retlw	91
   603  0138  3400               	retlw	0
   604  0139  3406               	retlw	6
   605  013A  3400               	retlw	0
   606  013B  343F               	retlw	63
   607  013C  3400               	retlw	0
   608  000E                     _PORTC	set	14
   609  000D                     _PORTB	set	13
   610  000C                     _PORTA	set	12
   611  0061                     _RA1	set	97
   612  0060                     _RA0	set	96
   613  0062                     _RA2	set	98
   614  0077                     _RC7	set	119
   615  0070                     _RC0	set	112
   616  0071                     _RC1	set	113
   617  0072                     _RC2	set	114
   618  0076                     _RC6	set	118
   619  0075                     _RC5	set	117
   620  0099                     _OSCCON	set	153
   621  008E                     _TRISC	set	142
   622  008D                     _TRISB	set	141
   623  008C                     _TRISA	set	140
   624  018D                     _ANSELB	set	397
   625  018C                     _ANSELA	set	396
   626                           
   627                           	psect	cinit
   628  07CA                     start_initialization:	
   629                           ; #config settings
   630                           
   631  07CA                     __initialization:
   632                           
   633                           ; Initialize objects allocated to BANK1
   634  07CA  30DA               	movlw	low __pidataBANK1
   635  07CB  0084               	movwf	4
   636  07CC  3081               	movlw	(high __pidataBANK1)| (0+128)
   637  07CD  0085               	movwf	5
   638  07CE  30A0               	movlw	low __pdataBANK1
   639  07CF  0086               	movwf	6
   640  07D0  3000               	movlw	high __pdataBANK1
   641  07D1  0087               	movwf	7
   642  07D2  3046               	movlw	70
   643  07D3  3180  20BC  3187   	fcall	init_ram
   644                           
   645                           ; Initialize objects allocated to BANK2
   646  07D6  306B               	movlw	low __pidataBANK2
   647  07D7  0084               	movwf	4
   648  07D8  3082               	movlw	(high __pidataBANK2)| (0+128)
   649  07D9  0085               	movwf	5
   650  07DA  3020               	movlw	low __pdataBANK2
   651  07DB  0086               	movwf	6
   652  07DC  3001               	movlw	high __pdataBANK2
   653  07DD  0087               	movwf	7
   654  07DE  304E               	movlw	78
   655  07DF  3180  20BC  3187   	fcall	init_ram
   656                           
   657                           ; Initialize objects allocated to BANK3
   658  07E2  301D               	movlw	low __pidataBANK3
   659  07E3  0084               	movwf	4
   660  07E4  3081               	movlw	(high __pidataBANK3)| (0+128)
   661  07E5  0085               	movwf	5
   662  07E6  30A0               	movlw	low __pdataBANK3
   663  07E7  0086               	movwf	6
   664  07E8  3001               	movlw	high __pdataBANK3
   665  07E9  0087               	movwf	7
   666  07EA  3020               	movlw	32
   667  07EB  3180  20BC  3187   	fcall	init_ram
   668                           
   669                           ; Clear objects allocated to BANK0
   670  07EE  3052               	movlw	low __pbssBANK0
   671  07EF  0084               	movwf	4
   672  07F0  3000               	movlw	high __pbssBANK0
   673  07F1  0085               	movwf	5
   674  07F2  301E               	movlw	30
   675  07F3  3180  20B6  3187   	fcall	clear_ram0
   676                           
   677                           ; Clear objects allocated to BANK1
   678  07F6  0021               	movlb	1	; select bank1
   679  07F7  01E6               	clrf	__pbssBANK1& (0+127)
   680  07F8  01E7               	clrf	(__pbssBANK1+1)& (0+127)
   681  07F9  01E8               	clrf	(__pbssBANK1+2)& (0+127)
   682  07FA  01E9               	clrf	(__pbssBANK1+3)& (0+127)
   683  07FB  01EA               	clrf	(__pbssBANK1+4)& (0+127)
   684  07FC  01EB               	clrf	(__pbssBANK1+5)& (0+127)
   685  07FD                     end_of_initialization:	
   686                           ;End of C runtime variable initialization code
   687                           
   688  07FD                     __end_of__initialization:
   689  07FD  0020               	movlb	0
   690  07FE  3185  2D00         	ljmp	_main	;jump to C main() function
   691                           
   692                           	psect	bssBANK0
   693  0052                     __pbssBANK0:
   694  0052                     _zyoutai:
   695  0052                     	ds	2
   696  0054                     _fugou:
   697  0054                     	ds	2
   698  0056                     _code1000:
   699  0056                     	ds	2
   700  0058                     _count:
   701  0058                     	ds	2
   702  005A                     _atai:
   703  005A                     	ds	2
   704  005C                     _atai1:
   705  005C                     	ds	2
   706  005E                     _atai10:
   707  005E                     	ds	2
   708  0060                     _ccw:
   709  0060                     	ds	2
   710  0062                     _cw:
   711  0062                     	ds	2
   712  0064                     _flg:
   713  0064                     	ds	2
   714  0066                     _flag_P:
   715  0066                     	ds	2
   716  0068                     _flag_R:
   717  0068                     	ds	2
   718  006A                     _flag_sw3:
   719  006A                     	ds	2
   720  006C                     _flag_sw2:
   721  006C                     	ds	2
   722  006E                     _flag_sw1:
   723  006E                     	ds	2
   724                           
   725                           	psect	bssBANK1
   726  00E6                     __pbssBANK1:
   727  00E6                     _code1:
   728  00E6                     	ds	2
   729  00E8                     _code10:
   730  00E8                     	ds	2
   731  00EA                     _code100:
   732  00EA                     	ds	2
   733                           
   734                           	psect	dataBANK1
   735  00A0                     __pdataBANK1:
   736  00A0                     _samp:
   737  00A0                     	ds	32
   738  00C0                     _num0:
   739  00C0                     	ds	20
   740  00D4                     _gusu:
   741  00D4                     	ds	10
   742  00DE                     _mojn:
   743  00DE                     	ds	4
   744  00E2                     _mojh:
   745  00E2                     	ds	4
   746                           
   747                           	psect	dataBANK2
   748  0120                     __pdataBANK2:
   749  0120                     _moji:
   750  0120                     	ds	20
   751  0134                     _gegiHidari:
   752  0134                     	ds	12
   753  0140                     _gegiMigi:
   754  0140                     	ds	12
   755  014C                     _mojf:
   756  014C                     	ds	12
   757  0158                     _moja:
   758  0158                     	ds	12
   759  0164                     _kisu:
   760  0164                     	ds	10
   761                           
   762                           	psect	dataBANK3
   763  01A0                     __pdataBANK3:
   764  01A0                     _samf:
   765  01A0                     	ds	32
   766                           
   767                           	psect	inittext
   768  00BC                     init_ram:
   769  00BC  00FE               	movwf	btemp
   770  00BD                     initloop:
   771  00BD  0012               	moviw fsr0++
   772  00BE  001E               	movwi fsr1++
   773  00BF  0BFE               	decfsz	btemp,f
   774  00C0  28BD               	goto	initloop
   775  00C1  3400               	retlw	0
   776                           
   777                           	psect	clrtext
   778  00B6                     clear_ram0:	
   779                           ;	Called with FSR0 containing the base address, and
   780                           ;	WREG with the size to clear
   781                           
   782  00B6  0064               	clrwdt	;clear the watchdog before getting into this loop
   783  00B7                     clrloop0:
   784  00B7  0180               	clrf	0	;clear RAM location pointed to by FSR
   785  00B8  3101               	addfsr 0,1
   786  00B9  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   787  00BA  28B7               	goto	clrloop0	;have we reached the end yet?
   788  00BB  3400               	retlw	0	;all done for this memory range, return
   789                           
   790                           	psect	cstackCOMMON
   791  0070                     __pcstackCOMMON:
   792  0070                     ?_portinit:
   793  0070                     ??_portinit:	
   794                           ; 1 bytes @ 0x0
   795                           
   796  0070                     ?_zenoff:	
   797                           ; 1 bytes @ 0x0
   798                           
   799  0070                     ??_zenoff:	
   800                           ; 1 bytes @ 0x0
   801                           
   802  0070                     ?_dynam:	
   803                           ; 1 bytes @ 0x0
   804                           
   805  0070                     ?_tactsw:	
   806                           ; 1 bytes @ 0x0
   807                           
   808  0070                     ??_tactsw:	
   809                           ; 1 bytes @ 0x0
   810                           
   811  0070                     ?_fclr:	
   812                           ; 1 bytes @ 0x0
   813                           
   814  0070                     ?_main:	
   815                           ; 1 bytes @ 0x0
   816                           
   817  0070                     ?___lwdiv:	
   818                           ; 1 bytes @ 0x0
   819                           
   820  0070                     dynam@dig1data:	
   821                           ; 2 bytes @ 0x0
   822                           
   823  0070                     fclr@flg:	
   824                           ; 2 bytes @ 0x0
   825                           
   826  0070                     ___lwdiv@divisor:	
   827                           ; 2 bytes @ 0x0
   828                           
   829                           
   830                           ; 2 bytes @ 0x0
   831  0070                     	ds	2
   832  0072                     ??_fclr:
   833  0072                     dynam@dig2data:	
   834                           ; 1 bytes @ 0x2
   835                           
   836  0072                     tactsw@b:	
   837                           ; 2 bytes @ 0x2
   838                           
   839  0072                     ___lwdiv@dividend:	
   840                           ; 2 bytes @ 0x2
   841                           
   842                           
   843                           ; 2 bytes @ 0x2
   844  0072                     	ds	2
   845  0074                     ??___lwdiv:
   846  0074                     dynam@smdata:	
   847                           ; 1 bytes @ 0x4
   848                           
   849  0074                     tactsw@c:	
   850                           ; 2 bytes @ 0x4
   851                           
   852                           
   853                           ; 2 bytes @ 0x4
   854  0074                     	ds	1
   855  0075                     ___lwdiv@quotient:
   856                           
   857                           ; 2 bytes @ 0x5
   858  0075                     	ds	1
   859  0076                     dynam@tr:
   860  0076                     tactsw@a:	
   861                           ; 2 bytes @ 0x6
   862                           
   863                           
   864                           ; 2 bytes @ 0x6
   865  0076                     	ds	1
   866  0077                     ___lwdiv@counter:
   867                           
   868                           ; 1 bytes @ 0x7
   869  0077                     	ds	1
   870  0078                     ??_dynam:
   871  0078                     ?_tact:	
   872                           ; 1 bytes @ 0x8
   873                           
   874  0078                     ?___wmul:	
   875                           ; 1 bytes @ 0x8
   876                           
   877  0078                     tact@mode:	
   878                           ; 2 bytes @ 0x8
   879                           
   880  0078                     ___wmul@multiplier:	
   881                           ; 2 bytes @ 0x8
   882                           
   883                           
   884                           ; 2 bytes @ 0x8
   885  0078                     	ds	2
   886  007A                     ??_tact:
   887  007A                     ___wmul@multiplicand:	
   888                           ; 1 bytes @ 0xA
   889                           
   890                           
   891                           ; 2 bytes @ 0xA
   892  007A                     	ds	2
   893  007C                     ??___wmul:
   894  007C                     ___wmul@product:	
   895                           ; 1 bytes @ 0xC
   896                           
   897                           
   898                           ; 2 bytes @ 0xC
   899  007C                     	ds	2
   900  007E                     ??_motor:
   901                           
   902                           	psect	cstackBANK0
   903  0020                     __pcstackBANK0:	
   904                           ; 1 bytes @ 0xE
   905                           
   906  0020                     dynam@smd:
   907                           
   908                           ; 2 bytes @ 0x0
   909  0020                     	ds	2
   910  0022                     dynam@tm:
   911                           
   912                           ; 2 bytes @ 0x2
   913  0022                     	ds	2
   914  0024                     dynam@j:
   915                           
   916                           ; 2 bytes @ 0x4
   917  0024                     	ds	2
   918  0026                     dynam@ext:
   919                           
   920                           ; 2 bytes @ 0x6
   921  0026                     	ds	2
   922  0028                     ?_motor:
   923  0028                     ?_waitSEGStop:	
   924                           ; 1 bytes @ 0x8
   925                           
   926  0028                     waitSEGStop@seg1:	
   927                           ; 2 bytes @ 0x8
   928                           
   929  0028                     motor@kakudo:	
   930                           ; 2 bytes @ 0x8
   931                           
   932                           
   933                           ; 2 bytes @ 0x8
   934  0028                     	ds	2
   935  002A                     waitSEGStop@seg2:
   936  002A                     motor@dig1data:	
   937                           ; 2 bytes @ 0xA
   938                           
   939                           
   940                           ; 2 bytes @ 0xA
   941  002A                     	ds	2
   942  002C                     waitSEGStop@wt:
   943  002C                     motor@dig2data:	
   944                           ; 2 bytes @ 0xC
   945                           
   946                           
   947                           ; 2 bytes @ 0xC
   948  002C                     	ds	2
   949  002E                     waitSEGStop@dousa:
   950  002E                     motor@smdata:	
   951                           ; 2 bytes @ 0xE
   952                           
   953                           
   954                           ; 2 bytes @ 0xE
   955  002E                     	ds	2
   956  0030                     ??_waitSEGStop:
   957  0030                     motor@tr:	
   958                           ; 1 bytes @ 0x10
   959                           
   960                           
   961                           ; 2 bytes @ 0x10
   962  0030                     	ds	2
   963  0032                     waitSEGStop@cpSW1:
   964  0032                     motor@i:	
   965                           ; 2 bytes @ 0x12
   966                           
   967                           
   968                           ; 2 bytes @ 0x12
   969  0032                     	ds	2
   970  0034                     waitSEGStop@cpSW2:
   971                           
   972                           ; 2 bytes @ 0x14
   973  0034                     	ds	2
   974  0036                     waitSEGStop@cpSW3:
   975                           
   976                           ; 2 bytes @ 0x16
   977  0036                     	ds	2
   978  0038                     waitSEGStop@i:
   979                           
   980                           ; 2 bytes @ 0x18
   981  0038                     	ds	2
   982  003A                     ??_main:
   983                           
   984                           ; 1 bytes @ 0x1A
   985  003A                     	ds	18
   986  004C                     main@ans:
   987                           
   988                           ; 2 bytes @ 0x2C
   989  004C                     	ds	2
   990  004E                     main@j:
   991                           
   992                           ; 2 bytes @ 0x2E
   993  004E                     	ds	2
   994  0050                     main@i:
   995                           
   996                           ; 2 bytes @ 0x30
   997  0050                     	ds	2
   998                           
   999                           	psect	maintext
  1000  0500                     __pmaintext:	
  1001 ;;
  1002 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1003 ;;
  1004 ;; *************** function _main *****************
  1005 ;; Defined at:
  1006 ;;		line 773 in file "Q4.c"
  1007 ;; Parameters:    Size  Location     Type
  1008 ;;		None
  1009 ;; Auto vars:     Size  Location     Type
  1010 ;;  i               2   48[BANK0 ] int 
  1011 ;;  j               2   46[BANK0 ] int 
  1012 ;;  ans             2   44[BANK0 ] int 
  1013 ;;  ataiR           2    0        int 
  1014 ;;  ataiL           2    0        int 
  1015 ;;  segR            2    0        unsigned short 
  1016 ;;  segL            2    0        unsigned short 
  1017 ;;  time            2    0        int 
  1018 ;;  n               2    0        int 
  1019 ;;  m               2    0        int 
  1020 ;;  k               2    0        int 
  1021 ;; Return value:  Size  Location     Type
  1022 ;;                  1    wreg      void 
  1023 ;; Registers used:
  1024 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1025 ;; Tracked objects:
  1026 ;;		On entry : B1F/0
  1027 ;;		On exit  : 0/0
  1028 ;;		Unchanged: 0/0
  1029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1031 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1032 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1033 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1034 ;;Total ram usage:       24 bytes
  1035 ;; Hardware stack levels required when called:    3
  1036 ;; This function calls:
  1037 ;;		___wmul
  1038 ;;		_dynam
  1039 ;;		_fclr
  1040 ;;		_motor
  1041 ;;		_portinit
  1042 ;;		_waitSEGStop
  1043 ;;		_zenoff
  1044 ;; This function is called by:
  1045 ;;		Startup code after reset
  1046 ;; This function uses a non-reentrant model
  1047 ;;
  1048                           
  1049                           
  1050                           ;psect for function _main
  1051  0500                     _main:
  1052  0500                     l3218:	
  1053                           ;incstack = 0
  1054                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1055                           
  1056                           
  1057                           ;Q4.c: 776:     OSCCON=0x7A;
  1058  0500  307A               	movlw	122
  1059  0501  0021               	movlb	1	; select bank1
  1060  0502  0099               	movwf	25	;volatile
  1061  0503                     l3220:
  1062                           
  1063                           ;Q4.c: 778:     portinit();
  1064  0503  3180  20CB  3185   	fcall	_portinit
  1065                           
  1066                           ;Q4.c: 780:     zenoff();
  1067  0506  3180  20C2  3185   	fcall	_zenoff
  1068  0509                     l3222:
  1069  0509                     l3224:
  1070  0509                     l3226:
  1071  0509                     l3228:
  1072  0509                     l3230:
  1073  0509                     l362:	
  1074                           ;Q4.c: 785:     while((RA0!=1)||(RA1!=1)||(RA2!=1));
  1075                           
  1076  0509  0020               	movlb	0	; select bank0
  1077  050A  1C0C               	btfss	12,0	;volatile
  1078  050B  2D0D               	goto	u3421
  1079  050C  2D0E               	goto	u3420
  1080  050D                     u3421:
  1081  050D  2D09               	goto	l362
  1082  050E                     u3420:
  1083  050E                     l3232:
  1084  050E  1C8C               	btfss	12,1	;volatile
  1085  050F  2D11               	goto	u3431
  1086  0510  2D12               	goto	u3430
  1087  0511                     u3431:
  1088  0511  2D09               	goto	l362
  1089  0512                     u3430:
  1090  0512                     l3234:
  1091  0512  1D0C               	btfss	12,2	;volatile
  1092  0513  2D15               	goto	u3441
  1093  0514  2D16               	goto	u3440
  1094  0515                     u3441:
  1095  0515  2D09               	goto	l362
  1096  0516                     u3440:
  1097  0516                     l365:	
  1098                           ;Q4.c: 789:     hukki:
  1099                           
  1100                           
  1101                           ;Q4.c: 792:     RC2=RC0=RC1=1;
  1102  0516  0020               	movlb	0	; select bank0
  1103  0517  148E               	bsf	14,1	;volatile
  1104  0518  188E               	btfsc	14,1	;volatile
  1105  0519  2D1B               	goto	u3451
  1106  051A  2D1E               	goto	u3450
  1107  051B                     u3451:
  1108  051B  0020               	movlb	0	; select bank0
  1109  051C  140E               	bsf	14,0	;volatile
  1110  051D  2D20               	goto	u3464
  1111  051E                     u3450:
  1112  051E  0020               	movlb	0	; select bank0
  1113  051F  100E               	bcf	14,0	;volatile
  1114  0520                     u3464:
  1115  0520  180E               	btfsc	14,0	;volatile
  1116  0521  2D23               	goto	u3461
  1117  0522  2D26               	goto	u3460
  1118  0523                     u3461:
  1119  0523  0020               	movlb	0	; select bank0
  1120  0524  150E               	bsf	14,2	;volatile
  1121  0525  2D28               	goto	u3474
  1122  0526                     u3460:
  1123  0526  0020               	movlb	0	; select bank0
  1124  0527  110E               	bcf	14,2	;volatile
  1125  0528                     u3474:
  1126  0528                     l3236:
  1127                           
  1128                           ;Q4.c: 795:     fclr(2);
  1129  0528  3002               	movlw	2
  1130  0529  00F0               	movwf	fclr@flg
  1131  052A  3000               	movlw	0
  1132  052B  00F1               	movwf	fclr@flg+1
  1133  052C  3180  20FD  3185   	fcall	_fclr
  1134  052F                     l3238:
  1135  052F                     l3240:
  1136                           
  1137                           ;Q4.c: 807:     int ans = -1;
  1138  052F  30FF               	movlw	255
  1139  0530  0020               	movlb	0	; select bank0
  1140  0531  00CC               	movwf	main@ans
  1141  0532  30FF               	movlw	255
  1142  0533  00CD               	movwf	main@ans+1
  1143  0534                     l3242:
  1144  0534                     l3244:
  1145  0534                     l3246:
  1146  0534                     l3248:
  1147  0534                     l3250:
  1148                           
  1149                           ;Q4.c: 821:         if(RA0 ==1 && RA1 == 0){
  1150  0534  0020               	movlb	0	; select bank0
  1151  0535  1C0C               	btfss	12,0	;volatile
  1152  0536  2D38               	goto	u3481
  1153  0537  2D39               	goto	u3480
  1154  0538                     u3481:
  1155  0538  2D4E               	goto	l3256
  1156  0539                     u3480:
  1157  0539                     l3252:
  1158  0539  188C               	btfsc	12,1	;volatile
  1159  053A  2D3C               	goto	u3491
  1160  053B  2D3D               	goto	u3490
  1161  053C                     u3491:
  1162  053C  2D4E               	goto	l3256
  1163  053D                     u3490:
  1164  053D                     l3254:
  1165                           
  1166                           ;Q4.c: 822:             dynam(0x40,0x40,0,0);
  1167  053D  3040               	movlw	64
  1168  053E  00F0               	movwf	dynam@dig1data
  1169  053F  3000               	movlw	0
  1170  0540  00F1               	movwf	dynam@dig1data+1
  1171  0541  3040               	movlw	64
  1172  0542  00F2               	movwf	dynam@dig2data
  1173  0543  3000               	movlw	0
  1174  0544  00F3               	movwf	dynam@dig2data+1
  1175  0545  3000               	movlw	0
  1176  0546  00F4               	movwf	dynam@smdata
  1177  0547  00F5               	movwf	dynam@smdata+1
  1178  0548  3000               	movlw	0
  1179  0549  00F6               	movwf	dynam@tr
  1180  054A  00F7               	movwf	dynam@tr+1
  1181  054B  3183  2396  3185   	fcall	_dynam
  1182  054E                     l3256:
  1183                           
  1184                           ;Q4.c: 825:         if(RA0 ==0 && RA1 == 0){
  1185  054E  0020               	movlb	0	; select bank0
  1186  054F  180C               	btfsc	12,0	;volatile
  1187  0550  2D52               	goto	u3501
  1188  0551  2D53               	goto	u3500
  1189  0552                     u3501:
  1190  0552  2D34               	goto	l3250
  1191  0553                     u3500:
  1192  0553                     l3258:
  1193  0553  188C               	btfsc	12,1	;volatile
  1194  0554  2D56               	goto	u3511
  1195  0555  2D57               	goto	u3510
  1196  0556                     u3511:
  1197  0556  2D34               	goto	l3250
  1198  0557                     u3510:
  1199  0557                     l3260:
  1200                           
  1201                           ;Q4.c: 826:             zyoutai = waitSEGStop(0x40,0x40,1000,0b001);
  1202  0557  3040               	movlw	64
  1203  0558  00A8               	movwf	waitSEGStop@seg1
  1204  0559  3000               	movlw	0
  1205  055A  00A9               	movwf	waitSEGStop@seg1+1
  1206  055B  3040               	movlw	64
  1207  055C  00AA               	movwf	waitSEGStop@seg2
  1208  055D  3000               	movlw	0
  1209  055E  00AB               	movwf	waitSEGStop@seg2+1
  1210  055F  30E8               	movlw	232
  1211  0560  00AC               	movwf	waitSEGStop@wt
  1212  0561  3003               	movlw	3
  1213  0562  00AD               	movwf	waitSEGStop@wt+1
  1214  0563  3001               	movlw	1
  1215  0564  00AE               	movwf	waitSEGStop@dousa
  1216  0565  3000               	movlw	0
  1217  0566  00AF               	movwf	waitSEGStop@dousa+1
  1218  0567  3182  22B9  3185   	fcall	_waitSEGStop
  1219  056A  0020               	movlb	0	; select bank0
  1220  056B  0829               	movf	?_waitSEGStop+1,w
  1221  056C  00D3               	movwf	_zyoutai+1
  1222  056D  0828               	movf	?_waitSEGStop,w
  1223  056E  00D2               	movwf	_zyoutai
  1224  056F                     l3262:
  1225                           
  1226                           ;Q4.c: 828:             if(zyoutai >= 1){
  1227  056F  0853               	movf	_zyoutai+1,w
  1228  0570  3A80               	xorlw	128
  1229  0571  00BA               	movwf	??_main
  1230  0572  3080               	movlw	128
  1231  0573  023A               	subwf	??_main,w
  1232  0574  1D03               	skipz
  1233  0575  2D78               	goto	u3525
  1234  0576  3001               	movlw	1
  1235  0577  0252               	subwf	_zyoutai,w
  1236  0578                     u3525:
  1237  0578  1C03               	skipc
  1238  0579  2D7B               	goto	u3521
  1239  057A  2D7C               	goto	u3520
  1240  057B                     u3521:
  1241  057B  2E5B               	goto	l3294
  1242  057C                     u3520:
  1243  057C                     l3264:
  1244                           
  1245                           ;Q4.c: 829:                 _delay((unsigned long)((500)*(16000000/4000UL)));
  1246  057C  300B               	movlw	11
  1247  057D  0020               	movlb	0	; select bank0
  1248  057E  00BB               	movwf	??_main+1
  1249  057F  3026               	movlw	38
  1250  0580  00BA               	movwf	??_main
  1251  0581  305D               	movlw	93
  1252  0582                     u3887:
  1253  0582  0B89               	decfsz	9,f
  1254  0583  2D82               	goto	u3887
  1255  0584  0BBA               	decfsz	??_main,f
  1256  0585  2D82               	goto	u3887
  1257  0586  0BBB               	decfsz	??_main+1,f
  1258  0587  2D82               	goto	u3887
  1259  0588  3200               	nop2
  1260  0589                     l370:	
  1261                           ;Q4.c: 830:                 while(1){
  1262                           
  1263                           
  1264                           ;Q4.c: 831:                     for(i = 1;i<=6;i++){
  1265  0589  3001               	movlw	1
  1266  058A  0020               	movlb	0	; select bank0
  1267  058B  00D0               	movwf	main@i
  1268  058C  3000               	movlw	0
  1269  058D  00D1               	movwf	main@i+1
  1270  058E                     l3268:
  1271                           
  1272                           ;Q4.c: 832:                         zyoutai = waitSEGStop(0x40,num0[i],1000,0b001);
  1273  058E  3040               	movlw	64
  1274  058F  0020               	movlb	0	; select bank0
  1275  0590  00A8               	movwf	waitSEGStop@seg1
  1276  0591  3000               	movlw	0
  1277  0592  00A9               	movwf	waitSEGStop@seg1+1
  1278  0593  3550               	lslf	main@i,w
  1279  0594  3EC0               	addlw	(low (_num0| 0))& (0+255)
  1280  0595  0086               	movwf	6
  1281  0596  0187               	clrf	7
  1282  0597  3F40               	moviw [0]fsr1
  1283  0598  00AA               	movwf	waitSEGStop@seg2
  1284  0599  3F41               	moviw [1]fsr1
  1285  059A  00AB               	movwf	waitSEGStop@seg2+1
  1286  059B  30E8               	movlw	232
  1287  059C  00AC               	movwf	waitSEGStop@wt
  1288  059D  3003               	movlw	3
  1289  059E  00AD               	movwf	waitSEGStop@wt+1
  1290  059F  3001               	movlw	1
  1291  05A0  00AE               	movwf	waitSEGStop@dousa
  1292  05A1  3000               	movlw	0
  1293  05A2  00AF               	movwf	waitSEGStop@dousa+1
  1294  05A3  3182  22B9  3185   	fcall	_waitSEGStop
  1295  05A6  0020               	movlb	0	; select bank0
  1296  05A7  0829               	movf	?_waitSEGStop+1,w
  1297  05A8  00D3               	movwf	_zyoutai+1
  1298  05A9  0828               	movf	?_waitSEGStop,w
  1299  05AA  00D2               	movwf	_zyoutai
  1300  05AB                     l3270:
  1301                           
  1302                           ;Q4.c: 833:                         if(zyoutai > 0){
  1303  05AB  0853               	movf	_zyoutai+1,w
  1304  05AC  3A80               	xorlw	128
  1305  05AD  00BA               	movwf	??_main
  1306  05AE  3080               	movlw	128
  1307  05AF  023A               	subwf	??_main,w
  1308  05B0  1D03               	skipz
  1309  05B1  2DB4               	goto	u3535
  1310  05B2  3001               	movlw	1
  1311  05B3  0252               	subwf	_zyoutai,w
  1312  05B4                     u3535:
  1313  05B4  1C03               	skipc
  1314  05B5  2DB7               	goto	u3531
  1315  05B6  2DB8               	goto	u3530
  1316  05B7                     u3531:
  1317  05B7  2DED               	goto	l3282
  1318  05B8                     u3530:
  1319  05B8                     l3272:
  1320                           
  1321                           ;Q4.c: 834:                             ans++;
  1322  05B8  3001               	movlw	1
  1323  05B9  0020               	movlb	0	; select bank0
  1324  05BA  07CC               	addwf	main@ans,f
  1325  05BB  3000               	movlw	0
  1326  05BC  3DCD               	addwfc	main@ans+1,f
  1327  05BD                     l3274:
  1328                           
  1329                           ;Q4.c: 835:                             zyoutai = waitSEGStop(0x40,num0[i],zyoutai,0b001
      +                          );
  1330  05BD  3040               	movlw	64
  1331  05BE  00A8               	movwf	waitSEGStop@seg1
  1332  05BF  3000               	movlw	0
  1333  05C0  00A9               	movwf	waitSEGStop@seg1+1
  1334  05C1  3550               	lslf	main@i,w
  1335  05C2  3EC0               	addlw	(low (_num0| 0))& (0+255)
  1336  05C3  0086               	movwf	6
  1337  05C4  0187               	clrf	7
  1338  05C5  3F40               	moviw [0]fsr1
  1339  05C6  00AA               	movwf	waitSEGStop@seg2
  1340  05C7  3F41               	moviw [1]fsr1
  1341  05C8  00AB               	movwf	waitSEGStop@seg2+1
  1342  05C9  0853               	movf	_zyoutai+1,w
  1343  05CA  00AD               	movwf	waitSEGStop@wt+1
  1344  05CB  0852               	movf	_zyoutai,w
  1345  05CC  00AC               	movwf	waitSEGStop@wt
  1346  05CD  3001               	movlw	1
  1347  05CE  00AE               	movwf	waitSEGStop@dousa
  1348  05CF  3000               	movlw	0
  1349  05D0  00AF               	movwf	waitSEGStop@dousa+1
  1350  05D1  3182  22B9  3185   	fcall	_waitSEGStop
  1351  05D4  0020               	movlb	0	; select bank0
  1352  05D5  0829               	movf	?_waitSEGStop+1,w
  1353  05D6  00D3               	movwf	_zyoutai+1
  1354  05D7  0828               	movf	?_waitSEGStop,w
  1355  05D8  00D2               	movwf	_zyoutai
  1356  05D9                     l3276:
  1357                           
  1358                           ;Q4.c: 836:                             zyoutai =0;
  1359  05D9  01D2               	clrf	_zyoutai
  1360  05DA  01D3               	clrf	_zyoutai+1
  1361  05DB                     l3278:
  1362                           
  1363                           ;Q4.c: 837:                             if(zyoutai > 0){
  1364  05DB  0853               	movf	_zyoutai+1,w
  1365  05DC  3A80               	xorlw	128
  1366  05DD  00BA               	movwf	??_main
  1367  05DE  3080               	movlw	128
  1368  05DF  023A               	subwf	??_main,w
  1369  05E0  1D03               	skipz
  1370  05E1  2DE4               	goto	u3545
  1371  05E2  3001               	movlw	1
  1372  05E3  0252               	subwf	_zyoutai,w
  1373  05E4                     u3545:
  1374  05E4  1C03               	skipc
  1375  05E5  2DE7               	goto	u3541
  1376  05E6  2DE8               	goto	u3540
  1377  05E7                     u3541:
  1378  05E7  2DED               	goto	l3282
  1379  05E8                     u3540:
  1380  05E8                     l3280:
  1381                           
  1382                           ;Q4.c: 838:                                 ans++;
  1383  05E8  3001               	movlw	1
  1384  05E9  0020               	movlb	0	; select bank0
  1385  05EA  07CC               	addwf	main@ans,f
  1386  05EB  3000               	movlw	0
  1387  05EC  3DCD               	addwfc	main@ans+1,f
  1388  05ED                     l3282:
  1389                           
  1390                           ;Q4.c: 842:                         if(ans == 2){
  1391  05ED  3002               	movlw	2
  1392  05EE  0020               	movlb	0	; select bank0
  1393  05EF  064C               	xorwf	main@ans,w
  1394  05F0  044D               	iorwf	main@ans+1,w
  1395  05F1  1D03               	btfss	3,2
  1396  05F2  2DF4               	goto	u3551
  1397  05F3  2DF5               	goto	u3550
  1398  05F4                     u3551:
  1399  05F4  2E49               	goto	l3292
  1400  05F5                     u3550:
  1401  05F5                     l3284:
  1402                           
  1403                           ;Q4.c: 843:                             motor(60*i,0x40,num0[i],2,5);
  1404  05F5  0851               	movf	main@i+1,w
  1405  05F6  00F9               	movwf	___wmul@multiplier+1
  1406  05F7  0850               	movf	main@i,w
  1407  05F8  00F8               	movwf	___wmul@multiplier
  1408  05F9  303C               	movlw	60
  1409  05FA  00FA               	movwf	___wmul@multiplicand
  1410  05FB  3000               	movlw	0
  1411  05FC  00FB               	movwf	___wmul@multiplicand+1
  1412  05FD  3180  20DE  3185   	fcall	___wmul
  1413  0600  0879               	movf	?___wmul+1,w
  1414  0601  0020               	movlb	0	; select bank0
  1415  0602  00A9               	movwf	motor@kakudo+1
  1416  0603  0878               	movf	?___wmul,w
  1417  0604  00A8               	movwf	motor@kakudo
  1418  0605  3040               	movlw	64
  1419  0606  00AA               	movwf	motor@dig1data
  1420  0607  3000               	movlw	0
  1421  0608  00AB               	movwf	motor@dig1data+1
  1422  0609  3550               	lslf	main@i,w
  1423  060A  3EC0               	addlw	(low (_num0| 0))& (0+255)
  1424  060B  0086               	movwf	6
  1425  060C  0187               	clrf	7
  1426  060D  3F40               	moviw [0]fsr1
  1427  060E  00AC               	movwf	motor@dig2data
  1428  060F  3F41               	moviw [1]fsr1
  1429  0610  00AD               	movwf	motor@dig2data+1
  1430  0611  3002               	movlw	2
  1431  0612  00AE               	movwf	motor@smdata
  1432  0613  3000               	movlw	0
  1433  0614  00AF               	movwf	motor@smdata+1
  1434  0615  3005               	movlw	5
  1435  0616  00B0               	movwf	motor@tr
  1436  0617  3000               	movlw	0
  1437  0618  00B1               	movwf	motor@tr+1
  1438  0619  3181  213D  3185   	fcall	_motor
  1439  061C                     l3286:
  1440                           
  1441                           ;Q4.c: 846:                                 if(RA0==1 && RA1 == 0){
  1442  061C  0020               	movlb	0	; select bank0
  1443  061D  1C0C               	btfss	12,0	;volatile
  1444  061E  2E20               	goto	u3561
  1445  061F  2E21               	goto	u3560
  1446  0620                     u3561:
  1447  0620  2E1C               	goto	l3286
  1448  0621                     u3560:
  1449  0621                     l3288:
  1450  0621  188C               	btfsc	12,1	;volatile
  1451  0622  2E24               	goto	u3571
  1452  0623  2E25               	goto	u3570
  1453  0624                     u3571:
  1454  0624  2E1C               	goto	l3286
  1455  0625                     u3570:
  1456  0625                     l3290:
  1457                           
  1458                           ;Q4.c: 847:                                     motor(60*i,0x40,0x40,1,1);
  1459  0625  0851               	movf	main@i+1,w
  1460  0626  00F9               	movwf	___wmul@multiplier+1
  1461  0627  0850               	movf	main@i,w
  1462  0628  00F8               	movwf	___wmul@multiplier
  1463  0629  303C               	movlw	60
  1464  062A  00FA               	movwf	___wmul@multiplicand
  1465  062B  3000               	movlw	0
  1466  062C  00FB               	movwf	___wmul@multiplicand+1
  1467  062D  3180  20DE  3185   	fcall	___wmul
  1468  0630  0879               	movf	?___wmul+1,w
  1469  0631  0020               	movlb	0	; select bank0
  1470  0632  00A9               	movwf	motor@kakudo+1
  1471  0633  0878               	movf	?___wmul,w
  1472  0634  00A8               	movwf	motor@kakudo
  1473  0635  3040               	movlw	64
  1474  0636  00AA               	movwf	motor@dig1data
  1475  0637  3000               	movlw	0
  1476  0638  00AB               	movwf	motor@dig1data+1
  1477  0639  3040               	movlw	64
  1478  063A  00AC               	movwf	motor@dig2data
  1479  063B  3000               	movlw	0
  1480  063C  00AD               	movwf	motor@dig2data+1
  1481  063D  3001               	movlw	1
  1482  063E  00AE               	movwf	motor@smdata
  1483  063F  3000               	movlw	0
  1484  0640  00AF               	movwf	motor@smdata+1
  1485  0641  3001               	movlw	1
  1486  0642  00B0               	movwf	motor@tr
  1487  0643  3000               	movlw	0
  1488  0644  00B1               	movwf	motor@tr+1
  1489  0645  3181  213D  3185   	fcall	_motor
  1490                           
  1491                           ;Q4.c: 848:                                     goto hukki;
  1492  0648  2D16               	goto	l365
  1493  0649                     l3292:
  1494                           
  1495                           ;Q4.c: 852:                     }
  1496  0649  3001               	movlw	1
  1497  064A  07D0               	addwf	main@i,f
  1498  064B  3000               	movlw	0
  1499  064C  3DD1               	addwfc	main@i+1,f
  1500  064D  0851               	movf	main@i+1,w
  1501  064E  3A80               	xorlw	128
  1502  064F  00BA               	movwf	??_main
  1503  0650  3080               	movlw	128
  1504  0651  023A               	subwf	??_main,w
  1505  0652  1D03               	skipz
  1506  0653  2E56               	goto	u3585
  1507  0654  3007               	movlw	7
  1508  0655  0250               	subwf	main@i,w
  1509  0656                     u3585:
  1510  0656  1C03               	skipc
  1511  0657  2E59               	goto	u3581
  1512  0658  2E5A               	goto	u3580
  1513  0659                     u3581:
  1514  0659  2D8E               	goto	l3268
  1515  065A                     u3580:
  1516  065A  2D89               	goto	l370
  1517  065B                     l3294:
  1518                           
  1519                           ;Q4.c: 856:             zyoutai = waitSEGStop(0,0x40,1000,0b001);
  1520  065B  3000               	movlw	0
  1521  065C  0020               	movlb	0	; select bank0
  1522  065D  00A8               	movwf	waitSEGStop@seg1
  1523  065E  00A9               	movwf	waitSEGStop@seg1+1
  1524  065F  3040               	movlw	64
  1525  0660  00AA               	movwf	waitSEGStop@seg2
  1526  0661  3000               	movlw	0
  1527  0662  00AB               	movwf	waitSEGStop@seg2+1
  1528  0663  30E8               	movlw	232
  1529  0664  00AC               	movwf	waitSEGStop@wt
  1530  0665  3003               	movlw	3
  1531  0666  00AD               	movwf	waitSEGStop@wt+1
  1532  0667  3001               	movlw	1
  1533  0668  00AE               	movwf	waitSEGStop@dousa
  1534  0669  3000               	movlw	0
  1535  066A  00AF               	movwf	waitSEGStop@dousa+1
  1536  066B  3182  22B9  3185   	fcall	_waitSEGStop
  1537  066E  0020               	movlb	0	; select bank0
  1538  066F  0829               	movf	?_waitSEGStop+1,w
  1539  0670  00D3               	movwf	_zyoutai+1
  1540  0671  0828               	movf	?_waitSEGStop,w
  1541  0672  00D2               	movwf	_zyoutai
  1542  0673                     l3296:
  1543                           
  1544                           ;Q4.c: 858:             if(zyoutai >= 1){
  1545  0673  0853               	movf	_zyoutai+1,w
  1546  0674  3A80               	xorlw	128
  1547  0675  00BA               	movwf	??_main
  1548  0676  3080               	movlw	128
  1549  0677  023A               	subwf	??_main,w
  1550  0678  1D03               	skipz
  1551  0679  2E7C               	goto	u3595
  1552  067A  3001               	movlw	1
  1553  067B  0252               	subwf	_zyoutai,w
  1554  067C                     u3595:
  1555  067C  1C03               	skipc
  1556  067D  2E7F               	goto	u3591
  1557  067E  2E80               	goto	u3590
  1558  067F                     u3591:
  1559  067F  2D34               	goto	l3250
  1560  0680                     u3590:
  1561  0680                     l3298:
  1562                           
  1563                           ;Q4.c: 859:                 _delay((unsigned long)((500)*(16000000/4000UL)));
  1564  0680  300B               	movlw	11
  1565  0681  0020               	movlb	0	; select bank0
  1566  0682  00BB               	movwf	??_main+1
  1567  0683  3026               	movlw	38
  1568  0684  00BA               	movwf	??_main
  1569  0685  305D               	movlw	93
  1570  0686                     u3897:
  1571  0686  0B89               	decfsz	9,f
  1572  0687  2E86               	goto	u3897
  1573  0688  0BBA               	decfsz	??_main,f
  1574  0689  2E86               	goto	u3897
  1575  068A  0BBB               	decfsz	??_main+1,f
  1576  068B  2E86               	goto	u3897
  1577  068C  3200               	nop2
  1578  068D                     l383:	
  1579                           ;Q4.c: 860:                 while(1){
  1580                           
  1581                           
  1582                           ;Q4.c: 861:                     for(i = 1;i<=6;i++){
  1583  068D  3001               	movlw	1
  1584  068E  0020               	movlb	0	; select bank0
  1585  068F  00D0               	movwf	main@i
  1586  0690  3000               	movlw	0
  1587  0691  00D1               	movwf	main@i+1
  1588  0692                     l3302:
  1589                           
  1590                           ;Q4.c: 862:                         zyoutai = waitSEGStop(0,num0[i],1000,0b001);
  1591  0692  3000               	movlw	0
  1592  0693  0020               	movlb	0	; select bank0
  1593  0694  00A8               	movwf	waitSEGStop@seg1
  1594  0695  00A9               	movwf	waitSEGStop@seg1+1
  1595  0696  3550               	lslf	main@i,w
  1596  0697  3EC0               	addlw	(low (_num0| 0))& (0+255)
  1597  0698  0086               	movwf	6
  1598  0699  0187               	clrf	7
  1599  069A  3F40               	moviw [0]fsr1
  1600  069B  00AA               	movwf	waitSEGStop@seg2
  1601  069C  3F41               	moviw [1]fsr1
  1602  069D  00AB               	movwf	waitSEGStop@seg2+1
  1603  069E  30E8               	movlw	232
  1604  069F  00AC               	movwf	waitSEGStop@wt
  1605  06A0  3003               	movlw	3
  1606  06A1  00AD               	movwf	waitSEGStop@wt+1
  1607  06A2  3001               	movlw	1
  1608  06A3  00AE               	movwf	waitSEGStop@dousa
  1609  06A4  3000               	movlw	0
  1610  06A5  00AF               	movwf	waitSEGStop@dousa+1
  1611  06A6  3182  22B9  3185   	fcall	_waitSEGStop
  1612  06A9  0020               	movlb	0	; select bank0
  1613  06AA  0829               	movf	?_waitSEGStop+1,w
  1614  06AB  00D3               	movwf	_zyoutai+1
  1615  06AC  0828               	movf	?_waitSEGStop,w
  1616  06AD  00D2               	movwf	_zyoutai
  1617  06AE                     l3304:
  1618                           
  1619                           ;Q4.c: 863:                         if(zyoutai > 0){
  1620  06AE  0853               	movf	_zyoutai+1,w
  1621  06AF  3A80               	xorlw	128
  1622  06B0  00BA               	movwf	??_main
  1623  06B1  3080               	movlw	128
  1624  06B2  023A               	subwf	??_main,w
  1625  06B3  1D03               	skipz
  1626  06B4  2EB7               	goto	u3605
  1627  06B5  3001               	movlw	1
  1628  06B6  0252               	subwf	_zyoutai,w
  1629  06B7                     u3605:
  1630  06B7  1C03               	skipc
  1631  06B8  2EBA               	goto	u3601
  1632  06B9  2EBB               	goto	u3600
  1633  06BA                     u3601:
  1634  06BA  2EED               	goto	l3314
  1635  06BB                     u3600:
  1636  06BB                     l3306:
  1637                           
  1638                           ;Q4.c: 864:                             ans++;
  1639  06BB  3001               	movlw	1
  1640  06BC  0020               	movlb	0	; select bank0
  1641  06BD  07CC               	addwf	main@ans,f
  1642  06BE  3000               	movlw	0
  1643  06BF  3DCD               	addwfc	main@ans+1,f
  1644  06C0                     l3308:
  1645                           
  1646                           ;Q4.c: 865:                             zyoutai = waitSEGStop(0,num0[i],zyoutai,0b001);
  1647  06C0  3000               	movlw	0
  1648  06C1  00A8               	movwf	waitSEGStop@seg1
  1649  06C2  00A9               	movwf	waitSEGStop@seg1+1
  1650  06C3  3550               	lslf	main@i,w
  1651  06C4  3EC0               	addlw	(low (_num0| 0))& (0+255)
  1652  06C5  0086               	movwf	6
  1653  06C6  0187               	clrf	7
  1654  06C7  3F40               	moviw [0]fsr1
  1655  06C8  00AA               	movwf	waitSEGStop@seg2
  1656  06C9  3F41               	moviw [1]fsr1
  1657  06CA  00AB               	movwf	waitSEGStop@seg2+1
  1658  06CB  0853               	movf	_zyoutai+1,w
  1659  06CC  00AD               	movwf	waitSEGStop@wt+1
  1660  06CD  0852               	movf	_zyoutai,w
  1661  06CE  00AC               	movwf	waitSEGStop@wt
  1662  06CF  3001               	movlw	1
  1663  06D0  00AE               	movwf	waitSEGStop@dousa
  1664  06D1  3000               	movlw	0
  1665  06D2  00AF               	movwf	waitSEGStop@dousa+1
  1666  06D3  3182  22B9  3185   	fcall	_waitSEGStop
  1667  06D6  0020               	movlb	0	; select bank0
  1668  06D7  0829               	movf	?_waitSEGStop+1,w
  1669  06D8  00D3               	movwf	_zyoutai+1
  1670  06D9  0828               	movf	?_waitSEGStop,w
  1671  06DA  00D2               	movwf	_zyoutai
  1672  06DB                     l3310:
  1673                           
  1674                           ;Q4.c: 866:                             if(zyoutai > 0){
  1675  06DB  0853               	movf	_zyoutai+1,w
  1676  06DC  3A80               	xorlw	128
  1677  06DD  00BA               	movwf	??_main
  1678  06DE  3080               	movlw	128
  1679  06DF  023A               	subwf	??_main,w
  1680  06E0  1D03               	skipz
  1681  06E1  2EE4               	goto	u3615
  1682  06E2  3001               	movlw	1
  1683  06E3  0252               	subwf	_zyoutai,w
  1684  06E4                     u3615:
  1685  06E4  1C03               	skipc
  1686  06E5  2EE7               	goto	u3611
  1687  06E6  2EE8               	goto	u3610
  1688  06E7                     u3611:
  1689  06E7  2EED               	goto	l3314
  1690  06E8                     u3610:
  1691  06E8                     l3312:
  1692                           
  1693                           ;Q4.c: 867:                                 ans++;
  1694  06E8  3001               	movlw	1
  1695  06E9  0020               	movlb	0	; select bank0
  1696  06EA  07CC               	addwf	main@ans,f
  1697  06EB  3000               	movlw	0
  1698  06EC  3DCD               	addwfc	main@ans+1,f
  1699  06ED                     l3314:
  1700                           
  1701                           ;Q4.c: 871:                         if(ans == 2){
  1702  06ED  3002               	movlw	2
  1703  06EE  0020               	movlb	0	; select bank0
  1704  06EF  064C               	xorwf	main@ans,w
  1705  06F0  044D               	iorwf	main@ans+1,w
  1706  06F1  1D03               	btfss	3,2
  1707  06F2  2EF4               	goto	u3621
  1708  06F3  2EF5               	goto	u3620
  1709  06F4                     u3621:
  1710  06F4  2FB6               	goto	l3340
  1711  06F5                     u3620:
  1712  06F5                     l3316:
  1713                           
  1714                           ;Q4.c: 872:                             motor(60*i,0,num0[i],1,5);
  1715  06F5  0851               	movf	main@i+1,w
  1716  06F6  00F9               	movwf	___wmul@multiplier+1
  1717  06F7  0850               	movf	main@i,w
  1718  06F8  00F8               	movwf	___wmul@multiplier
  1719  06F9  303C               	movlw	60
  1720  06FA  00FA               	movwf	___wmul@multiplicand
  1721  06FB  3000               	movlw	0
  1722  06FC  00FB               	movwf	___wmul@multiplicand+1
  1723  06FD  3180  20DE  3185   	fcall	___wmul
  1724  0700  0879               	movf	?___wmul+1,w
  1725  0701  0020               	movlb	0	; select bank0
  1726  0702  00A9               	movwf	motor@kakudo+1
  1727  0703  0878               	movf	?___wmul,w
  1728  0704  00A8               	movwf	motor@kakudo
  1729  0705  3000               	movlw	0
  1730  0706  00AA               	movwf	motor@dig1data
  1731  0707  00AB               	movwf	motor@dig1data+1
  1732  0708  3550               	lslf	main@i,w
  1733  0709  3EC0               	addlw	(low (_num0| 0))& (0+255)
  1734  070A  0086               	movwf	6
  1735  070B  0187               	clrf	7
  1736  070C  3F40               	moviw [0]fsr1
  1737  070D  00AC               	movwf	motor@dig2data
  1738  070E  3F41               	moviw [1]fsr1
  1739  070F  00AD               	movwf	motor@dig2data+1
  1740  0710  3001               	movlw	1
  1741  0711  00AE               	movwf	motor@smdata
  1742  0712  3000               	movlw	0
  1743  0713  00AF               	movwf	motor@smdata+1
  1744  0714  3005               	movlw	5
  1745  0715  00B0               	movwf	motor@tr
  1746  0716  3000               	movlw	0
  1747  0717  00B1               	movwf	motor@tr+1
  1748  0718  3181  213D  3185   	fcall	_motor
  1749  071B                     l3318:
  1750                           
  1751                           ;Q4.c: 875:                                 if(RA0==1 && RA1 == 0){
  1752  071B  0020               	movlb	0	; select bank0
  1753  071C  1C0C               	btfss	12,0	;volatile
  1754  071D  2F1F               	goto	u3631
  1755  071E  2F20               	goto	u3630
  1756  071F                     u3631:
  1757  071F  2F4D               	goto	l390
  1758  0720                     u3630:
  1759  0720                     l3320:
  1760  0720  188C               	btfsc	12,1	;volatile
  1761  0721  2F23               	goto	u3641
  1762  0722  2F24               	goto	u3640
  1763  0723                     u3641:
  1764  0723  2F4D               	goto	l390
  1765  0724                     u3640:
  1766  0724                     l3322:
  1767                           
  1768                           ;Q4.c: 876:                                     motor(60*(6-i),0x40,0x40,1,1);
  1769  0724  3006               	movlw	6
  1770  0725  00BA               	movwf	??_main
  1771  0726  0850               	movf	main@i,w
  1772  0727  023A               	subwf	??_main,w
  1773  0728  00F8               	movwf	___wmul@multiplier
  1774  0729  0951               	comf	main@i+1,w
  1775  072A  1803               	skipnc
  1776  072B  0A89               	incf	9,f
  1777  072C  00F9               	movwf	___wmul@multiplier+1
  1778  072D  303C               	movlw	60
  1779  072E  00FA               	movwf	___wmul@multiplicand
  1780  072F  3000               	movlw	0
  1781  0730  00FB               	movwf	___wmul@multiplicand+1
  1782  0731  3180  20DE  3185   	fcall	___wmul
  1783  0734  0879               	movf	?___wmul+1,w
  1784  0735  0020               	movlb	0	; select bank0
  1785  0736  00A9               	movwf	motor@kakudo+1
  1786  0737  0878               	movf	?___wmul,w
  1787  0738  00A8               	movwf	motor@kakudo
  1788  0739  3040               	movlw	64
  1789  073A  00AA               	movwf	motor@dig1data
  1790  073B  3000               	movlw	0
  1791  073C  00AB               	movwf	motor@dig1data+1
  1792  073D  3040               	movlw	64
  1793  073E  00AC               	movwf	motor@dig2data
  1794  073F  3000               	movlw	0
  1795  0740  00AD               	movwf	motor@dig2data+1
  1796  0741  3001               	movlw	1
  1797  0742  00AE               	movwf	motor@smdata
  1798  0743  3000               	movlw	0
  1799  0744  00AF               	movwf	motor@smdata+1
  1800  0745  3001               	movlw	1
  1801  0746  00B0               	movwf	motor@tr
  1802  0747  3000               	movlw	0
  1803  0748  00B1               	movwf	motor@tr+1
  1804  0749  3181  213D  3185   	fcall	_motor
  1805                           
  1806                           ;Q4.c: 877:                                     goto hukki;
  1807  074C  2D16               	goto	l365
  1808  074D                     l390:	
  1809                           ;Q4.c: 879:                                 }
  1810                           
  1811                           
  1812                           ;Q4.c: 880:                                 if(RA0 ==0 && RA1 ==1){
  1813  074D  180C               	btfsc	12,0	;volatile
  1814  074E  2F50               	goto	u3651
  1815  074F  2F51               	goto	u3650
  1816  0750                     u3651:
  1817  0750  2F1B               	goto	l3318
  1818  0751                     u3650:
  1819  0751                     l3324:
  1820  0751  1C8C               	btfss	12,1	;volatile
  1821  0752  2F54               	goto	u3661
  1822  0753  2F55               	goto	u3660
  1823  0754                     u3661:
  1824  0754  2F1B               	goto	l3318
  1825  0755                     u3660:
  1826  0755                     l3326:
  1827                           
  1828                           ;Q4.c: 881:                                     motor(60*(6-i),0x40,0x40,1,1);
  1829  0755  3006               	movlw	6
  1830  0756  00BA               	movwf	??_main
  1831  0757  0850               	movf	main@i,w
  1832  0758  023A               	subwf	??_main,w
  1833  0759  00F8               	movwf	___wmul@multiplier
  1834  075A  0951               	comf	main@i+1,w
  1835  075B  1803               	skipnc
  1836  075C  0A89               	incf	9,f
  1837  075D  00F9               	movwf	___wmul@multiplier+1
  1838  075E  303C               	movlw	60
  1839  075F  00FA               	movwf	___wmul@multiplicand
  1840  0760  3000               	movlw	0
  1841  0761  00FB               	movwf	___wmul@multiplicand+1
  1842  0762  3180  20DE  3185   	fcall	___wmul
  1843  0765  0879               	movf	?___wmul+1,w
  1844  0766  0020               	movlb	0	; select bank0
  1845  0767  00A9               	movwf	motor@kakudo+1
  1846  0768  0878               	movf	?___wmul,w
  1847  0769  00A8               	movwf	motor@kakudo
  1848  076A  3040               	movlw	64
  1849  076B  00AA               	movwf	motor@dig1data
  1850  076C  3000               	movlw	0
  1851  076D  00AB               	movwf	motor@dig1data+1
  1852  076E  3040               	movlw	64
  1853  076F  00AC               	movwf	motor@dig2data
  1854  0770  3000               	movlw	0
  1855  0771  00AD               	movwf	motor@dig2data+1
  1856  0772  3001               	movlw	1
  1857  0773  00AE               	movwf	motor@smdata
  1858  0774  3000               	movlw	0
  1859  0775  00AF               	movwf	motor@smdata+1
  1860  0776  3001               	movlw	1
  1861  0777  00B0               	movwf	motor@tr
  1862  0778  3000               	movlw	0
  1863  0779  00B1               	movwf	motor@tr+1
  1864  077A  3181  213D  3185   	fcall	_motor
  1865  077D                     l3328:
  1866                           
  1867                           ;Q4.c: 883:                                     for(j = 0 ; j<=6; j++){
  1868  077D  0020               	movlb	0	; select bank0
  1869  077E  01CE               	clrf	main@j
  1870  077F  01CF               	clrf	main@j+1
  1871  0780                     l3334:
  1872                           
  1873                           ;Q4.c: 884:                                     motor(36*j,0,0x40,1,1);
  1874  0780  0020               	movlb	0	; select bank0
  1875  0781  084F               	movf	main@j+1,w
  1876  0782  00F9               	movwf	___wmul@multiplier+1
  1877  0783  084E               	movf	main@j,w
  1878  0784  00F8               	movwf	___wmul@multiplier
  1879  0785  3024               	movlw	36
  1880  0786  00FA               	movwf	___wmul@multiplicand
  1881  0787  3000               	movlw	0
  1882  0788  00FB               	movwf	___wmul@multiplicand+1
  1883  0789  3180  20DE  3185   	fcall	___wmul
  1884  078C  0879               	movf	?___wmul+1,w
  1885  078D  0020               	movlb	0	; select bank0
  1886  078E  00A9               	movwf	motor@kakudo+1
  1887  078F  0878               	movf	?___wmul,w
  1888  0790  00A8               	movwf	motor@kakudo
  1889  0791  3000               	movlw	0
  1890  0792  00AA               	movwf	motor@dig1data
  1891  0793  00AB               	movwf	motor@dig1data+1
  1892  0794  3040               	movlw	64
  1893  0795  00AC               	movwf	motor@dig2data
  1894  0796  3000               	movlw	0
  1895  0797  00AD               	movwf	motor@dig2data+1
  1896  0798  3001               	movlw	1
  1897  0799  00AE               	movwf	motor@smdata
  1898  079A  3000               	movlw	0
  1899  079B  00AF               	movwf	motor@smdata+1
  1900  079C  3001               	movlw	1
  1901  079D  00B0               	movwf	motor@tr
  1902  079E  3000               	movlw	0
  1903  079F  00B1               	movwf	motor@tr+1
  1904  07A0  3181  213D  3185   	fcall	_motor
  1905  07A3                     l3336:
  1906                           
  1907                           ;Q4.c: 886:                                     }
  1908  07A3  3001               	movlw	1
  1909  07A4  0020               	movlb	0	; select bank0
  1910  07A5  07CE               	addwf	main@j,f
  1911  07A6  3000               	movlw	0
  1912  07A7  3DCF               	addwfc	main@j+1,f
  1913  07A8                     l3338:
  1914  07A8  084F               	movf	main@j+1,w
  1915  07A9  3A80               	xorlw	128
  1916  07AA  00BA               	movwf	??_main
  1917  07AB  3080               	movlw	128
  1918  07AC  023A               	subwf	??_main,w
  1919  07AD  1D03               	skipz
  1920  07AE  2FB1               	goto	u3675
  1921  07AF  3007               	movlw	7
  1922  07B0  024E               	subwf	main@j,w
  1923  07B1                     u3675:
  1924  07B1  1C03               	skipc
  1925  07B2  2FB4               	goto	u3671
  1926  07B3  2FB5               	goto	u3670
  1927  07B4                     u3671:
  1928  07B4  2F80               	goto	l3334
  1929  07B5                     u3670:
  1930  07B5  2F1B               	goto	l3318
  1931  07B6                     l3340:
  1932                           
  1933                           ;Q4.c: 890:                     }
  1934  07B6  3001               	movlw	1
  1935  07B7  07D0               	addwf	main@i,f
  1936  07B8  3000               	movlw	0
  1937  07B9  3DD1               	addwfc	main@i+1,f
  1938  07BA  0851               	movf	main@i+1,w
  1939  07BB  3A80               	xorlw	128
  1940  07BC  00BA               	movwf	??_main
  1941  07BD  3080               	movlw	128
  1942  07BE  023A               	subwf	??_main,w
  1943  07BF  1D03               	skipz
  1944  07C0  2FC3               	goto	u3685
  1945  07C1  3007               	movlw	7
  1946  07C2  0250               	subwf	main@i,w
  1947  07C3                     u3685:
  1948  07C3  1C03               	skipc
  1949  07C4  2FC6               	goto	u3681
  1950  07C5  2FC7               	goto	u3680
  1951  07C6                     u3681:
  1952  07C6  2E92               	goto	l3302
  1953  07C7                     u3680:
  1954  07C7  2E8D               	goto	l383
  1955  07C8  3180  2802         	ljmp	start
  1956  07CA                     __end_of_main:
  1957                           
  1958                           	psect	text1
  1959  00C2                     __ptext1:	
  1960 ;; *************** function _zenoff *****************
  1961 ;; Defined at:
  1962 ;;		line 195 in file "Q4.c"
  1963 ;; Parameters:    Size  Location     Type
  1964 ;;		None
  1965 ;; Auto vars:     Size  Location     Type
  1966 ;;		None
  1967 ;; Return value:  Size  Location     Type
  1968 ;;                  1    wreg      void 
  1969 ;; Registers used:
  1970 ;;		status,2
  1971 ;; Tracked objects:
  1972 ;;		On entry : 0/0
  1973 ;;		On exit  : 0/0
  1974 ;;		Unchanged: 0/0
  1975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1980 ;;Total ram usage:        0 bytes
  1981 ;; Hardware stack levels used:    1
  1982 ;; This function calls:
  1983 ;;		Nothing
  1984 ;; This function is called by:
  1985 ;;		_main
  1986 ;; This function uses a non-reentrant model
  1987 ;;
  1988                           
  1989                           
  1990                           ;psect for function _zenoff
  1991  00C2                     _zenoff:
  1992  00C2                     l2504:	
  1993                           ;incstack = 0
  1994                           ; Regs used in _zenoff: [status,2]
  1995                           
  1996                           
  1997                           ;Q4.c: 197:     RC2=1;
  1998  00C2  0020               	movlb	0	; select bank0
  1999  00C3  150E               	bsf	14,2	;volatile
  2000                           
  2001                           ;Q4.c: 198:     RC1=1;
  2002  00C4  148E               	bsf	14,1	;volatile
  2003                           
  2004                           ;Q4.c: 199:     RC0=1;
  2005  00C5  140E               	bsf	14,0	;volatile
  2006  00C6                     l2506:
  2007                           
  2008                           ;Q4.c: 200:     PORTB=0x00;
  2009  00C6  018D               	clrf	13	;volatile
  2010  00C7                     l2508:
  2011                           
  2012                           ;Q4.c: 201:     RC7=0;RC7=1;RC7=0;
  2013  00C7  138E               	bcf	14,7	;volatile
  2014  00C8                     l2510:
  2015  00C8  178E               	bsf	14,7	;volatile
  2016  00C9                     l2512:
  2017  00C9  138E               	bcf	14,7	;volatile
  2018  00CA                     l108:
  2019  00CA  0008               	return
  2020  00CB                     __end_of_zenoff:
  2021                           
  2022                           	psect	text2
  2023  02B9                     __ptext2:	
  2024 ;; *************** function _waitSEGStop *****************
  2025 ;; Defined at:
  2026 ;;		line 464 in file "Q4.c"
  2027 ;; Parameters:    Size  Location     Type
  2028 ;;  seg1            2    8[BANK0 ] unsigned short 
  2029 ;;  seg2            2   10[BANK0 ] unsigned short 
  2030 ;;  wt              2   12[BANK0 ] unsigned short 
  2031 ;;  dousa           2   14[BANK0 ] int 
  2032 ;; Auto vars:     Size  Location     Type
  2033 ;;  i               2   24[BANK0 ] unsigned int 
  2034 ;;  cpSW3           2   22[BANK0 ] int 
  2035 ;;  cpSW2           2   20[BANK0 ] int 
  2036 ;;  cpSW1           2   18[BANK0 ] int 
  2037 ;; Return value:  Size  Location     Type
  2038 ;;                  2    8[BANK0 ] int 
  2039 ;; Registers used:
  2040 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2041 ;; Tracked objects:
  2042 ;;		On entry : 0/0
  2043 ;;		On exit  : 0/0
  2044 ;;		Unchanged: 0/0
  2045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2046 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2047 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2048 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2049 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2050 ;;Total ram usage:       18 bytes
  2051 ;; Hardware stack levels used:    1
  2052 ;; Hardware stack levels required when called:    2
  2053 ;; This function calls:
  2054 ;;		___lwdiv
  2055 ;;		___wmul
  2056 ;;		_dynam
  2057 ;;		_fclr
  2058 ;;		_tact
  2059 ;; This function is called by:
  2060 ;;		_main
  2061 ;; This function uses a non-reentrant model
  2062 ;;
  2063                           
  2064                           
  2065                           ;psect for function _waitSEGStop
  2066  02B9                     _waitSEGStop:
  2067  02B9                     l2554:	
  2068                           ;incstack = 0
  2069                           ; Regs used in _waitSEGStop: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2070                           
  2071                           
  2072                           ;Q4.c: 464: int waitSEGStop(unsigned short seg1,unsigned short seg2,unsigned short wt,in
      +                          t dousa);Q4.c: 465: {;Q4.c: 467:     int cpSW1 = RA0;
  2073  02B9  1003               	clrc
  2074  02BA  0020               	movlb	0	; select bank0
  2075  02BB  180C               	btfsc	12,0	;volatile
  2076  02BC  1403               	setc
  2077  02BD  3000               	movlw	0
  2078  02BE  3D09               	addwfc	9,w
  2079  02BF  00B0               	movwf	??_waitSEGStop
  2080  02C0  01B1               	clrf	??_waitSEGStop+1
  2081  02C1  0830               	movf	??_waitSEGStop,w
  2082  02C2  00B2               	movwf	waitSEGStop@cpSW1
  2083  02C3  0831               	movf	??_waitSEGStop+1,w
  2084  02C4  00B3               	movwf	waitSEGStop@cpSW1+1
  2085                           
  2086                           ;Q4.c: 468:     int cpSW2 = RA1;
  2087  02C5  1003               	clrc
  2088  02C6  188C               	btfsc	12,1	;volatile
  2089  02C7  1403               	setc
  2090  02C8  3000               	movlw	0
  2091  02C9  3D09               	addwfc	9,w
  2092  02CA  00B0               	movwf	??_waitSEGStop
  2093  02CB  01B1               	clrf	??_waitSEGStop+1
  2094  02CC  0830               	movf	??_waitSEGStop,w
  2095  02CD  00B4               	movwf	waitSEGStop@cpSW2
  2096  02CE  0831               	movf	??_waitSEGStop+1,w
  2097  02CF  00B5               	movwf	waitSEGStop@cpSW2+1
  2098                           
  2099                           ;Q4.c: 469:     int cpSW3 = RA2;
  2100  02D0  1003               	clrc
  2101  02D1  190C               	btfsc	12,2	;volatile
  2102  02D2  1403               	setc
  2103  02D3  3000               	movlw	0
  2104  02D4  3D09               	addwfc	9,w
  2105  02D5  00B0               	movwf	??_waitSEGStop
  2106  02D6  01B1               	clrf	??_waitSEGStop+1
  2107  02D7  0830               	movf	??_waitSEGStop,w
  2108  02D8  00B6               	movwf	waitSEGStop@cpSW3
  2109  02D9  0831               	movf	??_waitSEGStop+1,w
  2110  02DA  00B7               	movwf	waitSEGStop@cpSW3+1
  2111  02DB                     l2556:
  2112                           
  2113                           ;Q4.c: 473:     wt = wt / 10 + wt/1000*60;
  2114  02DB  30E8               	movlw	232
  2115  02DC  00F0               	movwf	___lwdiv@divisor
  2116  02DD  3003               	movlw	3
  2117  02DE  00F1               	movwf	___lwdiv@divisor+1
  2118  02DF  082D               	movf	waitSEGStop@wt+1,w
  2119  02E0  00F3               	movwf	___lwdiv@dividend+1
  2120  02E1  082C               	movf	waitSEGStop@wt,w
  2121  02E2  00F2               	movwf	___lwdiv@dividend
  2122  02E3  3181  2161  3182   	fcall	___lwdiv
  2123  02E6  0871               	movf	?___lwdiv+1,w
  2124  02E7  00F9               	movwf	___wmul@multiplier+1
  2125  02E8  0870               	movf	?___lwdiv,w
  2126  02E9  00F8               	movwf	___wmul@multiplier
  2127  02EA  303C               	movlw	60
  2128  02EB  00FA               	movwf	___wmul@multiplicand
  2129  02EC  3000               	movlw	0
  2130  02ED  00FB               	movwf	___wmul@multiplicand+1
  2131  02EE  3180  20DE  3182   	fcall	___wmul
  2132  02F1  0878               	movf	?___wmul,w
  2133  02F2  0020               	movlb	0	; select bank0
  2134  02F3  00B0               	movwf	??_waitSEGStop
  2135  02F4  0879               	movf	?___wmul+1,w
  2136  02F5  00B1               	movwf	??_waitSEGStop+1
  2137  02F6  300A               	movlw	10
  2138  02F7  00F0               	movwf	___lwdiv@divisor
  2139  02F8  3000               	movlw	0
  2140  02F9  00F1               	movwf	___lwdiv@divisor+1
  2141  02FA  082D               	movf	waitSEGStop@wt+1,w
  2142  02FB  00F3               	movwf	___lwdiv@dividend+1
  2143  02FC  082C               	movf	waitSEGStop@wt,w
  2144  02FD  00F2               	movwf	___lwdiv@dividend
  2145  02FE  3181  2161  3182   	fcall	___lwdiv
  2146  0301  0870               	movf	?___lwdiv,w
  2147  0302  0020               	movlb	0	; select bank0
  2148  0303  0730               	addwf	??_waitSEGStop,w
  2149  0304  00AC               	movwf	waitSEGStop@wt
  2150  0305  0871               	movf	?___lwdiv+1,w
  2151  0306  3D31               	addwfc	??_waitSEGStop+1,w
  2152  0307  00AD               	movwf	waitSEGStop@wt+1
  2153  0308                     l2558:
  2154                           
  2155                           ;Q4.c: 474:     unsigned int i;;Q4.c: 476:     for(i=wt;i>0;--i){
  2156  0308  082D               	movf	waitSEGStop@wt+1,w
  2157  0309  00B9               	movwf	waitSEGStop@i+1
  2158  030A  082C               	movf	waitSEGStop@wt,w
  2159  030B  00B8               	movwf	waitSEGStop@i
  2160  030C                     l2560:
  2161  030C  0838               	movf	waitSEGStop@i,w
  2162  030D  0439               	iorwf	waitSEGStop@i+1,w
  2163  030E  1D03               	btfss	3,2
  2164  030F  2B11               	goto	u2311
  2165  0310  2B12               	goto	u2310
  2166  0311                     u2311:
  2167  0311  2B13               	goto	l2564
  2168  0312                     u2310:
  2169  0312  2B93               	goto	l2612
  2170  0313                     l2564:
  2171                           
  2172                           ;Q4.c: 477:         dynam(seg1,seg2,0,0);
  2173  0313  0829               	movf	waitSEGStop@seg1+1,w
  2174  0314  00F1               	movwf	dynam@dig1data+1
  2175  0315  0828               	movf	waitSEGStop@seg1,w
  2176  0316  00F0               	movwf	dynam@dig1data
  2177  0317  082B               	movf	waitSEGStop@seg2+1,w
  2178  0318  00F3               	movwf	dynam@dig2data+1
  2179  0319  082A               	movf	waitSEGStop@seg2,w
  2180  031A  00F2               	movwf	dynam@dig2data
  2181  031B  3000               	movlw	0
  2182  031C  00F4               	movwf	dynam@smdata
  2183  031D  00F5               	movwf	dynam@smdata+1
  2184  031E  3000               	movlw	0
  2185  031F  00F6               	movwf	dynam@tr
  2186  0320  00F7               	movwf	dynam@tr+1
  2187  0321  3183  2396  3182   	fcall	_dynam
  2188                           
  2189                           ;Q4.c: 479:         tact(0);
  2190  0324  3000               	movlw	0
  2191  0325  00F8               	movwf	tact@mode
  2192  0326  00F9               	movwf	tact@mode+1
  2193  0327  3182  2220  3182   	fcall	_tact
  2194  032A                     l2566:
  2195                           
  2196                           ;Q4.c: 481:         if(cpSW1 != RA0){
  2197  032A  1003               	clrc
  2198  032B  0020               	movlb	0	; select bank0
  2199  032C  180C               	btfsc	12,0	;volatile
  2200  032D  1403               	setc
  2201  032E  3000               	movlw	0
  2202  032F  3D09               	addwfc	9,w
  2203  0330  00B0               	movwf	??_waitSEGStop
  2204  0331  01B1               	clrf	??_waitSEGStop+1
  2205  0332  0833               	movf	waitSEGStop@cpSW1+1,w
  2206  0333  0631               	xorwf	??_waitSEGStop+1,w
  2207  0334  1D03               	skipz
  2208  0335  2B38               	goto	u2325
  2209  0336  0832               	movf	waitSEGStop@cpSW1,w
  2210  0337  0630               	xorwf	??_waitSEGStop,w
  2211  0338                     u2325:
  2212  0338  1903               	skipnz
  2213  0339  2B3B               	goto	u2321
  2214  033A  2B3C               	goto	u2320
  2215  033B                     u2321:
  2216  033B  2B4D               	goto	l2576
  2217  033C                     u2320:
  2218  033C                     l2568:
  2219                           
  2220                           ;Q4.c: 482:             if((0b100 & dousa) == 0b100){
  2221  033C  1D2E               	btfss	waitSEGStop@dousa,2
  2222  033D  2B3F               	goto	u2331
  2223  033E  2B40               	goto	u2330
  2224  033F                     u2331:
  2225  033F  2B4D               	goto	l2576
  2226  0340                     u2330:
  2227  0340                     l2570:
  2228                           
  2229                           ;Q4.c: 484:                 fclr(2);
  2230  0340  3002               	movlw	2
  2231  0341  00F0               	movwf	fclr@flg
  2232  0342  3000               	movlw	0
  2233  0343  00F1               	movwf	fclr@flg+1
  2234  0344  3180  20FD  3182   	fcall	_fclr
  2235  0347                     l2572:
  2236                           
  2237                           ;Q4.c: 485:                 return i;
  2238  0347  0020               	movlb	0	; select bank0
  2239  0348  0839               	movf	waitSEGStop@i+1,w
  2240  0349  00A9               	movwf	?_waitSEGStop+1
  2241  034A  0838               	movf	waitSEGStop@i,w
  2242  034B  00A8               	movwf	?_waitSEGStop
  2243  034C  2B95               	goto	l265
  2244  034D                     l2576:
  2245                           
  2246                           ;Q4.c: 488:         if(cpSW2 != RA1){
  2247  034D  1003               	clrc
  2248  034E  188C               	btfsc	12,1	;volatile
  2249  034F  1403               	setc
  2250  0350  3000               	movlw	0
  2251  0351  3D09               	addwfc	9,w
  2252  0352  00B0               	movwf	??_waitSEGStop
  2253  0353  01B1               	clrf	??_waitSEGStop+1
  2254  0354  0835               	movf	waitSEGStop@cpSW2+1,w
  2255  0355  0631               	xorwf	??_waitSEGStop+1,w
  2256  0356  1D03               	skipz
  2257  0357  2B5A               	goto	u2345
  2258  0358  0834               	movf	waitSEGStop@cpSW2,w
  2259  0359  0630               	xorwf	??_waitSEGStop,w
  2260  035A                     u2345:
  2261  035A  1903               	skipnz
  2262  035B  2B5D               	goto	u2341
  2263  035C  2B5E               	goto	u2340
  2264  035D                     u2341:
  2265  035D  2B63               	goto	l2586
  2266  035E                     u2340:
  2267  035E                     l2578:
  2268                           
  2269                           ;Q4.c: 489:             if((0b010 & dousa) == 0b010){
  2270  035E  1CAE               	btfss	waitSEGStop@dousa,1
  2271  035F  2B61               	goto	u2351
  2272  0360  2B62               	goto	u2350
  2273  0361                     u2351:
  2274  0361  2B63               	goto	l2586
  2275  0362                     u2350:
  2276  0362  2B40               	goto	l2570
  2277  0363                     l2586:
  2278                           
  2279                           ;Q4.c: 495:         if(((flag_sw3==1)&&(flag_R==1))){
  2280  0363  036A               	decf	_flag_sw3,w
  2281  0364  046B               	iorwf	_flag_sw3+1,w
  2282  0365  1D03               	btfss	3,2
  2283  0366  2B68               	goto	u2361
  2284  0367  2B69               	goto	u2360
  2285  0368                     u2361:
  2286  0368  2B78               	goto	l2600
  2287  0369                     u2360:
  2288  0369                     l2588:
  2289  0369  0368               	decf	_flag_R,w
  2290  036A  0469               	iorwf	_flag_R+1,w
  2291  036B  1D03               	btfss	3,2
  2292  036C  2B6E               	goto	u2371
  2293  036D  2B6F               	goto	u2370
  2294  036E                     u2371:
  2295  036E  2B78               	goto	l2600
  2296  036F                     u2370:
  2297  036F                     l2590:
  2298                           
  2299                           ;Q4.c: 496:             if(RA2 != 0 && (0b001 & dousa) == 0b001){
  2300  036F  1D0C               	btfss	12,2	;volatile
  2301  0370  2B72               	goto	u2381
  2302  0371  2B73               	goto	u2380
  2303  0372                     u2381:
  2304  0372  2B78               	goto	l2600
  2305  0373                     u2380:
  2306  0373                     l2592:
  2307  0373  1C2E               	btfss	waitSEGStop@dousa,0
  2308  0374  2B76               	goto	u2391
  2309  0375  2B77               	goto	u2390
  2310  0376                     u2391:
  2311  0376  2B78               	goto	l2600
  2312  0377                     u2390:
  2313  0377  2B40               	goto	l2570
  2314  0378                     l2600:
  2315                           
  2316                           ;Q4.c: 502:         if(cpSW3 != RA2){
  2317  0378  1003               	clrc
  2318  0379  190C               	btfsc	12,2	;volatile
  2319  037A  1403               	setc
  2320  037B  3000               	movlw	0
  2321  037C  3D09               	addwfc	9,w
  2322  037D  00B0               	movwf	??_waitSEGStop
  2323  037E  01B1               	clrf	??_waitSEGStop+1
  2324  037F  0837               	movf	waitSEGStop@cpSW3+1,w
  2325  0380  0631               	xorwf	??_waitSEGStop+1,w
  2326  0381  1D03               	skipz
  2327  0382  2B85               	goto	u2405
  2328  0383  0836               	movf	waitSEGStop@cpSW3,w
  2329  0384  0630               	xorwf	??_waitSEGStop,w
  2330  0385                     u2405:
  2331  0385  1903               	skipnz
  2332  0386  2B88               	goto	u2401
  2333  0387  2B89               	goto	u2400
  2334  0388                     u2401:
  2335  0388  2B8E               	goto	l2608
  2336  0389                     u2400:
  2337  0389                     l2602:
  2338                           
  2339                           ;Q4.c: 503:             if((0b0001 & dousa) == 0b0001){
  2340  0389  1C2E               	btfss	waitSEGStop@dousa,0
  2341  038A  2B8C               	goto	u2411
  2342  038B  2B8D               	goto	u2410
  2343  038C                     u2411:
  2344  038C  2B8E               	goto	l2608
  2345  038D                     u2410:
  2346  038D  2B47               	goto	l2572
  2347  038E                     l2608:
  2348                           
  2349                           ;Q4.c: 508:     }
  2350  038E  3001               	movlw	1
  2351  038F  02B8               	subwf	waitSEGStop@i,f
  2352  0390  3000               	movlw	0
  2353  0391  3BB9               	subwfb	waitSEGStop@i+1,f
  2354  0392  2B0C               	goto	l2560
  2355  0393                     l2612:
  2356                           
  2357                           ;Q4.c: 510:     return 0;
  2358  0393  01A8               	clrf	?_waitSEGStop
  2359  0394  01A9               	clrf	?_waitSEGStop+1
  2360  0395                     l265:
  2361  0395  0008               	return
  2362  0396                     __end_of_waitSEGStop:
  2363                           
  2364                           	psect	text3
  2365  0220                     __ptext3:	
  2366 ;; *************** function _tact *****************
  2367 ;; Defined at:
  2368 ;;		line 346 in file "Q4.c"
  2369 ;; Parameters:    Size  Location     Type
  2370 ;;  mode            2    8[COMMON] unsigned short 
  2371 ;; Auto vars:     Size  Location     Type
  2372 ;;		None
  2373 ;; Return value:  Size  Location     Type
  2374 ;;                  1    wreg      void 
  2375 ;; Registers used:
  2376 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2377 ;; Tracked objects:
  2378 ;;		On entry : 0/0
  2379 ;;		On exit  : 0/0
  2380 ;;		Unchanged: 0/0
  2381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2382 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2385 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2386 ;;Total ram usage:        2 bytes
  2387 ;; Hardware stack levels used:    1
  2388 ;; Hardware stack levels required when called:    1
  2389 ;; This function calls:
  2390 ;;		_tactsw
  2391 ;; This function is called by:
  2392 ;;		_waitSEGStop
  2393 ;;		_kaisu
  2394 ;;		_motorStop
  2395 ;;		_buzzStop
  2396 ;; This function uses a non-reentrant model
  2397 ;;
  2398                           
  2399                           
  2400                           ;psect for function _tact
  2401  0220                     _tact:
  2402  0220                     l2384:	
  2403                           ;incstack = 0
  2404                           ; Regs used in _tact: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2405                           
  2406                           
  2407                           ;Q4.c: 346: void tact(unsigned short mode);Q4.c: 347: {;Q4.c: 348:     switch(mode){
  2408  0220  2A5A               	goto	l2412
  2409  0221                     l2386:
  2410                           
  2411                           ;Q4.c: 350:                 tactsw();
  2412  0221  3181  219D  3182   	fcall	_tactsw
  2413  0224                     l2388:
  2414                           
  2415                           ;Q4.c: 351:                 if(flag_sw3==0)flag_R=1;
  2416  0224  0020               	movlb	0	; select bank0
  2417  0225  086A               	movf	_flag_sw3,w
  2418  0226  046B               	iorwf	_flag_sw3+1,w
  2419  0227  1D03               	btfss	3,2
  2420  0228  2A2A               	goto	u2091
  2421  0229  2A2B               	goto	u2090
  2422  022A                     u2091:
  2423  022A  2A6A               	goto	l208
  2424  022B                     u2090:
  2425  022B                     l2390:
  2426  022B  3001               	movlw	1
  2427  022C  00E8               	movwf	_flag_R
  2428  022D  3000               	movlw	0
  2429  022E  00E9               	movwf	_flag_R+1
  2430  022F  2A6A               	goto	l208
  2431  0230                     l2392:
  2432                           
  2433                           ;Q4.c: 354:                 tactsw();
  2434  0230  3181  219D  3182   	fcall	_tactsw
  2435  0233                     l2394:
  2436                           
  2437                           ;Q4.c: 355:                 if(flag_sw3==1)flag_P=1;
  2438  0233  0020               	movlb	0	; select bank0
  2439  0234  036A               	decf	_flag_sw3,w
  2440  0235  046B               	iorwf	_flag_sw3+1,w
  2441  0236  1D03               	btfss	3,2
  2442  0237  2A39               	goto	u2101
  2443  0238  2A3A               	goto	u2100
  2444  0239                     u2101:
  2445  0239  2A6A               	goto	l208
  2446  023A                     u2100:
  2447  023A                     l2396:
  2448  023A  3001               	movlw	1
  2449  023B  00E6               	movwf	_flag_P
  2450  023C  3000               	movlw	0
  2451  023D  00E7               	movwf	_flag_P+1
  2452  023E  2A6A               	goto	l208
  2453  023F                     l2398:
  2454                           
  2455                           ;Q4.c: 358:                 tactsw();
  2456  023F  3181  219D  3182   	fcall	_tactsw
  2457  0242                     l2400:
  2458                           
  2459                           ;Q4.c: 359:                 if(flag_sw3==0)flag_R=1;
  2460  0242  0020               	movlb	0	; select bank0
  2461  0243  086A               	movf	_flag_sw3,w
  2462  0244  046B               	iorwf	_flag_sw3+1,w
  2463  0245  1D03               	btfss	3,2
  2464  0246  2A48               	goto	u2111
  2465  0247  2A49               	goto	u2110
  2466  0248                     u2111:
  2467  0248  2A4D               	goto	l2404
  2468  0249                     u2110:
  2469  0249                     l2402:
  2470  0249  3001               	movlw	1
  2471  024A  00E8               	movwf	_flag_R
  2472  024B  3000               	movlw	0
  2473  024C  00E9               	movwf	_flag_R+1
  2474  024D                     l2404:
  2475                           
  2476                           ;Q4.c: 360:                 if((flag_sw3==1)&&(flag_R==1))flag_P=1;
  2477  024D  036A               	decf	_flag_sw3,w
  2478  024E  046B               	iorwf	_flag_sw3+1,w
  2479  024F  1D03               	btfss	3,2
  2480  0250  2A52               	goto	u2121
  2481  0251  2A53               	goto	u2120
  2482  0252                     u2121:
  2483  0252  2A6A               	goto	l208
  2484  0253                     u2120:
  2485  0253                     l2406:
  2486  0253  0368               	decf	_flag_R,w
  2487  0254  0469               	iorwf	_flag_R+1,w
  2488  0255  1D03               	btfss	3,2
  2489  0256  2A58               	goto	u2131
  2490  0257  2A59               	goto	u2130
  2491  0258                     u2131:
  2492  0258  2A6A               	goto	l208
  2493  0259                     u2130:
  2494  0259  2A3A               	goto	l2396
  2495  025A                     l2412:
  2496                           
  2497                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2498                           ; Switch size 1, requested type "simple"
  2499                           ; Number of cases is 1, Range of values is 0 to 0
  2500                           ; switch strategies available:
  2501                           ; Name         Instructions Cycles
  2502                           ; simple_byte            4     3 (average)
  2503                           ; direct_byte            8     6 (fixed)
  2504                           ; jumptable            260     6 (fixed)
  2505                           ;	Chosen strategy is simple_byte
  2506  025A  0879               	movf	tact@mode+1,w
  2507  025B  3A00               	xorlw	0	; case 0
  2508  025C  1903               	skipnz
  2509  025D  2A5F               	goto	l3484
  2510  025E  2A6A               	goto	l208
  2511  025F                     l3484:
  2512                           
  2513                           ; Switch size 1, requested type "simple"
  2514                           ; Number of cases is 3, Range of values is 0 to 2
  2515                           ; switch strategies available:
  2516                           ; Name         Instructions Cycles
  2517                           ; simple_byte           10     6 (average)
  2518                           ; direct_byte           12     6 (fixed)
  2519                           ; jumptable            260     6 (fixed)
  2520                           ;	Chosen strategy is simple_byte
  2521  025F  0878               	movf	tact@mode,w
  2522  0260  3A00               	xorlw	0	; case 0
  2523  0261  1903               	skipnz
  2524  0262  2A21               	goto	l2386
  2525  0263  3A01               	xorlw	1	; case 1
  2526  0264  1903               	skipnz
  2527  0265  2A30               	goto	l2392
  2528  0266  3A03               	xorlw	3	; case 2
  2529  0267  1903               	skipnz
  2530  0268  2A3F               	goto	l2398
  2531  0269  2A6A               	goto	l208
  2532  026A                     l208:
  2533  026A  0008               	return
  2534  026B                     __end_of_tact:
  2535                           
  2536                           	psect	text4
  2537  019D                     __ptext4:	
  2538 ;; *************** function _tactsw *****************
  2539 ;; Defined at:
  2540 ;;		line 331 in file "Q4.c"
  2541 ;; Parameters:    Size  Location     Type
  2542 ;;		None
  2543 ;; Auto vars:     Size  Location     Type
  2544 ;;  a               2    6[COMMON] unsigned short 
  2545 ;;  c               2    4[COMMON] unsigned short 
  2546 ;;  b               2    2[COMMON] unsigned short 
  2547 ;; Return value:  Size  Location     Type
  2548 ;;                  1    wreg      void 
  2549 ;; Registers used:
  2550 ;;		wreg, status,2, status,0
  2551 ;; Tracked objects:
  2552 ;;		On entry : 0/0
  2553 ;;		On exit  : 0/0
  2554 ;;		Unchanged: 0/0
  2555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2557 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2558 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2559 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2560 ;;Total ram usage:        8 bytes
  2561 ;; Hardware stack levels used:    1
  2562 ;; This function calls:
  2563 ;;		Nothing
  2564 ;; This function is called by:
  2565 ;;		_tact
  2566 ;; This function uses a non-reentrant model
  2567 ;;
  2568                           
  2569                           
  2570                           ;psect for function _tactsw
  2571  019D                     _tactsw:
  2572  019D                     l2210:	
  2573                           ;incstack = 0
  2574                           ; Regs used in _tactsw: [wreg+status,2+status,0]
  2575                           
  2576                           
  2577                           ;Q4.c: 333:     unsigned short a,b,c;;Q4.c: 334:     b=c=0;
  2578  019D  01F4               	clrf	tactsw@c
  2579  019E  01F5               	clrf	tactsw@c+1
  2580  019F  01F2               	clrf	tactsw@b
  2581  01A0  01F3               	clrf	tactsw@b+1
  2582  01A1                     l2212:
  2583                           
  2584                           ;Q4.c: 336:             a=RA2;
  2585  01A1  1003               	clrc
  2586  01A2  0020               	movlb	0	; select bank0
  2587  01A3  190C               	btfsc	12,2	;volatile
  2588  01A4  1403               	setc
  2589  01A5  3000               	movlw	0
  2590  01A6  3D09               	addwfc	9,w
  2591  01A7  00F0               	movwf	??_tactsw
  2592  01A8  01F1               	clrf	??_tactsw+1
  2593  01A9  0870               	movf	??_tactsw,w
  2594  01AA  00F6               	movwf	tactsw@a
  2595  01AB  0871               	movf	??_tactsw+1,w
  2596  01AC  00F7               	movwf	tactsw@a+1
  2597  01AD                     l2214:
  2598                           
  2599                           ;Q4.c: 337:             if(b==a)++c;
  2600  01AD  0877               	movf	tactsw@a+1,w
  2601  01AE  0673               	xorwf	tactsw@b+1,w
  2602  01AF  1D03               	skipz
  2603  01B0  29B3               	goto	u1855
  2604  01B1  0876               	movf	tactsw@a,w
  2605  01B2  0672               	xorwf	tactsw@b,w
  2606  01B3                     u1855:
  2607  01B3  1D03               	skipz
  2608  01B4  29B6               	goto	u1851
  2609  01B5  29B7               	goto	u1850
  2610  01B6                     u1851:
  2611  01B6  29BC               	goto	l2218
  2612  01B7                     u1850:
  2613  01B7                     l2216:
  2614  01B7  3001               	movlw	1
  2615  01B8  07F4               	addwf	tactsw@c,f
  2616  01B9  3000               	movlw	0
  2617  01BA  3DF5               	addwfc	tactsw@c+1,f
  2618  01BB  29BE               	goto	l2220
  2619  01BC                     l2218:
  2620  01BC  01F4               	clrf	tactsw@c
  2621  01BD  01F5               	clrf	tactsw@c+1
  2622  01BE                     l2220:
  2623                           
  2624                           ;Q4.c: 339:             if(c>10){flag_sw3=(~a)&0x01;return;}
  2625  01BE  3000               	movlw	0
  2626  01BF  0275               	subwf	tactsw@c+1,w
  2627  01C0  300B               	movlw	11
  2628  01C1  1903               	skipnz
  2629  01C2  0274               	subwf	tactsw@c,w
  2630  01C3  1C03               	skipc
  2631  01C4  29C6               	goto	u1861
  2632  01C5  29C7               	goto	u1860
  2633  01C6                     u1861:
  2634  01C6  29D4               	goto	l2226
  2635  01C7                     u1860:
  2636  01C7                     l2222:
  2637  01C7  0877               	movf	tactsw@a+1,w
  2638  01C8  00F1               	movwf	??_tactsw+1
  2639  01C9  0876               	movf	tactsw@a,w
  2640  01CA  00F0               	movwf	??_tactsw
  2641  01CB  09F0               	comf	??_tactsw,f
  2642  01CC  09F1               	comf	??_tactsw+1,f
  2643  01CD  3001               	movlw	1
  2644  01CE  0570               	andwf	??_tactsw,w
  2645  01CF  00EA               	movwf	_flag_sw3
  2646  01D0  3000               	movlw	0
  2647  01D1  0571               	andwf	??_tactsw+1,w
  2648  01D2  00EB               	movwf	_flag_sw3+1
  2649  01D3  29D9               	goto	l193
  2650  01D4                     l2226:
  2651                           
  2652                           ;Q4.c: 340:             b=a;
  2653  01D4  0877               	movf	tactsw@a+1,w
  2654  01D5  00F3               	movwf	tactsw@b+1
  2655  01D6  0876               	movf	tactsw@a,w
  2656  01D7  00F2               	movwf	tactsw@b
  2657  01D8  29A1               	goto	l2212
  2658  01D9                     l193:
  2659  01D9  0008               	return
  2660  01DA                     __end_of_tactsw:
  2661                           
  2662                           	psect	text5
  2663  00FD                     __ptext5:	
  2664 ;; *************** function _fclr *****************
  2665 ;; Defined at:
  2666 ;;		line 369 in file "Q4.c"
  2667 ;; Parameters:    Size  Location     Type
  2668 ;;  flg             2    0[COMMON] unsigned short 
  2669 ;; Auto vars:     Size  Location     Type
  2670 ;;		None
  2671 ;; Return value:  Size  Location     Type
  2672 ;;                  1    wreg      void 
  2673 ;; Registers used:
  2674 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2675 ;; Tracked objects:
  2676 ;;		On entry : 0/0
  2677 ;;		On exit  : 0/0
  2678 ;;		Unchanged: 0/0
  2679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2680 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2683 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2684 ;;Total ram usage:        2 bytes
  2685 ;; Hardware stack levels used:    1
  2686 ;; This function calls:
  2687 ;;		Nothing
  2688 ;; This function is called by:
  2689 ;;		_waitSEGStop
  2690 ;;		_main
  2691 ;;		_kaisu
  2692 ;;		_motorStop
  2693 ;;		_buzzStop
  2694 ;; This function uses a non-reentrant model
  2695 ;;
  2696                           
  2697                           
  2698                           ;psect for function _fclr
  2699  00FD                     _fclr:
  2700  00FD                     l2418:	
  2701                           ;incstack = 0
  2702                           ; Regs used in _fclr: [wreg-fsr0h+status,2+status,0]
  2703                           
  2704                           
  2705                           ;Q4.c: 369: void fclr(unsigned short flg);Q4.c: 370: {;Q4.c: 371:     switch(flg){
  2706  00FD  290C               	goto	l2428
  2707  00FE                     l2420:
  2708                           
  2709                           ;Q4.c: 373:                     flag_R=0;
  2710  00FE  0020               	movlb	0	; select bank0
  2711  00FF  01E8               	clrf	_flag_R
  2712  0100  01E9               	clrf	_flag_R+1
  2713                           
  2714                           ;Q4.c: 374:                     break;
  2715  0101  291C               	goto	l217
  2716  0102                     l2422:
  2717                           
  2718                           ;Q4.c: 376:                     flag_P=0;
  2719  0102  0020               	movlb	0	; select bank0
  2720  0103  01E6               	clrf	_flag_P
  2721  0104  01E7               	clrf	_flag_P+1
  2722                           
  2723                           ;Q4.c: 377:                     break;
  2724  0105  291C               	goto	l217
  2725  0106                     l2424:
  2726                           
  2727                           ;Q4.c: 379:                     flag_P=flag_R=0;
  2728  0106  0020               	movlb	0	; select bank0
  2729  0107  01E8               	clrf	_flag_R
  2730  0108  01E9               	clrf	_flag_R+1
  2731  0109  01E6               	clrf	_flag_P
  2732  010A  01E7               	clrf	_flag_P+1
  2733                           
  2734                           ;Q4.c: 380:                     break;
  2735  010B  291C               	goto	l217
  2736  010C                     l2428:
  2737                           
  2738                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2739                           ; Switch size 1, requested type "simple"
  2740                           ; Number of cases is 1, Range of values is 0 to 0
  2741                           ; switch strategies available:
  2742                           ; Name         Instructions Cycles
  2743                           ; simple_byte            4     3 (average)
  2744                           ; direct_byte            8     6 (fixed)
  2745                           ; jumptable            260     6 (fixed)
  2746                           ;	Chosen strategy is simple_byte
  2747  010C  0871               	movf	fclr@flg+1,w
  2748  010D  3A00               	xorlw	0	; case 0
  2749  010E  1903               	skipnz
  2750  010F  2911               	goto	l3486
  2751  0110  291C               	goto	l217
  2752  0111                     l3486:
  2753                           
  2754                           ; Switch size 1, requested type "simple"
  2755                           ; Number of cases is 3, Range of values is 0 to 2
  2756                           ; switch strategies available:
  2757                           ; Name         Instructions Cycles
  2758                           ; simple_byte           10     6 (average)
  2759                           ; direct_byte           12     6 (fixed)
  2760                           ; jumptable            260     6 (fixed)
  2761                           ;	Chosen strategy is simple_byte
  2762  0111  0870               	movf	fclr@flg,w
  2763  0112  3A00               	xorlw	0	; case 0
  2764  0113  1903               	skipnz
  2765  0114  28FE               	goto	l2420
  2766  0115  3A01               	xorlw	1	; case 1
  2767  0116  1903               	skipnz
  2768  0117  2902               	goto	l2422
  2769  0118  3A03               	xorlw	3	; case 2
  2770  0119  1903               	skipnz
  2771  011A  2906               	goto	l2424
  2772  011B  291C               	goto	l217
  2773  011C                     l217:
  2774  011C  0008               	return
  2775  011D                     __end_of_fclr:
  2776                           
  2777                           	psect	text6
  2778  00DE                     __ptext6:	
  2779 ;; *************** function ___wmul *****************
  2780 ;; Defined at:
  2781 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  2782 ;; Parameters:    Size  Location     Type
  2783 ;;  multiplier      2    8[COMMON] unsigned int 
  2784 ;;  multiplicand    2   10[COMMON] unsigned int 
  2785 ;; Auto vars:     Size  Location     Type
  2786 ;;  product         2   12[COMMON] unsigned int 
  2787 ;; Return value:  Size  Location     Type
  2788 ;;                  2    8[COMMON] unsigned int 
  2789 ;; Registers used:
  2790 ;;		wreg, status,2, status,0
  2791 ;; Tracked objects:
  2792 ;;		On entry : 0/0
  2793 ;;		On exit  : 0/0
  2794 ;;		Unchanged: 0/0
  2795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2796 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2797 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2799 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2800 ;;Total ram usage:        6 bytes
  2801 ;; Hardware stack levels used:    1
  2802 ;; This function calls:
  2803 ;;		Nothing
  2804 ;; This function is called by:
  2805 ;;		_waitSEGStop
  2806 ;;		_main
  2807 ;;		_wait
  2808 ;;		_hen7
  2809 ;;		_hens
  2810 ;; This function uses a non-reentrant model
  2811 ;;
  2812                           
  2813                           
  2814                           ;psect for function ___wmul
  2815  00DE                     ___wmul:
  2816  00DE                     l2434:	
  2817                           ;incstack = 0
  2818                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2819                           
  2820  00DE  01FC               	clrf	___wmul@product
  2821  00DF  01FD               	clrf	___wmul@product+1
  2822  00E0                     l2436:
  2823  00E0  1C78               	btfss	___wmul@multiplier,0
  2824  00E1  28E3               	goto	u2141
  2825  00E2  28E4               	goto	u2140
  2826  00E3                     u2141:
  2827  00E3  28E8               	goto	l550
  2828  00E4                     u2140:
  2829  00E4                     l2438:
  2830  00E4  087A               	movf	___wmul@multiplicand,w
  2831  00E5  07FC               	addwf	___wmul@product,f
  2832  00E6  087B               	movf	___wmul@multiplicand+1,w
  2833  00E7  3DFD               	addwfc	___wmul@product+1,f
  2834  00E8                     l550:
  2835  00E8  3001               	movlw	1
  2836  00E9                     u2155:
  2837  00E9  35FA               	lslf	___wmul@multiplicand,f
  2838  00EA  0DFB               	rlf	___wmul@multiplicand+1,f
  2839  00EB  0B89               	decfsz	9,f
  2840  00EC  28E9               	goto	u2155
  2841  00ED                     l2440:
  2842  00ED  3001               	movlw	1
  2843  00EE                     u2165:
  2844  00EE  36F9               	lsrf	___wmul@multiplier+1,f
  2845  00EF  0CF8               	rrf	___wmul@multiplier,f
  2846  00F0  0B89               	decfsz	9,f
  2847  00F1  28EE               	goto	u2165
  2848  00F2                     l2442:
  2849  00F2  0878               	movf	___wmul@multiplier,w
  2850  00F3  0479               	iorwf	___wmul@multiplier+1,w
  2851  00F4  1D03               	btfss	3,2
  2852  00F5  28F7               	goto	u2171
  2853  00F6  28F8               	goto	u2170
  2854  00F7                     u2171:
  2855  00F7  28E0               	goto	l2436
  2856  00F8                     u2170:
  2857  00F8                     l2444:
  2858  00F8  087D               	movf	___wmul@product+1,w
  2859  00F9  00F9               	movwf	?___wmul+1
  2860  00FA  087C               	movf	___wmul@product,w
  2861  00FB  00F8               	movwf	?___wmul
  2862  00FC                     l552:
  2863  00FC  0008               	return
  2864  00FD                     __end_of___wmul:
  2865                           
  2866                           	psect	text7
  2867  0161                     __ptext7:	
  2868 ;; *************** function ___lwdiv *****************
  2869 ;; Defined at:
  2870 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\lwdiv.c"
  2871 ;; Parameters:    Size  Location     Type
  2872 ;;  divisor         2    0[COMMON] unsigned int 
  2873 ;;  dividend        2    2[COMMON] unsigned int 
  2874 ;; Auto vars:     Size  Location     Type
  2875 ;;  quotient        2    5[COMMON] unsigned int 
  2876 ;;  counter         1    7[COMMON] unsigned char 
  2877 ;; Return value:  Size  Location     Type
  2878 ;;                  2    0[COMMON] unsigned int 
  2879 ;; Registers used:
  2880 ;;		wreg, status,2, status,0
  2881 ;; Tracked objects:
  2882 ;;		On entry : 0/0
  2883 ;;		On exit  : 0/0
  2884 ;;		Unchanged: 0/0
  2885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2886 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2887 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2888 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2889 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2890 ;;Total ram usage:        8 bytes
  2891 ;; Hardware stack levels used:    1
  2892 ;; This function calls:
  2893 ;;		Nothing
  2894 ;; This function is called by:
  2895 ;;		_waitSEGStop
  2896 ;;		_waitSEG
  2897 ;; This function uses a non-reentrant model
  2898 ;;
  2899                           
  2900                           
  2901                           ;psect for function ___lwdiv
  2902  0161                     ___lwdiv:
  2903  0161                     l2448:	
  2904                           ;incstack = 0
  2905                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2906                           
  2907  0161  01F5               	clrf	___lwdiv@quotient
  2908  0162  01F6               	clrf	___lwdiv@quotient+1
  2909  0163                     l2450:
  2910  0163  0870               	movf	___lwdiv@divisor,w
  2911  0164  0471               	iorwf	___lwdiv@divisor+1,w
  2912  0165  1903               	btfsc	3,2
  2913  0166  2968               	goto	u2181
  2914  0167  2969               	goto	u2180
  2915  0168                     u2181:
  2916  0168  2998               	goto	l2470
  2917  0169                     u2180:
  2918  0169                     l2452:
  2919  0169  01F7               	clrf	___lwdiv@counter
  2920  016A  0AF7               	incf	___lwdiv@counter,f
  2921  016B  2975               	goto	l2458
  2922  016C                     l2454:
  2923  016C  3001               	movlw	1
  2924  016D                     u2195:
  2925  016D  35F0               	lslf	___lwdiv@divisor,f
  2926  016E  0DF1               	rlf	___lwdiv@divisor+1,f
  2927  016F  0B89               	decfsz	9,f
  2928  0170  296D               	goto	u2195
  2929  0171                     l2456:
  2930  0171  3001               	movlw	1
  2931  0172  00F4               	movwf	??___lwdiv
  2932  0173  0874               	movf	??___lwdiv,w
  2933  0174  07F7               	addwf	___lwdiv@counter,f
  2934  0175                     l2458:
  2935  0175  1FF1               	btfss	___lwdiv@divisor+1,7
  2936  0176  2978               	goto	u2201
  2937  0177  2979               	goto	u2200
  2938  0178                     u2201:
  2939  0178  296C               	goto	l2454
  2940  0179                     u2200:
  2941  0179                     l2460:
  2942  0179  3001               	movlw	1
  2943  017A                     u2215:
  2944  017A  35F5               	lslf	___lwdiv@quotient,f
  2945  017B  0DF6               	rlf	___lwdiv@quotient+1,f
  2946  017C  0B89               	decfsz	9,f
  2947  017D  297A               	goto	u2215
  2948  017E  0871               	movf	___lwdiv@divisor+1,w
  2949  017F  0273               	subwf	___lwdiv@dividend+1,w
  2950  0180  1D03               	skipz
  2951  0181  2984               	goto	u2225
  2952  0182  0870               	movf	___lwdiv@divisor,w
  2953  0183  0272               	subwf	___lwdiv@dividend,w
  2954  0184                     u2225:
  2955  0184  1C03               	skipc
  2956  0185  2987               	goto	u2221
  2957  0186  2988               	goto	u2220
  2958  0187                     u2221:
  2959  0187  298D               	goto	l2466
  2960  0188                     u2220:
  2961  0188                     l2462:
  2962  0188  0870               	movf	___lwdiv@divisor,w
  2963  0189  02F2               	subwf	___lwdiv@dividend,f
  2964  018A  0871               	movf	___lwdiv@divisor+1,w
  2965  018B  3BF3               	subwfb	___lwdiv@dividend+1,f
  2966  018C                     l2464:
  2967  018C  1475               	bsf	___lwdiv@quotient,0
  2968  018D                     l2466:
  2969  018D  3001               	movlw	1
  2970  018E                     u2235:
  2971  018E  36F1               	lsrf	___lwdiv@divisor+1,f
  2972  018F  0CF0               	rrf	___lwdiv@divisor,f
  2973  0190  0B89               	decfsz	9,f
  2974  0191  298E               	goto	u2235
  2975  0192                     l2468:
  2976  0192  3001               	movlw	1
  2977  0193  02F7               	subwf	___lwdiv@counter,f
  2978  0194  1D03               	btfss	3,2
  2979  0195  2997               	goto	u2241
  2980  0196  2998               	goto	u2240
  2981  0197                     u2241:
  2982  0197  2979               	goto	l2460
  2983  0198                     u2240:
  2984  0198                     l2470:
  2985  0198  0876               	movf	___lwdiv@quotient+1,w
  2986  0199  00F1               	movwf	?___lwdiv+1
  2987  019A  0875               	movf	___lwdiv@quotient,w
  2988  019B  00F0               	movwf	?___lwdiv
  2989  019C                     l830:
  2990  019C  0008               	return
  2991  019D                     __end_of___lwdiv:
  2992                           
  2993                           	psect	text8
  2994  00CB                     __ptext8:	
  2995 ;; *************** function _portinit *****************
  2996 ;; Defined at:
  2997 ;;		line 160 in file "Q4.c"
  2998 ;; Parameters:    Size  Location     Type
  2999 ;;		None
  3000 ;; Auto vars:     Size  Location     Type
  3001 ;;		None
  3002 ;; Return value:  Size  Location     Type
  3003 ;;                  1    wreg      void 
  3004 ;; Registers used:
  3005 ;;		wreg, status,2
  3006 ;; Tracked objects:
  3007 ;;		On entry : 0/0
  3008 ;;		On exit  : 0/0
  3009 ;;		Unchanged: 0/0
  3010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3015 ;;Total ram usage:        0 bytes
  3016 ;; Hardware stack levels used:    1
  3017 ;; This function calls:
  3018 ;;		Nothing
  3019 ;; This function is called by:
  3020 ;;		_main
  3021 ;; This function uses a non-reentrant model
  3022 ;;
  3023                           
  3024                           
  3025                           ;psect for function _portinit
  3026  00CB                     _portinit:
  3027  00CB                     l2474:	
  3028                           ;incstack = 0
  3029                           ; Regs used in _portinit: [wreg+status,2]
  3030                           
  3031                           
  3032                           ;Q4.c: 163:     ANSELA=0x00;
  3033  00CB  0023               	movlb	3	; select bank3
  3034  00CC  018C               	clrf	12	;volatile
  3035                           
  3036                           ;Q4.c: 164:     ANSELB=0x00;
  3037  00CD  018D               	clrf	13	;volatile
  3038  00CE                     l2476:
  3039                           
  3040                           ;Q4.c: 166:     PORTA=0x07;
  3041  00CE  3007               	movlw	7
  3042  00CF  0020               	movlb	0	; select bank0
  3043  00D0  008C               	movwf	12	;volatile
  3044  00D1                     l2478:
  3045                           
  3046                           ;Q4.c: 167:     TRISA=0x07;
  3047  00D1  3007               	movlw	7
  3048  00D2  0021               	movlb	1	; select bank1
  3049  00D3  008C               	movwf	12	;volatile
  3050                           
  3051                           ;Q4.c: 168:     PORTB=0x00;
  3052  00D4  0020               	movlb	0	; select bank0
  3053  00D5  018D               	clrf	13	;volatile
  3054                           
  3055                           ;Q4.c: 169:     TRISB=0x00;
  3056  00D6  0021               	movlb	1	; select bank1
  3057  00D7  018D               	clrf	13	;volatile
  3058  00D8                     l2480:
  3059                           
  3060                           ;Q4.c: 170:     PORTC=0x07;
  3061  00D8  3007               	movlw	7
  3062  00D9  0020               	movlb	0	; select bank0
  3063  00DA  008E               	movwf	14	;volatile
  3064  00DB                     l2482:
  3065                           
  3066                           ;Q4.c: 171:     TRISC=0x00;
  3067  00DB  0021               	movlb	1	; select bank1
  3068  00DC  018E               	clrf	14	;volatile
  3069  00DD                     l95:
  3070  00DD  0008               	return
  3071  00DE                     __end_of_portinit:
  3072                           
  3073                           	psect	text9
  3074  013D                     __ptext9:	
  3075 ;; *************** function _motor *****************
  3076 ;; Defined at:
  3077 ;;		line 513 in file "Q4.c"
  3078 ;; Parameters:    Size  Location     Type
  3079 ;;  kakudo          2    8[BANK0 ] int 
  3080 ;;  dig1data        2   10[BANK0 ] unsigned short 
  3081 ;;  dig2data        2   12[BANK0 ] unsigned short 
  3082 ;;  smdata          2   14[BANK0 ] unsigned short 
  3083 ;;  tr              2   16[BANK0 ] unsigned int 
  3084 ;; Auto vars:     Size  Location     Type
  3085 ;;  i               2   18[BANK0 ] int 
  3086 ;; Return value:  Size  Location     Type
  3087 ;;                  1    wreg      void 
  3088 ;; Registers used:
  3089 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3090 ;; Tracked objects:
  3091 ;;		On entry : 0/0
  3092 ;;		On exit  : 0/0
  3093 ;;		Unchanged: 0/0
  3094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3095 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3096 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3098 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3099 ;;Total ram usage:       12 bytes
  3100 ;; Hardware stack levels used:    1
  3101 ;; Hardware stack levels required when called:    1
  3102 ;; This function calls:
  3103 ;;		_dynam
  3104 ;; This function is called by:
  3105 ;;		_main
  3106 ;; This function uses a non-reentrant model
  3107 ;;
  3108                           
  3109                           
  3110                           ;psect for function _motor
  3111  013D                     _motor:
  3112  013D                     l2616:	
  3113                           ;incstack = 0
  3114                           ; Regs used in _motor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3115                           
  3116                           
  3117                           ;Q4.c: 515:     for(int i = kakudo;i>=0;i--){
  3118  013D  0020               	movlb	0	; select bank0
  3119  013E  0829               	movf	motor@kakudo+1,w
  3120  013F  00B3               	movwf	motor@i+1
  3121  0140  0828               	movf	motor@kakudo,w
  3122  0141  00B2               	movwf	motor@i
  3123  0142                     l2618:
  3124  0142  1FB3               	btfss	motor@i+1,7
  3125  0143  2945               	goto	u2421
  3126  0144  2946               	goto	u2420
  3127  0145                     u2421:
  3128  0145  2947               	goto	l2622
  3129  0146                     u2420:
  3130  0146  2960               	goto	l276
  3131  0147                     l2622:
  3132                           
  3133                           ;Q4.c: 516:         dynam(dig1data,dig2data,smdata,tr);
  3134  0147  082B               	movf	motor@dig1data+1,w
  3135  0148  00F1               	movwf	dynam@dig1data+1
  3136  0149  082A               	movf	motor@dig1data,w
  3137  014A  00F0               	movwf	dynam@dig1data
  3138  014B  082D               	movf	motor@dig2data+1,w
  3139  014C  00F3               	movwf	dynam@dig2data+1
  3140  014D  082C               	movf	motor@dig2data,w
  3141  014E  00F2               	movwf	dynam@dig2data
  3142  014F  082F               	movf	motor@smdata+1,w
  3143  0150  00F5               	movwf	dynam@smdata+1
  3144  0151  082E               	movf	motor@smdata,w
  3145  0152  00F4               	movwf	dynam@smdata
  3146  0153  0831               	movf	motor@tr+1,w
  3147  0154  00F7               	movwf	dynam@tr+1
  3148  0155  0830               	movf	motor@tr,w
  3149  0156  00F6               	movwf	dynam@tr
  3150  0157  3183  2396  3181   	fcall	_dynam
  3151  015A                     l2624:
  3152                           
  3153                           ;Q4.c: 517:     }
  3154  015A  30FF               	movlw	255
  3155  015B  0020               	movlb	0	; select bank0
  3156  015C  07B2               	addwf	motor@i,f
  3157  015D  30FF               	movlw	255
  3158  015E  3DB3               	addwfc	motor@i+1,f
  3159  015F  2942               	goto	l2618
  3160  0160                     l276:
  3161  0160  0008               	return
  3162  0161                     __end_of_motor:
  3163                           
  3164                           	psect	text10
  3165  0396                     __ptext10:	
  3166 ;; *************** function _dynam *****************
  3167 ;; Defined at:
  3168 ;;		line 206 in file "Q4.c"
  3169 ;; Parameters:    Size  Location     Type
  3170 ;;  dig1data        2    0[COMMON] unsigned short 
  3171 ;;  dig2data        2    2[COMMON] unsigned short 
  3172 ;;  smdata          2    4[COMMON] unsigned short 
  3173 ;;  tr              2    6[COMMON] unsigned int 
  3174 ;; Auto vars:     Size  Location     Type
  3175 ;;  ext             2    6[BANK0 ] unsigned short 
  3176 ;;  j               2    4[BANK0 ] unsigned int 
  3177 ;;  tm              2    2[BANK0 ] unsigned int 
  3178 ;;  smd             2    0[BANK0 ] unsigned short 
  3179 ;; Return value:  Size  Location     Type
  3180 ;;                  1    wreg      void 
  3181 ;; Registers used:
  3182 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3183 ;; Tracked objects:
  3184 ;;		On entry : 0/0
  3185 ;;		On exit  : 0/0
  3186 ;;		Unchanged: 0/0
  3187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3188 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3189 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3191 ;;      Totals:         8       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3192 ;;Total ram usage:       16 bytes
  3193 ;; Hardware stack levels used:    1
  3194 ;; This function calls:
  3195 ;;		Nothing
  3196 ;; This function is called by:
  3197 ;;		_waitSEGStop
  3198 ;;		_motor
  3199 ;;		_main
  3200 ;;		_clear
  3201 ;;		_waitSEG
  3202 ;;		_motorStop
  3203 ;; This function uses a non-reentrant model
  3204 ;;
  3205                           
  3206                           
  3207                           ;psect for function _dynam
  3208  0396                     _dynam:
  3209  0396                     l2228:	
  3210                           ;incstack = 0
  3211                           ; Regs used in _dynam: [wreg-fsr0h+status,2+status,0]
  3212                           
  3213  0396  0020               	movlb	0	; select bank0
  3214  0397  01A2               	clrf	dynam@tm
  3215  0398  01A3               	clrf	dynam@tm+1
  3216                           
  3217                           ;Q4.c: 209:     unsigned short ext=0,smd=0;
  3218  0399  01A6               	clrf	dynam@ext
  3219  039A  01A7               	clrf	dynam@ext+1
  3220  039B  01A0               	clrf	dynam@smd
  3221  039C  01A1               	clrf	dynam@smd+1
  3222  039D                     l2230:
  3223                           
  3224                           ;Q4.c: 210:     RC7=0;
  3225  039D  138E               	bcf	14,7	;volatile
  3226  039E                     l2232:
  3227                           
  3228                           ;Q4.c: 211:     PORTB=dig1data;
  3229  039E  0870               	movf	dynam@dig1data,w
  3230  039F  008D               	movwf	13	;volatile
  3231  03A0                     l2234:
  3232                           
  3233                           ;Q4.c: 212:     RC5=0;RC6=1;
  3234  03A0  128E               	bcf	14,5	;volatile
  3235  03A1                     l2236:
  3236  03A1  170E               	bsf	14,6	;volatile
  3237  03A2                     l2238:
  3238                           
  3239                           ;Q4.c: 213:     if(tr==5){tm=3000;}
  3240  03A2  3005               	movlw	5
  3241  03A3  0676               	xorwf	dynam@tr,w
  3242  03A4  0477               	iorwf	dynam@tr+1,w
  3243  03A5  1D03               	btfss	3,2
  3244  03A6  2BA8               	goto	u1871
  3245  03A7  2BA9               	goto	u1870
  3246  03A8                     u1871:
  3247  03A8  2BAE               	goto	l2242
  3248  03A9                     u1870:
  3249  03A9                     l2240:
  3250  03A9  30B8               	movlw	184
  3251  03AA  00A2               	movwf	dynam@tm
  3252  03AB  300B               	movlw	11
  3253  03AC  00A3               	movwf	dynam@tm+1
  3254  03AD  2BB2               	goto	l112
  3255  03AE                     l2242:
  3256  03AE  30E8               	movlw	232
  3257  03AF  00A2               	movwf	dynam@tm
  3258  03B0  3003               	movlw	3
  3259  03B1  00A3               	movwf	dynam@tm+1
  3260  03B2                     l112:
  3261                           
  3262                           ;Q4.c: 215:     for(j=tm;j>0;--j);
  3263  03B2  0823               	movf	dynam@tm+1,w
  3264  03B3  00A5               	movwf	dynam@j+1
  3265  03B4  0822               	movf	dynam@tm,w
  3266  03B5  00A4               	movwf	dynam@j
  3267  03B6                     l2244:
  3268  03B6  0824               	movf	dynam@j,w
  3269  03B7  0425               	iorwf	dynam@j+1,w
  3270  03B8  1D03               	btfss	3,2
  3271  03B9  2BBB               	goto	u1881
  3272  03BA  2BBC               	goto	u1880
  3273  03BB                     u1881:
  3274  03BB  2BBD               	goto	l2248
  3275  03BC                     u1880:
  3276  03BC  2BC2               	goto	l114
  3277  03BD                     l2248:
  3278  03BD  3001               	movlw	1
  3279  03BE  02A4               	subwf	dynam@j,f
  3280  03BF  3000               	movlw	0
  3281  03C0  3BA5               	subwfb	dynam@j+1,f
  3282  03C1  2BB6               	goto	l2244
  3283  03C2                     l114:
  3284                           
  3285                           ;Q4.c: 216:     RC5=0;RC6=0;
  3286  03C2  128E               	bcf	14,5	;volatile
  3287  03C3  130E               	bcf	14,6	;volatile
  3288  03C4                     l2252:
  3289                           
  3290                           ;Q4.c: 217:     PORTB=dig2data;
  3291  03C4  0872               	movf	dynam@dig2data,w
  3292  03C5  008D               	movwf	13	;volatile
  3293  03C6                     l2254:
  3294                           
  3295                           ;Q4.c: 218:     RC6=0;RC5=1;
  3296  03C6  130E               	bcf	14,6	;volatile
  3297  03C7                     l2256:
  3298  03C7  168E               	bsf	14,5	;volatile
  3299  03C8                     l2258:
  3300                           
  3301                           ;Q4.c: 219:     if(tr==5){tm=3000;}
  3302  03C8  3005               	movlw	5
  3303  03C9  0676               	xorwf	dynam@tr,w
  3304  03CA  0477               	iorwf	dynam@tr+1,w
  3305  03CB  1D03               	btfss	3,2
  3306  03CC  2BCE               	goto	u1891
  3307  03CD  2BCF               	goto	u1890
  3308  03CE                     u1891:
  3309  03CE  2BD4               	goto	l2262
  3310  03CF                     u1890:
  3311  03CF                     l2260:
  3312  03CF  30B8               	movlw	184
  3313  03D0  00A2               	movwf	dynam@tm
  3314  03D1  300B               	movlw	11
  3315  03D2  00A3               	movwf	dynam@tm+1
  3316  03D3  2BD8               	goto	l116
  3317  03D4                     l2262:
  3318  03D4  30E8               	movlw	232
  3319  03D5  00A2               	movwf	dynam@tm
  3320  03D6  3003               	movlw	3
  3321  03D7  00A3               	movwf	dynam@tm+1
  3322  03D8                     l116:
  3323                           
  3324                           ;Q4.c: 221:     for(j=tm;j>0;--j);
  3325  03D8  0823               	movf	dynam@tm+1,w
  3326  03D9  00A5               	movwf	dynam@j+1
  3327  03DA  0822               	movf	dynam@tm,w
  3328  03DB  00A4               	movwf	dynam@j
  3329  03DC                     l2264:
  3330  03DC  0824               	movf	dynam@j,w
  3331  03DD  0425               	iorwf	dynam@j+1,w
  3332  03DE  1D03               	btfss	3,2
  3333  03DF  2BE1               	goto	u1901
  3334  03E0  2BE2               	goto	u1900
  3335  03E1                     u1901:
  3336  03E1  2BE3               	goto	l2268
  3337  03E2                     u1900:
  3338  03E2  2BE8               	goto	l118
  3339  03E3                     l2268:
  3340  03E3  3001               	movlw	1
  3341  03E4  02A4               	subwf	dynam@j,f
  3342  03E5  3000               	movlw	0
  3343  03E6  3BA5               	subwfb	dynam@j+1,f
  3344  03E7  2BDC               	goto	l2264
  3345  03E8                     l118:
  3346                           
  3347                           ;Q4.c: 222:     RC5=0;RC6=0;
  3348  03E8  128E               	bcf	14,5	;volatile
  3349  03E9  130E               	bcf	14,6	;volatile
  3350                           
  3351                           ;Q4.c: 223:     switch(smdata){
  3352  03EA  2CEF               	goto	l2378
  3353  03EB                     l2272:
  3354                           
  3355                           ;Q4.c: 225:                 PORTB=0x00;smd=(0x01|0x02|0x04|0x08|0x10|0x20);
  3356  03EB  018D               	clrf	13	;volatile
  3357  03EC                     l2274:
  3358  03EC                     l2276:
  3359                           
  3360                           ;Q4.c: 226:                 RC7=0;RC7=1;RC7=0;
  3361  03EC  138E               	bcf	14,7	;volatile
  3362  03ED                     l2278:
  3363  03ED  178E               	bsf	14,7	;volatile
  3364  03EE                     l2280:
  3365  03EE  138E               	bcf	14,7	;volatile
  3366                           
  3367                           ;Q4.c: 227:                 break;
  3368  03EF  2CFF               	goto	l135
  3369  03F0                     l2282:
  3370                           
  3371                           ;Q4.c: 229:                 if(flg==1)cw=0;flg=0;
  3372  03F0  0364               	decf	_flg,w
  3373  03F1  0465               	iorwf	_flg+1,w
  3374  03F2  1D03               	btfss	3,2
  3375  03F3  2BF5               	goto	u1911
  3376  03F4  2BF6               	goto	u1910
  3377  03F5                     u1911:
  3378  03F5  2BF8               	goto	l123
  3379  03F6                     u1910:
  3380  03F6                     l2284:
  3381  03F6  01E2               	clrf	_cw
  3382  03F7  01E3               	clrf	_cw+1
  3383  03F8                     l123:
  3384  03F8  01E4               	clrf	_flg
  3385  03F9  01E5               	clrf	_flg+1
  3386  03FA                     l2286:
  3387                           
  3388                           ;Q4.c: 230:                 if((cw==0)&&(ext==0)){cw=1;ccw=0;ext=1;PORTB=smd=0x09;}
  3389  03FA  0862               	movf	_cw,w
  3390  03FB  0463               	iorwf	_cw+1,w
  3391  03FC  1D03               	btfss	3,2
  3392  03FD  2BFF               	goto	u1921
  3393  03FE  2C00               	goto	u1920
  3394  03FF                     u1921:
  3395  03FF  2C16               	goto	l2298
  3396  0400                     u1920:
  3397  0400                     l2288:
  3398  0400  0826               	movf	dynam@ext,w
  3399  0401  0427               	iorwf	dynam@ext+1,w
  3400  0402  1D03               	btfss	3,2
  3401  0403  2C05               	goto	u1931
  3402  0404  2C06               	goto	u1930
  3403  0405                     u1931:
  3404  0405  2C16               	goto	l2298
  3405  0406                     u1930:
  3406  0406                     l2290:
  3407  0406  3001               	movlw	1
  3408  0407  00E2               	movwf	_cw
  3409  0408  3000               	movlw	0
  3410  0409  00E3               	movwf	_cw+1
  3411  040A                     l2292:
  3412  040A  01E0               	clrf	_ccw
  3413  040B  01E1               	clrf	_ccw+1
  3414  040C                     l2294:
  3415  040C  3001               	movlw	1
  3416  040D  00A6               	movwf	dynam@ext
  3417  040E  3000               	movlw	0
  3418  040F  00A7               	movwf	dynam@ext+1
  3419  0410                     l2296:
  3420  0410  3009               	movlw	9
  3421  0411  00A0               	movwf	dynam@smd
  3422  0412  3000               	movlw	0
  3423  0413  00A1               	movwf	dynam@smd+1
  3424  0414  0820               	movf	dynam@smd,w
  3425  0415  008D               	movwf	13	;volatile
  3426  0416                     l2298:
  3427                           
  3428                           ;Q4.c: 231:                 if((cw==1)&&(ext==0)){cw=2;ccw=3;ext=1;PORTB=smd=0x0C;}
  3429  0416  0362               	decf	_cw,w
  3430  0417  0463               	iorwf	_cw+1,w
  3431  0418  1D03               	btfss	3,2
  3432  0419  2C1B               	goto	u1941
  3433  041A  2C1C               	goto	u1940
  3434  041B                     u1941:
  3435  041B  2C34               	goto	l2304
  3436  041C                     u1940:
  3437  041C                     l2300:
  3438  041C  0826               	movf	dynam@ext,w
  3439  041D  0427               	iorwf	dynam@ext+1,w
  3440  041E  1D03               	btfss	3,2
  3441  041F  2C21               	goto	u1951
  3442  0420  2C22               	goto	u1950
  3443  0421                     u1951:
  3444  0421  2C34               	goto	l2304
  3445  0422                     u1950:
  3446  0422                     l2302:
  3447  0422  3002               	movlw	2
  3448  0423  00E2               	movwf	_cw
  3449  0424  3000               	movlw	0
  3450  0425  00E3               	movwf	_cw+1
  3451  0426  3003               	movlw	3
  3452  0427  00E0               	movwf	_ccw
  3453  0428  3000               	movlw	0
  3454  0429  00E1               	movwf	_ccw+1
  3455  042A  3001               	movlw	1
  3456  042B  00A6               	movwf	dynam@ext
  3457  042C  3000               	movlw	0
  3458  042D  00A7               	movwf	dynam@ext+1
  3459  042E  300C               	movlw	12
  3460  042F  00A0               	movwf	dynam@smd
  3461  0430  3000               	movlw	0
  3462  0431  00A1               	movwf	dynam@smd+1
  3463  0432  0820               	movf	dynam@smd,w
  3464  0433  008D               	movwf	13	;volatile
  3465  0434                     l2304:
  3466                           
  3467                           ;Q4.c: 232:                 if((cw==2)&&(ext==0)){cw=3;ccw=2;ext=1;PORTB=smd=0x06;}
  3468  0434  3002               	movlw	2
  3469  0435  0662               	xorwf	_cw,w
  3470  0436  0463               	iorwf	_cw+1,w
  3471  0437  1D03               	btfss	3,2
  3472  0438  2C3A               	goto	u1961
  3473  0439  2C3B               	goto	u1960
  3474  043A                     u1961:
  3475  043A  2C53               	goto	l2310
  3476  043B                     u1960:
  3477  043B                     l2306:
  3478  043B  0826               	movf	dynam@ext,w
  3479  043C  0427               	iorwf	dynam@ext+1,w
  3480  043D  1D03               	btfss	3,2
  3481  043E  2C40               	goto	u1971
  3482  043F  2C41               	goto	u1970
  3483  0440                     u1971:
  3484  0440  2C53               	goto	l2310
  3485  0441                     u1970:
  3486  0441                     l2308:
  3487  0441  3003               	movlw	3
  3488  0442  00E2               	movwf	_cw
  3489  0443  3000               	movlw	0
  3490  0444  00E3               	movwf	_cw+1
  3491  0445  3002               	movlw	2
  3492  0446  00E0               	movwf	_ccw
  3493  0447  3000               	movlw	0
  3494  0448  00E1               	movwf	_ccw+1
  3495  0449  3001               	movlw	1
  3496  044A  00A6               	movwf	dynam@ext
  3497  044B  3000               	movlw	0
  3498  044C  00A7               	movwf	dynam@ext+1
  3499  044D  3006               	movlw	6
  3500  044E  00A0               	movwf	dynam@smd
  3501  044F  3000               	movlw	0
  3502  0450  00A1               	movwf	dynam@smd+1
  3503  0451  0820               	movf	dynam@smd,w
  3504  0452  008D               	movwf	13	;volatile
  3505  0453                     l2310:
  3506                           
  3507                           ;Q4.c: 233:                 if((cw==3)&&(ext==0)){cw=0;ccw=1;ext=1;PORTB=smd=0x03;}
  3508  0453  3003               	movlw	3
  3509  0454  0662               	xorwf	_cw,w
  3510  0455  0463               	iorwf	_cw+1,w
  3511  0456  1D03               	btfss	3,2
  3512  0457  2C59               	goto	u1981
  3513  0458  2C5A               	goto	u1980
  3514  0459                     u1981:
  3515  0459  2BEC               	goto	l2276
  3516  045A                     u1980:
  3517  045A                     l2312:
  3518  045A  0826               	movf	dynam@ext,w
  3519  045B  0427               	iorwf	dynam@ext+1,w
  3520  045C  1D03               	btfss	3,2
  3521  045D  2C5F               	goto	u1991
  3522  045E  2C60               	goto	u1990
  3523  045F                     u1991:
  3524  045F  2BEC               	goto	l2276
  3525  0460                     u1990:
  3526  0460                     l2314:
  3527  0460  01E2               	clrf	_cw
  3528  0461  01E3               	clrf	_cw+1
  3529  0462                     l2316:
  3530  0462  3001               	movlw	1
  3531  0463  00E0               	movwf	_ccw
  3532  0464  3000               	movlw	0
  3533  0465  00E1               	movwf	_ccw+1
  3534  0466                     l2318:
  3535  0466                     l2320:
  3536  0466  3003               	movlw	3
  3537  0467  00A0               	movwf	dynam@smd
  3538  0468  3000               	movlw	0
  3539  0469  00A1               	movwf	dynam@smd+1
  3540  046A  0820               	movf	dynam@smd,w
  3541  046B  008D               	movwf	13	;volatile
  3542  046C  2BEC               	goto	l2276
  3543  046D                     l2328:
  3544                           
  3545                           ;Q4.c: 237:                 if(flg==1)ccw=0;flg=0;
  3546  046D  0364               	decf	_flg,w
  3547  046E  0465               	iorwf	_flg+1,w
  3548  046F  1D03               	btfss	3,2
  3549  0470  2C72               	goto	u2001
  3550  0471  2C73               	goto	u2000
  3551  0472                     u2001:
  3552  0472  2C75               	goto	l129
  3553  0473                     u2000:
  3554  0473                     l2330:
  3555  0473  01E0               	clrf	_ccw
  3556  0474  01E1               	clrf	_ccw+1
  3557  0475                     l129:
  3558  0475  01E4               	clrf	_flg
  3559  0476  01E5               	clrf	_flg+1
  3560  0477                     l2332:
  3561                           
  3562                           ;Q4.c: 238:                 if((ccw==0)&&(ext==0)){ccw=1;cw=0;ext=1;PORTB=smd=0x03;}
  3563  0477  0860               	movf	_ccw,w
  3564  0478  0461               	iorwf	_ccw+1,w
  3565  0479  1D03               	btfss	3,2
  3566  047A  2C7C               	goto	u2011
  3567  047B  2C7D               	goto	u2010
  3568  047C                     u2011:
  3569  047C  2C93               	goto	l2344
  3570  047D                     u2010:
  3571  047D                     l2334:
  3572  047D  0826               	movf	dynam@ext,w
  3573  047E  0427               	iorwf	dynam@ext+1,w
  3574  047F  1D03               	btfss	3,2
  3575  0480  2C82               	goto	u2021
  3576  0481  2C83               	goto	u2020
  3577  0482                     u2021:
  3578  0482  2C93               	goto	l2344
  3579  0483                     u2020:
  3580  0483                     l2336:
  3581  0483  3001               	movlw	1
  3582  0484  00E0               	movwf	_ccw
  3583  0485  3000               	movlw	0
  3584  0486  00E1               	movwf	_ccw+1
  3585  0487                     l2338:
  3586  0487  01E2               	clrf	_cw
  3587  0488  01E3               	clrf	_cw+1
  3588  0489                     l2340:
  3589  0489  3001               	movlw	1
  3590  048A  00A6               	movwf	dynam@ext
  3591  048B  3000               	movlw	0
  3592  048C  00A7               	movwf	dynam@ext+1
  3593  048D                     l2342:
  3594  048D  3003               	movlw	3
  3595  048E  00A0               	movwf	dynam@smd
  3596  048F  3000               	movlw	0
  3597  0490  00A1               	movwf	dynam@smd+1
  3598  0491  0820               	movf	dynam@smd,w
  3599  0492  008D               	movwf	13	;volatile
  3600  0493                     l2344:
  3601                           
  3602                           ;Q4.c: 239:                 if((ccw==1)&&(ext==0)){ccw=2;cw=3;ext=1;PORTB=smd=0x06;}
  3603  0493  0360               	decf	_ccw,w
  3604  0494  0461               	iorwf	_ccw+1,w
  3605  0495  1D03               	btfss	3,2
  3606  0496  2C98               	goto	u2031
  3607  0497  2C99               	goto	u2030
  3608  0498                     u2031:
  3609  0498  2CB1               	goto	l2350
  3610  0499                     u2030:
  3611  0499                     l2346:
  3612  0499  0826               	movf	dynam@ext,w
  3613  049A  0427               	iorwf	dynam@ext+1,w
  3614  049B  1D03               	btfss	3,2
  3615  049C  2C9E               	goto	u2041
  3616  049D  2C9F               	goto	u2040
  3617  049E                     u2041:
  3618  049E  2CB1               	goto	l2350
  3619  049F                     u2040:
  3620  049F                     l2348:
  3621  049F  3002               	movlw	2
  3622  04A0  00E0               	movwf	_ccw
  3623  04A1  3000               	movlw	0
  3624  04A2  00E1               	movwf	_ccw+1
  3625  04A3  3003               	movlw	3
  3626  04A4  00E2               	movwf	_cw
  3627  04A5  3000               	movlw	0
  3628  04A6  00E3               	movwf	_cw+1
  3629  04A7  3001               	movlw	1
  3630  04A8  00A6               	movwf	dynam@ext
  3631  04A9  3000               	movlw	0
  3632  04AA  00A7               	movwf	dynam@ext+1
  3633  04AB  3006               	movlw	6
  3634  04AC  00A0               	movwf	dynam@smd
  3635  04AD  3000               	movlw	0
  3636  04AE  00A1               	movwf	dynam@smd+1
  3637  04AF  0820               	movf	dynam@smd,w
  3638  04B0  008D               	movwf	13	;volatile
  3639  04B1                     l2350:
  3640                           
  3641                           ;Q4.c: 240:                 if((ccw==2)&&(ext==0)){ccw=3;cw=2;ext=1;PORTB=smd=0x0C;}
  3642  04B1  3002               	movlw	2
  3643  04B2  0660               	xorwf	_ccw,w
  3644  04B3  0461               	iorwf	_ccw+1,w
  3645  04B4  1D03               	btfss	3,2
  3646  04B5  2CB7               	goto	u2051
  3647  04B6  2CB8               	goto	u2050
  3648  04B7                     u2051:
  3649  04B7  2CD0               	goto	l2356
  3650  04B8                     u2050:
  3651  04B8                     l2352:
  3652  04B8  0826               	movf	dynam@ext,w
  3653  04B9  0427               	iorwf	dynam@ext+1,w
  3654  04BA  1D03               	btfss	3,2
  3655  04BB  2CBD               	goto	u2061
  3656  04BC  2CBE               	goto	u2060
  3657  04BD                     u2061:
  3658  04BD  2CD0               	goto	l2356
  3659  04BE                     u2060:
  3660  04BE                     l2354:
  3661  04BE  3003               	movlw	3
  3662  04BF  00E0               	movwf	_ccw
  3663  04C0  3000               	movlw	0
  3664  04C1  00E1               	movwf	_ccw+1
  3665  04C2  3002               	movlw	2
  3666  04C3  00E2               	movwf	_cw
  3667  04C4  3000               	movlw	0
  3668  04C5  00E3               	movwf	_cw+1
  3669  04C6  3001               	movlw	1
  3670  04C7  00A6               	movwf	dynam@ext
  3671  04C8  3000               	movlw	0
  3672  04C9  00A7               	movwf	dynam@ext+1
  3673  04CA  300C               	movlw	12
  3674  04CB  00A0               	movwf	dynam@smd
  3675  04CC  3000               	movlw	0
  3676  04CD  00A1               	movwf	dynam@smd+1
  3677  04CE  0820               	movf	dynam@smd,w
  3678  04CF  008D               	movwf	13	;volatile
  3679  04D0                     l2356:
  3680                           
  3681                           ;Q4.c: 241:                 if((ccw==3)&&(ext==0)){ccw=0;cw=1;ext=1;PORTB=smd=0x09;}
  3682  04D0  3003               	movlw	3
  3683  04D1  0660               	xorwf	_ccw,w
  3684  04D2  0461               	iorwf	_ccw+1,w
  3685  04D3  1D03               	btfss	3,2
  3686  04D4  2CD6               	goto	u2071
  3687  04D5  2CD7               	goto	u2070
  3688  04D6                     u2071:
  3689  04D6  2BEC               	goto	l2276
  3690  04D7                     u2070:
  3691  04D7                     l2358:
  3692  04D7  0826               	movf	dynam@ext,w
  3693  04D8  0427               	iorwf	dynam@ext+1,w
  3694  04D9  1D03               	btfss	3,2
  3695  04DA  2CDC               	goto	u2081
  3696  04DB  2CDD               	goto	u2080
  3697  04DC                     u2081:
  3698  04DC  2BEC               	goto	l2276
  3699  04DD                     u2080:
  3700  04DD                     l2360:
  3701  04DD  01E0               	clrf	_ccw
  3702  04DE  01E1               	clrf	_ccw+1
  3703  04DF                     l2362:
  3704  04DF  3001               	movlw	1
  3705  04E0  00E2               	movwf	_cw
  3706  04E1  3000               	movlw	0
  3707  04E2  00E3               	movwf	_cw+1
  3708  04E3                     l2364:
  3709  04E3                     l2366:
  3710  04E3  3009               	movlw	9
  3711  04E4  00A0               	movwf	dynam@smd
  3712  04E5  3000               	movlw	0
  3713  04E6  00A1               	movwf	dynam@smd+1
  3714  04E7  0820               	movf	dynam@smd,w
  3715  04E8  008D               	movwf	13	;volatile
  3716  04E9  2BEC               	goto	l2276
  3717  04EA                     l2374:
  3718                           
  3719                           ;Q4.c: 245:                 cw=ccw=0;
  3720  04EA  01E0               	clrf	_ccw
  3721  04EB  01E1               	clrf	_ccw+1
  3722  04EC  01E2               	clrf	_cw
  3723  04ED  01E3               	clrf	_cw+1
  3724                           
  3725                           ;Q4.c: 246:                 break;
  3726  04EE  2CFF               	goto	l135
  3727  04EF                     l2378:
  3728                           
  3729                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3730                           ; Switch size 1, requested type "simple"
  3731                           ; Number of cases is 1, Range of values is 0 to 0
  3732                           ; switch strategies available:
  3733                           ; Name         Instructions Cycles
  3734                           ; simple_byte            4     3 (average)
  3735                           ; direct_byte            8     6 (fixed)
  3736                           ; jumptable            260     6 (fixed)
  3737                           ;	Chosen strategy is simple_byte
  3738  04EF  0875               	movf	dynam@smdata+1,w
  3739  04F0  3A00               	xorlw	0	; case 0
  3740  04F1  1903               	skipnz
  3741  04F2  2CF4               	goto	l3488
  3742  04F3  2CEA               	goto	l2374
  3743  04F4                     l3488:
  3744                           
  3745                           ; Switch size 1, requested type "simple"
  3746                           ; Number of cases is 3, Range of values is 0 to 2
  3747                           ; switch strategies available:
  3748                           ; Name         Instructions Cycles
  3749                           ; simple_byte           10     6 (average)
  3750                           ; direct_byte           12     6 (fixed)
  3751                           ; jumptable            260     6 (fixed)
  3752                           ;	Chosen strategy is simple_byte
  3753  04F4  0874               	movf	dynam@smdata,w
  3754  04F5  3A00               	xorlw	0	; case 0
  3755  04F6  1903               	skipnz
  3756  04F7  2BEB               	goto	l2272
  3757  04F8  3A01               	xorlw	1	; case 1
  3758  04F9  1903               	skipnz
  3759  04FA  2BF0               	goto	l2282
  3760  04FB  3A03               	xorlw	3	; case 2
  3761  04FC  1903               	skipnz
  3762  04FD  2C6D               	goto	l2328
  3763  04FE  2CEA               	goto	l2374
  3764  04FF                     l135:
  3765  04FF  0008               	return
  3766  0500                     __end_of_dynam:
  3767  007E                     btemp	set	126	;btemp
  3768  007E                     wtemp0	set	126
  3769                           
  3770                           	psect	config
  3771                           
  3772                           ;Config register CONFIG1 @ 0x8007
  3773                           ;	Oscillator Selection
  3774                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  3775                           ;	Watchdog Timer Enable
  3776                           ;	WDTE = OFF, WDT disabled
  3777                           ;	Power-up Timer Enable
  3778                           ;	PWRTE = OFF, PWRT disabled
  3779                           ;	MCLR Pin Function Select
  3780                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  3781                           ;	Flash Program Memory Code Protection
  3782                           ;	CP = OFF, Program memory code protection is disabled
  3783                           ;	Data Memory Code Protection
  3784                           ;	CPD = OFF, Data memory code protection is disabled
  3785                           ;	Brown-out Reset Enable
  3786                           ;	BOREN = OFF, Brown-out Reset disabled
  3787                           ;	Clock Out Enable
  3788                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  3789                           ;	Internal/External Switchover
  3790                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3791                           ;	Fail-Safe Clock Monitor Enable
  3792                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3793  8007                     	org	32775
  3794  8007  09E4               	dw	2532
  3795                           
  3796                           ;Config register CONFIG2 @ 0x8008
  3797                           ;	Flash Memory Self-Write Protection
  3798                           ;	WRT = OFF, Write protection off
  3799                           ;	Voltage Regulator Capacitor Enable
  3800                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
  3801                           ;	PLL Enable
  3802                           ;	PLLEN = OFF, 4x PLL disabled
  3803                           ;	Stack Overflow/Underflow Reset Enable
  3804                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  3805                           ;	Brown-out Reset Voltage Selection
  3806                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  3807                           ;	Low-Voltage Programming Enable
  3808                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  3809  8008                     	org	32776
  3810  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    0
    Data        180
    BSS         36
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     50      80
    BANK1            80      0      76
    BANK2            80      0      78
    BANK3            80      0      32
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___wmul
    _waitSEGStop->___wmul
    _tact->_tactsw
    ___wmul->___lwdiv
    _motor->___wmul

Critical Paths under _main in BANK0

    _main->_waitSEGStop
    _waitSEGStop->_dynam
    _motor->_dynam

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                24    24      0   19760
                                             26 BANK0     24    24      0
                             ___wmul
                              _dynam
                               _fclr
                              _motor
                           _portinit
                        _waitSEGStop
                             _zenoff
 ---------------------------------------------------------------------------------
 (1) _zenoff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _waitSEGStop                                         18    10      8    9091
                                              8 BANK0     18    10      8
                            ___lwdiv
                             ___wmul
                              _dynam
                               _fclr
                               _tact
 ---------------------------------------------------------------------------------
 (2) _tact                                                 2     0      2     746
                                              8 COMMON     2     0      2
                             _tactsw
 ---------------------------------------------------------------------------------
 (3) _tactsw                                               8     8      0     116
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 (2) _fclr                                                 2     0      2    1618
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1612
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     618
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _portinit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motor                                               12     2     10    4707
                                              8 BANK0     12     2     10
                             ___wmul (ARG)
                              _dynam
 ---------------------------------------------------------------------------------
 (2) _dynam                                               16     8      8    2271
                                              0 COMMON     8     0      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___wmul
     ___lwdiv (ARG)
   _dynam
   _fclr
   _motor
     ___wmul (ARG)
       ___lwdiv (ARG)
     _dynam (ARG)
   _portinit
   _waitSEGStop
     ___lwdiv
     ___wmul
       ___lwdiv (ARG)
     _dynam
     _fclr
     _tact
       _tactsw
   _zenoff

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     32      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      4C       7       95.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      4E       9       97.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      20      11       40.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     118      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     118      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Jun 05 12:30:38 2021

                     l95 00DD                       _cw 0062      ___wmul@multiplicand 007A  
                    l112 03B2                      l114 03C2                      l123 03F8  
                    l116 03D8                      l108 00CA                      l118 03E8  
                    l135 04FF                      l208 026A                      l129 0475  
                    l217 011C                      l193 01D9                      l265 0395  
                    l370 0589                      l362 0509                      l276 0160  
                    l365 0516                      l550 00E8                      l390 074D  
                    l383 068D                      l552 00FC                      l830 019C  
                    _RA0 0060                      _RA1 0061                      _RA2 0062  
                    _RC0 0070                      _RC1 0071                      _RC2 0072  
                    _RC5 0075                      _RC6 0076                      _RC7 0077  
                    _ccw 0060                      _flg 0064                      wreg 0009  
                   l2210 019D                     l2300 041C                     l2220 01BE  
                   l2212 01A1                     l2310 0453                     l2302 0422  
                   l2230 039D                     l2222 01C7                     l2214 01AD  
                   l2320 0466                     l2312 045A                     l2304 0434  
                   l2240 03A9                     l2232 039E                     l2216 01B7  
                   l2400 0242                     l2330 0473                     l2314 0460  
                   l2306 043B                     l2242 03AE                     l2234 03A0  
                   l2226 01D4                     l2218 01BC                     l2402 0249  
                   l2340 0489                     l2332 0477                     l2316 0462  
                   l2308 0441                     l2260 03CF                     l2252 03C4  
                   l2244 03B6                     l2236 03A1                     l2228 0396  
                   l2420 00FE                     l2404 024D                     l2412 025A  
                   l3220 0503                     l2350 04B1                     l2342 048D  
                   l2334 047D                     l2318 0466                     l2262 03D4  
                   l2254 03C6                     l2238 03A2                     l2422 0102  
                   l2406 0253                     l2510 00C8                     l3310 06DB  
                   l3302 0692                     l3230 0509                     l3222 0509  
                   l2360 04DD                     l2352 04B8                     l2336 0483  
                   l2344 0493                     l2328 046D                     l2280 03EE  
                   l2272 03EB                     l2264 03DC                     l2256 03C7  
                   l2248 03BD                     l2440 00ED                     l2424 0106  
                   l2600 0378                     l2512 00C9                     l2504 00C2  
                   l3320 0720                     l3312 06E8                     l3304 06AE  
                   l3240 052F                     l3232 050E                     l3224 0509  
                   l2362 04DF                     l2354 04BE                     l2346 0499  
                   l2338 0487                     l2290 0406                     l2282 03F0  
                   l2274 03EC                     l2258 03C8                     l2450 0163  
                   l2442 00F2                     l2434 00DE                     l2418 00FD  
                   l2602 0389                     l2506 00C6                     l3322 0724  
                   l3306 06BB                     l3314 06ED                     l3250 0534  
                   l3242 0534                     l3234 0512                     l3226 0509  
                   l3218 0500                     l2364 04E3                     l2356 04D0  
                   l2348 049F                     l2292 040A                     l2284 03F6  
                   l2276 03EC                     l2268 03E3                     l2460 0179  
                   l2452 0169                     l2444 00F8                     l2436 00E0  
                   l2428 010C                     l2612 0393                     l2508 00C7  
                   l3324 0751                     l3316 06F5                     l3340 07B6  
                   l3308 06C0                     l3260 0557                     l3252 0539  
                   l3244 0534                     l3236 0528                     l3228 0509  
                   l2374 04EA                     l2366 04E3                     l2358 04D7  
                   l2294 040C                     l2286 03FA                     l2278 03ED  
                   l2622 0147                     l2462 0188                     l2454 016C  
                   l2470 0198                     l2438 00E4                     l2390 022B  
                   l3334 0780                     l3326 0755                     l3318 071B  
                   l3270 05AB                     l3262 056F                     l3254 053D  
                   l3246 0534                     l3238 052F                     l2296 0410  
                   l2288 0400                     l2624 015A                     l2616 013D  
                   l2480 00D8                     l2464 018C                     l2456 0171  
                   l2448 0161                     l2392 0230                     l2384 0220  
                   l2608 038E                     l2560 030C                     l3336 07A3  
                   l3328 077D                     l3280 05E8                     l3272 05B8  
                   l3264 057C                     l3256 054E                     l3248 0534  
                   l2298 0416                     l2378 04EF                     l2618 0142  
                   l2482 00DB                     l2474 00CB                     l2466 018D  
                   l2458 0175                     l2394 0233                     l2386 0221  
                   l2570 0340                     l2554 02B9                     l3338 07A8  
                   l3290 0625                     l3274 05BD                     l3282 05ED  
                   l3258 0553                     l2476 00CE                     l2468 0192  
                   l2396 023A                     l2388 0224                     l2572 0347  
                   l2564 0313                     l2556 02DB                     l3284 05F5  
                   l3292 0649                     l3276 05D9                     l3268 058E  
                   l2478 00D1                     l2398 023F                     l2590 036F  
                   l2566 032A                     l2558 0308                     l3286 061C  
                   l3278 05DB                     l3294 065B                     l2592 0373  
                   l2568 033C                     l2576 034D                     l3296 0673  
                   l3288 0621                     l2578 035E                     l2586 0363  
                   l3298 0680                     l3484 025F                     l2588 0369  
                   l3486 0111                     l3488 04F4                     u2000 0473  
                   u2001 0472                     u2010 047D                     u2011 047C  
                   u2020 0483                     u2100 023A                     u2021 0482  
                   u2101 0239                     u2030 0499                     u2110 0249  
                   u2031 0498                     u2111 0248                     u2040 049F  
                   u2200 0179                     u2120 0253                     u2041 049E  
                   u2201 0178                     u2121 0252                     u2050 04B8  
                   u2130 0259                     u2051 04B7                     u2131 0258  
                   u2060 04BE                     u2220 0188                     u2140 00E4  
                   u2061 04BD                     u2221 0187                     u2141 00E3  
                   u2070 04D7                     u2310 0312                     u2071 04D6  
                   u2215 017A                     u2311 0311                     u2080 04DD  
                   u2240 0198                     u2400 0389                     u2320 033C  
                   u2081 04DC                     u2241 0197                     u2225 0184  
                   u2401 0388                     u2321 033B                     u2170 00F8  
                   u2090 022B                     u2410 038D                     u2330 0340  
                   u2235 018E                     u2171 00F7                     u2155 00E9  
                   u2091 022A                     u2411 038C                     u2331 033F  
                   u2420 0146                     u2180 0169                     u2340 035E  
                   u2421 0145                     u2181 0168                     u2165 00EE  
                   u2405 0385                     u2341 035D                     u2325 0338  
                   u2350 0362                     u2351 0361                     u2360 0369  
                   u2361 0368                     u2345 035A                     u2370 036F  
                   u2195 016D                     u2371 036E                     u1900 03E2  
                   u2380 0373                     u3500 0553                     u3420 050E  
                   u1901 03E1                     u2381 0372                     u3501 0552  
                   u3421 050D                     u1910 03F6                     u2390 0377  
                   u3510 0557                     u3430 0512                     u1911 03F5  
                   u2391 0376                     u3511 0556                     u3431 0511  
                   u1920 0400                     u3600 06BB                     u3520 057C  
                   u3440 0516                     u1921 03FF                     u3601 06BA  
                   u3521 057B                     u3441 0515                     u1930 0406  
                   u1850 01B7                     u3610 06E8                     u3530 05B8  
                   u3450 051E                     u1931 0405                     u1851 01B6  
                   u3611 06E7                     u3531 05B7                     u3451 051B  
                   u1940 041C                     u1860 01C7                     u3620 06F5  
                   u3540 05E8                     u3460 0526                     u1941 041B  
                   u1861 01C6                     u3621 06F4                     u3605 06B7  
                   u3541 05E7                     u3525 0578                     u3461 0523  
                   u1950 0422                     u1870 03A9                     u3630 0720  
                   u3550 05F5                     u1951 0421                     u1871 03A8  
                   u1855 01B3                     u3631 071F                     u3615 06E4  
                   u3551 05F4                     u3535 05B4                     u1960 043B  
                   u1880 03BC                     u3640 0724                     u3560 0621  
                   u3480 0539                     u3464 0520                     u1961 043A  
                   u1881 03BB                     u3641 0723                     u3561 0620  
                   u3545 05E4                     u3481 0538                     u1970 0441  
                   u1890 03CF                     u3650 0751                     u3570 0625  
                   u3490 053D                     u3474 0528                     u1971 0440  
                   u1891 03CE                     u3651 0750                     u3571 0624  
                   u3491 053C                     u1980 045A                     u3660 0755  
                   u3580 065A                     u1981 0459                     u3661 0754  
                   u3581 0659                     u1990 0460                     u3670 07B5  
                   u3590 0680                     u1991 045F                     u3671 07B4  
                   u3591 067F                     u3680 07C7                     u3681 07C6  
                   u3585 0656                     u3675 07B1                     u3595 067C  
                   u3685 07C3                     u3887 0582                     u3897 0686  
                   _atai 005A                     _fclr 00FD                     _main 0500  
                   _num0 00C0                     _kisu 0164                     _moja 0158  
                   _samf 01A0                     _mojf 014C                     _tact 0220  
                   _mojh 00E2                     _moji 0120                     _mojn 00DE  
                   _samp 00A0                     _gusu 00D4                     fsr0h 0005  
                   fsr1h 0007                     indf0 0000                     fsr0l 0004  
                   fsr1l 0006                     btemp 007E                     start 0002  
                  ?_fclr 0070                    ?_main 0070                    ?_tact 0078  
        __end_of___lwdiv 019D                    _PORTA 000C                    _PORTB 000D  
                  _PORTC 000E                    _TRISA 008C                    _TRISB 008D  
                  _TRISC 008E                    _code1 00E6                    _atai1 005C  
                  _count 0058                    _dynam 0396                    _fugou 0054  
                  _motor 013D                    main@i 0050                    main@j 004E  
                  status 0003                    wtemp0 007E          __initialization 07CA  
           __end_of_fclr 011D             __end_of_main 07CA             __end_of_tact 026B  
                 ??_fclr 0072                   ??_main 003A                   ??_tact 007A  
                 ?_dynam 0070                   ?_motor 0028             ?_waitSEGStop 0028  
                 _ANSELA 018C                   _ANSELB 018D                   _OSCCON 0099  
            dynam@smdata 0074          waitSEGStop@seg1 0028          waitSEGStop@seg2 002A  
                 ___wmul 00DE                   _code10 00E8                   _atai10 005E  
                 _flag_P 0066                   _flag_R 0068                ??___lwdiv 0074  
                 _tactsw 019D                   _zenoff 00C2                   dynam@j 0024  
                 motor@i 0032         __end_of_portinit 00DE  __end_of__initialization 07FD  
         __pcstackCOMMON 0070             __pidataBANK1 01DA             __pidataBANK2 026B  
           __pidataBANK3 011D            __end_of_dynam 0500            __end_of_motor 0161  
                ??_dynam 0078                  ??_motor 007E               __pbssBANK0 0052  
             __pbssBANK1 00E6               _gegiHidari 0134               __pmaintext 0500  
                ?___wmul 0078                  ?_tactsw 0070                  ?_zenoff 0070  
   __size_of_waitSEGStop 00DD         waitSEGStop@cpSW1 0032         waitSEGStop@cpSW2 0034  
       waitSEGStop@cpSW3 0036         waitSEGStop@dousa 002E          __size_of___wmul 001F  
              ?_portinit 0070                  ___lwdiv 0161                  _code100 00EA  
        __size_of_tactsw 003D                  __ptext1 00C2                  __ptext2 02B9  
                __ptext3 0220                  __ptext4 019D                  __ptext5 00FD  
                __ptext6 00DE                  __ptext7 0161                  __ptext8 00CB  
                __ptext9 013D          __size_of_zenoff 0009                  fclr@flg 0070  
                main@ans 004C              motor@kakudo 0028                  clrloop0 00B7  
   end_of_initialization 07FD              motor@smdata 002E                  dynam@tm 0022  
                dynam@tr 0076                  init_ram 00BC                  _zyoutai 0052  
                initloop 00BD                  tactsw@a 0076                  tactsw@b 0072  
                tactsw@c 0074                  motor@tr 0030               ??_portinit 0070  
         __end_of___wmul 00FD            waitSEGStop@wt 002C           __end_of_tactsw 01DA  
         __end_of_zenoff 00CB      start_initialization 07CA                 ??___wmul 007C  
            __pdataBANK1 00A0              __pdataBANK2 0120              __pdataBANK3 01A0  
               ??_tactsw 0070                 ??_zenoff 0070                ___latbits 0003  
          __pcstackBANK0 0020         ___lwdiv@dividend 0072                 ?___lwdiv 0070  
      __size_of_portinit 0013         ___lwdiv@quotient 0075            ??_waitSEGStop 0030  
         __size_of_dynam 016A           __size_of_motor 0024            dynam@dig1data 0070  
          dynam@dig2data 0072           ___wmul@product 007C                clear_ram0 00B6  
          motor@dig1data 002A            motor@dig2data 002C        ___wmul@multiplier 0078  
           waitSEGStop@i 0038      __end_of_waitSEGStop 0396         __size_of___lwdiv 003C  
               _code1000 0056                 _gegiMigi 0140          ___lwdiv@divisor 0070  
        ___lwdiv@counter 0077                 __ptext10 0396                 _flag_sw1 006E  
               _flag_sw2 006C                 _flag_sw3 006A            __size_of_fclr 0020  
          __size_of_main 02CA            __size_of_tact 004B                 _portinit 00CB  
               dynam@ext 0026                 dynam@smd 0020                 tact@mode 0078  
            _waitSEGStop 02B9  
