

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Jun 05 11:57:23 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F1938
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    12                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.20
    32                           ; Generated 12/02/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F1938 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0016                     	;# 
    87  0017                     	;# 
    88  0018                     	;# 
    89  0019                     	;# 
    90  001A                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  010C                     	;# 
   114  010D                     	;# 
   115  010E                     	;# 
   116  0110                     	;# 
   117  0111                     	;# 
   118  0112                     	;# 
   119  0113                     	;# 
   120  0114                     	;# 
   121  0115                     	;# 
   122  0116                     	;# 
   123  0117                     	;# 
   124  0118                     	;# 
   125  0119                     	;# 
   126  011A                     	;# 
   127  011B                     	;# 
   128  011D                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0191                     	;# 
   132  0191                     	;# 
   133  0192                     	;# 
   134  0193                     	;# 
   135  0193                     	;# 
   136  0193                     	;# 
   137  0194                     	;# 
   138  0195                     	;# 
   139  0196                     	;# 
   140  0199                     	;# 
   141  019A                     	;# 
   142  019B                     	;# 
   143  019B                     	;# 
   144  019B                     	;# 
   145  019B                     	;# 
   146  019C                     	;# 
   147  019C                     	;# 
   148  019D                     	;# 
   149  019E                     	;# 
   150  019F                     	;# 
   151  020D                     	;# 
   152  0210                     	;# 
   153  0211                     	;# 
   154  0212                     	;# 
   155  0213                     	;# 
   156  0214                     	;# 
   157  0215                     	;# 
   158  0215                     	;# 
   159  0216                     	;# 
   160  0217                     	;# 
   161  0291                     	;# 
   162  0291                     	;# 
   163  0292                     	;# 
   164  0293                     	;# 
   165  0294                     	;# 
   166  0295                     	;# 
   167  0295                     	;# 
   168  0296                     	;# 
   169  0298                     	;# 
   170  0298                     	;# 
   171  0299                     	;# 
   172  029A                     	;# 
   173  029B                     	;# 
   174  029C                     	;# 
   175  029C                     	;# 
   176  029D                     	;# 
   177  029E                     	;# 
   178  029F                     	;# 
   179  0311                     	;# 
   180  0311                     	;# 
   181  0312                     	;# 
   182  0313                     	;# 
   183  0314                     	;# 
   184  0315                     	;# 
   185  0315                     	;# 
   186  0316                     	;# 
   187  0318                     	;# 
   188  0318                     	;# 
   189  0319                     	;# 
   190  031A                     	;# 
   191  031C                     	;# 
   192  031C                     	;# 
   193  031D                     	;# 
   194  031E                     	;# 
   195  0394                     	;# 
   196  0395                     	;# 
   197  0396                     	;# 
   198  0415                     	;# 
   199  0416                     	;# 
   200  0417                     	;# 
   201  041C                     	;# 
   202  041D                     	;# 
   203  041E                     	;# 
   204  0791                     	;# 
   205  0792                     	;# 
   206  0793                     	;# 
   207  0794                     	;# 
   208  0795                     	;# 
   209  0798                     	;# 
   210  0799                     	;# 
   211  07A0                     	;# 
   212  07A1                     	;# 
   213  07A3                     	;# 
   214  07A4                     	;# 
   215  07A6                     	;# 
   216  07A7                     	;# 
   217  07A9                     	;# 
   218  07AA                     	;# 
   219  0FE4                     	;# 
   220  0FE5                     	;# 
   221  0FE6                     	;# 
   222  0FE7                     	;# 
   223  0FE8                     	;# 
   224  0FE9                     	;# 
   225  0FEA                     	;# 
   226  0FEB                     	;# 
   227  0FED                     	;# 
   228  0FEE                     	;# 
   229  0FEF                     	;# 
   230  0000                     	;# 
   231  0001                     	;# 
   232  0002                     	;# 
   233  0003                     	;# 
   234  0004                     	;# 
   235  0005                     	;# 
   236  0006                     	;# 
   237  0007                     	;# 
   238  0008                     	;# 
   239  0009                     	;# 
   240  000A                     	;# 
   241  000B                     	;# 
   242  000C                     	;# 
   243  000D                     	;# 
   244  000E                     	;# 
   245  0010                     	;# 
   246  0011                     	;# 
   247  0012                     	;# 
   248  0013                     	;# 
   249  0015                     	;# 
   250  0016                     	;# 
   251  0016                     	;# 
   252  0017                     	;# 
   253  0018                     	;# 
   254  0019                     	;# 
   255  001A                     	;# 
   256  001B                     	;# 
   257  001C                     	;# 
   258  001E                     	;# 
   259  001F                     	;# 
   260  008C                     	;# 
   261  008D                     	;# 
   262  008E                     	;# 
   263  0090                     	;# 
   264  0091                     	;# 
   265  0092                     	;# 
   266  0093                     	;# 
   267  0095                     	;# 
   268  0096                     	;# 
   269  0097                     	;# 
   270  0098                     	;# 
   271  0099                     	;# 
   272  009A                     	;# 
   273  009B                     	;# 
   274  009B                     	;# 
   275  009C                     	;# 
   276  009D                     	;# 
   277  009E                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  0110                     	;# 
   282  0111                     	;# 
   283  0112                     	;# 
   284  0113                     	;# 
   285  0114                     	;# 
   286  0115                     	;# 
   287  0116                     	;# 
   288  0117                     	;# 
   289  0118                     	;# 
   290  0119                     	;# 
   291  011A                     	;# 
   292  011B                     	;# 
   293  011D                     	;# 
   294  018C                     	;# 
   295  018D                     	;# 
   296  0191                     	;# 
   297  0191                     	;# 
   298  0192                     	;# 
   299  0193                     	;# 
   300  0193                     	;# 
   301  0193                     	;# 
   302  0194                     	;# 
   303  0195                     	;# 
   304  0196                     	;# 
   305  0199                     	;# 
   306  019A                     	;# 
   307  019B                     	;# 
   308  019B                     	;# 
   309  019B                     	;# 
   310  019B                     	;# 
   311  019C                     	;# 
   312  019C                     	;# 
   313  019D                     	;# 
   314  019E                     	;# 
   315  019F                     	;# 
   316  020D                     	;# 
   317  0210                     	;# 
   318  0211                     	;# 
   319  0212                     	;# 
   320  0213                     	;# 
   321  0214                     	;# 
   322  0215                     	;# 
   323  0215                     	;# 
   324  0216                     	;# 
   325  0217                     	;# 
   326  0291                     	;# 
   327  0291                     	;# 
   328  0292                     	;# 
   329  0293                     	;# 
   330  0294                     	;# 
   331  0295                     	;# 
   332  0295                     	;# 
   333  0296                     	;# 
   334  0298                     	;# 
   335  0298                     	;# 
   336  0299                     	;# 
   337  029A                     	;# 
   338  029B                     	;# 
   339  029C                     	;# 
   340  029C                     	;# 
   341  029D                     	;# 
   342  029E                     	;# 
   343  029F                     	;# 
   344  0311                     	;# 
   345  0311                     	;# 
   346  0312                     	;# 
   347  0313                     	;# 
   348  0314                     	;# 
   349  0315                     	;# 
   350  0315                     	;# 
   351  0316                     	;# 
   352  0318                     	;# 
   353  0318                     	;# 
   354  0319                     	;# 
   355  031A                     	;# 
   356  031C                     	;# 
   357  031C                     	;# 
   358  031D                     	;# 
   359  031E                     	;# 
   360  0394                     	;# 
   361  0395                     	;# 
   362  0396                     	;# 
   363  0415                     	;# 
   364  0416                     	;# 
   365  0417                     	;# 
   366  041C                     	;# 
   367  041D                     	;# 
   368  041E                     	;# 
   369  0791                     	;# 
   370  0792                     	;# 
   371  0793                     	;# 
   372  0794                     	;# 
   373  0795                     	;# 
   374  0798                     	;# 
   375  0799                     	;# 
   376  07A0                     	;# 
   377  07A1                     	;# 
   378  07A3                     	;# 
   379  07A4                     	;# 
   380  07A6                     	;# 
   381  07A7                     	;# 
   382  07A9                     	;# 
   383  07AA                     	;# 
   384  0FE4                     	;# 
   385  0FE5                     	;# 
   386  0FE6                     	;# 
   387  0FE7                     	;# 
   388  0FE8                     	;# 
   389  0FE9                     	;# 
   390  0FEA                     	;# 
   391  0FEB                     	;# 
   392  0FED                     	;# 
   393  0FEE                     	;# 
   394  0FEF                     	;# 
   395                           
   396                           	psect	idataBANK1
   397  02A3                     __pidataBANK1:
   398                           
   399                           ;initializer for _samp
   400  02A3  343F               	retlw	63
   401  02A4  3400               	retlw	0
   402  02A5  3406               	retlw	6
   403  02A6  3400               	retlw	0
   404  02A7  345B               	retlw	91
   405  02A8  3400               	retlw	0
   406  02A9  344F               	retlw	79
   407  02AA  3400               	retlw	0
   408  02AB  3466               	retlw	102
   409  02AC  3400               	retlw	0
   410  02AD  346D               	retlw	109
   411  02AE  3400               	retlw	0
   412  02AF  347D               	retlw	125
   413  02B0  3400               	retlw	0
   414  02B1  3427               	retlw	39
   415  02B2  3400               	retlw	0
   416  02B3  347F               	retlw	127
   417  02B4  3400               	retlw	0
   418  02B5  346F               	retlw	111
   419  02B6  3400               	retlw	0
   420  02B7  345F               	retlw	95
   421  02B8  3400               	retlw	0
   422  02B9  347C               	retlw	124
   423  02BA  3400               	retlw	0
   424  02BB  3458               	retlw	88
   425  02BC  3400               	retlw	0
   426  02BD  345E               	retlw	94
   427  02BE  3400               	retlw	0
   428  02BF  3479               	retlw	121
   429  02C0  3400               	retlw	0
   430  02C1  3471               	retlw	113
   431  02C2  3400               	retlw	0
   432                           
   433                           ;initializer for _num0
   434  02C3  343F               	retlw	63
   435  02C4  3400               	retlw	0
   436  02C5  3406               	retlw	6
   437  02C6  3400               	retlw	0
   438  02C7  345B               	retlw	91
   439  02C8  3400               	retlw	0
   440  02C9  344F               	retlw	79
   441  02CA  3400               	retlw	0
   442  02CB  3466               	retlw	102
   443  02CC  3400               	retlw	0
   444  02CD  346D               	retlw	109
   445  02CE  3400               	retlw	0
   446  02CF  347D               	retlw	125
   447  02D0  3400               	retlw	0
   448  02D1  3427               	retlw	39
   449  02D2  3400               	retlw	0
   450  02D3  347F               	retlw	127
   451  02D4  3400               	retlw	0
   452  02D5  346F               	retlw	111
   453  02D6  3400               	retlw	0
   454                           
   455                           ;initializer for _gusu
   456  02D7  343F               	retlw	63
   457  02D8  3400               	retlw	0
   458  02D9  345B               	retlw	91
   459  02DA  3400               	retlw	0
   460  02DB  3466               	retlw	102
   461  02DC  3400               	retlw	0
   462  02DD  347D               	retlw	125
   463  02DE  3400               	retlw	0
   464  02DF  347F               	retlw	127
   465  02E0  3400               	retlw	0
   466                           
   467                           ;initializer for _mojn
   468  02E1  3454               	retlw	84
   469  02E2  3400               	retlw	0
   470  02E3  3473               	retlw	115
   471  02E4  3400               	retlw	0
   472                           
   473                           ;initializer for _mojh
   474  02E5  3476               	retlw	118
   475  02E6  3400               	retlw	0
   476  02E7  3438               	retlw	56
   477  02E8  3400               	retlw	0
   478                           
   479                           	psect	idataBANK2
   480  01F4                     __pidataBANK2:
   481                           
   482                           ;initializer for _moji
   483  01F4  345F               	retlw	95
   484  01F5  3400               	retlw	0
   485  01F6  347C               	retlw	124
   486  01F7  3400               	retlw	0
   487  01F8  3458               	retlw	88
   488  01F9  3400               	retlw	0
   489  01FA  345E               	retlw	94
   490  01FB  3400               	retlw	0
   491  01FC  3479               	retlw	121
   492  01FD  3400               	retlw	0
   493  01FE  3471               	retlw	113
   494  01FF  3400               	retlw	0
   495  0200  3476               	retlw	118
   496  0201  3400               	retlw	0
   497  0202  3438               	retlw	56
   498  0203  3400               	retlw	0
   499  0204  3454               	retlw	84
   500  0205  3400               	retlw	0
   501  0206  3473               	retlw	115
   502  0207  3400               	retlw	0
   503                           
   504                           ;initializer for _mojf
   505  0208  3471               	retlw	113
   506  0209  3400               	retlw	0
   507  020A  3479               	retlw	121
   508  020B  3400               	retlw	0
   509  020C  345E               	retlw	94
   510  020D  3400               	retlw	0
   511  020E  3458               	retlw	88
   512  020F  3400               	retlw	0
   513  0210  347C               	retlw	124
   514  0211  3400               	retlw	0
   515  0212  345F               	retlw	95
   516  0213  3400               	retlw	0
   517                           
   518                           ;initializer for _moja
   519  0214  345F               	retlw	95
   520  0215  3400               	retlw	0
   521  0216  347C               	retlw	124
   522  0217  3400               	retlw	0
   523  0218  3458               	retlw	88
   524  0219  3400               	retlw	0
   525  021A  345E               	retlw	94
   526  021B  3400               	retlw	0
   527  021C  3479               	retlw	121
   528  021D  3400               	retlw	0
   529  021E  3471               	retlw	113
   530  021F  3400               	retlw	0
   531                           
   532                           ;initializer for _kisu
   533  0220  3406               	retlw	6
   534  0221  3400               	retlw	0
   535  0222  344F               	retlw	79
   536  0223  3400               	retlw	0
   537  0224  346D               	retlw	109
   538  0225  3400               	retlw	0
   539  0226  3427               	retlw	39
   540  0227  3400               	retlw	0
   541  0228  346F               	retlw	111
   542  0229  3400               	retlw	0
   543                           
   544                           	psect	idataBANK3
   545  01B0                     __pidataBANK3:
   546                           
   547                           ;initializer for _samf
   548  01B0  3471               	retlw	113
   549  01B1  3400               	retlw	0
   550  01B2  3479               	retlw	121
   551  01B3  3400               	retlw	0
   552  01B4  345E               	retlw	94
   553  01B5  3400               	retlw	0
   554  01B6  3458               	retlw	88
   555  01B7  3400               	retlw	0
   556  01B8  347C               	retlw	124
   557  01B9  3400               	retlw	0
   558  01BA  345F               	retlw	95
   559  01BB  3400               	retlw	0
   560  01BC  346F               	retlw	111
   561  01BD  3400               	retlw	0
   562  01BE  347F               	retlw	127
   563  01BF  3400               	retlw	0
   564  01C0  3427               	retlw	39
   565  01C1  3400               	retlw	0
   566  01C2  347D               	retlw	125
   567  01C3  3400               	retlw	0
   568  01C4  346D               	retlw	109
   569  01C5  3400               	retlw	0
   570  01C6  3466               	retlw	102
   571  01C7  3400               	retlw	0
   572  01C8  344F               	retlw	79
   573  01C9  3400               	retlw	0
   574  01CA  345B               	retlw	91
   575  01CB  3400               	retlw	0
   576  01CC  3406               	retlw	6
   577  01CD  3400               	retlw	0
   578  01CE  343F               	retlw	63
   579  01CF  3400               	retlw	0
   580  000E                     _PORTC	set	14
   581  000D                     _PORTB	set	13
   582  000C                     _PORTA	set	12
   583  0061                     _RA1	set	97
   584  0060                     _RA0	set	96
   585  0062                     _RA2	set	98
   586  0077                     _RC7	set	119
   587  0070                     _RC0	set	112
   588  0071                     _RC1	set	113
   589  0072                     _RC2	set	114
   590  0076                     _RC6	set	118
   591  0075                     _RC5	set	117
   592  0099                     _OSCCON	set	153
   593  008E                     _TRISC	set	142
   594  008D                     _TRISB	set	141
   595  008C                     _TRISA	set	140
   596  018D                     _ANSELB	set	397
   597  018C                     _ANSELA	set	396
   598                           
   599                           	psect	cinit
   600  07CA                     start_initialization:	
   601                           ; #config settings
   602                           
   603  07CA                     __initialization:
   604                           
   605                           ; Initialize objects allocated to BANK1
   606  07CA  30A3               	movlw	low __pidataBANK1
   607  07CB  0084               	movwf	4
   608  07CC  3082               	movlw	(high __pidataBANK1)| (0+128)
   609  07CD  0085               	movwf	5
   610  07CE  30A0               	movlw	low __pdataBANK1
   611  07CF  0086               	movwf	6
   612  07D0  3000               	movlw	high __pdataBANK1
   613  07D1  0087               	movwf	7
   614  07D2  3046               	movlw	70
   615  07D3  3181  214F  3187   	fcall	init_ram
   616                           
   617                           ; Initialize objects allocated to BANK2
   618  07D6  30F4               	movlw	low __pidataBANK2
   619  07D7  0084               	movwf	4
   620  07D8  3081               	movlw	(high __pidataBANK2)| (0+128)
   621  07D9  0085               	movwf	5
   622  07DA  3020               	movlw	low __pdataBANK2
   623  07DB  0086               	movwf	6
   624  07DC  3001               	movlw	high __pdataBANK2
   625  07DD  0087               	movwf	7
   626  07DE  3036               	movlw	54
   627  07DF  3181  214F  3187   	fcall	init_ram
   628                           
   629                           ; Initialize objects allocated to BANK3
   630  07E2  30B0               	movlw	low __pidataBANK3
   631  07E3  0084               	movwf	4
   632  07E4  3081               	movlw	(high __pidataBANK3)| (0+128)
   633  07E5  0085               	movwf	5
   634  07E6  30A0               	movlw	low __pdataBANK3
   635  07E7  0086               	movwf	6
   636  07E8  3001               	movlw	high __pdataBANK3
   637  07E9  0087               	movwf	7
   638  07EA  3020               	movlw	32
   639  07EB  3181  214F  3187   	fcall	init_ram
   640                           
   641                           ; Clear objects allocated to BANK0
   642  07EE  3052               	movlw	low __pbssBANK0
   643  07EF  0084               	movwf	4
   644  07F0  3000               	movlw	high __pbssBANK0
   645  07F1  0085               	movwf	5
   646  07F2  301E               	movlw	30
   647  07F3  3181  2149  3187   	fcall	clear_ram0
   648                           
   649                           ; Clear objects allocated to BANK1
   650  07F6  0021               	movlb	1	; select bank1
   651  07F7  01E6               	clrf	__pbssBANK1& (0+127)
   652  07F8  01E7               	clrf	(__pbssBANK1+1)& (0+127)
   653  07F9  01E8               	clrf	(__pbssBANK1+2)& (0+127)
   654  07FA  01E9               	clrf	(__pbssBANK1+3)& (0+127)
   655  07FB  01EA               	clrf	(__pbssBANK1+4)& (0+127)
   656  07FC  01EB               	clrf	(__pbssBANK1+5)& (0+127)
   657  07FD                     end_of_initialization:	
   658                           ;End of C runtime variable initialization code
   659                           
   660  07FD                     __end_of__initialization:
   661  07FD  0020               	movlb	0
   662  07FE  3185  2D7B         	ljmp	_main	;jump to C main() function
   663                           
   664                           	psect	bssBANK0
   665  0052                     __pbssBANK0:
   666  0052                     _zyoutai:
   667  0052                     	ds	2
   668  0054                     _fugou:
   669  0054                     	ds	2
   670  0056                     _code1000:
   671  0056                     	ds	2
   672  0058                     _count:
   673  0058                     	ds	2
   674  005A                     _atai:
   675  005A                     	ds	2
   676  005C                     _atai1:
   677  005C                     	ds	2
   678  005E                     _atai10:
   679  005E                     	ds	2
   680  0060                     _ccw:
   681  0060                     	ds	2
   682  0062                     _cw:
   683  0062                     	ds	2
   684  0064                     _flg:
   685  0064                     	ds	2
   686  0066                     _flag_P:
   687  0066                     	ds	2
   688  0068                     _flag_R:
   689  0068                     	ds	2
   690  006A                     _flag_sw3:
   691  006A                     	ds	2
   692  006C                     _flag_sw2:
   693  006C                     	ds	2
   694  006E                     _flag_sw1:
   695  006E                     	ds	2
   696                           
   697                           	psect	bssBANK1
   698  00E6                     __pbssBANK1:
   699  00E6                     _code1:
   700  00E6                     	ds	2
   701  00E8                     _code10:
   702  00E8                     	ds	2
   703  00EA                     _code100:
   704  00EA                     	ds	2
   705                           
   706                           	psect	dataBANK1
   707  00A0                     __pdataBANK1:
   708  00A0                     _samp:
   709  00A0                     	ds	32
   710  00C0                     _num0:
   711  00C0                     	ds	20
   712  00D4                     _gusu:
   713  00D4                     	ds	10
   714  00DE                     _mojn:
   715  00DE                     	ds	4
   716  00E2                     _mojh:
   717  00E2                     	ds	4
   718                           
   719                           	psect	dataBANK2
   720  0120                     __pdataBANK2:
   721  0120                     _moji:
   722  0120                     	ds	20
   723  0134                     _mojf:
   724  0134                     	ds	12
   725  0140                     _moja:
   726  0140                     	ds	12
   727  014C                     _kisu:
   728  014C                     	ds	10
   729                           
   730                           	psect	dataBANK3
   731  01A0                     __pdataBANK3:
   732  01A0                     _samf:
   733  01A0                     	ds	32
   734                           
   735                           	psect	inittext
   736  014F                     init_ram:
   737  014F  00FE               	movwf	btemp
   738  0150                     initloop:
   739  0150  0012               	moviw fsr0++
   740  0151  001E               	movwi fsr1++
   741  0152  0BFE               	decfsz	btemp,f
   742  0153  2950               	goto	initloop
   743  0154  3400               	retlw	0
   744                           
   745                           	psect	clrtext
   746  0149                     clear_ram0:	
   747                           ;	Called with FSR0 containing the base address, and
   748                           ;	WREG with the size to clear
   749                           
   750  0149  0064               	clrwdt	;clear the watchdog before getting into this loop
   751  014A                     clrloop0:
   752  014A  0180               	clrf	0	;clear RAM location pointed to by FSR
   753  014B  3101               	addfsr 0,1
   754  014C  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   755  014D  294A               	goto	clrloop0	;have we reached the end yet?
   756  014E  3400               	retlw	0	;all done for this memory range, return
   757                           
   758                           	psect	cstackCOMMON
   759  0070                     __pcstackCOMMON:
   760  0070                     ?_portinit:
   761  0070                     ??_portinit:	
   762                           ; 1 bytes @ 0x0
   763                           
   764  0070                     ?_zenoff:	
   765                           ; 1 bytes @ 0x0
   766                           
   767  0070                     ??_zenoff:	
   768                           ; 1 bytes @ 0x0
   769                           
   770  0070                     ?_dynam:	
   771                           ; 1 bytes @ 0x0
   772                           
   773  0070                     ?_tactsw:	
   774                           ; 1 bytes @ 0x0
   775                           
   776  0070                     ??_tactsw:	
   777                           ; 1 bytes @ 0x0
   778                           
   779  0070                     ?_fclr:	
   780                           ; 1 bytes @ 0x0
   781                           
   782  0070                     ?_main:	
   783                           ; 1 bytes @ 0x0
   784                           
   785  0070                     ?___lwdiv:	
   786                           ; 1 bytes @ 0x0
   787                           
   788  0070                     dynam@dig1data:	
   789                           ; 2 bytes @ 0x0
   790                           
   791  0070                     fclr@flg:	
   792                           ; 2 bytes @ 0x0
   793                           
   794  0070                     ___lwdiv@divisor:	
   795                           ; 2 bytes @ 0x0
   796                           
   797                           
   798                           ; 2 bytes @ 0x0
   799  0070                     	ds	2
   800  0072                     ??_fclr:
   801  0072                     dynam@dig2data:	
   802                           ; 1 bytes @ 0x2
   803                           
   804  0072                     tactsw@b:	
   805                           ; 2 bytes @ 0x2
   806                           
   807  0072                     ___lwdiv@dividend:	
   808                           ; 2 bytes @ 0x2
   809                           
   810                           
   811                           ; 2 bytes @ 0x2
   812  0072                     	ds	2
   813  0074                     ??___lwdiv:
   814  0074                     dynam@smdata:	
   815                           ; 1 bytes @ 0x4
   816                           
   817  0074                     tactsw@c:	
   818                           ; 2 bytes @ 0x4
   819                           
   820                           
   821                           ; 2 bytes @ 0x4
   822  0074                     	ds	1
   823  0075                     ___lwdiv@quotient:
   824                           
   825                           ; 2 bytes @ 0x5
   826  0075                     	ds	1
   827  0076                     dynam@tr:
   828  0076                     tactsw@a:	
   829                           ; 2 bytes @ 0x6
   830                           
   831                           
   832                           ; 2 bytes @ 0x6
   833  0076                     	ds	1
   834  0077                     ___lwdiv@counter:
   835                           
   836                           ; 1 bytes @ 0x7
   837  0077                     	ds	1
   838  0078                     ??_dynam:
   839  0078                     ?_tact:	
   840                           ; 1 bytes @ 0x8
   841                           
   842  0078                     ?___wmul:	
   843                           ; 1 bytes @ 0x8
   844                           
   845  0078                     tact@mode:	
   846                           ; 2 bytes @ 0x8
   847                           
   848  0078                     ___wmul@multiplier:	
   849                           ; 2 bytes @ 0x8
   850                           
   851                           
   852                           ; 2 bytes @ 0x8
   853  0078                     	ds	2
   854  007A                     ??_tact:
   855  007A                     ___wmul@multiplicand:	
   856                           ; 1 bytes @ 0xA
   857                           
   858                           
   859                           ; 2 bytes @ 0xA
   860  007A                     	ds	2
   861  007C                     ??___wmul:
   862  007C                     ___wmul@product:	
   863                           ; 1 bytes @ 0xC
   864                           
   865                           
   866                           ; 2 bytes @ 0xC
   867  007C                     	ds	2
   868  007E                     ??_motor:
   869                           
   870                           	psect	cstackBANK0
   871  0020                     __pcstackBANK0:	
   872                           ; 1 bytes @ 0xE
   873                           
   874  0020                     dynam@smd:
   875                           
   876                           ; 2 bytes @ 0x0
   877  0020                     	ds	2
   878  0022                     dynam@tm:
   879                           
   880                           ; 2 bytes @ 0x2
   881  0022                     	ds	2
   882  0024                     dynam@j:
   883                           
   884                           ; 2 bytes @ 0x4
   885  0024                     	ds	2
   886  0026                     dynam@ext:
   887                           
   888                           ; 2 bytes @ 0x6
   889  0026                     	ds	2
   890  0028                     ?_motor:
   891  0028                     ?_waitSEGStop:	
   892                           ; 1 bytes @ 0x8
   893                           
   894  0028                     waitSEGStop@seg1:	
   895                           ; 2 bytes @ 0x8
   896                           
   897  0028                     motor@kakudo:	
   898                           ; 2 bytes @ 0x8
   899                           
   900                           
   901                           ; 2 bytes @ 0x8
   902  0028                     	ds	2
   903  002A                     waitSEGStop@seg2:
   904  002A                     motor@dig1data:	
   905                           ; 2 bytes @ 0xA
   906                           
   907                           
   908                           ; 2 bytes @ 0xA
   909  002A                     	ds	2
   910  002C                     waitSEGStop@wt:
   911  002C                     motor@dig2data:	
   912                           ; 2 bytes @ 0xC
   913                           
   914                           
   915                           ; 2 bytes @ 0xC
   916  002C                     	ds	2
   917  002E                     waitSEGStop@dousa:
   918  002E                     motor@smdata:	
   919                           ; 2 bytes @ 0xE
   920                           
   921                           
   922                           ; 2 bytes @ 0xE
   923  002E                     	ds	2
   924  0030                     ??_waitSEGStop:
   925  0030                     motor@tr:	
   926                           ; 1 bytes @ 0x10
   927                           
   928                           
   929                           ; 2 bytes @ 0x10
   930  0030                     	ds	2
   931  0032                     waitSEGStop@cpSW1:
   932  0032                     motor@i:	
   933                           ; 2 bytes @ 0x12
   934                           
   935                           
   936                           ; 2 bytes @ 0x12
   937  0032                     	ds	2
   938  0034                     waitSEGStop@cpSW2:
   939                           
   940                           ; 2 bytes @ 0x14
   941  0034                     	ds	2
   942  0036                     waitSEGStop@cpSW3:
   943                           
   944                           ; 2 bytes @ 0x16
   945  0036                     	ds	2
   946  0038                     waitSEGStop@i:
   947                           
   948                           ; 2 bytes @ 0x18
   949  0038                     	ds	2
   950  003A                     ??_main:
   951                           
   952                           ; 1 bytes @ 0x1A
   953  003A                     	ds	20
   954  004E                     main@ans:
   955                           
   956                           ; 2 bytes @ 0x2E
   957  004E                     	ds	2
   958  0050                     main@i:
   959                           
   960                           ; 2 bytes @ 0x30
   961  0050                     	ds	2
   962                           
   963                           	psect	maintext
   964  057B                     __pmaintext:	
   965 ;;
   966 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   967 ;;
   968 ;; *************** function _main *****************
   969 ;; Defined at:
   970 ;;		line 770 in file "Q4.c"
   971 ;; Parameters:    Size  Location     Type
   972 ;;		None
   973 ;; Auto vars:     Size  Location     Type
   974 ;;  i               2   48[BANK0 ] int 
   975 ;;  ans             2   46[BANK0 ] int 
   976 ;;  ataiR           2    0        int 
   977 ;;  ataiL           2    0        int 
   978 ;;  segR            2    0        unsigned short 
   979 ;;  segL            2    0        unsigned short 
   980 ;;  time            2    0        int 
   981 ;;  n               2    0        int 
   982 ;;  m               2    0        int 
   983 ;;  k               2    0        int 
   984 ;;  j               2    0        int 
   985 ;; Return value:  Size  Location     Type
   986 ;;                  1    wreg      void 
   987 ;; Registers used:
   988 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   989 ;; Tracked objects:
   990 ;;		On entry : B1F/0
   991 ;;		On exit  : 0/0
   992 ;;		Unchanged: 0/0
   993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   995 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0
   996 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   997 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
   998 ;;Total ram usage:       24 bytes
   999 ;; Hardware stack levels required when called:    3
  1000 ;; This function calls:
  1001 ;;		___wmul
  1002 ;;		_dynam
  1003 ;;		_fclr
  1004 ;;		_motor
  1005 ;;		_portinit
  1006 ;;		_waitSEGStop
  1007 ;;		_zenoff
  1008 ;; This function is called by:
  1009 ;;		Startup code after reset
  1010 ;; This function uses a non-reentrant model
  1011 ;;
  1012                           
  1013                           
  1014                           ;psect for function _main
  1015  057B                     _main:
  1016  057B                     l3195:	
  1017                           ;incstack = 0
  1018                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1019                           
  1020                           
  1021                           ;Q4.c: 773:     OSCCON=0x7A;
  1022  057B  307A               	movlw	122
  1023  057C  0021               	movlb	1	; select bank1
  1024  057D  0099               	movwf	25	;volatile
  1025  057E                     l3197:
  1026                           
  1027                           ;Q4.c: 775:     portinit();
  1028  057E  3181  215E  3185   	fcall	_portinit
  1029                           
  1030                           ;Q4.c: 777:     zenoff();
  1031  0581  3181  2155  3185   	fcall	_zenoff
  1032  0584                     l3199:
  1033  0584                     l3201:
  1034  0584                     l3203:
  1035  0584                     l3205:
  1036  0584                     l3207:
  1037  0584                     l358:	
  1038                           ;Q4.c: 782:     while((RA0!=1)||(RA1!=1)||(RA2!=1));
  1039                           
  1040  0584  0020               	movlb	0	; select bank0
  1041  0585  1C0C               	btfss	12,0	;volatile
  1042  0586  2D88               	goto	u3381
  1043  0587  2D89               	goto	u3380
  1044  0588                     u3381:
  1045  0588  2D84               	goto	l358
  1046  0589                     u3380:
  1047  0589                     l3209:
  1048  0589  1C8C               	btfss	12,1	;volatile
  1049  058A  2D8C               	goto	u3391
  1050  058B  2D8D               	goto	u3390
  1051  058C                     u3391:
  1052  058C  2D84               	goto	l358
  1053  058D                     u3390:
  1054  058D                     l3211:
  1055  058D  1D0C               	btfss	12,2	;volatile
  1056  058E  2D90               	goto	u3401
  1057  058F  2D91               	goto	u3400
  1058  0590                     u3401:
  1059  0590  2D84               	goto	l358
  1060  0591                     u3400:
  1061  0591                     l361:	
  1062                           ;Q4.c: 786:     hukki:
  1063                           
  1064                           
  1065                           ;Q4.c: 789:     RC2=RC0=RC1=1;
  1066  0591  0020               	movlb	0	; select bank0
  1067  0592  148E               	bsf	14,1	;volatile
  1068  0593  188E               	btfsc	14,1	;volatile
  1069  0594  2D96               	goto	u3411
  1070  0595  2D99               	goto	u3410
  1071  0596                     u3411:
  1072  0596  0020               	movlb	0	; select bank0
  1073  0597  140E               	bsf	14,0	;volatile
  1074  0598  2D9B               	goto	u3424
  1075  0599                     u3410:
  1076  0599  0020               	movlb	0	; select bank0
  1077  059A  100E               	bcf	14,0	;volatile
  1078  059B                     u3424:
  1079  059B  180E               	btfsc	14,0	;volatile
  1080  059C  2D9E               	goto	u3421
  1081  059D  2DA1               	goto	u3420
  1082  059E                     u3421:
  1083  059E  0020               	movlb	0	; select bank0
  1084  059F  150E               	bsf	14,2	;volatile
  1085  05A0  2DA3               	goto	u3434
  1086  05A1                     u3420:
  1087  05A1  0020               	movlb	0	; select bank0
  1088  05A2  110E               	bcf	14,2	;volatile
  1089  05A3                     u3434:
  1090  05A3                     l3213:
  1091                           
  1092                           ;Q4.c: 792:     fclr(2);
  1093  05A3  3002               	movlw	2
  1094  05A4  00F0               	movwf	fclr@flg
  1095  05A5  3000               	movlw	0
  1096  05A6  00F1               	movwf	fclr@flg+1
  1097  05A7  3181  2190  3185   	fcall	_fclr
  1098  05AA                     l3215:
  1099  05AA                     l3217:
  1100                           
  1101                           ;Q4.c: 804:     int ans = -1;
  1102  05AA  30FF               	movlw	255
  1103  05AB  0020               	movlb	0	; select bank0
  1104  05AC  00CE               	movwf	main@ans
  1105  05AD  30FF               	movlw	255
  1106  05AE  00CF               	movwf	main@ans+1
  1107  05AF                     l3219:
  1108  05AF                     l3221:
  1109  05AF                     l3223:
  1110  05AF                     l3225:
  1111  05AF                     l3227:
  1112                           
  1113                           ;Q4.c: 818:         if(RA0 ==1 && RA1 == 0){
  1114  05AF  0020               	movlb	0	; select bank0
  1115  05B0  1C0C               	btfss	12,0	;volatile
  1116  05B1  2DB3               	goto	u3441
  1117  05B2  2DB4               	goto	u3440
  1118  05B3                     u3441:
  1119  05B3  2DC9               	goto	l3233
  1120  05B4                     u3440:
  1121  05B4                     l3229:
  1122  05B4  188C               	btfsc	12,1	;volatile
  1123  05B5  2DB7               	goto	u3451
  1124  05B6  2DB8               	goto	u3450
  1125  05B7                     u3451:
  1126  05B7  2DC9               	goto	l3233
  1127  05B8                     u3450:
  1128  05B8                     l3231:
  1129                           
  1130                           ;Q4.c: 819:             dynam(0x40,0x40,0,0);
  1131  05B8  3040               	movlw	64
  1132  05B9  00F0               	movwf	dynam@dig1data
  1133  05BA  3000               	movlw	0
  1134  05BB  00F1               	movwf	dynam@dig1data+1
  1135  05BC  3040               	movlw	64
  1136  05BD  00F2               	movwf	dynam@dig2data
  1137  05BE  3000               	movlw	0
  1138  05BF  00F3               	movwf	dynam@dig2data+1
  1139  05C0  3000               	movlw	0
  1140  05C1  00F4               	movwf	dynam@smdata
  1141  05C2  00F5               	movwf	dynam@smdata+1
  1142  05C3  3000               	movlw	0
  1143  05C4  00F6               	movwf	dynam@tr
  1144  05C5  00F7               	movwf	dynam@tr+1
  1145  05C6  3184  2411  3185   	fcall	_dynam
  1146  05C9                     l3233:
  1147                           
  1148                           ;Q4.c: 822:         if(RA0 ==0 && RA1 == 0){
  1149  05C9  0020               	movlb	0	; select bank0
  1150  05CA  180C               	btfsc	12,0	;volatile
  1151  05CB  2DCD               	goto	u3461
  1152  05CC  2DCE               	goto	u3460
  1153  05CD                     u3461:
  1154  05CD  2DAF               	goto	l3227
  1155  05CE                     u3460:
  1156  05CE                     l3235:
  1157  05CE  188C               	btfsc	12,1	;volatile
  1158  05CF  2DD1               	goto	u3471
  1159  05D0  2DD2               	goto	u3470
  1160  05D1                     u3471:
  1161  05D1  2DAF               	goto	l3227
  1162  05D2                     u3470:
  1163  05D2                     l3237:
  1164                           
  1165                           ;Q4.c: 823:             zyoutai = waitSEGStop(0x40,0x40,1000,0b001);
  1166  05D2  3040               	movlw	64
  1167  05D3  00A8               	movwf	waitSEGStop@seg1
  1168  05D4  3000               	movlw	0
  1169  05D5  00A9               	movwf	waitSEGStop@seg1+1
  1170  05D6  3040               	movlw	64
  1171  05D7  00AA               	movwf	waitSEGStop@seg2
  1172  05D8  3000               	movlw	0
  1173  05D9  00AB               	movwf	waitSEGStop@seg2+1
  1174  05DA  30E8               	movlw	232
  1175  05DB  00AC               	movwf	waitSEGStop@wt
  1176  05DC  3003               	movlw	3
  1177  05DD  00AD               	movwf	waitSEGStop@wt+1
  1178  05DE  3001               	movlw	1
  1179  05DF  00AE               	movwf	waitSEGStop@dousa
  1180  05E0  3000               	movlw	0
  1181  05E1  00AF               	movwf	waitSEGStop@dousa+1
  1182  05E2  3183  2334  3185   	fcall	_waitSEGStop
  1183  05E5  0020               	movlb	0	; select bank0
  1184  05E6  0829               	movf	?_waitSEGStop+1,w
  1185  05E7  00D3               	movwf	_zyoutai+1
  1186  05E8  0828               	movf	?_waitSEGStop,w
  1187  05E9  00D2               	movwf	_zyoutai
  1188  05EA                     l3239:
  1189                           
  1190                           ;Q4.c: 825:             if(zyoutai >= 1){
  1191  05EA  0853               	movf	_zyoutai+1,w
  1192  05EB  3A80               	xorlw	128
  1193  05EC  00BA               	movwf	??_main
  1194  05ED  3080               	movlw	128
  1195  05EE  023A               	subwf	??_main,w
  1196  05EF  1D03               	skipz
  1197  05F0  2DF3               	goto	u3485
  1198  05F1  3001               	movlw	1
  1199  05F2  0252               	subwf	_zyoutai,w
  1200  05F3                     u3485:
  1201  05F3  1C03               	skipc
  1202  05F4  2DF6               	goto	u3481
  1203  05F5  2DF7               	goto	u3480
  1204  05F6                     u3481:
  1205  05F6  2EC4               	goto	l3271
  1206  05F7                     u3480:
  1207  05F7                     l3241:
  1208                           
  1209                           ;Q4.c: 826:                 _delay((unsigned long)((500)*(16000000/4000UL)));
  1210  05F7  300B               	movlw	11
  1211  05F8  0020               	movlb	0	; select bank0
  1212  05F9  00BB               	movwf	??_main+1
  1213  05FA  3026               	movlw	38
  1214  05FB  00BA               	movwf	??_main
  1215  05FC  305D               	movlw	93
  1216  05FD                     u3807:
  1217  05FD  0B89               	decfsz	9,f
  1218  05FE  2DFD               	goto	u3807
  1219  05FF  0BBA               	decfsz	??_main,f
  1220  0600  2DFD               	goto	u3807
  1221  0601  0BBB               	decfsz	??_main+1,f
  1222  0602  2DFD               	goto	u3807
  1223  0603  3200               	nop2
  1224  0604                     l366:	
  1225                           ;Q4.c: 827:                 while(1){
  1226                           
  1227                           
  1228                           ;Q4.c: 828:                     for(i = 1;i<=6;i++){
  1229  0604  3001               	movlw	1
  1230  0605  0020               	movlb	0	; select bank0
  1231  0606  00D0               	movwf	main@i
  1232  0607  3000               	movlw	0
  1233  0608  00D1               	movwf	main@i+1
  1234  0609                     l3245:
  1235                           
  1236                           ;Q4.c: 829:                         zyoutai = waitSEGStop(0x40,num0[i],1000,0b001);
  1237  0609  3040               	movlw	64
  1238  060A  0020               	movlb	0	; select bank0
  1239  060B  00A8               	movwf	waitSEGStop@seg1
  1240  060C  3000               	movlw	0
  1241  060D  00A9               	movwf	waitSEGStop@seg1+1
  1242  060E  3550               	lslf	main@i,w
  1243  060F  3EC0               	addlw	(low (_num0| 0))& (0+255)
  1244  0610  0086               	movwf	6
  1245  0611  0187               	clrf	7
  1246  0612  3F40               	moviw [0]fsr1
  1247  0613  00AA               	movwf	waitSEGStop@seg2
  1248  0614  3F41               	moviw [1]fsr1
  1249  0615  00AB               	movwf	waitSEGStop@seg2+1
  1250  0616  30E8               	movlw	232
  1251  0617  00AC               	movwf	waitSEGStop@wt
  1252  0618  3003               	movlw	3
  1253  0619  00AD               	movwf	waitSEGStop@wt+1
  1254  061A  3001               	movlw	1
  1255  061B  00AE               	movwf	waitSEGStop@dousa
  1256  061C  3000               	movlw	0
  1257  061D  00AF               	movwf	waitSEGStop@dousa+1
  1258  061E  3183  2334  3185   	fcall	_waitSEGStop
  1259  0621  0020               	movlb	0	; select bank0
  1260  0622  0829               	movf	?_waitSEGStop+1,w
  1261  0623  00D3               	movwf	_zyoutai+1
  1262  0624  0828               	movf	?_waitSEGStop,w
  1263  0625  00D2               	movwf	_zyoutai
  1264  0626                     l3247:
  1265                           
  1266                           ;Q4.c: 830:                         if(zyoutai > 0){
  1267  0626  0853               	movf	_zyoutai+1,w
  1268  0627  3A80               	xorlw	128
  1269  0628  00BA               	movwf	??_main
  1270  0629  3080               	movlw	128
  1271  062A  023A               	subwf	??_main,w
  1272  062B  1D03               	skipz
  1273  062C  2E2F               	goto	u3495
  1274  062D  3001               	movlw	1
  1275  062E  0252               	subwf	_zyoutai,w
  1276  062F                     u3495:
  1277  062F  1C03               	skipc
  1278  0630  2E32               	goto	u3491
  1279  0631  2E33               	goto	u3490
  1280  0632                     u3491:
  1281  0632  2E56               	goto	l3259
  1282  0633                     u3490:
  1283  0633                     l3249:
  1284                           
  1285                           ;Q4.c: 831:                             ans++;
  1286  0633  3001               	movlw	1
  1287  0634  0020               	movlb	0	; select bank0
  1288  0635  07CE               	addwf	main@ans,f
  1289  0636  3000               	movlw	0
  1290  0637  3DCF               	addwfc	main@ans+1,f
  1291  0638                     l3251:
  1292                           
  1293                           ;Q4.c: 832:                             zyoutai = waitSEGStop(0x40,num0[i],zyoutai,0b001
      +                          );
  1294  0638  3040               	movlw	64
  1295  0639  00A8               	movwf	waitSEGStop@seg1
  1296  063A  3000               	movlw	0
  1297  063B  00A9               	movwf	waitSEGStop@seg1+1
  1298  063C  3550               	lslf	main@i,w
  1299  063D  3EC0               	addlw	(low (_num0| 0))& (0+255)
  1300  063E  0086               	movwf	6
  1301  063F  0187               	clrf	7
  1302  0640  3F40               	moviw [0]fsr1
  1303  0641  00AA               	movwf	waitSEGStop@seg2
  1304  0642  3F41               	moviw [1]fsr1
  1305  0643  00AB               	movwf	waitSEGStop@seg2+1
  1306  0644  0853               	movf	_zyoutai+1,w
  1307  0645  00AD               	movwf	waitSEGStop@wt+1
  1308  0646  0852               	movf	_zyoutai,w
  1309  0647  00AC               	movwf	waitSEGStop@wt
  1310  0648  3001               	movlw	1
  1311  0649  00AE               	movwf	waitSEGStop@dousa
  1312  064A  3000               	movlw	0
  1313  064B  00AF               	movwf	waitSEGStop@dousa+1
  1314  064C  3183  2334  3185   	fcall	_waitSEGStop
  1315  064F  0020               	movlb	0	; select bank0
  1316  0650  0829               	movf	?_waitSEGStop+1,w
  1317  0651  00D3               	movwf	_zyoutai+1
  1318  0652  0828               	movf	?_waitSEGStop,w
  1319  0653  00D2               	movwf	_zyoutai
  1320  0654                     l3253:
  1321                           
  1322                           ;Q4.c: 833:                             zyoutai =0;
  1323  0654  01D2               	clrf	_zyoutai
  1324  0655  01D3               	clrf	_zyoutai+1
  1325  0656                     l3259:
  1326                           
  1327                           ;Q4.c: 839:                         if(ans == 2){
  1328  0656  3002               	movlw	2
  1329  0657  0020               	movlb	0	; select bank0
  1330  0658  064E               	xorwf	main@ans,w
  1331  0659  044F               	iorwf	main@ans+1,w
  1332  065A  1D03               	btfss	3,2
  1333  065B  2E5D               	goto	u3501
  1334  065C  2E5E               	goto	u3500
  1335  065D                     u3501:
  1336  065D  2EB2               	goto	l3269
  1337  065E                     u3500:
  1338  065E                     l3261:
  1339                           
  1340                           ;Q4.c: 840:                             motor(60*i,0x40,num0[i],2,5);
  1341  065E  0851               	movf	main@i+1,w
  1342  065F  00F9               	movwf	___wmul@multiplier+1
  1343  0660  0850               	movf	main@i,w
  1344  0661  00F8               	movwf	___wmul@multiplier
  1345  0662  303C               	movlw	60
  1346  0663  00FA               	movwf	___wmul@multiplicand
  1347  0664  3000               	movlw	0
  1348  0665  00FB               	movwf	___wmul@multiplicand+1
  1349  0666  3181  2171  3185   	fcall	___wmul
  1350  0669  0879               	movf	?___wmul+1,w
  1351  066A  0020               	movlb	0	; select bank0
  1352  066B  00A9               	movwf	motor@kakudo+1
  1353  066C  0878               	movf	?___wmul,w
  1354  066D  00A8               	movwf	motor@kakudo
  1355  066E  3040               	movlw	64
  1356  066F  00AA               	movwf	motor@dig1data
  1357  0670  3000               	movlw	0
  1358  0671  00AB               	movwf	motor@dig1data+1
  1359  0672  3550               	lslf	main@i,w
  1360  0673  3EC0               	addlw	(low (_num0| 0))& (0+255)
  1361  0674  0086               	movwf	6
  1362  0675  0187               	clrf	7
  1363  0676  3F40               	moviw [0]fsr1
  1364  0677  00AC               	movwf	motor@dig2data
  1365  0678  3F41               	moviw [1]fsr1
  1366  0679  00AD               	movwf	motor@dig2data+1
  1367  067A  3002               	movlw	2
  1368  067B  00AE               	movwf	motor@smdata
  1369  067C  3000               	movlw	0
  1370  067D  00AF               	movwf	motor@smdata+1
  1371  067E  3005               	movlw	5
  1372  067F  00B0               	movwf	motor@tr
  1373  0680  3000               	movlw	0
  1374  0681  00B1               	movwf	motor@tr+1
  1375  0682  3181  21D0  3185   	fcall	_motor
  1376  0685                     l3263:
  1377                           
  1378                           ;Q4.c: 843:                                 if(RA0==1 && RA1 == 0){
  1379  0685  0020               	movlb	0	; select bank0
  1380  0686  1C0C               	btfss	12,0	;volatile
  1381  0687  2E89               	goto	u3511
  1382  0688  2E8A               	goto	u3510
  1383  0689                     u3511:
  1384  0689  2E85               	goto	l3263
  1385  068A                     u3510:
  1386  068A                     l3265:
  1387  068A  188C               	btfsc	12,1	;volatile
  1388  068B  2E8D               	goto	u3521
  1389  068C  2E8E               	goto	u3520
  1390  068D                     u3521:
  1391  068D  2E85               	goto	l3263
  1392  068E                     u3520:
  1393  068E                     l3267:
  1394                           
  1395                           ;Q4.c: 844:                                     motor(60*i,0x40,0x40,1,1);
  1396  068E  0851               	movf	main@i+1,w
  1397  068F  00F9               	movwf	___wmul@multiplier+1
  1398  0690  0850               	movf	main@i,w
  1399  0691  00F8               	movwf	___wmul@multiplier
  1400  0692  303C               	movlw	60
  1401  0693  00FA               	movwf	___wmul@multiplicand
  1402  0694  3000               	movlw	0
  1403  0695  00FB               	movwf	___wmul@multiplicand+1
  1404  0696  3181  2171  3185   	fcall	___wmul
  1405  0699  0879               	movf	?___wmul+1,w
  1406  069A  0020               	movlb	0	; select bank0
  1407  069B  00A9               	movwf	motor@kakudo+1
  1408  069C  0878               	movf	?___wmul,w
  1409  069D  00A8               	movwf	motor@kakudo
  1410  069E  3040               	movlw	64
  1411  069F  00AA               	movwf	motor@dig1data
  1412  06A0  3000               	movlw	0
  1413  06A1  00AB               	movwf	motor@dig1data+1
  1414  06A2  3040               	movlw	64
  1415  06A3  00AC               	movwf	motor@dig2data
  1416  06A4  3000               	movlw	0
  1417  06A5  00AD               	movwf	motor@dig2data+1
  1418  06A6  3001               	movlw	1
  1419  06A7  00AE               	movwf	motor@smdata
  1420  06A8  3000               	movlw	0
  1421  06A9  00AF               	movwf	motor@smdata+1
  1422  06AA  3001               	movlw	1
  1423  06AB  00B0               	movwf	motor@tr
  1424  06AC  3000               	movlw	0
  1425  06AD  00B1               	movwf	motor@tr+1
  1426  06AE  3181  21D0  3185   	fcall	_motor
  1427                           
  1428                           ;Q4.c: 845:                                     goto hukki;
  1429  06B1  2D91               	goto	l361
  1430  06B2                     l3269:
  1431                           
  1432                           ;Q4.c: 849:                     }
  1433  06B2  3001               	movlw	1
  1434  06B3  07D0               	addwf	main@i,f
  1435  06B4  3000               	movlw	0
  1436  06B5  3DD1               	addwfc	main@i+1,f
  1437  06B6  0851               	movf	main@i+1,w
  1438  06B7  3A80               	xorlw	128
  1439  06B8  00BA               	movwf	??_main
  1440  06B9  3080               	movlw	128
  1441  06BA  023A               	subwf	??_main,w
  1442  06BB  1D03               	skipz
  1443  06BC  2EBF               	goto	u3535
  1444  06BD  3007               	movlw	7
  1445  06BE  0250               	subwf	main@i,w
  1446  06BF                     u3535:
  1447  06BF  1C03               	skipc
  1448  06C0  2EC2               	goto	u3531
  1449  06C1  2EC3               	goto	u3530
  1450  06C2                     u3531:
  1451  06C2  2E09               	goto	l3245
  1452  06C3                     u3530:
  1453  06C3  2E04               	goto	l366
  1454  06C4                     l3271:
  1455                           
  1456                           ;Q4.c: 853:             zyoutai = waitSEGStop(0,0x40,1000,0b001);
  1457  06C4  3000               	movlw	0
  1458  06C5  0020               	movlb	0	; select bank0
  1459  06C6  00A8               	movwf	waitSEGStop@seg1
  1460  06C7  00A9               	movwf	waitSEGStop@seg1+1
  1461  06C8  3040               	movlw	64
  1462  06C9  00AA               	movwf	waitSEGStop@seg2
  1463  06CA  3000               	movlw	0
  1464  06CB  00AB               	movwf	waitSEGStop@seg2+1
  1465  06CC  30E8               	movlw	232
  1466  06CD  00AC               	movwf	waitSEGStop@wt
  1467  06CE  3003               	movlw	3
  1468  06CF  00AD               	movwf	waitSEGStop@wt+1
  1469  06D0  3001               	movlw	1
  1470  06D1  00AE               	movwf	waitSEGStop@dousa
  1471  06D2  3000               	movlw	0
  1472  06D3  00AF               	movwf	waitSEGStop@dousa+1
  1473  06D4  3183  2334  3185   	fcall	_waitSEGStop
  1474  06D7  0020               	movlb	0	; select bank0
  1475  06D8  0829               	movf	?_waitSEGStop+1,w
  1476  06D9  00D3               	movwf	_zyoutai+1
  1477  06DA  0828               	movf	?_waitSEGStop,w
  1478  06DB  00D2               	movwf	_zyoutai
  1479  06DC                     l3273:
  1480                           
  1481                           ;Q4.c: 855:             if(zyoutai >= 1){
  1482  06DC  0853               	movf	_zyoutai+1,w
  1483  06DD  3A80               	xorlw	128
  1484  06DE  00BA               	movwf	??_main
  1485  06DF  3080               	movlw	128
  1486  06E0  023A               	subwf	??_main,w
  1487  06E1  1D03               	skipz
  1488  06E2  2EE5               	goto	u3545
  1489  06E3  3001               	movlw	1
  1490  06E4  0252               	subwf	_zyoutai,w
  1491  06E5                     u3545:
  1492  06E5  1C03               	skipc
  1493  06E6  2EE8               	goto	u3541
  1494  06E7  2EE9               	goto	u3540
  1495  06E8                     u3541:
  1496  06E8  2DAF               	goto	l3227
  1497  06E9                     u3540:
  1498  06E9                     l3275:
  1499                           
  1500                           ;Q4.c: 856:                 _delay((unsigned long)((500)*(16000000/4000UL)));
  1501  06E9  300B               	movlw	11
  1502  06EA  0020               	movlb	0	; select bank0
  1503  06EB  00BB               	movwf	??_main+1
  1504  06EC  3026               	movlw	38
  1505  06ED  00BA               	movwf	??_main
  1506  06EE  305D               	movlw	93
  1507  06EF                     u3817:
  1508  06EF  0B89               	decfsz	9,f
  1509  06F0  2EEF               	goto	u3817
  1510  06F1  0BBA               	decfsz	??_main,f
  1511  06F2  2EEF               	goto	u3817
  1512  06F3  0BBB               	decfsz	??_main+1,f
  1513  06F4  2EEF               	goto	u3817
  1514  06F5  3200               	nop2
  1515  06F6                     l379:	
  1516                           ;Q4.c: 857:                 while(1){
  1517                           
  1518                           
  1519                           ;Q4.c: 858:                     for(i = 1;i<=6;i++){
  1520  06F6  3001               	movlw	1
  1521  06F7  0020               	movlb	0	; select bank0
  1522  06F8  00D0               	movwf	main@i
  1523  06F9  3000               	movlw	0
  1524  06FA  00D1               	movwf	main@i+1
  1525  06FB                     l3279:
  1526                           
  1527                           ;Q4.c: 859:                         zyoutai = waitSEGStop(0,num0[i],1000,0b001);
  1528  06FB  3000               	movlw	0
  1529  06FC  0020               	movlb	0	; select bank0
  1530  06FD  00A8               	movwf	waitSEGStop@seg1
  1531  06FE  00A9               	movwf	waitSEGStop@seg1+1
  1532  06FF  3550               	lslf	main@i,w
  1533  0700  3EC0               	addlw	(low (_num0| 0))& (0+255)
  1534  0701  0086               	movwf	6
  1535  0702  0187               	clrf	7
  1536  0703  3F40               	moviw [0]fsr1
  1537  0704  00AA               	movwf	waitSEGStop@seg2
  1538  0705  3F41               	moviw [1]fsr1
  1539  0706  00AB               	movwf	waitSEGStop@seg2+1
  1540  0707  30E8               	movlw	232
  1541  0708  00AC               	movwf	waitSEGStop@wt
  1542  0709  3003               	movlw	3
  1543  070A  00AD               	movwf	waitSEGStop@wt+1
  1544  070B  3001               	movlw	1
  1545  070C  00AE               	movwf	waitSEGStop@dousa
  1546  070D  3000               	movlw	0
  1547  070E  00AF               	movwf	waitSEGStop@dousa+1
  1548  070F  3183  2334  3185   	fcall	_waitSEGStop
  1549  0712  0020               	movlb	0	; select bank0
  1550  0713  0829               	movf	?_waitSEGStop+1,w
  1551  0714  00D3               	movwf	_zyoutai+1
  1552  0715  0828               	movf	?_waitSEGStop,w
  1553  0716  00D2               	movwf	_zyoutai
  1554  0717                     l3281:
  1555                           
  1556                           ;Q4.c: 860:                         if(zyoutai > 0){
  1557  0717  0853               	movf	_zyoutai+1,w
  1558  0718  3A80               	xorlw	128
  1559  0719  00BA               	movwf	??_main
  1560  071A  3080               	movlw	128
  1561  071B  023A               	subwf	??_main,w
  1562  071C  1D03               	skipz
  1563  071D  2F20               	goto	u3555
  1564  071E  3001               	movlw	1
  1565  071F  0252               	subwf	_zyoutai,w
  1566  0720                     u3555:
  1567  0720  1C03               	skipc
  1568  0721  2F23               	goto	u3551
  1569  0722  2F24               	goto	u3550
  1570  0723                     u3551:
  1571  0723  2F56               	goto	l3291
  1572  0724                     u3550:
  1573  0724                     l3283:
  1574                           
  1575                           ;Q4.c: 861:                             ans++;
  1576  0724  3001               	movlw	1
  1577  0725  0020               	movlb	0	; select bank0
  1578  0726  07CE               	addwf	main@ans,f
  1579  0727  3000               	movlw	0
  1580  0728  3DCF               	addwfc	main@ans+1,f
  1581  0729                     l3285:
  1582                           
  1583                           ;Q4.c: 862:                             zyoutai = waitSEGStop(0,num0[i],zyoutai,0b001);
  1584  0729  3000               	movlw	0
  1585  072A  00A8               	movwf	waitSEGStop@seg1
  1586  072B  00A9               	movwf	waitSEGStop@seg1+1
  1587  072C  3550               	lslf	main@i,w
  1588  072D  3EC0               	addlw	(low (_num0| 0))& (0+255)
  1589  072E  0086               	movwf	6
  1590  072F  0187               	clrf	7
  1591  0730  3F40               	moviw [0]fsr1
  1592  0731  00AA               	movwf	waitSEGStop@seg2
  1593  0732  3F41               	moviw [1]fsr1
  1594  0733  00AB               	movwf	waitSEGStop@seg2+1
  1595  0734  0853               	movf	_zyoutai+1,w
  1596  0735  00AD               	movwf	waitSEGStop@wt+1
  1597  0736  0852               	movf	_zyoutai,w
  1598  0737  00AC               	movwf	waitSEGStop@wt
  1599  0738  3001               	movlw	1
  1600  0739  00AE               	movwf	waitSEGStop@dousa
  1601  073A  3000               	movlw	0
  1602  073B  00AF               	movwf	waitSEGStop@dousa+1
  1603  073C  3183  2334  3185   	fcall	_waitSEGStop
  1604  073F  0020               	movlb	0	; select bank0
  1605  0740  0829               	movf	?_waitSEGStop+1,w
  1606  0741  00D3               	movwf	_zyoutai+1
  1607  0742  0828               	movf	?_waitSEGStop,w
  1608  0743  00D2               	movwf	_zyoutai
  1609  0744                     l3287:
  1610                           
  1611                           ;Q4.c: 863:                             if(zyoutai > 0){
  1612  0744  0853               	movf	_zyoutai+1,w
  1613  0745  3A80               	xorlw	128
  1614  0746  00BA               	movwf	??_main
  1615  0747  3080               	movlw	128
  1616  0748  023A               	subwf	??_main,w
  1617  0749  1D03               	skipz
  1618  074A  2F4D               	goto	u3565
  1619  074B  3001               	movlw	1
  1620  074C  0252               	subwf	_zyoutai,w
  1621  074D                     u3565:
  1622  074D  1C03               	skipc
  1623  074E  2F50               	goto	u3561
  1624  074F  2F51               	goto	u3560
  1625  0750                     u3561:
  1626  0750  2F56               	goto	l3291
  1627  0751                     u3560:
  1628  0751                     l3289:
  1629                           
  1630                           ;Q4.c: 864:                                 ans++;
  1631  0751  3001               	movlw	1
  1632  0752  0020               	movlb	0	; select bank0
  1633  0753  07CE               	addwf	main@ans,f
  1634  0754  3000               	movlw	0
  1635  0755  3DCF               	addwfc	main@ans+1,f
  1636  0756                     l3291:
  1637                           
  1638                           ;Q4.c: 868:                         if(ans == 2){
  1639  0756  3002               	movlw	2
  1640  0757  0020               	movlb	0	; select bank0
  1641  0758  064E               	xorwf	main@ans,w
  1642  0759  044F               	iorwf	main@ans+1,w
  1643  075A  1D03               	btfss	3,2
  1644  075B  2F5D               	goto	u3571
  1645  075C  2F5E               	goto	u3570
  1646  075D                     u3571:
  1647  075D  2FB6               	goto	l3301
  1648  075E                     u3570:
  1649  075E                     l3293:
  1650                           
  1651                           ;Q4.c: 869:                             motor(60*i,0,num0[i],1,5);
  1652  075E  0851               	movf	main@i+1,w
  1653  075F  00F9               	movwf	___wmul@multiplier+1
  1654  0760  0850               	movf	main@i,w
  1655  0761  00F8               	movwf	___wmul@multiplier
  1656  0762  303C               	movlw	60
  1657  0763  00FA               	movwf	___wmul@multiplicand
  1658  0764  3000               	movlw	0
  1659  0765  00FB               	movwf	___wmul@multiplicand+1
  1660  0766  3181  2171  3185   	fcall	___wmul
  1661  0769  0879               	movf	?___wmul+1,w
  1662  076A  0020               	movlb	0	; select bank0
  1663  076B  00A9               	movwf	motor@kakudo+1
  1664  076C  0878               	movf	?___wmul,w
  1665  076D  00A8               	movwf	motor@kakudo
  1666  076E  3000               	movlw	0
  1667  076F  00AA               	movwf	motor@dig1data
  1668  0770  00AB               	movwf	motor@dig1data+1
  1669  0771  3550               	lslf	main@i,w
  1670  0772  3EC0               	addlw	(low (_num0| 0))& (0+255)
  1671  0773  0086               	movwf	6
  1672  0774  0187               	clrf	7
  1673  0775  3F40               	moviw [0]fsr1
  1674  0776  00AC               	movwf	motor@dig2data
  1675  0777  3F41               	moviw [1]fsr1
  1676  0778  00AD               	movwf	motor@dig2data+1
  1677  0779  3001               	movlw	1
  1678  077A  00AE               	movwf	motor@smdata
  1679  077B  3000               	movlw	0
  1680  077C  00AF               	movwf	motor@smdata+1
  1681  077D  3005               	movlw	5
  1682  077E  00B0               	movwf	motor@tr
  1683  077F  3000               	movlw	0
  1684  0780  00B1               	movwf	motor@tr+1
  1685  0781  3181  21D0  3185   	fcall	_motor
  1686  0784                     l3295:
  1687                           
  1688                           ;Q4.c: 872:                                 if(RA0==1 && RA1 == 0){
  1689  0784  0020               	movlb	0	; select bank0
  1690  0785  1C0C               	btfss	12,0	;volatile
  1691  0786  2F88               	goto	u3581
  1692  0787  2F89               	goto	u3580
  1693  0788                     u3581:
  1694  0788  2F84               	goto	l3295
  1695  0789                     u3580:
  1696  0789                     l3297:
  1697  0789  188C               	btfsc	12,1	;volatile
  1698  078A  2F8C               	goto	u3591
  1699  078B  2F8D               	goto	u3590
  1700  078C                     u3591:
  1701  078C  2F84               	goto	l3295
  1702  078D                     u3590:
  1703  078D                     l3299:
  1704                           
  1705                           ;Q4.c: 873:                                     motor(60*(6-i),0x40,0x40,1,1);
  1706  078D  3006               	movlw	6
  1707  078E  00BA               	movwf	??_main
  1708  078F  0850               	movf	main@i,w
  1709  0790  023A               	subwf	??_main,w
  1710  0791  00F8               	movwf	___wmul@multiplier
  1711  0792  0951               	comf	main@i+1,w
  1712  0793  1803               	skipnc
  1713  0794  0A89               	incf	9,f
  1714  0795  00F9               	movwf	___wmul@multiplier+1
  1715  0796  303C               	movlw	60
  1716  0797  00FA               	movwf	___wmul@multiplicand
  1717  0798  3000               	movlw	0
  1718  0799  00FB               	movwf	___wmul@multiplicand+1
  1719  079A  3181  2171  3185   	fcall	___wmul
  1720  079D  0879               	movf	?___wmul+1,w
  1721  079E  0020               	movlb	0	; select bank0
  1722  079F  00A9               	movwf	motor@kakudo+1
  1723  07A0  0878               	movf	?___wmul,w
  1724  07A1  00A8               	movwf	motor@kakudo
  1725  07A2  3040               	movlw	64
  1726  07A3  00AA               	movwf	motor@dig1data
  1727  07A4  3000               	movlw	0
  1728  07A5  00AB               	movwf	motor@dig1data+1
  1729  07A6  3040               	movlw	64
  1730  07A7  00AC               	movwf	motor@dig2data
  1731  07A8  3000               	movlw	0
  1732  07A9  00AD               	movwf	motor@dig2data+1
  1733  07AA  3001               	movlw	1
  1734  07AB  00AE               	movwf	motor@smdata
  1735  07AC  3000               	movlw	0
  1736  07AD  00AF               	movwf	motor@smdata+1
  1737  07AE  3001               	movlw	1
  1738  07AF  00B0               	movwf	motor@tr
  1739  07B0  3000               	movlw	0
  1740  07B1  00B1               	movwf	motor@tr+1
  1741  07B2  3181  21D0  3185   	fcall	_motor
  1742                           
  1743                           ;Q4.c: 874:                                     goto hukki;
  1744  07B5  2D91               	goto	l361
  1745  07B6                     l3301:
  1746                           
  1747                           ;Q4.c: 879:                     }
  1748  07B6  3001               	movlw	1
  1749  07B7  07D0               	addwf	main@i,f
  1750  07B8  3000               	movlw	0
  1751  07B9  3DD1               	addwfc	main@i+1,f
  1752  07BA  0851               	movf	main@i+1,w
  1753  07BB  3A80               	xorlw	128
  1754  07BC  00BA               	movwf	??_main
  1755  07BD  3080               	movlw	128
  1756  07BE  023A               	subwf	??_main,w
  1757  07BF  1D03               	skipz
  1758  07C0  2FC3               	goto	u3605
  1759  07C1  3007               	movlw	7
  1760  07C2  0250               	subwf	main@i,w
  1761  07C3                     u3605:
  1762  07C3  1C03               	skipc
  1763  07C4  2FC6               	goto	u3601
  1764  07C5  2FC7               	goto	u3600
  1765  07C6                     u3601:
  1766  07C6  2EFB               	goto	l3279
  1767  07C7                     u3600:
  1768  07C7  2EF6               	goto	l379
  1769  07C8  3180  2802         	ljmp	start
  1770  07CA                     __end_of_main:
  1771                           
  1772                           	psect	text1
  1773  0155                     __ptext1:	
  1774 ;; *************** function _zenoff *****************
  1775 ;; Defined at:
  1776 ;;		line 195 in file "Q4.c"
  1777 ;; Parameters:    Size  Location     Type
  1778 ;;		None
  1779 ;; Auto vars:     Size  Location     Type
  1780 ;;		None
  1781 ;; Return value:  Size  Location     Type
  1782 ;;                  1    wreg      void 
  1783 ;; Registers used:
  1784 ;;		status,2
  1785 ;; Tracked objects:
  1786 ;;		On entry : 0/0
  1787 ;;		On exit  : 0/0
  1788 ;;		Unchanged: 0/0
  1789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1794 ;;Total ram usage:        0 bytes
  1795 ;; Hardware stack levels used:    1
  1796 ;; This function calls:
  1797 ;;		Nothing
  1798 ;; This function is called by:
  1799 ;;		_main
  1800 ;; This function uses a non-reentrant model
  1801 ;;
  1802                           
  1803                           
  1804                           ;psect for function _zenoff
  1805  0155                     _zenoff:
  1806  0155                     l2481:	
  1807                           ;incstack = 0
  1808                           ; Regs used in _zenoff: [status,2]
  1809                           
  1810                           
  1811                           ;Q4.c: 197:     RC2=1;
  1812  0155  0020               	movlb	0	; select bank0
  1813  0156  150E               	bsf	14,2	;volatile
  1814                           
  1815                           ;Q4.c: 198:     RC1=1;
  1816  0157  148E               	bsf	14,1	;volatile
  1817                           
  1818                           ;Q4.c: 199:     RC0=1;
  1819  0158  140E               	bsf	14,0	;volatile
  1820  0159                     l2483:
  1821                           
  1822                           ;Q4.c: 200:     PORTB=0x00;
  1823  0159  018D               	clrf	13	;volatile
  1824  015A                     l2485:
  1825                           
  1826                           ;Q4.c: 201:     RC7=0;RC7=1;RC7=0;
  1827  015A  138E               	bcf	14,7	;volatile
  1828  015B                     l2487:
  1829  015B  178E               	bsf	14,7	;volatile
  1830  015C                     l2489:
  1831  015C  138E               	bcf	14,7	;volatile
  1832  015D                     l108:
  1833  015D  0008               	return
  1834  015E                     __end_of_zenoff:
  1835                           
  1836                           	psect	text2
  1837  0334                     __ptext2:	
  1838 ;; *************** function _waitSEGStop *****************
  1839 ;; Defined at:
  1840 ;;		line 464 in file "Q4.c"
  1841 ;; Parameters:    Size  Location     Type
  1842 ;;  seg1            2    8[BANK0 ] unsigned short 
  1843 ;;  seg2            2   10[BANK0 ] unsigned short 
  1844 ;;  wt              2   12[BANK0 ] unsigned short 
  1845 ;;  dousa           2   14[BANK0 ] int 
  1846 ;; Auto vars:     Size  Location     Type
  1847 ;;  i               2   24[BANK0 ] unsigned int 
  1848 ;;  cpSW3           2   22[BANK0 ] int 
  1849 ;;  cpSW2           2   20[BANK0 ] int 
  1850 ;;  cpSW1           2   18[BANK0 ] int 
  1851 ;; Return value:  Size  Location     Type
  1852 ;;                  2    8[BANK0 ] int 
  1853 ;; Registers used:
  1854 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1855 ;; Tracked objects:
  1856 ;;		On entry : 0/0
  1857 ;;		On exit  : 0/0
  1858 ;;		Unchanged: 0/0
  1859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1860 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1861 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1862 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1863 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1864 ;;Total ram usage:       18 bytes
  1865 ;; Hardware stack levels used:    1
  1866 ;; Hardware stack levels required when called:    2
  1867 ;; This function calls:
  1868 ;;		___lwdiv
  1869 ;;		___wmul
  1870 ;;		_dynam
  1871 ;;		_fclr
  1872 ;;		_tact
  1873 ;; This function is called by:
  1874 ;;		_main
  1875 ;; This function uses a non-reentrant model
  1876 ;;
  1877                           
  1878                           
  1879                           ;psect for function _waitSEGStop
  1880  0334                     _waitSEGStop:
  1881  0334                     l2531:	
  1882                           ;incstack = 0
  1883                           ; Regs used in _waitSEGStop: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1884                           
  1885                           
  1886                           ;Q4.c: 464: int waitSEGStop(unsigned short seg1,unsigned short seg2,unsigned short wt,in
      +                          t dousa);Q4.c: 465: {;Q4.c: 467:     int cpSW1 = RA0;
  1887  0334  1003               	clrc
  1888  0335  0020               	movlb	0	; select bank0
  1889  0336  180C               	btfsc	12,0	;volatile
  1890  0337  1403               	setc
  1891  0338  3000               	movlw	0
  1892  0339  3D09               	addwfc	9,w
  1893  033A  00B0               	movwf	??_waitSEGStop
  1894  033B  01B1               	clrf	??_waitSEGStop+1
  1895  033C  0830               	movf	??_waitSEGStop,w
  1896  033D  00B2               	movwf	waitSEGStop@cpSW1
  1897  033E  0831               	movf	??_waitSEGStop+1,w
  1898  033F  00B3               	movwf	waitSEGStop@cpSW1+1
  1899                           
  1900                           ;Q4.c: 468:     int cpSW2 = RA1;
  1901  0340  1003               	clrc
  1902  0341  188C               	btfsc	12,1	;volatile
  1903  0342  1403               	setc
  1904  0343  3000               	movlw	0
  1905  0344  3D09               	addwfc	9,w
  1906  0345  00B0               	movwf	??_waitSEGStop
  1907  0346  01B1               	clrf	??_waitSEGStop+1
  1908  0347  0830               	movf	??_waitSEGStop,w
  1909  0348  00B4               	movwf	waitSEGStop@cpSW2
  1910  0349  0831               	movf	??_waitSEGStop+1,w
  1911  034A  00B5               	movwf	waitSEGStop@cpSW2+1
  1912                           
  1913                           ;Q4.c: 469:     int cpSW3 = RA2;
  1914  034B  1003               	clrc
  1915  034C  190C               	btfsc	12,2	;volatile
  1916  034D  1403               	setc
  1917  034E  3000               	movlw	0
  1918  034F  3D09               	addwfc	9,w
  1919  0350  00B0               	movwf	??_waitSEGStop
  1920  0351  01B1               	clrf	??_waitSEGStop+1
  1921  0352  0830               	movf	??_waitSEGStop,w
  1922  0353  00B6               	movwf	waitSEGStop@cpSW3
  1923  0354  0831               	movf	??_waitSEGStop+1,w
  1924  0355  00B7               	movwf	waitSEGStop@cpSW3+1
  1925  0356                     l2533:
  1926                           
  1927                           ;Q4.c: 473:     wt = wt / 10 + wt/1000*60;
  1928  0356  30E8               	movlw	232
  1929  0357  00F0               	movwf	___lwdiv@divisor
  1930  0358  3003               	movlw	3
  1931  0359  00F1               	movwf	___lwdiv@divisor+1
  1932  035A  082D               	movf	waitSEGStop@wt+1,w
  1933  035B  00F3               	movwf	___lwdiv@dividend+1
  1934  035C  082C               	movf	waitSEGStop@wt,w
  1935  035D  00F2               	movwf	___lwdiv@dividend
  1936  035E  3182  222A  3183   	fcall	___lwdiv
  1937  0361  0871               	movf	?___lwdiv+1,w
  1938  0362  00F9               	movwf	___wmul@multiplier+1
  1939  0363  0870               	movf	?___lwdiv,w
  1940  0364  00F8               	movwf	___wmul@multiplier
  1941  0365  303C               	movlw	60
  1942  0366  00FA               	movwf	___wmul@multiplicand
  1943  0367  3000               	movlw	0
  1944  0368  00FB               	movwf	___wmul@multiplicand+1
  1945  0369  3181  2171  3183   	fcall	___wmul
  1946  036C  0878               	movf	?___wmul,w
  1947  036D  0020               	movlb	0	; select bank0
  1948  036E  00B0               	movwf	??_waitSEGStop
  1949  036F  0879               	movf	?___wmul+1,w
  1950  0370  00B1               	movwf	??_waitSEGStop+1
  1951  0371  300A               	movlw	10
  1952  0372  00F0               	movwf	___lwdiv@divisor
  1953  0373  3000               	movlw	0
  1954  0374  00F1               	movwf	___lwdiv@divisor+1
  1955  0375  082D               	movf	waitSEGStop@wt+1,w
  1956  0376  00F3               	movwf	___lwdiv@dividend+1
  1957  0377  082C               	movf	waitSEGStop@wt,w
  1958  0378  00F2               	movwf	___lwdiv@dividend
  1959  0379  3182  222A  3183   	fcall	___lwdiv
  1960  037C  0870               	movf	?___lwdiv,w
  1961  037D  0020               	movlb	0	; select bank0
  1962  037E  0730               	addwf	??_waitSEGStop,w
  1963  037F  00AC               	movwf	waitSEGStop@wt
  1964  0380  0871               	movf	?___lwdiv+1,w
  1965  0381  3D31               	addwfc	??_waitSEGStop+1,w
  1966  0382  00AD               	movwf	waitSEGStop@wt+1
  1967  0383                     l2535:
  1968                           
  1969                           ;Q4.c: 474:     unsigned int i;;Q4.c: 476:     for(i=wt;i>0;--i){
  1970  0383  082D               	movf	waitSEGStop@wt+1,w
  1971  0384  00B9               	movwf	waitSEGStop@i+1
  1972  0385  082C               	movf	waitSEGStop@wt,w
  1973  0386  00B8               	movwf	waitSEGStop@i
  1974  0387                     l2537:
  1975  0387  0838               	movf	waitSEGStop@i,w
  1976  0388  0439               	iorwf	waitSEGStop@i+1,w
  1977  0389  1D03               	btfss	3,2
  1978  038A  2B8C               	goto	u2271
  1979  038B  2B8D               	goto	u2270
  1980  038C                     u2271:
  1981  038C  2B8E               	goto	l2541
  1982  038D                     u2270:
  1983  038D  2C0E               	goto	l2589
  1984  038E                     l2541:
  1985                           
  1986                           ;Q4.c: 477:         dynam(seg1,seg2,0,0);
  1987  038E  0829               	movf	waitSEGStop@seg1+1,w
  1988  038F  00F1               	movwf	dynam@dig1data+1
  1989  0390  0828               	movf	waitSEGStop@seg1,w
  1990  0391  00F0               	movwf	dynam@dig1data
  1991  0392  082B               	movf	waitSEGStop@seg2+1,w
  1992  0393  00F3               	movwf	dynam@dig2data+1
  1993  0394  082A               	movf	waitSEGStop@seg2,w
  1994  0395  00F2               	movwf	dynam@dig2data
  1995  0396  3000               	movlw	0
  1996  0397  00F4               	movwf	dynam@smdata
  1997  0398  00F5               	movwf	dynam@smdata+1
  1998  0399  3000               	movlw	0
  1999  039A  00F6               	movwf	dynam@tr
  2000  039B  00F7               	movwf	dynam@tr+1
  2001  039C  3184  2411  3183   	fcall	_dynam
  2002                           
  2003                           ;Q4.c: 479:         tact(0);
  2004  039F  3000               	movlw	0
  2005  03A0  00F8               	movwf	tact@mode
  2006  03A1  00F9               	movwf	tact@mode+1
  2007  03A2  3182  22E9  3183   	fcall	_tact
  2008  03A5                     l2543:
  2009                           
  2010                           ;Q4.c: 481:         if(cpSW1 != RA0){
  2011  03A5  1003               	clrc
  2012  03A6  0020               	movlb	0	; select bank0
  2013  03A7  180C               	btfsc	12,0	;volatile
  2014  03A8  1403               	setc
  2015  03A9  3000               	movlw	0
  2016  03AA  3D09               	addwfc	9,w
  2017  03AB  00B0               	movwf	??_waitSEGStop
  2018  03AC  01B1               	clrf	??_waitSEGStop+1
  2019  03AD  0833               	movf	waitSEGStop@cpSW1+1,w
  2020  03AE  0631               	xorwf	??_waitSEGStop+1,w
  2021  03AF  1D03               	skipz
  2022  03B0  2BB3               	goto	u2285
  2023  03B1  0832               	movf	waitSEGStop@cpSW1,w
  2024  03B2  0630               	xorwf	??_waitSEGStop,w
  2025  03B3                     u2285:
  2026  03B3  1903               	skipnz
  2027  03B4  2BB6               	goto	u2281
  2028  03B5  2BB7               	goto	u2280
  2029  03B6                     u2281:
  2030  03B6  2BC8               	goto	l2553
  2031  03B7                     u2280:
  2032  03B7                     l2545:
  2033                           
  2034                           ;Q4.c: 482:             if((0b100 & dousa) == 0b100){
  2035  03B7  1D2E               	btfss	waitSEGStop@dousa,2
  2036  03B8  2BBA               	goto	u2291
  2037  03B9  2BBB               	goto	u2290
  2038  03BA                     u2291:
  2039  03BA  2BC8               	goto	l2553
  2040  03BB                     u2290:
  2041  03BB                     l2547:
  2042                           
  2043                           ;Q4.c: 484:                 fclr(2);
  2044  03BB  3002               	movlw	2
  2045  03BC  00F0               	movwf	fclr@flg
  2046  03BD  3000               	movlw	0
  2047  03BE  00F1               	movwf	fclr@flg+1
  2048  03BF  3181  2190  3183   	fcall	_fclr
  2049  03C2                     l2549:
  2050                           
  2051                           ;Q4.c: 485:                 return i;
  2052  03C2  0020               	movlb	0	; select bank0
  2053  03C3  0839               	movf	waitSEGStop@i+1,w
  2054  03C4  00A9               	movwf	?_waitSEGStop+1
  2055  03C5  0838               	movf	waitSEGStop@i,w
  2056  03C6  00A8               	movwf	?_waitSEGStop
  2057  03C7  2C10               	goto	l265
  2058  03C8                     l2553:
  2059                           
  2060                           ;Q4.c: 488:         if(cpSW2 != RA1){
  2061  03C8  1003               	clrc
  2062  03C9  188C               	btfsc	12,1	;volatile
  2063  03CA  1403               	setc
  2064  03CB  3000               	movlw	0
  2065  03CC  3D09               	addwfc	9,w
  2066  03CD  00B0               	movwf	??_waitSEGStop
  2067  03CE  01B1               	clrf	??_waitSEGStop+1
  2068  03CF  0835               	movf	waitSEGStop@cpSW2+1,w
  2069  03D0  0631               	xorwf	??_waitSEGStop+1,w
  2070  03D1  1D03               	skipz
  2071  03D2  2BD5               	goto	u2305
  2072  03D3  0834               	movf	waitSEGStop@cpSW2,w
  2073  03D4  0630               	xorwf	??_waitSEGStop,w
  2074  03D5                     u2305:
  2075  03D5  1903               	skipnz
  2076  03D6  2BD8               	goto	u2301
  2077  03D7  2BD9               	goto	u2300
  2078  03D8                     u2301:
  2079  03D8  2BDE               	goto	l2563
  2080  03D9                     u2300:
  2081  03D9                     l2555:
  2082                           
  2083                           ;Q4.c: 489:             if((0b010 & dousa) == 0b010){
  2084  03D9  1CAE               	btfss	waitSEGStop@dousa,1
  2085  03DA  2BDC               	goto	u2311
  2086  03DB  2BDD               	goto	u2310
  2087  03DC                     u2311:
  2088  03DC  2BDE               	goto	l2563
  2089  03DD                     u2310:
  2090  03DD  2BBB               	goto	l2547
  2091  03DE                     l2563:
  2092                           
  2093                           ;Q4.c: 495:         if(((flag_sw3==1)&&(flag_R==1))){
  2094  03DE  036A               	decf	_flag_sw3,w
  2095  03DF  046B               	iorwf	_flag_sw3+1,w
  2096  03E0  1D03               	btfss	3,2
  2097  03E1  2BE3               	goto	u2321
  2098  03E2  2BE4               	goto	u2320
  2099  03E3                     u2321:
  2100  03E3  2BF3               	goto	l2577
  2101  03E4                     u2320:
  2102  03E4                     l2565:
  2103  03E4  0368               	decf	_flag_R,w
  2104  03E5  0469               	iorwf	_flag_R+1,w
  2105  03E6  1D03               	btfss	3,2
  2106  03E7  2BE9               	goto	u2331
  2107  03E8  2BEA               	goto	u2330
  2108  03E9                     u2331:
  2109  03E9  2BF3               	goto	l2577
  2110  03EA                     u2330:
  2111  03EA                     l2567:
  2112                           
  2113                           ;Q4.c: 496:             if(RA2 != 0 && (0b001 & dousa) == 0b001){
  2114  03EA  1D0C               	btfss	12,2	;volatile
  2115  03EB  2BED               	goto	u2341
  2116  03EC  2BEE               	goto	u2340
  2117  03ED                     u2341:
  2118  03ED  2BF3               	goto	l2577
  2119  03EE                     u2340:
  2120  03EE                     l2569:
  2121  03EE  1C2E               	btfss	waitSEGStop@dousa,0
  2122  03EF  2BF1               	goto	u2351
  2123  03F0  2BF2               	goto	u2350
  2124  03F1                     u2351:
  2125  03F1  2BF3               	goto	l2577
  2126  03F2                     u2350:
  2127  03F2  2BBB               	goto	l2547
  2128  03F3                     l2577:
  2129                           
  2130                           ;Q4.c: 502:         if(cpSW3 != RA2){
  2131  03F3  1003               	clrc
  2132  03F4  190C               	btfsc	12,2	;volatile
  2133  03F5  1403               	setc
  2134  03F6  3000               	movlw	0
  2135  03F7  3D09               	addwfc	9,w
  2136  03F8  00B0               	movwf	??_waitSEGStop
  2137  03F9  01B1               	clrf	??_waitSEGStop+1
  2138  03FA  0837               	movf	waitSEGStop@cpSW3+1,w
  2139  03FB  0631               	xorwf	??_waitSEGStop+1,w
  2140  03FC  1D03               	skipz
  2141  03FD  2C00               	goto	u2365
  2142  03FE  0836               	movf	waitSEGStop@cpSW3,w
  2143  03FF  0630               	xorwf	??_waitSEGStop,w
  2144  0400                     u2365:
  2145  0400  1903               	skipnz
  2146  0401  2C03               	goto	u2361
  2147  0402  2C04               	goto	u2360
  2148  0403                     u2361:
  2149  0403  2C09               	goto	l2585
  2150  0404                     u2360:
  2151  0404                     l2579:
  2152                           
  2153                           ;Q4.c: 503:             if((0b0001 & dousa) == 0b0001){
  2154  0404  1C2E               	btfss	waitSEGStop@dousa,0
  2155  0405  2C07               	goto	u2371
  2156  0406  2C08               	goto	u2370
  2157  0407                     u2371:
  2158  0407  2C09               	goto	l2585
  2159  0408                     u2370:
  2160  0408  2BC2               	goto	l2549
  2161  0409                     l2585:
  2162                           
  2163                           ;Q4.c: 508:     }
  2164  0409  3001               	movlw	1
  2165  040A  02B8               	subwf	waitSEGStop@i,f
  2166  040B  3000               	movlw	0
  2167  040C  3BB9               	subwfb	waitSEGStop@i+1,f
  2168  040D  2B87               	goto	l2537
  2169  040E                     l2589:
  2170                           
  2171                           ;Q4.c: 510:     return 0;
  2172  040E  01A8               	clrf	?_waitSEGStop
  2173  040F  01A9               	clrf	?_waitSEGStop+1
  2174  0410                     l265:
  2175  0410  0008               	return
  2176  0411                     __end_of_waitSEGStop:
  2177                           
  2178                           	psect	text3
  2179  02E9                     __ptext3:	
  2180 ;; *************** function _tact *****************
  2181 ;; Defined at:
  2182 ;;		line 346 in file "Q4.c"
  2183 ;; Parameters:    Size  Location     Type
  2184 ;;  mode            2    8[COMMON] unsigned short 
  2185 ;; Auto vars:     Size  Location     Type
  2186 ;;		None
  2187 ;; Return value:  Size  Location     Type
  2188 ;;                  1    wreg      void 
  2189 ;; Registers used:
  2190 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2191 ;; Tracked objects:
  2192 ;;		On entry : 0/0
  2193 ;;		On exit  : 0/0
  2194 ;;		Unchanged: 0/0
  2195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2196 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2199 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2200 ;;Total ram usage:        2 bytes
  2201 ;; Hardware stack levels used:    1
  2202 ;; Hardware stack levels required when called:    1
  2203 ;; This function calls:
  2204 ;;		_tactsw
  2205 ;; This function is called by:
  2206 ;;		_waitSEGStop
  2207 ;;		_kaisu
  2208 ;;		_motorStop
  2209 ;;		_buzzStop
  2210 ;; This function uses a non-reentrant model
  2211 ;;
  2212                           
  2213                           
  2214                           ;psect for function _tact
  2215  02E9                     _tact:
  2216  02E9                     l2361:	
  2217                           ;incstack = 0
  2218                           ; Regs used in _tact: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2219                           
  2220                           
  2221                           ;Q4.c: 346: void tact(unsigned short mode);Q4.c: 347: {;Q4.c: 348:     switch(mode){
  2222  02E9  2B23               	goto	l2389
  2223  02EA                     l2363:
  2224                           
  2225                           ;Q4.c: 350:                 tactsw();
  2226  02EA  3182  2266  3182   	fcall	_tactsw
  2227  02ED                     l2365:
  2228                           
  2229                           ;Q4.c: 351:                 if(flag_sw3==0)flag_R=1;
  2230  02ED  0020               	movlb	0	; select bank0
  2231  02EE  086A               	movf	_flag_sw3,w
  2232  02EF  046B               	iorwf	_flag_sw3+1,w
  2233  02F0  1D03               	btfss	3,2
  2234  02F1  2AF3               	goto	u2051
  2235  02F2  2AF4               	goto	u2050
  2236  02F3                     u2051:
  2237  02F3  2B33               	goto	l208
  2238  02F4                     u2050:
  2239  02F4                     l2367:
  2240  02F4  3001               	movlw	1
  2241  02F5  00E8               	movwf	_flag_R
  2242  02F6  3000               	movlw	0
  2243  02F7  00E9               	movwf	_flag_R+1
  2244  02F8  2B33               	goto	l208
  2245  02F9                     l2369:
  2246                           
  2247                           ;Q4.c: 354:                 tactsw();
  2248  02F9  3182  2266  3182   	fcall	_tactsw
  2249  02FC                     l2371:
  2250                           
  2251                           ;Q4.c: 355:                 if(flag_sw3==1)flag_P=1;
  2252  02FC  0020               	movlb	0	; select bank0
  2253  02FD  036A               	decf	_flag_sw3,w
  2254  02FE  046B               	iorwf	_flag_sw3+1,w
  2255  02FF  1D03               	btfss	3,2
  2256  0300  2B02               	goto	u2061
  2257  0301  2B03               	goto	u2060
  2258  0302                     u2061:
  2259  0302  2B33               	goto	l208
  2260  0303                     u2060:
  2261  0303                     l2373:
  2262  0303  3001               	movlw	1
  2263  0304  00E6               	movwf	_flag_P
  2264  0305  3000               	movlw	0
  2265  0306  00E7               	movwf	_flag_P+1
  2266  0307  2B33               	goto	l208
  2267  0308                     l2375:
  2268                           
  2269                           ;Q4.c: 358:                 tactsw();
  2270  0308  3182  2266  3182   	fcall	_tactsw
  2271  030B                     l2377:
  2272                           
  2273                           ;Q4.c: 359:                 if(flag_sw3==0)flag_R=1;
  2274  030B  0020               	movlb	0	; select bank0
  2275  030C  086A               	movf	_flag_sw3,w
  2276  030D  046B               	iorwf	_flag_sw3+1,w
  2277  030E  1D03               	btfss	3,2
  2278  030F  2B11               	goto	u2071
  2279  0310  2B12               	goto	u2070
  2280  0311                     u2071:
  2281  0311  2B16               	goto	l2381
  2282  0312                     u2070:
  2283  0312                     l2379:
  2284  0312  3001               	movlw	1
  2285  0313  00E8               	movwf	_flag_R
  2286  0314  3000               	movlw	0
  2287  0315  00E9               	movwf	_flag_R+1
  2288  0316                     l2381:
  2289                           
  2290                           ;Q4.c: 360:                 if((flag_sw3==1)&&(flag_R==1))flag_P=1;
  2291  0316  036A               	decf	_flag_sw3,w
  2292  0317  046B               	iorwf	_flag_sw3+1,w
  2293  0318  1D03               	btfss	3,2
  2294  0319  2B1B               	goto	u2081
  2295  031A  2B1C               	goto	u2080
  2296  031B                     u2081:
  2297  031B  2B33               	goto	l208
  2298  031C                     u2080:
  2299  031C                     l2383:
  2300  031C  0368               	decf	_flag_R,w
  2301  031D  0469               	iorwf	_flag_R+1,w
  2302  031E  1D03               	btfss	3,2
  2303  031F  2B21               	goto	u2091
  2304  0320  2B22               	goto	u2090
  2305  0321                     u2091:
  2306  0321  2B33               	goto	l208
  2307  0322                     u2090:
  2308  0322  2B03               	goto	l2373
  2309  0323                     l2389:
  2310                           
  2311                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2312                           ; Switch size 1, requested type "simple"
  2313                           ; Number of cases is 1, Range of values is 0 to 0
  2314                           ; switch strategies available:
  2315                           ; Name         Instructions Cycles
  2316                           ; simple_byte            4     3 (average)
  2317                           ; direct_byte            8     6 (fixed)
  2318                           ; jumptable            260     6 (fixed)
  2319                           ;	Chosen strategy is simple_byte
  2320  0323  0879               	movf	tact@mode+1,w
  2321  0324  3A00               	xorlw	0	; case 0
  2322  0325  1903               	skipnz
  2323  0326  2B28               	goto	l3445
  2324  0327  2B33               	goto	l208
  2325  0328                     l3445:
  2326                           
  2327                           ; Switch size 1, requested type "simple"
  2328                           ; Number of cases is 3, Range of values is 0 to 2
  2329                           ; switch strategies available:
  2330                           ; Name         Instructions Cycles
  2331                           ; simple_byte           10     6 (average)
  2332                           ; direct_byte           12     6 (fixed)
  2333                           ; jumptable            260     6 (fixed)
  2334                           ;	Chosen strategy is simple_byte
  2335  0328  0878               	movf	tact@mode,w
  2336  0329  3A00               	xorlw	0	; case 0
  2337  032A  1903               	skipnz
  2338  032B  2AEA               	goto	l2363
  2339  032C  3A01               	xorlw	1	; case 1
  2340  032D  1903               	skipnz
  2341  032E  2AF9               	goto	l2369
  2342  032F  3A03               	xorlw	3	; case 2
  2343  0330  1903               	skipnz
  2344  0331  2B08               	goto	l2375
  2345  0332  2B33               	goto	l208
  2346  0333                     l208:
  2347  0333  0008               	return
  2348  0334                     __end_of_tact:
  2349                           
  2350                           	psect	text4
  2351  0266                     __ptext4:	
  2352 ;; *************** function _tactsw *****************
  2353 ;; Defined at:
  2354 ;;		line 331 in file "Q4.c"
  2355 ;; Parameters:    Size  Location     Type
  2356 ;;		None
  2357 ;; Auto vars:     Size  Location     Type
  2358 ;;  a               2    6[COMMON] unsigned short 
  2359 ;;  c               2    4[COMMON] unsigned short 
  2360 ;;  b               2    2[COMMON] unsigned short 
  2361 ;; Return value:  Size  Location     Type
  2362 ;;                  1    wreg      void 
  2363 ;; Registers used:
  2364 ;;		wreg, status,2, status,0
  2365 ;; Tracked objects:
  2366 ;;		On entry : 0/0
  2367 ;;		On exit  : 0/0
  2368 ;;		Unchanged: 0/0
  2369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2371 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2372 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2373 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2374 ;;Total ram usage:        8 bytes
  2375 ;; Hardware stack levels used:    1
  2376 ;; This function calls:
  2377 ;;		Nothing
  2378 ;; This function is called by:
  2379 ;;		_tact
  2380 ;; This function uses a non-reentrant model
  2381 ;;
  2382                           
  2383                           
  2384                           ;psect for function _tactsw
  2385  0266                     _tactsw:
  2386  0266                     l2187:	
  2387                           ;incstack = 0
  2388                           ; Regs used in _tactsw: [wreg+status,2+status,0]
  2389                           
  2390                           
  2391                           ;Q4.c: 333:     unsigned short a,b,c;;Q4.c: 334:     b=c=0;
  2392  0266  01F4               	clrf	tactsw@c
  2393  0267  01F5               	clrf	tactsw@c+1
  2394  0268  01F2               	clrf	tactsw@b
  2395  0269  01F3               	clrf	tactsw@b+1
  2396  026A                     l2189:
  2397                           
  2398                           ;Q4.c: 336:             a=RA2;
  2399  026A  1003               	clrc
  2400  026B  0020               	movlb	0	; select bank0
  2401  026C  190C               	btfsc	12,2	;volatile
  2402  026D  1403               	setc
  2403  026E  3000               	movlw	0
  2404  026F  3D09               	addwfc	9,w
  2405  0270  00F0               	movwf	??_tactsw
  2406  0271  01F1               	clrf	??_tactsw+1
  2407  0272  0870               	movf	??_tactsw,w
  2408  0273  00F6               	movwf	tactsw@a
  2409  0274  0871               	movf	??_tactsw+1,w
  2410  0275  00F7               	movwf	tactsw@a+1
  2411  0276                     l2191:
  2412                           
  2413                           ;Q4.c: 337:             if(b==a)++c;
  2414  0276  0877               	movf	tactsw@a+1,w
  2415  0277  0673               	xorwf	tactsw@b+1,w
  2416  0278  1D03               	skipz
  2417  0279  2A7C               	goto	u1815
  2418  027A  0876               	movf	tactsw@a,w
  2419  027B  0672               	xorwf	tactsw@b,w
  2420  027C                     u1815:
  2421  027C  1D03               	skipz
  2422  027D  2A7F               	goto	u1811
  2423  027E  2A80               	goto	u1810
  2424  027F                     u1811:
  2425  027F  2A85               	goto	l2195
  2426  0280                     u1810:
  2427  0280                     l2193:
  2428  0280  3001               	movlw	1
  2429  0281  07F4               	addwf	tactsw@c,f
  2430  0282  3000               	movlw	0
  2431  0283  3DF5               	addwfc	tactsw@c+1,f
  2432  0284  2A87               	goto	l2197
  2433  0285                     l2195:
  2434  0285  01F4               	clrf	tactsw@c
  2435  0286  01F5               	clrf	tactsw@c+1
  2436  0287                     l2197:
  2437                           
  2438                           ;Q4.c: 339:             if(c>10){flag_sw3=(~a)&0x01;return;}
  2439  0287  3000               	movlw	0
  2440  0288  0275               	subwf	tactsw@c+1,w
  2441  0289  300B               	movlw	11
  2442  028A  1903               	skipnz
  2443  028B  0274               	subwf	tactsw@c,w
  2444  028C  1C03               	skipc
  2445  028D  2A8F               	goto	u1821
  2446  028E  2A90               	goto	u1820
  2447  028F                     u1821:
  2448  028F  2A9D               	goto	l2203
  2449  0290                     u1820:
  2450  0290                     l2199:
  2451  0290  0877               	movf	tactsw@a+1,w
  2452  0291  00F1               	movwf	??_tactsw+1
  2453  0292  0876               	movf	tactsw@a,w
  2454  0293  00F0               	movwf	??_tactsw
  2455  0294  09F0               	comf	??_tactsw,f
  2456  0295  09F1               	comf	??_tactsw+1,f
  2457  0296  3001               	movlw	1
  2458  0297  0570               	andwf	??_tactsw,w
  2459  0298  00EA               	movwf	_flag_sw3
  2460  0299  3000               	movlw	0
  2461  029A  0571               	andwf	??_tactsw+1,w
  2462  029B  00EB               	movwf	_flag_sw3+1
  2463  029C  2AA2               	goto	l193
  2464  029D                     l2203:
  2465                           
  2466                           ;Q4.c: 340:             b=a;
  2467  029D  0877               	movf	tactsw@a+1,w
  2468  029E  00F3               	movwf	tactsw@b+1
  2469  029F  0876               	movf	tactsw@a,w
  2470  02A0  00F2               	movwf	tactsw@b
  2471  02A1  2A6A               	goto	l2189
  2472  02A2                     l193:
  2473  02A2  0008               	return
  2474  02A3                     __end_of_tactsw:
  2475                           
  2476                           	psect	text5
  2477  0190                     __ptext5:	
  2478 ;; *************** function _fclr *****************
  2479 ;; Defined at:
  2480 ;;		line 369 in file "Q4.c"
  2481 ;; Parameters:    Size  Location     Type
  2482 ;;  flg             2    0[COMMON] unsigned short 
  2483 ;; Auto vars:     Size  Location     Type
  2484 ;;		None
  2485 ;; Return value:  Size  Location     Type
  2486 ;;                  1    wreg      void 
  2487 ;; Registers used:
  2488 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2489 ;; Tracked objects:
  2490 ;;		On entry : 0/0
  2491 ;;		On exit  : 0/0
  2492 ;;		Unchanged: 0/0
  2493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2494 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2497 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2498 ;;Total ram usage:        2 bytes
  2499 ;; Hardware stack levels used:    1
  2500 ;; This function calls:
  2501 ;;		Nothing
  2502 ;; This function is called by:
  2503 ;;		_waitSEGStop
  2504 ;;		_main
  2505 ;;		_kaisu
  2506 ;;		_motorStop
  2507 ;;		_buzzStop
  2508 ;; This function uses a non-reentrant model
  2509 ;;
  2510                           
  2511                           
  2512                           ;psect for function _fclr
  2513  0190                     _fclr:
  2514  0190                     l2395:	
  2515                           ;incstack = 0
  2516                           ; Regs used in _fclr: [wreg-fsr0h+status,2+status,0]
  2517                           
  2518                           
  2519                           ;Q4.c: 369: void fclr(unsigned short flg);Q4.c: 370: {;Q4.c: 371:     switch(flg){
  2520  0190  299F               	goto	l2405
  2521  0191                     l2397:
  2522                           
  2523                           ;Q4.c: 373:                     flag_R=0;
  2524  0191  0020               	movlb	0	; select bank0
  2525  0192  01E8               	clrf	_flag_R
  2526  0193  01E9               	clrf	_flag_R+1
  2527                           
  2528                           ;Q4.c: 374:                     break;
  2529  0194  29AF               	goto	l217
  2530  0195                     l2399:
  2531                           
  2532                           ;Q4.c: 376:                     flag_P=0;
  2533  0195  0020               	movlb	0	; select bank0
  2534  0196  01E6               	clrf	_flag_P
  2535  0197  01E7               	clrf	_flag_P+1
  2536                           
  2537                           ;Q4.c: 377:                     break;
  2538  0198  29AF               	goto	l217
  2539  0199                     l2401:
  2540                           
  2541                           ;Q4.c: 379:                     flag_P=flag_R=0;
  2542  0199  0020               	movlb	0	; select bank0
  2543  019A  01E8               	clrf	_flag_R
  2544  019B  01E9               	clrf	_flag_R+1
  2545  019C  01E6               	clrf	_flag_P
  2546  019D  01E7               	clrf	_flag_P+1
  2547                           
  2548                           ;Q4.c: 380:                     break;
  2549  019E  29AF               	goto	l217
  2550  019F                     l2405:
  2551                           
  2552                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2553                           ; Switch size 1, requested type "simple"
  2554                           ; Number of cases is 1, Range of values is 0 to 0
  2555                           ; switch strategies available:
  2556                           ; Name         Instructions Cycles
  2557                           ; simple_byte            4     3 (average)
  2558                           ; direct_byte            8     6 (fixed)
  2559                           ; jumptable            260     6 (fixed)
  2560                           ;	Chosen strategy is simple_byte
  2561  019F  0871               	movf	fclr@flg+1,w
  2562  01A0  3A00               	xorlw	0	; case 0
  2563  01A1  1903               	skipnz
  2564  01A2  29A4               	goto	l3447
  2565  01A3  29AF               	goto	l217
  2566  01A4                     l3447:
  2567                           
  2568                           ; Switch size 1, requested type "simple"
  2569                           ; Number of cases is 3, Range of values is 0 to 2
  2570                           ; switch strategies available:
  2571                           ; Name         Instructions Cycles
  2572                           ; simple_byte           10     6 (average)
  2573                           ; direct_byte           12     6 (fixed)
  2574                           ; jumptable            260     6 (fixed)
  2575                           ;	Chosen strategy is simple_byte
  2576  01A4  0870               	movf	fclr@flg,w
  2577  01A5  3A00               	xorlw	0	; case 0
  2578  01A6  1903               	skipnz
  2579  01A7  2991               	goto	l2397
  2580  01A8  3A01               	xorlw	1	; case 1
  2581  01A9  1903               	skipnz
  2582  01AA  2995               	goto	l2399
  2583  01AB  3A03               	xorlw	3	; case 2
  2584  01AC  1903               	skipnz
  2585  01AD  2999               	goto	l2401
  2586  01AE  29AF               	goto	l217
  2587  01AF                     l217:
  2588  01AF  0008               	return
  2589  01B0                     __end_of_fclr:
  2590                           
  2591                           	psect	text6
  2592  0171                     __ptext6:	
  2593 ;; *************** function ___wmul *****************
  2594 ;; Defined at:
  2595 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  2596 ;; Parameters:    Size  Location     Type
  2597 ;;  multiplier      2    8[COMMON] unsigned int 
  2598 ;;  multiplicand    2   10[COMMON] unsigned int 
  2599 ;; Auto vars:     Size  Location     Type
  2600 ;;  product         2   12[COMMON] unsigned int 
  2601 ;; Return value:  Size  Location     Type
  2602 ;;                  2    8[COMMON] unsigned int 
  2603 ;; Registers used:
  2604 ;;		wreg, status,2, status,0
  2605 ;; Tracked objects:
  2606 ;;		On entry : 0/0
  2607 ;;		On exit  : 0/0
  2608 ;;		Unchanged: 0/0
  2609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2610 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2611 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2613 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2614 ;;Total ram usage:        6 bytes
  2615 ;; Hardware stack levels used:    1
  2616 ;; This function calls:
  2617 ;;		Nothing
  2618 ;; This function is called by:
  2619 ;;		_waitSEGStop
  2620 ;;		_main
  2621 ;;		_wait
  2622 ;;		_hen7
  2623 ;;		_hens
  2624 ;; This function uses a non-reentrant model
  2625 ;;
  2626                           
  2627                           
  2628                           ;psect for function ___wmul
  2629  0171                     ___wmul:
  2630  0171                     l2411:	
  2631                           ;incstack = 0
  2632                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2633                           
  2634  0171  01FC               	clrf	___wmul@product
  2635  0172  01FD               	clrf	___wmul@product+1
  2636  0173                     l2413:
  2637  0173  1C78               	btfss	___wmul@multiplier,0
  2638  0174  2976               	goto	u2101
  2639  0175  2977               	goto	u2100
  2640  0176                     u2101:
  2641  0176  297B               	goto	l543
  2642  0177                     u2100:
  2643  0177                     l2415:
  2644  0177  087A               	movf	___wmul@multiplicand,w
  2645  0178  07FC               	addwf	___wmul@product,f
  2646  0179  087B               	movf	___wmul@multiplicand+1,w
  2647  017A  3DFD               	addwfc	___wmul@product+1,f
  2648  017B                     l543:
  2649  017B  3001               	movlw	1
  2650  017C                     u2115:
  2651  017C  35FA               	lslf	___wmul@multiplicand,f
  2652  017D  0DFB               	rlf	___wmul@multiplicand+1,f
  2653  017E  0B89               	decfsz	9,f
  2654  017F  297C               	goto	u2115
  2655  0180                     l2417:
  2656  0180  3001               	movlw	1
  2657  0181                     u2125:
  2658  0181  36F9               	lsrf	___wmul@multiplier+1,f
  2659  0182  0CF8               	rrf	___wmul@multiplier,f
  2660  0183  0B89               	decfsz	9,f
  2661  0184  2981               	goto	u2125
  2662  0185                     l2419:
  2663  0185  0878               	movf	___wmul@multiplier,w
  2664  0186  0479               	iorwf	___wmul@multiplier+1,w
  2665  0187  1D03               	btfss	3,2
  2666  0188  298A               	goto	u2131
  2667  0189  298B               	goto	u2130
  2668  018A                     u2131:
  2669  018A  2973               	goto	l2413
  2670  018B                     u2130:
  2671  018B                     l2421:
  2672  018B  087D               	movf	___wmul@product+1,w
  2673  018C  00F9               	movwf	?___wmul+1
  2674  018D  087C               	movf	___wmul@product,w
  2675  018E  00F8               	movwf	?___wmul
  2676  018F                     l545:
  2677  018F  0008               	return
  2678  0190                     __end_of___wmul:
  2679                           
  2680                           	psect	text7
  2681  022A                     __ptext7:	
  2682 ;; *************** function ___lwdiv *****************
  2683 ;; Defined at:
  2684 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\lwdiv.c"
  2685 ;; Parameters:    Size  Location     Type
  2686 ;;  divisor         2    0[COMMON] unsigned int 
  2687 ;;  dividend        2    2[COMMON] unsigned int 
  2688 ;; Auto vars:     Size  Location     Type
  2689 ;;  quotient        2    5[COMMON] unsigned int 
  2690 ;;  counter         1    7[COMMON] unsigned char 
  2691 ;; Return value:  Size  Location     Type
  2692 ;;                  2    0[COMMON] unsigned int 
  2693 ;; Registers used:
  2694 ;;		wreg, status,2, status,0
  2695 ;; Tracked objects:
  2696 ;;		On entry : 0/0
  2697 ;;		On exit  : 0/0
  2698 ;;		Unchanged: 0/0
  2699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2700 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2701 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2702 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2703 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2704 ;;Total ram usage:        8 bytes
  2705 ;; Hardware stack levels used:    1
  2706 ;; This function calls:
  2707 ;;		Nothing
  2708 ;; This function is called by:
  2709 ;;		_waitSEGStop
  2710 ;;		_waitSEG
  2711 ;; This function uses a non-reentrant model
  2712 ;;
  2713                           
  2714                           
  2715                           ;psect for function ___lwdiv
  2716  022A                     ___lwdiv:
  2717  022A                     l2425:	
  2718                           ;incstack = 0
  2719                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2720                           
  2721  022A  01F5               	clrf	___lwdiv@quotient
  2722  022B  01F6               	clrf	___lwdiv@quotient+1
  2723  022C                     l2427:
  2724  022C  0870               	movf	___lwdiv@divisor,w
  2725  022D  0471               	iorwf	___lwdiv@divisor+1,w
  2726  022E  1903               	btfsc	3,2
  2727  022F  2A31               	goto	u2141
  2728  0230  2A32               	goto	u2140
  2729  0231                     u2141:
  2730  0231  2A61               	goto	l2447
  2731  0232                     u2140:
  2732  0232                     l2429:
  2733  0232  01F7               	clrf	___lwdiv@counter
  2734  0233  0AF7               	incf	___lwdiv@counter,f
  2735  0234  2A3E               	goto	l2435
  2736  0235                     l2431:
  2737  0235  3001               	movlw	1
  2738  0236                     u2155:
  2739  0236  35F0               	lslf	___lwdiv@divisor,f
  2740  0237  0DF1               	rlf	___lwdiv@divisor+1,f
  2741  0238  0B89               	decfsz	9,f
  2742  0239  2A36               	goto	u2155
  2743  023A                     l2433:
  2744  023A  3001               	movlw	1
  2745  023B  00F4               	movwf	??___lwdiv
  2746  023C  0874               	movf	??___lwdiv,w
  2747  023D  07F7               	addwf	___lwdiv@counter,f
  2748  023E                     l2435:
  2749  023E  1FF1               	btfss	___lwdiv@divisor+1,7
  2750  023F  2A41               	goto	u2161
  2751  0240  2A42               	goto	u2160
  2752  0241                     u2161:
  2753  0241  2A35               	goto	l2431
  2754  0242                     u2160:
  2755  0242                     l2437:
  2756  0242  3001               	movlw	1
  2757  0243                     u2175:
  2758  0243  35F5               	lslf	___lwdiv@quotient,f
  2759  0244  0DF6               	rlf	___lwdiv@quotient+1,f
  2760  0245  0B89               	decfsz	9,f
  2761  0246  2A43               	goto	u2175
  2762  0247  0871               	movf	___lwdiv@divisor+1,w
  2763  0248  0273               	subwf	___lwdiv@dividend+1,w
  2764  0249  1D03               	skipz
  2765  024A  2A4D               	goto	u2185
  2766  024B  0870               	movf	___lwdiv@divisor,w
  2767  024C  0272               	subwf	___lwdiv@dividend,w
  2768  024D                     u2185:
  2769  024D  1C03               	skipc
  2770  024E  2A50               	goto	u2181
  2771  024F  2A51               	goto	u2180
  2772  0250                     u2181:
  2773  0250  2A56               	goto	l2443
  2774  0251                     u2180:
  2775  0251                     l2439:
  2776  0251  0870               	movf	___lwdiv@divisor,w
  2777  0252  02F2               	subwf	___lwdiv@dividend,f
  2778  0253  0871               	movf	___lwdiv@divisor+1,w
  2779  0254  3BF3               	subwfb	___lwdiv@dividend+1,f
  2780  0255                     l2441:
  2781  0255  1475               	bsf	___lwdiv@quotient,0
  2782  0256                     l2443:
  2783  0256  3001               	movlw	1
  2784  0257                     u2195:
  2785  0257  36F1               	lsrf	___lwdiv@divisor+1,f
  2786  0258  0CF0               	rrf	___lwdiv@divisor,f
  2787  0259  0B89               	decfsz	9,f
  2788  025A  2A57               	goto	u2195
  2789  025B                     l2445:
  2790  025B  3001               	movlw	1
  2791  025C  02F7               	subwf	___lwdiv@counter,f
  2792  025D  1D03               	btfss	3,2
  2793  025E  2A60               	goto	u2201
  2794  025F  2A61               	goto	u2200
  2795  0260                     u2201:
  2796  0260  2A42               	goto	l2437
  2797  0261                     u2200:
  2798  0261                     l2447:
  2799  0261  0876               	movf	___lwdiv@quotient+1,w
  2800  0262  00F1               	movwf	?___lwdiv+1
  2801  0263  0875               	movf	___lwdiv@quotient,w
  2802  0264  00F0               	movwf	?___lwdiv
  2803  0265                     l823:
  2804  0265  0008               	return
  2805  0266                     __end_of___lwdiv:
  2806                           
  2807                           	psect	text8
  2808  015E                     __ptext8:	
  2809 ;; *************** function _portinit *****************
  2810 ;; Defined at:
  2811 ;;		line 160 in file "Q4.c"
  2812 ;; Parameters:    Size  Location     Type
  2813 ;;		None
  2814 ;; Auto vars:     Size  Location     Type
  2815 ;;		None
  2816 ;; Return value:  Size  Location     Type
  2817 ;;                  1    wreg      void 
  2818 ;; Registers used:
  2819 ;;		wreg, status,2
  2820 ;; Tracked objects:
  2821 ;;		On entry : 0/0
  2822 ;;		On exit  : 0/0
  2823 ;;		Unchanged: 0/0
  2824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2829 ;;Total ram usage:        0 bytes
  2830 ;; Hardware stack levels used:    1
  2831 ;; This function calls:
  2832 ;;		Nothing
  2833 ;; This function is called by:
  2834 ;;		_main
  2835 ;; This function uses a non-reentrant model
  2836 ;;
  2837                           
  2838                           
  2839                           ;psect for function _portinit
  2840  015E                     _portinit:
  2841  015E                     l2451:	
  2842                           ;incstack = 0
  2843                           ; Regs used in _portinit: [wreg+status,2]
  2844                           
  2845                           
  2846                           ;Q4.c: 163:     ANSELA=0x00;
  2847  015E  0023               	movlb	3	; select bank3
  2848  015F  018C               	clrf	12	;volatile
  2849                           
  2850                           ;Q4.c: 164:     ANSELB=0x00;
  2851  0160  018D               	clrf	13	;volatile
  2852  0161                     l2453:
  2853                           
  2854                           ;Q4.c: 166:     PORTA=0x07;
  2855  0161  3007               	movlw	7
  2856  0162  0020               	movlb	0	; select bank0
  2857  0163  008C               	movwf	12	;volatile
  2858  0164                     l2455:
  2859                           
  2860                           ;Q4.c: 167:     TRISA=0x07;
  2861  0164  3007               	movlw	7
  2862  0165  0021               	movlb	1	; select bank1
  2863  0166  008C               	movwf	12	;volatile
  2864                           
  2865                           ;Q4.c: 168:     PORTB=0x00;
  2866  0167  0020               	movlb	0	; select bank0
  2867  0168  018D               	clrf	13	;volatile
  2868                           
  2869                           ;Q4.c: 169:     TRISB=0x00;
  2870  0169  0021               	movlb	1	; select bank1
  2871  016A  018D               	clrf	13	;volatile
  2872  016B                     l2457:
  2873                           
  2874                           ;Q4.c: 170:     PORTC=0x07;
  2875  016B  3007               	movlw	7
  2876  016C  0020               	movlb	0	; select bank0
  2877  016D  008E               	movwf	14	;volatile
  2878  016E                     l2459:
  2879                           
  2880                           ;Q4.c: 171:     TRISC=0x00;
  2881  016E  0021               	movlb	1	; select bank1
  2882  016F  018E               	clrf	14	;volatile
  2883  0170                     l95:
  2884  0170  0008               	return
  2885  0171                     __end_of_portinit:
  2886                           
  2887                           	psect	text9
  2888  01D0                     __ptext9:	
  2889 ;; *************** function _motor *****************
  2890 ;; Defined at:
  2891 ;;		line 513 in file "Q4.c"
  2892 ;; Parameters:    Size  Location     Type
  2893 ;;  kakudo          2    8[BANK0 ] int 
  2894 ;;  dig1data        2   10[BANK0 ] unsigned short 
  2895 ;;  dig2data        2   12[BANK0 ] unsigned short 
  2896 ;;  smdata          2   14[BANK0 ] unsigned short 
  2897 ;;  tr              2   16[BANK0 ] unsigned int 
  2898 ;; Auto vars:     Size  Location     Type
  2899 ;;  i               2   18[BANK0 ] int 
  2900 ;; Return value:  Size  Location     Type
  2901 ;;                  1    wreg      void 
  2902 ;; Registers used:
  2903 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2904 ;; Tracked objects:
  2905 ;;		On entry : 0/0
  2906 ;;		On exit  : 0/0
  2907 ;;		Unchanged: 0/0
  2908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2909 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2910 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2912 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2913 ;;Total ram usage:       12 bytes
  2914 ;; Hardware stack levels used:    1
  2915 ;; Hardware stack levels required when called:    1
  2916 ;; This function calls:
  2917 ;;		_dynam
  2918 ;; This function is called by:
  2919 ;;		_main
  2920 ;; This function uses a non-reentrant model
  2921 ;;
  2922                           
  2923                           
  2924                           ;psect for function _motor
  2925  01D0                     _motor:
  2926  01D0                     l2593:	
  2927                           ;incstack = 0
  2928                           ; Regs used in _motor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2929                           
  2930                           
  2931                           ;Q4.c: 515:     for(int i = kakudo;i>=0;i--){
  2932  01D0  0020               	movlb	0	; select bank0
  2933  01D1  0829               	movf	motor@kakudo+1,w
  2934  01D2  00B3               	movwf	motor@i+1
  2935  01D3  0828               	movf	motor@kakudo,w
  2936  01D4  00B2               	movwf	motor@i
  2937  01D5                     l2595:
  2938  01D5  1FB3               	btfss	motor@i+1,7
  2939  01D6  29D8               	goto	u2381
  2940  01D7  29D9               	goto	u2380
  2941  01D8                     u2381:
  2942  01D8  29DA               	goto	l2599
  2943  01D9                     u2380:
  2944  01D9  29F3               	goto	l276
  2945  01DA                     l2599:
  2946                           
  2947                           ;Q4.c: 516:         dynam(dig1data,dig2data,smdata,tr);
  2948  01DA  082B               	movf	motor@dig1data+1,w
  2949  01DB  00F1               	movwf	dynam@dig1data+1
  2950  01DC  082A               	movf	motor@dig1data,w
  2951  01DD  00F0               	movwf	dynam@dig1data
  2952  01DE  082D               	movf	motor@dig2data+1,w
  2953  01DF  00F3               	movwf	dynam@dig2data+1
  2954  01E0  082C               	movf	motor@dig2data,w
  2955  01E1  00F2               	movwf	dynam@dig2data
  2956  01E2  082F               	movf	motor@smdata+1,w
  2957  01E3  00F5               	movwf	dynam@smdata+1
  2958  01E4  082E               	movf	motor@smdata,w
  2959  01E5  00F4               	movwf	dynam@smdata
  2960  01E6  0831               	movf	motor@tr+1,w
  2961  01E7  00F7               	movwf	dynam@tr+1
  2962  01E8  0830               	movf	motor@tr,w
  2963  01E9  00F6               	movwf	dynam@tr
  2964  01EA  3184  2411  3181   	fcall	_dynam
  2965  01ED                     l2601:
  2966                           
  2967                           ;Q4.c: 517:     }
  2968  01ED  30FF               	movlw	255
  2969  01EE  0020               	movlb	0	; select bank0
  2970  01EF  07B2               	addwf	motor@i,f
  2971  01F0  30FF               	movlw	255
  2972  01F1  3DB3               	addwfc	motor@i+1,f
  2973  01F2  29D5               	goto	l2595
  2974  01F3                     l276:
  2975  01F3  0008               	return
  2976  01F4                     __end_of_motor:
  2977                           
  2978                           	psect	text10
  2979  0411                     __ptext10:	
  2980 ;; *************** function _dynam *****************
  2981 ;; Defined at:
  2982 ;;		line 206 in file "Q4.c"
  2983 ;; Parameters:    Size  Location     Type
  2984 ;;  dig1data        2    0[COMMON] unsigned short 
  2985 ;;  dig2data        2    2[COMMON] unsigned short 
  2986 ;;  smdata          2    4[COMMON] unsigned short 
  2987 ;;  tr              2    6[COMMON] unsigned int 
  2988 ;; Auto vars:     Size  Location     Type
  2989 ;;  ext             2    6[BANK0 ] unsigned short 
  2990 ;;  j               2    4[BANK0 ] unsigned int 
  2991 ;;  tm              2    2[BANK0 ] unsigned int 
  2992 ;;  smd             2    0[BANK0 ] unsigned short 
  2993 ;; Return value:  Size  Location     Type
  2994 ;;                  1    wreg      void 
  2995 ;; Registers used:
  2996 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2997 ;; Tracked objects:
  2998 ;;		On entry : 0/0
  2999 ;;		On exit  : 0/0
  3000 ;;		Unchanged: 0/0
  3001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3002 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3003 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3005 ;;      Totals:         8       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3006 ;;Total ram usage:       16 bytes
  3007 ;; Hardware stack levels used:    1
  3008 ;; This function calls:
  3009 ;;		Nothing
  3010 ;; This function is called by:
  3011 ;;		_waitSEGStop
  3012 ;;		_motor
  3013 ;;		_main
  3014 ;;		_clear
  3015 ;;		_waitSEG
  3016 ;;		_motorStop
  3017 ;; This function uses a non-reentrant model
  3018 ;;
  3019                           
  3020                           
  3021                           ;psect for function _dynam
  3022  0411                     _dynam:
  3023  0411                     l2205:	
  3024                           ;incstack = 0
  3025                           ; Regs used in _dynam: [wreg-fsr0h+status,2+status,0]
  3026                           
  3027  0411  0020               	movlb	0	; select bank0
  3028  0412  01A2               	clrf	dynam@tm
  3029  0413  01A3               	clrf	dynam@tm+1
  3030                           
  3031                           ;Q4.c: 209:     unsigned short ext=0,smd=0;
  3032  0414  01A6               	clrf	dynam@ext
  3033  0415  01A7               	clrf	dynam@ext+1
  3034  0416  01A0               	clrf	dynam@smd
  3035  0417  01A1               	clrf	dynam@smd+1
  3036  0418                     l2207:
  3037                           
  3038                           ;Q4.c: 210:     RC7=0;
  3039  0418  138E               	bcf	14,7	;volatile
  3040  0419                     l2209:
  3041                           
  3042                           ;Q4.c: 211:     PORTB=dig1data;
  3043  0419  0870               	movf	dynam@dig1data,w
  3044  041A  008D               	movwf	13	;volatile
  3045  041B                     l2211:
  3046                           
  3047                           ;Q4.c: 212:     RC5=0;RC6=1;
  3048  041B  128E               	bcf	14,5	;volatile
  3049  041C                     l2213:
  3050  041C  170E               	bsf	14,6	;volatile
  3051  041D                     l2215:
  3052                           
  3053                           ;Q4.c: 213:     if(tr==5){tm=3000;}
  3054  041D  3005               	movlw	5
  3055  041E  0676               	xorwf	dynam@tr,w
  3056  041F  0477               	iorwf	dynam@tr+1,w
  3057  0420  1D03               	btfss	3,2
  3058  0421  2C23               	goto	u1831
  3059  0422  2C24               	goto	u1830
  3060  0423                     u1831:
  3061  0423  2C29               	goto	l2219
  3062  0424                     u1830:
  3063  0424                     l2217:
  3064  0424  30B8               	movlw	184
  3065  0425  00A2               	movwf	dynam@tm
  3066  0426  300B               	movlw	11
  3067  0427  00A3               	movwf	dynam@tm+1
  3068  0428  2C2D               	goto	l112
  3069  0429                     l2219:
  3070  0429  30E8               	movlw	232
  3071  042A  00A2               	movwf	dynam@tm
  3072  042B  3003               	movlw	3
  3073  042C  00A3               	movwf	dynam@tm+1
  3074  042D                     l112:
  3075                           
  3076                           ;Q4.c: 215:     for(j=tm;j>0;--j);
  3077  042D  0823               	movf	dynam@tm+1,w
  3078  042E  00A5               	movwf	dynam@j+1
  3079  042F  0822               	movf	dynam@tm,w
  3080  0430  00A4               	movwf	dynam@j
  3081  0431                     l2221:
  3082  0431  0824               	movf	dynam@j,w
  3083  0432  0425               	iorwf	dynam@j+1,w
  3084  0433  1D03               	btfss	3,2
  3085  0434  2C36               	goto	u1841
  3086  0435  2C37               	goto	u1840
  3087  0436                     u1841:
  3088  0436  2C38               	goto	l2225
  3089  0437                     u1840:
  3090  0437  2C3D               	goto	l114
  3091  0438                     l2225:
  3092  0438  3001               	movlw	1
  3093  0439  02A4               	subwf	dynam@j,f
  3094  043A  3000               	movlw	0
  3095  043B  3BA5               	subwfb	dynam@j+1,f
  3096  043C  2C31               	goto	l2221
  3097  043D                     l114:
  3098                           
  3099                           ;Q4.c: 216:     RC5=0;RC6=0;
  3100  043D  128E               	bcf	14,5	;volatile
  3101  043E  130E               	bcf	14,6	;volatile
  3102  043F                     l2229:
  3103                           
  3104                           ;Q4.c: 217:     PORTB=dig2data;
  3105  043F  0872               	movf	dynam@dig2data,w
  3106  0440  008D               	movwf	13	;volatile
  3107  0441                     l2231:
  3108                           
  3109                           ;Q4.c: 218:     RC6=0;RC5=1;
  3110  0441  130E               	bcf	14,6	;volatile
  3111  0442                     l2233:
  3112  0442  168E               	bsf	14,5	;volatile
  3113  0443                     l2235:
  3114                           
  3115                           ;Q4.c: 219:     if(tr==5){tm=3000;}
  3116  0443  3005               	movlw	5
  3117  0444  0676               	xorwf	dynam@tr,w
  3118  0445  0477               	iorwf	dynam@tr+1,w
  3119  0446  1D03               	btfss	3,2
  3120  0447  2C49               	goto	u1851
  3121  0448  2C4A               	goto	u1850
  3122  0449                     u1851:
  3123  0449  2C4F               	goto	l2239
  3124  044A                     u1850:
  3125  044A                     l2237:
  3126  044A  30B8               	movlw	184
  3127  044B  00A2               	movwf	dynam@tm
  3128  044C  300B               	movlw	11
  3129  044D  00A3               	movwf	dynam@tm+1
  3130  044E  2C53               	goto	l116
  3131  044F                     l2239:
  3132  044F  30E8               	movlw	232
  3133  0450  00A2               	movwf	dynam@tm
  3134  0451  3003               	movlw	3
  3135  0452  00A3               	movwf	dynam@tm+1
  3136  0453                     l116:
  3137                           
  3138                           ;Q4.c: 221:     for(j=tm;j>0;--j);
  3139  0453  0823               	movf	dynam@tm+1,w
  3140  0454  00A5               	movwf	dynam@j+1
  3141  0455  0822               	movf	dynam@tm,w
  3142  0456  00A4               	movwf	dynam@j
  3143  0457                     l2241:
  3144  0457  0824               	movf	dynam@j,w
  3145  0458  0425               	iorwf	dynam@j+1,w
  3146  0459  1D03               	btfss	3,2
  3147  045A  2C5C               	goto	u1861
  3148  045B  2C5D               	goto	u1860
  3149  045C                     u1861:
  3150  045C  2C5E               	goto	l2245
  3151  045D                     u1860:
  3152  045D  2C63               	goto	l118
  3153  045E                     l2245:
  3154  045E  3001               	movlw	1
  3155  045F  02A4               	subwf	dynam@j,f
  3156  0460  3000               	movlw	0
  3157  0461  3BA5               	subwfb	dynam@j+1,f
  3158  0462  2C57               	goto	l2241
  3159  0463                     l118:
  3160                           
  3161                           ;Q4.c: 222:     RC5=0;RC6=0;
  3162  0463  128E               	bcf	14,5	;volatile
  3163  0464  130E               	bcf	14,6	;volatile
  3164                           
  3165                           ;Q4.c: 223:     switch(smdata){
  3166  0465  2D6A               	goto	l2355
  3167  0466                     l2249:
  3168                           
  3169                           ;Q4.c: 225:                 PORTB=0x00;smd=(0x01|0x02|0x04|0x08|0x10|0x20);
  3170  0466  018D               	clrf	13	;volatile
  3171  0467                     l2251:
  3172  0467                     l2253:
  3173                           
  3174                           ;Q4.c: 226:                 RC7=0;RC7=1;RC7=0;
  3175  0467  138E               	bcf	14,7	;volatile
  3176  0468                     l2255:
  3177  0468  178E               	bsf	14,7	;volatile
  3178  0469                     l2257:
  3179  0469  138E               	bcf	14,7	;volatile
  3180                           
  3181                           ;Q4.c: 227:                 break;
  3182  046A  2D7A               	goto	l135
  3183  046B                     l2259:
  3184                           
  3185                           ;Q4.c: 229:                 if(flg==1)cw=0;flg=0;
  3186  046B  0364               	decf	_flg,w
  3187  046C  0465               	iorwf	_flg+1,w
  3188  046D  1D03               	btfss	3,2
  3189  046E  2C70               	goto	u1871
  3190  046F  2C71               	goto	u1870
  3191  0470                     u1871:
  3192  0470  2C73               	goto	l123
  3193  0471                     u1870:
  3194  0471                     l2261:
  3195  0471  01E2               	clrf	_cw
  3196  0472  01E3               	clrf	_cw+1
  3197  0473                     l123:
  3198  0473  01E4               	clrf	_flg
  3199  0474  01E5               	clrf	_flg+1
  3200  0475                     l2263:
  3201                           
  3202                           ;Q4.c: 230:                 if((cw==0)&&(ext==0)){cw=1;ccw=0;ext=1;PORTB=smd=0x09;}
  3203  0475  0862               	movf	_cw,w
  3204  0476  0463               	iorwf	_cw+1,w
  3205  0477  1D03               	btfss	3,2
  3206  0478  2C7A               	goto	u1881
  3207  0479  2C7B               	goto	u1880
  3208  047A                     u1881:
  3209  047A  2C91               	goto	l2275
  3210  047B                     u1880:
  3211  047B                     l2265:
  3212  047B  0826               	movf	dynam@ext,w
  3213  047C  0427               	iorwf	dynam@ext+1,w
  3214  047D  1D03               	btfss	3,2
  3215  047E  2C80               	goto	u1891
  3216  047F  2C81               	goto	u1890
  3217  0480                     u1891:
  3218  0480  2C91               	goto	l2275
  3219  0481                     u1890:
  3220  0481                     l2267:
  3221  0481  3001               	movlw	1
  3222  0482  00E2               	movwf	_cw
  3223  0483  3000               	movlw	0
  3224  0484  00E3               	movwf	_cw+1
  3225  0485                     l2269:
  3226  0485  01E0               	clrf	_ccw
  3227  0486  01E1               	clrf	_ccw+1
  3228  0487                     l2271:
  3229  0487  3001               	movlw	1
  3230  0488  00A6               	movwf	dynam@ext
  3231  0489  3000               	movlw	0
  3232  048A  00A7               	movwf	dynam@ext+1
  3233  048B                     l2273:
  3234  048B  3009               	movlw	9
  3235  048C  00A0               	movwf	dynam@smd
  3236  048D  3000               	movlw	0
  3237  048E  00A1               	movwf	dynam@smd+1
  3238  048F  0820               	movf	dynam@smd,w
  3239  0490  008D               	movwf	13	;volatile
  3240  0491                     l2275:
  3241                           
  3242                           ;Q4.c: 231:                 if((cw==1)&&(ext==0)){cw=2;ccw=3;ext=1;PORTB=smd=0x0C;}
  3243  0491  0362               	decf	_cw,w
  3244  0492  0463               	iorwf	_cw+1,w
  3245  0493  1D03               	btfss	3,2
  3246  0494  2C96               	goto	u1901
  3247  0495  2C97               	goto	u1900
  3248  0496                     u1901:
  3249  0496  2CAF               	goto	l2281
  3250  0497                     u1900:
  3251  0497                     l2277:
  3252  0497  0826               	movf	dynam@ext,w
  3253  0498  0427               	iorwf	dynam@ext+1,w
  3254  0499  1D03               	btfss	3,2
  3255  049A  2C9C               	goto	u1911
  3256  049B  2C9D               	goto	u1910
  3257  049C                     u1911:
  3258  049C  2CAF               	goto	l2281
  3259  049D                     u1910:
  3260  049D                     l2279:
  3261  049D  3002               	movlw	2
  3262  049E  00E2               	movwf	_cw
  3263  049F  3000               	movlw	0
  3264  04A0  00E3               	movwf	_cw+1
  3265  04A1  3003               	movlw	3
  3266  04A2  00E0               	movwf	_ccw
  3267  04A3  3000               	movlw	0
  3268  04A4  00E1               	movwf	_ccw+1
  3269  04A5  3001               	movlw	1
  3270  04A6  00A6               	movwf	dynam@ext
  3271  04A7  3000               	movlw	0
  3272  04A8  00A7               	movwf	dynam@ext+1
  3273  04A9  300C               	movlw	12
  3274  04AA  00A0               	movwf	dynam@smd
  3275  04AB  3000               	movlw	0
  3276  04AC  00A1               	movwf	dynam@smd+1
  3277  04AD  0820               	movf	dynam@smd,w
  3278  04AE  008D               	movwf	13	;volatile
  3279  04AF                     l2281:
  3280                           
  3281                           ;Q4.c: 232:                 if((cw==2)&&(ext==0)){cw=3;ccw=2;ext=1;PORTB=smd=0x06;}
  3282  04AF  3002               	movlw	2
  3283  04B0  0662               	xorwf	_cw,w
  3284  04B1  0463               	iorwf	_cw+1,w
  3285  04B2  1D03               	btfss	3,2
  3286  04B3  2CB5               	goto	u1921
  3287  04B4  2CB6               	goto	u1920
  3288  04B5                     u1921:
  3289  04B5  2CCE               	goto	l2287
  3290  04B6                     u1920:
  3291  04B6                     l2283:
  3292  04B6  0826               	movf	dynam@ext,w
  3293  04B7  0427               	iorwf	dynam@ext+1,w
  3294  04B8  1D03               	btfss	3,2
  3295  04B9  2CBB               	goto	u1931
  3296  04BA  2CBC               	goto	u1930
  3297  04BB                     u1931:
  3298  04BB  2CCE               	goto	l2287
  3299  04BC                     u1930:
  3300  04BC                     l2285:
  3301  04BC  3003               	movlw	3
  3302  04BD  00E2               	movwf	_cw
  3303  04BE  3000               	movlw	0
  3304  04BF  00E3               	movwf	_cw+1
  3305  04C0  3002               	movlw	2
  3306  04C1  00E0               	movwf	_ccw
  3307  04C2  3000               	movlw	0
  3308  04C3  00E1               	movwf	_ccw+1
  3309  04C4  3001               	movlw	1
  3310  04C5  00A6               	movwf	dynam@ext
  3311  04C6  3000               	movlw	0
  3312  04C7  00A7               	movwf	dynam@ext+1
  3313  04C8  3006               	movlw	6
  3314  04C9  00A0               	movwf	dynam@smd
  3315  04CA  3000               	movlw	0
  3316  04CB  00A1               	movwf	dynam@smd+1
  3317  04CC  0820               	movf	dynam@smd,w
  3318  04CD  008D               	movwf	13	;volatile
  3319  04CE                     l2287:
  3320                           
  3321                           ;Q4.c: 233:                 if((cw==3)&&(ext==0)){cw=0;ccw=1;ext=1;PORTB=smd=0x03;}
  3322  04CE  3003               	movlw	3
  3323  04CF  0662               	xorwf	_cw,w
  3324  04D0  0463               	iorwf	_cw+1,w
  3325  04D1  1D03               	btfss	3,2
  3326  04D2  2CD4               	goto	u1941
  3327  04D3  2CD5               	goto	u1940
  3328  04D4                     u1941:
  3329  04D4  2C67               	goto	l2253
  3330  04D5                     u1940:
  3331  04D5                     l2289:
  3332  04D5  0826               	movf	dynam@ext,w
  3333  04D6  0427               	iorwf	dynam@ext+1,w
  3334  04D7  1D03               	btfss	3,2
  3335  04D8  2CDA               	goto	u1951
  3336  04D9  2CDB               	goto	u1950
  3337  04DA                     u1951:
  3338  04DA  2C67               	goto	l2253
  3339  04DB                     u1950:
  3340  04DB                     l2291:
  3341  04DB  01E2               	clrf	_cw
  3342  04DC  01E3               	clrf	_cw+1
  3343  04DD                     l2293:
  3344  04DD  3001               	movlw	1
  3345  04DE  00E0               	movwf	_ccw
  3346  04DF  3000               	movlw	0
  3347  04E0  00E1               	movwf	_ccw+1
  3348  04E1                     l2295:
  3349  04E1                     l2297:
  3350  04E1  3003               	movlw	3
  3351  04E2  00A0               	movwf	dynam@smd
  3352  04E3  3000               	movlw	0
  3353  04E4  00A1               	movwf	dynam@smd+1
  3354  04E5  0820               	movf	dynam@smd,w
  3355  04E6  008D               	movwf	13	;volatile
  3356  04E7  2C67               	goto	l2253
  3357  04E8                     l2305:
  3358                           
  3359                           ;Q4.c: 237:                 if(flg==1)ccw=0;flg=0;
  3360  04E8  0364               	decf	_flg,w
  3361  04E9  0465               	iorwf	_flg+1,w
  3362  04EA  1D03               	btfss	3,2
  3363  04EB  2CED               	goto	u1961
  3364  04EC  2CEE               	goto	u1960
  3365  04ED                     u1961:
  3366  04ED  2CF0               	goto	l129
  3367  04EE                     u1960:
  3368  04EE                     l2307:
  3369  04EE  01E0               	clrf	_ccw
  3370  04EF  01E1               	clrf	_ccw+1
  3371  04F0                     l129:
  3372  04F0  01E4               	clrf	_flg
  3373  04F1  01E5               	clrf	_flg+1
  3374  04F2                     l2309:
  3375                           
  3376                           ;Q4.c: 238:                 if((ccw==0)&&(ext==0)){ccw=1;cw=0;ext=1;PORTB=smd=0x03;}
  3377  04F2  0860               	movf	_ccw,w
  3378  04F3  0461               	iorwf	_ccw+1,w
  3379  04F4  1D03               	btfss	3,2
  3380  04F5  2CF7               	goto	u1971
  3381  04F6  2CF8               	goto	u1970
  3382  04F7                     u1971:
  3383  04F7  2D0E               	goto	l2321
  3384  04F8                     u1970:
  3385  04F8                     l2311:
  3386  04F8  0826               	movf	dynam@ext,w
  3387  04F9  0427               	iorwf	dynam@ext+1,w
  3388  04FA  1D03               	btfss	3,2
  3389  04FB  2CFD               	goto	u1981
  3390  04FC  2CFE               	goto	u1980
  3391  04FD                     u1981:
  3392  04FD  2D0E               	goto	l2321
  3393  04FE                     u1980:
  3394  04FE                     l2313:
  3395  04FE  3001               	movlw	1
  3396  04FF  00E0               	movwf	_ccw
  3397  0500  3000               	movlw	0
  3398  0501  00E1               	movwf	_ccw+1
  3399  0502                     l2315:
  3400  0502  01E2               	clrf	_cw
  3401  0503  01E3               	clrf	_cw+1
  3402  0504                     l2317:
  3403  0504  3001               	movlw	1
  3404  0505  00A6               	movwf	dynam@ext
  3405  0506  3000               	movlw	0
  3406  0507  00A7               	movwf	dynam@ext+1
  3407  0508                     l2319:
  3408  0508  3003               	movlw	3
  3409  0509  00A0               	movwf	dynam@smd
  3410  050A  3000               	movlw	0
  3411  050B  00A1               	movwf	dynam@smd+1
  3412  050C  0820               	movf	dynam@smd,w
  3413  050D  008D               	movwf	13	;volatile
  3414  050E                     l2321:
  3415                           
  3416                           ;Q4.c: 239:                 if((ccw==1)&&(ext==0)){ccw=2;cw=3;ext=1;PORTB=smd=0x06;}
  3417  050E  0360               	decf	_ccw,w
  3418  050F  0461               	iorwf	_ccw+1,w
  3419  0510  1D03               	btfss	3,2
  3420  0511  2D13               	goto	u1991
  3421  0512  2D14               	goto	u1990
  3422  0513                     u1991:
  3423  0513  2D2C               	goto	l2327
  3424  0514                     u1990:
  3425  0514                     l2323:
  3426  0514  0826               	movf	dynam@ext,w
  3427  0515  0427               	iorwf	dynam@ext+1,w
  3428  0516  1D03               	btfss	3,2
  3429  0517  2D19               	goto	u2001
  3430  0518  2D1A               	goto	u2000
  3431  0519                     u2001:
  3432  0519  2D2C               	goto	l2327
  3433  051A                     u2000:
  3434  051A                     l2325:
  3435  051A  3002               	movlw	2
  3436  051B  00E0               	movwf	_ccw
  3437  051C  3000               	movlw	0
  3438  051D  00E1               	movwf	_ccw+1
  3439  051E  3003               	movlw	3
  3440  051F  00E2               	movwf	_cw
  3441  0520  3000               	movlw	0
  3442  0521  00E3               	movwf	_cw+1
  3443  0522  3001               	movlw	1
  3444  0523  00A6               	movwf	dynam@ext
  3445  0524  3000               	movlw	0
  3446  0525  00A7               	movwf	dynam@ext+1
  3447  0526  3006               	movlw	6
  3448  0527  00A0               	movwf	dynam@smd
  3449  0528  3000               	movlw	0
  3450  0529  00A1               	movwf	dynam@smd+1
  3451  052A  0820               	movf	dynam@smd,w
  3452  052B  008D               	movwf	13	;volatile
  3453  052C                     l2327:
  3454                           
  3455                           ;Q4.c: 240:                 if((ccw==2)&&(ext==0)){ccw=3;cw=2;ext=1;PORTB=smd=0x0C;}
  3456  052C  3002               	movlw	2
  3457  052D  0660               	xorwf	_ccw,w
  3458  052E  0461               	iorwf	_ccw+1,w
  3459  052F  1D03               	btfss	3,2
  3460  0530  2D32               	goto	u2011
  3461  0531  2D33               	goto	u2010
  3462  0532                     u2011:
  3463  0532  2D4B               	goto	l2333
  3464  0533                     u2010:
  3465  0533                     l2329:
  3466  0533  0826               	movf	dynam@ext,w
  3467  0534  0427               	iorwf	dynam@ext+1,w
  3468  0535  1D03               	btfss	3,2
  3469  0536  2D38               	goto	u2021
  3470  0537  2D39               	goto	u2020
  3471  0538                     u2021:
  3472  0538  2D4B               	goto	l2333
  3473  0539                     u2020:
  3474  0539                     l2331:
  3475  0539  3003               	movlw	3
  3476  053A  00E0               	movwf	_ccw
  3477  053B  3000               	movlw	0
  3478  053C  00E1               	movwf	_ccw+1
  3479  053D  3002               	movlw	2
  3480  053E  00E2               	movwf	_cw
  3481  053F  3000               	movlw	0
  3482  0540  00E3               	movwf	_cw+1
  3483  0541  3001               	movlw	1
  3484  0542  00A6               	movwf	dynam@ext
  3485  0543  3000               	movlw	0
  3486  0544  00A7               	movwf	dynam@ext+1
  3487  0545  300C               	movlw	12
  3488  0546  00A0               	movwf	dynam@smd
  3489  0547  3000               	movlw	0
  3490  0548  00A1               	movwf	dynam@smd+1
  3491  0549  0820               	movf	dynam@smd,w
  3492  054A  008D               	movwf	13	;volatile
  3493  054B                     l2333:
  3494                           
  3495                           ;Q4.c: 241:                 if((ccw==3)&&(ext==0)){ccw=0;cw=1;ext=1;PORTB=smd=0x09;}
  3496  054B  3003               	movlw	3
  3497  054C  0660               	xorwf	_ccw,w
  3498  054D  0461               	iorwf	_ccw+1,w
  3499  054E  1D03               	btfss	3,2
  3500  054F  2D51               	goto	u2031
  3501  0550  2D52               	goto	u2030
  3502  0551                     u2031:
  3503  0551  2C67               	goto	l2253
  3504  0552                     u2030:
  3505  0552                     l2335:
  3506  0552  0826               	movf	dynam@ext,w
  3507  0553  0427               	iorwf	dynam@ext+1,w
  3508  0554  1D03               	btfss	3,2
  3509  0555  2D57               	goto	u2041
  3510  0556  2D58               	goto	u2040
  3511  0557                     u2041:
  3512  0557  2C67               	goto	l2253
  3513  0558                     u2040:
  3514  0558                     l2337:
  3515  0558  01E0               	clrf	_ccw
  3516  0559  01E1               	clrf	_ccw+1
  3517  055A                     l2339:
  3518  055A  3001               	movlw	1
  3519  055B  00E2               	movwf	_cw
  3520  055C  3000               	movlw	0
  3521  055D  00E3               	movwf	_cw+1
  3522  055E                     l2341:
  3523  055E                     l2343:
  3524  055E  3009               	movlw	9
  3525  055F  00A0               	movwf	dynam@smd
  3526  0560  3000               	movlw	0
  3527  0561  00A1               	movwf	dynam@smd+1
  3528  0562  0820               	movf	dynam@smd,w
  3529  0563  008D               	movwf	13	;volatile
  3530  0564  2C67               	goto	l2253
  3531  0565                     l2351:
  3532                           
  3533                           ;Q4.c: 245:                 cw=ccw=0;
  3534  0565  01E0               	clrf	_ccw
  3535  0566  01E1               	clrf	_ccw+1
  3536  0567  01E2               	clrf	_cw
  3537  0568  01E3               	clrf	_cw+1
  3538                           
  3539                           ;Q4.c: 246:                 break;
  3540  0569  2D7A               	goto	l135
  3541  056A                     l2355:
  3542                           
  3543                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3544                           ; Switch size 1, requested type "simple"
  3545                           ; Number of cases is 1, Range of values is 0 to 0
  3546                           ; switch strategies available:
  3547                           ; Name         Instructions Cycles
  3548                           ; simple_byte            4     3 (average)
  3549                           ; direct_byte            8     6 (fixed)
  3550                           ; jumptable            260     6 (fixed)
  3551                           ;	Chosen strategy is simple_byte
  3552  056A  0875               	movf	dynam@smdata+1,w
  3553  056B  3A00               	xorlw	0	; case 0
  3554  056C  1903               	skipnz
  3555  056D  2D6F               	goto	l3449
  3556  056E  2D65               	goto	l2351
  3557  056F                     l3449:
  3558                           
  3559                           ; Switch size 1, requested type "simple"
  3560                           ; Number of cases is 3, Range of values is 0 to 2
  3561                           ; switch strategies available:
  3562                           ; Name         Instructions Cycles
  3563                           ; simple_byte           10     6 (average)
  3564                           ; direct_byte           12     6 (fixed)
  3565                           ; jumptable            260     6 (fixed)
  3566                           ;	Chosen strategy is simple_byte
  3567  056F  0874               	movf	dynam@smdata,w
  3568  0570  3A00               	xorlw	0	; case 0
  3569  0571  1903               	skipnz
  3570  0572  2C66               	goto	l2249
  3571  0573  3A01               	xorlw	1	; case 1
  3572  0574  1903               	skipnz
  3573  0575  2C6B               	goto	l2259
  3574  0576  3A03               	xorlw	3	; case 2
  3575  0577  1903               	skipnz
  3576  0578  2CE8               	goto	l2305
  3577  0579  2D65               	goto	l2351
  3578  057A                     l135:
  3579  057A  0008               	return
  3580  057B                     __end_of_dynam:
  3581  007E                     btemp	set	126	;btemp
  3582  007E                     wtemp0	set	126
  3583                           
  3584                           	psect	config
  3585                           
  3586                           ;Config register CONFIG1 @ 0x8007
  3587                           ;	Oscillator Selection
  3588                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  3589                           ;	Watchdog Timer Enable
  3590                           ;	WDTE = OFF, WDT disabled
  3591                           ;	Power-up Timer Enable
  3592                           ;	PWRTE = OFF, PWRT disabled
  3593                           ;	MCLR Pin Function Select
  3594                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  3595                           ;	Flash Program Memory Code Protection
  3596                           ;	CP = OFF, Program memory code protection is disabled
  3597                           ;	Data Memory Code Protection
  3598                           ;	CPD = OFF, Data memory code protection is disabled
  3599                           ;	Brown-out Reset Enable
  3600                           ;	BOREN = OFF, Brown-out Reset disabled
  3601                           ;	Clock Out Enable
  3602                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  3603                           ;	Internal/External Switchover
  3604                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3605                           ;	Fail-Safe Clock Monitor Enable
  3606                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3607  8007                     	org	32775
  3608  8007  09E4               	dw	2532
  3609                           
  3610                           ;Config register CONFIG2 @ 0x8008
  3611                           ;	Flash Memory Self-Write Protection
  3612                           ;	WRT = OFF, Write protection off
  3613                           ;	Voltage Regulator Capacitor Enable
  3614                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
  3615                           ;	PLL Enable
  3616                           ;	PLLEN = OFF, 4x PLL disabled
  3617                           ;	Stack Overflow/Underflow Reset Enable
  3618                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  3619                           ;	Brown-out Reset Voltage Selection
  3620                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  3621                           ;	Low-Voltage Programming Enable
  3622                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  3623  8008                     	org	32776
  3624  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    0
    Data        156
    BSS         36
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     50      80
    BANK1            80      0      76
    BANK2            80      0      54
    BANK3            80      0      32
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___wmul
    _waitSEGStop->___wmul
    _tact->_tactsw
    ___wmul->___lwdiv
    _motor->___wmul

Critical Paths under _main in BANK0

    _main->_waitSEGStop
    _waitSEGStop->_dynam
    _motor->_dynam

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                24    24      0   18302
                                             26 BANK0     24    24      0
                             ___wmul
                              _dynam
                               _fclr
                              _motor
                           _portinit
                        _waitSEGStop
                             _zenoff
 ---------------------------------------------------------------------------------
 (1) _zenoff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _waitSEGStop                                         18    10      8    8787
                                              8 BANK0     18    10      8
                            ___lwdiv
                             ___wmul
                              _dynam
                               _fclr
                               _tact
 ---------------------------------------------------------------------------------
 (2) _tact                                                 2     0      2     746
                                              8 COMMON     2     0      2
                             _tactsw
 ---------------------------------------------------------------------------------
 (3) _tactsw                                               8     8      0     116
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 (2) _fclr                                                 2     0      2    1618
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1308
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     618
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _portinit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motor                                               12     2     10    3947
                                              8 BANK0     12     2     10
                             ___wmul (ARG)
                              _dynam
 ---------------------------------------------------------------------------------
 (2) _dynam                                               16     8      8    2271
                                              0 COMMON     8     0      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___wmul
     ___lwdiv (ARG)
   _dynam
   _fclr
   _motor
     ___wmul (ARG)
       ___lwdiv (ARG)
     _dynam (ARG)
   _portinit
   _waitSEGStop
     ___lwdiv
     ___wmul
       ___lwdiv (ARG)
     _dynam
     _fclr
     _tact
       _tactsw
   _zenoff

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     32      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      4C       7       95.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      36       9       67.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      20      11       40.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     100      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     100      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Jun 05 11:57:23 2021

                     l95 0170                       _cw 0062      ___wmul@multiplicand 007A  
                    l112 042D                      l114 043D                      l123 0473  
                    l116 0453                      l108 015D                      l118 0463  
                    l135 057A                      l208 0333                      l129 04F0  
                    l217 01AF                      l193 02A2                      l265 0410  
                    l361 0591                      l276 01F3                      l366 0604  
                    l358 0584                      l543 017B                      l545 018F  
                    l379 06F6                      l823 0265                      _RA0 0060  
                    _RA1 0061                      _RA2 0062                      _RC0 0070  
                    _RC1 0071                      _RC2 0072                      _RC5 0075  
                    _RC6 0076                      _RC7 0077                      _ccw 0060  
                    _flg 0064                      wreg 0009                     l2211 041B  
                   l2203 029D                     l2221 0431                     l2213 041C  
                   l2205 0411                     l2311 04F8                     l2231 0441  
                   l2215 041D                     l2207 0418                     l2313 04FE  
                   l2321 050E                     l2305 04E8                     l2241 0457  
                   l2233 0442                     l2225 0438                     l2217 0424  
                   l2209 0419                     l2401 0199                     l3201 0584  
                   l2331 0539                     l2323 0514                     l2315 0502  
                   l2307 04EE                     l2251 0467                     l2235 0443  
                   l2219 0429                     l2411 0171                     l3211 058D  
                   l3203 0584                     l2341 055E                     l2333 054B  
                   l2325 051A                     l2317 0504                     l2309 04F2  
                   l2261 0471                     l2253 0467                     l2245 045E  
                   l2237 044A                     l2229 043F                     l2421 018B  
                   l2413 0173                     l2405 019F                     l3301 07B6  
                   l3221 05AF                     l3213 05A3                     l3205 0584  
                   l2351 0565                     l2343 055E                     l2335 0552  
                   l2327 052C                     l2319 0508                     l2271 0487  
                   l2263 0475                     l2255 0468                     l2239 044F  
                   l2431 0235                     l2415 0177                     l2191 0276  
                   l3231 05B8                     l3223 05AF                     l3215 05AA  
                   l3207 0584                     l2337 0558                     l2329 0533  
                   l2281 04AF                     l2273 048B                     l2265 047B  
                   l2257 0469                     l2249 0466                     l2601 01ED  
                   l2441 0255                     l2433 023A                     l2425 022A  
                   l2417 0180                     l2193 0280                     l2361 02E9  
                   l3241 05F7                     l3233 05C9                     l3225 05AF  
                   l3217 05AA                     l3209 0589                     l2339 055A  
                   l2291 04DB                     l2283 04B6                     l2267 0481  
                   l2275 0491                     l2259 046B                     l2355 056A  
                   l2451 015E                     l2443 0256                     l2435 023E  
                   l2427 022C                     l2419 0185                     l2195 0285  
                   l2187 0266                     l2371 02FC                     l2363 02EA  
                   l2531 0334                     l3251 0638                     l3235 05CE  
                   l3227 05AF                     l3219 05AF                     l2293 04DD  
                   l2285 04BC                     l2277 0497                     l2269 0485  
                   l2453 0161                     l2445 025B                     l2437 0242  
                   l2429 0232                     l2197 0287                     l2189 026A  
                   l2381 0316                     l2373 0303                     l2365 02ED  
                   l2541 038E                     l2533 0356                     l3261 065E  
                   l3253 0654                     l3245 0609                     l3237 05D2  
                   l3229 05B4                     l2295 04E1                     l2287 04CE  
                   l2279 049D                     l2455 0164                     l2439 0251  
                   l2447 0261                     l2199 0290                     l2383 031C  
                   l2375 0308                     l2367 02F4                     l2543 03A5  
                   l2535 0383                     l3263 0685                     l3247 0626  
                   l3271 06C4                     l3239 05EA                     l2297 04E1  
                   l2289 04D5                     l2457 016B                     l2377 030B  
                   l2369 02F9                     l2545 03B7                     l2553 03C8  
                   l2537 0387                     l2481 0155                     l3281 0717  
                   l3273 06DC                     l3265 068A                     l3249 0633  
                   l2459 016E                     l2395 0190                     l2379 0312  
                   l2555 03D9                     l2563 03DE                     l2547 03BB  
                   l2483 0159                     l3283 0724                     l3291 0756  
                   l3275 06E9                     l3267 068E                     l3259 0656  
                   l3195 057B                     l2397 0191                     l3445 0328  
                   l2389 0323                     l2565 03E4                     l2549 03C2  
                   l2485 015A                     l3293 075E                     l3285 0729  
                   l3269 06B2                     l3197 057E                     l3447 01A4  
                   l2399 0195                     l2567 03EA                     l2487 015B  
                   l3295 0784                     l3287 0744                     l3279 06FB  
                   l3199 0584                     l3449 056F                     l2593 01D0  
                   l2585 0409                     l2569 03EE                     l2577 03F3  
                   l2489 015C                     l3297 0789                     l3289 0751  
                   l2595 01D5                     l2579 0404                     l3299 078D  
                   l2589 040E                     l2599 01DA                     u2000 051A  
                   u2001 0519                     u2010 0533                     u2011 0532  
                   u2020 0539                     u2100 0177                     u2021 0538  
                   u2101 0176                     u2030 0552                     u2031 0551  
                   u2040 0558                     u2200 0261                     u2041 0557  
                   u2201 0260                     u2130 018B                     u2050 02F4  
                   u2131 018A                     u2115 017C                     u2051 02F3  
                   u2140 0232                     u2060 0303                     u2300 03D9  
                   u2141 0231                     u2125 0181                     u2061 0302  
                   u2301 03D8                     u2070 0312                     u2310 03DD  
                   u2071 0311                     u2311 03DC                     u2160 0242  
                   u2080 031C                     u2320 03E4                     u2161 0241  
                   u2081 031B                     u2321 03E3                     u2305 03D5  
                   u2090 0322                     u2330 03EA                     u2155 0236  
                   u2091 0321                     u2331 03E9                     u2180 0251  
                   u2340 03EE                     u2181 0250                     u2341 03ED  
                   u2350 03F2                     u2270 038D                     u2175 0243  
                   u2351 03F1                     u2271 038C                     u2360 0404  
                   u2280 03B7                     u3400 0591                     u2185 024D  
                   u2361 0403                     u2281 03B6                     u3401 0590  
                   u1810 0280                     u2370 0408                     u2290 03BB  
                   u3410 0599                     u2195 0257                     u1811 027F  
                   u2371 0407                     u2291 03BA                     u3411 0596  
                   u1900 0497                     u2380 01D9                     u1820 0290  
                   u3500 065E                     u3420 05A1                     u1901 0496  
                   u2381 01D8                     u1821 028F                     u2365 0400  
                   u2285 03B3                     u3501 065D                     u3421 059E  
                   u1910 049D                     u1830 0424                     u3510 068A  
                   u1911 049C                     u1831 0423                     u1815 027C  
                   u3511 0689                     u1920 04B6                     u1840 0437  
                   u3600 07C7                     u3520 068E                     u3440 05B4  
                   u3424 059B                     u1921 04B5                     u1841 0436  
                   u3601 07C6                     u3521 068D                     u3441 05B3  
                   u1930 04BC                     u1850 044A                     u3530 06C3  
                   u3450 05B8                     u3434 05A3                     u1931 04BB  
                   u1851 0449                     u3531 06C2                     u3451 05B7  
                   u1940 04D5                     u1860 045D                     u3540 06E9  
                   u3460 05CE                     u3380 0589                     u1941 04D4  
                   u1861 045C                     u3605 07C3                     u3541 06E8  
                   u3461 05CD                     u3381 0588                     u1950 04DB  
                   u1870 0471                     u3550 0724                     u3470 05D2  
                   u3390 058D                     u1951 04DA                     u1871 0470  
                   u3551 0723                     u3535 06BF                     u3471 05D1  
                   u3391 058C                     u1960 04EE                     u1880 047B  
                   u3560 0751                     u3480 05F7                     u1961 04ED  
                   u1881 047A                     u3561 0750                     u3545 06E5  
                   u3481 05F6                     u1970 04F8                     u1890 0481  
                   u3570 075E                     u3490 0633                     u1971 04F7  
                   u1891 0480                     u3571 075D                     u3555 0720  
                   u3491 0632                     u1980 04FE                     u3580 0789  
                   u1981 04FD                     u3581 0788                     u3565 074D  
                   u3485 05F3                     u1990 0514                     u3590 078D  
                   u1991 0513                     u3591 078C                     u3495 062F  
                   u3807 05FD                     u3817 06EF                     _atai 005A  
                   _fclr 0190                     _main 057B                     _num0 00C0  
                   _kisu 014C                     _moja 0140                     _samf 01A0  
                   _mojf 0134                     _tact 02E9                     _mojh 00E2  
                   _moji 0120                     _mojn 00DE                     _samp 00A0  
                   _gusu 00D4                     fsr0h 0005                     fsr1h 0007  
                   indf0 0000                     fsr0l 0004                     fsr1l 0006  
                   btemp 007E                     start 0002                    ?_fclr 0070  
                  ?_main 0070                    ?_tact 0078          __end_of___lwdiv 0266  
                  _PORTA 000C                    _PORTB 000D                    _PORTC 000E  
                  _TRISA 008C                    _TRISB 008D                    _TRISC 008E  
                  _code1 00E6                    _atai1 005C                    _count 0058  
                  _dynam 0411                    _fugou 0054                    _motor 01D0  
                  main@i 0050                    status 0003                    wtemp0 007E  
        __initialization 07CA             __end_of_fclr 01B0             __end_of_main 07CA  
           __end_of_tact 0334                   ??_fclr 0072                   ??_main 003A  
                 ??_tact 007A                   ?_dynam 0070                   ?_motor 0028  
           ?_waitSEGStop 0028                   _ANSELA 018C                   _ANSELB 018D  
                 _OSCCON 0099              dynam@smdata 0074          waitSEGStop@seg1 0028  
        waitSEGStop@seg2 002A                   ___wmul 0171                   _code10 00E8  
                 _atai10 005E                   _flag_P 0066                   _flag_R 0068  
              ??___lwdiv 0074                   _tactsw 0266                   _zenoff 0155  
                 dynam@j 0024                   motor@i 0032         __end_of_portinit 0171  
__end_of__initialization 07FD           __pcstackCOMMON 0070             __pidataBANK1 02A3  
           __pidataBANK2 01F4             __pidataBANK3 01B0            __end_of_dynam 057B  
          __end_of_motor 01F4                  ??_dynam 0078                  ??_motor 007E  
             __pbssBANK0 0052               __pbssBANK1 00E6               __pmaintext 057B  
                ?___wmul 0078                  ?_tactsw 0070                  ?_zenoff 0070  
   __size_of_waitSEGStop 00DD         waitSEGStop@cpSW1 0032         waitSEGStop@cpSW2 0034  
       waitSEGStop@cpSW3 0036         waitSEGStop@dousa 002E          __size_of___wmul 001F  
              ?_portinit 0070                  ___lwdiv 022A                  _code100 00EA  
        __size_of_tactsw 003D                  __ptext1 0155                  __ptext2 0334  
                __ptext3 02E9                  __ptext4 0266                  __ptext5 0190  
                __ptext6 0171                  __ptext7 022A                  __ptext8 015E  
                __ptext9 01D0          __size_of_zenoff 0009                  fclr@flg 0070  
                main@ans 004E              motor@kakudo 0028                  clrloop0 014A  
   end_of_initialization 07FD              motor@smdata 002E                  dynam@tm 0022  
                dynam@tr 0076                  init_ram 014F                  _zyoutai 0052  
                initloop 0150                  tactsw@a 0076                  tactsw@b 0072  
                tactsw@c 0074                  motor@tr 0030               ??_portinit 0070  
         __end_of___wmul 0190            waitSEGStop@wt 002C           __end_of_tactsw 02A3  
         __end_of_zenoff 015E      start_initialization 07CA                 ??___wmul 007C  
            __pdataBANK1 00A0              __pdataBANK2 0120              __pdataBANK3 01A0  
               ??_tactsw 0070                 ??_zenoff 0070                ___latbits 0003  
          __pcstackBANK0 0020         ___lwdiv@dividend 0072                 ?___lwdiv 0070  
      __size_of_portinit 0013         ___lwdiv@quotient 0075            ??_waitSEGStop 0030  
         __size_of_dynam 016A           __size_of_motor 0024            dynam@dig1data 0070  
          dynam@dig2data 0072           ___wmul@product 007C                clear_ram0 0149  
          motor@dig1data 002A            motor@dig2data 002C        ___wmul@multiplier 0078  
           waitSEGStop@i 0038      __end_of_waitSEGStop 0411         __size_of___lwdiv 003C  
               _code1000 0056          ___lwdiv@divisor 0070          ___lwdiv@counter 0077  
               __ptext10 0411                 _flag_sw1 006E                 _flag_sw2 006C  
               _flag_sw3 006A            __size_of_fclr 0020            __size_of_main 024F  
          __size_of_tact 004B                 _portinit 015E                 dynam@ext 0026  
               dynam@smd 0020                 tact@mode 0078              _waitSEGStop 0334  
