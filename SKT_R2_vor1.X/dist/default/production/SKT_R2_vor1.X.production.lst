

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Jun 05 12:43:53 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F1938
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.20
    32                           ; Generated 12/02/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F1938 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0016                     	;# 
    87  0017                     	;# 
    88  0018                     	;# 
    89  0019                     	;# 
    90  001A                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  010C                     	;# 
   114  010D                     	;# 
   115  010E                     	;# 
   116  0110                     	;# 
   117  0111                     	;# 
   118  0112                     	;# 
   119  0113                     	;# 
   120  0114                     	;# 
   121  0115                     	;# 
   122  0116                     	;# 
   123  0117                     	;# 
   124  0118                     	;# 
   125  0119                     	;# 
   126  011A                     	;# 
   127  011B                     	;# 
   128  011D                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0191                     	;# 
   132  0191                     	;# 
   133  0192                     	;# 
   134  0193                     	;# 
   135  0193                     	;# 
   136  0193                     	;# 
   137  0194                     	;# 
   138  0195                     	;# 
   139  0196                     	;# 
   140  0199                     	;# 
   141  019A                     	;# 
   142  019B                     	;# 
   143  019B                     	;# 
   144  019B                     	;# 
   145  019B                     	;# 
   146  019C                     	;# 
   147  019C                     	;# 
   148  019D                     	;# 
   149  019E                     	;# 
   150  019F                     	;# 
   151  020D                     	;# 
   152  0210                     	;# 
   153  0211                     	;# 
   154  0212                     	;# 
   155  0213                     	;# 
   156  0214                     	;# 
   157  0215                     	;# 
   158  0215                     	;# 
   159  0216                     	;# 
   160  0217                     	;# 
   161  0291                     	;# 
   162  0291                     	;# 
   163  0292                     	;# 
   164  0293                     	;# 
   165  0294                     	;# 
   166  0295                     	;# 
   167  0295                     	;# 
   168  0296                     	;# 
   169  0298                     	;# 
   170  0298                     	;# 
   171  0299                     	;# 
   172  029A                     	;# 
   173  029B                     	;# 
   174  029C                     	;# 
   175  029C                     	;# 
   176  029D                     	;# 
   177  029E                     	;# 
   178  029F                     	;# 
   179  0311                     	;# 
   180  0311                     	;# 
   181  0312                     	;# 
   182  0313                     	;# 
   183  0314                     	;# 
   184  0315                     	;# 
   185  0315                     	;# 
   186  0316                     	;# 
   187  0318                     	;# 
   188  0318                     	;# 
   189  0319                     	;# 
   190  031A                     	;# 
   191  031C                     	;# 
   192  031C                     	;# 
   193  031D                     	;# 
   194  031E                     	;# 
   195  0394                     	;# 
   196  0395                     	;# 
   197  0396                     	;# 
   198  0415                     	;# 
   199  0416                     	;# 
   200  0417                     	;# 
   201  041C                     	;# 
   202  041D                     	;# 
   203  041E                     	;# 
   204  0791                     	;# 
   205  0792                     	;# 
   206  0793                     	;# 
   207  0794                     	;# 
   208  0795                     	;# 
   209  0798                     	;# 
   210  0799                     	;# 
   211  07A0                     	;# 
   212  07A1                     	;# 
   213  07A3                     	;# 
   214  07A4                     	;# 
   215  07A6                     	;# 
   216  07A7                     	;# 
   217  07A9                     	;# 
   218  07AA                     	;# 
   219  0FE4                     	;# 
   220  0FE5                     	;# 
   221  0FE6                     	;# 
   222  0FE7                     	;# 
   223  0FE8                     	;# 
   224  0FE9                     	;# 
   225  0FEA                     	;# 
   226  0FEB                     	;# 
   227  0FED                     	;# 
   228  0FEE                     	;# 
   229  0FEF                     	;# 
   230  0000                     	;# 
   231  0001                     	;# 
   232  0002                     	;# 
   233  0003                     	;# 
   234  0004                     	;# 
   235  0005                     	;# 
   236  0006                     	;# 
   237  0007                     	;# 
   238  0008                     	;# 
   239  0009                     	;# 
   240  000A                     	;# 
   241  000B                     	;# 
   242  000C                     	;# 
   243  000D                     	;# 
   244  000E                     	;# 
   245  0010                     	;# 
   246  0011                     	;# 
   247  0012                     	;# 
   248  0013                     	;# 
   249  0015                     	;# 
   250  0016                     	;# 
   251  0016                     	;# 
   252  0017                     	;# 
   253  0018                     	;# 
   254  0019                     	;# 
   255  001A                     	;# 
   256  001B                     	;# 
   257  001C                     	;# 
   258  001E                     	;# 
   259  001F                     	;# 
   260  008C                     	;# 
   261  008D                     	;# 
   262  008E                     	;# 
   263  0090                     	;# 
   264  0091                     	;# 
   265  0092                     	;# 
   266  0093                     	;# 
   267  0095                     	;# 
   268  0096                     	;# 
   269  0097                     	;# 
   270  0098                     	;# 
   271  0099                     	;# 
   272  009A                     	;# 
   273  009B                     	;# 
   274  009B                     	;# 
   275  009C                     	;# 
   276  009D                     	;# 
   277  009E                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  0110                     	;# 
   282  0111                     	;# 
   283  0112                     	;# 
   284  0113                     	;# 
   285  0114                     	;# 
   286  0115                     	;# 
   287  0116                     	;# 
   288  0117                     	;# 
   289  0118                     	;# 
   290  0119                     	;# 
   291  011A                     	;# 
   292  011B                     	;# 
   293  011D                     	;# 
   294  018C                     	;# 
   295  018D                     	;# 
   296  0191                     	;# 
   297  0191                     	;# 
   298  0192                     	;# 
   299  0193                     	;# 
   300  0193                     	;# 
   301  0193                     	;# 
   302  0194                     	;# 
   303  0195                     	;# 
   304  0196                     	;# 
   305  0199                     	;# 
   306  019A                     	;# 
   307  019B                     	;# 
   308  019B                     	;# 
   309  019B                     	;# 
   310  019B                     	;# 
   311  019C                     	;# 
   312  019C                     	;# 
   313  019D                     	;# 
   314  019E                     	;# 
   315  019F                     	;# 
   316  020D                     	;# 
   317  0210                     	;# 
   318  0211                     	;# 
   319  0212                     	;# 
   320  0213                     	;# 
   321  0214                     	;# 
   322  0215                     	;# 
   323  0215                     	;# 
   324  0216                     	;# 
   325  0217                     	;# 
   326  0291                     	;# 
   327  0291                     	;# 
   328  0292                     	;# 
   329  0293                     	;# 
   330  0294                     	;# 
   331  0295                     	;# 
   332  0295                     	;# 
   333  0296                     	;# 
   334  0298                     	;# 
   335  0298                     	;# 
   336  0299                     	;# 
   337  029A                     	;# 
   338  029B                     	;# 
   339  029C                     	;# 
   340  029C                     	;# 
   341  029D                     	;# 
   342  029E                     	;# 
   343  029F                     	;# 
   344  0311                     	;# 
   345  0311                     	;# 
   346  0312                     	;# 
   347  0313                     	;# 
   348  0314                     	;# 
   349  0315                     	;# 
   350  0315                     	;# 
   351  0316                     	;# 
   352  0318                     	;# 
   353  0318                     	;# 
   354  0319                     	;# 
   355  031A                     	;# 
   356  031C                     	;# 
   357  031C                     	;# 
   358  031D                     	;# 
   359  031E                     	;# 
   360  0394                     	;# 
   361  0395                     	;# 
   362  0396                     	;# 
   363  0415                     	;# 
   364  0416                     	;# 
   365  0417                     	;# 
   366  041C                     	;# 
   367  041D                     	;# 
   368  041E                     	;# 
   369  0791                     	;# 
   370  0792                     	;# 
   371  0793                     	;# 
   372  0794                     	;# 
   373  0795                     	;# 
   374  0798                     	;# 
   375  0799                     	;# 
   376  07A0                     	;# 
   377  07A1                     	;# 
   378  07A3                     	;# 
   379  07A4                     	;# 
   380  07A6                     	;# 
   381  07A7                     	;# 
   382  07A9                     	;# 
   383  07AA                     	;# 
   384  0FE4                     	;# 
   385  0FE5                     	;# 
   386  0FE6                     	;# 
   387  0FE7                     	;# 
   388  0FE8                     	;# 
   389  0FE9                     	;# 
   390  0FEA                     	;# 
   391  0FEB                     	;# 
   392  0FED                     	;# 
   393  0FEE                     	;# 
   394  0FEF                     	;# 
   395                           
   396                           	psect	idataBANK0
   397  02E2                     __pidataBANK0:
   398                           
   399                           ;initializer for _mojh
   400  02E2  3476               	retlw	118
   401  02E3  3400               	retlw	0
   402  02E4  3438               	retlw	56
   403  02E5  3400               	retlw	0
   404                           
   405                           	psect	idataBANK1
   406  04A0                     __pidataBANK1:
   407                           
   408                           ;initializer for _samp
   409  04A0  343F               	retlw	63
   410  04A1  3400               	retlw	0
   411  04A2  3406               	retlw	6
   412  04A3  3400               	retlw	0
   413  04A4  345B               	retlw	91
   414  04A5  3400               	retlw	0
   415  04A6  344F               	retlw	79
   416  04A7  3400               	retlw	0
   417  04A8  3466               	retlw	102
   418  04A9  3400               	retlw	0
   419  04AA  346D               	retlw	109
   420  04AB  3400               	retlw	0
   421  04AC  347D               	retlw	125
   422  04AD  3400               	retlw	0
   423  04AE  3427               	retlw	39
   424  04AF  3400               	retlw	0
   425  04B0  347F               	retlw	127
   426  04B1  3400               	retlw	0
   427  04B2  346F               	retlw	111
   428  04B3  3400               	retlw	0
   429  04B4  345F               	retlw	95
   430  04B5  3400               	retlw	0
   431  04B6  347C               	retlw	124
   432  04B7  3400               	retlw	0
   433  04B8  3458               	retlw	88
   434  04B9  3400               	retlw	0
   435  04BA  345E               	retlw	94
   436  04BB  3400               	retlw	0
   437  04BC  3479               	retlw	121
   438  04BD  3400               	retlw	0
   439  04BE  3471               	retlw	113
   440  04BF  3400               	retlw	0
   441                           
   442                           ;initializer for _mojf
   443  04C0  3471               	retlw	113
   444  04C1  3400               	retlw	0
   445  04C2  3479               	retlw	121
   446  04C3  3400               	retlw	0
   447  04C4  345E               	retlw	94
   448  04C5  3400               	retlw	0
   449  04C6  3458               	retlw	88
   450  04C7  3400               	retlw	0
   451  04C8  347C               	retlw	124
   452  04C9  3400               	retlw	0
   453  04CA  345F               	retlw	95
   454  04CB  3400               	retlw	0
   455                           
   456                           ;initializer for _moja
   457  04CC  345F               	retlw	95
   458  04CD  3400               	retlw	0
   459  04CE  347C               	retlw	124
   460  04CF  3400               	retlw	0
   461  04D0  3458               	retlw	88
   462  04D1  3400               	retlw	0
   463  04D2  345E               	retlw	94
   464  04D3  3400               	retlw	0
   465  04D4  3479               	retlw	121
   466  04D5  3400               	retlw	0
   467  04D6  3471               	retlw	113
   468  04D7  3400               	retlw	0
   469                           
   470                           ;initializer for _kisu
   471  04D8  3406               	retlw	6
   472  04D9  3400               	retlw	0
   473  04DA  344F               	retlw	79
   474  04DB  3400               	retlw	0
   475  04DC  346D               	retlw	109
   476  04DD  3400               	retlw	0
   477  04DE  3427               	retlw	39
   478  04DF  3400               	retlw	0
   479  04E0  346F               	retlw	111
   480  04E1  3400               	retlw	0
   481                           
   482                           ;initializer for _gusu
   483  04E2  343F               	retlw	63
   484  04E3  3400               	retlw	0
   485  04E4  345B               	retlw	91
   486  04E5  3400               	retlw	0
   487  04E6  3466               	retlw	102
   488  04E7  3400               	retlw	0
   489  04E8  347D               	retlw	125
   490  04E9  3400               	retlw	0
   491  04EA  347F               	retlw	127
   492  04EB  3400               	retlw	0
   493                           
   494                           ;initializer for _mojn
   495  04EC  3454               	retlw	84
   496  04ED  3400               	retlw	0
   497  04EE  3473               	retlw	115
   498  04EF  3400               	retlw	0
   499                           
   500                           	psect	idataBANK2
   501  040C                     __pidataBANK2:
   502                           
   503                           ;initializer for _samf
   504  040C  3471               	retlw	113
   505  040D  3400               	retlw	0
   506  040E  3479               	retlw	121
   507  040F  3400               	retlw	0
   508  0410  345E               	retlw	94
   509  0411  3400               	retlw	0
   510  0412  3458               	retlw	88
   511  0413  3400               	retlw	0
   512  0414  347C               	retlw	124
   513  0415  3400               	retlw	0
   514  0416  345F               	retlw	95
   515  0417  3400               	retlw	0
   516  0418  346F               	retlw	111
   517  0419  3400               	retlw	0
   518  041A  347F               	retlw	127
   519  041B  3400               	retlw	0
   520  041C  3427               	retlw	39
   521  041D  3400               	retlw	0
   522  041E  347D               	retlw	125
   523  041F  3400               	retlw	0
   524  0420  346D               	retlw	109
   525  0421  3400               	retlw	0
   526  0422  3466               	retlw	102
   527  0423  3400               	retlw	0
   528  0424  344F               	retlw	79
   529  0425  3400               	retlw	0
   530  0426  345B               	retlw	91
   531  0427  3400               	retlw	0
   532  0428  3406               	retlw	6
   533  0429  3400               	retlw	0
   534  042A  343F               	retlw	63
   535  042B  3400               	retlw	0
   536                           
   537                           ;initializer for _moji
   538  042C  345F               	retlw	95
   539  042D  3400               	retlw	0
   540  042E  347C               	retlw	124
   541  042F  3400               	retlw	0
   542  0430  3458               	retlw	88
   543  0431  3400               	retlw	0
   544  0432  345E               	retlw	94
   545  0433  3400               	retlw	0
   546  0434  3479               	retlw	121
   547  0435  3400               	retlw	0
   548  0436  3471               	retlw	113
   549  0437  3400               	retlw	0
   550  0438  3476               	retlw	118
   551  0439  3400               	retlw	0
   552  043A  3438               	retlw	56
   553  043B  3400               	retlw	0
   554  043C  3454               	retlw	84
   555  043D  3400               	retlw	0
   556  043E  3473               	retlw	115
   557  043F  3400               	retlw	0
   558                           
   559                           ;initializer for _num0
   560  0440  343F               	retlw	63
   561  0441  3400               	retlw	0
   562  0442  3406               	retlw	6
   563  0443  3400               	retlw	0
   564  0444  345B               	retlw	91
   565  0445  3400               	retlw	0
   566  0446  344F               	retlw	79
   567  0447  3400               	retlw	0
   568  0448  3466               	retlw	102
   569  0449  3400               	retlw	0
   570  044A  346D               	retlw	109
   571  044B  3400               	retlw	0
   572  044C  347D               	retlw	125
   573  044D  3400               	retlw	0
   574  044E  3427               	retlw	39
   575  044F  3400               	retlw	0
   576  0450  347F               	retlw	127
   577  0451  3400               	retlw	0
   578  0452  346F               	retlw	111
   579  0453  3400               	retlw	0
   580  000E                     _PORTC	set	14
   581  000D                     _PORTB	set	13
   582  000C                     _PORTA	set	12
   583  0061                     _RA1	set	97
   584  0060                     _RA0	set	96
   585  0062                     _RA2	set	98
   586  0077                     _RC7	set	119
   587  0070                     _RC0	set	112
   588  0071                     _RC1	set	113
   589  0072                     _RC2	set	114
   590  0076                     _RC6	set	118
   591  0075                     _RC5	set	117
   592  0099                     _OSCCON	set	153
   593  008E                     _TRISC	set	142
   594  008D                     _TRISB	set	141
   595  008C                     _TRISA	set	140
   596  018D                     _ANSELB	set	397
   597  018C                     _ANSELA	set	396
   598                           
   599                           	psect	cinit
   600  07CF                     start_initialization:	
   601                           ; #config settings
   602                           
   603  07CF                     __initialization:
   604                           
   605                           ; Initialize objects allocated to BANK0
   606  07CF  30E2               	movlw	low __pidataBANK0
   607  07D0  0084               	movwf	4
   608  07D1  3082               	movlw	(high __pidataBANK0)| (0+128)
   609  07D2  0085               	movwf	5
   610  07D3  3052               	movlw	low __pdataBANK0
   611  07D4  0086               	movwf	6
   612  07D5  3000               	movlw	high __pdataBANK0
   613  07D6  0087               	movwf	7
   614  07D7  3004               	movlw	4
   615  07D8  3182  22EC  3187   	fcall	init_ram
   616                           
   617                           ; Initialize objects allocated to BANK1
   618  07DB  30A0               	movlw	low __pidataBANK1
   619  07DC  0084               	movwf	4
   620  07DD  3084               	movlw	(high __pidataBANK1)| (0+128)
   621  07DE  0085               	movwf	5
   622  07DF  30A0               	movlw	low __pdataBANK1
   623  07E0  0086               	movwf	6
   624  07E1  3000               	movlw	high __pdataBANK1
   625  07E2  0087               	movwf	7
   626  07E3  3050               	movlw	80
   627  07E4  3182  22EC  3187   	fcall	init_ram
   628                           
   629                           ; Initialize objects allocated to BANK2
   630  07E7  300C               	movlw	low __pidataBANK2
   631  07E8  0084               	movwf	4
   632  07E9  3084               	movlw	(high __pidataBANK2)| (0+128)
   633  07EA  0085               	movwf	5
   634  07EB  3020               	movlw	low __pdataBANK2
   635  07EC  0086               	movwf	6
   636  07ED  3001               	movlw	high __pdataBANK2
   637  07EE  0087               	movwf	7
   638  07EF  3048               	movlw	72
   639  07F0  3182  22EC  3187   	fcall	init_ram
   640                           
   641                           ; Clear objects allocated to COMMON
   642  07F3  01FB               	clrf	__pbssCOMMON& (0+127)
   643  07F4  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   644                           
   645                           ; Clear objects allocated to BANK0
   646  07F5  3020               	movlw	low __pbssBANK0
   647  07F6  0084               	movwf	4
   648  07F7  3000               	movlw	high __pbssBANK0
   649  07F8  0085               	movwf	5
   650  07F9  3020               	movlw	32
   651  07FA  3182  22E6  3187   	fcall	clear_ram0
   652  07FD                     end_of_initialization:	
   653                           ;End of C runtime variable initialization code
   654                           
   655  07FD                     __end_of__initialization:
   656  07FD  0020               	movlb	0
   657  07FE  3186  2E5A         	ljmp	_main	;jump to C main() function
   658                           
   659                           	psect	bssCOMMON
   660  007B                     __pbssCOMMON:
   661  007B                     _flag_sw3:
   662  007B                     	ds	2
   663                           
   664                           	psect	bssBANK0
   665  0020                     __pbssBANK0:
   666  0020                     _fugou:
   667  0020                     	ds	2
   668  0022                     _code1:
   669  0022                     	ds	2
   670  0024                     _code10:
   671  0024                     	ds	2
   672  0026                     _code100:
   673  0026                     	ds	2
   674  0028                     _code1000:
   675  0028                     	ds	2
   676  002A                     _count:
   677  002A                     	ds	2
   678  002C                     _atai:
   679  002C                     	ds	2
   680  002E                     _atai1:
   681  002E                     	ds	2
   682  0030                     _atai10:
   683  0030                     	ds	2
   684  0032                     _ccw:
   685  0032                     	ds	2
   686  0034                     _cw:
   687  0034                     	ds	2
   688  0036                     _flg:
   689  0036                     	ds	2
   690  0038                     _flag_P:
   691  0038                     	ds	2
   692  003A                     _flag_R:
   693  003A                     	ds	2
   694  003C                     _flag_sw2:
   695  003C                     	ds	2
   696  003E                     _flag_sw1:
   697  003E                     	ds	2
   698                           
   699                           	psect	dataBANK0
   700  0052                     __pdataBANK0:
   701  0052                     _mojh:
   702  0052                     	ds	4
   703                           
   704                           	psect	dataBANK1
   705  00A0                     __pdataBANK1:
   706  00A0                     _samp:
   707  00A0                     	ds	32
   708  00C0                     _mojf:
   709  00C0                     	ds	12
   710  00CC                     _moja:
   711  00CC                     	ds	12
   712  00D8                     _kisu:
   713  00D8                     	ds	10
   714  00E2                     _gusu:
   715  00E2                     	ds	10
   716  00EC                     _mojn:
   717  00EC                     	ds	4
   718                           
   719                           	psect	dataBANK2
   720  0120                     __pdataBANK2:
   721  0120                     _samf:
   722  0120                     	ds	32
   723  0140                     _moji:
   724  0140                     	ds	20
   725  0154                     _num0:
   726  0154                     	ds	20
   727                           
   728                           	psect	inittext
   729  02EC                     init_ram:
   730  02EC  00FE               	movwf	btemp
   731  02ED                     initloop:
   732  02ED  0012               	moviw fsr0++
   733  02EE  001E               	movwi fsr1++
   734  02EF  0BFE               	decfsz	btemp,f
   735  02F0  2AED               	goto	initloop
   736  02F1  3400               	retlw	0
   737                           
   738                           	psect	clrtext
   739  02E6                     clear_ram0:	
   740                           ;	Called with FSR0 containing the base address, and
   741                           ;	WREG with the size to clear
   742                           
   743  02E6  0064               	clrwdt	;clear the watchdog before getting into this loop
   744  02E7                     clrloop0:
   745  02E7  0180               	clrf	0	;clear RAM location pointed to by FSR
   746  02E8  3101               	addfsr 0,1
   747  02E9  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   748  02EA  2AE7               	goto	clrloop0	;have we reached the end yet?
   749  02EB  3400               	retlw	0	;all done for this memory range, return
   750                           
   751                           	psect	cstackCOMMON
   752  0070                     __pcstackCOMMON:
   753  0070                     ?_portinit:
   754  0070                     ??_portinit:	
   755                           ; 1 bytes @ 0x0
   756                           
   757  0070                     ?_zenoff:	
   758                           ; 1 bytes @ 0x0
   759                           
   760  0070                     ??_zenoff:	
   761                           ; 1 bytes @ 0x0
   762                           
   763  0070                     ?_dynam:	
   764                           ; 1 bytes @ 0x0
   765                           
   766  0070                     ?_tactsw:	
   767                           ; 1 bytes @ 0x0
   768                           
   769  0070                     ??_tactsw:	
   770                           ; 1 bytes @ 0x0
   771                           
   772  0070                     ?_fclr:	
   773                           ; 1 bytes @ 0x0
   774                           
   775  0070                     ?_jikan:	
   776                           ; 1 bytes @ 0x0
   777                           
   778  0070                     ??_jikan:	
   779                           ; 1 bytes @ 0x0
   780                           
   781  0070                     ?_main:	
   782                           ; 1 bytes @ 0x0
   783                           
   784  0070                     ?___lwdiv:	
   785                           ; 1 bytes @ 0x0
   786                           
   787  0070                     dynam@dig1data:	
   788                           ; 2 bytes @ 0x0
   789                           
   790  0070                     fclr@flg:	
   791                           ; 2 bytes @ 0x0
   792                           
   793  0070                     ___lwdiv@divisor:	
   794                           ; 2 bytes @ 0x0
   795                           
   796                           
   797                           ; 2 bytes @ 0x0
   798  0070                     	ds	2
   799  0072                     ??_fclr:
   800  0072                     dynam@dig2data:	
   801                           ; 1 bytes @ 0x2
   802                           
   803  0072                     tactsw@b:	
   804                           ; 2 bytes @ 0x2
   805                           
   806  0072                     ___lwdiv@dividend:	
   807                           ; 2 bytes @ 0x2
   808                           
   809                           
   810                           ; 2 bytes @ 0x2
   811  0072                     	ds	2
   812  0074                     ??___lwdiv:
   813  0074                     dynam@smdata:	
   814                           ; 1 bytes @ 0x4
   815                           
   816  0074                     tactsw@c:	
   817                           ; 2 bytes @ 0x4
   818                           
   819                           
   820                           ; 2 bytes @ 0x4
   821  0074                     	ds	1
   822  0075                     ___lwdiv@quotient:
   823                           
   824                           ; 2 bytes @ 0x5
   825  0075                     	ds	1
   826  0076                     dynam@tr:
   827  0076                     tactsw@a:	
   828                           ; 2 bytes @ 0x6
   829                           
   830                           
   831                           ; 2 bytes @ 0x6
   832  0076                     	ds	1
   833  0077                     ___lwdiv@counter:
   834                           
   835                           ; 1 bytes @ 0x7
   836  0077                     	ds	1
   837  0078                     ??_dynam:
   838  0078                     ?_tact:	
   839                           ; 1 bytes @ 0x8
   840                           
   841  0078                     ??_waitSEG:	
   842                           ; 1 bytes @ 0x8
   843                           
   844  0078                     ??_motor:	
   845                           ; 1 bytes @ 0x8
   846                           
   847  0078                     tact@mode:	
   848                           ; 1 bytes @ 0x8
   849                           
   850  0078                     waitSEG@i:	
   851                           ; 2 bytes @ 0x8
   852                           
   853  0078                     motor@i:	
   854                           ; 2 bytes @ 0x8
   855                           
   856                           
   857                           ; 2 bytes @ 0x8
   858  0078                     	ds	2
   859  007A                     ??_tact:
   860  007A                     ??_main:	
   861                           ; 1 bytes @ 0xA
   862                           
   863                           
   864                           ; 1 bytes @ 0xA
   865  007A                     	ds	1
   866                           
   867                           	psect	cstackBANK0
   868  0040                     __pcstackBANK0:
   869  0040                     dynam@smd:
   870                           
   871                           ; 2 bytes @ 0x0
   872  0040                     	ds	2
   873  0042                     dynam@tm:
   874                           
   875                           ; 2 bytes @ 0x2
   876  0042                     	ds	2
   877  0044                     dynam@j:
   878                           
   879                           ; 2 bytes @ 0x4
   880  0044                     	ds	2
   881  0046                     dynam@ext:
   882                           
   883                           ; 2 bytes @ 0x6
   884  0046                     	ds	2
   885  0048                     ?_waitSEG:
   886  0048                     ?_motor:	
   887                           ; 1 bytes @ 0x8
   888                           
   889  0048                     waitSEG@seg1:	
   890                           ; 1 bytes @ 0x8
   891                           
   892  0048                     motor@kakudo:	
   893                           ; 2 bytes @ 0x8
   894                           
   895                           
   896                           ; 2 bytes @ 0x8
   897  0048                     	ds	2
   898  004A                     waitSEG@seg2:
   899  004A                     motor@dig1data:	
   900                           ; 2 bytes @ 0xA
   901                           
   902                           
   903                           ; 2 bytes @ 0xA
   904  004A                     	ds	2
   905  004C                     waitSEG@wt:
   906  004C                     motor@dig2data:	
   907                           ; 2 bytes @ 0xC
   908                           
   909                           
   910                           ; 2 bytes @ 0xC
   911  004C                     	ds	2
   912  004E                     motor@smdata:
   913                           
   914                           ; 2 bytes @ 0xE
   915  004E                     	ds	2
   916  0050                     motor@tr:
   917                           
   918                           ; 2 bytes @ 0x10
   919  0050                     	ds	2
   920                           
   921                           	psect	maintext
   922  065A                     __pmaintext:	
   923 ;;
   924 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   925 ;;
   926 ;; *************** function _main *****************
   927 ;; Defined at:
   928 ;;		line 725 in file "Q3.c"
   929 ;; Parameters:    Size  Location     Type
   930 ;;		None
   931 ;; Auto vars:     Size  Location     Type
   932 ;;  zyoutai         2    0        int 
   933 ;;  ataiR           2    0        int 
   934 ;;  ataiL           2    0        int 
   935 ;;  segR            2    0        unsigned short 
   936 ;;  segL            2    0        unsigned short 
   937 ;;  ans             2    0        int 
   938 ;;  time            2    0        int 
   939 ;;  n               2    0        int 
   940 ;;  m               2    0        int 
   941 ;;  k               2    0        int 
   942 ;;  j               2    0        int 
   943 ;;  i               2    0        int 
   944 ;; Return value:  Size  Location     Type
   945 ;;                  1    wreg      void 
   946 ;; Registers used:
   947 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   948 ;; Tracked objects:
   949 ;;		On entry : B1F/0
   950 ;;		On exit  : 0/0
   951 ;;		Unchanged: 0/0
   952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   954 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
   955 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   956 ;;      Totals:         1      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
   957 ;;Total ram usage:       25 bytes
   958 ;; Hardware stack levels required when called:    2
   959 ;; This function calls:
   960 ;;		_dynam
   961 ;;		_fclr
   962 ;;		_jikan
   963 ;;		_motor
   964 ;;		_portinit
   965 ;;		_tact
   966 ;;		_waitSEG
   967 ;;		_zenoff
   968 ;; This function is called by:
   969 ;;		Startup code after reset
   970 ;; This function uses a non-reentrant model
   971 ;;
   972                           
   973                           
   974                           ;psect for function _main
   975  065A                     _main:
   976  065A                     l3005:	
   977                           ;incstack = 0
   978                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   979                           
   980                           
   981                           ;Q3.c: 728:     OSCCON=0x7A;
   982  065A  307A               	movlw	122
   983  065B  0021               	movlb	1	; select bank1
   984  065C  0099               	movwf	25	;volatile
   985  065D                     l3007:
   986                           
   987                           ;Q3.c: 730:     portinit();
   988  065D  3183  2308  3186   	fcall	_portinit
   989                           
   990                           ;Q3.c: 732:     zenoff();
   991  0660  3182  22F2  3186   	fcall	_zenoff
   992  0663                     l3009:
   993  0663                     l3011:
   994  0663                     l3013:
   995  0663                     l3015:
   996  0663                     l3017:
   997  0663                     l344:	
   998                           ;Q3.c: 737:     while((RA0!=1)||(RA1!=1)||(RA2!=1));
   999                           
  1000  0663  0020               	movlb	0	; select bank0
  1001  0664  1C0C               	btfss	12,0	;volatile
  1002  0665  2E67               	goto	u3051
  1003  0666  2E68               	goto	u3050
  1004  0667                     u3051:
  1005  0667  2E63               	goto	l344
  1006  0668                     u3050:
  1007  0668                     l3019:
  1008  0668  1C8C               	btfss	12,1	;volatile
  1009  0669  2E6B               	goto	u3061
  1010  066A  2E6C               	goto	u3060
  1011  066B                     u3061:
  1012  066B  2E63               	goto	l344
  1013  066C                     u3060:
  1014  066C                     l3021:
  1015  066C  1D0C               	btfss	12,2	;volatile
  1016  066D  2E6F               	goto	u3071
  1017  066E  2E70               	goto	u3070
  1018  066F                     u3071:
  1019  066F  2E63               	goto	l344
  1020  0670                     u3070:
  1021  0670                     l346:
  1022                           
  1023                           ;Q3.c: 740:     RC2=RC0=RC1=1;
  1024  0670  148E               	bsf	14,1	;volatile
  1025  0671  188E               	btfsc	14,1	;volatile
  1026  0672  2E74               	goto	u3081
  1027  0673  2E77               	goto	u3080
  1028  0674                     u3081:
  1029  0674  0020               	movlb	0	; select bank0
  1030  0675  140E               	bsf	14,0	;volatile
  1031  0676  2E79               	goto	u3094
  1032  0677                     u3080:
  1033  0677  0020               	movlb	0	; select bank0
  1034  0678  100E               	bcf	14,0	;volatile
  1035  0679                     u3094:
  1036  0679  180E               	btfsc	14,0	;volatile
  1037  067A  2E7C               	goto	u3091
  1038  067B  2E7F               	goto	u3090
  1039  067C                     u3091:
  1040  067C  0020               	movlb	0	; select bank0
  1041  067D  150E               	bsf	14,2	;volatile
  1042  067E  2E81               	goto	u3104
  1043  067F                     u3090:
  1044  067F  0020               	movlb	0	; select bank0
  1045  0680  110E               	bcf	14,2	;volatile
  1046  0681                     u3104:
  1047  0681                     l3023:
  1048                           
  1049                           ;Q3.c: 743:     fclr(2);
  1050  0681  3002               	movlw	2
  1051  0682  00F0               	movwf	fclr@flg
  1052  0683  3000               	movlw	0
  1053  0684  00F1               	movwf	fclr@flg+1
  1054  0685  3183  231B  3186   	fcall	_fclr
  1055  0688                     l3025:
  1056  0688                     l3027:
  1057  0688                     l3029:
  1058  0688                     l3031:
  1059  0688                     l3033:
  1060  0688                     l3035:
  1061  0688                     l3037:
  1062  0688                     l3039:
  1063                           
  1064                           ;Q3.c: 770:         if(RA0 == 0 && RA1 == 1){
  1065  0688  0020               	movlb	0	; select bank0
  1066  0689  180C               	btfsc	12,0	;volatile
  1067  068A  2E8C               	goto	u3111
  1068  068B  2E8D               	goto	u3110
  1069  068C                     u3111:
  1070  068C  2F2A               	goto	l349
  1071  068D                     u3110:
  1072  068D                     l3041:
  1073  068D  1C8C               	btfss	12,1	;volatile
  1074  068E  2E90               	goto	u3121
  1075  068F  2E91               	goto	u3120
  1076  0690                     u3121:
  1077  0690  2F2A               	goto	l349
  1078  0691                     u3120:
  1079  0691                     l3043:
  1080                           
  1081                           ;Q3.c: 771:             dynam((0x02|0x04),(0x02|0x04|0x08|0x10|0x20),0,0);
  1082  0691  3006               	movlw	6
  1083  0692  00F0               	movwf	dynam@dig1data
  1084  0693  3000               	movlw	0
  1085  0694  00F1               	movwf	dynam@dig1data+1
  1086  0695  303E               	movlw	62
  1087  0696  00F2               	movwf	dynam@dig2data
  1088  0697  3000               	movlw	0
  1089  0698  00F3               	movwf	dynam@dig2data+1
  1090  0699  3000               	movlw	0
  1091  069A  00F4               	movwf	dynam@smdata
  1092  069B  00F5               	movwf	dynam@smdata+1
  1093  069C  3000               	movlw	0
  1094  069D  00F6               	movwf	dynam@tr
  1095  069E  00F7               	movwf	dynam@tr+1
  1096  069F  3184  24F0  3186   	fcall	_dynam
  1097                           
  1098                           ;Q3.c: 773:             tact(0);
  1099  06A2  3000               	movlw	0
  1100  06A3  00F8               	movwf	tact@mode
  1101  06A4  00F9               	movwf	tact@mode+1
  1102  06A5  3184  2454  3186   	fcall	_tact
  1103  06A8                     l3045:
  1104                           
  1105                           ;Q3.c: 774:             if(((flag_sw3==1)&&(flag_R==1))){
  1106  06A8  037B               	decf	_flag_sw3,w
  1107  06A9  047C               	iorwf	_flag_sw3+1,w
  1108  06AA  1D03               	btfss	3,2
  1109  06AB  2EAD               	goto	u3131
  1110  06AC  2EAE               	goto	u3130
  1111  06AD                     u3131:
  1112  06AD  2F2A               	goto	l349
  1113  06AE                     u3130:
  1114  06AE                     l3047:
  1115  06AE  0020               	movlb	0	; select bank0
  1116  06AF  033A               	decf	_flag_R,w
  1117  06B0  043B               	iorwf	_flag_R+1,w
  1118  06B1  1D03               	btfss	3,2
  1119  06B2  2EB4               	goto	u3141
  1120  06B3  2EB5               	goto	u3140
  1121  06B4                     u3141:
  1122  06B4  2F2A               	goto	l349
  1123  06B5                     u3140:
  1124  06B5                     l3049:
  1125                           
  1126                           ;Q3.c: 775:                 fclr(2);
  1127  06B5  3002               	movlw	2
  1128  06B6  00F0               	movwf	fclr@flg
  1129  06B7  3000               	movlw	0
  1130  06B8  00F1               	movwf	fclr@flg+1
  1131  06B9  3183  231B  3186   	fcall	_fclr
  1132                           
  1133                           ;Q3.c: 776:                 waitSEG((0x02|0x04),(0x02|0x04|0x08|0x10|0x20),1000);
  1134  06BC  3006               	movlw	6
  1135  06BD  0020               	movlb	0	; select bank0
  1136  06BE  00C8               	movwf	waitSEG@seg1
  1137  06BF  3000               	movlw	0
  1138  06C0  00C9               	movwf	waitSEG@seg1+1
  1139  06C1  303E               	movlw	62
  1140  06C2  00CA               	movwf	waitSEG@seg2
  1141  06C3  3000               	movlw	0
  1142  06C4  00CB               	movwf	waitSEG@seg2+1
  1143  06C5  30E8               	movlw	232
  1144  06C6  00CC               	movwf	waitSEG@wt
  1145  06C7  3003               	movlw	3
  1146  06C8  00CD               	movwf	waitSEG@wt+1
  1147  06C9  3183  235F  3186   	fcall	_waitSEG
  1148                           
  1149                           ;Q3.c: 777:                 motor(360,(0x02|0x04),(0x02|0x04|0x08|0x10|0x20),1,5);
  1150  06CC  3068               	movlw	104
  1151  06CD  0020               	movlb	0	; select bank0
  1152  06CE  00C8               	movwf	motor@kakudo
  1153  06CF  3001               	movlw	1
  1154  06D0  00C9               	movwf	motor@kakudo+1
  1155  06D1  3006               	movlw	6
  1156  06D2  00CA               	movwf	motor@dig1data
  1157  06D3  3000               	movlw	0
  1158  06D4  00CB               	movwf	motor@dig1data+1
  1159  06D5  303E               	movlw	62
  1160  06D6  00CC               	movwf	motor@dig2data
  1161  06D7  3000               	movlw	0
  1162  06D8  00CD               	movwf	motor@dig2data+1
  1163  06D9  3001               	movlw	1
  1164  06DA  00CE               	movwf	motor@smdata
  1165  06DB  3000               	movlw	0
  1166  06DC  00CF               	movwf	motor@smdata+1
  1167  06DD  3005               	movlw	5
  1168  06DE  00D0               	movwf	motor@tr
  1169  06DF  3000               	movlw	0
  1170  06E0  00D1               	movwf	motor@tr+1
  1171  06E1  3183  233B  3186   	fcall	_motor
  1172  06E4                     l3051:
  1173                           
  1174                           ;Q3.c: 780:                     if(RA0 == 0 && RA1 == 1){
  1175  06E4  0020               	movlb	0	; select bank0
  1176  06E5  180C               	btfsc	12,0	;volatile
  1177  06E6  2EE8               	goto	u3151
  1178  06E7  2EE9               	goto	u3150
  1179  06E8                     u3151:
  1180  06E8  2EFE               	goto	l3057
  1181  06E9                     u3150:
  1182  06E9                     l3053:
  1183  06E9  1C8C               	btfss	12,1	;volatile
  1184  06EA  2EEC               	goto	u3161
  1185  06EB  2EED               	goto	u3160
  1186  06EC                     u3161:
  1187  06EC  2EFE               	goto	l3057
  1188  06ED                     u3160:
  1189  06ED                     l3055:
  1190                           
  1191                           ;Q3.c: 781:                         dynam((0x02|0x04),(0x02|0x04|0x08|0x10|0x20),0,0);
  1192  06ED  3006               	movlw	6
  1193  06EE  00F0               	movwf	dynam@dig1data
  1194  06EF  3000               	movlw	0
  1195  06F0  00F1               	movwf	dynam@dig1data+1
  1196  06F1  303E               	movlw	62
  1197  06F2  00F2               	movwf	dynam@dig2data
  1198  06F3  3000               	movlw	0
  1199  06F4  00F3               	movwf	dynam@dig2data+1
  1200  06F5  3000               	movlw	0
  1201  06F6  00F4               	movwf	dynam@smdata
  1202  06F7  00F5               	movwf	dynam@smdata+1
  1203  06F8  3000               	movlw	0
  1204  06F9  00F6               	movwf	dynam@tr
  1205  06FA  00F7               	movwf	dynam@tr+1
  1206  06FB  3184  24F0  3186   	fcall	_dynam
  1207  06FE                     l3057:
  1208                           
  1209                           ;Q3.c: 784:                     if(RA0 == 1 && RA1 ==1){
  1210  06FE  0020               	movlb	0	; select bank0
  1211  06FF  1C0C               	btfss	12,0	;volatile
  1212  0700  2F02               	goto	u3171
  1213  0701  2F03               	goto	u3170
  1214  0702                     u3171:
  1215  0702  2EE4               	goto	l3051
  1216  0703                     u3170:
  1217  0703                     l3059:
  1218  0703  1C8C               	btfss	12,1	;volatile
  1219  0704  2F06               	goto	u3181
  1220  0705  2F07               	goto	u3180
  1221  0706                     u3181:
  1222  0706  2EE4               	goto	l3051
  1223  0707                     u3180:
  1224  0707                     l3061:
  1225                           
  1226                           ;Q3.c: 785:                         dynam((0x02|0x04|0x08|0x10|0x40),(0x02|0x04|0x08|0x1
      +                          0|0x40),0,0);
  1227  0707  305E               	movlw	94
  1228  0708  00F0               	movwf	dynam@dig1data
  1229  0709  3000               	movlw	0
  1230  070A  00F1               	movwf	dynam@dig1data+1
  1231  070B  305E               	movlw	94
  1232  070C  00F2               	movwf	dynam@dig2data
  1233  070D  3000               	movlw	0
  1234  070E  00F3               	movwf	dynam@dig2data+1
  1235  070F  3000               	movlw	0
  1236  0710  00F4               	movwf	dynam@smdata
  1237  0711  00F5               	movwf	dynam@smdata+1
  1238  0712  3000               	movlw	0
  1239  0713  00F6               	movwf	dynam@tr
  1240  0714  00F7               	movwf	dynam@tr+1
  1241  0715  3184  24F0  3186   	fcall	_dynam
  1242  0718                     l3063:
  1243                           
  1244                           ;Q3.c: 786:                         jikan();
  1245  0718  3182  22FB  3186   	fcall	_jikan
  1246  071B                     l3065:
  1247                           
  1248                           ;Q3.c: 787:                         if(count >= 500){
  1249  071B  0020               	movlb	0	; select bank0
  1250  071C  082B               	movf	_count+1,w
  1251  071D  3A80               	xorlw	128
  1252  071E  00FA               	movwf	??_main
  1253  071F  3081               	movlw	129
  1254  0720  027A               	subwf	??_main,w
  1255  0721  1D03               	skipz
  1256  0722  2F25               	goto	u3195
  1257  0723  30F4               	movlw	244
  1258  0724  022A               	subwf	_count,w
  1259  0725                     u3195:
  1260  0725  1C03               	skipc
  1261  0726  2F28               	goto	u3191
  1262  0727  2F29               	goto	u3190
  1263  0728                     u3191:
  1264  0728  2EE4               	goto	l3051
  1265  0729                     u3190:
  1266  0729  2E88               	goto	l3039
  1267  072A                     l349:	
  1268                           ;Q3.c: 793:         }
  1269                           
  1270                           
  1271                           ;Q3.c: 795:         if(RA0 == 1 && RA1 == 0){
  1272  072A  0020               	movlb	0	; select bank0
  1273  072B  1C0C               	btfss	12,0	;volatile
  1274  072C  2F2E               	goto	u3201
  1275  072D  2F2F               	goto	u3200
  1276  072E                     u3201:
  1277  072E  2E88               	goto	l3039
  1278  072F                     u3200:
  1279  072F                     l3069:
  1280  072F  188C               	btfsc	12,1	;volatile
  1281  0730  2F32               	goto	u3211
  1282  0731  2F33               	goto	u3210
  1283  0732                     u3211:
  1284  0732  2E88               	goto	l3039
  1285  0733                     u3210:
  1286  0733                     l3071:
  1287                           
  1288                           ;Q3.c: 796:             dynam((0x02|0x04|0x08|0x10|0x20),(0x01|0x02|0x08|0x40|0x10),0,0)
      +                          ;
  1289  0733  303E               	movlw	62
  1290  0734  00F0               	movwf	dynam@dig1data
  1291  0735  3000               	movlw	0
  1292  0736  00F1               	movwf	dynam@dig1data+1
  1293  0737  305B               	movlw	91
  1294  0738  00F2               	movwf	dynam@dig2data
  1295  0739  3000               	movlw	0
  1296  073A  00F3               	movwf	dynam@dig2data+1
  1297  073B  3000               	movlw	0
  1298  073C  00F4               	movwf	dynam@smdata
  1299  073D  00F5               	movwf	dynam@smdata+1
  1300  073E  3000               	movlw	0
  1301  073F  00F6               	movwf	dynam@tr
  1302  0740  00F7               	movwf	dynam@tr+1
  1303  0741  3184  24F0  3186   	fcall	_dynam
  1304                           
  1305                           ;Q3.c: 798:             tact(2);
  1306  0744  3002               	movlw	2
  1307  0745  00F8               	movwf	tact@mode
  1308  0746  3000               	movlw	0
  1309  0747  00F9               	movwf	tact@mode+1
  1310  0748  3184  2454  3186   	fcall	_tact
  1311  074B                     l3073:
  1312                           
  1313                           ;Q3.c: 799:             if(((flag_sw3==0)&&(flag_P==1))){
  1314  074B  087B               	movf	_flag_sw3,w
  1315  074C  047C               	iorwf	_flag_sw3+1,w
  1316  074D  1D03               	btfss	3,2
  1317  074E  2F50               	goto	u3221
  1318  074F  2F51               	goto	u3220
  1319  0750                     u3221:
  1320  0750  2E88               	goto	l3039
  1321  0751                     u3220:
  1322  0751                     l3075:
  1323  0751  0020               	movlb	0	; select bank0
  1324  0752  0338               	decf	_flag_P,w
  1325  0753  0439               	iorwf	_flag_P+1,w
  1326  0754  1D03               	btfss	3,2
  1327  0755  2F57               	goto	u3231
  1328  0756  2F58               	goto	u3230
  1329  0757                     u3231:
  1330  0757  2E88               	goto	l3039
  1331  0758                     u3230:
  1332  0758                     l3077:
  1333                           
  1334                           ;Q3.c: 800:                 fclr(2);
  1335  0758  3002               	movlw	2
  1336  0759  00F0               	movwf	fclr@flg
  1337  075A  3000               	movlw	0
  1338  075B  00F1               	movwf	fclr@flg+1
  1339  075C  3183  231B  3186   	fcall	_fclr
  1340                           
  1341                           ;Q3.c: 801:                 waitSEG((0x02|0x04|0x08|0x10|0x20),(0x01|0x02|0x08|0x40|0x10
      +                          ),2000);
  1342  075F  303E               	movlw	62
  1343  0760  0020               	movlb	0	; select bank0
  1344  0761  00C8               	movwf	waitSEG@seg1
  1345  0762  3000               	movlw	0
  1346  0763  00C9               	movwf	waitSEG@seg1+1
  1347  0764  305B               	movlw	91
  1348  0765  00CA               	movwf	waitSEG@seg2
  1349  0766  3000               	movlw	0
  1350  0767  00CB               	movwf	waitSEG@seg2+1
  1351  0768  30D0               	movlw	208
  1352  0769  00CC               	movwf	waitSEG@wt
  1353  076A  3007               	movlw	7
  1354  076B  00CD               	movwf	waitSEG@wt+1
  1355  076C  3183  235F  3186   	fcall	_waitSEG
  1356                           
  1357                           ;Q3.c: 802:                 motor(360*2,(0x02|0x04|0x08|0x10|0x20),(0x01|0x02|0x08|0x40|
      +                          0x10),2,1);
  1358  076F  30D0               	movlw	208
  1359  0770  0020               	movlb	0	; select bank0
  1360  0771  00C8               	movwf	motor@kakudo
  1361  0772  3002               	movlw	2
  1362  0773  00C9               	movwf	motor@kakudo+1
  1363  0774  303E               	movlw	62
  1364  0775  00CA               	movwf	motor@dig1data
  1365  0776  3000               	movlw	0
  1366  0777  00CB               	movwf	motor@dig1data+1
  1367  0778  305B               	movlw	91
  1368  0779  00CC               	movwf	motor@dig2data
  1369  077A  3000               	movlw	0
  1370  077B  00CD               	movwf	motor@dig2data+1
  1371  077C  3002               	movlw	2
  1372  077D  00CE               	movwf	motor@smdata
  1373  077E  3000               	movlw	0
  1374  077F  00CF               	movwf	motor@smdata+1
  1375  0780  3001               	movlw	1
  1376  0781  00D0               	movwf	motor@tr
  1377  0782  3000               	movlw	0
  1378  0783  00D1               	movwf	motor@tr+1
  1379  0784  3183  233B  3186   	fcall	_motor
  1380  0787                     l3079:
  1381                           
  1382                           ;Q3.c: 805:                     if(RA0 == 1 && RA1 == 0){
  1383  0787  0020               	movlb	0	; select bank0
  1384  0788  1C0C               	btfss	12,0	;volatile
  1385  0789  2F8B               	goto	u3241
  1386  078A  2F8C               	goto	u3240
  1387  078B                     u3241:
  1388  078B  2FA1               	goto	l3085
  1389  078C                     u3240:
  1390  078C                     l3081:
  1391  078C  188C               	btfsc	12,1	;volatile
  1392  078D  2F8F               	goto	u3251
  1393  078E  2F90               	goto	u3250
  1394  078F                     u3251:
  1395  078F  2FA1               	goto	l3085
  1396  0790                     u3250:
  1397  0790                     l3083:
  1398                           
  1399                           ;Q3.c: 806:                         dynam((0x02|0x04|0x08|0x10|0x20),(0x01|0x02|0x08|0x4
      +                          0|0x10),0,0);
  1400  0790  303E               	movlw	62
  1401  0791  00F0               	movwf	dynam@dig1data
  1402  0792  3000               	movlw	0
  1403  0793  00F1               	movwf	dynam@dig1data+1
  1404  0794  305B               	movlw	91
  1405  0795  00F2               	movwf	dynam@dig2data
  1406  0796  3000               	movlw	0
  1407  0797  00F3               	movwf	dynam@dig2data+1
  1408  0798  3000               	movlw	0
  1409  0799  00F4               	movwf	dynam@smdata
  1410  079A  00F5               	movwf	dynam@smdata+1
  1411  079B  3000               	movlw	0
  1412  079C  00F6               	movwf	dynam@tr
  1413  079D  00F7               	movwf	dynam@tr+1
  1414  079E  3184  24F0  3186   	fcall	_dynam
  1415  07A1                     l3085:
  1416                           
  1417                           ;Q3.c: 809:                     if(RA0 == 1 && RA1 ==1){
  1418  07A1  0020               	movlb	0	; select bank0
  1419  07A2  1C0C               	btfss	12,0	;volatile
  1420  07A3  2FA5               	goto	u3261
  1421  07A4  2FA6               	goto	u3260
  1422  07A5                     u3261:
  1423  07A5  2F87               	goto	l3079
  1424  07A6                     u3260:
  1425  07A6                     l3087:
  1426  07A6  1C8C               	btfss	12,1	;volatile
  1427  07A7  2FA9               	goto	u3271
  1428  07A8  2FAA               	goto	u3270
  1429  07A9                     u3271:
  1430  07A9  2F87               	goto	l3079
  1431  07AA                     u3270:
  1432  07AA                     l3089:
  1433                           
  1434                           ;Q3.c: 810:                         dynam((0x02|0x04|0x08|0x10|0x40),(0x02|0x04|0x08|0x1
      +                          0|0x40),0,0);
  1435  07AA  305E               	movlw	94
  1436  07AB  00F0               	movwf	dynam@dig1data
  1437  07AC  3000               	movlw	0
  1438  07AD  00F1               	movwf	dynam@dig1data+1
  1439  07AE  305E               	movlw	94
  1440  07AF  00F2               	movwf	dynam@dig2data
  1441  07B0  3000               	movlw	0
  1442  07B1  00F3               	movwf	dynam@dig2data+1
  1443  07B2  3000               	movlw	0
  1444  07B3  00F4               	movwf	dynam@smdata
  1445  07B4  00F5               	movwf	dynam@smdata+1
  1446  07B5  3000               	movlw	0
  1447  07B6  00F6               	movwf	dynam@tr
  1448  07B7  00F7               	movwf	dynam@tr+1
  1449  07B8  3184  24F0  3186   	fcall	_dynam
  1450  07BB                     l3091:
  1451                           
  1452                           ;Q3.c: 811:                         jikan();
  1453  07BB  3182  22FB  3186   	fcall	_jikan
  1454  07BE                     l3093:
  1455                           
  1456                           ;Q3.c: 812:                         if(count >= 500){
  1457  07BE  0020               	movlb	0	; select bank0
  1458  07BF  082B               	movf	_count+1,w
  1459  07C0  3A80               	xorlw	128
  1460  07C1  00FA               	movwf	??_main
  1461  07C2  3081               	movlw	129
  1462  07C3  027A               	subwf	??_main,w
  1463  07C4  1D03               	skipz
  1464  07C5  2FC8               	goto	u3285
  1465  07C6  30F4               	movlw	244
  1466  07C7  022A               	subwf	_count,w
  1467  07C8                     u3285:
  1468  07C8  1C03               	skipc
  1469  07C9  2FCB               	goto	u3281
  1470  07CA  2FCC               	goto	u3280
  1471  07CB                     u3281:
  1472  07CB  2F87               	goto	l3079
  1473  07CC                     u3280:
  1474  07CC  2E88               	goto	l3039
  1475  07CD  3180  2802         	ljmp	start
  1476  07CF                     __end_of_main:
  1477                           
  1478                           	psect	text1
  1479  02F2                     __ptext1:	
  1480 ;; *************** function _zenoff *****************
  1481 ;; Defined at:
  1482 ;;		line 195 in file "Q3.c"
  1483 ;; Parameters:    Size  Location     Type
  1484 ;;		None
  1485 ;; Auto vars:     Size  Location     Type
  1486 ;;		None
  1487 ;; Return value:  Size  Location     Type
  1488 ;;                  1    wreg      void 
  1489 ;; Registers used:
  1490 ;;		status,2
  1491 ;; Tracked objects:
  1492 ;;		On entry : 0/0
  1493 ;;		On exit  : 0/0
  1494 ;;		Unchanged: 0/0
  1495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1500 ;;Total ram usage:        0 bytes
  1501 ;; Hardware stack levels used:    1
  1502 ;; This function calls:
  1503 ;;		Nothing
  1504 ;; This function is called by:
  1505 ;;		_main
  1506 ;; This function uses a non-reentrant model
  1507 ;;
  1508                           
  1509                           
  1510                           ;psect for function _zenoff
  1511  02F2                     _zenoff:
  1512  02F2                     l2301:	
  1513                           ;incstack = 0
  1514                           ; Regs used in _zenoff: [status,2]
  1515                           
  1516                           
  1517                           ;Q3.c: 197:     RC2=1;
  1518  02F2  0020               	movlb	0	; select bank0
  1519  02F3  150E               	bsf	14,2	;volatile
  1520                           
  1521                           ;Q3.c: 198:     RC1=1;
  1522  02F4  148E               	bsf	14,1	;volatile
  1523                           
  1524                           ;Q3.c: 199:     RC0=1;
  1525  02F5  140E               	bsf	14,0	;volatile
  1526  02F6                     l2303:
  1527                           
  1528                           ;Q3.c: 200:     PORTB=0x00;
  1529  02F6  018D               	clrf	13	;volatile
  1530  02F7                     l2305:
  1531                           
  1532                           ;Q3.c: 201:     RC7=0;RC7=1;RC7=0;
  1533  02F7  138E               	bcf	14,7	;volatile
  1534  02F8                     l2307:
  1535  02F8  178E               	bsf	14,7	;volatile
  1536  02F9                     l2309:
  1537  02F9  138E               	bcf	14,7	;volatile
  1538  02FA                     l108:
  1539  02FA  0008               	return
  1540  02FB                     __end_of_zenoff:
  1541                           
  1542                           	psect	text2
  1543  035F                     __ptext2:	
  1544 ;; *************** function _waitSEG *****************
  1545 ;; Defined at:
  1546 ;;		line 451 in file "Q3.c"
  1547 ;; Parameters:    Size  Location     Type
  1548 ;;  seg1            2    8[BANK0 ] unsigned short 
  1549 ;;  seg2            2   10[BANK0 ] unsigned short 
  1550 ;;  wt              2   12[BANK0 ] unsigned short 
  1551 ;; Auto vars:     Size  Location     Type
  1552 ;;  i               2    8[COMMON] unsigned int 
  1553 ;; Return value:  Size  Location     Type
  1554 ;;                  1    wreg      void 
  1555 ;; Registers used:
  1556 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1557 ;; Tracked objects:
  1558 ;;		On entry : 0/0
  1559 ;;		On exit  : 0/0
  1560 ;;		Unchanged: 0/0
  1561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1562 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1563 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1565 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1566 ;;Total ram usage:        8 bytes
  1567 ;; Hardware stack levels used:    1
  1568 ;; Hardware stack levels required when called:    1
  1569 ;; This function calls:
  1570 ;;		___lwdiv
  1571 ;;		_dynam
  1572 ;; This function is called by:
  1573 ;;		_main
  1574 ;; This function uses a non-reentrant model
  1575 ;;
  1576                           
  1577                           
  1578                           ;psect for function _waitSEG
  1579  035F                     _waitSEG:
  1580  035F                     l2407:	
  1581                           ;incstack = 0
  1582                           ; Regs used in _waitSEG: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1583                           
  1584                           
  1585                           ;Q3.c: 451: void waitSEG(unsigned short seg1,unsigned short seg2,unsigned short wt);Q3.c
      +                          : 452: {;Q3.c: 454:     wt = wt / 10;
  1586  035F  300A               	movlw	10
  1587  0360  00F0               	movwf	___lwdiv@divisor
  1588  0361  3000               	movlw	0
  1589  0362  00F1               	movwf	___lwdiv@divisor+1
  1590  0363  0020               	movlb	0	; select bank0
  1591  0364  084D               	movf	waitSEG@wt+1,w
  1592  0365  00F3               	movwf	___lwdiv@dividend+1
  1593  0366  084C               	movf	waitSEG@wt,w
  1594  0367  00F2               	movwf	___lwdiv@dividend
  1595  0368  3183  2393  3183   	fcall	___lwdiv
  1596  036B  0871               	movf	?___lwdiv+1,w
  1597  036C  0020               	movlb	0	; select bank0
  1598  036D  00CD               	movwf	waitSEG@wt+1
  1599  036E  0870               	movf	?___lwdiv,w
  1600  036F  00CC               	movwf	waitSEG@wt
  1601  0370                     l2409:
  1602                           
  1603                           ;Q3.c: 455:     unsigned int i;;Q3.c: 457:     for(i=wt;i>0;--i){
  1604  0370  084D               	movf	waitSEG@wt+1,w
  1605  0371  00F9               	movwf	waitSEG@i+1
  1606  0372  084C               	movf	waitSEG@wt,w
  1607  0373  00F8               	movwf	waitSEG@i
  1608  0374                     l2411:
  1609  0374  0878               	movf	waitSEG@i,w
  1610  0375  0479               	iorwf	waitSEG@i+1,w
  1611  0376  1D03               	btfss	3,2
  1612  0377  2B79               	goto	u2081
  1613  0378  2B7A               	goto	u2080
  1614  0379                     u2081:
  1615  0379  2B7B               	goto	l2415
  1616  037A                     u2080:
  1617  037A  2B92               	goto	l258
  1618  037B                     l2415:
  1619                           
  1620                           ;Q3.c: 458:         dynam(seg1,seg2,0,0);
  1621  037B  0020               	movlb	0	; select bank0
  1622  037C  0849               	movf	waitSEG@seg1+1,w
  1623  037D  00F1               	movwf	dynam@dig1data+1
  1624  037E  0848               	movf	waitSEG@seg1,w
  1625  037F  00F0               	movwf	dynam@dig1data
  1626  0380  084B               	movf	waitSEG@seg2+1,w
  1627  0381  00F3               	movwf	dynam@dig2data+1
  1628  0382  084A               	movf	waitSEG@seg2,w
  1629  0383  00F2               	movwf	dynam@dig2data
  1630  0384  3000               	movlw	0
  1631  0385  00F4               	movwf	dynam@smdata
  1632  0386  00F5               	movwf	dynam@smdata+1
  1633  0387  3000               	movlw	0
  1634  0388  00F6               	movwf	dynam@tr
  1635  0389  00F7               	movwf	dynam@tr+1
  1636  038A  3184  24F0  3183   	fcall	_dynam
  1637  038D                     l2417:
  1638                           
  1639                           ;Q3.c: 459:     }
  1640  038D  3001               	movlw	1
  1641  038E  02F8               	subwf	waitSEG@i,f
  1642  038F  3000               	movlw	0
  1643  0390  3BF9               	subwfb	waitSEG@i+1,f
  1644  0391  2B74               	goto	l2411
  1645  0392                     l258:
  1646  0392  0008               	return
  1647  0393                     __end_of_waitSEG:
  1648                           
  1649                           	psect	text3
  1650  0393                     __ptext3:	
  1651 ;; *************** function ___lwdiv *****************
  1652 ;; Defined at:
  1653 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\lwdiv.c"
  1654 ;; Parameters:    Size  Location     Type
  1655 ;;  divisor         2    0[COMMON] unsigned int 
  1656 ;;  dividend        2    2[COMMON] unsigned int 
  1657 ;; Auto vars:     Size  Location     Type
  1658 ;;  quotient        2    5[COMMON] unsigned int 
  1659 ;;  counter         1    7[COMMON] unsigned char 
  1660 ;; Return value:  Size  Location     Type
  1661 ;;                  2    0[COMMON] unsigned int 
  1662 ;; Registers used:
  1663 ;;		wreg, status,2, status,0
  1664 ;; Tracked objects:
  1665 ;;		On entry : 0/0
  1666 ;;		On exit  : 0/0
  1667 ;;		Unchanged: 0/0
  1668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1669 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1670 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1671 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1672 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1673 ;;Total ram usage:        8 bytes
  1674 ;; Hardware stack levels used:    1
  1675 ;; This function calls:
  1676 ;;		Nothing
  1677 ;; This function is called by:
  1678 ;;		_waitSEG
  1679 ;;		_waitSEGStop
  1680 ;; This function uses a non-reentrant model
  1681 ;;
  1682                           
  1683                           
  1684                           ;psect for function ___lwdiv
  1685  0393                     ___lwdiv:
  1686  0393                     l2245:	
  1687                           ;incstack = 0
  1688                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1689                           
  1690  0393  01F5               	clrf	___lwdiv@quotient
  1691  0394  01F6               	clrf	___lwdiv@quotient+1
  1692  0395                     l2247:
  1693  0395  0870               	movf	___lwdiv@divisor,w
  1694  0396  0471               	iorwf	___lwdiv@divisor+1,w
  1695  0397  1903               	btfsc	3,2
  1696  0398  2B9A               	goto	u1891
  1697  0399  2B9B               	goto	u1890
  1698  039A                     u1891:
  1699  039A  2BCA               	goto	l2267
  1700  039B                     u1890:
  1701  039B                     l2249:
  1702  039B  01F7               	clrf	___lwdiv@counter
  1703  039C  0AF7               	incf	___lwdiv@counter,f
  1704  039D  2BA7               	goto	l2255
  1705  039E                     l2251:
  1706  039E  3001               	movlw	1
  1707  039F                     u1905:
  1708  039F  35F0               	lslf	___lwdiv@divisor,f
  1709  03A0  0DF1               	rlf	___lwdiv@divisor+1,f
  1710  03A1  0B89               	decfsz	9,f
  1711  03A2  2B9F               	goto	u1905
  1712  03A3                     l2253:
  1713  03A3  3001               	movlw	1
  1714  03A4  00F4               	movwf	??___lwdiv
  1715  03A5  0874               	movf	??___lwdiv,w
  1716  03A6  07F7               	addwf	___lwdiv@counter,f
  1717  03A7                     l2255:
  1718  03A7  1FF1               	btfss	___lwdiv@divisor+1,7
  1719  03A8  2BAA               	goto	u1911
  1720  03A9  2BAB               	goto	u1910
  1721  03AA                     u1911:
  1722  03AA  2B9E               	goto	l2251
  1723  03AB                     u1910:
  1724  03AB                     l2257:
  1725  03AB  3001               	movlw	1
  1726  03AC                     u1925:
  1727  03AC  35F5               	lslf	___lwdiv@quotient,f
  1728  03AD  0DF6               	rlf	___lwdiv@quotient+1,f
  1729  03AE  0B89               	decfsz	9,f
  1730  03AF  2BAC               	goto	u1925
  1731  03B0  0871               	movf	___lwdiv@divisor+1,w
  1732  03B1  0273               	subwf	___lwdiv@dividend+1,w
  1733  03B2  1D03               	skipz
  1734  03B3  2BB6               	goto	u1935
  1735  03B4  0870               	movf	___lwdiv@divisor,w
  1736  03B5  0272               	subwf	___lwdiv@dividend,w
  1737  03B6                     u1935:
  1738  03B6  1C03               	skipc
  1739  03B7  2BB9               	goto	u1931
  1740  03B8  2BBA               	goto	u1930
  1741  03B9                     u1931:
  1742  03B9  2BBF               	goto	l2263
  1743  03BA                     u1930:
  1744  03BA                     l2259:
  1745  03BA  0870               	movf	___lwdiv@divisor,w
  1746  03BB  02F2               	subwf	___lwdiv@dividend,f
  1747  03BC  0871               	movf	___lwdiv@divisor+1,w
  1748  03BD  3BF3               	subwfb	___lwdiv@dividend+1,f
  1749  03BE                     l2261:
  1750  03BE  1475               	bsf	___lwdiv@quotient,0
  1751  03BF                     l2263:
  1752  03BF  3001               	movlw	1
  1753  03C0                     u1945:
  1754  03C0  36F1               	lsrf	___lwdiv@divisor+1,f
  1755  03C1  0CF0               	rrf	___lwdiv@divisor,f
  1756  03C2  0B89               	decfsz	9,f
  1757  03C3  2BC0               	goto	u1945
  1758  03C4                     l2265:
  1759  03C4  3001               	movlw	1
  1760  03C5  02F7               	subwf	___lwdiv@counter,f
  1761  03C6  1D03               	btfss	3,2
  1762  03C7  2BC9               	goto	u1951
  1763  03C8  2BCA               	goto	u1950
  1764  03C9                     u1951:
  1765  03C9  2BAB               	goto	l2257
  1766  03CA                     u1950:
  1767  03CA                     l2267:
  1768  03CA  0876               	movf	___lwdiv@quotient+1,w
  1769  03CB  00F1               	movwf	?___lwdiv+1
  1770  03CC  0875               	movf	___lwdiv@quotient,w
  1771  03CD  00F0               	movwf	?___lwdiv
  1772  03CE                     l797:
  1773  03CE  0008               	return
  1774  03CF                     __end_of___lwdiv:
  1775                           
  1776                           	psect	text4
  1777  0454                     __ptext4:	
  1778 ;; *************** function _tact *****************
  1779 ;; Defined at:
  1780 ;;		line 346 in file "Q3.c"
  1781 ;; Parameters:    Size  Location     Type
  1782 ;;  mode            2    8[COMMON] unsigned short 
  1783 ;; Auto vars:     Size  Location     Type
  1784 ;;		None
  1785 ;; Return value:  Size  Location     Type
  1786 ;;                  1    wreg      void 
  1787 ;; Registers used:
  1788 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1789 ;; Tracked objects:
  1790 ;;		On entry : 0/0
  1791 ;;		On exit  : 0/0
  1792 ;;		Unchanged: 0/0
  1793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1794 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1797 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1798 ;;Total ram usage:        2 bytes
  1799 ;; Hardware stack levels used:    1
  1800 ;; Hardware stack levels required when called:    1
  1801 ;; This function calls:
  1802 ;;		_tactsw
  1803 ;; This function is called by:
  1804 ;;		_main
  1805 ;;		_kaisu
  1806 ;;		_waitSEGStop
  1807 ;;		_motorStop
  1808 ;;		_buzzStop
  1809 ;; This function uses a non-reentrant model
  1810 ;;
  1811                           
  1812                           
  1813                           ;psect for function _tact
  1814  0454                     _tact:
  1815  0454                     l2311:	
  1816                           ;incstack = 0
  1817                           ; Regs used in _tact: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1818                           
  1819                           
  1820                           ;Q3.c: 346: void tact(unsigned short mode);Q3.c: 347: {;Q3.c: 348:     switch(mode){
  1821  0454  2C8F               	goto	l2339
  1822  0455                     l2313:
  1823                           
  1824                           ;Q3.c: 350:                 tactsw();
  1825  0455  3183  23CF  3184   	fcall	_tactsw
  1826  0458                     l2315:
  1827                           
  1828                           ;Q3.c: 351:                 if(flag_sw3==0)flag_R=1;
  1829  0458  087B               	movf	_flag_sw3,w
  1830  0459  047C               	iorwf	_flag_sw3+1,w
  1831  045A  1D03               	btfss	3,2
  1832  045B  2C5D               	goto	u1981
  1833  045C  2C5E               	goto	u1980
  1834  045D                     u1981:
  1835  045D  2C9F               	goto	l208
  1836  045E                     u1980:
  1837  045E                     l2317:
  1838  045E  3001               	movlw	1
  1839  045F  0020               	movlb	0	; select bank0
  1840  0460  00BA               	movwf	_flag_R
  1841  0461  3000               	movlw	0
  1842  0462  00BB               	movwf	_flag_R+1
  1843  0463  2C9F               	goto	l208
  1844  0464                     l2319:
  1845                           
  1846                           ;Q3.c: 354:                 tactsw();
  1847  0464  3183  23CF  3184   	fcall	_tactsw
  1848  0467                     l2321:
  1849                           
  1850                           ;Q3.c: 355:                 if(flag_sw3==1)flag_P=1;
  1851  0467  037B               	decf	_flag_sw3,w
  1852  0468  047C               	iorwf	_flag_sw3+1,w
  1853  0469  1D03               	btfss	3,2
  1854  046A  2C6C               	goto	u1991
  1855  046B  2C6D               	goto	u1990
  1856  046C                     u1991:
  1857  046C  2C9F               	goto	l208
  1858  046D                     u1990:
  1859  046D                     l2323:
  1860  046D  3001               	movlw	1
  1861  046E  0020               	movlb	0	; select bank0
  1862  046F  00B8               	movwf	_flag_P
  1863  0470  3000               	movlw	0
  1864  0471  00B9               	movwf	_flag_P+1
  1865  0472  2C9F               	goto	l208
  1866  0473                     l2325:
  1867                           
  1868                           ;Q3.c: 358:                 tactsw();
  1869  0473  3183  23CF  3184   	fcall	_tactsw
  1870  0476                     l2327:
  1871                           
  1872                           ;Q3.c: 359:                 if(flag_sw3==0)flag_R=1;
  1873  0476  087B               	movf	_flag_sw3,w
  1874  0477  047C               	iorwf	_flag_sw3+1,w
  1875  0478  1D03               	btfss	3,2
  1876  0479  2C7B               	goto	u2001
  1877  047A  2C7C               	goto	u2000
  1878  047B                     u2001:
  1879  047B  2C81               	goto	l2331
  1880  047C                     u2000:
  1881  047C                     l2329:
  1882  047C  3001               	movlw	1
  1883  047D  0020               	movlb	0	; select bank0
  1884  047E  00BA               	movwf	_flag_R
  1885  047F  3000               	movlw	0
  1886  0480  00BB               	movwf	_flag_R+1
  1887  0481                     l2331:
  1888                           
  1889                           ;Q3.c: 360:                 if((flag_sw3==1)&&(flag_R==1))flag_P=1;
  1890  0481  037B               	decf	_flag_sw3,w
  1891  0482  047C               	iorwf	_flag_sw3+1,w
  1892  0483  1D03               	btfss	3,2
  1893  0484  2C86               	goto	u2011
  1894  0485  2C87               	goto	u2010
  1895  0486                     u2011:
  1896  0486  2C9F               	goto	l208
  1897  0487                     u2010:
  1898  0487                     l2333:
  1899  0487  0020               	movlb	0	; select bank0
  1900  0488  033A               	decf	_flag_R,w
  1901  0489  043B               	iorwf	_flag_R+1,w
  1902  048A  1D03               	btfss	3,2
  1903  048B  2C8D               	goto	u2021
  1904  048C  2C8E               	goto	u2020
  1905  048D                     u2021:
  1906  048D  2C9F               	goto	l208
  1907  048E                     u2020:
  1908  048E  2C6D               	goto	l2323
  1909  048F                     l2339:
  1910                           
  1911                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1912                           ; Switch size 1, requested type "simple"
  1913                           ; Number of cases is 1, Range of values is 0 to 0
  1914                           ; switch strategies available:
  1915                           ; Name         Instructions Cycles
  1916                           ; simple_byte            4     3 (average)
  1917                           ; direct_byte            8     6 (fixed)
  1918                           ; jumptable            260     6 (fixed)
  1919                           ;	Chosen strategy is simple_byte
  1920  048F  0879               	movf	tact@mode+1,w
  1921  0490  3A00               	xorlw	0	; case 0
  1922  0491  1903               	skipnz
  1923  0492  2C94               	goto	l3253
  1924  0493  2C9F               	goto	l208
  1925  0494                     l3253:
  1926                           
  1927                           ; Switch size 1, requested type "simple"
  1928                           ; Number of cases is 3, Range of values is 0 to 2
  1929                           ; switch strategies available:
  1930                           ; Name         Instructions Cycles
  1931                           ; simple_byte           10     6 (average)
  1932                           ; direct_byte           12     6 (fixed)
  1933                           ; jumptable            260     6 (fixed)
  1934                           ;	Chosen strategy is simple_byte
  1935  0494  0878               	movf	tact@mode,w
  1936  0495  3A00               	xorlw	0	; case 0
  1937  0496  1903               	skipnz
  1938  0497  2C55               	goto	l2313
  1939  0498  3A01               	xorlw	1	; case 1
  1940  0499  1903               	skipnz
  1941  049A  2C64               	goto	l2319
  1942  049B  3A03               	xorlw	3	; case 2
  1943  049C  1903               	skipnz
  1944  049D  2C73               	goto	l2325
  1945  049E  2C9F               	goto	l208
  1946  049F                     l208:
  1947  049F  0008               	return
  1948  04A0                     __end_of_tact:
  1949                           
  1950                           	psect	text5
  1951  03CF                     __ptext5:	
  1952 ;; *************** function _tactsw *****************
  1953 ;; Defined at:
  1954 ;;		line 331 in file "Q3.c"
  1955 ;; Parameters:    Size  Location     Type
  1956 ;;		None
  1957 ;; Auto vars:     Size  Location     Type
  1958 ;;  a               2    6[COMMON] unsigned short 
  1959 ;;  c               2    4[COMMON] unsigned short 
  1960 ;;  b               2    2[COMMON] unsigned short 
  1961 ;; Return value:  Size  Location     Type
  1962 ;;                  1    wreg      void 
  1963 ;; Registers used:
  1964 ;;		wreg, status,2, status,0
  1965 ;; Tracked objects:
  1966 ;;		On entry : 0/0
  1967 ;;		On exit  : 0/0
  1968 ;;		Unchanged: 0/0
  1969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1971 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1972 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1973 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1974 ;;Total ram usage:        8 bytes
  1975 ;; Hardware stack levels used:    1
  1976 ;; This function calls:
  1977 ;;		Nothing
  1978 ;; This function is called by:
  1979 ;;		_tact
  1980 ;; This function uses a non-reentrant model
  1981 ;;
  1982                           
  1983                           
  1984                           ;psect for function _tactsw
  1985  03CF                     _tactsw:
  1986  03CF                     l2227:	
  1987                           ;incstack = 0
  1988                           ; Regs used in _tactsw: [wreg+status,2+status,0]
  1989                           
  1990                           
  1991                           ;Q3.c: 333:     unsigned short a,b,c;;Q3.c: 334:     b=c=0;
  1992  03CF  01F4               	clrf	tactsw@c
  1993  03D0  01F5               	clrf	tactsw@c+1
  1994  03D1  01F2               	clrf	tactsw@b
  1995  03D2  01F3               	clrf	tactsw@b+1
  1996  03D3                     l2229:
  1997                           
  1998                           ;Q3.c: 336:             a=RA2;
  1999  03D3  1003               	clrc
  2000  03D4  0020               	movlb	0	; select bank0
  2001  03D5  190C               	btfsc	12,2	;volatile
  2002  03D6  1403               	setc
  2003  03D7  3000               	movlw	0
  2004  03D8  3D09               	addwfc	9,w
  2005  03D9  00F0               	movwf	??_tactsw
  2006  03DA  01F1               	clrf	??_tactsw+1
  2007  03DB  0870               	movf	??_tactsw,w
  2008  03DC  00F6               	movwf	tactsw@a
  2009  03DD  0871               	movf	??_tactsw+1,w
  2010  03DE  00F7               	movwf	tactsw@a+1
  2011  03DF                     l2231:
  2012                           
  2013                           ;Q3.c: 337:             if(b==a)++c;
  2014  03DF  0877               	movf	tactsw@a+1,w
  2015  03E0  0673               	xorwf	tactsw@b+1,w
  2016  03E1  1D03               	skipz
  2017  03E2  2BE5               	goto	u1875
  2018  03E3  0876               	movf	tactsw@a,w
  2019  03E4  0672               	xorwf	tactsw@b,w
  2020  03E5                     u1875:
  2021  03E5  1D03               	skipz
  2022  03E6  2BE8               	goto	u1871
  2023  03E7  2BE9               	goto	u1870
  2024  03E8                     u1871:
  2025  03E8  2BEE               	goto	l2235
  2026  03E9                     u1870:
  2027  03E9                     l2233:
  2028  03E9  3001               	movlw	1
  2029  03EA  07F4               	addwf	tactsw@c,f
  2030  03EB  3000               	movlw	0
  2031  03EC  3DF5               	addwfc	tactsw@c+1,f
  2032  03ED  2BF0               	goto	l2237
  2033  03EE                     l2235:
  2034  03EE  01F4               	clrf	tactsw@c
  2035  03EF  01F5               	clrf	tactsw@c+1
  2036  03F0                     l2237:
  2037                           
  2038                           ;Q3.c: 339:             if(c>10){flag_sw3=(~a)&0x01;return;}
  2039  03F0  3000               	movlw	0
  2040  03F1  0275               	subwf	tactsw@c+1,w
  2041  03F2  300B               	movlw	11
  2042  03F3  1903               	skipnz
  2043  03F4  0274               	subwf	tactsw@c,w
  2044  03F5  1C03               	skipc
  2045  03F6  2BF8               	goto	u1881
  2046  03F7  2BF9               	goto	u1880
  2047  03F8                     u1881:
  2048  03F8  2C06               	goto	l2243
  2049  03F9                     u1880:
  2050  03F9                     l2239:
  2051  03F9  0877               	movf	tactsw@a+1,w
  2052  03FA  00F1               	movwf	??_tactsw+1
  2053  03FB  0876               	movf	tactsw@a,w
  2054  03FC  00F0               	movwf	??_tactsw
  2055  03FD  09F0               	comf	??_tactsw,f
  2056  03FE  09F1               	comf	??_tactsw+1,f
  2057  03FF  3001               	movlw	1
  2058  0400  0570               	andwf	??_tactsw,w
  2059  0401  00FB               	movwf	_flag_sw3
  2060  0402  3000               	movlw	0
  2061  0403  0571               	andwf	??_tactsw+1,w
  2062  0404  00FC               	movwf	_flag_sw3+1
  2063  0405  2C0B               	goto	l193
  2064  0406                     l2243:
  2065                           
  2066                           ;Q3.c: 340:             b=a;
  2067  0406  0877               	movf	tactsw@a+1,w
  2068  0407  00F3               	movwf	tactsw@b+1
  2069  0408  0876               	movf	tactsw@a,w
  2070  0409  00F2               	movwf	tactsw@b
  2071  040A  2BD3               	goto	l2229
  2072  040B                     l193:
  2073  040B  0008               	return
  2074  040C                     __end_of_tactsw:
  2075                           
  2076                           	psect	text6
  2077  0308                     __ptext6:	
  2078 ;; *************** function _portinit *****************
  2079 ;; Defined at:
  2080 ;;		line 160 in file "Q3.c"
  2081 ;; Parameters:    Size  Location     Type
  2082 ;;		None
  2083 ;; Auto vars:     Size  Location     Type
  2084 ;;		None
  2085 ;; Return value:  Size  Location     Type
  2086 ;;                  1    wreg      void 
  2087 ;; Registers used:
  2088 ;;		wreg, status,2
  2089 ;; Tracked objects:
  2090 ;;		On entry : 0/0
  2091 ;;		On exit  : 0/0
  2092 ;;		Unchanged: 0/0
  2093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2098 ;;Total ram usage:        0 bytes
  2099 ;; Hardware stack levels used:    1
  2100 ;; This function calls:
  2101 ;;		Nothing
  2102 ;; This function is called by:
  2103 ;;		_main
  2104 ;; This function uses a non-reentrant model
  2105 ;;
  2106                           
  2107                           
  2108                           ;psect for function _portinit
  2109  0308                     _portinit:
  2110  0308                     l2271:	
  2111                           ;incstack = 0
  2112                           ; Regs used in _portinit: [wreg+status,2]
  2113                           
  2114                           
  2115                           ;Q3.c: 163:     ANSELA=0x00;
  2116  0308  0023               	movlb	3	; select bank3
  2117  0309  018C               	clrf	12	;volatile
  2118                           
  2119                           ;Q3.c: 164:     ANSELB=0x00;
  2120  030A  018D               	clrf	13	;volatile
  2121  030B                     l2273:
  2122                           
  2123                           ;Q3.c: 166:     PORTA=0x07;
  2124  030B  3007               	movlw	7
  2125  030C  0020               	movlb	0	; select bank0
  2126  030D  008C               	movwf	12	;volatile
  2127  030E                     l2275:
  2128                           
  2129                           ;Q3.c: 167:     TRISA=0x07;
  2130  030E  3007               	movlw	7
  2131  030F  0021               	movlb	1	; select bank1
  2132  0310  008C               	movwf	12	;volatile
  2133                           
  2134                           ;Q3.c: 168:     PORTB=0x00;
  2135  0311  0020               	movlb	0	; select bank0
  2136  0312  018D               	clrf	13	;volatile
  2137                           
  2138                           ;Q3.c: 169:     TRISB=0x00;
  2139  0313  0021               	movlb	1	; select bank1
  2140  0314  018D               	clrf	13	;volatile
  2141  0315                     l2277:
  2142                           
  2143                           ;Q3.c: 170:     PORTC=0x07;
  2144  0315  3007               	movlw	7
  2145  0316  0020               	movlb	0	; select bank0
  2146  0317  008E               	movwf	14	;volatile
  2147  0318                     l2279:
  2148                           
  2149                           ;Q3.c: 171:     TRISC=0x00;
  2150  0318  0021               	movlb	1	; select bank1
  2151  0319  018E               	clrf	14	;volatile
  2152  031A                     l95:
  2153  031A  0008               	return
  2154  031B                     __end_of_portinit:
  2155                           
  2156                           	psect	text7
  2157  033B                     __ptext7:	
  2158 ;; *************** function _motor *****************
  2159 ;; Defined at:
  2160 ;;		line 506 in file "Q3.c"
  2161 ;; Parameters:    Size  Location     Type
  2162 ;;  kakudo          2    8[BANK0 ] int 
  2163 ;;  dig1data        2   10[BANK0 ] unsigned short 
  2164 ;;  dig2data        2   12[BANK0 ] unsigned short 
  2165 ;;  smdata          2   14[BANK0 ] unsigned short 
  2166 ;;  tr              2   16[BANK0 ] unsigned int 
  2167 ;; Auto vars:     Size  Location     Type
  2168 ;;  i               2    8[COMMON] int 
  2169 ;; Return value:  Size  Location     Type
  2170 ;;                  1    wreg      void 
  2171 ;; Registers used:
  2172 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2173 ;; Tracked objects:
  2174 ;;		On entry : 0/0
  2175 ;;		On exit  : 0/0
  2176 ;;		Unchanged: 0/0
  2177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2178 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2179 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2181 ;;      Totals:         2      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2182 ;;Total ram usage:       12 bytes
  2183 ;; Hardware stack levels used:    1
  2184 ;; Hardware stack levels required when called:    1
  2185 ;; This function calls:
  2186 ;;		_dynam
  2187 ;; This function is called by:
  2188 ;;		_main
  2189 ;; This function uses a non-reentrant model
  2190 ;;
  2191                           
  2192                           
  2193                           ;psect for function _motor
  2194  033B                     _motor:
  2195  033B                     l2421:	
  2196                           ;incstack = 0
  2197                           ; Regs used in _motor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2198                           
  2199                           
  2200                           ;Q3.c: 508:     for(int i = kakudo;i>=0;i--){
  2201  033B  0020               	movlb	0	; select bank0
  2202  033C  0849               	movf	motor@kakudo+1,w
  2203  033D  00F9               	movwf	motor@i+1
  2204  033E  0848               	movf	motor@kakudo,w
  2205  033F  00F8               	movwf	motor@i
  2206  0340                     l2423:
  2207  0340  1FF9               	btfss	motor@i+1,7
  2208  0341  2B43               	goto	u2091
  2209  0342  2B44               	goto	u2090
  2210  0343                     u2091:
  2211  0343  2B45               	goto	l2427
  2212  0344                     u2090:
  2213  0344  2B5E               	goto	l274
  2214  0345                     l2427:
  2215                           
  2216                           ;Q3.c: 509:         dynam(dig1data,dig2data,smdata,tr);
  2217  0345  0020               	movlb	0	; select bank0
  2218  0346  084B               	movf	motor@dig1data+1,w
  2219  0347  00F1               	movwf	dynam@dig1data+1
  2220  0348  084A               	movf	motor@dig1data,w
  2221  0349  00F0               	movwf	dynam@dig1data
  2222  034A  084D               	movf	motor@dig2data+1,w
  2223  034B  00F3               	movwf	dynam@dig2data+1
  2224  034C  084C               	movf	motor@dig2data,w
  2225  034D  00F2               	movwf	dynam@dig2data
  2226  034E  084F               	movf	motor@smdata+1,w
  2227  034F  00F5               	movwf	dynam@smdata+1
  2228  0350  084E               	movf	motor@smdata,w
  2229  0351  00F4               	movwf	dynam@smdata
  2230  0352  0851               	movf	motor@tr+1,w
  2231  0353  00F7               	movwf	dynam@tr+1
  2232  0354  0850               	movf	motor@tr,w
  2233  0355  00F6               	movwf	dynam@tr
  2234  0356  3184  24F0  3183   	fcall	_dynam
  2235  0359                     l2429:
  2236                           
  2237                           ;Q3.c: 510:     }
  2238  0359  30FF               	movlw	255
  2239  035A  07F8               	addwf	motor@i,f
  2240  035B  30FF               	movlw	255
  2241  035C  3DF9               	addwfc	motor@i+1,f
  2242  035D  2B40               	goto	l2423
  2243  035E                     l274:
  2244  035E  0008               	return
  2245  035F                     __end_of_motor:
  2246                           
  2247                           	psect	text8
  2248  04F0                     __ptext8:	
  2249 ;; *************** function _dynam *****************
  2250 ;; Defined at:
  2251 ;;		line 206 in file "Q3.c"
  2252 ;; Parameters:    Size  Location     Type
  2253 ;;  dig1data        2    0[COMMON] unsigned short 
  2254 ;;  dig2data        2    2[COMMON] unsigned short 
  2255 ;;  smdata          2    4[COMMON] unsigned short 
  2256 ;;  tr              2    6[COMMON] unsigned int 
  2257 ;; Auto vars:     Size  Location     Type
  2258 ;;  ext             2    6[BANK0 ] unsigned short 
  2259 ;;  j               2    4[BANK0 ] unsigned int 
  2260 ;;  tm              2    2[BANK0 ] unsigned int 
  2261 ;;  smd             2    0[BANK0 ] unsigned short 
  2262 ;; Return value:  Size  Location     Type
  2263 ;;                  1    wreg      void 
  2264 ;; Registers used:
  2265 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2266 ;; Tracked objects:
  2267 ;;		On entry : 0/0
  2268 ;;		On exit  : 0/0
  2269 ;;		Unchanged: 0/0
  2270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2271 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2272 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2274 ;;      Totals:         8       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2275 ;;Total ram usage:       16 bytes
  2276 ;; Hardware stack levels used:    1
  2277 ;; This function calls:
  2278 ;;		Nothing
  2279 ;; This function is called by:
  2280 ;;		_waitSEG
  2281 ;;		_motor
  2282 ;;		_main
  2283 ;;		_clear
  2284 ;;		_waitSEGStop
  2285 ;;		_motorStop
  2286 ;; This function uses a non-reentrant model
  2287 ;;
  2288                           
  2289                           
  2290                           ;psect for function _dynam
  2291  04F0                     _dynam:
  2292  04F0                     l2071:	
  2293                           ;incstack = 0
  2294                           ; Regs used in _dynam: [wreg-fsr0h+status,2+status,0]
  2295                           
  2296  04F0  0020               	movlb	0	; select bank0
  2297  04F1  01C2               	clrf	dynam@tm
  2298  04F2  01C3               	clrf	dynam@tm+1
  2299                           
  2300                           ;Q3.c: 209:     unsigned short ext=0,smd=0;
  2301  04F3  01C6               	clrf	dynam@ext
  2302  04F4  01C7               	clrf	dynam@ext+1
  2303  04F5  01C0               	clrf	dynam@smd
  2304  04F6  01C1               	clrf	dynam@smd+1
  2305  04F7                     l2073:
  2306                           
  2307                           ;Q3.c: 210:     RC7=0;
  2308  04F7  138E               	bcf	14,7	;volatile
  2309  04F8                     l2075:
  2310                           
  2311                           ;Q3.c: 211:     PORTB=dig1data;
  2312  04F8  0870               	movf	dynam@dig1data,w
  2313  04F9  008D               	movwf	13	;volatile
  2314  04FA                     l2077:
  2315                           
  2316                           ;Q3.c: 212:     RC5=0;RC6=1;
  2317  04FA  128E               	bcf	14,5	;volatile
  2318  04FB                     l2079:
  2319  04FB  170E               	bsf	14,6	;volatile
  2320  04FC                     l2081:
  2321                           
  2322                           ;Q3.c: 213:     if(tr==5){tm=3000;}
  2323  04FC  3005               	movlw	5
  2324  04FD  0676               	xorwf	dynam@tr,w
  2325  04FE  0477               	iorwf	dynam@tr+1,w
  2326  04FF  1D03               	btfss	3,2
  2327  0500  2D02               	goto	u1651
  2328  0501  2D03               	goto	u1650
  2329  0502                     u1651:
  2330  0502  2D08               	goto	l2085
  2331  0503                     u1650:
  2332  0503                     l2083:
  2333  0503  30B8               	movlw	184
  2334  0504  00C2               	movwf	dynam@tm
  2335  0505  300B               	movlw	11
  2336  0506  00C3               	movwf	dynam@tm+1
  2337  0507  2D0C               	goto	l112
  2338  0508                     l2085:
  2339  0508  30E8               	movlw	232
  2340  0509  00C2               	movwf	dynam@tm
  2341  050A  3003               	movlw	3
  2342  050B  00C3               	movwf	dynam@tm+1
  2343  050C                     l112:
  2344                           
  2345                           ;Q3.c: 215:     for(j=tm;j>0;--j);
  2346  050C  0843               	movf	dynam@tm+1,w
  2347  050D  00C5               	movwf	dynam@j+1
  2348  050E  0842               	movf	dynam@tm,w
  2349  050F  00C4               	movwf	dynam@j
  2350  0510                     l2087:
  2351  0510  0844               	movf	dynam@j,w
  2352  0511  0445               	iorwf	dynam@j+1,w
  2353  0512  1D03               	btfss	3,2
  2354  0513  2D15               	goto	u1661
  2355  0514  2D16               	goto	u1660
  2356  0515                     u1661:
  2357  0515  2D17               	goto	l2091
  2358  0516                     u1660:
  2359  0516  2D1C               	goto	l114
  2360  0517                     l2091:
  2361  0517  3001               	movlw	1
  2362  0518  02C4               	subwf	dynam@j,f
  2363  0519  3000               	movlw	0
  2364  051A  3BC5               	subwfb	dynam@j+1,f
  2365  051B  2D10               	goto	l2087
  2366  051C                     l114:
  2367                           
  2368                           ;Q3.c: 216:     RC5=0;RC6=0;
  2369  051C  128E               	bcf	14,5	;volatile
  2370  051D  130E               	bcf	14,6	;volatile
  2371  051E                     l2095:
  2372                           
  2373                           ;Q3.c: 217:     PORTB=dig2data;
  2374  051E  0872               	movf	dynam@dig2data,w
  2375  051F  008D               	movwf	13	;volatile
  2376  0520                     l2097:
  2377                           
  2378                           ;Q3.c: 218:     RC6=0;RC5=1;
  2379  0520  130E               	bcf	14,6	;volatile
  2380  0521                     l2099:
  2381  0521  168E               	bsf	14,5	;volatile
  2382  0522                     l2101:
  2383                           
  2384                           ;Q3.c: 219:     if(tr==5){tm=3000;}
  2385  0522  3005               	movlw	5
  2386  0523  0676               	xorwf	dynam@tr,w
  2387  0524  0477               	iorwf	dynam@tr+1,w
  2388  0525  1D03               	btfss	3,2
  2389  0526  2D28               	goto	u1671
  2390  0527  2D29               	goto	u1670
  2391  0528                     u1671:
  2392  0528  2D2E               	goto	l2105
  2393  0529                     u1670:
  2394  0529                     l2103:
  2395  0529  30B8               	movlw	184
  2396  052A  00C2               	movwf	dynam@tm
  2397  052B  300B               	movlw	11
  2398  052C  00C3               	movwf	dynam@tm+1
  2399  052D  2D32               	goto	l116
  2400  052E                     l2105:
  2401  052E  30E8               	movlw	232
  2402  052F  00C2               	movwf	dynam@tm
  2403  0530  3003               	movlw	3
  2404  0531  00C3               	movwf	dynam@tm+1
  2405  0532                     l116:
  2406                           
  2407                           ;Q3.c: 221:     for(j=tm;j>0;--j);
  2408  0532  0843               	movf	dynam@tm+1,w
  2409  0533  00C5               	movwf	dynam@j+1
  2410  0534  0842               	movf	dynam@tm,w
  2411  0535  00C4               	movwf	dynam@j
  2412  0536                     l2107:
  2413  0536  0844               	movf	dynam@j,w
  2414  0537  0445               	iorwf	dynam@j+1,w
  2415  0538  1D03               	btfss	3,2
  2416  0539  2D3B               	goto	u1681
  2417  053A  2D3C               	goto	u1680
  2418  053B                     u1681:
  2419  053B  2D3D               	goto	l2111
  2420  053C                     u1680:
  2421  053C  2D42               	goto	l118
  2422  053D                     l2111:
  2423  053D  3001               	movlw	1
  2424  053E  02C4               	subwf	dynam@j,f
  2425  053F  3000               	movlw	0
  2426  0540  3BC5               	subwfb	dynam@j+1,f
  2427  0541  2D36               	goto	l2107
  2428  0542                     l118:
  2429                           
  2430                           ;Q3.c: 222:     RC5=0;RC6=0;
  2431  0542  128E               	bcf	14,5	;volatile
  2432  0543  130E               	bcf	14,6	;volatile
  2433                           
  2434                           ;Q3.c: 223:     switch(smdata){
  2435  0544  2E49               	goto	l2221
  2436  0545                     l2115:
  2437                           
  2438                           ;Q3.c: 225:                 PORTB=0x00;smd=(0x01|0x02|0x04|0x08|0x10|0x20);
  2439  0545  018D               	clrf	13	;volatile
  2440  0546                     l2117:
  2441  0546                     l2119:
  2442                           
  2443                           ;Q3.c: 226:                 RC7=0;RC7=1;RC7=0;
  2444  0546  138E               	bcf	14,7	;volatile
  2445  0547                     l2121:
  2446  0547  178E               	bsf	14,7	;volatile
  2447  0548                     l2123:
  2448  0548  138E               	bcf	14,7	;volatile
  2449                           
  2450                           ;Q3.c: 227:                 break;
  2451  0549  2E59               	goto	l135
  2452  054A                     l2125:
  2453                           
  2454                           ;Q3.c: 229:                 if(flg==1)cw=0;flg=0;
  2455  054A  0336               	decf	_flg,w
  2456  054B  0437               	iorwf	_flg+1,w
  2457  054C  1D03               	btfss	3,2
  2458  054D  2D4F               	goto	u1691
  2459  054E  2D50               	goto	u1690
  2460  054F                     u1691:
  2461  054F  2D52               	goto	l123
  2462  0550                     u1690:
  2463  0550                     l2127:
  2464  0550  01B4               	clrf	_cw
  2465  0551  01B5               	clrf	_cw+1
  2466  0552                     l123:
  2467  0552  01B6               	clrf	_flg
  2468  0553  01B7               	clrf	_flg+1
  2469  0554                     l2129:
  2470                           
  2471                           ;Q3.c: 230:                 if((cw==0)&&(ext==0)){cw=1;ccw=0;ext=1;PORTB=smd=0x09;}
  2472  0554  0834               	movf	_cw,w
  2473  0555  0435               	iorwf	_cw+1,w
  2474  0556  1D03               	btfss	3,2
  2475  0557  2D59               	goto	u1701
  2476  0558  2D5A               	goto	u1700
  2477  0559                     u1701:
  2478  0559  2D70               	goto	l2141
  2479  055A                     u1700:
  2480  055A                     l2131:
  2481  055A  0846               	movf	dynam@ext,w
  2482  055B  0447               	iorwf	dynam@ext+1,w
  2483  055C  1D03               	btfss	3,2
  2484  055D  2D5F               	goto	u1711
  2485  055E  2D60               	goto	u1710
  2486  055F                     u1711:
  2487  055F  2D70               	goto	l2141
  2488  0560                     u1710:
  2489  0560                     l2133:
  2490  0560  3001               	movlw	1
  2491  0561  00B4               	movwf	_cw
  2492  0562  3000               	movlw	0
  2493  0563  00B5               	movwf	_cw+1
  2494  0564                     l2135:
  2495  0564  01B2               	clrf	_ccw
  2496  0565  01B3               	clrf	_ccw+1
  2497  0566                     l2137:
  2498  0566  3001               	movlw	1
  2499  0567  00C6               	movwf	dynam@ext
  2500  0568  3000               	movlw	0
  2501  0569  00C7               	movwf	dynam@ext+1
  2502  056A                     l2139:
  2503  056A  3009               	movlw	9
  2504  056B  00C0               	movwf	dynam@smd
  2505  056C  3000               	movlw	0
  2506  056D  00C1               	movwf	dynam@smd+1
  2507  056E  0840               	movf	dynam@smd,w
  2508  056F  008D               	movwf	13	;volatile
  2509  0570                     l2141:
  2510                           
  2511                           ;Q3.c: 231:                 if((cw==1)&&(ext==0)){cw=2;ccw=3;ext=1;PORTB=smd=0x0C;}
  2512  0570  0334               	decf	_cw,w
  2513  0571  0435               	iorwf	_cw+1,w
  2514  0572  1D03               	btfss	3,2
  2515  0573  2D75               	goto	u1721
  2516  0574  2D76               	goto	u1720
  2517  0575                     u1721:
  2518  0575  2D8E               	goto	l2147
  2519  0576                     u1720:
  2520  0576                     l2143:
  2521  0576  0846               	movf	dynam@ext,w
  2522  0577  0447               	iorwf	dynam@ext+1,w
  2523  0578  1D03               	btfss	3,2
  2524  0579  2D7B               	goto	u1731
  2525  057A  2D7C               	goto	u1730
  2526  057B                     u1731:
  2527  057B  2D8E               	goto	l2147
  2528  057C                     u1730:
  2529  057C                     l2145:
  2530  057C  3002               	movlw	2
  2531  057D  00B4               	movwf	_cw
  2532  057E  3000               	movlw	0
  2533  057F  00B5               	movwf	_cw+1
  2534  0580  3003               	movlw	3
  2535  0581  00B2               	movwf	_ccw
  2536  0582  3000               	movlw	0
  2537  0583  00B3               	movwf	_ccw+1
  2538  0584  3001               	movlw	1
  2539  0585  00C6               	movwf	dynam@ext
  2540  0586  3000               	movlw	0
  2541  0587  00C7               	movwf	dynam@ext+1
  2542  0588  300C               	movlw	12
  2543  0589  00C0               	movwf	dynam@smd
  2544  058A  3000               	movlw	0
  2545  058B  00C1               	movwf	dynam@smd+1
  2546  058C  0840               	movf	dynam@smd,w
  2547  058D  008D               	movwf	13	;volatile
  2548  058E                     l2147:
  2549                           
  2550                           ;Q3.c: 232:                 if((cw==2)&&(ext==0)){cw=3;ccw=2;ext=1;PORTB=smd=0x06;}
  2551  058E  3002               	movlw	2
  2552  058F  0634               	xorwf	_cw,w
  2553  0590  0435               	iorwf	_cw+1,w
  2554  0591  1D03               	btfss	3,2
  2555  0592  2D94               	goto	u1741
  2556  0593  2D95               	goto	u1740
  2557  0594                     u1741:
  2558  0594  2DAD               	goto	l2153
  2559  0595                     u1740:
  2560  0595                     l2149:
  2561  0595  0846               	movf	dynam@ext,w
  2562  0596  0447               	iorwf	dynam@ext+1,w
  2563  0597  1D03               	btfss	3,2
  2564  0598  2D9A               	goto	u1751
  2565  0599  2D9B               	goto	u1750
  2566  059A                     u1751:
  2567  059A  2DAD               	goto	l2153
  2568  059B                     u1750:
  2569  059B                     l2151:
  2570  059B  3003               	movlw	3
  2571  059C  00B4               	movwf	_cw
  2572  059D  3000               	movlw	0
  2573  059E  00B5               	movwf	_cw+1
  2574  059F  3002               	movlw	2
  2575  05A0  00B2               	movwf	_ccw
  2576  05A1  3000               	movlw	0
  2577  05A2  00B3               	movwf	_ccw+1
  2578  05A3  3001               	movlw	1
  2579  05A4  00C6               	movwf	dynam@ext
  2580  05A5  3000               	movlw	0
  2581  05A6  00C7               	movwf	dynam@ext+1
  2582  05A7  3006               	movlw	6
  2583  05A8  00C0               	movwf	dynam@smd
  2584  05A9  3000               	movlw	0
  2585  05AA  00C1               	movwf	dynam@smd+1
  2586  05AB  0840               	movf	dynam@smd,w
  2587  05AC  008D               	movwf	13	;volatile
  2588  05AD                     l2153:
  2589                           
  2590                           ;Q3.c: 233:                 if((cw==3)&&(ext==0)){cw=0;ccw=1;ext=1;PORTB=smd=0x03;}
  2591  05AD  3003               	movlw	3
  2592  05AE  0634               	xorwf	_cw,w
  2593  05AF  0435               	iorwf	_cw+1,w
  2594  05B0  1D03               	btfss	3,2
  2595  05B1  2DB3               	goto	u1761
  2596  05B2  2DB4               	goto	u1760
  2597  05B3                     u1761:
  2598  05B3  2D46               	goto	l2119
  2599  05B4                     u1760:
  2600  05B4                     l2155:
  2601  05B4  0846               	movf	dynam@ext,w
  2602  05B5  0447               	iorwf	dynam@ext+1,w
  2603  05B6  1D03               	btfss	3,2
  2604  05B7  2DB9               	goto	u1771
  2605  05B8  2DBA               	goto	u1770
  2606  05B9                     u1771:
  2607  05B9  2D46               	goto	l2119
  2608  05BA                     u1770:
  2609  05BA                     l2157:
  2610  05BA  01B4               	clrf	_cw
  2611  05BB  01B5               	clrf	_cw+1
  2612  05BC                     l2159:
  2613  05BC  3001               	movlw	1
  2614  05BD  00B2               	movwf	_ccw
  2615  05BE  3000               	movlw	0
  2616  05BF  00B3               	movwf	_ccw+1
  2617  05C0                     l2161:
  2618  05C0                     l2163:
  2619  05C0  3003               	movlw	3
  2620  05C1  00C0               	movwf	dynam@smd
  2621  05C2  3000               	movlw	0
  2622  05C3  00C1               	movwf	dynam@smd+1
  2623  05C4  0840               	movf	dynam@smd,w
  2624  05C5  008D               	movwf	13	;volatile
  2625  05C6  2D46               	goto	l2119
  2626  05C7                     l2171:
  2627                           
  2628                           ;Q3.c: 237:                 if(flg==1)ccw=0;flg=0;
  2629  05C7  0336               	decf	_flg,w
  2630  05C8  0437               	iorwf	_flg+1,w
  2631  05C9  1D03               	btfss	3,2
  2632  05CA  2DCC               	goto	u1781
  2633  05CB  2DCD               	goto	u1780
  2634  05CC                     u1781:
  2635  05CC  2DCF               	goto	l129
  2636  05CD                     u1780:
  2637  05CD                     l2173:
  2638  05CD  01B2               	clrf	_ccw
  2639  05CE  01B3               	clrf	_ccw+1
  2640  05CF                     l129:
  2641  05CF  01B6               	clrf	_flg
  2642  05D0  01B7               	clrf	_flg+1
  2643  05D1                     l2175:
  2644                           
  2645                           ;Q3.c: 238:                 if((ccw==0)&&(ext==0)){ccw=1;cw=0;ext=1;PORTB=smd=0x03;}
  2646  05D1  0832               	movf	_ccw,w
  2647  05D2  0433               	iorwf	_ccw+1,w
  2648  05D3  1D03               	btfss	3,2
  2649  05D4  2DD6               	goto	u1791
  2650  05D5  2DD7               	goto	u1790
  2651  05D6                     u1791:
  2652  05D6  2DED               	goto	l2187
  2653  05D7                     u1790:
  2654  05D7                     l2177:
  2655  05D7  0846               	movf	dynam@ext,w
  2656  05D8  0447               	iorwf	dynam@ext+1,w
  2657  05D9  1D03               	btfss	3,2
  2658  05DA  2DDC               	goto	u1801
  2659  05DB  2DDD               	goto	u1800
  2660  05DC                     u1801:
  2661  05DC  2DED               	goto	l2187
  2662  05DD                     u1800:
  2663  05DD                     l2179:
  2664  05DD  3001               	movlw	1
  2665  05DE  00B2               	movwf	_ccw
  2666  05DF  3000               	movlw	0
  2667  05E0  00B3               	movwf	_ccw+1
  2668  05E1                     l2181:
  2669  05E1  01B4               	clrf	_cw
  2670  05E2  01B5               	clrf	_cw+1
  2671  05E3                     l2183:
  2672  05E3  3001               	movlw	1
  2673  05E4  00C6               	movwf	dynam@ext
  2674  05E5  3000               	movlw	0
  2675  05E6  00C7               	movwf	dynam@ext+1
  2676  05E7                     l2185:
  2677  05E7  3003               	movlw	3
  2678  05E8  00C0               	movwf	dynam@smd
  2679  05E9  3000               	movlw	0
  2680  05EA  00C1               	movwf	dynam@smd+1
  2681  05EB  0840               	movf	dynam@smd,w
  2682  05EC  008D               	movwf	13	;volatile
  2683  05ED                     l2187:
  2684                           
  2685                           ;Q3.c: 239:                 if((ccw==1)&&(ext==0)){ccw=2;cw=3;ext=1;PORTB=smd=0x06;}
  2686  05ED  0332               	decf	_ccw,w
  2687  05EE  0433               	iorwf	_ccw+1,w
  2688  05EF  1D03               	btfss	3,2
  2689  05F0  2DF2               	goto	u1811
  2690  05F1  2DF3               	goto	u1810
  2691  05F2                     u1811:
  2692  05F2  2E0B               	goto	l2193
  2693  05F3                     u1810:
  2694  05F3                     l2189:
  2695  05F3  0846               	movf	dynam@ext,w
  2696  05F4  0447               	iorwf	dynam@ext+1,w
  2697  05F5  1D03               	btfss	3,2
  2698  05F6  2DF8               	goto	u1821
  2699  05F7  2DF9               	goto	u1820
  2700  05F8                     u1821:
  2701  05F8  2E0B               	goto	l2193
  2702  05F9                     u1820:
  2703  05F9                     l2191:
  2704  05F9  3002               	movlw	2
  2705  05FA  00B2               	movwf	_ccw
  2706  05FB  3000               	movlw	0
  2707  05FC  00B3               	movwf	_ccw+1
  2708  05FD  3003               	movlw	3
  2709  05FE  00B4               	movwf	_cw
  2710  05FF  3000               	movlw	0
  2711  0600  00B5               	movwf	_cw+1
  2712  0601  3001               	movlw	1
  2713  0602  00C6               	movwf	dynam@ext
  2714  0603  3000               	movlw	0
  2715  0604  00C7               	movwf	dynam@ext+1
  2716  0605  3006               	movlw	6
  2717  0606  00C0               	movwf	dynam@smd
  2718  0607  3000               	movlw	0
  2719  0608  00C1               	movwf	dynam@smd+1
  2720  0609  0840               	movf	dynam@smd,w
  2721  060A  008D               	movwf	13	;volatile
  2722  060B                     l2193:
  2723                           
  2724                           ;Q3.c: 240:                 if((ccw==2)&&(ext==0)){ccw=3;cw=2;ext=1;PORTB=smd=0x0C;}
  2725  060B  3002               	movlw	2
  2726  060C  0632               	xorwf	_ccw,w
  2727  060D  0433               	iorwf	_ccw+1,w
  2728  060E  1D03               	btfss	3,2
  2729  060F  2E11               	goto	u1831
  2730  0610  2E12               	goto	u1830
  2731  0611                     u1831:
  2732  0611  2E2A               	goto	l2199
  2733  0612                     u1830:
  2734  0612                     l2195:
  2735  0612  0846               	movf	dynam@ext,w
  2736  0613  0447               	iorwf	dynam@ext+1,w
  2737  0614  1D03               	btfss	3,2
  2738  0615  2E17               	goto	u1841
  2739  0616  2E18               	goto	u1840
  2740  0617                     u1841:
  2741  0617  2E2A               	goto	l2199
  2742  0618                     u1840:
  2743  0618                     l2197:
  2744  0618  3003               	movlw	3
  2745  0619  00B2               	movwf	_ccw
  2746  061A  3000               	movlw	0
  2747  061B  00B3               	movwf	_ccw+1
  2748  061C  3002               	movlw	2
  2749  061D  00B4               	movwf	_cw
  2750  061E  3000               	movlw	0
  2751  061F  00B5               	movwf	_cw+1
  2752  0620  3001               	movlw	1
  2753  0621  00C6               	movwf	dynam@ext
  2754  0622  3000               	movlw	0
  2755  0623  00C7               	movwf	dynam@ext+1
  2756  0624  300C               	movlw	12
  2757  0625  00C0               	movwf	dynam@smd
  2758  0626  3000               	movlw	0
  2759  0627  00C1               	movwf	dynam@smd+1
  2760  0628  0840               	movf	dynam@smd,w
  2761  0629  008D               	movwf	13	;volatile
  2762  062A                     l2199:
  2763                           
  2764                           ;Q3.c: 241:                 if((ccw==3)&&(ext==0)){ccw=0;cw=1;ext=1;PORTB=smd=0x09;}
  2765  062A  3003               	movlw	3
  2766  062B  0632               	xorwf	_ccw,w
  2767  062C  0433               	iorwf	_ccw+1,w
  2768  062D  1D03               	btfss	3,2
  2769  062E  2E30               	goto	u1851
  2770  062F  2E31               	goto	u1850
  2771  0630                     u1851:
  2772  0630  2D46               	goto	l2119
  2773  0631                     u1850:
  2774  0631                     l2201:
  2775  0631  0846               	movf	dynam@ext,w
  2776  0632  0447               	iorwf	dynam@ext+1,w
  2777  0633  1D03               	btfss	3,2
  2778  0634  2E36               	goto	u1861
  2779  0635  2E37               	goto	u1860
  2780  0636                     u1861:
  2781  0636  2D46               	goto	l2119
  2782  0637                     u1860:
  2783  0637                     l2203:
  2784  0637  01B2               	clrf	_ccw
  2785  0638  01B3               	clrf	_ccw+1
  2786  0639                     l2205:
  2787  0639  3001               	movlw	1
  2788  063A  00B4               	movwf	_cw
  2789  063B  3000               	movlw	0
  2790  063C  00B5               	movwf	_cw+1
  2791  063D                     l2207:
  2792  063D                     l2209:
  2793  063D  3009               	movlw	9
  2794  063E  00C0               	movwf	dynam@smd
  2795  063F  3000               	movlw	0
  2796  0640  00C1               	movwf	dynam@smd+1
  2797  0641  0840               	movf	dynam@smd,w
  2798  0642  008D               	movwf	13	;volatile
  2799  0643  2D46               	goto	l2119
  2800  0644                     l2217:
  2801                           
  2802                           ;Q3.c: 245:                 cw=ccw=0;
  2803  0644  01B2               	clrf	_ccw
  2804  0645  01B3               	clrf	_ccw+1
  2805  0646  01B4               	clrf	_cw
  2806  0647  01B5               	clrf	_cw+1
  2807                           
  2808                           ;Q3.c: 246:                 break;
  2809  0648  2E59               	goto	l135
  2810  0649                     l2221:
  2811                           
  2812                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2813                           ; Switch size 1, requested type "simple"
  2814                           ; Number of cases is 1, Range of values is 0 to 0
  2815                           ; switch strategies available:
  2816                           ; Name         Instructions Cycles
  2817                           ; simple_byte            4     3 (average)
  2818                           ; direct_byte            8     6 (fixed)
  2819                           ; jumptable            260     6 (fixed)
  2820                           ;	Chosen strategy is simple_byte
  2821  0649  0875               	movf	dynam@smdata+1,w
  2822  064A  3A00               	xorlw	0	; case 0
  2823  064B  1903               	skipnz
  2824  064C  2E4E               	goto	l3255
  2825  064D  2E44               	goto	l2217
  2826  064E                     l3255:
  2827                           
  2828                           ; Switch size 1, requested type "simple"
  2829                           ; Number of cases is 3, Range of values is 0 to 2
  2830                           ; switch strategies available:
  2831                           ; Name         Instructions Cycles
  2832                           ; simple_byte           10     6 (average)
  2833                           ; direct_byte           12     6 (fixed)
  2834                           ; jumptable            260     6 (fixed)
  2835                           ;	Chosen strategy is simple_byte
  2836  064E  0874               	movf	dynam@smdata,w
  2837  064F  3A00               	xorlw	0	; case 0
  2838  0650  1903               	skipnz
  2839  0651  2D45               	goto	l2115
  2840  0652  3A01               	xorlw	1	; case 1
  2841  0653  1903               	skipnz
  2842  0654  2D4A               	goto	l2125
  2843  0655  3A03               	xorlw	3	; case 2
  2844  0656  1903               	skipnz
  2845  0657  2DC7               	goto	l2171
  2846  0658  2E44               	goto	l2217
  2847  0659                     l135:
  2848  0659  0008               	return
  2849  065A                     __end_of_dynam:
  2850                           
  2851                           	psect	text9
  2852  02FB                     __ptext9:	
  2853 ;; *************** function _jikan *****************
  2854 ;; Defined at:
  2855 ;;		line 406 in file "Q3.c"
  2856 ;; Parameters:    Size  Location     Type
  2857 ;;		None
  2858 ;; Auto vars:     Size  Location     Type
  2859 ;;		None
  2860 ;; Return value:  Size  Location     Type
  2861 ;;                  1    wreg      void 
  2862 ;; Registers used:
  2863 ;;		wreg, status,2
  2864 ;; Tracked objects:
  2865 ;;		On entry : 0/0
  2866 ;;		On exit  : 0/0
  2867 ;;		Unchanged: 0/0
  2868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2873 ;;Total ram usage:        0 bytes
  2874 ;; Hardware stack levels used:    1
  2875 ;; This function calls:
  2876 ;;		Nothing
  2877 ;; This function is called by:
  2878 ;;		_main
  2879 ;; This function uses a non-reentrant model
  2880 ;;
  2881                           
  2882                           
  2883                           ;psect for function _jikan
  2884  02FB                     _jikan:
  2885  02FB                     l2361:	
  2886                           ;incstack = 0
  2887                           ; Regs used in _jikan: [wreg+status,2]
  2888                           
  2889                           
  2890                           ;Q3.c: 408:     if(RA2==0){++count;}
  2891  02FB  0020               	movlb	0	; select bank0
  2892  02FC  190C               	btfsc	12,2	;volatile
  2893  02FD  2AFF               	goto	u2031
  2894  02FE  2B00               	goto	u2030
  2895  02FF                     u2031:
  2896  02FF  2B05               	goto	l2365
  2897  0300                     u2030:
  2898  0300                     l2363:
  2899  0300  3001               	movlw	1
  2900  0301  07AA               	addwf	_count,f
  2901  0302  3000               	movlw	0
  2902  0303  3DAB               	addwfc	_count+1,f
  2903  0304  2B07               	goto	l232
  2904  0305                     l2365:
  2905  0305  01AA               	clrf	_count
  2906  0306  01AB               	clrf	_count+1
  2907  0307                     l232:
  2908  0307  0008               	return
  2909  0308                     __end_of_jikan:
  2910                           
  2911                           	psect	text10
  2912  031B                     __ptext10:	
  2913 ;; *************** function _fclr *****************
  2914 ;; Defined at:
  2915 ;;		line 369 in file "Q3.c"
  2916 ;; Parameters:    Size  Location     Type
  2917 ;;  flg             2    0[COMMON] unsigned short 
  2918 ;; Auto vars:     Size  Location     Type
  2919 ;;		None
  2920 ;; Return value:  Size  Location     Type
  2921 ;;                  1    wreg      void 
  2922 ;; Registers used:
  2923 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2924 ;; Tracked objects:
  2925 ;;		On entry : 0/0
  2926 ;;		On exit  : 0/0
  2927 ;;		Unchanged: 0/0
  2928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2929 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2932 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2933 ;;Total ram usage:        2 bytes
  2934 ;; Hardware stack levels used:    1
  2935 ;; This function calls:
  2936 ;;		Nothing
  2937 ;; This function is called by:
  2938 ;;		_main
  2939 ;;		_kaisu
  2940 ;;		_waitSEGStop
  2941 ;;		_motorStop
  2942 ;;		_buzzStop
  2943 ;; This function uses a non-reentrant model
  2944 ;;
  2945                           
  2946                           
  2947                           ;psect for function _fclr
  2948  031B                     _fclr:
  2949  031B                     l2345:	
  2950                           ;incstack = 0
  2951                           ; Regs used in _fclr: [wreg-fsr0h+status,2+status,0]
  2952                           
  2953                           
  2954                           ;Q3.c: 369: void fclr(unsigned short flg);Q3.c: 370: {;Q3.c: 371:     switch(flg){
  2955  031B  2B2A               	goto	l2355
  2956  031C                     l2347:
  2957                           
  2958                           ;Q3.c: 373:                     flag_R=0;
  2959  031C  0020               	movlb	0	; select bank0
  2960  031D  01BA               	clrf	_flag_R
  2961  031E  01BB               	clrf	_flag_R+1
  2962                           
  2963                           ;Q3.c: 374:                     break;
  2964  031F  2B3A               	goto	l217
  2965  0320                     l2349:
  2966                           
  2967                           ;Q3.c: 376:                     flag_P=0;
  2968  0320  0020               	movlb	0	; select bank0
  2969  0321  01B8               	clrf	_flag_P
  2970  0322  01B9               	clrf	_flag_P+1
  2971                           
  2972                           ;Q3.c: 377:                     break;
  2973  0323  2B3A               	goto	l217
  2974  0324                     l2351:
  2975                           
  2976                           ;Q3.c: 379:                     flag_P=flag_R=0;
  2977  0324  0020               	movlb	0	; select bank0
  2978  0325  01BA               	clrf	_flag_R
  2979  0326  01BB               	clrf	_flag_R+1
  2980  0327  01B8               	clrf	_flag_P
  2981  0328  01B9               	clrf	_flag_P+1
  2982                           
  2983                           ;Q3.c: 380:                     break;
  2984  0329  2B3A               	goto	l217
  2985  032A                     l2355:
  2986                           
  2987                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2988                           ; Switch size 1, requested type "simple"
  2989                           ; Number of cases is 1, Range of values is 0 to 0
  2990                           ; switch strategies available:
  2991                           ; Name         Instructions Cycles
  2992                           ; simple_byte            4     3 (average)
  2993                           ; direct_byte            8     6 (fixed)
  2994                           ; jumptable            260     6 (fixed)
  2995                           ;	Chosen strategy is simple_byte
  2996  032A  0871               	movf	fclr@flg+1,w
  2997  032B  3A00               	xorlw	0	; case 0
  2998  032C  1903               	skipnz
  2999  032D  2B2F               	goto	l3257
  3000  032E  2B3A               	goto	l217
  3001  032F                     l3257:
  3002                           
  3003                           ; Switch size 1, requested type "simple"
  3004                           ; Number of cases is 3, Range of values is 0 to 2
  3005                           ; switch strategies available:
  3006                           ; Name         Instructions Cycles
  3007                           ; simple_byte           10     6 (average)
  3008                           ; direct_byte           12     6 (fixed)
  3009                           ; jumptable            260     6 (fixed)
  3010                           ;	Chosen strategy is simple_byte
  3011  032F  0870               	movf	fclr@flg,w
  3012  0330  3A00               	xorlw	0	; case 0
  3013  0331  1903               	skipnz
  3014  0332  2B1C               	goto	l2347
  3015  0333  3A01               	xorlw	1	; case 1
  3016  0334  1903               	skipnz
  3017  0335  2B20               	goto	l2349
  3018  0336  3A03               	xorlw	3	; case 2
  3019  0337  1903               	skipnz
  3020  0338  2B24               	goto	l2351
  3021  0339  2B3A               	goto	l217
  3022  033A                     l217:
  3023  033A  0008               	return
  3024  033B                     __end_of_fclr:
  3025  007E                     btemp	set	126	;btemp
  3026  007E                     wtemp0	set	126
  3027                           
  3028                           	psect	config
  3029                           
  3030                           ;Config register CONFIG1 @ 0x8007
  3031                           ;	Oscillator Selection
  3032                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  3033                           ;	Watchdog Timer Enable
  3034                           ;	WDTE = OFF, WDT disabled
  3035                           ;	Power-up Timer Enable
  3036                           ;	PWRTE = OFF, PWRT disabled
  3037                           ;	MCLR Pin Function Select
  3038                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  3039                           ;	Flash Program Memory Code Protection
  3040                           ;	CP = OFF, Program memory code protection is disabled
  3041                           ;	Data Memory Code Protection
  3042                           ;	CPD = OFF, Data memory code protection is disabled
  3043                           ;	Brown-out Reset Enable
  3044                           ;	BOREN = OFF, Brown-out Reset disabled
  3045                           ;	Clock Out Enable
  3046                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  3047                           ;	Internal/External Switchover
  3048                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3049                           ;	Fail-Safe Clock Monitor Enable
  3050                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3051  8007                     	org	32775
  3052  8007  09E4               	dw	2532
  3053                           
  3054                           ;Config register CONFIG2 @ 0x8008
  3055                           ;	Flash Memory Self-Write Protection
  3056                           ;	WRT = OFF, Write protection off
  3057                           ;	Voltage Regulator Capacitor Enable
  3058                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
  3059                           ;	PLL Enable
  3060                           ;	PLLEN = OFF, 4x PLL disabled
  3061                           ;	Stack Overflow/Underflow Reset Enable
  3062                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  3063                           ;	Brown-out Reset Voltage Selection
  3064                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  3065                           ;	Low-Voltage Programming Enable
  3066                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  3067  8008                     	org	32776
  3068  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    0
    Data        156
    BSS         34
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      13
    BANK0            80     42      78
    BANK1            80      0      80
    BANK2            80      0      72
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_motor
    _main->_tact
    _main->_waitSEG
    _waitSEG->___lwdiv
    _waitSEG->_dynam
    _tact->_tactsw
    _motor->_dynam

Critical Paths under _main in BANK0

    _main->_motor
    _waitSEG->_dynam
    _motor->_dynam

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                25    25      0   16026
                                             10 COMMON     1     1      0
                                             18 BANK0     24    24      0
                              _dynam
                               _fclr
                              _jikan
                              _motor
                           _portinit
                               _tact
                            _waitSEG
                             _zenoff
 ---------------------------------------------------------------------------------
 (1) _zenoff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _waitSEG                                              8     2      6    4848
                                              8 COMMON     2     2      0
                                              8 BANK0      6     0      6
                            ___lwdiv
                              _dynam
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     466
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _tact                                                 2     0      2     898
                                              8 COMMON     2     0      2
                             _tactsw
 ---------------------------------------------------------------------------------
 (2) _tactsw                                               8     8      0     116
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 (1) _portinit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motor                                               12     2     10    4707
                                              8 COMMON     2     2      0
                                              8 BANK0     10     0     10
                              _dynam
 ---------------------------------------------------------------------------------
 (2) _dynam                                               16     8      8    3791
                                              0 COMMON     8     0      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (1) _jikan                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _fclr                                                 2     0      2    1770
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _dynam
   _fclr
   _jikan
   _motor
     _dynam
   _portinit
   _tact
     _tactsw
   _waitSEG
     ___lwdiv
     _dynam
   _zenoff

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      B       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2A      4E       5       97.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      48       9       90.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      F3      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      F3      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Jun 05 12:43:53 2021

                     l95 031A                       _cw 0034                      l112 050C  
                    l114 051C                      l123 0552                      l116 0532  
                    l108 02FA                      l118 0542                      l135 0659  
                    l232 0307                      l208 049F                      l217 033A  
                    l129 05CF                      l344 0663                      l193 040B  
                    l274 035E                      l258 0392                      l346 0670  
                    l349 072A                      l797 03CE                      _RA0 0060  
                    _RA1 0061                      _RA2 0062                      _RC0 0070  
                    _RC1 0071                      _RC2 0072                      _RC5 0075  
                    _RC6 0076                      _RC7 0077                      _ccw 0032  
                    _flg 0036                      wreg 0009                     l2101 0522  
                   l2111 053D                     l2103 0529                     l2201 0631  
                   l2121 0547                     l2105 052E                     l2203 0637  
                   l2131 055A                     l2123 0548                     l2115 0545  
                   l2107 0536                     l3011 0663                     l2205 0639  
                   l2133 0560                     l2141 0570                     l2125 054A  
                   l2117 0546                     l2221 0649                     l2301 02F2  
                   l3021 066C                     l3013 0663                     l3005 065A  
                   l2207 063D                     l2151 059B                     l2143 0576  
                   l2135 0564                     l2127 0550                     l2119 0546  
                   l2071 04F0                     l2231 03DF                     l2311 0454  
                   l2303 02F6                     l3031 0688                     l3023 0681  
                   l3015 0663                     l3007 065D                     l2217 0644  
                   l2209 063D                     l2161 05C0                     l2153 05AD  
                   l2145 057C                     l2137 0566                     l2129 0554  
                   l2081 04FC                     l2073 04F7                     l2233 03E9  
                   l2321 0467                     l2313 0455                     l2305 02F7  
                   l3041 068D                     l3033 0688                     l3025 0688  
                   l3017 0663                     l3009 0663                     l2171 05C7  
                   l2163 05C0                     l2155 05B4                     l2147 058E  
                   l2139 056A                     l2091 0517                     l2083 0503  
                   l2075 04F8                     l2243 0406                     l2235 03EE  
                   l2227 03CF                     l2331 0481                     l2323 046D  
                   l2315 0458                     l2251 039E                     l2411 0374  
                   l2307 02F8                     l3051 06E4                     l3043 0691  
                   l3035 0688                     l3027 0688                     l3019 0668  
                   l2181 05E1                     l2173 05CD                     l2157 05BA  
                   l2149 0595                     l2085 0508                     l2077 04FA  
                   l2421 033B                     l2237 03F0                     l2229 03D3  
                   l2333 0487                     l2325 0473                     l2317 045E  
                   l2261 03BE                     l2253 03A3                     l2245 0393  
                   l2309 02F9                     l3061 0707                     l3053 06E9  
                   l3045 06A8                     l3037 0688                     l3029 0688  
                   l2351 0324                     l2191 05F9                     l2183 05E3  
                   l2175 05D1                     l2159 05BC                     l2095 051E  
                   l2087 0510                     l2079 04FB                     l2423 0340  
                   l2271 0308                     l2239 03F9                     l2327 0476  
                   l2319 0464                     l2263 03BF                     l2255 03A7  
                   l2247 0395                     l2415 037B                     l2407 035F  
                   l3071 0733                     l3063 0718                     l3055 06ED  
                   l3047 06AE                     l3039 0688                     l2345 031B  
                   l2361 02FB                     l2193 060B                     l2185 05E7  
                   l2177 05D7                     l2097 0520                     l2273 030B  
                   l2329 047C                     l2265 03C4                     l2257 03AB  
                   l2249 039B                     l2417 038D                     l2409 0370  
                   l3081 078C                     l3073 074B                     l3065 071B  
                   l3057 06FE                     l3049 06B5                     l2347 031C  
                   l2355 032A                     l2363 0300                     l2195 0612  
                   l2179 05DD                     l2187 05ED                     l2099 0521  
                   l2427 0345                     l2275 030E                     l2339 048F  
                   l2259 03BA                     l2267 03CA                     l3091 07BB  
                   l3083 0790                     l3075 0751                     l3059 0703  
                   l2349 0320                     l2365 0305                     l2197 0618  
                   l2189 05F3                     l2429 0359                     l2277 0315  
                   l3253 0494                     l3093 07BE                     l3085 07A1  
                   l3077 0758                     l3069 072F                     l3255 064E  
                   l2199 062A                     l2279 0318                     l3087 07A6  
                   l3079 0787                     l3257 032F                     l3089 07AA  
                   u2000 047C                     u2001 047B                     u2010 0487  
                   u2011 0486                     u2020 048E                     u2021 048D  
                   u2030 0300                     u2031 02FF                     u3110 068D  
                   u3111 068C                     u2080 037A                     u3200 072F  
                   u3120 0691                     u3104 0681                     u2081 0379  
                   u3201 072E                     u3121 0690                     u2090 0344  
                   u3210 0733                     u3130 06AE                     u3050 0668  
                   u2091 0343                     u3211 0732                     u3131 06AD  
                   u3051 0667                     u1700 055A                     u3220 0751  
                   u3140 06B5                     u3060 066C                     u1701 0559  
                   u3221 0750                     u3141 06B4                     u3061 066B  
                   u1710 0560                     u3230 0758                     u3150 06E9  
                   u3070 0670                     u1711 055F                     u3231 0757  
                   u3151 06E8                     u3071 066F                     u1800 05DD  
                   u1720 0576                     u3240 078C                     u3160 06ED  
                   u3080 0677                     u1801 05DC                     u1721 0575  
                   u3241 078B                     u3161 06EC                     u3081 0674  
                   u1810 05F3                     u1730 057C                     u1650 0503  
                   u3250 0790                     u3170 0703                     u3090 067F  
                   u1811 05F2                     u1731 057B                     u1651 0502  
                   u3251 078F                     u3171 0702                     u3091 067C  
                   u1820 05F9                     u1740 0595                     u1660 0516  
                   u3260 07A6                     u3180 0707                     u1821 05F8  
                   u1741 0594                     u1661 0515                     u3261 07A5  
                   u3181 0706                     u1830 0612                     u1750 059B  
                   u1670 0529                     u1910 03AB                     u3270 07AA  
                   u3190 0729                     u3094 0679                     u1831 0611  
                   u1751 059A                     u1671 0528                     u1911 03AA  
                   u3271 07A9                     u3191 0728                     u1840 0618  
                   u1760 05B4                     u1680 053C                     u3280 07CC  
                   u1841 0617                     u1761 05B3                     u1681 053B  
                   u1905 039F                     u3281 07CB                     u1850 0631  
                   u1770 05BA                     u1690 0550                     u1930 03BA  
                   u1851 0630                     u1771 05B9                     u1691 054F  
                   u1931 03B9                     u3195 0725                     u1860 0637  
                   u1780 05CD                     u1861 0636                     u1781 05CC  
                   u1925 03AC                     u3285 07C8                     u1790 05D7  
                   u1870 03E9                     u1950 03CA                     u1791 05D6  
                   u1871 03E8                     u1951 03C9                     u1935 03B6  
                   u1880 03F9                     u1881 03F8                     u1945 03C0  
                   u1890 039B                     u1875 03E5                     u1891 039A  
                   u1980 045E                     u1981 045D                     u1990 046D  
                   u1991 046C                     _atai 002C                     _fclr 031B  
                   _main 065A                     _num0 0154                     _kisu 00D8  
                   _moja 00CC                     _samf 0120                     _mojf 00C0  
                   _tact 0454                     _mojh 0052                     _moji 0140  
                   _mojn 00EC                     _samp 00A0                     _gusu 00E2  
                   fsr0h 0005                     fsr1h 0007                     indf0 0000  
                   fsr0l 0004                     fsr1l 0006                     btemp 007E  
                   start 0002                    ?_fclr 0070                    ?_main 0070  
                  ?_tact 0078          __end_of___lwdiv 03CF                    _PORTA 000C  
                  _PORTB 000D                    _PORTC 000E                    _TRISA 008C  
                  _TRISB 008D                    _TRISC 008E                    _code1 0022  
                  _atai1 002E                    _jikan 02FB                    _count 002A  
                  _dynam 04F0                    _fugou 0020                    _motor 033B  
        __end_of_waitSEG 0393                    status 0003                    wtemp0 007E  
        __initialization 07CF             __end_of_fclr 033B             __end_of_main 07CF  
           __end_of_tact 04A0                   ??_fclr 0072                   ??_main 007A  
                 ??_tact 007A                   ?_jikan 0070                   ?_dynam 0070  
                 ?_motor 0048                   _ANSELA 018C                   _ANSELB 018D  
                 _OSCCON 0099              dynam@smdata 0074                   _code10 0024  
                 _atai10 0030                   _flag_P 0038                   _flag_R 003A  
              ??___lwdiv 0074                   _tactsw 03CF                   _zenoff 02F2  
                 dynam@j 0044                ??_waitSEG 0078                   motor@i 0078  
       __end_of_portinit 031B  __end_of__initialization 07FD           __pcstackCOMMON 0070  
           __pidataBANK0 02E2             __pidataBANK1 04A0             __pidataBANK2 040C  
          __end_of_jikan 0308            __end_of_dynam 065A            __end_of_motor 035F  
                ??_jikan 0070                  ??_dynam 0078                  ??_motor 0078  
             __pbssBANK0 0020               __pmaintext 065A                  ?_tactsw 0070  
                ?_zenoff 0070              waitSEG@seg1 0048              waitSEG@seg2 004A  
              ?_portinit 0070                  ___lwdiv 0393                  _code100 0026  
        __size_of_tactsw 003D                  __ptext1 02F2                  __ptext2 035F  
                __ptext3 0393                  __ptext4 0454                  __ptext5 03CF  
                __ptext6 0308                  __ptext7 033B                  __ptext8 04F0  
                __ptext9 02FB          __size_of_zenoff 0009                  fclr@flg 0070  
                _waitSEG 035F              motor@kakudo 0048                  clrloop0 02E7  
   end_of_initialization 07FD              motor@smdata 004E                  dynam@tm 0042  
                dynam@tr 0076                  init_ram 02EC                  initloop 02ED  
                tactsw@a 0076                  tactsw@b 0072                  tactsw@c 0074  
                motor@tr 0050               ??_portinit 0070           __end_of_tactsw 040C  
         __end_of_zenoff 02FB      start_initialization 07CF              __pdataBANK0 0052  
            __pdataBANK1 00A0              __pdataBANK2 0120                 ??_tactsw 0070  
               ??_zenoff 0070              __pbssCOMMON 007B                ___latbits 0003  
          __pcstackBANK0 0040         ___lwdiv@dividend 0072                 ?___lwdiv 0070  
      __size_of_portinit 0013                 ?_waitSEG 0048         ___lwdiv@quotient 0075  
         __size_of_jikan 000D           __size_of_dynam 016A           __size_of_motor 0024  
          dynam@dig1data 0070            dynam@dig2data 0072                clear_ram0 02E6  
          motor@dig1data 004A            motor@dig2data 004C         __size_of___lwdiv 003C  
               _code1000 0028          ___lwdiv@divisor 0070          ___lwdiv@counter 0077  
       __size_of_waitSEG 0034                 __ptext10 031B                 _flag_sw1 003E  
               _flag_sw2 003C                 _flag_sw3 007B                waitSEG@wt 004C  
          __size_of_fclr 0020            __size_of_main 0175            __size_of_tact 004C  
               _portinit 0308                 dynam@ext 0046                 dynam@smd 0040  
               tact@mode 0078                 waitSEG@i 0078  
