

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Jun 01 17:15:21 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F1938
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.20
    31                           ; Generated 12/02/2020 GMT
    32                           ; 
    33                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F1938 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  0010                     	;# 
    80  0011                     	;# 
    81  0012                     	;# 
    82  0013                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  010C                     	;# 
   113  010D                     	;# 
   114  010E                     	;# 
   115  0110                     	;# 
   116  0111                     	;# 
   117  0112                     	;# 
   118  0113                     	;# 
   119  0114                     	;# 
   120  0115                     	;# 
   121  0116                     	;# 
   122  0117                     	;# 
   123  0118                     	;# 
   124  0119                     	;# 
   125  011A                     	;# 
   126  011B                     	;# 
   127  011D                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0191                     	;# 
   131  0191                     	;# 
   132  0192                     	;# 
   133  0193                     	;# 
   134  0193                     	;# 
   135  0193                     	;# 
   136  0194                     	;# 
   137  0195                     	;# 
   138  0196                     	;# 
   139  0199                     	;# 
   140  019A                     	;# 
   141  019B                     	;# 
   142  019B                     	;# 
   143  019B                     	;# 
   144  019B                     	;# 
   145  019C                     	;# 
   146  019C                     	;# 
   147  019D                     	;# 
   148  019E                     	;# 
   149  019F                     	;# 
   150  020D                     	;# 
   151  0210                     	;# 
   152  0211                     	;# 
   153  0212                     	;# 
   154  0213                     	;# 
   155  0214                     	;# 
   156  0215                     	;# 
   157  0215                     	;# 
   158  0216                     	;# 
   159  0217                     	;# 
   160  0291                     	;# 
   161  0291                     	;# 
   162  0292                     	;# 
   163  0293                     	;# 
   164  0294                     	;# 
   165  0295                     	;# 
   166  0295                     	;# 
   167  0296                     	;# 
   168  0298                     	;# 
   169  0298                     	;# 
   170  0299                     	;# 
   171  029A                     	;# 
   172  029B                     	;# 
   173  029C                     	;# 
   174  029C                     	;# 
   175  029D                     	;# 
   176  029E                     	;# 
   177  029F                     	;# 
   178  0311                     	;# 
   179  0311                     	;# 
   180  0312                     	;# 
   181  0313                     	;# 
   182  0314                     	;# 
   183  0315                     	;# 
   184  0315                     	;# 
   185  0316                     	;# 
   186  0318                     	;# 
   187  0318                     	;# 
   188  0319                     	;# 
   189  031A                     	;# 
   190  031C                     	;# 
   191  031C                     	;# 
   192  031D                     	;# 
   193  031E                     	;# 
   194  0394                     	;# 
   195  0395                     	;# 
   196  0396                     	;# 
   197  0415                     	;# 
   198  0416                     	;# 
   199  0417                     	;# 
   200  041C                     	;# 
   201  041D                     	;# 
   202  041E                     	;# 
   203  0791                     	;# 
   204  0792                     	;# 
   205  0793                     	;# 
   206  0794                     	;# 
   207  0795                     	;# 
   208  0798                     	;# 
   209  0799                     	;# 
   210  07A0                     	;# 
   211  07A1                     	;# 
   212  07A3                     	;# 
   213  07A4                     	;# 
   214  07A6                     	;# 
   215  07A7                     	;# 
   216  07A9                     	;# 
   217  07AA                     	;# 
   218  0FE4                     	;# 
   219  0FE5                     	;# 
   220  0FE6                     	;# 
   221  0FE7                     	;# 
   222  0FE8                     	;# 
   223  0FE9                     	;# 
   224  0FEA                     	;# 
   225  0FEB                     	;# 
   226  0FED                     	;# 
   227  0FEE                     	;# 
   228  0FEF                     	;# 
   229  0000                     	;# 
   230  0001                     	;# 
   231  0002                     	;# 
   232  0003                     	;# 
   233  0004                     	;# 
   234  0005                     	;# 
   235  0006                     	;# 
   236  0007                     	;# 
   237  0008                     	;# 
   238  0009                     	;# 
   239  000A                     	;# 
   240  000B                     	;# 
   241  000C                     	;# 
   242  000D                     	;# 
   243  000E                     	;# 
   244  0010                     	;# 
   245  0011                     	;# 
   246  0012                     	;# 
   247  0013                     	;# 
   248  0015                     	;# 
   249  0016                     	;# 
   250  0016                     	;# 
   251  0017                     	;# 
   252  0018                     	;# 
   253  0019                     	;# 
   254  001A                     	;# 
   255  001B                     	;# 
   256  001C                     	;# 
   257  001E                     	;# 
   258  001F                     	;# 
   259  008C                     	;# 
   260  008D                     	;# 
   261  008E                     	;# 
   262  0090                     	;# 
   263  0091                     	;# 
   264  0092                     	;# 
   265  0093                     	;# 
   266  0095                     	;# 
   267  0096                     	;# 
   268  0097                     	;# 
   269  0098                     	;# 
   270  0099                     	;# 
   271  009A                     	;# 
   272  009B                     	;# 
   273  009B                     	;# 
   274  009C                     	;# 
   275  009D                     	;# 
   276  009E                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  0110                     	;# 
   281  0111                     	;# 
   282  0112                     	;# 
   283  0113                     	;# 
   284  0114                     	;# 
   285  0115                     	;# 
   286  0116                     	;# 
   287  0117                     	;# 
   288  0118                     	;# 
   289  0119                     	;# 
   290  011A                     	;# 
   291  011B                     	;# 
   292  011D                     	;# 
   293  018C                     	;# 
   294  018D                     	;# 
   295  0191                     	;# 
   296  0191                     	;# 
   297  0192                     	;# 
   298  0193                     	;# 
   299  0193                     	;# 
   300  0193                     	;# 
   301  0194                     	;# 
   302  0195                     	;# 
   303  0196                     	;# 
   304  0199                     	;# 
   305  019A                     	;# 
   306  019B                     	;# 
   307  019B                     	;# 
   308  019B                     	;# 
   309  019B                     	;# 
   310  019C                     	;# 
   311  019C                     	;# 
   312  019D                     	;# 
   313  019E                     	;# 
   314  019F                     	;# 
   315  020D                     	;# 
   316  0210                     	;# 
   317  0211                     	;# 
   318  0212                     	;# 
   319  0213                     	;# 
   320  0214                     	;# 
   321  0215                     	;# 
   322  0215                     	;# 
   323  0216                     	;# 
   324  0217                     	;# 
   325  0291                     	;# 
   326  0291                     	;# 
   327  0292                     	;# 
   328  0293                     	;# 
   329  0294                     	;# 
   330  0295                     	;# 
   331  0295                     	;# 
   332  0296                     	;# 
   333  0298                     	;# 
   334  0298                     	;# 
   335  0299                     	;# 
   336  029A                     	;# 
   337  029B                     	;# 
   338  029C                     	;# 
   339  029C                     	;# 
   340  029D                     	;# 
   341  029E                     	;# 
   342  029F                     	;# 
   343  0311                     	;# 
   344  0311                     	;# 
   345  0312                     	;# 
   346  0313                     	;# 
   347  0314                     	;# 
   348  0315                     	;# 
   349  0315                     	;# 
   350  0316                     	;# 
   351  0318                     	;# 
   352  0318                     	;# 
   353  0319                     	;# 
   354  031A                     	;# 
   355  031C                     	;# 
   356  031C                     	;# 
   357  031D                     	;# 
   358  031E                     	;# 
   359  0394                     	;# 
   360  0395                     	;# 
   361  0396                     	;# 
   362  0415                     	;# 
   363  0416                     	;# 
   364  0417                     	;# 
   365  041C                     	;# 
   366  041D                     	;# 
   367  041E                     	;# 
   368  0791                     	;# 
   369  0792                     	;# 
   370  0793                     	;# 
   371  0794                     	;# 
   372  0795                     	;# 
   373  0798                     	;# 
   374  0799                     	;# 
   375  07A0                     	;# 
   376  07A1                     	;# 
   377  07A3                     	;# 
   378  07A4                     	;# 
   379  07A6                     	;# 
   380  07A7                     	;# 
   381  07A9                     	;# 
   382  07AA                     	;# 
   383  0FE4                     	;# 
   384  0FE5                     	;# 
   385  0FE6                     	;# 
   386  0FE7                     	;# 
   387  0FE8                     	;# 
   388  0FE9                     	;# 
   389  0FEA                     	;# 
   390  0FEB                     	;# 
   391  0FED                     	;# 
   392  0FEE                     	;# 
   393  0FEF                     	;# 
   394                           
   395                           	psect	idataBANK0
   396  0366                     __pidataBANK0:
   397                           
   398                           ;initializer for _mojn
   399  0366  3454               	retlw	84
   400  0367  3400               	retlw	0
   401  0368  3473               	retlw	115
   402  0369  3400               	retlw	0
   403                           
   404                           ;initializer for _mojh
   405  036A  3476               	retlw	118
   406  036B  3400               	retlw	0
   407  036C  3438               	retlw	56
   408  036D  3400               	retlw	0
   409                           
   410                           	psect	idataBANK1
   411  050B                     __pidataBANK1:
   412                           
   413                           ;initializer for _samp
   414  050B  343F               	retlw	63
   415  050C  3400               	retlw	0
   416  050D  3406               	retlw	6
   417  050E  3400               	retlw	0
   418  050F  345B               	retlw	91
   419  0510  3400               	retlw	0
   420  0511  344F               	retlw	79
   421  0512  3400               	retlw	0
   422  0513  3466               	retlw	102
   423  0514  3400               	retlw	0
   424  0515  346D               	retlw	109
   425  0516  3400               	retlw	0
   426  0517  347D               	retlw	125
   427  0518  3400               	retlw	0
   428  0519  3427               	retlw	39
   429  051A  3400               	retlw	0
   430  051B  347F               	retlw	127
   431  051C  3400               	retlw	0
   432  051D  346F               	retlw	111
   433  051E  3400               	retlw	0
   434  051F  345F               	retlw	95
   435  0520  3400               	retlw	0
   436  0521  347C               	retlw	124
   437  0522  3400               	retlw	0
   438  0523  3458               	retlw	88
   439  0524  3400               	retlw	0
   440  0525  345E               	retlw	94
   441  0526  3400               	retlw	0
   442  0527  3479               	retlw	121
   443  0528  3400               	retlw	0
   444  0529  3471               	retlw	113
   445  052A  3400               	retlw	0
   446                           
   447                           ;initializer for _mojf
   448  052B  3471               	retlw	113
   449  052C  3400               	retlw	0
   450  052D  3479               	retlw	121
   451  052E  3400               	retlw	0
   452  052F  345E               	retlw	94
   453  0530  3400               	retlw	0
   454  0531  3458               	retlw	88
   455  0532  3400               	retlw	0
   456  0533  347C               	retlw	124
   457  0534  3400               	retlw	0
   458  0535  345F               	retlw	95
   459  0536  3400               	retlw	0
   460                           
   461                           ;initializer for _moja
   462  0537  345F               	retlw	95
   463  0538  3400               	retlw	0
   464  0539  347C               	retlw	124
   465  053A  3400               	retlw	0
   466  053B  3458               	retlw	88
   467  053C  3400               	retlw	0
   468  053D  345E               	retlw	94
   469  053E  3400               	retlw	0
   470  053F  3479               	retlw	121
   471  0540  3400               	retlw	0
   472  0541  3471               	retlw	113
   473  0542  3400               	retlw	0
   474                           
   475                           ;initializer for _kisu
   476  0543  3406               	retlw	6
   477  0544  3400               	retlw	0
   478  0545  344F               	retlw	79
   479  0546  3400               	retlw	0
   480  0547  346D               	retlw	109
   481  0548  3400               	retlw	0
   482  0549  3427               	retlw	39
   483  054A  3400               	retlw	0
   484  054B  346F               	retlw	111
   485  054C  3400               	retlw	0
   486                           
   487                           ;initializer for _gusu
   488  054D  343F               	retlw	63
   489  054E  3400               	retlw	0
   490  054F  345B               	retlw	91
   491  0550  3400               	retlw	0
   492  0551  3466               	retlw	102
   493  0552  3400               	retlw	0
   494  0553  347D               	retlw	125
   495  0554  3400               	retlw	0
   496  0555  347F               	retlw	127
   497  0556  3400               	retlw	0
   498                           
   499                           	psect	idataBANK2
   500  047A                     __pidataBANK2:
   501                           
   502                           ;initializer for _samf
   503  047A  3471               	retlw	113
   504  047B  3400               	retlw	0
   505  047C  3479               	retlw	121
   506  047D  3400               	retlw	0
   507  047E  345E               	retlw	94
   508  047F  3400               	retlw	0
   509  0480  3458               	retlw	88
   510  0481  3400               	retlw	0
   511  0482  347C               	retlw	124
   512  0483  3400               	retlw	0
   513  0484  345F               	retlw	95
   514  0485  3400               	retlw	0
   515  0486  346F               	retlw	111
   516  0487  3400               	retlw	0
   517  0488  347F               	retlw	127
   518  0489  3400               	retlw	0
   519  048A  3427               	retlw	39
   520  048B  3400               	retlw	0
   521  048C  347D               	retlw	125
   522  048D  3400               	retlw	0
   523  048E  346D               	retlw	109
   524  048F  3400               	retlw	0
   525  0490  3466               	retlw	102
   526  0491  3400               	retlw	0
   527  0492  344F               	retlw	79
   528  0493  3400               	retlw	0
   529  0494  345B               	retlw	91
   530  0495  3400               	retlw	0
   531  0496  3406               	retlw	6
   532  0497  3400               	retlw	0
   533  0498  343F               	retlw	63
   534  0499  3400               	retlw	0
   535                           
   536                           ;initializer for _moji
   537  049A  345F               	retlw	95
   538  049B  3400               	retlw	0
   539  049C  347C               	retlw	124
   540  049D  3400               	retlw	0
   541  049E  3458               	retlw	88
   542  049F  3400               	retlw	0
   543  04A0  345E               	retlw	94
   544  04A1  3400               	retlw	0
   545  04A2  3479               	retlw	121
   546  04A3  3400               	retlw	0
   547  04A4  3471               	retlw	113
   548  04A5  3400               	retlw	0
   549  04A6  3476               	retlw	118
   550  04A7  3400               	retlw	0
   551  04A8  3438               	retlw	56
   552  04A9  3400               	retlw	0
   553  04AA  3454               	retlw	84
   554  04AB  3400               	retlw	0
   555  04AC  3473               	retlw	115
   556  04AD  3400               	retlw	0
   557                           
   558                           ;initializer for _num0
   559  04AE  343F               	retlw	63
   560  04AF  3400               	retlw	0
   561  04B0  3406               	retlw	6
   562  04B1  3400               	retlw	0
   563  04B2  345B               	retlw	91
   564  04B3  3400               	retlw	0
   565  04B4  344F               	retlw	79
   566  04B5  3400               	retlw	0
   567  04B6  3466               	retlw	102
   568  04B7  3400               	retlw	0
   569  04B8  346D               	retlw	109
   570  04B9  3400               	retlw	0
   571  04BA  347D               	retlw	125
   572  04BB  3400               	retlw	0
   573  04BC  3427               	retlw	39
   574  04BD  3400               	retlw	0
   575  04BE  347F               	retlw	127
   576  04BF  3400               	retlw	0
   577  04C0  346F               	retlw	111
   578  04C1  3400               	retlw	0
   579  000E                     _PORTC	set	14
   580  000D                     _PORTB	set	13
   581  000C                     _PORTA	set	12
   582  0061                     _RA1	set	97
   583  0060                     _RA0	set	96
   584  0062                     _RA2	set	98
   585  0077                     _RC7	set	119
   586  0070                     _RC0	set	112
   587  0071                     _RC1	set	113
   588  0072                     _RC2	set	114
   589  0076                     _RC6	set	118
   590  0075                     _RC5	set	117
   591  0099                     _OSCCON	set	153
   592  008E                     _TRISC	set	142
   593  008D                     _TRISB	set	141
   594  008C                     _TRISA	set	140
   595  018D                     _ANSELB	set	397
   596  018C                     _ANSELA	set	396
   597                           
   598                           	psect	cinit
   599  07CD                     start_initialization:	
   600                           ; #config settings
   601                           
   602  07CD                     __initialization:
   603                           
   604                           ; Initialize objects allocated to BANK0
   605  07CD  3066               	movlw	low __pidataBANK0
   606  07CE  0084               	movwf	4
   607  07CF  3083               	movlw	(high __pidataBANK0)| (0+128)
   608  07D0  0085               	movwf	5
   609  07D1  3050               	movlw	low __pdataBANK0
   610  07D2  0086               	movwf	6
   611  07D3  3000               	movlw	high __pdataBANK0
   612  07D4  0087               	movwf	7
   613  07D5  3008               	movlw	8
   614  07D6  3183  2360  3187   	fcall	init_ram
   615                           
   616                           ; Initialize objects allocated to BANK1
   617  07D9  300B               	movlw	low __pidataBANK1
   618  07DA  0084               	movwf	4
   619  07DB  3085               	movlw	(high __pidataBANK1)| (0+128)
   620  07DC  0085               	movwf	5
   621  07DD  30A0               	movlw	low __pdataBANK1
   622  07DE  0086               	movwf	6
   623  07DF  3000               	movlw	high __pdataBANK1
   624  07E0  0087               	movwf	7
   625  07E1  304C               	movlw	76
   626  07E2  3183  2360  3187   	fcall	init_ram
   627                           
   628                           ; Initialize objects allocated to BANK2
   629  07E5  307A               	movlw	low __pidataBANK2
   630  07E6  0084               	movwf	4
   631  07E7  3084               	movlw	(high __pidataBANK2)| (0+128)
   632  07E8  0085               	movwf	5
   633  07E9  3020               	movlw	low __pdataBANK2
   634  07EA  0086               	movwf	6
   635  07EB  3001               	movlw	high __pdataBANK2
   636  07EC  0087               	movwf	7
   637  07ED  3048               	movlw	72
   638  07EE  3183  2360  3187   	fcall	init_ram
   639                           
   640                           ; Clear objects allocated to COMMON
   641  07F1  01FA               	clrf	__pbssCOMMON& (0+127)
   642  07F2  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   643  07F3  01FC               	clrf	(__pbssCOMMON+2)& (0+127)
   644  07F4  01FD               	clrf	(__pbssCOMMON+3)& (0+127)
   645                           
   646                           ; Clear objects allocated to BANK0
   647  07F5  3020               	movlw	low __pbssBANK0
   648  07F6  0084               	movwf	4
   649  07F7  3000               	movlw	high __pbssBANK0
   650  07F8  0085               	movwf	5
   651  07F9  301E               	movlw	30
   652  07FA  3183  235A  3187   	fcall	clear_ram0
   653  07FD                     end_of_initialization:	
   654                           ;End of C runtime variable initialization code
   655                           
   656  07FD                     __end_of__initialization:
   657  07FD  0020               	movlb	0
   658  07FE  3185  2D57         	ljmp	_main	;jump to C main() function
   659                           
   660                           	psect	bssCOMMON
   661  007A                     __pbssCOMMON:
   662  007A                     _flag_R:
   663  007A                     	ds	2
   664  007C                     _flag_sw3:
   665  007C                     	ds	2
   666                           
   667                           	psect	bssBANK0
   668  0020                     __pbssBANK0:
   669  0020                     _fugou:
   670  0020                     	ds	2
   671  0022                     _code1:
   672  0022                     	ds	2
   673  0024                     _code10:
   674  0024                     	ds	2
   675  0026                     _code100:
   676  0026                     	ds	2
   677  0028                     _code1000:
   678  0028                     	ds	2
   679  002A                     _count:
   680  002A                     	ds	2
   681  002C                     _atai:
   682  002C                     	ds	2
   683  002E                     _atai1:
   684  002E                     	ds	2
   685  0030                     _atai10:
   686  0030                     	ds	2
   687  0032                     _ccw:
   688  0032                     	ds	2
   689  0034                     _cw:
   690  0034                     	ds	2
   691  0036                     _flg:
   692  0036                     	ds	2
   693  0038                     _flag_P:
   694  0038                     	ds	2
   695  003A                     _flag_sw2:
   696  003A                     	ds	2
   697  003C                     _flag_sw1:
   698  003C                     	ds	2
   699                           
   700                           	psect	dataBANK0
   701  0050                     __pdataBANK0:
   702  0050                     _mojn:
   703  0050                     	ds	4
   704  0054                     _mojh:
   705  0054                     	ds	4
   706                           
   707                           	psect	dataBANK1
   708  00A0                     __pdataBANK1:
   709  00A0                     _samp:
   710  00A0                     	ds	32
   711  00C0                     _mojf:
   712  00C0                     	ds	12
   713  00CC                     _moja:
   714  00CC                     	ds	12
   715  00D8                     _kisu:
   716  00D8                     	ds	10
   717  00E2                     _gusu:
   718  00E2                     	ds	10
   719                           
   720                           	psect	dataBANK2
   721  0120                     __pdataBANK2:
   722  0120                     _samf:
   723  0120                     	ds	32
   724  0140                     _moji:
   725  0140                     	ds	20
   726  0154                     _num0:
   727  0154                     	ds	20
   728                           
   729                           	psect	inittext
   730  0360                     init_ram:
   731  0360  00FE               	movwf	btemp
   732  0361                     initloop:
   733  0361  0012               	moviw fsr0++
   734  0362  001E               	movwi fsr1++
   735  0363  0BFE               	decfsz	btemp,f
   736  0364  2B61               	goto	initloop
   737  0365  3400               	retlw	0
   738                           
   739                           	psect	clrtext
   740  035A                     clear_ram0:	
   741                           ;	Called with FSR0 containing the base address, and
   742                           ;	WREG with the size to clear
   743                           
   744  035A  0064               	clrwdt	;clear the watchdog before getting into this loop
   745  035B                     clrloop0:
   746  035B  0180               	clrf	0	;clear RAM location pointed to by FSR
   747  035C  3101               	addfsr 0,1
   748  035D  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   749  035E  2B5B               	goto	clrloop0	;have we reached the end yet?
   750  035F  3400               	retlw	0	;all done for this memory range, return
   751                           
   752                           	psect	cstackCOMMON
   753  0070                     __pcstackCOMMON:
   754  0070                     ?_portinit:
   755  0070                     ??_portinit:	
   756                           ; 1 bytes @ 0x0
   757                           
   758  0070                     ?_zenoff:	
   759                           ; 1 bytes @ 0x0
   760                           
   761  0070                     ??_zenoff:	
   762                           ; 1 bytes @ 0x0
   763                           
   764  0070                     ?_dynam:	
   765                           ; 1 bytes @ 0x0
   766                           
   767  0070                     ?_tactsw:	
   768                           ; 1 bytes @ 0x0
   769                           
   770  0070                     ??_tactsw:	
   771                           ; 1 bytes @ 0x0
   772                           
   773  0070                     ?_fclr:	
   774                           ; 1 bytes @ 0x0
   775                           
   776  0070                     ?_main:	
   777                           ; 1 bytes @ 0x0
   778                           
   779  0070                     ?___lwdiv:	
   780                           ; 1 bytes @ 0x0
   781                           
   782  0070                     dynam@dig1data:	
   783                           ; 2 bytes @ 0x0
   784                           
   785  0070                     fclr@flg:	
   786                           ; 2 bytes @ 0x0
   787                           
   788  0070                     ___lwdiv@divisor:	
   789                           ; 2 bytes @ 0x0
   790                           
   791                           
   792                           ; 2 bytes @ 0x0
   793  0070                     	ds	2
   794  0072                     ??_fclr:
   795  0072                     dynam@dig2data:	
   796                           ; 1 bytes @ 0x2
   797                           
   798  0072                     tactsw@b:	
   799                           ; 2 bytes @ 0x2
   800                           
   801  0072                     ___lwdiv@dividend:	
   802                           ; 2 bytes @ 0x2
   803                           
   804                           
   805                           ; 2 bytes @ 0x2
   806  0072                     	ds	2
   807  0074                     ??___lwdiv:
   808  0074                     dynam@smdata:	
   809                           ; 1 bytes @ 0x4
   810                           
   811  0074                     tactsw@c:	
   812                           ; 2 bytes @ 0x4
   813                           
   814                           
   815                           ; 2 bytes @ 0x4
   816  0074                     	ds	1
   817  0075                     ___lwdiv@quotient:
   818                           
   819                           ; 2 bytes @ 0x5
   820  0075                     	ds	1
   821  0076                     dynam@tr:
   822  0076                     tactsw@a:	
   823                           ; 2 bytes @ 0x6
   824                           
   825                           
   826                           ; 2 bytes @ 0x6
   827  0076                     	ds	1
   828  0077                     ___lwdiv@counter:
   829                           
   830                           ; 1 bytes @ 0x7
   831  0077                     	ds	1
   832  0078                     ??_dynam:
   833  0078                     ?_tact:	
   834                           ; 1 bytes @ 0x8
   835                           
   836  0078                     ??_waitSEG:	
   837                           ; 1 bytes @ 0x8
   838                           
   839  0078                     ??_motor:	
   840                           ; 1 bytes @ 0x8
   841                           
   842  0078                     tact@mode:	
   843                           ; 1 bytes @ 0x8
   844                           
   845  0078                     waitSEG@i:	
   846                           ; 2 bytes @ 0x8
   847                           
   848  0078                     motor@i:	
   849                           ; 2 bytes @ 0x8
   850                           
   851                           
   852                           ; 2 bytes @ 0x8
   853  0078                     	ds	2
   854  007A                     ??_tact:
   855  007A                     ??_main:	
   856                           ; 1 bytes @ 0xA
   857                           
   858                           
   859                           	psect	cstackBANK0
   860  003E                     __pcstackBANK0:	
   861                           ; 1 bytes @ 0xA
   862                           
   863  003E                     dynam@smd:
   864                           
   865                           ; 2 bytes @ 0x0
   866  003E                     	ds	2
   867  0040                     dynam@tm:
   868                           
   869                           ; 2 bytes @ 0x2
   870  0040                     	ds	2
   871  0042                     dynam@j:
   872                           
   873                           ; 2 bytes @ 0x4
   874  0042                     	ds	2
   875  0044                     dynam@ext:
   876                           
   877                           ; 2 bytes @ 0x6
   878  0044                     	ds	2
   879  0046                     ?_waitSEG:
   880  0046                     ?_motor:	
   881                           ; 1 bytes @ 0x8
   882                           
   883  0046                     waitSEG@seg1:	
   884                           ; 1 bytes @ 0x8
   885                           
   886  0046                     motor@kakudo:	
   887                           ; 2 bytes @ 0x8
   888                           
   889                           
   890                           ; 2 bytes @ 0x8
   891  0046                     	ds	2
   892  0048                     waitSEG@seg2:
   893  0048                     motor@dig1data:	
   894                           ; 2 bytes @ 0xA
   895                           
   896                           
   897                           ; 2 bytes @ 0xA
   898  0048                     	ds	2
   899  004A                     waitSEG@wt:
   900  004A                     motor@dig2data:	
   901                           ; 2 bytes @ 0xC
   902                           
   903                           
   904                           ; 2 bytes @ 0xC
   905  004A                     	ds	2
   906  004C                     motor@smdata:
   907                           
   908                           ; 2 bytes @ 0xE
   909  004C                     	ds	2
   910  004E                     motor@tr:
   911                           
   912                           ; 2 bytes @ 0x10
   913  004E                     	ds	2
   914                           
   915                           	psect	maintext
   916  0557                     __pmaintext:	
   917 ;;
   918 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   919 ;;
   920 ;; *************** function _main *****************
   921 ;; Defined at:
   922 ;;		line 725 in file "Q3.c"
   923 ;; Parameters:    Size  Location     Type
   924 ;;		None
   925 ;; Auto vars:     Size  Location     Type
   926 ;;  zyoutai         2    0        int 
   927 ;;  ataiR           2    0        int 
   928 ;;  ataiL           2    0        int 
   929 ;;  segR            2    0        unsigned short 
   930 ;;  segL            2    0        unsigned short 
   931 ;;  ans             2    0        int 
   932 ;;  time            2    0        int 
   933 ;;  n               2    0        int 
   934 ;;  m               2    0        int 
   935 ;;  k               2    0        int 
   936 ;;  j               2    0        int 
   937 ;;  i               2    0        int 
   938 ;; Return value:  Size  Location     Type
   939 ;;                  1    wreg      void 
   940 ;; Registers used:
   941 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   942 ;; Tracked objects:
   943 ;;		On entry : B1F/0
   944 ;;		On exit  : 0/0
   945 ;;		Unchanged: 0/0
   946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   948 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
   949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   950 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
   951 ;;Total ram usage:       24 bytes
   952 ;; Hardware stack levels required when called:    2
   953 ;; This function calls:
   954 ;;		_dynam
   955 ;;		_fclr
   956 ;;		_motor
   957 ;;		_portinit
   958 ;;		_tact
   959 ;;		_waitSEG
   960 ;;		_zenoff
   961 ;; This function is called by:
   962 ;;		Startup code after reset
   963 ;; This function uses a non-reentrant model
   964 ;;
   965                           
   966                           
   967                           ;psect for function _main
   968  0557                     _main:
   969  0557                     l2861:	
   970                           ;incstack = 0
   971                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   972                           
   973                           
   974                           ;Q3.c: 728:     OSCCON=0x7A;
   975  0557  307A               	movlw	122
   976  0558  0021               	movlb	1	; select bank1
   977  0559  0099               	movwf	25	;volatile
   978  055A                     l2863:
   979                           
   980                           ;Q3.c: 730:     portinit();
   981  055A  3183  2377  3185   	fcall	_portinit
   982                           
   983                           ;Q3.c: 732:     zenoff();
   984  055D  3183  236E  3185   	fcall	_zenoff
   985  0560                     l2865:
   986  0560                     l2867:
   987  0560                     l2869:
   988  0560                     l2871:
   989  0560                     l2873:
   990  0560                     l344:	
   991                           ;Q3.c: 737:     while((RA0!=1)||(RA1!=1)||(RA2!=1));
   992                           
   993  0560  0020               	movlb	0	; select bank0
   994  0561  1C0C               	btfss	12,0	;volatile
   995  0562  2D64               	goto	u2831
   996  0563  2D65               	goto	u2830
   997  0564                     u2831:
   998  0564  2D60               	goto	l344
   999  0565                     u2830:
  1000  0565                     l2875:
  1001  0565  1C8C               	btfss	12,1	;volatile
  1002  0566  2D68               	goto	u2841
  1003  0567  2D69               	goto	u2840
  1004  0568                     u2841:
  1005  0568  2D60               	goto	l344
  1006  0569                     u2840:
  1007  0569                     l2877:
  1008  0569  1D0C               	btfss	12,2	;volatile
  1009  056A  2D6C               	goto	u2851
  1010  056B  2D6D               	goto	u2850
  1011  056C                     u2851:
  1012  056C  2D60               	goto	l344
  1013  056D                     u2850:
  1014  056D                     l346:
  1015                           
  1016                           ;Q3.c: 740:     RC2=RC0=RC1=1;
  1017  056D  148E               	bsf	14,1	;volatile
  1018  056E  188E               	btfsc	14,1	;volatile
  1019  056F  2D71               	goto	u2861
  1020  0570  2D74               	goto	u2860
  1021  0571                     u2861:
  1022  0571  0020               	movlb	0	; select bank0
  1023  0572  140E               	bsf	14,0	;volatile
  1024  0573  2D76               	goto	u2874
  1025  0574                     u2860:
  1026  0574  0020               	movlb	0	; select bank0
  1027  0575  100E               	bcf	14,0	;volatile
  1028  0576                     u2874:
  1029  0576  180E               	btfsc	14,0	;volatile
  1030  0577  2D79               	goto	u2871
  1031  0578  2D7C               	goto	u2870
  1032  0579                     u2871:
  1033  0579  0020               	movlb	0	; select bank0
  1034  057A  150E               	bsf	14,2	;volatile
  1035  057B  2D7E               	goto	u2884
  1036  057C                     u2870:
  1037  057C  0020               	movlb	0	; select bank0
  1038  057D  110E               	bcf	14,2	;volatile
  1039  057E                     u2884:
  1040  057E                     l2879:
  1041                           
  1042                           ;Q3.c: 743:     fclr(2);
  1043  057E  3002               	movlw	2
  1044  057F  00F0               	movwf	fclr@flg
  1045  0580  3000               	movlw	0
  1046  0581  00F1               	movwf	fclr@flg+1
  1047  0582  3183  238A  3185   	fcall	_fclr
  1048  0585                     l2881:
  1049  0585                     l2883:
  1050  0585                     l2885:
  1051  0585                     l2887:
  1052  0585                     l2889:
  1053  0585                     l2891:
  1054  0585                     l2893:
  1055  0585                     l2895:
  1056                           
  1057                           ;Q3.c: 770:         if(RA0 == 0 && RA1 == 1){
  1058  0585  0020               	movlb	0	; select bank0
  1059  0586  180C               	btfsc	12,0	;volatile
  1060  0587  2D89               	goto	u2891
  1061  0588  2D8A               	goto	u2890
  1062  0589                     u2891:
  1063  0589  2DF2               	goto	l349
  1064  058A                     u2890:
  1065  058A                     l2897:
  1066  058A  1C8C               	btfss	12,1	;volatile
  1067  058B  2D8D               	goto	u2901
  1068  058C  2D8E               	goto	u2900
  1069  058D                     u2901:
  1070  058D  2DF2               	goto	l349
  1071  058E                     u2900:
  1072  058E                     l2899:
  1073                           
  1074                           ;Q3.c: 771:             dynam((0x02|0x04),(0x02|0x04|0x08|0x10|0x20),0,0);
  1075  058E  3006               	movlw	6
  1076  058F  00F0               	movwf	dynam@dig1data
  1077  0590  3000               	movlw	0
  1078  0591  00F1               	movwf	dynam@dig1data+1
  1079  0592  303E               	movlw	62
  1080  0593  00F2               	movwf	dynam@dig2data
  1081  0594  3000               	movlw	0
  1082  0595  00F3               	movwf	dynam@dig2data+1
  1083  0596  3000               	movlw	0
  1084  0597  00F4               	movwf	dynam@smdata
  1085  0598  00F5               	movwf	dynam@smdata+1
  1086  0599  3000               	movlw	0
  1087  059A  00F6               	movwf	dynam@tr
  1088  059B  00F7               	movwf	dynam@tr+1
  1089  059C  3186  2663  3185   	fcall	_dynam
  1090                           
  1091                           ;Q3.c: 773:             tact(0);
  1092  059F  3000               	movlw	0
  1093  05A0  00F8               	movwf	tact@mode
  1094  05A1  00F9               	movwf	tact@mode+1
  1095  05A2  3184  24C2  3185   	fcall	_tact
  1096  05A5                     l2901:
  1097                           
  1098                           ;Q3.c: 774:             if(((flag_sw3==1)&&(flag_R==1))){
  1099  05A5  037C               	decf	_flag_sw3,w
  1100  05A6  047D               	iorwf	_flag_sw3+1,w
  1101  05A7  1D03               	btfss	3,2
  1102  05A8  2DAA               	goto	u2911
  1103  05A9  2DAB               	goto	u2910
  1104  05AA                     u2911:
  1105  05AA  2DF2               	goto	l349
  1106  05AB                     u2910:
  1107  05AB                     l2903:
  1108  05AB  037A               	decf	_flag_R,w
  1109  05AC  047B               	iorwf	_flag_R+1,w
  1110  05AD  1D03               	btfss	3,2
  1111  05AE  2DB0               	goto	u2921
  1112  05AF  2DB1               	goto	u2920
  1113  05B0                     u2921:
  1114  05B0  2DF2               	goto	l349
  1115  05B1                     u2920:
  1116  05B1                     l2905:
  1117                           
  1118                           ;Q3.c: 775:                 fclr(2);
  1119  05B1  3002               	movlw	2
  1120  05B2  00F0               	movwf	fclr@flg
  1121  05B3  3000               	movlw	0
  1122  05B4  00F1               	movwf	fclr@flg+1
  1123  05B5  3183  238A  3185   	fcall	_fclr
  1124                           
  1125                           ;Q3.c: 776:                 waitSEG((0x02|0x04),(0x02|0x04|0x08|0x10|0x20),1000);
  1126  05B8  3006               	movlw	6
  1127  05B9  0020               	movlb	0	; select bank0
  1128  05BA  00C6               	movwf	waitSEG@seg1
  1129  05BB  3000               	movlw	0
  1130  05BC  00C7               	movwf	waitSEG@seg1+1
  1131  05BD  303E               	movlw	62
  1132  05BE  00C8               	movwf	waitSEG@seg2
  1133  05BF  3000               	movlw	0
  1134  05C0  00C9               	movwf	waitSEG@seg2+1
  1135  05C1  30E8               	movlw	232
  1136  05C2  00CA               	movwf	waitSEG@wt
  1137  05C3  3003               	movlw	3
  1138  05C4  00CB               	movwf	waitSEG@wt+1
  1139  05C5  3183  23CD  3185   	fcall	_waitSEG
  1140                           
  1141                           ;Q3.c: 777:                 motor(360,(0x02|0x04),(0x02|0x04|0x08|0x10|0x20),1,5);
  1142  05C8  3068               	movlw	104
  1143  05C9  0020               	movlb	0	; select bank0
  1144  05CA  00C6               	movwf	motor@kakudo
  1145  05CB  3001               	movlw	1
  1146  05CC  00C7               	movwf	motor@kakudo+1
  1147  05CD  3006               	movlw	6
  1148  05CE  00C8               	movwf	motor@dig1data
  1149  05CF  3000               	movlw	0
  1150  05D0  00C9               	movwf	motor@dig1data+1
  1151  05D1  303E               	movlw	62
  1152  05D2  00CA               	movwf	motor@dig2data
  1153  05D3  3000               	movlw	0
  1154  05D4  00CB               	movwf	motor@dig2data+1
  1155  05D5  3001               	movlw	1
  1156  05D6  00CC               	movwf	motor@smdata
  1157  05D7  3000               	movlw	0
  1158  05D8  00CD               	movwf	motor@smdata+1
  1159  05D9  3005               	movlw	5
  1160  05DA  00CE               	movwf	motor@tr
  1161  05DB  3000               	movlw	0
  1162  05DC  00CF               	movwf	motor@tr+1
  1163  05DD  3183  23A9  3185   	fcall	_motor
  1164  05E0                     l351:	
  1165                           ;Q3.c: 779:                 while(1){
  1166                           
  1167                           
  1168                           ;Q3.c: 780:                     dynam((0x02|0x04),(0x02|0x04|0x08|0x10|0x20),0,0);
  1169  05E0  3006               	movlw	6
  1170  05E1  00F0               	movwf	dynam@dig1data
  1171  05E2  3000               	movlw	0
  1172  05E3  00F1               	movwf	dynam@dig1data+1
  1173  05E4  303E               	movlw	62
  1174  05E5  00F2               	movwf	dynam@dig2data
  1175  05E6  3000               	movlw	0
  1176  05E7  00F3               	movwf	dynam@dig2data+1
  1177  05E8  3000               	movlw	0
  1178  05E9  00F4               	movwf	dynam@smdata
  1179  05EA  00F5               	movwf	dynam@smdata+1
  1180  05EB  3000               	movlw	0
  1181  05EC  00F6               	movwf	dynam@tr
  1182  05ED  00F7               	movwf	dynam@tr+1
  1183  05EE  3186  2663  3185   	fcall	_dynam
  1184  05F1  2DE0               	goto	l351
  1185  05F2                     l349:	
  1186                           ;Q3.c: 784:         }
  1187                           
  1188                           
  1189                           ;Q3.c: 786:         if(RA0 == 1 && RA1 == 0){
  1190  05F2  0020               	movlb	0	; select bank0
  1191  05F3  1C0C               	btfss	12,0	;volatile
  1192  05F4  2DF6               	goto	u2931
  1193  05F5  2DF7               	goto	u2930
  1194  05F6                     u2931:
  1195  05F6  2D85               	goto	l2895
  1196  05F7                     u2930:
  1197  05F7                     l2907:
  1198  05F7  188C               	btfsc	12,1	;volatile
  1199  05F8  2DFA               	goto	u2941
  1200  05F9  2DFB               	goto	u2940
  1201  05FA                     u2941:
  1202  05FA  2D85               	goto	l2895
  1203  05FB                     u2940:
  1204  05FB                     l2909:
  1205                           
  1206                           ;Q3.c: 787:             dynam((0x02|0x04|0x08|0x10|0x20),(0x01|0x02|0x08|0x40|0x10),0,0)
      +                          ;
  1207  05FB  303E               	movlw	62
  1208  05FC  00F0               	movwf	dynam@dig1data
  1209  05FD  3000               	movlw	0
  1210  05FE  00F1               	movwf	dynam@dig1data+1
  1211  05FF  305B               	movlw	91
  1212  0600  00F2               	movwf	dynam@dig2data
  1213  0601  3000               	movlw	0
  1214  0602  00F3               	movwf	dynam@dig2data+1
  1215  0603  3000               	movlw	0
  1216  0604  00F4               	movwf	dynam@smdata
  1217  0605  00F5               	movwf	dynam@smdata+1
  1218  0606  3000               	movlw	0
  1219  0607  00F6               	movwf	dynam@tr
  1220  0608  00F7               	movwf	dynam@tr+1
  1221  0609  3186  2663  3185   	fcall	_dynam
  1222                           
  1223                           ;Q3.c: 789:             tact(2);
  1224  060C  3002               	movlw	2
  1225  060D  00F8               	movwf	tact@mode
  1226  060E  3000               	movlw	0
  1227  060F  00F9               	movwf	tact@mode+1
  1228  0610  3184  24C2  3185   	fcall	_tact
  1229  0613                     l2911:
  1230                           
  1231                           ;Q3.c: 790:             if(((flag_sw3==0)&&(flag_P==1))){
  1232  0613  087C               	movf	_flag_sw3,w
  1233  0614  047D               	iorwf	_flag_sw3+1,w
  1234  0615  1D03               	btfss	3,2
  1235  0616  2E18               	goto	u2951
  1236  0617  2E19               	goto	u2950
  1237  0618                     u2951:
  1238  0618  2D85               	goto	l2895
  1239  0619                     u2950:
  1240  0619                     l2913:
  1241  0619  0020               	movlb	0	; select bank0
  1242  061A  0338               	decf	_flag_P,w
  1243  061B  0439               	iorwf	_flag_P+1,w
  1244  061C  1D03               	btfss	3,2
  1245  061D  2E1F               	goto	u2961
  1246  061E  2E20               	goto	u2960
  1247  061F                     u2961:
  1248  061F  2D85               	goto	l2895
  1249  0620                     u2960:
  1250  0620                     l2915:
  1251                           
  1252                           ;Q3.c: 791:                 fclr(2);
  1253  0620  3002               	movlw	2
  1254  0621  00F0               	movwf	fclr@flg
  1255  0622  3000               	movlw	0
  1256  0623  00F1               	movwf	fclr@flg+1
  1257  0624  3183  238A  3185   	fcall	_fclr
  1258                           
  1259                           ;Q3.c: 792:                 waitSEG((0x02|0x04|0x08|0x10|0x20),(0x01|0x02|0x08|0x40|0x10
      +                          ),2000);
  1260  0627  303E               	movlw	62
  1261  0628  0020               	movlb	0	; select bank0
  1262  0629  00C6               	movwf	waitSEG@seg1
  1263  062A  3000               	movlw	0
  1264  062B  00C7               	movwf	waitSEG@seg1+1
  1265  062C  305B               	movlw	91
  1266  062D  00C8               	movwf	waitSEG@seg2
  1267  062E  3000               	movlw	0
  1268  062F  00C9               	movwf	waitSEG@seg2+1
  1269  0630  30D0               	movlw	208
  1270  0631  00CA               	movwf	waitSEG@wt
  1271  0632  3007               	movlw	7
  1272  0633  00CB               	movwf	waitSEG@wt+1
  1273  0634  3183  23CD  3185   	fcall	_waitSEG
  1274                           
  1275                           ;Q3.c: 793:                 motor(360*2,(0x02|0x04),(0x02|0x04|0x08|0x10|0x20),2,1);
  1276  0637  30D0               	movlw	208
  1277  0638  0020               	movlb	0	; select bank0
  1278  0639  00C6               	movwf	motor@kakudo
  1279  063A  3002               	movlw	2
  1280  063B  00C7               	movwf	motor@kakudo+1
  1281  063C  3006               	movlw	6
  1282  063D  00C8               	movwf	motor@dig1data
  1283  063E  3000               	movlw	0
  1284  063F  00C9               	movwf	motor@dig1data+1
  1285  0640  303E               	movlw	62
  1286  0641  00CA               	movwf	motor@dig2data
  1287  0642  3000               	movlw	0
  1288  0643  00CB               	movwf	motor@dig2data+1
  1289  0644  3002               	movlw	2
  1290  0645  00CC               	movwf	motor@smdata
  1291  0646  3000               	movlw	0
  1292  0647  00CD               	movwf	motor@smdata+1
  1293  0648  3001               	movlw	1
  1294  0649  00CE               	movwf	motor@tr
  1295  064A  3000               	movlw	0
  1296  064B  00CF               	movwf	motor@tr+1
  1297  064C  3183  23A9  3185   	fcall	_motor
  1298  064F                     l356:	
  1299                           ;Q3.c: 795:                 while(1){
  1300                           
  1301                           
  1302                           ;Q3.c: 796:                     dynam((0x02|0x04|0x08|0x10|0x20),(0x01|0x02|0x08|0x40|0x
      +                          10),0,0);
  1303  064F  303E               	movlw	62
  1304  0650  00F0               	movwf	dynam@dig1data
  1305  0651  3000               	movlw	0
  1306  0652  00F1               	movwf	dynam@dig1data+1
  1307  0653  305B               	movlw	91
  1308  0654  00F2               	movwf	dynam@dig2data
  1309  0655  3000               	movlw	0
  1310  0656  00F3               	movwf	dynam@dig2data+1
  1311  0657  3000               	movlw	0
  1312  0658  00F4               	movwf	dynam@smdata
  1313  0659  00F5               	movwf	dynam@smdata+1
  1314  065A  3000               	movlw	0
  1315  065B  00F6               	movwf	dynam@tr
  1316  065C  00F7               	movwf	dynam@tr+1
  1317  065D  3186  2663  3185   	fcall	_dynam
  1318  0660  2E4F               	goto	l356
  1319  0661  3180  2802         	ljmp	start
  1320  0663                     __end_of_main:
  1321                           
  1322                           	psect	text1
  1323  036E                     __ptext1:	
  1324 ;; *************** function _zenoff *****************
  1325 ;; Defined at:
  1326 ;;		line 195 in file "Q3.c"
  1327 ;; Parameters:    Size  Location     Type
  1328 ;;		None
  1329 ;; Auto vars:     Size  Location     Type
  1330 ;;		None
  1331 ;; Return value:  Size  Location     Type
  1332 ;;                  1    wreg      void 
  1333 ;; Registers used:
  1334 ;;		status,2
  1335 ;; Tracked objects:
  1336 ;;		On entry : 0/0
  1337 ;;		On exit  : 0/0
  1338 ;;		Unchanged: 0/0
  1339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1344 ;;Total ram usage:        0 bytes
  1345 ;; Hardware stack levels used:    1
  1346 ;; This function calls:
  1347 ;;		Nothing
  1348 ;; This function is called by:
  1349 ;;		_main
  1350 ;; This function uses a non-reentrant model
  1351 ;;
  1352                           
  1353                           
  1354                           ;psect for function _zenoff
  1355  036E                     _zenoff:
  1356  036E                     l2259:	
  1357                           ;incstack = 0
  1358                           ; Regs used in _zenoff: [status,2]
  1359                           
  1360                           
  1361                           ;Q3.c: 197:     RC2=1;
  1362  036E  0020               	movlb	0	; select bank0
  1363  036F  150E               	bsf	14,2	;volatile
  1364                           
  1365                           ;Q3.c: 198:     RC1=1;
  1366  0370  148E               	bsf	14,1	;volatile
  1367                           
  1368                           ;Q3.c: 199:     RC0=1;
  1369  0371  140E               	bsf	14,0	;volatile
  1370  0372                     l2261:
  1371                           
  1372                           ;Q3.c: 200:     PORTB=0x00;
  1373  0372  018D               	clrf	13	;volatile
  1374  0373                     l2263:
  1375                           
  1376                           ;Q3.c: 201:     RC7=0;RC7=1;RC7=0;
  1377  0373  138E               	bcf	14,7	;volatile
  1378  0374                     l2265:
  1379  0374  178E               	bsf	14,7	;volatile
  1380  0375                     l2267:
  1381  0375  138E               	bcf	14,7	;volatile
  1382  0376                     l108:
  1383  0376  0008               	return
  1384  0377                     __end_of_zenoff:
  1385                           
  1386                           	psect	text2
  1387  03CD                     __ptext2:	
  1388 ;; *************** function _waitSEG *****************
  1389 ;; Defined at:
  1390 ;;		line 451 in file "Q3.c"
  1391 ;; Parameters:    Size  Location     Type
  1392 ;;  seg1            2    8[BANK0 ] unsigned short 
  1393 ;;  seg2            2   10[BANK0 ] unsigned short 
  1394 ;;  wt              2   12[BANK0 ] unsigned short 
  1395 ;; Auto vars:     Size  Location     Type
  1396 ;;  i               2    8[COMMON] unsigned int 
  1397 ;; Return value:  Size  Location     Type
  1398 ;;                  1    wreg      void 
  1399 ;; Registers used:
  1400 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1401 ;; Tracked objects:
  1402 ;;		On entry : 0/0
  1403 ;;		On exit  : 0/0
  1404 ;;		Unchanged: 0/0
  1405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1406 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1407 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1409 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1410 ;;Total ram usage:        8 bytes
  1411 ;; Hardware stack levels used:    1
  1412 ;; Hardware stack levels required when called:    1
  1413 ;; This function calls:
  1414 ;;		___lwdiv
  1415 ;;		_dynam
  1416 ;; This function is called by:
  1417 ;;		_main
  1418 ;; This function uses a non-reentrant model
  1419 ;;
  1420                           
  1421                           
  1422                           ;psect for function _waitSEG
  1423  03CD                     _waitSEG:
  1424  03CD                     l2319:	
  1425                           ;incstack = 0
  1426                           ; Regs used in _waitSEG: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1427                           
  1428                           
  1429                           ;Q3.c: 451: void waitSEG(unsigned short seg1,unsigned short seg2,unsigned short wt);Q3.c
      +                          : 452: {;Q3.c: 454:     wt = wt / 10;
  1430  03CD  300A               	movlw	10
  1431  03CE  00F0               	movwf	___lwdiv@divisor
  1432  03CF  3000               	movlw	0
  1433  03D0  00F1               	movwf	___lwdiv@divisor+1
  1434  03D1  0020               	movlb	0	; select bank0
  1435  03D2  084B               	movf	waitSEG@wt+1,w
  1436  03D3  00F3               	movwf	___lwdiv@dividend+1
  1437  03D4  084A               	movf	waitSEG@wt,w
  1438  03D5  00F2               	movwf	___lwdiv@dividend
  1439  03D6  3184  2401  3183   	fcall	___lwdiv
  1440  03D9  0871               	movf	?___lwdiv+1,w
  1441  03DA  0020               	movlb	0	; select bank0
  1442  03DB  00CB               	movwf	waitSEG@wt+1
  1443  03DC  0870               	movf	?___lwdiv,w
  1444  03DD  00CA               	movwf	waitSEG@wt
  1445  03DE                     l2321:
  1446                           
  1447                           ;Q3.c: 455:     unsigned int i;;Q3.c: 457:     for(i=wt;i>0;--i){
  1448  03DE  084B               	movf	waitSEG@wt+1,w
  1449  03DF  00F9               	movwf	waitSEG@i+1
  1450  03E0  084A               	movf	waitSEG@wt,w
  1451  03E1  00F8               	movwf	waitSEG@i
  1452  03E2                     l2323:
  1453  03E2  0878               	movf	waitSEG@i,w
  1454  03E3  0479               	iorwf	waitSEG@i+1,w
  1455  03E4  1D03               	btfss	3,2
  1456  03E5  2BE7               	goto	u1931
  1457  03E6  2BE8               	goto	u1930
  1458  03E7                     u1931:
  1459  03E7  2BE9               	goto	l2327
  1460  03E8                     u1930:
  1461  03E8  2C00               	goto	l258
  1462  03E9                     l2327:
  1463                           
  1464                           ;Q3.c: 458:         dynam(seg1,seg2,0,0);
  1465  03E9  0020               	movlb	0	; select bank0
  1466  03EA  0847               	movf	waitSEG@seg1+1,w
  1467  03EB  00F1               	movwf	dynam@dig1data+1
  1468  03EC  0846               	movf	waitSEG@seg1,w
  1469  03ED  00F0               	movwf	dynam@dig1data
  1470  03EE  0849               	movf	waitSEG@seg2+1,w
  1471  03EF  00F3               	movwf	dynam@dig2data+1
  1472  03F0  0848               	movf	waitSEG@seg2,w
  1473  03F1  00F2               	movwf	dynam@dig2data
  1474  03F2  3000               	movlw	0
  1475  03F3  00F4               	movwf	dynam@smdata
  1476  03F4  00F5               	movwf	dynam@smdata+1
  1477  03F5  3000               	movlw	0
  1478  03F6  00F6               	movwf	dynam@tr
  1479  03F7  00F7               	movwf	dynam@tr+1
  1480  03F8  3186  2663  3183   	fcall	_dynam
  1481  03FB                     l2329:
  1482                           
  1483                           ;Q3.c: 459:     }
  1484  03FB  3001               	movlw	1
  1485  03FC  02F8               	subwf	waitSEG@i,f
  1486  03FD  3000               	movlw	0
  1487  03FE  3BF9               	subwfb	waitSEG@i+1,f
  1488  03FF  2BE2               	goto	l2323
  1489  0400                     l258:
  1490  0400  0008               	return
  1491  0401                     __end_of_waitSEG:
  1492                           
  1493                           	psect	text3
  1494  0401                     __ptext3:	
  1495 ;; *************** function ___lwdiv *****************
  1496 ;; Defined at:
  1497 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\lwdiv.c"
  1498 ;; Parameters:    Size  Location     Type
  1499 ;;  divisor         2    0[COMMON] unsigned int 
  1500 ;;  dividend        2    2[COMMON] unsigned int 
  1501 ;; Auto vars:     Size  Location     Type
  1502 ;;  quotient        2    5[COMMON] unsigned int 
  1503 ;;  counter         1    7[COMMON] unsigned char 
  1504 ;; Return value:  Size  Location     Type
  1505 ;;                  2    0[COMMON] unsigned int 
  1506 ;; Registers used:
  1507 ;;		wreg, status,2, status,0
  1508 ;; Tracked objects:
  1509 ;;		On entry : 0/0
  1510 ;;		On exit  : 0/0
  1511 ;;		Unchanged: 0/0
  1512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1513 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1514 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1515 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1516 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1517 ;;Total ram usage:        8 bytes
  1518 ;; Hardware stack levels used:    1
  1519 ;; This function calls:
  1520 ;;		Nothing
  1521 ;; This function is called by:
  1522 ;;		_waitSEG
  1523 ;;		_waitSEGStop
  1524 ;; This function uses a non-reentrant model
  1525 ;;
  1526                           
  1527                           
  1528                           ;psect for function ___lwdiv
  1529  0401                     ___lwdiv:
  1530  0401                     l2203:	
  1531                           ;incstack = 0
  1532                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1533                           
  1534  0401  01F5               	clrf	___lwdiv@quotient
  1535  0402  01F6               	clrf	___lwdiv@quotient+1
  1536  0403                     l2205:
  1537  0403  0870               	movf	___lwdiv@divisor,w
  1538  0404  0471               	iorwf	___lwdiv@divisor+1,w
  1539  0405  1903               	btfsc	3,2
  1540  0406  2C08               	goto	u1791
  1541  0407  2C09               	goto	u1790
  1542  0408                     u1791:
  1543  0408  2C38               	goto	l2225
  1544  0409                     u1790:
  1545  0409                     l2207:
  1546  0409  01F7               	clrf	___lwdiv@counter
  1547  040A  0AF7               	incf	___lwdiv@counter,f
  1548  040B  2C15               	goto	l2213
  1549  040C                     l2209:
  1550  040C  3001               	movlw	1
  1551  040D                     u1805:
  1552  040D  35F0               	lslf	___lwdiv@divisor,f
  1553  040E  0DF1               	rlf	___lwdiv@divisor+1,f
  1554  040F  0B89               	decfsz	9,f
  1555  0410  2C0D               	goto	u1805
  1556  0411                     l2211:
  1557  0411  3001               	movlw	1
  1558  0412  00F4               	movwf	??___lwdiv
  1559  0413  0874               	movf	??___lwdiv,w
  1560  0414  07F7               	addwf	___lwdiv@counter,f
  1561  0415                     l2213:
  1562  0415  1FF1               	btfss	___lwdiv@divisor+1,7
  1563  0416  2C18               	goto	u1811
  1564  0417  2C19               	goto	u1810
  1565  0418                     u1811:
  1566  0418  2C0C               	goto	l2209
  1567  0419                     u1810:
  1568  0419                     l2215:
  1569  0419  3001               	movlw	1
  1570  041A                     u1825:
  1571  041A  35F5               	lslf	___lwdiv@quotient,f
  1572  041B  0DF6               	rlf	___lwdiv@quotient+1,f
  1573  041C  0B89               	decfsz	9,f
  1574  041D  2C1A               	goto	u1825
  1575  041E  0871               	movf	___lwdiv@divisor+1,w
  1576  041F  0273               	subwf	___lwdiv@dividend+1,w
  1577  0420  1D03               	skipz
  1578  0421  2C24               	goto	u1835
  1579  0422  0870               	movf	___lwdiv@divisor,w
  1580  0423  0272               	subwf	___lwdiv@dividend,w
  1581  0424                     u1835:
  1582  0424  1C03               	skipc
  1583  0425  2C27               	goto	u1831
  1584  0426  2C28               	goto	u1830
  1585  0427                     u1831:
  1586  0427  2C2D               	goto	l2221
  1587  0428                     u1830:
  1588  0428                     l2217:
  1589  0428  0870               	movf	___lwdiv@divisor,w
  1590  0429  02F2               	subwf	___lwdiv@dividend,f
  1591  042A  0871               	movf	___lwdiv@divisor+1,w
  1592  042B  3BF3               	subwfb	___lwdiv@dividend+1,f
  1593  042C                     l2219:
  1594  042C  1475               	bsf	___lwdiv@quotient,0
  1595  042D                     l2221:
  1596  042D  3001               	movlw	1
  1597  042E                     u1845:
  1598  042E  36F1               	lsrf	___lwdiv@divisor+1,f
  1599  042F  0CF0               	rrf	___lwdiv@divisor,f
  1600  0430  0B89               	decfsz	9,f
  1601  0431  2C2E               	goto	u1845
  1602  0432                     l2223:
  1603  0432  3001               	movlw	1
  1604  0433  02F7               	subwf	___lwdiv@counter,f
  1605  0434  1D03               	btfss	3,2
  1606  0435  2C37               	goto	u1851
  1607  0436  2C38               	goto	u1850
  1608  0437                     u1851:
  1609  0437  2C19               	goto	l2215
  1610  0438                     u1850:
  1611  0438                     l2225:
  1612  0438  0876               	movf	___lwdiv@quotient+1,w
  1613  0439  00F1               	movwf	?___lwdiv+1
  1614  043A  0875               	movf	___lwdiv@quotient,w
  1615  043B  00F0               	movwf	?___lwdiv
  1616  043C                     l791:
  1617  043C  0008               	return
  1618  043D                     __end_of___lwdiv:
  1619                           
  1620                           	psect	text4
  1621  04C2                     __ptext4:	
  1622 ;; *************** function _tact *****************
  1623 ;; Defined at:
  1624 ;;		line 346 in file "Q3.c"
  1625 ;; Parameters:    Size  Location     Type
  1626 ;;  mode            2    8[COMMON] unsigned short 
  1627 ;; Auto vars:     Size  Location     Type
  1628 ;;		None
  1629 ;; Return value:  Size  Location     Type
  1630 ;;                  1    wreg      void 
  1631 ;; Registers used:
  1632 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1633 ;; Tracked objects:
  1634 ;;		On entry : 0/0
  1635 ;;		On exit  : 0/0
  1636 ;;		Unchanged: 0/0
  1637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1638 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1641 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1642 ;;Total ram usage:        2 bytes
  1643 ;; Hardware stack levels used:    1
  1644 ;; Hardware stack levels required when called:    1
  1645 ;; This function calls:
  1646 ;;		_tactsw
  1647 ;; This function is called by:
  1648 ;;		_main
  1649 ;;		_kaisu
  1650 ;;		_waitSEGStop
  1651 ;;		_motorStop
  1652 ;;		_buzzStop
  1653 ;; This function uses a non-reentrant model
  1654 ;;
  1655                           
  1656                           
  1657                           ;psect for function _tact
  1658  04C2                     _tact:
  1659  04C2                     l2269:	
  1660                           ;incstack = 0
  1661                           ; Regs used in _tact: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1662                           
  1663                           
  1664                           ;Q3.c: 346: void tact(unsigned short mode);Q3.c: 347: {;Q3.c: 348:     switch(mode){
  1665  04C2  2CFA               	goto	l2297
  1666  04C3                     l2271:
  1667                           
  1668                           ;Q3.c: 350:                 tactsw();
  1669  04C3  3184  243D  3184   	fcall	_tactsw
  1670  04C6                     l2273:
  1671                           
  1672                           ;Q3.c: 351:                 if(flag_sw3==0)flag_R=1;
  1673  04C6  087C               	movf	_flag_sw3,w
  1674  04C7  047D               	iorwf	_flag_sw3+1,w
  1675  04C8  1D03               	btfss	3,2
  1676  04C9  2CCB               	goto	u1881
  1677  04CA  2CCC               	goto	u1880
  1678  04CB                     u1881:
  1679  04CB  2D0A               	goto	l208
  1680  04CC                     u1880:
  1681  04CC                     l2275:
  1682  04CC  3001               	movlw	1
  1683  04CD  00FA               	movwf	_flag_R
  1684  04CE  3000               	movlw	0
  1685  04CF  00FB               	movwf	_flag_R+1
  1686  04D0  2D0A               	goto	l208
  1687  04D1                     l2277:
  1688                           
  1689                           ;Q3.c: 354:                 tactsw();
  1690  04D1  3184  243D  3184   	fcall	_tactsw
  1691  04D4                     l2279:
  1692                           
  1693                           ;Q3.c: 355:                 if(flag_sw3==1)flag_P=1;
  1694  04D4  037C               	decf	_flag_sw3,w
  1695  04D5  047D               	iorwf	_flag_sw3+1,w
  1696  04D6  1D03               	btfss	3,2
  1697  04D7  2CD9               	goto	u1891
  1698  04D8  2CDA               	goto	u1890
  1699  04D9                     u1891:
  1700  04D9  2D0A               	goto	l208
  1701  04DA                     u1890:
  1702  04DA                     l2281:
  1703  04DA  3001               	movlw	1
  1704  04DB  0020               	movlb	0	; select bank0
  1705  04DC  00B8               	movwf	_flag_P
  1706  04DD  3000               	movlw	0
  1707  04DE  00B9               	movwf	_flag_P+1
  1708  04DF  2D0A               	goto	l208
  1709  04E0                     l2283:
  1710                           
  1711                           ;Q3.c: 358:                 tactsw();
  1712  04E0  3184  243D  3184   	fcall	_tactsw
  1713  04E3                     l2285:
  1714                           
  1715                           ;Q3.c: 359:                 if(flag_sw3==0)flag_R=1;
  1716  04E3  087C               	movf	_flag_sw3,w
  1717  04E4  047D               	iorwf	_flag_sw3+1,w
  1718  04E5  1D03               	btfss	3,2
  1719  04E6  2CE8               	goto	u1901
  1720  04E7  2CE9               	goto	u1900
  1721  04E8                     u1901:
  1722  04E8  2CED               	goto	l2289
  1723  04E9                     u1900:
  1724  04E9                     l2287:
  1725  04E9  3001               	movlw	1
  1726  04EA  00FA               	movwf	_flag_R
  1727  04EB  3000               	movlw	0
  1728  04EC  00FB               	movwf	_flag_R+1
  1729  04ED                     l2289:
  1730                           
  1731                           ;Q3.c: 360:                 if((flag_sw3==1)&&(flag_R==1))flag_P=1;
  1732  04ED  037C               	decf	_flag_sw3,w
  1733  04EE  047D               	iorwf	_flag_sw3+1,w
  1734  04EF  1D03               	btfss	3,2
  1735  04F0  2CF2               	goto	u1911
  1736  04F1  2CF3               	goto	u1910
  1737  04F2                     u1911:
  1738  04F2  2D0A               	goto	l208
  1739  04F3                     u1910:
  1740  04F3                     l2291:
  1741  04F3  037A               	decf	_flag_R,w
  1742  04F4  047B               	iorwf	_flag_R+1,w
  1743  04F5  1D03               	btfss	3,2
  1744  04F6  2CF8               	goto	u1921
  1745  04F7  2CF9               	goto	u1920
  1746  04F8                     u1921:
  1747  04F8  2D0A               	goto	l208
  1748  04F9                     u1920:
  1749  04F9  2CDA               	goto	l2281
  1750  04FA                     l2297:
  1751                           
  1752                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1753                           ; Switch size 1, requested type "simple"
  1754                           ; Number of cases is 1, Range of values is 0 to 0
  1755                           ; switch strategies available:
  1756                           ; Name         Instructions Cycles
  1757                           ; simple_byte            4     3 (average)
  1758                           ; direct_byte            8     6 (fixed)
  1759                           ; jumptable            260     6 (fixed)
  1760                           ;	Chosen strategy is simple_byte
  1761  04FA  0879               	movf	tact@mode+1,w
  1762  04FB  3A00               	xorlw	0	; case 0
  1763  04FC  1903               	skipnz
  1764  04FD  2CFF               	goto	l3073
  1765  04FE  2D0A               	goto	l208
  1766  04FF                     l3073:
  1767                           
  1768                           ; Switch size 1, requested type "simple"
  1769                           ; Number of cases is 3, Range of values is 0 to 2
  1770                           ; switch strategies available:
  1771                           ; Name         Instructions Cycles
  1772                           ; simple_byte           10     6 (average)
  1773                           ; direct_byte           12     6 (fixed)
  1774                           ; jumptable            260     6 (fixed)
  1775                           ;	Chosen strategy is simple_byte
  1776  04FF  0878               	movf	tact@mode,w
  1777  0500  3A00               	xorlw	0	; case 0
  1778  0501  1903               	skipnz
  1779  0502  2CC3               	goto	l2271
  1780  0503  3A01               	xorlw	1	; case 1
  1781  0504  1903               	skipnz
  1782  0505  2CD1               	goto	l2277
  1783  0506  3A03               	xorlw	3	; case 2
  1784  0507  1903               	skipnz
  1785  0508  2CE0               	goto	l2283
  1786  0509  2D0A               	goto	l208
  1787  050A                     l208:
  1788  050A  0008               	return
  1789  050B                     __end_of_tact:
  1790                           
  1791                           	psect	text5
  1792  043D                     __ptext5:	
  1793 ;; *************** function _tactsw *****************
  1794 ;; Defined at:
  1795 ;;		line 331 in file "Q3.c"
  1796 ;; Parameters:    Size  Location     Type
  1797 ;;		None
  1798 ;; Auto vars:     Size  Location     Type
  1799 ;;  a               2    6[COMMON] unsigned short 
  1800 ;;  c               2    4[COMMON] unsigned short 
  1801 ;;  b               2    2[COMMON] unsigned short 
  1802 ;; Return value:  Size  Location     Type
  1803 ;;                  1    wreg      void 
  1804 ;; Registers used:
  1805 ;;		wreg, status,2, status,0
  1806 ;; Tracked objects:
  1807 ;;		On entry : 0/0
  1808 ;;		On exit  : 0/0
  1809 ;;		Unchanged: 0/0
  1810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1812 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1813 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1814 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1815 ;;Total ram usage:        8 bytes
  1816 ;; Hardware stack levels used:    1
  1817 ;; This function calls:
  1818 ;;		Nothing
  1819 ;; This function is called by:
  1820 ;;		_tact
  1821 ;; This function uses a non-reentrant model
  1822 ;;
  1823                           
  1824                           
  1825                           ;psect for function _tactsw
  1826  043D                     _tactsw:
  1827  043D                     l2185:	
  1828                           ;incstack = 0
  1829                           ; Regs used in _tactsw: [wreg+status,2+status,0]
  1830                           
  1831                           
  1832                           ;Q3.c: 333:     unsigned short a,b,c;;Q3.c: 334:     b=c=0;
  1833  043D  01F4               	clrf	tactsw@c
  1834  043E  01F5               	clrf	tactsw@c+1
  1835  043F  01F2               	clrf	tactsw@b
  1836  0440  01F3               	clrf	tactsw@b+1
  1837  0441                     l2187:
  1838                           
  1839                           ;Q3.c: 336:             a=RA2;
  1840  0441  1003               	clrc
  1841  0442  0020               	movlb	0	; select bank0
  1842  0443  190C               	btfsc	12,2	;volatile
  1843  0444  1403               	setc
  1844  0445  3000               	movlw	0
  1845  0446  3D09               	addwfc	9,w
  1846  0447  00F0               	movwf	??_tactsw
  1847  0448  01F1               	clrf	??_tactsw+1
  1848  0449  0870               	movf	??_tactsw,w
  1849  044A  00F6               	movwf	tactsw@a
  1850  044B  0871               	movf	??_tactsw+1,w
  1851  044C  00F7               	movwf	tactsw@a+1
  1852  044D                     l2189:
  1853                           
  1854                           ;Q3.c: 337:             if(b==a)++c;
  1855  044D  0877               	movf	tactsw@a+1,w
  1856  044E  0673               	xorwf	tactsw@b+1,w
  1857  044F  1D03               	skipz
  1858  0450  2C53               	goto	u1775
  1859  0451  0876               	movf	tactsw@a,w
  1860  0452  0672               	xorwf	tactsw@b,w
  1861  0453                     u1775:
  1862  0453  1D03               	skipz
  1863  0454  2C56               	goto	u1771
  1864  0455  2C57               	goto	u1770
  1865  0456                     u1771:
  1866  0456  2C5C               	goto	l2193
  1867  0457                     u1770:
  1868  0457                     l2191:
  1869  0457  3001               	movlw	1
  1870  0458  07F4               	addwf	tactsw@c,f
  1871  0459  3000               	movlw	0
  1872  045A  3DF5               	addwfc	tactsw@c+1,f
  1873  045B  2C5E               	goto	l2195
  1874  045C                     l2193:
  1875  045C  01F4               	clrf	tactsw@c
  1876  045D  01F5               	clrf	tactsw@c+1
  1877  045E                     l2195:
  1878                           
  1879                           ;Q3.c: 339:             if(c>10){flag_sw3=(~a)&0x01;return;}
  1880  045E  3000               	movlw	0
  1881  045F  0275               	subwf	tactsw@c+1,w
  1882  0460  300B               	movlw	11
  1883  0461  1903               	skipnz
  1884  0462  0274               	subwf	tactsw@c,w
  1885  0463  1C03               	skipc
  1886  0464  2C66               	goto	u1781
  1887  0465  2C67               	goto	u1780
  1888  0466                     u1781:
  1889  0466  2C74               	goto	l2201
  1890  0467                     u1780:
  1891  0467                     l2197:
  1892  0467  0877               	movf	tactsw@a+1,w
  1893  0468  00F1               	movwf	??_tactsw+1
  1894  0469  0876               	movf	tactsw@a,w
  1895  046A  00F0               	movwf	??_tactsw
  1896  046B  09F0               	comf	??_tactsw,f
  1897  046C  09F1               	comf	??_tactsw+1,f
  1898  046D  3001               	movlw	1
  1899  046E  0570               	andwf	??_tactsw,w
  1900  046F  00FC               	movwf	_flag_sw3
  1901  0470  3000               	movlw	0
  1902  0471  0571               	andwf	??_tactsw+1,w
  1903  0472  00FD               	movwf	_flag_sw3+1
  1904  0473  2C79               	goto	l193
  1905  0474                     l2201:
  1906                           
  1907                           ;Q3.c: 340:             b=a;
  1908  0474  0877               	movf	tactsw@a+1,w
  1909  0475  00F3               	movwf	tactsw@b+1
  1910  0476  0876               	movf	tactsw@a,w
  1911  0477  00F2               	movwf	tactsw@b
  1912  0478  2C41               	goto	l2187
  1913  0479                     l193:
  1914  0479  0008               	return
  1915  047A                     __end_of_tactsw:
  1916                           
  1917                           	psect	text6
  1918  0377                     __ptext6:	
  1919 ;; *************** function _portinit *****************
  1920 ;; Defined at:
  1921 ;;		line 160 in file "Q3.c"
  1922 ;; Parameters:    Size  Location     Type
  1923 ;;		None
  1924 ;; Auto vars:     Size  Location     Type
  1925 ;;		None
  1926 ;; Return value:  Size  Location     Type
  1927 ;;                  1    wreg      void 
  1928 ;; Registers used:
  1929 ;;		wreg, status,2
  1930 ;; Tracked objects:
  1931 ;;		On entry : 0/0
  1932 ;;		On exit  : 0/0
  1933 ;;		Unchanged: 0/0
  1934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1939 ;;Total ram usage:        0 bytes
  1940 ;; Hardware stack levels used:    1
  1941 ;; This function calls:
  1942 ;;		Nothing
  1943 ;; This function is called by:
  1944 ;;		_main
  1945 ;; This function uses a non-reentrant model
  1946 ;;
  1947                           
  1948                           
  1949                           ;psect for function _portinit
  1950  0377                     _portinit:
  1951  0377                     l2229:	
  1952                           ;incstack = 0
  1953                           ; Regs used in _portinit: [wreg+status,2]
  1954                           
  1955                           
  1956                           ;Q3.c: 163:     ANSELA=0x00;
  1957  0377  0023               	movlb	3	; select bank3
  1958  0378  018C               	clrf	12	;volatile
  1959                           
  1960                           ;Q3.c: 164:     ANSELB=0x00;
  1961  0379  018D               	clrf	13	;volatile
  1962  037A                     l2231:
  1963                           
  1964                           ;Q3.c: 166:     PORTA=0x07;
  1965  037A  3007               	movlw	7
  1966  037B  0020               	movlb	0	; select bank0
  1967  037C  008C               	movwf	12	;volatile
  1968  037D                     l2233:
  1969                           
  1970                           ;Q3.c: 167:     TRISA=0x07;
  1971  037D  3007               	movlw	7
  1972  037E  0021               	movlb	1	; select bank1
  1973  037F  008C               	movwf	12	;volatile
  1974                           
  1975                           ;Q3.c: 168:     PORTB=0x00;
  1976  0380  0020               	movlb	0	; select bank0
  1977  0381  018D               	clrf	13	;volatile
  1978                           
  1979                           ;Q3.c: 169:     TRISB=0x00;
  1980  0382  0021               	movlb	1	; select bank1
  1981  0383  018D               	clrf	13	;volatile
  1982  0384                     l2235:
  1983                           
  1984                           ;Q3.c: 170:     PORTC=0x07;
  1985  0384  3007               	movlw	7
  1986  0385  0020               	movlb	0	; select bank0
  1987  0386  008E               	movwf	14	;volatile
  1988  0387                     l2237:
  1989                           
  1990                           ;Q3.c: 171:     TRISC=0x00;
  1991  0387  0021               	movlb	1	; select bank1
  1992  0388  018E               	clrf	14	;volatile
  1993  0389                     l95:
  1994  0389  0008               	return
  1995  038A                     __end_of_portinit:
  1996                           
  1997                           	psect	text7
  1998  03A9                     __ptext7:	
  1999 ;; *************** function _motor *****************
  2000 ;; Defined at:
  2001 ;;		line 506 in file "Q3.c"
  2002 ;; Parameters:    Size  Location     Type
  2003 ;;  kakudo          2    8[BANK0 ] int 
  2004 ;;  dig1data        2   10[BANK0 ] unsigned short 
  2005 ;;  dig2data        2   12[BANK0 ] unsigned short 
  2006 ;;  smdata          2   14[BANK0 ] unsigned short 
  2007 ;;  tr              2   16[BANK0 ] unsigned int 
  2008 ;; Auto vars:     Size  Location     Type
  2009 ;;  i               2    8[COMMON] int 
  2010 ;; Return value:  Size  Location     Type
  2011 ;;                  1    wreg      void 
  2012 ;; Registers used:
  2013 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2014 ;; Tracked objects:
  2015 ;;		On entry : 0/0
  2016 ;;		On exit  : 0/0
  2017 ;;		Unchanged: 0/0
  2018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2019 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2020 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2022 ;;      Totals:         2      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2023 ;;Total ram usage:       12 bytes
  2024 ;; Hardware stack levels used:    1
  2025 ;; Hardware stack levels required when called:    1
  2026 ;; This function calls:
  2027 ;;		_dynam
  2028 ;; This function is called by:
  2029 ;;		_main
  2030 ;; This function uses a non-reentrant model
  2031 ;;
  2032                           
  2033                           
  2034                           ;psect for function _motor
  2035  03A9                     _motor:
  2036  03A9                     l2333:	
  2037                           ;incstack = 0
  2038                           ; Regs used in _motor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2039                           
  2040                           
  2041                           ;Q3.c: 508:     for(int i = kakudo;i>=0;i--){
  2042  03A9  0020               	movlb	0	; select bank0
  2043  03AA  0847               	movf	motor@kakudo+1,w
  2044  03AB  00F9               	movwf	motor@i+1
  2045  03AC  0846               	movf	motor@kakudo,w
  2046  03AD  00F8               	movwf	motor@i
  2047  03AE                     l2335:
  2048  03AE  1FF9               	btfss	motor@i+1,7
  2049  03AF  2BB1               	goto	u1941
  2050  03B0  2BB2               	goto	u1940
  2051  03B1                     u1941:
  2052  03B1  2BB3               	goto	l2339
  2053  03B2                     u1940:
  2054  03B2  2BCC               	goto	l274
  2055  03B3                     l2339:
  2056                           
  2057                           ;Q3.c: 509:         dynam(dig1data,dig2data,smdata,tr);
  2058  03B3  0020               	movlb	0	; select bank0
  2059  03B4  0849               	movf	motor@dig1data+1,w
  2060  03B5  00F1               	movwf	dynam@dig1data+1
  2061  03B6  0848               	movf	motor@dig1data,w
  2062  03B7  00F0               	movwf	dynam@dig1data
  2063  03B8  084B               	movf	motor@dig2data+1,w
  2064  03B9  00F3               	movwf	dynam@dig2data+1
  2065  03BA  084A               	movf	motor@dig2data,w
  2066  03BB  00F2               	movwf	dynam@dig2data
  2067  03BC  084D               	movf	motor@smdata+1,w
  2068  03BD  00F5               	movwf	dynam@smdata+1
  2069  03BE  084C               	movf	motor@smdata,w
  2070  03BF  00F4               	movwf	dynam@smdata
  2071  03C0  084F               	movf	motor@tr+1,w
  2072  03C1  00F7               	movwf	dynam@tr+1
  2073  03C2  084E               	movf	motor@tr,w
  2074  03C3  00F6               	movwf	dynam@tr
  2075  03C4  3186  2663  3183   	fcall	_dynam
  2076  03C7                     l2341:
  2077                           
  2078                           ;Q3.c: 510:     }
  2079  03C7  30FF               	movlw	255
  2080  03C8  07F8               	addwf	motor@i,f
  2081  03C9  30FF               	movlw	255
  2082  03CA  3DF9               	addwfc	motor@i+1,f
  2083  03CB  2BAE               	goto	l2335
  2084  03CC                     l274:
  2085  03CC  0008               	return
  2086  03CD                     __end_of_motor:
  2087                           
  2088                           	psect	text8
  2089  0663                     __ptext8:	
  2090 ;; *************** function _dynam *****************
  2091 ;; Defined at:
  2092 ;;		line 206 in file "Q3.c"
  2093 ;; Parameters:    Size  Location     Type
  2094 ;;  dig1data        2    0[COMMON] unsigned short 
  2095 ;;  dig2data        2    2[COMMON] unsigned short 
  2096 ;;  smdata          2    4[COMMON] unsigned short 
  2097 ;;  tr              2    6[COMMON] unsigned int 
  2098 ;; Auto vars:     Size  Location     Type
  2099 ;;  ext             2    6[BANK0 ] unsigned short 
  2100 ;;  j               2    4[BANK0 ] unsigned int 
  2101 ;;  tm              2    2[BANK0 ] unsigned int 
  2102 ;;  smd             2    0[BANK0 ] unsigned short 
  2103 ;; Return value:  Size  Location     Type
  2104 ;;                  1    wreg      void 
  2105 ;; Registers used:
  2106 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2107 ;; Tracked objects:
  2108 ;;		On entry : 0/0
  2109 ;;		On exit  : 0/0
  2110 ;;		Unchanged: 0/0
  2111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2112 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2113 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2115 ;;      Totals:         8       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2116 ;;Total ram usage:       16 bytes
  2117 ;; Hardware stack levels used:    1
  2118 ;; This function calls:
  2119 ;;		Nothing
  2120 ;; This function is called by:
  2121 ;;		_waitSEG
  2122 ;;		_motor
  2123 ;;		_main
  2124 ;;		_clear
  2125 ;;		_waitSEGStop
  2126 ;;		_motorStop
  2127 ;; This function uses a non-reentrant model
  2128 ;;
  2129                           
  2130                           
  2131                           ;psect for function _dynam
  2132  0663                     _dynam:
  2133  0663                     l2029:	
  2134                           ;incstack = 0
  2135                           ; Regs used in _dynam: [wreg-fsr0h+status,2+status,0]
  2136                           
  2137  0663  0020               	movlb	0	; select bank0
  2138  0664  01C0               	clrf	dynam@tm
  2139  0665  01C1               	clrf	dynam@tm+1
  2140                           
  2141                           ;Q3.c: 209:     unsigned short ext=0,smd=0;
  2142  0666  01C4               	clrf	dynam@ext
  2143  0667  01C5               	clrf	dynam@ext+1
  2144  0668  01BE               	clrf	dynam@smd
  2145  0669  01BF               	clrf	dynam@smd+1
  2146  066A                     l2031:
  2147                           
  2148                           ;Q3.c: 210:     RC7=0;
  2149  066A  138E               	bcf	14,7	;volatile
  2150  066B                     l2033:
  2151                           
  2152                           ;Q3.c: 211:     PORTB=dig1data;
  2153  066B  0870               	movf	dynam@dig1data,w
  2154  066C  008D               	movwf	13	;volatile
  2155  066D                     l2035:
  2156                           
  2157                           ;Q3.c: 212:     RC5=0;RC6=1;
  2158  066D  128E               	bcf	14,5	;volatile
  2159  066E                     l2037:
  2160  066E  170E               	bsf	14,6	;volatile
  2161  066F                     l2039:
  2162                           
  2163                           ;Q3.c: 213:     if(tr==5){tm=3000;}
  2164  066F  3005               	movlw	5
  2165  0670  0676               	xorwf	dynam@tr,w
  2166  0671  0477               	iorwf	dynam@tr+1,w
  2167  0672  1D03               	btfss	3,2
  2168  0673  2E75               	goto	u1551
  2169  0674  2E76               	goto	u1550
  2170  0675                     u1551:
  2171  0675  2E7B               	goto	l2043
  2172  0676                     u1550:
  2173  0676                     l2041:
  2174  0676  30B8               	movlw	184
  2175  0677  00C0               	movwf	dynam@tm
  2176  0678  300B               	movlw	11
  2177  0679  00C1               	movwf	dynam@tm+1
  2178  067A  2E7F               	goto	l112
  2179  067B                     l2043:
  2180  067B  30E8               	movlw	232
  2181  067C  00C0               	movwf	dynam@tm
  2182  067D  3003               	movlw	3
  2183  067E  00C1               	movwf	dynam@tm+1
  2184  067F                     l112:
  2185                           
  2186                           ;Q3.c: 215:     for(j=tm;j>0;--j);
  2187  067F  0841               	movf	dynam@tm+1,w
  2188  0680  00C3               	movwf	dynam@j+1
  2189  0681  0840               	movf	dynam@tm,w
  2190  0682  00C2               	movwf	dynam@j
  2191  0683                     l2045:
  2192  0683  0842               	movf	dynam@j,w
  2193  0684  0443               	iorwf	dynam@j+1,w
  2194  0685  1D03               	btfss	3,2
  2195  0686  2E88               	goto	u1561
  2196  0687  2E89               	goto	u1560
  2197  0688                     u1561:
  2198  0688  2E8A               	goto	l2049
  2199  0689                     u1560:
  2200  0689  2E8F               	goto	l114
  2201  068A                     l2049:
  2202  068A  3001               	movlw	1
  2203  068B  02C2               	subwf	dynam@j,f
  2204  068C  3000               	movlw	0
  2205  068D  3BC3               	subwfb	dynam@j+1,f
  2206  068E  2E83               	goto	l2045
  2207  068F                     l114:
  2208                           
  2209                           ;Q3.c: 216:     RC5=0;RC6=0;
  2210  068F  128E               	bcf	14,5	;volatile
  2211  0690  130E               	bcf	14,6	;volatile
  2212  0691                     l2053:
  2213                           
  2214                           ;Q3.c: 217:     PORTB=dig2data;
  2215  0691  0872               	movf	dynam@dig2data,w
  2216  0692  008D               	movwf	13	;volatile
  2217  0693                     l2055:
  2218                           
  2219                           ;Q3.c: 218:     RC6=0;RC5=1;
  2220  0693  130E               	bcf	14,6	;volatile
  2221  0694                     l2057:
  2222  0694  168E               	bsf	14,5	;volatile
  2223  0695                     l2059:
  2224                           
  2225                           ;Q3.c: 219:     if(tr==5){tm=3000;}
  2226  0695  3005               	movlw	5
  2227  0696  0676               	xorwf	dynam@tr,w
  2228  0697  0477               	iorwf	dynam@tr+1,w
  2229  0698  1D03               	btfss	3,2
  2230  0699  2E9B               	goto	u1571
  2231  069A  2E9C               	goto	u1570
  2232  069B                     u1571:
  2233  069B  2EA1               	goto	l2063
  2234  069C                     u1570:
  2235  069C                     l2061:
  2236  069C  30B8               	movlw	184
  2237  069D  00C0               	movwf	dynam@tm
  2238  069E  300B               	movlw	11
  2239  069F  00C1               	movwf	dynam@tm+1
  2240  06A0  2EA5               	goto	l116
  2241  06A1                     l2063:
  2242  06A1  30E8               	movlw	232
  2243  06A2  00C0               	movwf	dynam@tm
  2244  06A3  3003               	movlw	3
  2245  06A4  00C1               	movwf	dynam@tm+1
  2246  06A5                     l116:
  2247                           
  2248                           ;Q3.c: 221:     for(j=tm;j>0;--j);
  2249  06A5  0841               	movf	dynam@tm+1,w
  2250  06A6  00C3               	movwf	dynam@j+1
  2251  06A7  0840               	movf	dynam@tm,w
  2252  06A8  00C2               	movwf	dynam@j
  2253  06A9                     l2065:
  2254  06A9  0842               	movf	dynam@j,w
  2255  06AA  0443               	iorwf	dynam@j+1,w
  2256  06AB  1D03               	btfss	3,2
  2257  06AC  2EAE               	goto	u1581
  2258  06AD  2EAF               	goto	u1580
  2259  06AE                     u1581:
  2260  06AE  2EB0               	goto	l2069
  2261  06AF                     u1580:
  2262  06AF  2EB5               	goto	l118
  2263  06B0                     l2069:
  2264  06B0  3001               	movlw	1
  2265  06B1  02C2               	subwf	dynam@j,f
  2266  06B2  3000               	movlw	0
  2267  06B3  3BC3               	subwfb	dynam@j+1,f
  2268  06B4  2EA9               	goto	l2065
  2269  06B5                     l118:
  2270                           
  2271                           ;Q3.c: 222:     RC5=0;RC6=0;
  2272  06B5  128E               	bcf	14,5	;volatile
  2273  06B6  130E               	bcf	14,6	;volatile
  2274                           
  2275                           ;Q3.c: 223:     switch(smdata){
  2276  06B7  2FBC               	goto	l2179
  2277  06B8                     l2073:
  2278                           
  2279                           ;Q3.c: 225:                 PORTB=0x00;smd=(0x01|0x02|0x04|0x08|0x10|0x20);
  2280  06B8  018D               	clrf	13	;volatile
  2281  06B9                     l2075:
  2282  06B9                     l2077:
  2283                           
  2284                           ;Q3.c: 226:                 RC7=0;RC7=1;RC7=0;
  2285  06B9  138E               	bcf	14,7	;volatile
  2286  06BA                     l2079:
  2287  06BA  178E               	bsf	14,7	;volatile
  2288  06BB                     l2081:
  2289  06BB  138E               	bcf	14,7	;volatile
  2290                           
  2291                           ;Q3.c: 227:                 break;
  2292  06BC  2FCC               	goto	l135
  2293  06BD                     l2083:
  2294                           
  2295                           ;Q3.c: 229:                 if(flg==1)cw=0;flg=0;
  2296  06BD  0336               	decf	_flg,w
  2297  06BE  0437               	iorwf	_flg+1,w
  2298  06BF  1D03               	btfss	3,2
  2299  06C0  2EC2               	goto	u1591
  2300  06C1  2EC3               	goto	u1590
  2301  06C2                     u1591:
  2302  06C2  2EC5               	goto	l123
  2303  06C3                     u1590:
  2304  06C3                     l2085:
  2305  06C3  01B4               	clrf	_cw
  2306  06C4  01B5               	clrf	_cw+1
  2307  06C5                     l123:
  2308  06C5  01B6               	clrf	_flg
  2309  06C6  01B7               	clrf	_flg+1
  2310  06C7                     l2087:
  2311                           
  2312                           ;Q3.c: 230:                 if((cw==0)&&(ext==0)){cw=1;ccw=0;ext=1;PORTB=smd=0x09;}
  2313  06C7  0834               	movf	_cw,w
  2314  06C8  0435               	iorwf	_cw+1,w
  2315  06C9  1D03               	btfss	3,2
  2316  06CA  2ECC               	goto	u1601
  2317  06CB  2ECD               	goto	u1600
  2318  06CC                     u1601:
  2319  06CC  2EE3               	goto	l2099
  2320  06CD                     u1600:
  2321  06CD                     l2089:
  2322  06CD  0844               	movf	dynam@ext,w
  2323  06CE  0445               	iorwf	dynam@ext+1,w
  2324  06CF  1D03               	btfss	3,2
  2325  06D0  2ED2               	goto	u1611
  2326  06D1  2ED3               	goto	u1610
  2327  06D2                     u1611:
  2328  06D2  2EE3               	goto	l2099
  2329  06D3                     u1610:
  2330  06D3                     l2091:
  2331  06D3  3001               	movlw	1
  2332  06D4  00B4               	movwf	_cw
  2333  06D5  3000               	movlw	0
  2334  06D6  00B5               	movwf	_cw+1
  2335  06D7                     l2093:
  2336  06D7  01B2               	clrf	_ccw
  2337  06D8  01B3               	clrf	_ccw+1
  2338  06D9                     l2095:
  2339  06D9  3001               	movlw	1
  2340  06DA  00C4               	movwf	dynam@ext
  2341  06DB  3000               	movlw	0
  2342  06DC  00C5               	movwf	dynam@ext+1
  2343  06DD                     l2097:
  2344  06DD  3009               	movlw	9
  2345  06DE  00BE               	movwf	dynam@smd
  2346  06DF  3000               	movlw	0
  2347  06E0  00BF               	movwf	dynam@smd+1
  2348  06E1  083E               	movf	dynam@smd,w
  2349  06E2  008D               	movwf	13	;volatile
  2350  06E3                     l2099:
  2351                           
  2352                           ;Q3.c: 231:                 if((cw==1)&&(ext==0)){cw=2;ccw=3;ext=1;PORTB=smd=0x0C;}
  2353  06E3  0334               	decf	_cw,w
  2354  06E4  0435               	iorwf	_cw+1,w
  2355  06E5  1D03               	btfss	3,2
  2356  06E6  2EE8               	goto	u1621
  2357  06E7  2EE9               	goto	u1620
  2358  06E8                     u1621:
  2359  06E8  2F01               	goto	l2105
  2360  06E9                     u1620:
  2361  06E9                     l2101:
  2362  06E9  0844               	movf	dynam@ext,w
  2363  06EA  0445               	iorwf	dynam@ext+1,w
  2364  06EB  1D03               	btfss	3,2
  2365  06EC  2EEE               	goto	u1631
  2366  06ED  2EEF               	goto	u1630
  2367  06EE                     u1631:
  2368  06EE  2F01               	goto	l2105
  2369  06EF                     u1630:
  2370  06EF                     l2103:
  2371  06EF  3002               	movlw	2
  2372  06F0  00B4               	movwf	_cw
  2373  06F1  3000               	movlw	0
  2374  06F2  00B5               	movwf	_cw+1
  2375  06F3  3003               	movlw	3
  2376  06F4  00B2               	movwf	_ccw
  2377  06F5  3000               	movlw	0
  2378  06F6  00B3               	movwf	_ccw+1
  2379  06F7  3001               	movlw	1
  2380  06F8  00C4               	movwf	dynam@ext
  2381  06F9  3000               	movlw	0
  2382  06FA  00C5               	movwf	dynam@ext+1
  2383  06FB  300C               	movlw	12
  2384  06FC  00BE               	movwf	dynam@smd
  2385  06FD  3000               	movlw	0
  2386  06FE  00BF               	movwf	dynam@smd+1
  2387  06FF  083E               	movf	dynam@smd,w
  2388  0700  008D               	movwf	13	;volatile
  2389  0701                     l2105:
  2390                           
  2391                           ;Q3.c: 232:                 if((cw==2)&&(ext==0)){cw=3;ccw=2;ext=1;PORTB=smd=0x06;}
  2392  0701  3002               	movlw	2
  2393  0702  0634               	xorwf	_cw,w
  2394  0703  0435               	iorwf	_cw+1,w
  2395  0704  1D03               	btfss	3,2
  2396  0705  2F07               	goto	u1641
  2397  0706  2F08               	goto	u1640
  2398  0707                     u1641:
  2399  0707  2F20               	goto	l2111
  2400  0708                     u1640:
  2401  0708                     l2107:
  2402  0708  0844               	movf	dynam@ext,w
  2403  0709  0445               	iorwf	dynam@ext+1,w
  2404  070A  1D03               	btfss	3,2
  2405  070B  2F0D               	goto	u1651
  2406  070C  2F0E               	goto	u1650
  2407  070D                     u1651:
  2408  070D  2F20               	goto	l2111
  2409  070E                     u1650:
  2410  070E                     l2109:
  2411  070E  3003               	movlw	3
  2412  070F  00B4               	movwf	_cw
  2413  0710  3000               	movlw	0
  2414  0711  00B5               	movwf	_cw+1
  2415  0712  3002               	movlw	2
  2416  0713  00B2               	movwf	_ccw
  2417  0714  3000               	movlw	0
  2418  0715  00B3               	movwf	_ccw+1
  2419  0716  3001               	movlw	1
  2420  0717  00C4               	movwf	dynam@ext
  2421  0718  3000               	movlw	0
  2422  0719  00C5               	movwf	dynam@ext+1
  2423  071A  3006               	movlw	6
  2424  071B  00BE               	movwf	dynam@smd
  2425  071C  3000               	movlw	0
  2426  071D  00BF               	movwf	dynam@smd+1
  2427  071E  083E               	movf	dynam@smd,w
  2428  071F  008D               	movwf	13	;volatile
  2429  0720                     l2111:
  2430                           
  2431                           ;Q3.c: 233:                 if((cw==3)&&(ext==0)){cw=0;ccw=1;ext=1;PORTB=smd=0x03;}
  2432  0720  3003               	movlw	3
  2433  0721  0634               	xorwf	_cw,w
  2434  0722  0435               	iorwf	_cw+1,w
  2435  0723  1D03               	btfss	3,2
  2436  0724  2F26               	goto	u1661
  2437  0725  2F27               	goto	u1660
  2438  0726                     u1661:
  2439  0726  2EB9               	goto	l2077
  2440  0727                     u1660:
  2441  0727                     l2113:
  2442  0727  0844               	movf	dynam@ext,w
  2443  0728  0445               	iorwf	dynam@ext+1,w
  2444  0729  1D03               	btfss	3,2
  2445  072A  2F2C               	goto	u1671
  2446  072B  2F2D               	goto	u1670
  2447  072C                     u1671:
  2448  072C  2EB9               	goto	l2077
  2449  072D                     u1670:
  2450  072D                     l2115:
  2451  072D  01B4               	clrf	_cw
  2452  072E  01B5               	clrf	_cw+1
  2453  072F                     l2117:
  2454  072F  3001               	movlw	1
  2455  0730  00B2               	movwf	_ccw
  2456  0731  3000               	movlw	0
  2457  0732  00B3               	movwf	_ccw+1
  2458  0733                     l2119:
  2459  0733                     l2121:
  2460  0733  3003               	movlw	3
  2461  0734  00BE               	movwf	dynam@smd
  2462  0735  3000               	movlw	0
  2463  0736  00BF               	movwf	dynam@smd+1
  2464  0737  083E               	movf	dynam@smd,w
  2465  0738  008D               	movwf	13	;volatile
  2466  0739  2EB9               	goto	l2077
  2467  073A                     l2129:
  2468                           
  2469                           ;Q3.c: 237:                 if(flg==1)ccw=0;flg=0;
  2470  073A  0336               	decf	_flg,w
  2471  073B  0437               	iorwf	_flg+1,w
  2472  073C  1D03               	btfss	3,2
  2473  073D  2F3F               	goto	u1681
  2474  073E  2F40               	goto	u1680
  2475  073F                     u1681:
  2476  073F  2F42               	goto	l129
  2477  0740                     u1680:
  2478  0740                     l2131:
  2479  0740  01B2               	clrf	_ccw
  2480  0741  01B3               	clrf	_ccw+1
  2481  0742                     l129:
  2482  0742  01B6               	clrf	_flg
  2483  0743  01B7               	clrf	_flg+1
  2484  0744                     l2133:
  2485                           
  2486                           ;Q3.c: 238:                 if((ccw==0)&&(ext==0)){ccw=1;cw=0;ext=1;PORTB=smd=0x03;}
  2487  0744  0832               	movf	_ccw,w
  2488  0745  0433               	iorwf	_ccw+1,w
  2489  0746  1D03               	btfss	3,2
  2490  0747  2F49               	goto	u1691
  2491  0748  2F4A               	goto	u1690
  2492  0749                     u1691:
  2493  0749  2F60               	goto	l2145
  2494  074A                     u1690:
  2495  074A                     l2135:
  2496  074A  0844               	movf	dynam@ext,w
  2497  074B  0445               	iorwf	dynam@ext+1,w
  2498  074C  1D03               	btfss	3,2
  2499  074D  2F4F               	goto	u1701
  2500  074E  2F50               	goto	u1700
  2501  074F                     u1701:
  2502  074F  2F60               	goto	l2145
  2503  0750                     u1700:
  2504  0750                     l2137:
  2505  0750  3001               	movlw	1
  2506  0751  00B2               	movwf	_ccw
  2507  0752  3000               	movlw	0
  2508  0753  00B3               	movwf	_ccw+1
  2509  0754                     l2139:
  2510  0754  01B4               	clrf	_cw
  2511  0755  01B5               	clrf	_cw+1
  2512  0756                     l2141:
  2513  0756  3001               	movlw	1
  2514  0757  00C4               	movwf	dynam@ext
  2515  0758  3000               	movlw	0
  2516  0759  00C5               	movwf	dynam@ext+1
  2517  075A                     l2143:
  2518  075A  3003               	movlw	3
  2519  075B  00BE               	movwf	dynam@smd
  2520  075C  3000               	movlw	0
  2521  075D  00BF               	movwf	dynam@smd+1
  2522  075E  083E               	movf	dynam@smd,w
  2523  075F  008D               	movwf	13	;volatile
  2524  0760                     l2145:
  2525                           
  2526                           ;Q3.c: 239:                 if((ccw==1)&&(ext==0)){ccw=2;cw=3;ext=1;PORTB=smd=0x06;}
  2527  0760  0332               	decf	_ccw,w
  2528  0761  0433               	iorwf	_ccw+1,w
  2529  0762  1D03               	btfss	3,2
  2530  0763  2F65               	goto	u1711
  2531  0764  2F66               	goto	u1710
  2532  0765                     u1711:
  2533  0765  2F7E               	goto	l2151
  2534  0766                     u1710:
  2535  0766                     l2147:
  2536  0766  0844               	movf	dynam@ext,w
  2537  0767  0445               	iorwf	dynam@ext+1,w
  2538  0768  1D03               	btfss	3,2
  2539  0769  2F6B               	goto	u1721
  2540  076A  2F6C               	goto	u1720
  2541  076B                     u1721:
  2542  076B  2F7E               	goto	l2151
  2543  076C                     u1720:
  2544  076C                     l2149:
  2545  076C  3002               	movlw	2
  2546  076D  00B2               	movwf	_ccw
  2547  076E  3000               	movlw	0
  2548  076F  00B3               	movwf	_ccw+1
  2549  0770  3003               	movlw	3
  2550  0771  00B4               	movwf	_cw
  2551  0772  3000               	movlw	0
  2552  0773  00B5               	movwf	_cw+1
  2553  0774  3001               	movlw	1
  2554  0775  00C4               	movwf	dynam@ext
  2555  0776  3000               	movlw	0
  2556  0777  00C5               	movwf	dynam@ext+1
  2557  0778  3006               	movlw	6
  2558  0779  00BE               	movwf	dynam@smd
  2559  077A  3000               	movlw	0
  2560  077B  00BF               	movwf	dynam@smd+1
  2561  077C  083E               	movf	dynam@smd,w
  2562  077D  008D               	movwf	13	;volatile
  2563  077E                     l2151:
  2564                           
  2565                           ;Q3.c: 240:                 if((ccw==2)&&(ext==0)){ccw=3;cw=2;ext=1;PORTB=smd=0x0C;}
  2566  077E  3002               	movlw	2
  2567  077F  0632               	xorwf	_ccw,w
  2568  0780  0433               	iorwf	_ccw+1,w
  2569  0781  1D03               	btfss	3,2
  2570  0782  2F84               	goto	u1731
  2571  0783  2F85               	goto	u1730
  2572  0784                     u1731:
  2573  0784  2F9D               	goto	l2157
  2574  0785                     u1730:
  2575  0785                     l2153:
  2576  0785  0844               	movf	dynam@ext,w
  2577  0786  0445               	iorwf	dynam@ext+1,w
  2578  0787  1D03               	btfss	3,2
  2579  0788  2F8A               	goto	u1741
  2580  0789  2F8B               	goto	u1740
  2581  078A                     u1741:
  2582  078A  2F9D               	goto	l2157
  2583  078B                     u1740:
  2584  078B                     l2155:
  2585  078B  3003               	movlw	3
  2586  078C  00B2               	movwf	_ccw
  2587  078D  3000               	movlw	0
  2588  078E  00B3               	movwf	_ccw+1
  2589  078F  3002               	movlw	2
  2590  0790  00B4               	movwf	_cw
  2591  0791  3000               	movlw	0
  2592  0792  00B5               	movwf	_cw+1
  2593  0793  3001               	movlw	1
  2594  0794  00C4               	movwf	dynam@ext
  2595  0795  3000               	movlw	0
  2596  0796  00C5               	movwf	dynam@ext+1
  2597  0797  300C               	movlw	12
  2598  0798  00BE               	movwf	dynam@smd
  2599  0799  3000               	movlw	0
  2600  079A  00BF               	movwf	dynam@smd+1
  2601  079B  083E               	movf	dynam@smd,w
  2602  079C  008D               	movwf	13	;volatile
  2603  079D                     l2157:
  2604                           
  2605                           ;Q3.c: 241:                 if((ccw==3)&&(ext==0)){ccw=0;cw=1;ext=1;PORTB=smd=0x09;}
  2606  079D  3003               	movlw	3
  2607  079E  0632               	xorwf	_ccw,w
  2608  079F  0433               	iorwf	_ccw+1,w
  2609  07A0  1D03               	btfss	3,2
  2610  07A1  2FA3               	goto	u1751
  2611  07A2  2FA4               	goto	u1750
  2612  07A3                     u1751:
  2613  07A3  2EB9               	goto	l2077
  2614  07A4                     u1750:
  2615  07A4                     l2159:
  2616  07A4  0844               	movf	dynam@ext,w
  2617  07A5  0445               	iorwf	dynam@ext+1,w
  2618  07A6  1D03               	btfss	3,2
  2619  07A7  2FA9               	goto	u1761
  2620  07A8  2FAA               	goto	u1760
  2621  07A9                     u1761:
  2622  07A9  2EB9               	goto	l2077
  2623  07AA                     u1760:
  2624  07AA                     l2161:
  2625  07AA  01B2               	clrf	_ccw
  2626  07AB  01B3               	clrf	_ccw+1
  2627  07AC                     l2163:
  2628  07AC  3001               	movlw	1
  2629  07AD  00B4               	movwf	_cw
  2630  07AE  3000               	movlw	0
  2631  07AF  00B5               	movwf	_cw+1
  2632  07B0                     l2165:
  2633  07B0                     l2167:
  2634  07B0  3009               	movlw	9
  2635  07B1  00BE               	movwf	dynam@smd
  2636  07B2  3000               	movlw	0
  2637  07B3  00BF               	movwf	dynam@smd+1
  2638  07B4  083E               	movf	dynam@smd,w
  2639  07B5  008D               	movwf	13	;volatile
  2640  07B6  2EB9               	goto	l2077
  2641  07B7                     l2175:
  2642                           
  2643                           ;Q3.c: 245:                 cw=ccw=0;
  2644  07B7  01B2               	clrf	_ccw
  2645  07B8  01B3               	clrf	_ccw+1
  2646  07B9  01B4               	clrf	_cw
  2647  07BA  01B5               	clrf	_cw+1
  2648                           
  2649                           ;Q3.c: 246:                 break;
  2650  07BB  2FCC               	goto	l135
  2651  07BC                     l2179:
  2652                           
  2653                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2654                           ; Switch size 1, requested type "simple"
  2655                           ; Number of cases is 1, Range of values is 0 to 0
  2656                           ; switch strategies available:
  2657                           ; Name         Instructions Cycles
  2658                           ; simple_byte            4     3 (average)
  2659                           ; direct_byte            8     6 (fixed)
  2660                           ; jumptable            260     6 (fixed)
  2661                           ;	Chosen strategy is simple_byte
  2662  07BC  0875               	movf	dynam@smdata+1,w
  2663  07BD  3A00               	xorlw	0	; case 0
  2664  07BE  1903               	skipnz
  2665  07BF  2FC1               	goto	l3075
  2666  07C0  2FB7               	goto	l2175
  2667  07C1                     l3075:
  2668                           
  2669                           ; Switch size 1, requested type "simple"
  2670                           ; Number of cases is 3, Range of values is 0 to 2
  2671                           ; switch strategies available:
  2672                           ; Name         Instructions Cycles
  2673                           ; simple_byte           10     6 (average)
  2674                           ; direct_byte           12     6 (fixed)
  2675                           ; jumptable            260     6 (fixed)
  2676                           ;	Chosen strategy is simple_byte
  2677  07C1  0874               	movf	dynam@smdata,w
  2678  07C2  3A00               	xorlw	0	; case 0
  2679  07C3  1903               	skipnz
  2680  07C4  2EB8               	goto	l2073
  2681  07C5  3A01               	xorlw	1	; case 1
  2682  07C6  1903               	skipnz
  2683  07C7  2EBD               	goto	l2083
  2684  07C8  3A03               	xorlw	3	; case 2
  2685  07C9  1903               	skipnz
  2686  07CA  2F3A               	goto	l2129
  2687  07CB  2FB7               	goto	l2175
  2688  07CC                     l135:
  2689  07CC  0008               	return
  2690  07CD                     __end_of_dynam:
  2691                           
  2692                           	psect	text9
  2693  038A                     __ptext9:	
  2694 ;; *************** function _fclr *****************
  2695 ;; Defined at:
  2696 ;;		line 369 in file "Q3.c"
  2697 ;; Parameters:    Size  Location     Type
  2698 ;;  flg             2    0[COMMON] unsigned short 
  2699 ;; Auto vars:     Size  Location     Type
  2700 ;;		None
  2701 ;; Return value:  Size  Location     Type
  2702 ;;                  1    wreg      void 
  2703 ;; Registers used:
  2704 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2705 ;; Tracked objects:
  2706 ;;		On entry : 0/0
  2707 ;;		On exit  : 0/0
  2708 ;;		Unchanged: 0/0
  2709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2710 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2713 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2714 ;;Total ram usage:        2 bytes
  2715 ;; Hardware stack levels used:    1
  2716 ;; This function calls:
  2717 ;;		Nothing
  2718 ;; This function is called by:
  2719 ;;		_main
  2720 ;;		_kaisu
  2721 ;;		_waitSEGStop
  2722 ;;		_motorStop
  2723 ;;		_buzzStop
  2724 ;; This function uses a non-reentrant model
  2725 ;;
  2726                           
  2727                           
  2728                           ;psect for function _fclr
  2729  038A                     _fclr:
  2730  038A                     l2303:	
  2731                           ;incstack = 0
  2732                           ; Regs used in _fclr: [wreg-fsr0h+status,2+status,0]
  2733                           
  2734                           
  2735                           ;Q3.c: 369: void fclr(unsigned short flg);Q3.c: 370: {;Q3.c: 371:     switch(flg){
  2736  038A  2B98               	goto	l2313
  2737  038B                     l2305:
  2738                           
  2739                           ;Q3.c: 373:                     flag_R=0;
  2740  038B  01FA               	clrf	_flag_R
  2741  038C  01FB               	clrf	_flag_R+1
  2742                           
  2743                           ;Q3.c: 374:                     break;
  2744  038D  2BA8               	goto	l217
  2745  038E                     l2307:
  2746                           
  2747                           ;Q3.c: 376:                     flag_P=0;
  2748  038E  0020               	movlb	0	; select bank0
  2749  038F  01B8               	clrf	_flag_P
  2750  0390  01B9               	clrf	_flag_P+1
  2751                           
  2752                           ;Q3.c: 377:                     break;
  2753  0391  2BA8               	goto	l217
  2754  0392                     l2309:
  2755                           
  2756                           ;Q3.c: 379:                     flag_P=flag_R=0;
  2757  0392  01FA               	clrf	_flag_R
  2758  0393  01FB               	clrf	_flag_R+1
  2759  0394  0020               	movlb	0	; select bank0
  2760  0395  01B8               	clrf	_flag_P
  2761  0396  01B9               	clrf	_flag_P+1
  2762                           
  2763                           ;Q3.c: 380:                     break;
  2764  0397  2BA8               	goto	l217
  2765  0398                     l2313:
  2766                           
  2767                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2768                           ; Switch size 1, requested type "simple"
  2769                           ; Number of cases is 1, Range of values is 0 to 0
  2770                           ; switch strategies available:
  2771                           ; Name         Instructions Cycles
  2772                           ; simple_byte            4     3 (average)
  2773                           ; direct_byte            8     6 (fixed)
  2774                           ; jumptable            260     6 (fixed)
  2775                           ;	Chosen strategy is simple_byte
  2776  0398  0871               	movf	fclr@flg+1,w
  2777  0399  3A00               	xorlw	0	; case 0
  2778  039A  1903               	skipnz
  2779  039B  2B9D               	goto	l3077
  2780  039C  2BA8               	goto	l217
  2781  039D                     l3077:
  2782                           
  2783                           ; Switch size 1, requested type "simple"
  2784                           ; Number of cases is 3, Range of values is 0 to 2
  2785                           ; switch strategies available:
  2786                           ; Name         Instructions Cycles
  2787                           ; simple_byte           10     6 (average)
  2788                           ; direct_byte           12     6 (fixed)
  2789                           ; jumptable            260     6 (fixed)
  2790                           ;	Chosen strategy is simple_byte
  2791  039D  0870               	movf	fclr@flg,w
  2792  039E  3A00               	xorlw	0	; case 0
  2793  039F  1903               	skipnz
  2794  03A0  2B8B               	goto	l2305
  2795  03A1  3A01               	xorlw	1	; case 1
  2796  03A2  1903               	skipnz
  2797  03A3  2B8E               	goto	l2307
  2798  03A4  3A03               	xorlw	3	; case 2
  2799  03A5  1903               	skipnz
  2800  03A6  2B92               	goto	l2309
  2801  03A7  2BA8               	goto	l217
  2802  03A8                     l217:
  2803  03A8  0008               	return
  2804  03A9                     __end_of_fclr:
  2805  007E                     btemp	set	126	;btemp
  2806  007E                     wtemp0	set	126
  2807                           
  2808                           	psect	config
  2809                           
  2810                           ;Config register CONFIG1 @ 0x8007
  2811                           ;	Oscillator Selection
  2812                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  2813                           ;	Watchdog Timer Enable
  2814                           ;	WDTE = OFF, WDT disabled
  2815                           ;	Power-up Timer Enable
  2816                           ;	PWRTE = OFF, PWRT disabled
  2817                           ;	MCLR Pin Function Select
  2818                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  2819                           ;	Flash Program Memory Code Protection
  2820                           ;	CP = OFF, Program memory code protection is disabled
  2821                           ;	Data Memory Code Protection
  2822                           ;	CPD = OFF, Data memory code protection is disabled
  2823                           ;	Brown-out Reset Enable
  2824                           ;	BOREN = OFF, Brown-out Reset disabled
  2825                           ;	Clock Out Enable
  2826                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  2827                           ;	Internal/External Switchover
  2828                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2829                           ;	Fail-Safe Clock Monitor Enable
  2830                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2831  8007                     	org	32775
  2832  8007  09E4               	dw	2532
  2833                           
  2834                           ;Config register CONFIG2 @ 0x8008
  2835                           ;	Flash Memory Self-Write Protection
  2836                           ;	WRT = OFF, Write protection off
  2837                           ;	Voltage Regulator Capacitor Enable
  2838                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
  2839                           ;	PLL Enable
  2840                           ;	PLLEN = OFF, 4x PLL disabled
  2841                           ;	Stack Overflow/Underflow Reset Enable
  2842                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  2843                           ;	Brown-out Reset Voltage Selection
  2844                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  2845                           ;	Low-Voltage Programming Enable
  2846                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  2847  8008                     	org	32776
  2848  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    0
    Data        156
    BSS         34
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      14
    BANK0            80     42      80
    BANK1            80      0      76
    BANK2            80      0      72
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_motor
    _main->_tact
    _main->_waitSEG
    _waitSEG->___lwdiv
    _waitSEG->_dynam
    _tact->_tactsw
    _motor->_dynam

Critical Paths under _main in BANK0

    _main->_motor
    _waitSEG->_dynam
    _motor->_dynam

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                24    24      0   14202
                                             18 BANK0     24    24      0
                              _dynam
                               _fclr
                              _motor
                           _portinit
                               _tact
                            _waitSEG
                             _zenoff
 ---------------------------------------------------------------------------------
 (1) _zenoff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _waitSEG                                              8     2      6    4240
                                              8 COMMON     2     2      0
                                              8 BANK0      6     0      6
                            ___lwdiv
                              _dynam
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     466
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _tact                                                 2     0      2     898
                                              8 COMMON     2     0      2
                             _tactsw
 ---------------------------------------------------------------------------------
 (2) _tactsw                                               8     8      0     116
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 (1) _portinit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motor                                               12     2     10    4099
                                              8 COMMON     2     2      0
                                              8 BANK0     10     0     10
                              _dynam
 ---------------------------------------------------------------------------------
 (2) _dynam                                               16     8      8    3183
                                              0 COMMON     8     0      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (1) _fclr                                                 2     0      2    1770
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _dynam
   _fclr
   _motor
     _dynam
   _portinit
   _tact
     _tactsw
   _waitSEG
     ___lwdiv
     _dynam
   _zenoff

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2A      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      4C       7       95.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      48       9       90.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      F2      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      F2      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Jun 01 17:15:21 2021

                     l95 0389                       _cw 0034                      l112 067F  
                    l114 068F                      l123 06C5                      l116 06A5  
                    l108 0376                      l118 06B5                      l135 07CC  
                    l208 050A                      l217 03A8                      l129 0742  
                    l351 05E0                      l344 0560                      l193 0479  
                    l274 03CC                      l258 0400                      l346 056D  
                    l356 064F                      l349 05F2                      l791 043C  
                    _RA0 0060                      _RA1 0061                      _RA2 0062  
                    _RC0 0070                      _RC1 0071                      _RC2 0072  
                    _RC5 0075                      _RC6 0076                      _RC7 0077  
                    _ccw 0032                      _flg 0036                      wreg 0009  
                   l2101 06E9                     l2111 0720                     l2103 06EF  
                   l2031 066A                     l2121 0733                     l2113 0727  
                   l2105 0701                     l2041 0676                     l2033 066B  
                   l2201 0474                     l2131 0740                     l2115 072D  
                   l2107 0708                     l2043 067B                     l2035 066D  
                   l2211 0411                     l2203 0401                     l2141 0756  
                   l2133 0744                     l2117 072F                     l2109 070E  
                   l2061 069C                     l2053 0691                     l2045 0683  
                   l2037 066E                     l2029 0663                     l2221 042D  
                   l2213 0415                     l2205 0403                     l2303 038A  
                   l2151 077E                     l2143 075A                     l2135 074A  
                   l2119 0733                     l2063 06A1                     l2055 0693  
                   l2039 066F                     l2231 037A                     l2223 0432  
                   l2215 0419                     l2207 0409                     l2305 038B  
                   l2313 0398                     l2161 07AA                     l2153 0785  
                   l2137 0750                     l2145 0760                     l2129 073A  
                   l2081 06BB                     l2073 06B8                     l2065 06A9  
                   l2057 0694                     l2049 068A                     l2233 037D  
                   l2217 0428                     l2209 040C                     l2225 0438  
                   l2321 03DE                     l2307 038E                     l2163 07AC  
                   l2155 078B                     l2147 0766                     l2139 0754  
                   l2091 06D3                     l2083 06BD                     l2075 06B9  
                   l2059 0695                     l2235 0384                     l2219 042C  
                   l2323 03E2                     l2309 0392                     l2165 07B0  
                   l2157 079D                     l2149 076C                     l2093 06D7  
                   l2085 06C3                     l2077 06B9                     l2069 06B0  
                   l2341 03C7                     l2333 03A9                     l2237 0387  
                   l2229 0377                     l2261 0372                     l2175 07B7  
                   l2167 07B0                     l2159 07A4                     l2095 06D9  
                   l2087 06C7                     l2079 06BA                     l2335 03AE  
                   l2191 0457                     l2271 04C3                     l2327 03E9  
                   l2319 03CD                     l2263 0373                     l2097 06DD  
                   l2089 06CD                     l2193 045C                     l2185 043D  
                   l3073 04FF                     l2281 04DA                     l2273 04C6  
                   l2329 03FB                     l2265 0374                     l3075 07C1  
                   l2099 06E3                     l2179 07BC                     l2339 03B3  
                   l2195 045E                     l2187 0441                     l2291 04F3  
                   l2283 04E0                     l2275 04CC                     l2267 0375  
                   l2259 036E                     l3077 039D                     l2197 0467  
                   l2189 044D                     l2285 04E3                     l2277 04D1  
                   l2269 04C2                     l2287 04E9                     l2279 04D4  
                   l2289 04ED                     l2297 04FA                     l2901 05A5  
                   l2911 0613                     l2903 05AB                     l2913 0619  
                   l2905 05B1                     l2915 0620                     l2907 05F7  
                   l2909 05FB                     l2861 0557                     l2871 0560  
                   l2863 055A                     l2881 0585                     l2873 0560  
                   l2865 0560                     l2891 0585                     l2883 0585  
                   l2875 0565                     l2867 0560                     l2893 0585  
                   l2885 0585                     l2877 0569                     l2869 0560  
                   l2895 0585                     l2887 0585                     l2879 057E  
                   l2897 058A                     l2889 0585                     l2899 058E  
                   u1600 06CD                     u1601 06CC                     u1610 06D3  
                   u1611 06D2                     u1700 0750                     u1620 06E9  
                   u1701 074F                     u1621 06E8                     u1710 0766  
                   u1630 06EF                     u1550 0676                     u1711 0765  
                   u1631 06EE                     u1551 0675                     u1720 076C  
                   u1640 0708                     u1560 0689                     u1721 076B  
                   u1641 0707                     u1561 0688                     u1730 0785  
                   u1650 070E                     u1570 069C                     u1810 0419  
                   u1731 0784                     u1651 070D                     u1571 069B  
                   u1811 0418                     u1740 078B                     u1660 0727  
                   u1580 06AF                     u1900 04E9                     u1741 078A  
                   u1661 0726                     u1581 06AE                     u1901 04E8  
                   u1805 040D                     u1750 07A4                     u1670 072D  
                   u1590 06C3                     u1910 04F3                     u1830 0428  
                   u1751 07A3                     u1671 072C                     u1591 06C2  
                   u1911 04F2                     u1831 0427                     u1760 07AA  
                   u1680 0740                     u1920 04F9                     u1761 07A9  
                   u1681 073F                     u1921 04F8                     u1825 041A  
                   u1690 074A                     u1770 0457                     u1850 0438  
                   u1930 03E8                     u1691 0749                     u1771 0456  
                   u1851 0437                     u1835 0424                     u1931 03E7  
                   u1940 03B2                     u1780 0467                     u2900 058E  
                   u1941 03B1                     u1781 0466                     u1845 042E  
                   u2901 058D                     u1790 0409                     u2910 05AB  
                   u2830 0565                     u1775 0453                     u1791 0408  
                   u2911 05AA                     u2831 0564                     u1880 04CC  
                   u2920 05B1                     u2840 0569                     u1881 04CB  
                   u2921 05B0                     u2841 0568                     u1890 04DA  
                   u2930 05F7                     u2850 056D                     u1891 04D9  
                   u2931 05F6                     u2851 056C                     u2940 05FB  
                   u2860 0574                     u2941 05FA                     u2861 0571  
                   u2950 0619                     u2870 057C                     u2951 0618  
                   u2871 0579                     u2960 0620                     u2961 061F  
                   u2890 058A                     u2874 0576                     u2891 0589  
                   u2884 057E                     _atai 002C                     _fclr 038A  
                   _main 0557                     _num0 0154                     _kisu 00D8  
                   _moja 00CC                     _samf 0120                     _mojf 00C0  
                   _tact 04C2                     _mojh 0054                     _moji 0140  
                   _mojn 0050                     _samp 00A0                     _gusu 00E2  
                   fsr0h 0005                     fsr1h 0007                     indf0 0000  
                   fsr0l 0004                     fsr1l 0006                     btemp 007E  
                   start 0002                    ?_fclr 0070                    ?_main 0070  
                  ?_tact 0078          __end_of___lwdiv 043D                    _PORTA 000C  
                  _PORTB 000D                    _PORTC 000E                    _TRISA 008C  
                  _TRISB 008D                    _TRISC 008E                    _code1 0022  
                  _atai1 002E                    _count 002A                    _dynam 0663  
                  _fugou 0020                    _motor 03A9          __end_of_waitSEG 0401  
                  status 0003                    wtemp0 007E          __initialization 07CD  
           __end_of_fclr 03A9             __end_of_main 0663             __end_of_tact 050B  
                 ??_fclr 0072                   ??_main 007A                   ??_tact 007A  
                 ?_dynam 0070                   ?_motor 0046                   _ANSELA 018C  
                 _ANSELB 018D                   _OSCCON 0099              dynam@smdata 0074  
                 _code10 0024                   _atai10 0030                   _flag_P 0038  
                 _flag_R 007A                ??___lwdiv 0074                   _tactsw 043D  
                 _zenoff 036E                   dynam@j 0042                ??_waitSEG 0078  
                 motor@i 0078         __end_of_portinit 038A  __end_of__initialization 07FD  
         __pcstackCOMMON 0070             __pidataBANK0 0366             __pidataBANK1 050B  
           __pidataBANK2 047A            __end_of_dynam 07CD            __end_of_motor 03CD  
                ??_dynam 0078                  ??_motor 0078               __pbssBANK0 0020  
             __pmaintext 0557                  ?_tactsw 0070                  ?_zenoff 0070  
            waitSEG@seg1 0046              waitSEG@seg2 0048                ?_portinit 0070  
                ___lwdiv 0401                  _code100 0026          __size_of_tactsw 003D  
                __ptext1 036E                  __ptext2 03CD                  __ptext3 0401  
                __ptext4 04C2                  __ptext5 043D                  __ptext6 0377  
                __ptext7 03A9                  __ptext8 0663                  __ptext9 038A  
        __size_of_zenoff 0009                  fclr@flg 0070                  _waitSEG 03CD  
            motor@kakudo 0046                  clrloop0 035B     end_of_initialization 07FD  
            motor@smdata 004C                  dynam@tm 0040                  dynam@tr 0076  
                init_ram 0360                  initloop 0361                  tactsw@a 0076  
                tactsw@b 0072                  tactsw@c 0074                  motor@tr 004E  
             ??_portinit 0070           __end_of_tactsw 047A           __end_of_zenoff 0377  
    start_initialization 07CD              __pdataBANK0 0050              __pdataBANK1 00A0  
            __pdataBANK2 0120                 ??_tactsw 0070                 ??_zenoff 0070  
            __pbssCOMMON 007A                ___latbits 0003            __pcstackBANK0 003E  
       ___lwdiv@dividend 0072                 ?___lwdiv 0070        __size_of_portinit 0013  
               ?_waitSEG 0046         ___lwdiv@quotient 0075           __size_of_dynam 016A  
         __size_of_motor 0024            dynam@dig1data 0070            dynam@dig2data 0072  
              clear_ram0 035A            motor@dig1data 0048            motor@dig2data 004A  
       __size_of___lwdiv 003C                 _code1000 0028          ___lwdiv@divisor 0070  
        ___lwdiv@counter 0077         __size_of_waitSEG 0034                 _flag_sw1 003C  
               _flag_sw2 003A                 _flag_sw3 007C                waitSEG@wt 004A  
          __size_of_fclr 001F            __size_of_main 010C            __size_of_tact 0049  
               _portinit 0377                 dynam@ext 0044                 dynam@smd 003E  
               tact@mode 0078                 waitSEG@i 0078  
