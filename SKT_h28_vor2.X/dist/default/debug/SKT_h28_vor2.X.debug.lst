

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 09 16:37:36 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F1938
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    25                           	dabs	1,0x7E,2
    26  0000                     
    27                           ; Version 2.20
    28                           ; Generated 12/02/2020 GMT
    29                           ; 
    30                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F1938 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0095                     	;# 
    99  0096                     	;# 
   100  0097                     	;# 
   101  0098                     	;# 
   102  0099                     	;# 
   103  009A                     	;# 
   104  009B                     	;# 
   105  009B                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  010C                     	;# 
   110  010D                     	;# 
   111  010E                     	;# 
   112  0110                     	;# 
   113  0111                     	;# 
   114  0112                     	;# 
   115  0113                     	;# 
   116  0114                     	;# 
   117  0115                     	;# 
   118  0116                     	;# 
   119  0117                     	;# 
   120  0118                     	;# 
   121  0119                     	;# 
   122  011A                     	;# 
   123  011B                     	;# 
   124  011D                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0191                     	;# 
   128  0191                     	;# 
   129  0192                     	;# 
   130  0193                     	;# 
   131  0193                     	;# 
   132  0193                     	;# 
   133  0194                     	;# 
   134  0195                     	;# 
   135  0196                     	;# 
   136  0199                     	;# 
   137  019A                     	;# 
   138  019B                     	;# 
   139  019B                     	;# 
   140  019B                     	;# 
   141  019B                     	;# 
   142  019C                     	;# 
   143  019C                     	;# 
   144  019D                     	;# 
   145  019E                     	;# 
   146  019F                     	;# 
   147  020D                     	;# 
   148  0210                     	;# 
   149  0211                     	;# 
   150  0212                     	;# 
   151  0213                     	;# 
   152  0214                     	;# 
   153  0215                     	;# 
   154  0215                     	;# 
   155  0216                     	;# 
   156  0217                     	;# 
   157  0291                     	;# 
   158  0291                     	;# 
   159  0292                     	;# 
   160  0293                     	;# 
   161  0294                     	;# 
   162  0295                     	;# 
   163  0295                     	;# 
   164  0296                     	;# 
   165  0298                     	;# 
   166  0298                     	;# 
   167  0299                     	;# 
   168  029A                     	;# 
   169  029B                     	;# 
   170  029C                     	;# 
   171  029C                     	;# 
   172  029D                     	;# 
   173  029E                     	;# 
   174  029F                     	;# 
   175  0311                     	;# 
   176  0311                     	;# 
   177  0312                     	;# 
   178  0313                     	;# 
   179  0314                     	;# 
   180  0315                     	;# 
   181  0315                     	;# 
   182  0316                     	;# 
   183  0318                     	;# 
   184  0318                     	;# 
   185  0319                     	;# 
   186  031A                     	;# 
   187  031C                     	;# 
   188  031C                     	;# 
   189  031D                     	;# 
   190  031E                     	;# 
   191  0394                     	;# 
   192  0395                     	;# 
   193  0396                     	;# 
   194  0415                     	;# 
   195  0416                     	;# 
   196  0417                     	;# 
   197  041C                     	;# 
   198  041D                     	;# 
   199  041E                     	;# 
   200  0791                     	;# 
   201  0792                     	;# 
   202  0793                     	;# 
   203  0794                     	;# 
   204  0795                     	;# 
   205  0798                     	;# 
   206  0799                     	;# 
   207  07A0                     	;# 
   208  07A1                     	;# 
   209  07A3                     	;# 
   210  07A4                     	;# 
   211  07A6                     	;# 
   212  07A7                     	;# 
   213  07A9                     	;# 
   214  07AA                     	;# 
   215  0FE4                     	;# 
   216  0FE5                     	;# 
   217  0FE6                     	;# 
   218  0FE7                     	;# 
   219  0FE8                     	;# 
   220  0FE9                     	;# 
   221  0FEA                     	;# 
   222  0FEB                     	;# 
   223  0FED                     	;# 
   224  0FEE                     	;# 
   225  0FEF                     	;# 
   226  0000                     	;# 
   227  0001                     	;# 
   228  0002                     	;# 
   229  0003                     	;# 
   230  0004                     	;# 
   231  0005                     	;# 
   232  0006                     	;# 
   233  0007                     	;# 
   234  0008                     	;# 
   235  0009                     	;# 
   236  000A                     	;# 
   237  000B                     	;# 
   238  000C                     	;# 
   239  000D                     	;# 
   240  000E                     	;# 
   241  0010                     	;# 
   242  0011                     	;# 
   243  0012                     	;# 
   244  0013                     	;# 
   245  0015                     	;# 
   246  0016                     	;# 
   247  0016                     	;# 
   248  0017                     	;# 
   249  0018                     	;# 
   250  0019                     	;# 
   251  001A                     	;# 
   252  001B                     	;# 
   253  001C                     	;# 
   254  001E                     	;# 
   255  001F                     	;# 
   256  008C                     	;# 
   257  008D                     	;# 
   258  008E                     	;# 
   259  0090                     	;# 
   260  0091                     	;# 
   261  0092                     	;# 
   262  0093                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009B                     	;# 
   271  009C                     	;# 
   272  009D                     	;# 
   273  009E                     	;# 
   274  010C                     	;# 
   275  010D                     	;# 
   276  010E                     	;# 
   277  0110                     	;# 
   278  0111                     	;# 
   279  0112                     	;# 
   280  0113                     	;# 
   281  0114                     	;# 
   282  0115                     	;# 
   283  0116                     	;# 
   284  0117                     	;# 
   285  0118                     	;# 
   286  0119                     	;# 
   287  011A                     	;# 
   288  011B                     	;# 
   289  011D                     	;# 
   290  018C                     	;# 
   291  018D                     	;# 
   292  0191                     	;# 
   293  0191                     	;# 
   294  0192                     	;# 
   295  0193                     	;# 
   296  0193                     	;# 
   297  0193                     	;# 
   298  0194                     	;# 
   299  0195                     	;# 
   300  0196                     	;# 
   301  0199                     	;# 
   302  019A                     	;# 
   303  019B                     	;# 
   304  019B                     	;# 
   305  019B                     	;# 
   306  019B                     	;# 
   307  019C                     	;# 
   308  019C                     	;# 
   309  019D                     	;# 
   310  019E                     	;# 
   311  019F                     	;# 
   312  020D                     	;# 
   313  0210                     	;# 
   314  0211                     	;# 
   315  0212                     	;# 
   316  0213                     	;# 
   317  0214                     	;# 
   318  0215                     	;# 
   319  0215                     	;# 
   320  0216                     	;# 
   321  0217                     	;# 
   322  0291                     	;# 
   323  0291                     	;# 
   324  0292                     	;# 
   325  0293                     	;# 
   326  0294                     	;# 
   327  0295                     	;# 
   328  0295                     	;# 
   329  0296                     	;# 
   330  0298                     	;# 
   331  0298                     	;# 
   332  0299                     	;# 
   333  029A                     	;# 
   334  029B                     	;# 
   335  029C                     	;# 
   336  029C                     	;# 
   337  029D                     	;# 
   338  029E                     	;# 
   339  029F                     	;# 
   340  0311                     	;# 
   341  0311                     	;# 
   342  0312                     	;# 
   343  0313                     	;# 
   344  0314                     	;# 
   345  0315                     	;# 
   346  0315                     	;# 
   347  0316                     	;# 
   348  0318                     	;# 
   349  0318                     	;# 
   350  0319                     	;# 
   351  031A                     	;# 
   352  031C                     	;# 
   353  031C                     	;# 
   354  031D                     	;# 
   355  031E                     	;# 
   356  0394                     	;# 
   357  0395                     	;# 
   358  0396                     	;# 
   359  0415                     	;# 
   360  0416                     	;# 
   361  0417                     	;# 
   362  041C                     	;# 
   363  041D                     	;# 
   364  041E                     	;# 
   365  0791                     	;# 
   366  0792                     	;# 
   367  0793                     	;# 
   368  0794                     	;# 
   369  0795                     	;# 
   370  0798                     	;# 
   371  0799                     	;# 
   372  07A0                     	;# 
   373  07A1                     	;# 
   374  07A3                     	;# 
   375  07A4                     	;# 
   376  07A6                     	;# 
   377  07A7                     	;# 
   378  07A9                     	;# 
   379  07AA                     	;# 
   380  0FE4                     	;# 
   381  0FE5                     	;# 
   382  0FE6                     	;# 
   383  0FE7                     	;# 
   384  0FE8                     	;# 
   385  0FE9                     	;# 
   386  0FEA                     	;# 
   387  0FEB                     	;# 
   388  0FED                     	;# 
   389  0FEE                     	;# 
   390  0FEF                     	;# 
   391                           
   392                           	psect	idataBANK0
   393  04A4                     __pidataBANK0:
   394                           
   395                           ;initializer for _kisu
   396  04A4  3406               	retlw	6
   397  04A5  3400               	retlw	0
   398  04A6  344F               	retlw	79
   399  04A7  3400               	retlw	0
   400  04A8  346D               	retlw	109
   401  04A9  3400               	retlw	0
   402  04AA  3427               	retlw	39
   403  04AB  3400               	retlw	0
   404  04AC  346F               	retlw	111
   405  04AD  3400               	retlw	0
   406                           
   407                           ;initializer for _gusu
   408  04AE  343F               	retlw	63
   409  04AF  3400               	retlw	0
   410  04B0  345B               	retlw	91
   411  04B1  3400               	retlw	0
   412  04B2  3466               	retlw	102
   413  04B3  3400               	retlw	0
   414  04B4  347D               	retlw	125
   415  04B5  3400               	retlw	0
   416  04B6  347F               	retlw	127
   417  04B7  3400               	retlw	0
   418                           
   419                           ;initializer for _mojn
   420  04B8  3454               	retlw	84
   421  04B9  3400               	retlw	0
   422  04BA  3473               	retlw	115
   423  04BB  3400               	retlw	0
   424                           
   425                           ;initializer for _mojh
   426  04BC  3476               	retlw	118
   427  04BD  3400               	retlw	0
   428  04BE  3438               	retlw	56
   429  04BF  3400               	retlw	0
   430                           
   431                           	psect	idataBANK1
   432  059D                     __pidataBANK1:
   433                           
   434                           ;initializer for _samp
   435  059D  343F               	retlw	63
   436  059E  3400               	retlw	0
   437  059F  3406               	retlw	6
   438  05A0  3400               	retlw	0
   439  05A1  345B               	retlw	91
   440  05A2  3400               	retlw	0
   441  05A3  344F               	retlw	79
   442  05A4  3400               	retlw	0
   443  05A5  3466               	retlw	102
   444  05A6  3400               	retlw	0
   445  05A7  346D               	retlw	109
   446  05A8  3400               	retlw	0
   447  05A9  347D               	retlw	125
   448  05AA  3400               	retlw	0
   449  05AB  3427               	retlw	39
   450  05AC  3400               	retlw	0
   451  05AD  347F               	retlw	127
   452  05AE  3400               	retlw	0
   453  05AF  346F               	retlw	111
   454  05B0  3400               	retlw	0
   455  05B1  345F               	retlw	95
   456  05B2  3400               	retlw	0
   457  05B3  347C               	retlw	124
   458  05B4  3400               	retlw	0
   459  05B5  3458               	retlw	88
   460  05B6  3400               	retlw	0
   461  05B7  345E               	retlw	94
   462  05B8  3400               	retlw	0
   463  05B9  3479               	retlw	121
   464  05BA  3400               	retlw	0
   465  05BB  3471               	retlw	113
   466  05BC  3400               	retlw	0
   467                           
   468                           ;initializer for _num0
   469  05BD  343F               	retlw	63
   470  05BE  3400               	retlw	0
   471  05BF  3406               	retlw	6
   472  05C0  3400               	retlw	0
   473  05C1  345B               	retlw	91
   474  05C2  3400               	retlw	0
   475  05C3  344F               	retlw	79
   476  05C4  3400               	retlw	0
   477  05C5  3466               	retlw	102
   478  05C6  3400               	retlw	0
   479  05C7  346D               	retlw	109
   480  05C8  3400               	retlw	0
   481  05C9  347D               	retlw	125
   482  05CA  3400               	retlw	0
   483  05CB  3427               	retlw	39
   484  05CC  3400               	retlw	0
   485  05CD  347F               	retlw	127
   486  05CE  3400               	retlw	0
   487  05CF  346F               	retlw	111
   488  05D0  3400               	retlw	0
   489                           
   490                           ;initializer for _mojf
   491  05D1  3471               	retlw	113
   492  05D2  3400               	retlw	0
   493  05D3  3479               	retlw	121
   494  05D4  3400               	retlw	0
   495  05D5  345E               	retlw	94
   496  05D6  3400               	retlw	0
   497  05D7  3458               	retlw	88
   498  05D8  3400               	retlw	0
   499  05D9  347C               	retlw	124
   500  05DA  3400               	retlw	0
   501  05DB  345F               	retlw	95
   502  05DC  3400               	retlw	0
   503                           
   504                           ;initializer for _moja
   505  05DD  345F               	retlw	95
   506  05DE  3400               	retlw	0
   507  05DF  347C               	retlw	124
   508  05E0  3400               	retlw	0
   509  05E1  3458               	retlw	88
   510  05E2  3400               	retlw	0
   511  05E3  345E               	retlw	94
   512  05E4  3400               	retlw	0
   513  05E5  3479               	retlw	121
   514  05E6  3400               	retlw	0
   515  05E7  3471               	retlw	113
   516  05E8  3400               	retlw	0
   517                           
   518                           	psect	idataBANK2
   519  04E0                     __pidataBANK2:
   520                           
   521                           ;initializer for _samf
   522  04E0  3471               	retlw	113
   523  04E1  3400               	retlw	0
   524  04E2  3479               	retlw	121
   525  04E3  3400               	retlw	0
   526  04E4  345E               	retlw	94
   527  04E5  3400               	retlw	0
   528  04E6  3458               	retlw	88
   529  04E7  3400               	retlw	0
   530  04E8  347C               	retlw	124
   531  04E9  3400               	retlw	0
   532  04EA  345F               	retlw	95
   533  04EB  3400               	retlw	0
   534  04EC  346F               	retlw	111
   535  04ED  3400               	retlw	0
   536  04EE  347F               	retlw	127
   537  04EF  3400               	retlw	0
   538  04F0  3427               	retlw	39
   539  04F1  3400               	retlw	0
   540  04F2  347D               	retlw	125
   541  04F3  3400               	retlw	0
   542  04F4  346D               	retlw	109
   543  04F5  3400               	retlw	0
   544  04F6  3466               	retlw	102
   545  04F7  3400               	retlw	0
   546  04F8  344F               	retlw	79
   547  04F9  3400               	retlw	0
   548  04FA  345B               	retlw	91
   549  04FB  3400               	retlw	0
   550  04FC  3406               	retlw	6
   551  04FD  3400               	retlw	0
   552  04FE  343F               	retlw	63
   553  04FF  3400               	retlw	0
   554                           
   555                           ;initializer for _moji
   556  0500  345F               	retlw	95
   557  0501  3400               	retlw	0
   558  0502  347C               	retlw	124
   559  0503  3400               	retlw	0
   560  0504  3458               	retlw	88
   561  0505  3400               	retlw	0
   562  0506  345E               	retlw	94
   563  0507  3400               	retlw	0
   564  0508  3479               	retlw	121
   565  0509  3400               	retlw	0
   566  050A  3471               	retlw	113
   567  050B  3400               	retlw	0
   568  050C  3476               	retlw	118
   569  050D  3400               	retlw	0
   570  050E  3438               	retlw	56
   571  050F  3400               	retlw	0
   572  0510  3454               	retlw	84
   573  0511  3400               	retlw	0
   574  0512  3473               	retlw	115
   575  0513  3400               	retlw	0
   576  000E                     _PORTC	set	14
   577  000D                     _PORTB	set	13
   578  000C                     _PORTA	set	12
   579  0061                     _RA1	set	97
   580  0060                     _RA0	set	96
   581  0062                     _RA2	set	98
   582  0077                     _RC7	set	119
   583  0072                     _RC2	set	114
   584  0071                     _RC1	set	113
   585  0070                     _RC0	set	112
   586  0076                     _RC6	set	118
   587  0075                     _RC5	set	117
   588  0099                     _OSCCON	set	153
   589  008E                     _TRISC	set	142
   590  008D                     _TRISB	set	141
   591  008C                     _TRISA	set	140
   592  018D                     _ANSELB	set	397
   593  018C                     _ANSELA	set	396
   594                           
   595                           	psect	cinit
   596  07CF                     start_initialization:	
   597                           ; #config settings
   598                           
   599  07CF                     __initialization:
   600                           
   601                           ; Initialize objects allocated to BANK0
   602  07CF  30A4               	movlw	low __pidataBANK0
   603  07D0  0084               	movwf	4
   604  07D1  3084               	movlw	(high __pidataBANK0)| (0+128)
   605  07D2  0085               	movwf	5
   606  07D3  3040               	movlw	low __pdataBANK0
   607  07D4  0086               	movwf	6
   608  07D5  3000               	movlw	high __pdataBANK0
   609  07D6  0087               	movwf	7
   610  07D7  301C               	movlw	28
   611  07D8  3184  2482  3187   	fcall	init_ram
   612                           
   613                           ; Initialize objects allocated to BANK1
   614  07DB  309D               	movlw	low __pidataBANK1
   615  07DC  0084               	movwf	4
   616  07DD  3085               	movlw	(high __pidataBANK1)| (0+128)
   617  07DE  0085               	movwf	5
   618  07DF  30A0               	movlw	low __pdataBANK1
   619  07E0  0086               	movwf	6
   620  07E1  3000               	movlw	high __pdataBANK1
   621  07E2  0087               	movwf	7
   622  07E3  304C               	movlw	76
   623  07E4  3184  2482  3187   	fcall	init_ram
   624                           
   625                           ; Initialize objects allocated to BANK2
   626  07E7  30E0               	movlw	low __pidataBANK2
   627  07E8  0084               	movwf	4
   628  07E9  3084               	movlw	(high __pidataBANK2)| (0+128)
   629  07EA  0085               	movwf	5
   630  07EB  3020               	movlw	low __pdataBANK2
   631  07EC  0086               	movwf	6
   632  07ED  3001               	movlw	high __pdataBANK2
   633  07EE  0087               	movwf	7
   634  07EF  3034               	movlw	52
   635  07F0  3184  2482  3187   	fcall	init_ram
   636                           
   637                           ; Clear objects allocated to COMMON
   638  07F3  01FB               	clrf	__pbssCOMMON& (0+127)
   639  07F4  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   640                           
   641                           ; Clear objects allocated to BANK0
   642  07F5  3020               	movlw	low __pbssBANK0
   643  07F6  0084               	movwf	4
   644  07F7  3000               	movlw	high __pbssBANK0
   645  07F8  0085               	movwf	5
   646  07F9  3020               	movlw	32
   647  07FA  3184  247C  3187   	fcall	clear_ram0
   648  07FD                     end_of_initialization:	
   649                           ;End of C runtime variable initialization code
   650                           
   651  07FD                     __end_of__initialization:
   652  07FD  0020               	movlb	0
   653  07FE  3185  2DE9         	ljmp	_main	;jump to C main() function
   654                           
   655                           	psect	bssCOMMON
   656  007B                     __pbssCOMMON:
   657  007B                     _flag_sw3:
   658  007B                     	ds	2
   659                           
   660                           	psect	bssBANK0
   661  0020                     __pbssBANK0:
   662  0020                     _fugou:
   663  0020                     	ds	2
   664  0022                     _code1:
   665  0022                     	ds	2
   666  0024                     _code10:
   667  0024                     	ds	2
   668  0026                     _code100:
   669  0026                     	ds	2
   670  0028                     _code1000:
   671  0028                     	ds	2
   672  002A                     _count:
   673  002A                     	ds	2
   674  002C                     _atai:
   675  002C                     	ds	2
   676  002E                     _atai1:
   677  002E                     	ds	2
   678  0030                     _atai10:
   679  0030                     	ds	2
   680  0032                     _ccw:
   681  0032                     	ds	2
   682  0034                     _cw:
   683  0034                     	ds	2
   684  0036                     _flg:
   685  0036                     	ds	2
   686  0038                     _flag_P:
   687  0038                     	ds	2
   688  003A                     _flag_R:
   689  003A                     	ds	2
   690  003C                     _flag_sw2:
   691  003C                     	ds	2
   692  003E                     _flag_sw1:
   693  003E                     	ds	2
   694                           
   695                           	psect	dataBANK0
   696  0040                     __pdataBANK0:
   697  0040                     _kisu:
   698  0040                     	ds	10
   699  004A                     _gusu:
   700  004A                     	ds	10
   701  0054                     _mojn:
   702  0054                     	ds	4
   703  0058                     _mojh:
   704  0058                     	ds	4
   705                           
   706                           	psect	dataBANK1
   707  00A0                     __pdataBANK1:
   708  00A0                     _samp:
   709  00A0                     	ds	32
   710  00C0                     _num0:
   711  00C0                     	ds	20
   712  00D4                     _mojf:
   713  00D4                     	ds	12
   714  00E0                     _moja:
   715  00E0                     	ds	12
   716                           
   717                           	psect	dataBANK2
   718  0120                     __pdataBANK2:
   719  0120                     _samf:
   720  0120                     	ds	32
   721  0140                     _moji:
   722  0140                     	ds	20
   723                           
   724                           	psect	inittext
   725  0482                     init_ram:
   726  0482  00FE               	movwf	btemp
   727  0483                     initloop:
   728  0483  0012               	moviw fsr0++
   729  0484  001E               	movwi fsr1++
   730  0485  0BFE               	decfsz	btemp,f
   731  0486  2C83               	goto	initloop
   732  0487  3400               	retlw	0
   733                           
   734                           	psect	clrtext
   735  047C                     clear_ram0:	
   736                           ;	Called with FSR0 containing the base address, and
   737                           ;	WREG with the size to clear
   738                           
   739  047C  0064               	clrwdt	;clear the watchdog before getting into this loop
   740  047D                     clrloop0:
   741  047D  0180               	clrf	0	;clear RAM location pointed to by FSR
   742  047E  3101               	addfsr 0,1
   743  047F  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   744  0480  2C7D               	goto	clrloop0	;have we reached the end yet?
   745  0481  3400               	retlw	0	;all done for this memory range, return
   746                           
   747                           	psect	cstackCOMMON
   748  0070                     __pcstackCOMMON:
   749  0070                     ?_dynam:
   750  0070                     ?_portinit:	
   751                           ; 1 bytes @ 0x0
   752                           
   753  0070                     ??_portinit:	
   754                           ; 1 bytes @ 0x0
   755                           
   756  0070                     ?_zenoff:	
   757                           ; 1 bytes @ 0x0
   758                           
   759  0070                     ??_zenoff:	
   760                           ; 1 bytes @ 0x0
   761                           
   762  0070                     ?_tactsw:	
   763                           ; 1 bytes @ 0x0
   764                           
   765  0070                     ??_tactsw:	
   766                           ; 1 bytes @ 0x0
   767                           
   768  0070                     ?_fclr:	
   769                           ; 1 bytes @ 0x0
   770                           
   771  0070                     ?_main:	
   772                           ; 1 bytes @ 0x0
   773                           
   774  0070                     dynam@dig1data:	
   775                           ; 1 bytes @ 0x0
   776                           
   777  0070                     fclr@flg:	
   778                           ; 2 bytes @ 0x0
   779                           
   780                           
   781                           ; 2 bytes @ 0x0
   782  0070                     	ds	2
   783  0072                     ??_fclr:
   784  0072                     dynam@dig2data:	
   785                           ; 1 bytes @ 0x2
   786                           
   787  0072                     tactsw@b:	
   788                           ; 2 bytes @ 0x2
   789                           
   790                           
   791                           ; 2 bytes @ 0x2
   792  0072                     	ds	2
   793  0074                     dynam@smdata:
   794  0074                     tactsw@c:	
   795                           ; 2 bytes @ 0x4
   796                           
   797                           
   798                           ; 2 bytes @ 0x4
   799  0074                     	ds	2
   800  0076                     dynam@tr:
   801  0076                     tactsw@a:	
   802                           ; 2 bytes @ 0x6
   803                           
   804                           
   805                           ; 2 bytes @ 0x6
   806  0076                     	ds	2
   807  0078                     ??_dynam:
   808  0078                     ?_tact:	
   809                           ; 1 bytes @ 0x8
   810                           
   811  0078                     tact@mode:	
   812                           ; 1 bytes @ 0x8
   813                           
   814                           
   815                           ; 2 bytes @ 0x8
   816  0078                     	ds	2
   817  007A                     ??_tact:
   818  007A                     ??_main:	
   819                           ; 1 bytes @ 0xA
   820                           
   821                           
   822                           ; 1 bytes @ 0xA
   823  007A                     	ds	1
   824                           
   825                           	psect	cstackBANK0
   826  005C                     __pcstackBANK0:
   827  005C                     dynam@smd:
   828                           
   829                           ; 2 bytes @ 0x0
   830  005C                     	ds	2
   831  005E                     dynam@tm:
   832                           
   833                           ; 2 bytes @ 0x2
   834  005E                     	ds	2
   835  0060                     dynam@j:
   836                           
   837                           ; 2 bytes @ 0x4
   838  0060                     	ds	2
   839  0062                     dynam@ext:
   840                           
   841                           ; 2 bytes @ 0x6
   842  0062                     	ds	10
   843  006C                     main@i:
   844                           
   845                           ; 2 bytes @ 0x10
   846  006C                     	ds	2
   847                           
   848                           	psect	maintext
   849  05E9                     __pmaintext:	
   850 ;;
   851 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   852 ;;
   853 ;; *************** function _main *****************
   854 ;; Defined at:
   855 ;;		line 463 in file "Q2.c"
   856 ;; Parameters:    Size  Location     Type
   857 ;;		None
   858 ;; Auto vars:     Size  Location     Type
   859 ;;  i               2   16[BANK0 ] int 
   860 ;;  n               2    0        int 
   861 ;;  m               2    0        int 
   862 ;;  k               2    0        int 
   863 ;;  j               2    0        int 
   864 ;; Return value:  Size  Location     Type
   865 ;;                  1    wreg      void 
   866 ;; Registers used:
   867 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   868 ;; Tracked objects:
   869 ;;		On entry : B1F/0
   870 ;;		On exit  : 0/0
   871 ;;		Unchanged: 0/0
   872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   874 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
   875 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   876 ;;      Totals:         1      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
   877 ;;Total ram usage:       11 bytes
   878 ;; Hardware stack levels required when called:    2
   879 ;; This function calls:
   880 ;;		_dynam
   881 ;;		_fclr
   882 ;;		_portinit
   883 ;;		_tact
   884 ;;		_zenoff
   885 ;; This function is called by:
   886 ;;		Startup code after reset
   887 ;; This function uses a non-reentrant model
   888 ;;
   889                           
   890                           
   891                           ;psect for function _main
   892  05E9                     _main:
   893  05E9                     l2064:	
   894                           ;incstack = 0
   895                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   896                           
   897                           
   898                           ;Q2.c: 466:     OSCCON=0x7A;
   899  05E9  307A               	movlw	122
   900  05EA  0021               	movlb	1	; select bank1
   901  05EB  0099               	movwf	25	;volatile
   902  05EC                     l2066:
   903                           
   904                           ;Q2.c: 468:     portinit();
   905  05EC  3184  2491  3185   	fcall	_portinit
   906                           
   907                           ;Q2.c: 470:     zenoff();
   908  05EF  3184  2488  3185   	fcall	_zenoff
   909  05F2                     l2068:
   910                           
   911                           ;Q2.c: 472:     int i=0,j=0,k=0,m=0,n=0;
   912  05F2  0020               	movlb	0	; select bank0
   913  05F3  01EC               	clrf	main@i
   914  05F4  01ED               	clrf	main@i+1
   915  05F5                     l2070:
   916  05F5                     l2072:
   917  05F5                     l2074:
   918  05F5                     l2076:
   919  05F5                     l265:	
   920                           ;Q2.c: 475:     while((RA0!=1)||(RA1!=1)||(RA2!=1));
   921                           
   922  05F5  1C0C               	btfss	12,0	;volatile
   923  05F6  2DF8               	goto	u1501
   924  05F7  2DF9               	goto	u1500
   925  05F8                     u1501:
   926  05F8  2DF5               	goto	l265
   927  05F9                     u1500:
   928  05F9                     l2078:
   929  05F9  1C8C               	btfss	12,1	;volatile
   930  05FA  2DFC               	goto	u1511
   931  05FB  2DFD               	goto	u1510
   932  05FC                     u1511:
   933  05FC  2DF5               	goto	l265
   934  05FD                     u1510:
   935  05FD                     l2080:
   936  05FD  1D0C               	btfss	12,2	;volatile
   937  05FE  2E00               	goto	u1521
   938  05FF  2E01               	goto	u1520
   939  0600                     u1521:
   940  0600  2DF5               	goto	l265
   941  0601                     u1520:
   942  0601                     l267:
   943                           
   944                           ;Q2.c: 478:     RC0=RC2=RC1=1;
   945  0601  148E               	bsf	14,1	;volatile
   946  0602  188E               	btfsc	14,1	;volatile
   947  0603  2E05               	goto	u1531
   948  0604  2E08               	goto	u1530
   949  0605                     u1531:
   950  0605  0020               	movlb	0	; select bank0
   951  0606  150E               	bsf	14,2	;volatile
   952  0607  2E0A               	goto	u1544
   953  0608                     u1530:
   954  0608  0020               	movlb	0	; select bank0
   955  0609  110E               	bcf	14,2	;volatile
   956  060A                     u1544:
   957  060A  190E               	btfsc	14,2	;volatile
   958  060B  2E0D               	goto	u1541
   959  060C  2E10               	goto	u1540
   960  060D                     u1541:
   961  060D  0020               	movlb	0	; select bank0
   962  060E  140E               	bsf	14,0	;volatile
   963  060F  2E12               	goto	u1554
   964  0610                     u1540:
   965  0610  0020               	movlb	0	; select bank0
   966  0611  100E               	bcf	14,0	;volatile
   967  0612                     u1554:
   968  0612                     l2082:
   969                           
   970                           ;Q2.c: 481:     fclr(2);
   971  0612  3002               	movlw	2
   972  0613  00F0               	movwf	fclr@flg
   973  0614  3000               	movlw	0
   974  0615  00F1               	movwf	fclr@flg+1
   975  0616  3184  24C0  3185   	fcall	_fclr
   976  0619                     l2084:
   977                           
   978                           ;Q2.c: 486:         if(RA0 == 0){
   979  0619  0020               	movlb	0	; select bank0
   980  061A  180C               	btfsc	12,0	;volatile
   981  061B  2E1D               	goto	u1561
   982  061C  2E1E               	goto	u1560
   983  061D                     u1561:
   984  061D  2E19               	goto	l2084
   985  061E                     u1560:
   986  061E                     l272:	
   987                           ;Q2.c: 491:     while(1){
   988                           
   989                           
   990                           ;Q2.c: 492:         if(RA0 == 0){
   991  061E  180C               	btfsc	12,0	;volatile
   992  061F  2E21               	goto	u1571
   993  0620  2E22               	goto	u1570
   994  0621                     u1571:
   995  0621  2E1E               	goto	l272
   996  0622                     u1570:
   997  0622                     l2088:
   998                           
   999                           ;Q2.c: 494:             dynam(0x40,0x40,0,0);
  1000  0622  3040               	movlw	64
  1001  0623  00F0               	movwf	dynam@dig1data
  1002  0624  3000               	movlw	0
  1003  0625  00F1               	movwf	dynam@dig1data+1
  1004  0626  3040               	movlw	64
  1005  0627  00F2               	movwf	dynam@dig2data
  1006  0628  3000               	movlw	0
  1007  0629  00F3               	movwf	dynam@dig2data+1
  1008  062A  3000               	movlw	0
  1009  062B  00F4               	movwf	dynam@smdata
  1010  062C  00F5               	movwf	dynam@smdata+1
  1011  062D  3000               	movlw	0
  1012  062E  00F6               	movwf	dynam@tr
  1013  062F  00F7               	movwf	dynam@tr+1
  1014  0630  3186  2665  3185   	fcall	_dynam
  1015                           
  1016                           ;Q2.c: 496:             tact(2);
  1017  0633  3002               	movlw	2
  1018  0634  00F8               	movwf	tact@mode
  1019  0635  3000               	movlw	0
  1020  0636  00F9               	movwf	tact@mode+1
  1021  0637  3185  2551  3185   	fcall	_tact
  1022  063A                     l274:	
  1023                           ;Q2.c: 498:             while(1){
  1024                           
  1025                           
  1026                           ;Q2.c: 500:                 dynam(0,0,1,5);
  1027  063A  3000               	movlw	0
  1028  063B  00F0               	movwf	dynam@dig1data
  1029  063C  00F1               	movwf	dynam@dig1data+1
  1030  063D  3000               	movlw	0
  1031  063E  00F2               	movwf	dynam@dig2data
  1032  063F  00F3               	movwf	dynam@dig2data+1
  1033  0640  3001               	movlw	1
  1034  0641  00F4               	movwf	dynam@smdata
  1035  0642  3000               	movlw	0
  1036  0643  00F5               	movwf	dynam@smdata+1
  1037  0644  3005               	movlw	5
  1038  0645  00F6               	movwf	dynam@tr
  1039  0646  3000               	movlw	0
  1040  0647  00F7               	movwf	dynam@tr+1
  1041  0648  3186  2665  3185   	fcall	_dynam
  1042  064B                     l2090:
  1043                           
  1044                           ;Q2.c: 501:                 i++;
  1045  064B  3001               	movlw	1
  1046  064C  0020               	movlb	0	; select bank0
  1047  064D  07EC               	addwf	main@i,f
  1048  064E  3000               	movlw	0
  1049  064F  3DED               	addwfc	main@i+1,f
  1050  0650                     l2092:
  1051                           
  1052                           ;Q2.c: 502:                 if(i>=360){
  1053  0650  086D               	movf	main@i+1,w
  1054  0651  3A80               	xorlw	128
  1055  0652  00FA               	movwf	??_main
  1056  0653  3081               	movlw	129
  1057  0654  027A               	subwf	??_main,w
  1058  0655  1D03               	skipz
  1059  0656  2E59               	goto	u1585
  1060  0657  3068               	movlw	104
  1061  0658  026C               	subwf	main@i,w
  1062  0659                     u1585:
  1063  0659  1C03               	skipc
  1064  065A  2E5C               	goto	u1581
  1065  065B  2E5D               	goto	u1580
  1066  065C                     u1581:
  1067  065C  2E3A               	goto	l274
  1068  065D                     u1580:
  1069  065D                     l2094:
  1070                           
  1071                           ;Q2.c: 504:                         i++;
  1072  065D  3001               	movlw	1
  1073  065E  0020               	movlb	0	; select bank0
  1074  065F  07EC               	addwf	main@i,f
  1075  0660  3000               	movlw	0
  1076  0661  3DED               	addwfc	main@i+1,f
  1077  0662  2E5D               	goto	l2094
  1078  0663  3180  2802         	ljmp	start
  1079  0665                     __end_of_main:
  1080                           
  1081                           	psect	text1
  1082  0488                     __ptext1:	
  1083 ;; *************** function _zenoff *****************
  1084 ;; Defined at:
  1085 ;;		line 206 in file "Q2.c"
  1086 ;; Parameters:    Size  Location     Type
  1087 ;;		None
  1088 ;; Auto vars:     Size  Location     Type
  1089 ;;		None
  1090 ;; Return value:  Size  Location     Type
  1091 ;;                  1    wreg      void 
  1092 ;; Registers used:
  1093 ;;		status,2
  1094 ;; Tracked objects:
  1095 ;;		On entry : 0/0
  1096 ;;		On exit  : 0/0
  1097 ;;		Unchanged: 0/0
  1098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1103 ;;Total ram usage:        0 bytes
  1104 ;; Hardware stack levels used:    1
  1105 ;; This function calls:
  1106 ;;		Nothing
  1107 ;; This function is called by:
  1108 ;;		_main
  1109 ;; This function uses a non-reentrant model
  1110 ;;
  1111                           
  1112                           
  1113                           ;psect for function _zenoff
  1114  0488                     _zenoff:
  1115  0488                     l1754:	
  1116                           ;incstack = 0
  1117                           ; Regs used in _zenoff: [status,2]
  1118                           
  1119                           
  1120                           ;Q2.c: 208:     RC0=1;
  1121  0488  0020               	movlb	0	; select bank0
  1122  0489  140E               	bsf	14,0	;volatile
  1123                           
  1124                           ;Q2.c: 209:     RC1=1;
  1125  048A  148E               	bsf	14,1	;volatile
  1126                           
  1127                           ;Q2.c: 210:     RC2=1;
  1128  048B  150E               	bsf	14,2	;volatile
  1129  048C                     l1756:
  1130                           
  1131                           ;Q2.c: 211:     PORTB=0x00;
  1132  048C  018D               	clrf	13	;volatile
  1133  048D                     l1758:
  1134                           
  1135                           ;Q2.c: 212:     RC7=0;RC7=1;RC7=0;
  1136  048D  138E               	bcf	14,7	;volatile
  1137  048E                     l1760:
  1138  048E  178E               	bsf	14,7	;volatile
  1139  048F                     l1762:
  1140  048F  138E               	bcf	14,7	;volatile
  1141  0490                     l115:
  1142  0490  0008               	return
  1143  0491                     __end_of_zenoff:
  1144                           
  1145                           	psect	text2
  1146  0551                     __ptext2:	
  1147 ;; *************** function _tact *****************
  1148 ;; Defined at:
  1149 ;;		line 357 in file "Q2.c"
  1150 ;; Parameters:    Size  Location     Type
  1151 ;;  mode            2    8[COMMON] unsigned short 
  1152 ;; Auto vars:     Size  Location     Type
  1153 ;;		None
  1154 ;; Return value:  Size  Location     Type
  1155 ;;                  1    wreg      void 
  1156 ;; Registers used:
  1157 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1158 ;; Tracked objects:
  1159 ;;		On entry : 0/0
  1160 ;;		On exit  : 0/0
  1161 ;;		Unchanged: 0/0
  1162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1163 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1166 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1167 ;;Total ram usage:        2 bytes
  1168 ;; Hardware stack levels used:    1
  1169 ;; Hardware stack levels required when called:    1
  1170 ;; This function calls:
  1171 ;;		_tactsw
  1172 ;; This function is called by:
  1173 ;;		_main
  1174 ;;		_kaisu
  1175 ;; This function uses a non-reentrant model
  1176 ;;
  1177                           
  1178                           
  1179                           ;psect for function _tact
  1180  0551                     _tact:
  1181  0551                     l1764:	
  1182                           ;incstack = 0
  1183                           ; Regs used in _tact: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1184                           
  1185                           
  1186                           ;Q2.c: 357: void tact(unsigned short mode);Q2.c: 358: {;Q2.c: 359:     switch(mode){
  1187  0551  2D8C               	goto	l1792
  1188  0552                     l1766:
  1189                           
  1190                           ;Q2.c: 361:                 tactsw();
  1191  0552  3185  2514  3185   	fcall	_tactsw
  1192  0555                     l1768:
  1193                           
  1194                           ;Q2.c: 362:                 if(flag_sw3==0)flag_R=1;
  1195  0555  087B               	movf	_flag_sw3,w
  1196  0556  047C               	iorwf	_flag_sw3+1,w
  1197  0557  1D03               	btfss	3,2
  1198  0558  2D5A               	goto	u1081
  1199  0559  2D5B               	goto	u1080
  1200  055A                     u1081:
  1201  055A  2D9C               	goto	l215
  1202  055B                     u1080:
  1203  055B                     l1770:
  1204  055B  3001               	movlw	1
  1205  055C  0020               	movlb	0	; select bank0
  1206  055D  00BA               	movwf	_flag_R
  1207  055E  3000               	movlw	0
  1208  055F  00BB               	movwf	_flag_R+1
  1209  0560  2D9C               	goto	l215
  1210  0561                     l1772:
  1211                           
  1212                           ;Q2.c: 365:                 tactsw();
  1213  0561  3185  2514  3185   	fcall	_tactsw
  1214  0564                     l1774:
  1215                           
  1216                           ;Q2.c: 366:                 if(flag_sw3==1)flag_P=1;
  1217  0564  037B               	decf	_flag_sw3,w
  1218  0565  047C               	iorwf	_flag_sw3+1,w
  1219  0566  1D03               	btfss	3,2
  1220  0567  2D69               	goto	u1091
  1221  0568  2D6A               	goto	u1090
  1222  0569                     u1091:
  1223  0569  2D9C               	goto	l215
  1224  056A                     u1090:
  1225  056A                     l1776:
  1226  056A  3001               	movlw	1
  1227  056B  0020               	movlb	0	; select bank0
  1228  056C  00B8               	movwf	_flag_P
  1229  056D  3000               	movlw	0
  1230  056E  00B9               	movwf	_flag_P+1
  1231  056F  2D9C               	goto	l215
  1232  0570                     l1778:
  1233                           
  1234                           ;Q2.c: 369:                 tactsw();
  1235  0570  3185  2514  3185   	fcall	_tactsw
  1236  0573                     l1780:
  1237                           
  1238                           ;Q2.c: 370:                 if(flag_sw3==0)flag_R=1;
  1239  0573  087B               	movf	_flag_sw3,w
  1240  0574  047C               	iorwf	_flag_sw3+1,w
  1241  0575  1D03               	btfss	3,2
  1242  0576  2D78               	goto	u1101
  1243  0577  2D79               	goto	u1100
  1244  0578                     u1101:
  1245  0578  2D7E               	goto	l1784
  1246  0579                     u1100:
  1247  0579                     l1782:
  1248  0579  3001               	movlw	1
  1249  057A  0020               	movlb	0	; select bank0
  1250  057B  00BA               	movwf	_flag_R
  1251  057C  3000               	movlw	0
  1252  057D  00BB               	movwf	_flag_R+1
  1253  057E                     l1784:
  1254                           
  1255                           ;Q2.c: 371:                 if((flag_sw3==1)&&(flag_R==1))flag_P=1;
  1256  057E  037B               	decf	_flag_sw3,w
  1257  057F  047C               	iorwf	_flag_sw3+1,w
  1258  0580  1D03               	btfss	3,2
  1259  0581  2D83               	goto	u1111
  1260  0582  2D84               	goto	u1110
  1261  0583                     u1111:
  1262  0583  2D9C               	goto	l215
  1263  0584                     u1110:
  1264  0584                     l1786:
  1265  0584  0020               	movlb	0	; select bank0
  1266  0585  033A               	decf	_flag_R,w
  1267  0586  043B               	iorwf	_flag_R+1,w
  1268  0587  1D03               	btfss	3,2
  1269  0588  2D8A               	goto	u1121
  1270  0589  2D8B               	goto	u1120
  1271  058A                     u1121:
  1272  058A  2D9C               	goto	l215
  1273  058B                     u1120:
  1274  058B  2D6A               	goto	l1776
  1275  058C                     l1792:
  1276                           
  1277                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1278                           ; Switch size 1, requested type "simple"
  1279                           ; Number of cases is 1, Range of values is 0 to 0
  1280                           ; switch strategies available:
  1281                           ; Name         Instructions Cycles
  1282                           ; simple_byte            4     3 (average)
  1283                           ; direct_byte            8     6 (fixed)
  1284                           ; jumptable            260     6 (fixed)
  1285                           ;	Chosen strategy is simple_byte
  1286  058C  0879               	movf	tact@mode+1,w
  1287  058D  3A00               	xorlw	0	; case 0
  1288  058E  1903               	skipnz
  1289  058F  2D91               	goto	l2254
  1290  0590  2D9C               	goto	l215
  1291  0591                     l2254:
  1292                           
  1293                           ; Switch size 1, requested type "simple"
  1294                           ; Number of cases is 3, Range of values is 0 to 2
  1295                           ; switch strategies available:
  1296                           ; Name         Instructions Cycles
  1297                           ; simple_byte           10     6 (average)
  1298                           ; direct_byte           12     6 (fixed)
  1299                           ; jumptable            260     6 (fixed)
  1300                           ;	Chosen strategy is simple_byte
  1301  0591  0878               	movf	tact@mode,w
  1302  0592  3A00               	xorlw	0	; case 0
  1303  0593  1903               	skipnz
  1304  0594  2D52               	goto	l1766
  1305  0595  3A01               	xorlw	1	; case 1
  1306  0596  1903               	skipnz
  1307  0597  2D61               	goto	l1772
  1308  0598  3A03               	xorlw	3	; case 2
  1309  0599  1903               	skipnz
  1310  059A  2D70               	goto	l1778
  1311  059B  2D9C               	goto	l215
  1312  059C                     l215:
  1313  059C  0008               	return
  1314  059D                     __end_of_tact:
  1315                           
  1316                           	psect	text3
  1317  0514                     __ptext3:	
  1318 ;; *************** function _tactsw *****************
  1319 ;; Defined at:
  1320 ;;		line 342 in file "Q2.c"
  1321 ;; Parameters:    Size  Location     Type
  1322 ;;		None
  1323 ;; Auto vars:     Size  Location     Type
  1324 ;;  a               2    6[COMMON] unsigned short 
  1325 ;;  c               2    4[COMMON] unsigned short 
  1326 ;;  b               2    2[COMMON] unsigned short 
  1327 ;; Return value:  Size  Location     Type
  1328 ;;                  1    wreg      void 
  1329 ;; Registers used:
  1330 ;;		wreg, status,2, status,0
  1331 ;; Tracked objects:
  1332 ;;		On entry : 0/0
  1333 ;;		On exit  : 0/0
  1334 ;;		Unchanged: 0/0
  1335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1337 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1338 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1339 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1340 ;;Total ram usage:        8 bytes
  1341 ;; Hardware stack levels used:    1
  1342 ;; This function calls:
  1343 ;;		Nothing
  1344 ;; This function is called by:
  1345 ;;		_tact
  1346 ;; This function uses a non-reentrant model
  1347 ;;
  1348                           
  1349                           
  1350                           ;psect for function _tactsw
  1351  0514                     _tactsw:
  1352  0514                     l1550:	
  1353                           ;incstack = 0
  1354                           ; Regs used in _tactsw: [wreg+status,2+status,0]
  1355                           
  1356                           
  1357                           ;Q2.c: 344:     unsigned short a,b,c;;Q2.c: 345:     b=c=0;
  1358  0514  01F4               	clrf	tactsw@c
  1359  0515  01F5               	clrf	tactsw@c+1
  1360  0516  01F2               	clrf	tactsw@b
  1361  0517  01F3               	clrf	tactsw@b+1
  1362  0518                     l1552:
  1363                           
  1364                           ;Q2.c: 347:             a=RA2;
  1365  0518  1003               	clrc
  1366  0519  0020               	movlb	0	; select bank0
  1367  051A  190C               	btfsc	12,2	;volatile
  1368  051B  1403               	setc
  1369  051C  3000               	movlw	0
  1370  051D  3D09               	addwfc	9,w
  1371  051E  00F0               	movwf	??_tactsw
  1372  051F  01F1               	clrf	??_tactsw+1
  1373  0520  0870               	movf	??_tactsw,w
  1374  0521  00F6               	movwf	tactsw@a
  1375  0522  0871               	movf	??_tactsw+1,w
  1376  0523  00F7               	movwf	tactsw@a+1
  1377  0524                     l1554:
  1378                           
  1379                           ;Q2.c: 348:             if(b==a)++c;
  1380  0524  0877               	movf	tactsw@a+1,w
  1381  0525  0673               	xorwf	tactsw@b+1,w
  1382  0526  1D03               	skipz
  1383  0527  2D2A               	goto	u825
  1384  0528  0876               	movf	tactsw@a,w
  1385  0529  0672               	xorwf	tactsw@b,w
  1386  052A                     u825:
  1387  052A  1D03               	skipz
  1388  052B  2D2D               	goto	u821
  1389  052C  2D2E               	goto	u820
  1390  052D                     u821:
  1391  052D  2D33               	goto	l1558
  1392  052E                     u820:
  1393  052E                     l1556:
  1394  052E  3001               	movlw	1
  1395  052F  07F4               	addwf	tactsw@c,f
  1396  0530  3000               	movlw	0
  1397  0531  3DF5               	addwfc	tactsw@c+1,f
  1398  0532  2D35               	goto	l1560
  1399  0533                     l1558:
  1400  0533  01F4               	clrf	tactsw@c
  1401  0534  01F5               	clrf	tactsw@c+1
  1402  0535                     l1560:
  1403                           
  1404                           ;Q2.c: 350:             if(c>10){flag_sw3=(~a)&0x01;return;}
  1405  0535  3000               	movlw	0
  1406  0536  0275               	subwf	tactsw@c+1,w
  1407  0537  300B               	movlw	11
  1408  0538  1903               	skipnz
  1409  0539  0274               	subwf	tactsw@c,w
  1410  053A  1C03               	skipc
  1411  053B  2D3D               	goto	u831
  1412  053C  2D3E               	goto	u830
  1413  053D                     u831:
  1414  053D  2D4B               	goto	l1566
  1415  053E                     u830:
  1416  053E                     l1562:
  1417  053E  0877               	movf	tactsw@a+1,w
  1418  053F  00F1               	movwf	??_tactsw+1
  1419  0540  0876               	movf	tactsw@a,w
  1420  0541  00F0               	movwf	??_tactsw
  1421  0542  09F0               	comf	??_tactsw,f
  1422  0543  09F1               	comf	??_tactsw+1,f
  1423  0544  3001               	movlw	1
  1424  0545  0570               	andwf	??_tactsw,w
  1425  0546  00FB               	movwf	_flag_sw3
  1426  0547  3000               	movlw	0
  1427  0548  0571               	andwf	??_tactsw+1,w
  1428  0549  00FC               	movwf	_flag_sw3+1
  1429  054A  2D50               	goto	l200
  1430  054B                     l1566:
  1431                           
  1432                           ;Q2.c: 351:             b=a;
  1433  054B  0877               	movf	tactsw@a+1,w
  1434  054C  00F3               	movwf	tactsw@b+1
  1435  054D  0876               	movf	tactsw@a,w
  1436  054E  00F2               	movwf	tactsw@b
  1437  054F  2D18               	goto	l1552
  1438  0550                     l200:
  1439  0550  0008               	return
  1440  0551                     __end_of_tactsw:
  1441                           
  1442                           	psect	text4
  1443  0491                     __ptext4:	
  1444 ;; *************** function _portinit *****************
  1445 ;; Defined at:
  1446 ;;		line 160 in file "Q2.c"
  1447 ;; Parameters:    Size  Location     Type
  1448 ;;		None
  1449 ;; Auto vars:     Size  Location     Type
  1450 ;;		None
  1451 ;; Return value:  Size  Location     Type
  1452 ;;                  1    wreg      void 
  1453 ;; Registers used:
  1454 ;;		wreg, status,2
  1455 ;; Tracked objects:
  1456 ;;		On entry : 0/0
  1457 ;;		On exit  : 0/0
  1458 ;;		Unchanged: 0/0
  1459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1464 ;;Total ram usage:        0 bytes
  1465 ;; Hardware stack levels used:    1
  1466 ;; This function calls:
  1467 ;;		Nothing
  1468 ;; This function is called by:
  1469 ;;		_main
  1470 ;; This function uses a non-reentrant model
  1471 ;;
  1472                           
  1473                           
  1474                           ;psect for function _portinit
  1475  0491                     _portinit:
  1476  0491                     l1568:	
  1477                           ;incstack = 0
  1478                           ; Regs used in _portinit: [wreg+status,2]
  1479                           
  1480                           
  1481                           ;Q2.c: 163:     ANSELA=0x00;
  1482  0491  0023               	movlb	3	; select bank3
  1483  0492  018C               	clrf	12	;volatile
  1484                           
  1485                           ;Q2.c: 164:     ANSELB=0x00;
  1486  0493  018D               	clrf	13	;volatile
  1487  0494                     l1570:
  1488                           
  1489                           ;Q2.c: 166:     PORTA=0x07;
  1490  0494  3007               	movlw	7
  1491  0495  0020               	movlb	0	; select bank0
  1492  0496  008C               	movwf	12	;volatile
  1493  0497                     l1572:
  1494                           
  1495                           ;Q2.c: 167:     TRISA=0x07;
  1496  0497  3007               	movlw	7
  1497  0498  0021               	movlb	1	; select bank1
  1498  0499  008C               	movwf	12	;volatile
  1499                           
  1500                           ;Q2.c: 168:     PORTB=0x00;
  1501  049A  0020               	movlb	0	; select bank0
  1502  049B  018D               	clrf	13	;volatile
  1503                           
  1504                           ;Q2.c: 169:     TRISB=0x00;
  1505  049C  0021               	movlb	1	; select bank1
  1506  049D  018D               	clrf	13	;volatile
  1507  049E                     l1574:
  1508                           
  1509                           ;Q2.c: 170:     PORTC=0x07;
  1510  049E  3007               	movlw	7
  1511  049F  0020               	movlb	0	; select bank0
  1512  04A0  008E               	movwf	14	;volatile
  1513  04A1                     l1576:
  1514                           
  1515                           ;Q2.c: 171:     TRISC=0x00;
  1516  04A1  0021               	movlb	1	; select bank1
  1517  04A2  018E               	clrf	14	;volatile
  1518  04A3                     l97:
  1519  04A3  0008               	return
  1520  04A4                     __end_of_portinit:
  1521                           
  1522                           	psect	text5
  1523  04C0                     __ptext5:	
  1524 ;; *************** function _fclr *****************
  1525 ;; Defined at:
  1526 ;;		line 380 in file "Q2.c"
  1527 ;; Parameters:    Size  Location     Type
  1528 ;;  flg             2    0[COMMON] unsigned short 
  1529 ;; Auto vars:     Size  Location     Type
  1530 ;;		None
  1531 ;; Return value:  Size  Location     Type
  1532 ;;                  1    wreg      void 
  1533 ;; Registers used:
  1534 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1535 ;; Tracked objects:
  1536 ;;		On entry : 0/0
  1537 ;;		On exit  : 0/0
  1538 ;;		Unchanged: 0/0
  1539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1540 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1543 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1544 ;;Total ram usage:        2 bytes
  1545 ;; Hardware stack levels used:    1
  1546 ;; This function calls:
  1547 ;;		Nothing
  1548 ;; This function is called by:
  1549 ;;		_main
  1550 ;;		_kaisu
  1551 ;; This function uses a non-reentrant model
  1552 ;;
  1553                           
  1554                           
  1555                           ;psect for function _fclr
  1556  04C0                     _fclr:
  1557  04C0                     l1798:	
  1558                           ;incstack = 0
  1559                           ; Regs used in _fclr: [wreg-fsr0h+status,2+status,0]
  1560                           
  1561                           
  1562                           ;Q2.c: 380: void fclr(unsigned short flg);Q2.c: 381: {;Q2.c: 382:     switch(flg){
  1563  04C0  2CCF               	goto	l1808
  1564  04C1                     l1800:
  1565                           
  1566                           ;Q2.c: 384:                     flag_R=0;
  1567  04C1  0020               	movlb	0	; select bank0
  1568  04C2  01BA               	clrf	_flag_R
  1569  04C3  01BB               	clrf	_flag_R+1
  1570                           
  1571                           ;Q2.c: 385:                     break;
  1572  04C4  2CDF               	goto	l224
  1573  04C5                     l1802:
  1574                           
  1575                           ;Q2.c: 387:                     flag_P=0;
  1576  04C5  0020               	movlb	0	; select bank0
  1577  04C6  01B8               	clrf	_flag_P
  1578  04C7  01B9               	clrf	_flag_P+1
  1579                           
  1580                           ;Q2.c: 388:                     break;
  1581  04C8  2CDF               	goto	l224
  1582  04C9                     l1804:
  1583                           
  1584                           ;Q2.c: 390:                     flag_P=flag_R=0;
  1585  04C9  0020               	movlb	0	; select bank0
  1586  04CA  01BA               	clrf	_flag_R
  1587  04CB  01BB               	clrf	_flag_R+1
  1588  04CC  01B8               	clrf	_flag_P
  1589  04CD  01B9               	clrf	_flag_P+1
  1590                           
  1591                           ;Q2.c: 391:                     break;
  1592  04CE  2CDF               	goto	l224
  1593  04CF                     l1808:
  1594                           
  1595                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1596                           ; Switch size 1, requested type "simple"
  1597                           ; Number of cases is 1, Range of values is 0 to 0
  1598                           ; switch strategies available:
  1599                           ; Name         Instructions Cycles
  1600                           ; simple_byte            4     3 (average)
  1601                           ; direct_byte            8     6 (fixed)
  1602                           ; jumptable            260     6 (fixed)
  1603                           ;	Chosen strategy is simple_byte
  1604  04CF  0871               	movf	fclr@flg+1,w
  1605  04D0  3A00               	xorlw	0	; case 0
  1606  04D1  1903               	skipnz
  1607  04D2  2CD4               	goto	l2256
  1608  04D3  2CDF               	goto	l224
  1609  04D4                     l2256:
  1610                           
  1611                           ; Switch size 1, requested type "simple"
  1612                           ; Number of cases is 3, Range of values is 0 to 2
  1613                           ; switch strategies available:
  1614                           ; Name         Instructions Cycles
  1615                           ; simple_byte           10     6 (average)
  1616                           ; direct_byte           12     6 (fixed)
  1617                           ; jumptable            260     6 (fixed)
  1618                           ;	Chosen strategy is simple_byte
  1619  04D4  0870               	movf	fclr@flg,w
  1620  04D5  3A00               	xorlw	0	; case 0
  1621  04D6  1903               	skipnz
  1622  04D7  2CC1               	goto	l1800
  1623  04D8  3A01               	xorlw	1	; case 1
  1624  04D9  1903               	skipnz
  1625  04DA  2CC5               	goto	l1802
  1626  04DB  3A03               	xorlw	3	; case 2
  1627  04DC  1903               	skipnz
  1628  04DD  2CC9               	goto	l1804
  1629  04DE  2CDF               	goto	l224
  1630  04DF                     l224:
  1631  04DF  0008               	return
  1632  04E0                     __end_of_fclr:
  1633                           
  1634                           	psect	text6
  1635  0665                     __ptext6:	
  1636 ;; *************** function _dynam *****************
  1637 ;; Defined at:
  1638 ;;		line 217 in file "Q2.c"
  1639 ;; Parameters:    Size  Location     Type
  1640 ;;  dig1data        2    0[COMMON] unsigned short 
  1641 ;;  dig2data        2    2[COMMON] unsigned short 
  1642 ;;  smdata          2    4[COMMON] unsigned short 
  1643 ;;  tr              2    6[COMMON] unsigned int 
  1644 ;; Auto vars:     Size  Location     Type
  1645 ;;  ext             2    6[BANK0 ] unsigned short 
  1646 ;;  j               2    4[BANK0 ] unsigned int 
  1647 ;;  tm              2    2[BANK0 ] unsigned int 
  1648 ;;  smd             2    0[BANK0 ] unsigned short 
  1649 ;; Return value:  Size  Location     Type
  1650 ;;                  1    wreg      void 
  1651 ;; Registers used:
  1652 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1653 ;; Tracked objects:
  1654 ;;		On entry : 0/0
  1655 ;;		On exit  : 0/0
  1656 ;;		Unchanged: 0/0
  1657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1658 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1659 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1661 ;;      Totals:         8       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1662 ;;Total ram usage:       16 bytes
  1663 ;; Hardware stack levels used:    1
  1664 ;; This function calls:
  1665 ;;		Nothing
  1666 ;; This function is called by:
  1667 ;;		_main
  1668 ;;		_waitSEG
  1669 ;;		_clear
  1670 ;; This function uses a non-reentrant model
  1671 ;;
  1672                           
  1673                           
  1674                           ;psect for function _dynam
  1675  0665                     _dynam:
  1676  0665                     l1598:	
  1677                           ;incstack = 0
  1678                           ; Regs used in _dynam: [wreg-fsr0h+status,2+status,0]
  1679                           
  1680  0665  0020               	movlb	0	; select bank0
  1681  0666  01DE               	clrf	dynam@tm
  1682  0667  01DF               	clrf	dynam@tm+1
  1683                           
  1684                           ;Q2.c: 220:     unsigned short ext=0,smd=0;
  1685  0668  01E2               	clrf	dynam@ext
  1686  0669  01E3               	clrf	dynam@ext+1
  1687  066A  01DC               	clrf	dynam@smd
  1688  066B  01DD               	clrf	dynam@smd+1
  1689  066C                     l1600:
  1690                           
  1691                           ;Q2.c: 221:     RC7=0;
  1692  066C  138E               	bcf	14,7	;volatile
  1693  066D                     l1602:
  1694                           
  1695                           ;Q2.c: 222:     PORTB=dig1data;
  1696  066D  0870               	movf	dynam@dig1data,w
  1697  066E  008D               	movwf	13	;volatile
  1698  066F                     l1604:
  1699                           
  1700                           ;Q2.c: 223:     RC5=0;RC6=1;
  1701  066F  128E               	bcf	14,5	;volatile
  1702  0670                     l1606:
  1703  0670  170E               	bsf	14,6	;volatile
  1704  0671                     l1608:
  1705                           
  1706                           ;Q2.c: 224:     if(tr==5){tm=4000;}
  1707  0671  3005               	movlw	5
  1708  0672  0676               	xorwf	dynam@tr,w
  1709  0673  0477               	iorwf	dynam@tr+1,w
  1710  0674  1D03               	btfss	3,2
  1711  0675  2E77               	goto	u861
  1712  0676  2E78               	goto	u860
  1713  0677                     u861:
  1714  0677  2E7D               	goto	l1612
  1715  0678                     u860:
  1716  0678                     l1610:
  1717  0678  30A0               	movlw	160
  1718  0679  00DE               	movwf	dynam@tm
  1719  067A  300F               	movlw	15
  1720  067B  00DF               	movwf	dynam@tm+1
  1721  067C  2E81               	goto	l119
  1722  067D                     l1612:
  1723  067D  30D0               	movlw	208
  1724  067E  00DE               	movwf	dynam@tm
  1725  067F  3007               	movlw	7
  1726  0680  00DF               	movwf	dynam@tm+1
  1727  0681                     l119:
  1728                           
  1729                           ;Q2.c: 226:     for(j=tm;j>0;--j);
  1730  0681  085F               	movf	dynam@tm+1,w
  1731  0682  00E1               	movwf	dynam@j+1
  1732  0683  085E               	movf	dynam@tm,w
  1733  0684  00E0               	movwf	dynam@j
  1734  0685                     l1614:
  1735  0685  0860               	movf	dynam@j,w
  1736  0686  0461               	iorwf	dynam@j+1,w
  1737  0687  1D03               	btfss	3,2
  1738  0688  2E8A               	goto	u871
  1739  0689  2E8B               	goto	u870
  1740  068A                     u871:
  1741  068A  2E8C               	goto	l1618
  1742  068B                     u870:
  1743  068B  2E91               	goto	l121
  1744  068C                     l1618:
  1745  068C  3001               	movlw	1
  1746  068D  02E0               	subwf	dynam@j,f
  1747  068E  3000               	movlw	0
  1748  068F  3BE1               	subwfb	dynam@j+1,f
  1749  0690  2E85               	goto	l1614
  1750  0691                     l121:
  1751                           
  1752                           ;Q2.c: 227:     RC5=0;RC6=0;
  1753  0691  128E               	bcf	14,5	;volatile
  1754  0692  130E               	bcf	14,6	;volatile
  1755  0693                     l1622:
  1756                           
  1757                           ;Q2.c: 228:     PORTB=dig2data;
  1758  0693  0872               	movf	dynam@dig2data,w
  1759  0694  008D               	movwf	13	;volatile
  1760  0695                     l1624:
  1761                           
  1762                           ;Q2.c: 229:     RC6=0;RC5=1;
  1763  0695  130E               	bcf	14,6	;volatile
  1764  0696                     l1626:
  1765  0696  168E               	bsf	14,5	;volatile
  1766  0697                     l1628:
  1767                           
  1768                           ;Q2.c: 230:     if(tr==5){tm=4000;}
  1769  0697  3005               	movlw	5
  1770  0698  0676               	xorwf	dynam@tr,w
  1771  0699  0477               	iorwf	dynam@tr+1,w
  1772  069A  1D03               	btfss	3,2
  1773  069B  2E9D               	goto	u881
  1774  069C  2E9E               	goto	u880
  1775  069D                     u881:
  1776  069D  2EA3               	goto	l1632
  1777  069E                     u880:
  1778  069E                     l1630:
  1779  069E  30A0               	movlw	160
  1780  069F  00DE               	movwf	dynam@tm
  1781  06A0  300F               	movlw	15
  1782  06A1  00DF               	movwf	dynam@tm+1
  1783  06A2  2EA7               	goto	l123
  1784  06A3                     l1632:
  1785  06A3  30D0               	movlw	208
  1786  06A4  00DE               	movwf	dynam@tm
  1787  06A5  3007               	movlw	7
  1788  06A6  00DF               	movwf	dynam@tm+1
  1789  06A7                     l123:
  1790                           
  1791                           ;Q2.c: 232:     for(j=tm;j>0;--j);
  1792  06A7  085F               	movf	dynam@tm+1,w
  1793  06A8  00E1               	movwf	dynam@j+1
  1794  06A9  085E               	movf	dynam@tm,w
  1795  06AA  00E0               	movwf	dynam@j
  1796  06AB                     l1634:
  1797  06AB  0860               	movf	dynam@j,w
  1798  06AC  0461               	iorwf	dynam@j+1,w
  1799  06AD  1D03               	btfss	3,2
  1800  06AE  2EB0               	goto	u891
  1801  06AF  2EB1               	goto	u890
  1802  06B0                     u891:
  1803  06B0  2EB2               	goto	l1638
  1804  06B1                     u890:
  1805  06B1  2EB7               	goto	l125
  1806  06B2                     l1638:
  1807  06B2  3001               	movlw	1
  1808  06B3  02E0               	subwf	dynam@j,f
  1809  06B4  3000               	movlw	0
  1810  06B5  3BE1               	subwfb	dynam@j+1,f
  1811  06B6  2EAB               	goto	l1634
  1812  06B7                     l125:
  1813                           
  1814                           ;Q2.c: 233:     RC5=0;RC6=0;
  1815  06B7  128E               	bcf	14,5	;volatile
  1816  06B8  130E               	bcf	14,6	;volatile
  1817                           
  1818                           ;Q2.c: 234:     switch(smdata){
  1819  06B9  2FBE               	goto	l1748
  1820  06BA                     l1642:
  1821                           
  1822                           ;Q2.c: 236:                 PORTB=0x00;smd=(0x01|0x02|0x04|0x08|0x10|0x20);
  1823  06BA  018D               	clrf	13	;volatile
  1824  06BB                     l1644:
  1825  06BB                     l1646:
  1826                           
  1827                           ;Q2.c: 237:                 RC7=0;RC7=1;RC7=0;
  1828  06BB  138E               	bcf	14,7	;volatile
  1829  06BC                     l1648:
  1830  06BC  178E               	bsf	14,7	;volatile
  1831  06BD                     l1650:
  1832  06BD  138E               	bcf	14,7	;volatile
  1833                           
  1834                           ;Q2.c: 238:                 break;
  1835  06BE  2FCE               	goto	l142
  1836  06BF                     l1652:
  1837                           
  1838                           ;Q2.c: 240:                 if(flg==1)cw=0;flg=0;
  1839  06BF  0336               	decf	_flg,w
  1840  06C0  0437               	iorwf	_flg+1,w
  1841  06C1  1D03               	btfss	3,2
  1842  06C2  2EC4               	goto	u901
  1843  06C3  2EC5               	goto	u900
  1844  06C4                     u901:
  1845  06C4  2EC7               	goto	l130
  1846  06C5                     u900:
  1847  06C5                     l1654:
  1848  06C5  01B4               	clrf	_cw
  1849  06C6  01B5               	clrf	_cw+1
  1850  06C7                     l130:
  1851  06C7  01B6               	clrf	_flg
  1852  06C8  01B7               	clrf	_flg+1
  1853  06C9                     l1656:
  1854                           
  1855                           ;Q2.c: 241:                 if((cw==0)&&(ext==0)){cw=1;ccw=0;ext=1;PORTB=smd=0x09;}
  1856  06C9  0834               	movf	_cw,w
  1857  06CA  0435               	iorwf	_cw+1,w
  1858  06CB  1D03               	btfss	3,2
  1859  06CC  2ECE               	goto	u911
  1860  06CD  2ECF               	goto	u910
  1861  06CE                     u911:
  1862  06CE  2EE5               	goto	l1668
  1863  06CF                     u910:
  1864  06CF                     l1658:
  1865  06CF  0862               	movf	dynam@ext,w
  1866  06D0  0463               	iorwf	dynam@ext+1,w
  1867  06D1  1D03               	btfss	3,2
  1868  06D2  2ED4               	goto	u921
  1869  06D3  2ED5               	goto	u920
  1870  06D4                     u921:
  1871  06D4  2EE5               	goto	l1668
  1872  06D5                     u920:
  1873  06D5                     l1660:
  1874  06D5  3001               	movlw	1
  1875  06D6  00B4               	movwf	_cw
  1876  06D7  3000               	movlw	0
  1877  06D8  00B5               	movwf	_cw+1
  1878  06D9                     l1662:
  1879  06D9  01B2               	clrf	_ccw
  1880  06DA  01B3               	clrf	_ccw+1
  1881  06DB                     l1664:
  1882  06DB  3001               	movlw	1
  1883  06DC  00E2               	movwf	dynam@ext
  1884  06DD  3000               	movlw	0
  1885  06DE  00E3               	movwf	dynam@ext+1
  1886  06DF                     l1666:
  1887  06DF  3009               	movlw	9
  1888  06E0  00DC               	movwf	dynam@smd
  1889  06E1  3000               	movlw	0
  1890  06E2  00DD               	movwf	dynam@smd+1
  1891  06E3  085C               	movf	dynam@smd,w
  1892  06E4  008D               	movwf	13	;volatile
  1893  06E5                     l1668:
  1894                           
  1895                           ;Q2.c: 242:                 if((cw==1)&&(ext==0)){cw=2;ccw=3;ext=1;PORTB=smd=0x0C;}
  1896  06E5  0334               	decf	_cw,w
  1897  06E6  0435               	iorwf	_cw+1,w
  1898  06E7  1D03               	btfss	3,2
  1899  06E8  2EEA               	goto	u931
  1900  06E9  2EEB               	goto	u930
  1901  06EA                     u931:
  1902  06EA  2F03               	goto	l1674
  1903  06EB                     u930:
  1904  06EB                     l1670:
  1905  06EB  0862               	movf	dynam@ext,w
  1906  06EC  0463               	iorwf	dynam@ext+1,w
  1907  06ED  1D03               	btfss	3,2
  1908  06EE  2EF0               	goto	u941
  1909  06EF  2EF1               	goto	u940
  1910  06F0                     u941:
  1911  06F0  2F03               	goto	l1674
  1912  06F1                     u940:
  1913  06F1                     l1672:
  1914  06F1  3002               	movlw	2
  1915  06F2  00B4               	movwf	_cw
  1916  06F3  3000               	movlw	0
  1917  06F4  00B5               	movwf	_cw+1
  1918  06F5  3003               	movlw	3
  1919  06F6  00B2               	movwf	_ccw
  1920  06F7  3000               	movlw	0
  1921  06F8  00B3               	movwf	_ccw+1
  1922  06F9  3001               	movlw	1
  1923  06FA  00E2               	movwf	dynam@ext
  1924  06FB  3000               	movlw	0
  1925  06FC  00E3               	movwf	dynam@ext+1
  1926  06FD  300C               	movlw	12
  1927  06FE  00DC               	movwf	dynam@smd
  1928  06FF  3000               	movlw	0
  1929  0700  00DD               	movwf	dynam@smd+1
  1930  0701  085C               	movf	dynam@smd,w
  1931  0702  008D               	movwf	13	;volatile
  1932  0703                     l1674:
  1933                           
  1934                           ;Q2.c: 243:                 if((cw==2)&&(ext==0)){cw=3;ccw=2;ext=1;PORTB=smd=0x06;}
  1935  0703  3002               	movlw	2
  1936  0704  0634               	xorwf	_cw,w
  1937  0705  0435               	iorwf	_cw+1,w
  1938  0706  1D03               	btfss	3,2
  1939  0707  2F09               	goto	u951
  1940  0708  2F0A               	goto	u950
  1941  0709                     u951:
  1942  0709  2F22               	goto	l1680
  1943  070A                     u950:
  1944  070A                     l1676:
  1945  070A  0862               	movf	dynam@ext,w
  1946  070B  0463               	iorwf	dynam@ext+1,w
  1947  070C  1D03               	btfss	3,2
  1948  070D  2F0F               	goto	u961
  1949  070E  2F10               	goto	u960
  1950  070F                     u961:
  1951  070F  2F22               	goto	l1680
  1952  0710                     u960:
  1953  0710                     l1678:
  1954  0710  3003               	movlw	3
  1955  0711  00B4               	movwf	_cw
  1956  0712  3000               	movlw	0
  1957  0713  00B5               	movwf	_cw+1
  1958  0714  3002               	movlw	2
  1959  0715  00B2               	movwf	_ccw
  1960  0716  3000               	movlw	0
  1961  0717  00B3               	movwf	_ccw+1
  1962  0718  3001               	movlw	1
  1963  0719  00E2               	movwf	dynam@ext
  1964  071A  3000               	movlw	0
  1965  071B  00E3               	movwf	dynam@ext+1
  1966  071C  3006               	movlw	6
  1967  071D  00DC               	movwf	dynam@smd
  1968  071E  3000               	movlw	0
  1969  071F  00DD               	movwf	dynam@smd+1
  1970  0720  085C               	movf	dynam@smd,w
  1971  0721  008D               	movwf	13	;volatile
  1972  0722                     l1680:
  1973                           
  1974                           ;Q2.c: 244:                 if((cw==3)&&(ext==0)){cw=0;ccw=1;ext=1;PORTB=smd=0x03;}
  1975  0722  3003               	movlw	3
  1976  0723  0634               	xorwf	_cw,w
  1977  0724  0435               	iorwf	_cw+1,w
  1978  0725  1D03               	btfss	3,2
  1979  0726  2F28               	goto	u971
  1980  0727  2F29               	goto	u970
  1981  0728                     u971:
  1982  0728  2EBB               	goto	l1646
  1983  0729                     u970:
  1984  0729                     l1682:
  1985  0729  0862               	movf	dynam@ext,w
  1986  072A  0463               	iorwf	dynam@ext+1,w
  1987  072B  1D03               	btfss	3,2
  1988  072C  2F2E               	goto	u981
  1989  072D  2F2F               	goto	u980
  1990  072E                     u981:
  1991  072E  2EBB               	goto	l1646
  1992  072F                     u980:
  1993  072F                     l1684:
  1994  072F  01B4               	clrf	_cw
  1995  0730  01B5               	clrf	_cw+1
  1996  0731                     l1686:
  1997  0731  3001               	movlw	1
  1998  0732  00B2               	movwf	_ccw
  1999  0733  3000               	movlw	0
  2000  0734  00B3               	movwf	_ccw+1
  2001  0735                     l1688:
  2002  0735                     l1690:
  2003  0735  3003               	movlw	3
  2004  0736  00DC               	movwf	dynam@smd
  2005  0737  3000               	movlw	0
  2006  0738  00DD               	movwf	dynam@smd+1
  2007  0739  085C               	movf	dynam@smd,w
  2008  073A  008D               	movwf	13	;volatile
  2009  073B  2EBB               	goto	l1646
  2010  073C                     l1698:
  2011                           
  2012                           ;Q2.c: 248:                 if(flg==1)ccw=0;flg=0;
  2013  073C  0336               	decf	_flg,w
  2014  073D  0437               	iorwf	_flg+1,w
  2015  073E  1D03               	btfss	3,2
  2016  073F  2F41               	goto	u991
  2017  0740  2F42               	goto	u990
  2018  0741                     u991:
  2019  0741  2F44               	goto	l136
  2020  0742                     u990:
  2021  0742                     l1700:
  2022  0742  01B2               	clrf	_ccw
  2023  0743  01B3               	clrf	_ccw+1
  2024  0744                     l136:
  2025  0744  01B6               	clrf	_flg
  2026  0745  01B7               	clrf	_flg+1
  2027  0746                     l1702:
  2028                           
  2029                           ;Q2.c: 249:                 if((ccw==0)&&(ext==0)){ccw=1;cw=0;ext=1;PORTB=smd=0x03;}
  2030  0746  0832               	movf	_ccw,w
  2031  0747  0433               	iorwf	_ccw+1,w
  2032  0748  1D03               	btfss	3,2
  2033  0749  2F4B               	goto	u1001
  2034  074A  2F4C               	goto	u1000
  2035  074B                     u1001:
  2036  074B  2F62               	goto	l1714
  2037  074C                     u1000:
  2038  074C                     l1704:
  2039  074C  0862               	movf	dynam@ext,w
  2040  074D  0463               	iorwf	dynam@ext+1,w
  2041  074E  1D03               	btfss	3,2
  2042  074F  2F51               	goto	u1011
  2043  0750  2F52               	goto	u1010
  2044  0751                     u1011:
  2045  0751  2F62               	goto	l1714
  2046  0752                     u1010:
  2047  0752                     l1706:
  2048  0752  3001               	movlw	1
  2049  0753  00B2               	movwf	_ccw
  2050  0754  3000               	movlw	0
  2051  0755  00B3               	movwf	_ccw+1
  2052  0756                     l1708:
  2053  0756  01B4               	clrf	_cw
  2054  0757  01B5               	clrf	_cw+1
  2055  0758                     l1710:
  2056  0758  3001               	movlw	1
  2057  0759  00E2               	movwf	dynam@ext
  2058  075A  3000               	movlw	0
  2059  075B  00E3               	movwf	dynam@ext+1
  2060  075C                     l1712:
  2061  075C  3003               	movlw	3
  2062  075D  00DC               	movwf	dynam@smd
  2063  075E  3000               	movlw	0
  2064  075F  00DD               	movwf	dynam@smd+1
  2065  0760  085C               	movf	dynam@smd,w
  2066  0761  008D               	movwf	13	;volatile
  2067  0762                     l1714:
  2068                           
  2069                           ;Q2.c: 250:                 if((ccw==1)&&(ext==0)){ccw=2;cw=3;ext=1;PORTB=smd=0x06;}
  2070  0762  0332               	decf	_ccw,w
  2071  0763  0433               	iorwf	_ccw+1,w
  2072  0764  1D03               	btfss	3,2
  2073  0765  2F67               	goto	u1021
  2074  0766  2F68               	goto	u1020
  2075  0767                     u1021:
  2076  0767  2F80               	goto	l1720
  2077  0768                     u1020:
  2078  0768                     l1716:
  2079  0768  0862               	movf	dynam@ext,w
  2080  0769  0463               	iorwf	dynam@ext+1,w
  2081  076A  1D03               	btfss	3,2
  2082  076B  2F6D               	goto	u1031
  2083  076C  2F6E               	goto	u1030
  2084  076D                     u1031:
  2085  076D  2F80               	goto	l1720
  2086  076E                     u1030:
  2087  076E                     l1718:
  2088  076E  3002               	movlw	2
  2089  076F  00B2               	movwf	_ccw
  2090  0770  3000               	movlw	0
  2091  0771  00B3               	movwf	_ccw+1
  2092  0772  3003               	movlw	3
  2093  0773  00B4               	movwf	_cw
  2094  0774  3000               	movlw	0
  2095  0775  00B5               	movwf	_cw+1
  2096  0776  3001               	movlw	1
  2097  0777  00E2               	movwf	dynam@ext
  2098  0778  3000               	movlw	0
  2099  0779  00E3               	movwf	dynam@ext+1
  2100  077A  3006               	movlw	6
  2101  077B  00DC               	movwf	dynam@smd
  2102  077C  3000               	movlw	0
  2103  077D  00DD               	movwf	dynam@smd+1
  2104  077E  085C               	movf	dynam@smd,w
  2105  077F  008D               	movwf	13	;volatile
  2106  0780                     l1720:
  2107                           
  2108                           ;Q2.c: 251:                 if((ccw==2)&&(ext==0)){ccw=3;cw=2;ext=1;PORTB=smd=0x0C;}
  2109  0780  3002               	movlw	2
  2110  0781  0632               	xorwf	_ccw,w
  2111  0782  0433               	iorwf	_ccw+1,w
  2112  0783  1D03               	btfss	3,2
  2113  0784  2F86               	goto	u1041
  2114  0785  2F87               	goto	u1040
  2115  0786                     u1041:
  2116  0786  2F9F               	goto	l1726
  2117  0787                     u1040:
  2118  0787                     l1722:
  2119  0787  0862               	movf	dynam@ext,w
  2120  0788  0463               	iorwf	dynam@ext+1,w
  2121  0789  1D03               	btfss	3,2
  2122  078A  2F8C               	goto	u1051
  2123  078B  2F8D               	goto	u1050
  2124  078C                     u1051:
  2125  078C  2F9F               	goto	l1726
  2126  078D                     u1050:
  2127  078D                     l1724:
  2128  078D  3003               	movlw	3
  2129  078E  00B2               	movwf	_ccw
  2130  078F  3000               	movlw	0
  2131  0790  00B3               	movwf	_ccw+1
  2132  0791  3002               	movlw	2
  2133  0792  00B4               	movwf	_cw
  2134  0793  3000               	movlw	0
  2135  0794  00B5               	movwf	_cw+1
  2136  0795  3001               	movlw	1
  2137  0796  00E2               	movwf	dynam@ext
  2138  0797  3000               	movlw	0
  2139  0798  00E3               	movwf	dynam@ext+1
  2140  0799  300C               	movlw	12
  2141  079A  00DC               	movwf	dynam@smd
  2142  079B  3000               	movlw	0
  2143  079C  00DD               	movwf	dynam@smd+1
  2144  079D  085C               	movf	dynam@smd,w
  2145  079E  008D               	movwf	13	;volatile
  2146  079F                     l1726:
  2147                           
  2148                           ;Q2.c: 252:                 if((ccw==3)&&(ext==0)){ccw=0;cw=1;ext=1;PORTB=smd=0x09;}
  2149  079F  3003               	movlw	3
  2150  07A0  0632               	xorwf	_ccw,w
  2151  07A1  0433               	iorwf	_ccw+1,w
  2152  07A2  1D03               	btfss	3,2
  2153  07A3  2FA5               	goto	u1061
  2154  07A4  2FA6               	goto	u1060
  2155  07A5                     u1061:
  2156  07A5  2EBB               	goto	l1646
  2157  07A6                     u1060:
  2158  07A6                     l1728:
  2159  07A6  0862               	movf	dynam@ext,w
  2160  07A7  0463               	iorwf	dynam@ext+1,w
  2161  07A8  1D03               	btfss	3,2
  2162  07A9  2FAB               	goto	u1071
  2163  07AA  2FAC               	goto	u1070
  2164  07AB                     u1071:
  2165  07AB  2EBB               	goto	l1646
  2166  07AC                     u1070:
  2167  07AC                     l1730:
  2168  07AC  01B2               	clrf	_ccw
  2169  07AD  01B3               	clrf	_ccw+1
  2170  07AE                     l1732:
  2171  07AE  3001               	movlw	1
  2172  07AF  00B4               	movwf	_cw
  2173  07B0  3000               	movlw	0
  2174  07B1  00B5               	movwf	_cw+1
  2175  07B2                     l1734:
  2176  07B2                     l1736:
  2177  07B2  3009               	movlw	9
  2178  07B3  00DC               	movwf	dynam@smd
  2179  07B4  3000               	movlw	0
  2180  07B5  00DD               	movwf	dynam@smd+1
  2181  07B6  085C               	movf	dynam@smd,w
  2182  07B7  008D               	movwf	13	;volatile
  2183  07B8  2EBB               	goto	l1646
  2184  07B9                     l1744:
  2185                           
  2186                           ;Q2.c: 256:                 cw=ccw=0;
  2187  07B9  01B2               	clrf	_ccw
  2188  07BA  01B3               	clrf	_ccw+1
  2189  07BB  01B4               	clrf	_cw
  2190  07BC  01B5               	clrf	_cw+1
  2191                           
  2192                           ;Q2.c: 257:                 break;
  2193  07BD  2FCE               	goto	l142
  2194  07BE                     l1748:
  2195                           
  2196                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2197                           ; Switch size 1, requested type "simple"
  2198                           ; Number of cases is 1, Range of values is 0 to 0
  2199                           ; switch strategies available:
  2200                           ; Name         Instructions Cycles
  2201                           ; simple_byte            4     3 (average)
  2202                           ; direct_byte            8     6 (fixed)
  2203                           ; jumptable            260     6 (fixed)
  2204                           ;	Chosen strategy is simple_byte
  2205  07BE  0875               	movf	dynam@smdata+1,w
  2206  07BF  3A00               	xorlw	0	; case 0
  2207  07C0  1903               	skipnz
  2208  07C1  2FC3               	goto	l2258
  2209  07C2  2FB9               	goto	l1744
  2210  07C3                     l2258:
  2211                           
  2212                           ; Switch size 1, requested type "simple"
  2213                           ; Number of cases is 3, Range of values is 0 to 2
  2214                           ; switch strategies available:
  2215                           ; Name         Instructions Cycles
  2216                           ; simple_byte           10     6 (average)
  2217                           ; direct_byte           12     6 (fixed)
  2218                           ; jumptable            260     6 (fixed)
  2219                           ;	Chosen strategy is simple_byte
  2220  07C3  0874               	movf	dynam@smdata,w
  2221  07C4  3A00               	xorlw	0	; case 0
  2222  07C5  1903               	skipnz
  2223  07C6  2EBA               	goto	l1642
  2224  07C7  3A01               	xorlw	1	; case 1
  2225  07C8  1903               	skipnz
  2226  07C9  2EBF               	goto	l1652
  2227  07CA  3A03               	xorlw	3	; case 2
  2228  07CB  1903               	skipnz
  2229  07CC  2F3C               	goto	l1698
  2230  07CD  2FB9               	goto	l1744
  2231  07CE                     l142:
  2232  07CE  0008               	return
  2233  07CF                     __end_of_dynam:
  2234  007E                     btemp	set	126	;btemp
  2235  007E                     wtemp0	set	126
  2236                           
  2237                           	psect	config
  2238                           
  2239                           ;Config register CONFIG1 @ 0x8007
  2240                           ;	Oscillator Selection
  2241                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  2242                           ;	Watchdog Timer Enable
  2243                           ;	WDTE = OFF, WDT disabled
  2244                           ;	Power-up Timer Enable
  2245                           ;	PWRTE = OFF, PWRT disabled
  2246                           ;	MCLR Pin Function Select
  2247                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  2248                           ;	Flash Program Memory Code Protection
  2249                           ;	CP = OFF, Program memory code protection is disabled
  2250                           ;	Data Memory Code Protection
  2251                           ;	CPD = OFF, Data memory code protection is disabled
  2252                           ;	Brown-out Reset Enable
  2253                           ;	BOREN = OFF, Brown-out Reset disabled
  2254                           ;	Clock Out Enable
  2255                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  2256                           ;	Internal/External Switchover
  2257                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2258                           ;	Fail-Safe Clock Monitor Enable
  2259                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2260  8007                     	org	32775
  2261  8007  09E4               	dw	2532
  2262                           
  2263                           ;Config register CONFIG2 @ 0x8008
  2264                           ;	Flash Memory Self-Write Protection
  2265                           ;	WRT = OFF, Write protection off
  2266                           ;	Voltage Regulator Capacitor Enable
  2267                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
  2268                           ;	PLL Enable
  2269                           ;	PLLEN = OFF, 4x PLL disabled
  2270                           ;	Stack Overflow/Underflow Reset Enable
  2271                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  2272                           ;	Brown-out Reset Voltage Selection
  2273                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  2274                           ;	Low-Voltage Programming Enable
  2275                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  2276  8008                     	org	32776
  2277  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    0
    Data        156
    BSS         34
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      13
    BANK0            80     18      78
    BANK1            80      0      76
    BANK2            80      0      52
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_tact
    _tact->_tactsw

Critical Paths under _main in BANK0

    _main->_dynam

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0    2384
                                             10 COMMON     1     1      0
                                              8 BANK0     10    10      0
                              _dynam
                               _fclr
                           _portinit
                               _tact
                             _zenoff
 ---------------------------------------------------------------------------------
 (1) _zenoff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _tact                                                 2     0      2     366
                                              8 COMMON     2     0      2
                             _tactsw
 ---------------------------------------------------------------------------------
 (2) _tactsw                                               8     8      0     116
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 (1) _portinit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _fclr                                                 2     0      2     326
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _dynam                                               16     8      8    1663
                                              0 COMMON     8     0      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _dynam
   _fclr
   _portinit
   _tact
     _tactsw
   _zenoff

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      B       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     12      4E       5       97.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      4C       7       95.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      34       9       65.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      DB      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      DB      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 09 16:37:36 2021

                     l97 04A3                       _cw 0034                      l200 0550  
                    l121 0691                      l130 06C7                      l123 06A7  
                    l115 0490                      l125 06B7                      l142 07CE  
                    l119 0681                      l215 059C                      l136 0744  
                    l224 04DF                      l272 061E                      l265 05F5  
                    l274 063A                      l267 0601                      _RA0 0060  
                    _RA1 0061                      _RA2 0062                      _RC0 0070  
                    _RC1 0071                      _RC2 0072                      _RC5 0075  
                    _RC6 0076                      _RC7 0077                      u900 06C5  
                    u820 052E                      u901 06C4                      u821 052D  
                    u910 06CF                      u830 053E                      u911 06CE  
                    u831 053D                      u920 06D5                      u921 06D4  
                    u825 052A                      u930 06EB                      u931 06EA  
                    u940 06F1                      u860 0678                      u941 06F0  
                    u861 0677                      u950 070A                      u870 068B  
                    u951 0709                      u871 068A                      u960 0710  
                    u880 069E                      u961 070F                      u881 069D  
                    u970 0729                      u890 06B1                      u971 0728  
                    u891 06B0                      u980 072F                      u981 072E  
                    u990 0742                      u991 0741                      _ccw 0032  
                    _flg 0036                      wreg 0009                     l2070 05F5  
                   l1600 066C                     l2080 05FD                     l2072 05F5  
                   l2064 05E9                     l1610 0678                     l1602 066D  
                   l2090 064B                     l2082 0612                     l2074 05F5  
                   l2066 05EC                     l1700 0742                     l1612 067D  
                   l1604 066F                     l2092 0650                     l2084 0619  
                   l2076 05F5                     l2068 05F2                     l1710 0758  
                   l1702 0746                     l1630 069E                     l1622 0693  
                   l1614 0685                     l1606 0670                     l1550 0514  
                   l2254 0591                     l2094 065D                     l2078 05F9  
                   l1720 0780                     l1712 075C                     l1704 074C  
                   l1632 06A3                     l1624 0695                     l1608 0671  
                   l2256 04D4                     l1800 04C1                     l1560 0535  
                   l1552 0518                     l2088 0622                     l2258 07C3  
                   l1730 07AC                     l1722 0787                     l1706 0752  
                   l1714 0762                     l1650 06BD                     l1642 06BA  
                   l1634 06AB                     l1626 0696                     l1618 068C  
                   l1802 04C5                     l1570 0494                     l1562 053E  
                   l1554 0524                     l1732 07AE                     l1724 078D  
                   l1716 0768                     l1708 0756                     l1660 06D5  
                   l1652 06BF                     l1644 06BB                     l1628 0697  
                   l1804 04C9                     l1572 0497                     l1556 052E  
                   l1734 07B2                     l1726 079F                     l1718 076E  
                   l1670 06EB                     l1662 06D9                     l1654 06C5  
                   l1646 06BB                     l1638 06B2                     l1574 049E  
                   l1566 054B                     l1558 0533                     l1744 07B9  
                   l1736 07B2                     l1728 07A6                     l1680 0722  
                   l1672 06F1                     l1664 06DB                     l1656 06C9  
                   l1648 06BC                     l1808 04CF                     l1576 04A1  
                   l1568 0491                     l1760 048E                     l1690 0735  
                   l1682 0729                     l1674 0703                     l1666 06DF  
                   l1658 06CF                     l1770 055B                     l1762 048F  
                   l1754 0488                     l1684 072F                     l1676 070A  
                   l1668 06E5                     l1748 07BE                     l1780 0573  
                   l1772 0561                     l1764 0551                     l1756 048C  
                   l1686 0731                     l1678 0710                     l1598 0665  
                   l1782 0579                     l1774 0564                     l1766 0552  
                   l1758 048D                     l1688 0735                     l1784 057E  
                   l1776 056A                     l1768 0555                     l1792 058C  
                   l1698 073C                     l1786 0584                     l1778 0570  
                   l1798 04C0                     u1000 074C                     u1001 074B  
                   u1010 0752                     u1011 0751                     u1020 0768  
                   u1100 0579                     u1021 0767                     u1101 0578  
                   u1030 076E                     u1110 0584                     u1031 076D  
                   u1111 0583                     u1040 0787                     u1120 058B  
                   u1041 0786                     u1121 058A                     u1050 078D  
                   u1051 078C                     u1060 07A6                     u1061 07A5  
                   u1070 07AC                     u1071 07AB                     u1080 055B  
                   u1081 055A                     u1090 056A                     u1091 0569  
                   u1500 05F9                     u1501 05F8                     u1510 05FD  
                   u1511 05FC                     u1520 0601                     u1521 0600  
                   u1530 0608                     u1531 0605                     u1540 0610  
                   u1541 060D                     u1560 061E                     u1544 060A  
                   u1561 061D                     u1570 0622                     u1554 0612  
                   u1571 0621                     u1580 065D                     u1581 065C  
                   u1585 0659                     _atai 002C                     _fclr 04C0  
                   _main 05E9                     _num0 00C0                     _kisu 0040  
                   _moja 00E0                     _samf 0120                     _mojf 00D4  
                   _tact 0551                     _mojh 0058                     _moji 0140  
                   _mojn 0054                     _samp 00A0                     _gusu 004A  
                   fsr0h 0005                     fsr1h 0007                     indf0 0000  
                   fsr0l 0004                     fsr1l 0006                     btemp 007E  
                   start 0002                    ?_fclr 0070                    ?_main 0070  
                  ?_tact 0078                    _PORTA 000C                    _PORTB 000D  
                  _PORTC 000E                    _TRISA 008C                    _TRISB 008D  
                  _TRISC 008E                    _code1 0022                    _atai1 002E  
                  _count 002A                    _dynam 0665                    _fugou 0020  
                  main@i 006C                    status 0003                    wtemp0 007E  
        __initialization 07CF             __end_of_fclr 04E0             __end_of_main 0665  
           __end_of_tact 059D                   ??_fclr 0072                   ??_main 007A  
                 ??_tact 007A                   ?_dynam 0070                   _ANSELA 018C  
                 _ANSELB 018D                   _OSCCON 0099              dynam@smdata 0074  
                 _code10 0024                   _atai10 0030                   _flag_P 0038  
                 _flag_R 003A                   _tactsw 0514                   _zenoff 0488  
                 dynam@j 0060         __end_of_portinit 04A4  __end_of__initialization 07FD  
         __pcstackCOMMON 0070             __pidataBANK0 04A4             __pidataBANK1 059D  
           __pidataBANK2 04E0            __end_of_dynam 07CF                  ??_dynam 0078  
             __pbssBANK0 0020               __pmaintext 05E9                  ?_tactsw 0070  
                ?_zenoff 0070                ?_portinit 0070                  _code100 0026  
        __size_of_tactsw 003D                  __ptext1 0488                  __ptext2 0551  
                __ptext3 0514                  __ptext4 0491                  __ptext5 04C0  
                __ptext6 0665          __size_of_zenoff 0009                  fclr@flg 0070  
                clrloop0 047D     end_of_initialization 07FD                  dynam@tm 005E  
                dynam@tr 0076                  init_ram 0482                  initloop 0483  
                tactsw@a 0076                  tactsw@b 0072                  tactsw@c 0074  
             ??_portinit 0070           __end_of_tactsw 0551           __end_of_zenoff 0491  
    start_initialization 07CF              __pdataBANK0 0040              __pdataBANK1 00A0  
            __pdataBANK2 0120                 ??_tactsw 0070                 ??_zenoff 0070  
            __pbssCOMMON 007B                ___latbits 0003            __pcstackBANK0 005C  
      __size_of_portinit 0013           __size_of_dynam 016A            dynam@dig1data 0070  
          dynam@dig2data 0072                clear_ram0 047C                 _code1000 0028  
               _flag_sw1 003E                 _flag_sw2 003C                 _flag_sw3 007B  
          __size_of_fclr 0020            __size_of_main 007C            __size_of_tact 004C  
               _portinit 0491                 dynam@ext 0062                 dynam@smd 005C  
               tact@mode 0078  
