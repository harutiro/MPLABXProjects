

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 09 17:32:16 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F1938
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.20
    31                           ; Generated 12/02/2020 GMT
    32                           ; 
    33                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F1938 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  0010                     	;# 
    80  0011                     	;# 
    81  0012                     	;# 
    82  0013                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  010C                     	;# 
   113  010D                     	;# 
   114  010E                     	;# 
   115  0110                     	;# 
   116  0111                     	;# 
   117  0112                     	;# 
   118  0113                     	;# 
   119  0114                     	;# 
   120  0115                     	;# 
   121  0116                     	;# 
   122  0117                     	;# 
   123  0118                     	;# 
   124  0119                     	;# 
   125  011A                     	;# 
   126  011B                     	;# 
   127  011D                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0191                     	;# 
   131  0191                     	;# 
   132  0192                     	;# 
   133  0193                     	;# 
   134  0193                     	;# 
   135  0193                     	;# 
   136  0194                     	;# 
   137  0195                     	;# 
   138  0196                     	;# 
   139  0199                     	;# 
   140  019A                     	;# 
   141  019B                     	;# 
   142  019B                     	;# 
   143  019B                     	;# 
   144  019B                     	;# 
   145  019C                     	;# 
   146  019C                     	;# 
   147  019D                     	;# 
   148  019E                     	;# 
   149  019F                     	;# 
   150  020D                     	;# 
   151  0210                     	;# 
   152  0211                     	;# 
   153  0212                     	;# 
   154  0213                     	;# 
   155  0214                     	;# 
   156  0215                     	;# 
   157  0215                     	;# 
   158  0216                     	;# 
   159  0217                     	;# 
   160  0291                     	;# 
   161  0291                     	;# 
   162  0292                     	;# 
   163  0293                     	;# 
   164  0294                     	;# 
   165  0295                     	;# 
   166  0295                     	;# 
   167  0296                     	;# 
   168  0298                     	;# 
   169  0298                     	;# 
   170  0299                     	;# 
   171  029A                     	;# 
   172  029B                     	;# 
   173  029C                     	;# 
   174  029C                     	;# 
   175  029D                     	;# 
   176  029E                     	;# 
   177  029F                     	;# 
   178  0311                     	;# 
   179  0311                     	;# 
   180  0312                     	;# 
   181  0313                     	;# 
   182  0314                     	;# 
   183  0315                     	;# 
   184  0315                     	;# 
   185  0316                     	;# 
   186  0318                     	;# 
   187  0318                     	;# 
   188  0319                     	;# 
   189  031A                     	;# 
   190  031C                     	;# 
   191  031C                     	;# 
   192  031D                     	;# 
   193  031E                     	;# 
   194  0394                     	;# 
   195  0395                     	;# 
   196  0396                     	;# 
   197  0415                     	;# 
   198  0416                     	;# 
   199  0417                     	;# 
   200  041C                     	;# 
   201  041D                     	;# 
   202  041E                     	;# 
   203  0791                     	;# 
   204  0792                     	;# 
   205  0793                     	;# 
   206  0794                     	;# 
   207  0795                     	;# 
   208  0798                     	;# 
   209  0799                     	;# 
   210  07A0                     	;# 
   211  07A1                     	;# 
   212  07A3                     	;# 
   213  07A4                     	;# 
   214  07A6                     	;# 
   215  07A7                     	;# 
   216  07A9                     	;# 
   217  07AA                     	;# 
   218  0FE4                     	;# 
   219  0FE5                     	;# 
   220  0FE6                     	;# 
   221  0FE7                     	;# 
   222  0FE8                     	;# 
   223  0FE9                     	;# 
   224  0FEA                     	;# 
   225  0FEB                     	;# 
   226  0FED                     	;# 
   227  0FEE                     	;# 
   228  0FEF                     	;# 
   229  0000                     	;# 
   230  0001                     	;# 
   231  0002                     	;# 
   232  0003                     	;# 
   233  0004                     	;# 
   234  0005                     	;# 
   235  0006                     	;# 
   236  0007                     	;# 
   237  0008                     	;# 
   238  0009                     	;# 
   239  000A                     	;# 
   240  000B                     	;# 
   241  000C                     	;# 
   242  000D                     	;# 
   243  000E                     	;# 
   244  0010                     	;# 
   245  0011                     	;# 
   246  0012                     	;# 
   247  0013                     	;# 
   248  0015                     	;# 
   249  0016                     	;# 
   250  0016                     	;# 
   251  0017                     	;# 
   252  0018                     	;# 
   253  0019                     	;# 
   254  001A                     	;# 
   255  001B                     	;# 
   256  001C                     	;# 
   257  001E                     	;# 
   258  001F                     	;# 
   259  008C                     	;# 
   260  008D                     	;# 
   261  008E                     	;# 
   262  0090                     	;# 
   263  0091                     	;# 
   264  0092                     	;# 
   265  0093                     	;# 
   266  0095                     	;# 
   267  0096                     	;# 
   268  0097                     	;# 
   269  0098                     	;# 
   270  0099                     	;# 
   271  009A                     	;# 
   272  009B                     	;# 
   273  009B                     	;# 
   274  009C                     	;# 
   275  009D                     	;# 
   276  009E                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  0110                     	;# 
   281  0111                     	;# 
   282  0112                     	;# 
   283  0113                     	;# 
   284  0114                     	;# 
   285  0115                     	;# 
   286  0116                     	;# 
   287  0117                     	;# 
   288  0118                     	;# 
   289  0119                     	;# 
   290  011A                     	;# 
   291  011B                     	;# 
   292  011D                     	;# 
   293  018C                     	;# 
   294  018D                     	;# 
   295  0191                     	;# 
   296  0191                     	;# 
   297  0192                     	;# 
   298  0193                     	;# 
   299  0193                     	;# 
   300  0193                     	;# 
   301  0194                     	;# 
   302  0195                     	;# 
   303  0196                     	;# 
   304  0199                     	;# 
   305  019A                     	;# 
   306  019B                     	;# 
   307  019B                     	;# 
   308  019B                     	;# 
   309  019B                     	;# 
   310  019C                     	;# 
   311  019C                     	;# 
   312  019D                     	;# 
   313  019E                     	;# 
   314  019F                     	;# 
   315  020D                     	;# 
   316  0210                     	;# 
   317  0211                     	;# 
   318  0212                     	;# 
   319  0213                     	;# 
   320  0214                     	;# 
   321  0215                     	;# 
   322  0215                     	;# 
   323  0216                     	;# 
   324  0217                     	;# 
   325  0291                     	;# 
   326  0291                     	;# 
   327  0292                     	;# 
   328  0293                     	;# 
   329  0294                     	;# 
   330  0295                     	;# 
   331  0295                     	;# 
   332  0296                     	;# 
   333  0298                     	;# 
   334  0298                     	;# 
   335  0299                     	;# 
   336  029A                     	;# 
   337  029B                     	;# 
   338  029C                     	;# 
   339  029C                     	;# 
   340  029D                     	;# 
   341  029E                     	;# 
   342  029F                     	;# 
   343  0311                     	;# 
   344  0311                     	;# 
   345  0312                     	;# 
   346  0313                     	;# 
   347  0314                     	;# 
   348  0315                     	;# 
   349  0315                     	;# 
   350  0316                     	;# 
   351  0318                     	;# 
   352  0318                     	;# 
   353  0319                     	;# 
   354  031A                     	;# 
   355  031C                     	;# 
   356  031C                     	;# 
   357  031D                     	;# 
   358  031E                     	;# 
   359  0394                     	;# 
   360  0395                     	;# 
   361  0396                     	;# 
   362  0415                     	;# 
   363  0416                     	;# 
   364  0417                     	;# 
   365  041C                     	;# 
   366  041D                     	;# 
   367  041E                     	;# 
   368  0791                     	;# 
   369  0792                     	;# 
   370  0793                     	;# 
   371  0794                     	;# 
   372  0795                     	;# 
   373  0798                     	;# 
   374  0799                     	;# 
   375  07A0                     	;# 
   376  07A1                     	;# 
   377  07A3                     	;# 
   378  07A4                     	;# 
   379  07A6                     	;# 
   380  07A7                     	;# 
   381  07A9                     	;# 
   382  07AA                     	;# 
   383  0FE4                     	;# 
   384  0FE5                     	;# 
   385  0FE6                     	;# 
   386  0FE7                     	;# 
   387  0FE8                     	;# 
   388  0FE9                     	;# 
   389  0FEA                     	;# 
   390  0FEB                     	;# 
   391  0FED                     	;# 
   392  0FEE                     	;# 
   393  0FEF                     	;# 
   394                           
   395                           	psect	idataBANK0
   396  0321                     __pidataBANK0:
   397                           
   398                           ;initializer for _gusu
   399  0321  343F               	retlw	63
   400  0322  3400               	retlw	0
   401  0323  345B               	retlw	91
   402  0324  3400               	retlw	0
   403  0325  3466               	retlw	102
   404  0326  3400               	retlw	0
   405  0327  347D               	retlw	125
   406  0328  3400               	retlw	0
   407  0329  347F               	retlw	127
   408  032A  3400               	retlw	0
   409                           
   410                           ;initializer for _mojn
   411  032B  3454               	retlw	84
   412  032C  3400               	retlw	0
   413  032D  3473               	retlw	115
   414  032E  3400               	retlw	0
   415                           
   416                           ;initializer for _mojh
   417  032F  3476               	retlw	118
   418  0330  3400               	retlw	0
   419  0331  3438               	retlw	56
   420  0332  3400               	retlw	0
   421                           
   422                           	psect	idataBANK1
   423  0477                     __pidataBANK1:
   424                           
   425                           ;initializer for _samp
   426  0477  343F               	retlw	63
   427  0478  3400               	retlw	0
   428  0479  3406               	retlw	6
   429  047A  3400               	retlw	0
   430  047B  345B               	retlw	91
   431  047C  3400               	retlw	0
   432  047D  344F               	retlw	79
   433  047E  3400               	retlw	0
   434  047F  3466               	retlw	102
   435  0480  3400               	retlw	0
   436  0481  346D               	retlw	109
   437  0482  3400               	retlw	0
   438  0483  347D               	retlw	125
   439  0484  3400               	retlw	0
   440  0485  3427               	retlw	39
   441  0486  3400               	retlw	0
   442  0487  347F               	retlw	127
   443  0488  3400               	retlw	0
   444  0489  346F               	retlw	111
   445  048A  3400               	retlw	0
   446  048B  345F               	retlw	95
   447  048C  3400               	retlw	0
   448  048D  347C               	retlw	124
   449  048E  3400               	retlw	0
   450  048F  3458               	retlw	88
   451  0490  3400               	retlw	0
   452  0491  345E               	retlw	94
   453  0492  3400               	retlw	0
   454  0493  3479               	retlw	121
   455  0494  3400               	retlw	0
   456  0495  3471               	retlw	113
   457  0496  3400               	retlw	0
   458                           
   459                           ;initializer for _moji
   460  0497  345F               	retlw	95
   461  0498  3400               	retlw	0
   462  0499  347C               	retlw	124
   463  049A  3400               	retlw	0
   464  049B  3458               	retlw	88
   465  049C  3400               	retlw	0
   466  049D  345E               	retlw	94
   467  049E  3400               	retlw	0
   468  049F  3479               	retlw	121
   469  04A0  3400               	retlw	0
   470  04A1  3471               	retlw	113
   471  04A2  3400               	retlw	0
   472  04A3  3476               	retlw	118
   473  04A4  3400               	retlw	0
   474  04A5  3438               	retlw	56
   475  04A6  3400               	retlw	0
   476  04A7  3454               	retlw	84
   477  04A8  3400               	retlw	0
   478  04A9  3473               	retlw	115
   479  04AA  3400               	retlw	0
   480                           
   481                           ;initializer for _moja
   482  04AB  345F               	retlw	95
   483  04AC  3400               	retlw	0
   484  04AD  347C               	retlw	124
   485  04AE  3400               	retlw	0
   486  04AF  3458               	retlw	88
   487  04B0  3400               	retlw	0
   488  04B1  345E               	retlw	94
   489  04B2  3400               	retlw	0
   490  04B3  3479               	retlw	121
   491  04B4  3400               	retlw	0
   492  04B5  3471               	retlw	113
   493  04B6  3400               	retlw	0
   494                           
   495                           ;initializer for _kisu
   496  04B7  3406               	retlw	6
   497  04B8  3400               	retlw	0
   498  04B9  344F               	retlw	79
   499  04BA  3400               	retlw	0
   500  04BB  346D               	retlw	109
   501  04BC  3400               	retlw	0
   502  04BD  3427               	retlw	39
   503  04BE  3400               	retlw	0
   504  04BF  346F               	retlw	111
   505  04C0  3400               	retlw	0
   506                           
   507                           	psect	idataBANK2
   508  0437                     __pidataBANK2:
   509                           
   510                           ;initializer for _samf
   511  0437  3471               	retlw	113
   512  0438  3400               	retlw	0
   513  0439  3479               	retlw	121
   514  043A  3400               	retlw	0
   515  043B  345E               	retlw	94
   516  043C  3400               	retlw	0
   517  043D  3458               	retlw	88
   518  043E  3400               	retlw	0
   519  043F  347C               	retlw	124
   520  0440  3400               	retlw	0
   521  0441  345F               	retlw	95
   522  0442  3400               	retlw	0
   523  0443  346F               	retlw	111
   524  0444  3400               	retlw	0
   525  0445  347F               	retlw	127
   526  0446  3400               	retlw	0
   527  0447  3427               	retlw	39
   528  0448  3400               	retlw	0
   529  0449  347D               	retlw	125
   530  044A  3400               	retlw	0
   531  044B  346D               	retlw	109
   532  044C  3400               	retlw	0
   533  044D  3466               	retlw	102
   534  044E  3400               	retlw	0
   535  044F  344F               	retlw	79
   536  0450  3400               	retlw	0
   537  0451  345B               	retlw	91
   538  0452  3400               	retlw	0
   539  0453  3406               	retlw	6
   540  0454  3400               	retlw	0
   541  0455  343F               	retlw	63
   542  0456  3400               	retlw	0
   543                           
   544                           ;initializer for _num0
   545  0457  343F               	retlw	63
   546  0458  3400               	retlw	0
   547  0459  3406               	retlw	6
   548  045A  3400               	retlw	0
   549  045B  345B               	retlw	91
   550  045C  3400               	retlw	0
   551  045D  344F               	retlw	79
   552  045E  3400               	retlw	0
   553  045F  3466               	retlw	102
   554  0460  3400               	retlw	0
   555  0461  346D               	retlw	109
   556  0462  3400               	retlw	0
   557  0463  347D               	retlw	125
   558  0464  3400               	retlw	0
   559  0465  3427               	retlw	39
   560  0466  3400               	retlw	0
   561  0467  347F               	retlw	127
   562  0468  3400               	retlw	0
   563  0469  346F               	retlw	111
   564  046A  3400               	retlw	0
   565                           
   566                           ;initializer for _mojf
   567  046B  3471               	retlw	113
   568  046C  3400               	retlw	0
   569  046D  3479               	retlw	121
   570  046E  3400               	retlw	0
   571  046F  345E               	retlw	94
   572  0470  3400               	retlw	0
   573  0471  3458               	retlw	88
   574  0472  3400               	retlw	0
   575  0473  347C               	retlw	124
   576  0474  3400               	retlw	0
   577  0475  345F               	retlw	95
   578  0476  3400               	retlw	0
   579  000E                     _PORTC	set	14
   580  000D                     _PORTB	set	13
   581  000C                     _PORTA	set	12
   582  0061                     _RA1	set	97
   583  0060                     _RA0	set	96
   584  0062                     _RA2	set	98
   585  0077                     _RC7	set	119
   586  0072                     _RC2	set	114
   587  0071                     _RC1	set	113
   588  0070                     _RC0	set	112
   589  0076                     _RC6	set	118
   590  0075                     _RC5	set	117
   591  0099                     _OSCCON	set	153
   592  008E                     _TRISC	set	142
   593  008D                     _TRISB	set	141
   594  008C                     _TRISA	set	140
   595  018D                     _ANSELB	set	397
   596  018C                     _ANSELA	set	396
   597                           
   598                           	psect	cinit
   599  07CF                     start_initialization:	
   600                           ; #config settings
   601                           
   602  07CF                     __initialization:
   603                           
   604                           ; Initialize objects allocated to BANK0
   605  07CF  3021               	movlw	low __pidataBANK0
   606  07D0  0084               	movwf	4
   607  07D1  3083               	movlw	(high __pidataBANK0)| (0+128)
   608  07D2  0085               	movwf	5
   609  07D3  305C               	movlw	low __pdataBANK0
   610  07D4  0086               	movwf	6
   611  07D5  3000               	movlw	high __pdataBANK0
   612  07D6  0087               	movwf	7
   613  07D7  3012               	movlw	18
   614  07D8  3183  2312  3187   	fcall	init_ram
   615                           
   616                           ; Initialize objects allocated to BANK1
   617  07DB  3077               	movlw	low __pidataBANK1
   618  07DC  0084               	movwf	4
   619  07DD  3084               	movlw	(high __pidataBANK1)| (0+128)
   620  07DE  0085               	movwf	5
   621  07DF  30A0               	movlw	low __pdataBANK1
   622  07E0  0086               	movwf	6
   623  07E1  3000               	movlw	high __pdataBANK1
   624  07E2  0087               	movwf	7
   625  07E3  304A               	movlw	74
   626  07E4  3183  2312  3187   	fcall	init_ram
   627                           
   628                           ; Initialize objects allocated to BANK2
   629  07E7  3037               	movlw	low __pidataBANK2
   630  07E8  0084               	movwf	4
   631  07E9  3084               	movlw	(high __pidataBANK2)| (0+128)
   632  07EA  0085               	movwf	5
   633  07EB  3020               	movlw	low __pdataBANK2
   634  07EC  0086               	movwf	6
   635  07ED  3001               	movlw	high __pdataBANK2
   636  07EE  0087               	movwf	7
   637  07EF  3040               	movlw	64
   638  07F0  3183  2312  3187   	fcall	init_ram
   639                           
   640                           ; Clear objects allocated to COMMON
   641  07F3  01FB               	clrf	__pbssCOMMON& (0+127)
   642  07F4  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   643                           
   644                           ; Clear objects allocated to BANK0
   645  07F5  3020               	movlw	low __pbssBANK0
   646  07F6  0084               	movwf	4
   647  07F7  3000               	movlw	high __pbssBANK0
   648  07F8  0085               	movwf	5
   649  07F9  3020               	movlw	32
   650  07FA  3183  230C  3187   	fcall	clear_ram0
   651  07FD                     end_of_initialization:	
   652                           ;End of C runtime variable initialization code
   653                           
   654  07FD                     __end_of__initialization:
   655  07FD  0020               	movlb	0
   656  07FE  3185  2D0D         	ljmp	_main	;jump to C main() function
   657                           
   658                           	psect	bssCOMMON
   659  007B                     __pbssCOMMON:
   660  007B                     _flag_sw3:
   661  007B                     	ds	2
   662                           
   663                           	psect	bssBANK0
   664  0020                     __pbssBANK0:
   665  0020                     _fugou:
   666  0020                     	ds	2
   667  0022                     _code1:
   668  0022                     	ds	2
   669  0024                     _code10:
   670  0024                     	ds	2
   671  0026                     _code100:
   672  0026                     	ds	2
   673  0028                     _code1000:
   674  0028                     	ds	2
   675  002A                     _count:
   676  002A                     	ds	2
   677  002C                     _atai:
   678  002C                     	ds	2
   679  002E                     _atai1:
   680  002E                     	ds	2
   681  0030                     _atai10:
   682  0030                     	ds	2
   683  0032                     _ccw:
   684  0032                     	ds	2
   685  0034                     _cw:
   686  0034                     	ds	2
   687  0036                     _flg:
   688  0036                     	ds	2
   689  0038                     _flag_P:
   690  0038                     	ds	2
   691  003A                     _flag_R:
   692  003A                     	ds	2
   693  003C                     _flag_sw2:
   694  003C                     	ds	2
   695  003E                     _flag_sw1:
   696  003E                     	ds	2
   697                           
   698                           	psect	dataBANK0
   699  005C                     __pdataBANK0:
   700  005C                     _gusu:
   701  005C                     	ds	10
   702  0066                     _mojn:
   703  0066                     	ds	4
   704  006A                     _mojh:
   705  006A                     	ds	4
   706                           
   707                           	psect	dataBANK1
   708  00A0                     __pdataBANK1:
   709  00A0                     _samp:
   710  00A0                     	ds	32
   711  00C0                     _moji:
   712  00C0                     	ds	20
   713  00D4                     _moja:
   714  00D4                     	ds	12
   715  00E0                     _kisu:
   716  00E0                     	ds	10
   717                           
   718                           	psect	dataBANK2
   719  0120                     __pdataBANK2:
   720  0120                     _samf:
   721  0120                     	ds	32
   722  0140                     _num0:
   723  0140                     	ds	20
   724  0154                     _mojf:
   725  0154                     	ds	12
   726                           
   727                           	psect	inittext
   728  0312                     init_ram:
   729  0312  00FE               	movwf	btemp
   730  0313                     initloop:
   731  0313  0012               	moviw fsr0++
   732  0314  001E               	movwi fsr1++
   733  0315  0BFE               	decfsz	btemp,f
   734  0316  2B13               	goto	initloop
   735  0317  3400               	retlw	0
   736                           
   737                           	psect	clrtext
   738  030C                     clear_ram0:	
   739                           ;	Called with FSR0 containing the base address, and
   740                           ;	WREG with the size to clear
   741                           
   742  030C  0064               	clrwdt	;clear the watchdog before getting into this loop
   743  030D                     clrloop0:
   744  030D  0180               	clrf	0	;clear RAM location pointed to by FSR
   745  030E  3101               	addfsr 0,1
   746  030F  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   747  0310  2B0D               	goto	clrloop0	;have we reached the end yet?
   748  0311  3400               	retlw	0	;all done for this memory range, return
   749                           
   750                           	psect	cstackCOMMON
   751  0070                     __pcstackCOMMON:
   752  0070                     ?_portinit:
   753  0070                     ??_portinit:	
   754                           ; 1 bytes @ 0x0
   755                           
   756  0070                     ?_zenoff:	
   757                           ; 1 bytes @ 0x0
   758                           
   759  0070                     ??_zenoff:	
   760                           ; 1 bytes @ 0x0
   761                           
   762  0070                     ?_dynam:	
   763                           ; 1 bytes @ 0x0
   764                           
   765  0070                     ?_tactsw:	
   766                           ; 1 bytes @ 0x0
   767                           
   768  0070                     ??_tactsw:	
   769                           ; 1 bytes @ 0x0
   770                           
   771  0070                     ?_fclr:	
   772                           ; 1 bytes @ 0x0
   773                           
   774  0070                     ?_main:	
   775                           ; 1 bytes @ 0x0
   776                           
   777  0070                     ?___lwdiv:	
   778                           ; 1 bytes @ 0x0
   779                           
   780  0070                     dynam@dig1data:	
   781                           ; 2 bytes @ 0x0
   782                           
   783  0070                     fclr@flg:	
   784                           ; 2 bytes @ 0x0
   785                           
   786  0070                     ___lwdiv@divisor:	
   787                           ; 2 bytes @ 0x0
   788                           
   789                           
   790                           ; 2 bytes @ 0x0
   791  0070                     	ds	2
   792  0072                     ??_fclr:
   793  0072                     dynam@dig2data:	
   794                           ; 1 bytes @ 0x2
   795                           
   796  0072                     tactsw@b:	
   797                           ; 2 bytes @ 0x2
   798                           
   799  0072                     ___lwdiv@dividend:	
   800                           ; 2 bytes @ 0x2
   801                           
   802                           
   803                           ; 2 bytes @ 0x2
   804  0072                     	ds	2
   805  0074                     ??___lwdiv:
   806  0074                     dynam@smdata:	
   807                           ; 1 bytes @ 0x4
   808                           
   809  0074                     tactsw@c:	
   810                           ; 2 bytes @ 0x4
   811                           
   812                           
   813                           ; 2 bytes @ 0x4
   814  0074                     	ds	1
   815  0075                     ___lwdiv@quotient:
   816                           
   817                           ; 2 bytes @ 0x5
   818  0075                     	ds	1
   819  0076                     dynam@tr:
   820  0076                     tactsw@a:	
   821                           ; 2 bytes @ 0x6
   822                           
   823                           
   824                           ; 2 bytes @ 0x6
   825  0076                     	ds	1
   826  0077                     ___lwdiv@counter:
   827                           
   828                           ; 1 bytes @ 0x7
   829  0077                     	ds	1
   830  0078                     ??_dynam:
   831  0078                     ?_tact:	
   832                           ; 1 bytes @ 0x8
   833                           
   834  0078                     ??_waitSEG:	
   835                           ; 1 bytes @ 0x8
   836                           
   837  0078                     ??_motor:	
   838                           ; 1 bytes @ 0x8
   839                           
   840  0078                     tact@mode:	
   841                           ; 1 bytes @ 0x8
   842                           
   843  0078                     waitSEG@i:	
   844                           ; 2 bytes @ 0x8
   845                           
   846  0078                     motor@i:	
   847                           ; 2 bytes @ 0x8
   848                           
   849                           
   850                           ; 2 bytes @ 0x8
   851  0078                     	ds	2
   852  007A                     ??_tact:
   853  007A                     ??_main:	
   854                           ; 1 bytes @ 0xA
   855                           
   856                           
   857                           ; 1 bytes @ 0xA
   858  007A                     	ds	1
   859                           
   860                           	psect	cstackBANK0
   861  0040                     __pcstackBANK0:
   862  0040                     dynam@smd:
   863                           
   864                           ; 2 bytes @ 0x0
   865  0040                     	ds	2
   866  0042                     dynam@tm:
   867                           
   868                           ; 2 bytes @ 0x2
   869  0042                     	ds	2
   870  0044                     dynam@j:
   871                           
   872                           ; 2 bytes @ 0x4
   873  0044                     	ds	2
   874  0046                     dynam@ext:
   875                           
   876                           ; 2 bytes @ 0x6
   877  0046                     	ds	2
   878  0048                     ?_waitSEG:
   879  0048                     ?_motor:	
   880                           ; 1 bytes @ 0x8
   881                           
   882  0048                     waitSEG@seg1:	
   883                           ; 1 bytes @ 0x8
   884                           
   885  0048                     motor@kakudo:	
   886                           ; 2 bytes @ 0x8
   887                           
   888                           
   889                           ; 2 bytes @ 0x8
   890  0048                     	ds	2
   891  004A                     waitSEG@seg2:
   892  004A                     motor@dig1data:	
   893                           ; 2 bytes @ 0xA
   894                           
   895                           
   896                           ; 2 bytes @ 0xA
   897  004A                     	ds	2
   898  004C                     waitSEG@wt:
   899  004C                     motor@dig2data:	
   900                           ; 2 bytes @ 0xC
   901                           
   902                           
   903                           ; 2 bytes @ 0xC
   904  004C                     	ds	2
   905  004E                     motor@smdata:
   906                           
   907                           ; 2 bytes @ 0xE
   908  004E                     	ds	2
   909  0050                     motor@tr:
   910                           
   911                           ; 2 bytes @ 0x10
   912  0050                     	ds	10
   913  005A                     main@i:
   914                           
   915                           ; 2 bytes @ 0x1A
   916  005A                     	ds	2
   917                           
   918                           	psect	maintext
   919  050D                     __pmaintext:	
   920 ;;
   921 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   922 ;;
   923 ;; *************** function _main *****************
   924 ;; Defined at:
   925 ;;		line 468 in file "Q2.c"
   926 ;; Parameters:    Size  Location     Type
   927 ;;		None
   928 ;; Auto vars:     Size  Location     Type
   929 ;;  i               2   26[BANK0 ] int 
   930 ;;  n               2    0        int 
   931 ;;  m               2    0        int 
   932 ;;  k               2    0        int 
   933 ;;  j               2    0        int 
   934 ;; Return value:  Size  Location     Type
   935 ;;                  1    wreg      void 
   936 ;; Registers used:
   937 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   938 ;; Tracked objects:
   939 ;;		On entry : B1F/0
   940 ;;		On exit  : 0/0
   941 ;;		Unchanged: 0/0
   942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   944 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
   945 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   946 ;;      Totals:         1      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
   947 ;;Total ram usage:       11 bytes
   948 ;; Hardware stack levels required when called:    2
   949 ;; This function calls:
   950 ;;		_dynam
   951 ;;		_fclr
   952 ;;		_motor
   953 ;;		_portinit
   954 ;;		_tact
   955 ;;		_waitSEG
   956 ;;		_zenoff
   957 ;; This function is called by:
   958 ;;		Startup code after reset
   959 ;; This function uses a non-reentrant model
   960 ;;
   961                           
   962                           
   963                           ;psect for function _main
   964  050D                     _main:
   965  050D                     l2231:	
   966                           ;incstack = 0
   967                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   968                           
   969                           
   970                           ;Q2.c: 471:     OSCCON=0x7A;
   971  050D  307A               	movlw	122
   972  050E  0021               	movlb	1	; select bank1
   973  050F  0099               	movwf	25	;volatile
   974  0510                     l2233:
   975                           
   976                           ;Q2.c: 473:     portinit();
   977  0510  3183  2333  3185   	fcall	_portinit
   978                           
   979                           ;Q2.c: 475:     zenoff();
   980  0513  3183  2318  3185   	fcall	_zenoff
   981  0516                     l2235:
   982  0516                     l2237:
   983  0516                     l2239:
   984  0516                     l2241:
   985  0516                     l2243:
   986  0516                     l268:	
   987                           ;Q2.c: 480:     while((RA0!=1)||(RA1!=1)||(RA2!=1));
   988                           
   989  0516  0020               	movlb	0	; select bank0
   990  0517  1C0C               	btfss	12,0	;volatile
   991  0518  2D1A               	goto	u1711
   992  0519  2D1B               	goto	u1710
   993  051A                     u1711:
   994  051A  2D16               	goto	l268
   995  051B                     u1710:
   996  051B                     l2245:
   997  051B  1C8C               	btfss	12,1	;volatile
   998  051C  2D1E               	goto	u1721
   999  051D  2D1F               	goto	u1720
  1000  051E                     u1721:
  1001  051E  2D16               	goto	l268
  1002  051F                     u1720:
  1003  051F                     l2247:
  1004  051F  1D0C               	btfss	12,2	;volatile
  1005  0520  2D22               	goto	u1731
  1006  0521  2D23               	goto	u1730
  1007  0522                     u1731:
  1008  0522  2D16               	goto	l268
  1009  0523                     u1730:
  1010  0523                     l270:
  1011                           
  1012                           ;Q2.c: 483:     RC0=RC2=RC1=1;
  1013  0523  148E               	bsf	14,1	;volatile
  1014  0524  188E               	btfsc	14,1	;volatile
  1015  0525  2D27               	goto	u1741
  1016  0526  2D2A               	goto	u1740
  1017  0527                     u1741:
  1018  0527  0020               	movlb	0	; select bank0
  1019  0528  150E               	bsf	14,2	;volatile
  1020  0529  2D2C               	goto	u1754
  1021  052A                     u1740:
  1022  052A  0020               	movlb	0	; select bank0
  1023  052B  110E               	bcf	14,2	;volatile
  1024  052C                     u1754:
  1025  052C  190E               	btfsc	14,2	;volatile
  1026  052D  2D2F               	goto	u1751
  1027  052E  2D32               	goto	u1750
  1028  052F                     u1751:
  1029  052F  0020               	movlb	0	; select bank0
  1030  0530  140E               	bsf	14,0	;volatile
  1031  0531  2D34               	goto	u1764
  1032  0532                     u1750:
  1033  0532  0020               	movlb	0	; select bank0
  1034  0533  100E               	bcf	14,0	;volatile
  1035  0534                     u1764:
  1036  0534                     l2249:
  1037                           
  1038                           ;Q2.c: 486:     fclr(2);
  1039  0534  3002               	movlw	2
  1040  0535  00F0               	movwf	fclr@flg
  1041  0536  3000               	movlw	0
  1042  0537  00F1               	movwf	fclr@flg+1
  1043  0538  3183  2346  3185   	fcall	_fclr
  1044  053B                     l2251:
  1045                           
  1046                           ;Q2.c: 491:         if(RA0 == 0){
  1047  053B  0020               	movlb	0	; select bank0
  1048  053C  180C               	btfsc	12,0	;volatile
  1049  053D  2D3F               	goto	u1771
  1050  053E  2D40               	goto	u1770
  1051  053F                     u1771:
  1052  053F  2D3B               	goto	l2251
  1053  0540                     u1770:
  1054  0540                     l276:	
  1055                           ;Q2.c: 497:     while(1){
  1056                           
  1057                           
  1058                           ;Q2.c: 498:         if(RA0 == 0){
  1059  0540  0020               	movlb	0	; select bank0
  1060  0541  180C               	btfsc	12,0	;volatile
  1061  0542  2D44               	goto	u1781
  1062  0543  2D45               	goto	u1780
  1063  0544                     u1781:
  1064  0544  2D40               	goto	l276
  1065  0545                     u1780:
  1066  0545                     l2255:
  1067                           
  1068                           ;Q2.c: 501:             dynam(0x40,0x40,0,0);
  1069  0545  3040               	movlw	64
  1070  0546  00F0               	movwf	dynam@dig1data
  1071  0547  3000               	movlw	0
  1072  0548  00F1               	movwf	dynam@dig1data+1
  1073  0549  3040               	movlw	64
  1074  054A  00F2               	movwf	dynam@dig2data
  1075  054B  3000               	movlw	0
  1076  054C  00F3               	movwf	dynam@dig2data+1
  1077  054D  3000               	movlw	0
  1078  054E  00F4               	movwf	dynam@smdata
  1079  054F  00F5               	movwf	dynam@smdata+1
  1080  0550  3000               	movlw	0
  1081  0551  00F6               	movwf	dynam@tr
  1082  0552  00F7               	movwf	dynam@tr+1
  1083  0553  3186  2665  3185   	fcall	_dynam
  1084                           
  1085                           ;Q2.c: 506:             tact(0);
  1086  0556  3000               	movlw	0
  1087  0557  00F8               	movwf	tact@mode
  1088  0558  00F9               	movwf	tact@mode+1
  1089  0559  3184  24C1  3185   	fcall	_tact
  1090  055C                     l2257:
  1091                           
  1092                           ;Q2.c: 508:             if(((flag_sw3==1)&&(flag_R==1))){
  1093  055C  037B               	decf	_flag_sw3,w
  1094  055D  047C               	iorwf	_flag_sw3+1,w
  1095  055E  1D03               	btfss	3,2
  1096  055F  2D61               	goto	u1791
  1097  0560  2D62               	goto	u1790
  1098  0561                     u1791:
  1099  0561  2D40               	goto	l276
  1100  0562                     u1790:
  1101  0562                     l2259:
  1102  0562  0020               	movlb	0	; select bank0
  1103  0563  033A               	decf	_flag_R,w
  1104  0564  043B               	iorwf	_flag_R+1,w
  1105  0565  1D03               	btfss	3,2
  1106  0566  2D68               	goto	u1801
  1107  0567  2D69               	goto	u1800
  1108  0568                     u1801:
  1109  0568  2D40               	goto	l276
  1110  0569                     u1800:
  1111  0569                     l2261:
  1112                           
  1113                           ;Q2.c: 510:                 fclr(2);
  1114  0569  3002               	movlw	2
  1115  056A  00F0               	movwf	fclr@flg
  1116  056B  3000               	movlw	0
  1117  056C  00F1               	movwf	fclr@flg+1
  1118  056D  3183  2346  3185   	fcall	_fclr
  1119  0570                     l2263:
  1120                           
  1121                           ;Q2.c: 514:                     for(i = 0;i <= 3; i++){
  1122  0570  0020               	movlb	0	; select bank0
  1123  0571  01DA               	clrf	main@i
  1124  0572  01DB               	clrf	main@i+1
  1125  0573                     l2269:
  1126                           
  1127                           ;Q2.c: 516:                         waitSEG(moji[i],moji[i],1000);
  1128  0573  0020               	movlb	0	; select bank0
  1129  0574  355A               	lslf	main@i,w
  1130  0575  3EC0               	addlw	(low (_moji| 0))& (0+255)
  1131  0576  0086               	movwf	6
  1132  0577  0187               	clrf	7
  1133  0578  3F40               	moviw [0]fsr1
  1134  0579  00C8               	movwf	waitSEG@seg1
  1135  057A  3F41               	moviw [1]fsr1
  1136  057B  00C9               	movwf	waitSEG@seg1+1
  1137  057C  355A               	lslf	main@i,w
  1138  057D  3EC0               	addlw	(low (_moji| 0))& (0+255)
  1139  057E  0086               	movwf	6
  1140  057F  0187               	clrf	7
  1141  0580  3F40               	moviw [0]fsr1
  1142  0581  00CA               	movwf	waitSEG@seg2
  1143  0582  3F41               	moviw [1]fsr1
  1144  0583  00CB               	movwf	waitSEG@seg2+1
  1145  0584  30E8               	movlw	232
  1146  0585  00CC               	movwf	waitSEG@wt
  1147  0586  3003               	movlw	3
  1148  0587  00CD               	movwf	waitSEG@wt+1
  1149  0588  3183  238A  3185   	fcall	_waitSEG
  1150  058B                     l2271:
  1151                           
  1152                           ;Q2.c: 518:                         if(RA0 = 1){
  1153  058B  0020               	movlb	0	; select bank0
  1154  058C  140C               	bsf	12,0	;volatile
  1155  058D  1C0C               	btfss	12,0	;volatile
  1156  058E  2D90               	goto	u1811
  1157  058F  2D91               	goto	u1810
  1158  0590                     u1811:
  1159  0590  2E51               	goto	l2303
  1160  0591                     u1810:
  1161  0591                     l2273:
  1162                           
  1163                           ;Q2.c: 521:                                 tact(2);
  1164  0591  3002               	movlw	2
  1165  0592  00F8               	movwf	tact@mode
  1166  0593  3000               	movlw	0
  1167  0594  00F9               	movwf	tact@mode+1
  1168  0595  3184  24C1  3185   	fcall	_tact
  1169  0598                     l2275:
  1170                           
  1171                           ;Q2.c: 523:                                 if(((flag_sw3==0)&&(flag_P==1))){
  1172  0598  087B               	movf	_flag_sw3,w
  1173  0599  047C               	iorwf	_flag_sw3+1,w
  1174  059A  1D03               	btfss	3,2
  1175  059B  2D9D               	goto	u1821
  1176  059C  2D9E               	goto	u1820
  1177  059D                     u1821:
  1178  059D  2E35               	goto	l2301
  1179  059E                     u1820:
  1180  059E                     l2277:
  1181  059E  0020               	movlb	0	; select bank0
  1182  059F  0338               	decf	_flag_P,w
  1183  05A0  0439               	iorwf	_flag_P+1,w
  1184  05A1  1D03               	btfss	3,2
  1185  05A2  2DA4               	goto	u1831
  1186  05A3  2DA5               	goto	u1830
  1187  05A4                     u1831:
  1188  05A4  2E35               	goto	l2301
  1189  05A5                     u1830:
  1190  05A5  2E22               	goto	l2299
  1191  05A6                     l2281:
  1192                           
  1193                           ;Q2.c: 528:                                         motor(360,(0x01|0x02|0x04|0x08|0x10|
      +                          0x40),(0x02|0x04|0x10|0x20|0x40),1,1);
  1194  05A6  3068               	movlw	104
  1195  05A7  00C8               	movwf	motor@kakudo
  1196  05A8  3001               	movlw	1
  1197  05A9  00C9               	movwf	motor@kakudo+1
  1198  05AA  305F               	movlw	95
  1199  05AB  00CA               	movwf	motor@dig1data
  1200  05AC  3000               	movlw	0
  1201  05AD  00CB               	movwf	motor@dig1data+1
  1202  05AE  3076               	movlw	118
  1203  05AF  00CC               	movwf	motor@dig2data
  1204  05B0  3000               	movlw	0
  1205  05B1  00CD               	movwf	motor@dig2data+1
  1206  05B2  3001               	movlw	1
  1207  05B3  00CE               	movwf	motor@smdata
  1208  05B4  3000               	movlw	0
  1209  05B5  00CF               	movwf	motor@smdata+1
  1210  05B6  3001               	movlw	1
  1211  05B7  00D0               	movwf	motor@tr
  1212  05B8  3000               	movlw	0
  1213  05B9  00D1               	movwf	motor@tr+1
  1214  05BA  3183  2366  3185   	fcall	_motor
  1215                           
  1216                           ;Q2.c: 529:                                         fclr(2);
  1217  05BD  3002               	movlw	2
  1218  05BE  00F0               	movwf	fclr@flg
  1219  05BF  3000               	movlw	0
  1220  05C0  00F1               	movwf	fclr@flg+1
  1221  05C1  3183  2346  3185   	fcall	_fclr
  1222                           
  1223                           ;Q2.c: 530:                                         goto hukki;
  1224  05C4  2D40               	goto	l276
  1225  05C5                     l2285:
  1226                           
  1227                           ;Q2.c: 534:                                         motor(180,(0x04|0x08|0x10|0x20|0x40)
      +                          ,(0x08|0x10|0x20),1,5);
  1228  05C5  30B4               	movlw	180
  1229  05C6  00C8               	movwf	motor@kakudo
  1230  05C7  3000               	movlw	0
  1231  05C8  00C9               	movwf	motor@kakudo+1
  1232  05C9  307C               	movlw	124
  1233  05CA  00CA               	movwf	motor@dig1data
  1234  05CB  3000               	movlw	0
  1235  05CC  00CB               	movwf	motor@dig1data+1
  1236  05CD  3038               	movlw	56
  1237  05CE  00CC               	movwf	motor@dig2data
  1238  05CF  3000               	movlw	0
  1239  05D0  00CD               	movwf	motor@dig2data+1
  1240  05D1  3001               	movlw	1
  1241  05D2  00CE               	movwf	motor@smdata
  1242  05D3  3000               	movlw	0
  1243  05D4  00CF               	movwf	motor@smdata+1
  1244  05D5  3005               	movlw	5
  1245  05D6  00D0               	movwf	motor@tr
  1246  05D7  3000               	movlw	0
  1247  05D8  00D1               	movwf	motor@tr+1
  1248  05D9  3183  2366  3185   	fcall	_motor
  1249                           
  1250                           ;Q2.c: 535:                                         fclr(2);
  1251  05DC  3002               	movlw	2
  1252  05DD  00F0               	movwf	fclr@flg
  1253  05DE  3000               	movlw	0
  1254  05DF  00F1               	movwf	fclr@flg+1
  1255  05E0  3183  2346  3185   	fcall	_fclr
  1256                           
  1257                           ;Q2.c: 536:                                         goto hukki;
  1258  05E3  2D40               	goto	l276
  1259  05E4                     l2289:
  1260                           
  1261                           ;Q2.c: 540:                                         motor(360,(0x08|0x10|0x40),(0x02|0x0
      +                          4|0x10|0x20|0x40),2,1);
  1262  05E4  3068               	movlw	104
  1263  05E5  00C8               	movwf	motor@kakudo
  1264  05E6  3001               	movlw	1
  1265  05E7  00C9               	movwf	motor@kakudo+1
  1266  05E8  3058               	movlw	88
  1267  05E9  00CA               	movwf	motor@dig1data
  1268  05EA  3000               	movlw	0
  1269  05EB  00CB               	movwf	motor@dig1data+1
  1270  05EC  3076               	movlw	118
  1271  05ED  00CC               	movwf	motor@dig2data
  1272  05EE  3000               	movlw	0
  1273  05EF  00CD               	movwf	motor@dig2data+1
  1274  05F0  3002               	movlw	2
  1275  05F1  00CE               	movwf	motor@smdata
  1276  05F2  3000               	movlw	0
  1277  05F3  00CF               	movwf	motor@smdata+1
  1278  05F4  3001               	movlw	1
  1279  05F5  00D0               	movwf	motor@tr
  1280  05F6  3000               	movlw	0
  1281  05F7  00D1               	movwf	motor@tr+1
  1282  05F8  3183  2366  3185   	fcall	_motor
  1283                           
  1284                           ;Q2.c: 541:                                         fclr(2);
  1285  05FB  3002               	movlw	2
  1286  05FC  00F0               	movwf	fclr@flg
  1287  05FD  3000               	movlw	0
  1288  05FE  00F1               	movwf	fclr@flg+1
  1289  05FF  3183  2346  3185   	fcall	_fclr
  1290                           
  1291                           ;Q2.c: 542:                                         goto hukki;
  1292  0602  2D40               	goto	l276
  1293  0603                     l2293:
  1294                           
  1295                           ;Q2.c: 546:                                         motor(180,(0x02|0x04|0x08|0x10|0x40)
      +                          ,(0x08|0x10|0x20),2,5);
  1296  0603  30B4               	movlw	180
  1297  0604  00C8               	movwf	motor@kakudo
  1298  0605  3000               	movlw	0
  1299  0606  00C9               	movwf	motor@kakudo+1
  1300  0607  305E               	movlw	94
  1301  0608  00CA               	movwf	motor@dig1data
  1302  0609  3000               	movlw	0
  1303  060A  00CB               	movwf	motor@dig1data+1
  1304  060B  3038               	movlw	56
  1305  060C  00CC               	movwf	motor@dig2data
  1306  060D  3000               	movlw	0
  1307  060E  00CD               	movwf	motor@dig2data+1
  1308  060F  3002               	movlw	2
  1309  0610  00CE               	movwf	motor@smdata
  1310  0611  3000               	movlw	0
  1311  0612  00CF               	movwf	motor@smdata+1
  1312  0613  3005               	movlw	5
  1313  0614  00D0               	movwf	motor@tr
  1314  0615  3000               	movlw	0
  1315  0616  00D1               	movwf	motor@tr+1
  1316  0617  3183  2366  3185   	fcall	_motor
  1317                           
  1318                           ;Q2.c: 547:                                         fclr(2);
  1319  061A  3002               	movlw	2
  1320  061B  00F0               	movwf	fclr@flg
  1321  061C  3000               	movlw	0
  1322  061D  00F1               	movwf	fclr@flg+1
  1323  061E  3183  2346  3185   	fcall	_fclr
  1324                           
  1325                           ;Q2.c: 548:                                         goto hukki;
  1326  0621  2D40               	goto	l276
  1327  0622                     l2299:
  1328                           
  1329                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1330                           ; Switch size 1, requested type "simple"
  1331                           ; Number of cases is 1, Range of values is 0 to 0
  1332                           ; switch strategies available:
  1333                           ; Name         Instructions Cycles
  1334                           ; simple_byte            4     3 (average)
  1335                           ; direct_byte            8     6 (fixed)
  1336                           ; jumptable            260     6 (fixed)
  1337                           ;	Chosen strategy is simple_byte
  1338  0622  085B               	movf	main@i+1,w
  1339  0623  3A00               	xorlw	0	; case 0
  1340  0624  1903               	skipnz
  1341  0625  2E27               	goto	l2497
  1342  0626  2E50               	goto	l292
  1343  0627                     l2497:
  1344                           
  1345                           ; Switch size 1, requested type "simple"
  1346                           ; Number of cases is 4, Range of values is 0 to 3
  1347                           ; switch strategies available:
  1348                           ; Name         Instructions Cycles
  1349                           ; simple_byte           13     7 (average)
  1350                           ; direct_byte           14     6 (fixed)
  1351                           ; jumptable            260     6 (fixed)
  1352                           ;	Chosen strategy is simple_byte
  1353  0627  085A               	movf	main@i,w
  1354  0628  3A00               	xorlw	0	; case 0
  1355  0629  1903               	skipnz
  1356  062A  2DA6               	goto	l2281
  1357  062B  3A01               	xorlw	1	; case 1
  1358  062C  1903               	skipnz
  1359  062D  2DC5               	goto	l2285
  1360  062E  3A03               	xorlw	3	; case 2
  1361  062F  1903               	skipnz
  1362  0630  2DE4               	goto	l2289
  1363  0631  3A01               	xorlw	1	; case 3
  1364  0632  1903               	skipnz
  1365  0633  2E03               	goto	l2293
  1366  0634  2E50               	goto	l292
  1367  0635                     l2301:
  1368                           
  1369                           ;Q2.c: 557:                                     dynam(moji[i],moji[i],0,0);
  1370  0635  0020               	movlb	0	; select bank0
  1371  0636  355A               	lslf	main@i,w
  1372  0637  3EC0               	addlw	(low (_moji| 0))& (0+255)
  1373  0638  0086               	movwf	6
  1374  0639  0187               	clrf	7
  1375  063A  3F40               	moviw [0]fsr1
  1376  063B  00F0               	movwf	dynam@dig1data
  1377  063C  3F41               	moviw [1]fsr1
  1378  063D  00F1               	movwf	dynam@dig1data+1
  1379  063E  355A               	lslf	main@i,w
  1380  063F  3EC0               	addlw	(low (_moji| 0))& (0+255)
  1381  0640  0086               	movwf	6
  1382  0641  0187               	clrf	7
  1383  0642  3F40               	moviw [0]fsr1
  1384  0643  00F2               	movwf	dynam@dig2data
  1385  0644  3F41               	moviw [1]fsr1
  1386  0645  00F3               	movwf	dynam@dig2data+1
  1387  0646  3000               	movlw	0
  1388  0647  00F4               	movwf	dynam@smdata
  1389  0648  00F5               	movwf	dynam@smdata+1
  1390  0649  3000               	movlw	0
  1391  064A  00F6               	movwf	dynam@tr
  1392  064B  00F7               	movwf	dynam@tr+1
  1393  064C  3186  2665  3185   	fcall	_dynam
  1394  064F  2D91               	goto	l2273
  1395  0650                     l292:	
  1396                           ;Q2.c: 559:                                 }
  1397                           
  1398  0650  2D91               	goto	l2273
  1399  0651                     l2303:
  1400                           
  1401                           ;Q2.c: 573:                     }
  1402  0651  3001               	movlw	1
  1403  0652  07DA               	addwf	main@i,f
  1404  0653  3000               	movlw	0
  1405  0654  3DDB               	addwfc	main@i+1,f
  1406  0655  085B               	movf	main@i+1,w
  1407  0656  3A80               	xorlw	128
  1408  0657  00FA               	movwf	??_main
  1409  0658  3080               	movlw	128
  1410  0659  027A               	subwf	??_main,w
  1411  065A  1D03               	skipz
  1412  065B  2E5E               	goto	u1845
  1413  065C  3004               	movlw	4
  1414  065D  025A               	subwf	main@i,w
  1415  065E                     u1845:
  1416  065E  1C03               	skipc
  1417  065F  2E61               	goto	u1841
  1418  0660  2E62               	goto	u1840
  1419  0661                     u1841:
  1420  0661  2D73               	goto	l2269
  1421  0662                     u1840:
  1422  0662  2D70               	goto	l2263
  1423  0663  3180  2802         	ljmp	start
  1424  0665                     __end_of_main:
  1425                           
  1426                           	psect	text1
  1427  0318                     __ptext1:	
  1428 ;; *************** function _zenoff *****************
  1429 ;; Defined at:
  1430 ;;		line 195 in file "Q2.c"
  1431 ;; Parameters:    Size  Location     Type
  1432 ;;		None
  1433 ;; Auto vars:     Size  Location     Type
  1434 ;;		None
  1435 ;; Return value:  Size  Location     Type
  1436 ;;                  1    wreg      void 
  1437 ;; Registers used:
  1438 ;;		status,2
  1439 ;; Tracked objects:
  1440 ;;		On entry : 0/0
  1441 ;;		On exit  : 0/0
  1442 ;;		Unchanged: 0/0
  1443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1448 ;;Total ram usage:        0 bytes
  1449 ;; Hardware stack levels used:    1
  1450 ;; This function calls:
  1451 ;;		Nothing
  1452 ;; This function is called by:
  1453 ;;		_main
  1454 ;; This function uses a non-reentrant model
  1455 ;;
  1456                           
  1457                           
  1458                           ;psect for function _zenoff
  1459  0318                     _zenoff:
  1460  0318                     l1909:	
  1461                           ;incstack = 0
  1462                           ; Regs used in _zenoff: [status,2]
  1463                           
  1464                           
  1465                           ;Q2.c: 197:     RC0=1;
  1466  0318  0020               	movlb	0	; select bank0
  1467  0319  140E               	bsf	14,0	;volatile
  1468                           
  1469                           ;Q2.c: 198:     RC1=1;
  1470  031A  148E               	bsf	14,1	;volatile
  1471                           
  1472                           ;Q2.c: 199:     RC2=1;
  1473  031B  150E               	bsf	14,2	;volatile
  1474  031C                     l1911:
  1475                           
  1476                           ;Q2.c: 200:     PORTB=0x00;
  1477  031C  018D               	clrf	13	;volatile
  1478  031D                     l1913:
  1479                           
  1480                           ;Q2.c: 201:     RC7=0;RC7=1;RC7=0;
  1481  031D  138E               	bcf	14,7	;volatile
  1482  031E                     l1915:
  1483  031E  178E               	bsf	14,7	;volatile
  1484  031F                     l1917:
  1485  031F  138E               	bcf	14,7	;volatile
  1486  0320                     l108:
  1487  0320  0008               	return
  1488  0321                     __end_of_zenoff:
  1489                           
  1490                           	psect	text2
  1491  038A                     __ptext2:	
  1492 ;; *************** function _waitSEG *****************
  1493 ;; Defined at:
  1494 ;;		line 451 in file "Q2.c"
  1495 ;; Parameters:    Size  Location     Type
  1496 ;;  seg1            2    8[BANK0 ] unsigned short 
  1497 ;;  seg2            2   10[BANK0 ] unsigned short 
  1498 ;;  wt              2   12[BANK0 ] unsigned short 
  1499 ;; Auto vars:     Size  Location     Type
  1500 ;;  i               2    8[COMMON] unsigned int 
  1501 ;; Return value:  Size  Location     Type
  1502 ;;                  1    wreg      void 
  1503 ;; Registers used:
  1504 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1505 ;; Tracked objects:
  1506 ;;		On entry : 0/0
  1507 ;;		On exit  : 0/0
  1508 ;;		Unchanged: 0/0
  1509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1510 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1511 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1513 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1514 ;;Total ram usage:        8 bytes
  1515 ;; Hardware stack levels used:    1
  1516 ;; Hardware stack levels required when called:    1
  1517 ;; This function calls:
  1518 ;;		___lwdiv
  1519 ;;		_dynam
  1520 ;; This function is called by:
  1521 ;;		_main
  1522 ;; This function uses a non-reentrant model
  1523 ;;
  1524                           
  1525                           
  1526                           ;psect for function _waitSEG
  1527  038A                     _waitSEG:
  1528  038A                     l1969:	
  1529                           ;incstack = 0
  1530                           ; Regs used in _waitSEG: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1531                           
  1532                           
  1533                           ;Q2.c: 451: void waitSEG(unsigned short seg1,unsigned short seg2,unsigned short wt);Q2.c
      +                          : 452: {;Q2.c: 453:     wt = wt / 10;
  1534  038A  300A               	movlw	10
  1535  038B  00F0               	movwf	___lwdiv@divisor
  1536  038C  3000               	movlw	0
  1537  038D  00F1               	movwf	___lwdiv@divisor+1
  1538  038E  0020               	movlb	0	; select bank0
  1539  038F  084D               	movf	waitSEG@wt+1,w
  1540  0390  00F3               	movwf	___lwdiv@dividend+1
  1541  0391  084C               	movf	waitSEG@wt,w
  1542  0392  00F2               	movwf	___lwdiv@dividend
  1543  0393  3183  23BE  3183   	fcall	___lwdiv
  1544  0396  0871               	movf	?___lwdiv+1,w
  1545  0397  0020               	movlb	0	; select bank0
  1546  0398  00CD               	movwf	waitSEG@wt+1
  1547  0399  0870               	movf	?___lwdiv,w
  1548  039A  00CC               	movwf	waitSEG@wt
  1549  039B                     l1971:
  1550                           
  1551                           ;Q2.c: 454:     unsigned int i;;Q2.c: 455:     for(i=wt;i>0;--i){
  1552  039B  084D               	movf	waitSEG@wt+1,w
  1553  039C  00F9               	movwf	waitSEG@i+1
  1554  039D  084C               	movf	waitSEG@wt,w
  1555  039E  00F8               	movwf	waitSEG@i
  1556  039F                     l1973:
  1557  039F  0878               	movf	waitSEG@i,w
  1558  03A0  0479               	iorwf	waitSEG@i+1,w
  1559  03A1  1D03               	btfss	3,2
  1560  03A2  2BA4               	goto	u1331
  1561  03A3  2BA5               	goto	u1330
  1562  03A4                     u1331:
  1563  03A4  2BA6               	goto	l1977
  1564  03A5                     u1330:
  1565  03A5  2BBD               	goto	l258
  1566  03A6                     l1977:
  1567                           
  1568                           ;Q2.c: 456:         dynam(seg1,seg2,0,0);
  1569  03A6  0020               	movlb	0	; select bank0
  1570  03A7  0849               	movf	waitSEG@seg1+1,w
  1571  03A8  00F1               	movwf	dynam@dig1data+1
  1572  03A9  0848               	movf	waitSEG@seg1,w
  1573  03AA  00F0               	movwf	dynam@dig1data
  1574  03AB  084B               	movf	waitSEG@seg2+1,w
  1575  03AC  00F3               	movwf	dynam@dig2data+1
  1576  03AD  084A               	movf	waitSEG@seg2,w
  1577  03AE  00F2               	movwf	dynam@dig2data
  1578  03AF  3000               	movlw	0
  1579  03B0  00F4               	movwf	dynam@smdata
  1580  03B1  00F5               	movwf	dynam@smdata+1
  1581  03B2  3000               	movlw	0
  1582  03B3  00F6               	movwf	dynam@tr
  1583  03B4  00F7               	movwf	dynam@tr+1
  1584  03B5  3186  2665  3183   	fcall	_dynam
  1585  03B8                     l1979:
  1586                           
  1587                           ;Q2.c: 457:     }
  1588  03B8  3001               	movlw	1
  1589  03B9  02F8               	subwf	waitSEG@i,f
  1590  03BA  3000               	movlw	0
  1591  03BB  3BF9               	subwfb	waitSEG@i+1,f
  1592  03BC  2B9F               	goto	l1973
  1593  03BD                     l258:
  1594  03BD  0008               	return
  1595  03BE                     __end_of_waitSEG:
  1596                           
  1597                           	psect	text3
  1598  03BE                     __ptext3:	
  1599 ;; *************** function ___lwdiv *****************
  1600 ;; Defined at:
  1601 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\lwdiv.c"
  1602 ;; Parameters:    Size  Location     Type
  1603 ;;  divisor         2    0[COMMON] unsigned int 
  1604 ;;  dividend        2    2[COMMON] unsigned int 
  1605 ;; Auto vars:     Size  Location     Type
  1606 ;;  quotient        2    5[COMMON] unsigned int 
  1607 ;;  counter         1    7[COMMON] unsigned char 
  1608 ;; Return value:  Size  Location     Type
  1609 ;;                  2    0[COMMON] unsigned int 
  1610 ;; Registers used:
  1611 ;;		wreg, status,2, status,0
  1612 ;; Tracked objects:
  1613 ;;		On entry : 0/0
  1614 ;;		On exit  : 0/0
  1615 ;;		Unchanged: 0/0
  1616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1617 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1618 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1619 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1620 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1621 ;;Total ram usage:        8 bytes
  1622 ;; Hardware stack levels used:    1
  1623 ;; This function calls:
  1624 ;;		Nothing
  1625 ;; This function is called by:
  1626 ;;		_waitSEG
  1627 ;; This function uses a non-reentrant model
  1628 ;;
  1629                           
  1630                           
  1631                           ;psect for function ___lwdiv
  1632  03BE                     ___lwdiv:
  1633  03BE                     l1853:	
  1634                           ;incstack = 0
  1635                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1636                           
  1637  03BE  01F5               	clrf	___lwdiv@quotient
  1638  03BF  01F6               	clrf	___lwdiv@quotient+1
  1639  03C0                     l1855:
  1640  03C0  0870               	movf	___lwdiv@divisor,w
  1641  03C1  0471               	iorwf	___lwdiv@divisor+1,w
  1642  03C2  1903               	btfsc	3,2
  1643  03C3  2BC5               	goto	u1191
  1644  03C4  2BC6               	goto	u1190
  1645  03C5                     u1191:
  1646  03C5  2BF5               	goto	l1875
  1647  03C6                     u1190:
  1648  03C6                     l1857:
  1649  03C6  01F7               	clrf	___lwdiv@counter
  1650  03C7  0AF7               	incf	___lwdiv@counter,f
  1651  03C8  2BD2               	goto	l1863
  1652  03C9                     l1859:
  1653  03C9  3001               	movlw	1
  1654  03CA                     u1205:
  1655  03CA  35F0               	lslf	___lwdiv@divisor,f
  1656  03CB  0DF1               	rlf	___lwdiv@divisor+1,f
  1657  03CC  0B89               	decfsz	9,f
  1658  03CD  2BCA               	goto	u1205
  1659  03CE                     l1861:
  1660  03CE  3001               	movlw	1
  1661  03CF  00F4               	movwf	??___lwdiv
  1662  03D0  0874               	movf	??___lwdiv,w
  1663  03D1  07F7               	addwf	___lwdiv@counter,f
  1664  03D2                     l1863:
  1665  03D2  1FF1               	btfss	___lwdiv@divisor+1,7
  1666  03D3  2BD5               	goto	u1211
  1667  03D4  2BD6               	goto	u1210
  1668  03D5                     u1211:
  1669  03D5  2BC9               	goto	l1859
  1670  03D6                     u1210:
  1671  03D6                     l1865:
  1672  03D6  3001               	movlw	1
  1673  03D7                     u1225:
  1674  03D7  35F5               	lslf	___lwdiv@quotient,f
  1675  03D8  0DF6               	rlf	___lwdiv@quotient+1,f
  1676  03D9  0B89               	decfsz	9,f
  1677  03DA  2BD7               	goto	u1225
  1678  03DB  0871               	movf	___lwdiv@divisor+1,w
  1679  03DC  0273               	subwf	___lwdiv@dividend+1,w
  1680  03DD  1D03               	skipz
  1681  03DE  2BE1               	goto	u1235
  1682  03DF  0870               	movf	___lwdiv@divisor,w
  1683  03E0  0272               	subwf	___lwdiv@dividend,w
  1684  03E1                     u1235:
  1685  03E1  1C03               	skipc
  1686  03E2  2BE4               	goto	u1231
  1687  03E3  2BE5               	goto	u1230
  1688  03E4                     u1231:
  1689  03E4  2BEA               	goto	l1871
  1690  03E5                     u1230:
  1691  03E5                     l1867:
  1692  03E5  0870               	movf	___lwdiv@divisor,w
  1693  03E6  02F2               	subwf	___lwdiv@dividend,f
  1694  03E7  0871               	movf	___lwdiv@divisor+1,w
  1695  03E8  3BF3               	subwfb	___lwdiv@dividend+1,f
  1696  03E9                     l1869:
  1697  03E9  1475               	bsf	___lwdiv@quotient,0
  1698  03EA                     l1871:
  1699  03EA  3001               	movlw	1
  1700  03EB                     u1245:
  1701  03EB  36F1               	lsrf	___lwdiv@divisor+1,f
  1702  03EC  0CF0               	rrf	___lwdiv@divisor,f
  1703  03ED  0B89               	decfsz	9,f
  1704  03EE  2BEB               	goto	u1245
  1705  03EF                     l1873:
  1706  03EF  3001               	movlw	1
  1707  03F0  02F7               	subwf	___lwdiv@counter,f
  1708  03F1  1D03               	btfss	3,2
  1709  03F2  2BF4               	goto	u1251
  1710  03F3  2BF5               	goto	u1250
  1711  03F4                     u1251:
  1712  03F4  2BD6               	goto	l1865
  1713  03F5                     u1250:
  1714  03F5                     l1875:
  1715  03F5  0876               	movf	___lwdiv@quotient+1,w
  1716  03F6  00F1               	movwf	?___lwdiv+1
  1717  03F7  0875               	movf	___lwdiv@quotient,w
  1718  03F8  00F0               	movwf	?___lwdiv
  1719  03F9                     l729:
  1720  03F9  0008               	return
  1721  03FA                     __end_of___lwdiv:
  1722                           
  1723                           	psect	text4
  1724  04C1                     __ptext4:	
  1725 ;; *************** function _tact *****************
  1726 ;; Defined at:
  1727 ;;		line 346 in file "Q2.c"
  1728 ;; Parameters:    Size  Location     Type
  1729 ;;  mode            2    8[COMMON] unsigned short 
  1730 ;; Auto vars:     Size  Location     Type
  1731 ;;		None
  1732 ;; Return value:  Size  Location     Type
  1733 ;;                  1    wreg      void 
  1734 ;; Registers used:
  1735 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1736 ;; Tracked objects:
  1737 ;;		On entry : 0/0
  1738 ;;		On exit  : 0/0
  1739 ;;		Unchanged: 0/0
  1740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1741 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1744 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1745 ;;Total ram usage:        2 bytes
  1746 ;; Hardware stack levels used:    1
  1747 ;; Hardware stack levels required when called:    1
  1748 ;; This function calls:
  1749 ;;		_tactsw
  1750 ;; This function is called by:
  1751 ;;		_main
  1752 ;;		_kaisu
  1753 ;; This function uses a non-reentrant model
  1754 ;;
  1755                           
  1756                           
  1757                           ;psect for function _tact
  1758  04C1                     _tact:
  1759  04C1                     l1919:	
  1760                           ;incstack = 0
  1761                           ; Regs used in _tact: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1762                           
  1763                           
  1764                           ;Q2.c: 346: void tact(unsigned short mode);Q2.c: 347: {;Q2.c: 348:     switch(mode){
  1765  04C1  2CFC               	goto	l1947
  1766  04C2                     l1921:
  1767                           
  1768                           ;Q2.c: 350:                 tactsw();
  1769  04C2  3183  23FA  3184   	fcall	_tactsw
  1770  04C5                     l1923:
  1771                           
  1772                           ;Q2.c: 351:                 if(flag_sw3==0)flag_R=1;
  1773  04C5  087B               	movf	_flag_sw3,w
  1774  04C6  047C               	iorwf	_flag_sw3+1,w
  1775  04C7  1D03               	btfss	3,2
  1776  04C8  2CCA               	goto	u1281
  1777  04C9  2CCB               	goto	u1280
  1778  04CA                     u1281:
  1779  04CA  2D0C               	goto	l208
  1780  04CB                     u1280:
  1781  04CB                     l1925:
  1782  04CB  3001               	movlw	1
  1783  04CC  0020               	movlb	0	; select bank0
  1784  04CD  00BA               	movwf	_flag_R
  1785  04CE  3000               	movlw	0
  1786  04CF  00BB               	movwf	_flag_R+1
  1787  04D0  2D0C               	goto	l208
  1788  04D1                     l1927:
  1789                           
  1790                           ;Q2.c: 354:                 tactsw();
  1791  04D1  3183  23FA  3184   	fcall	_tactsw
  1792  04D4                     l1929:
  1793                           
  1794                           ;Q2.c: 355:                 if(flag_sw3==1)flag_P=1;
  1795  04D4  037B               	decf	_flag_sw3,w
  1796  04D5  047C               	iorwf	_flag_sw3+1,w
  1797  04D6  1D03               	btfss	3,2
  1798  04D7  2CD9               	goto	u1291
  1799  04D8  2CDA               	goto	u1290
  1800  04D9                     u1291:
  1801  04D9  2D0C               	goto	l208
  1802  04DA                     u1290:
  1803  04DA                     l1931:
  1804  04DA  3001               	movlw	1
  1805  04DB  0020               	movlb	0	; select bank0
  1806  04DC  00B8               	movwf	_flag_P
  1807  04DD  3000               	movlw	0
  1808  04DE  00B9               	movwf	_flag_P+1
  1809  04DF  2D0C               	goto	l208
  1810  04E0                     l1933:
  1811                           
  1812                           ;Q2.c: 358:                 tactsw();
  1813  04E0  3183  23FA  3184   	fcall	_tactsw
  1814  04E3                     l1935:
  1815                           
  1816                           ;Q2.c: 359:                 if(flag_sw3==0)flag_R=1;
  1817  04E3  087B               	movf	_flag_sw3,w
  1818  04E4  047C               	iorwf	_flag_sw3+1,w
  1819  04E5  1D03               	btfss	3,2
  1820  04E6  2CE8               	goto	u1301
  1821  04E7  2CE9               	goto	u1300
  1822  04E8                     u1301:
  1823  04E8  2CEE               	goto	l1939
  1824  04E9                     u1300:
  1825  04E9                     l1937:
  1826  04E9  3001               	movlw	1
  1827  04EA  0020               	movlb	0	; select bank0
  1828  04EB  00BA               	movwf	_flag_R
  1829  04EC  3000               	movlw	0
  1830  04ED  00BB               	movwf	_flag_R+1
  1831  04EE                     l1939:
  1832                           
  1833                           ;Q2.c: 360:                 if((flag_sw3==1)&&(flag_R==1))flag_P=1;
  1834  04EE  037B               	decf	_flag_sw3,w
  1835  04EF  047C               	iorwf	_flag_sw3+1,w
  1836  04F0  1D03               	btfss	3,2
  1837  04F1  2CF3               	goto	u1311
  1838  04F2  2CF4               	goto	u1310
  1839  04F3                     u1311:
  1840  04F3  2D0C               	goto	l208
  1841  04F4                     u1310:
  1842  04F4                     l1941:
  1843  04F4  0020               	movlb	0	; select bank0
  1844  04F5  033A               	decf	_flag_R,w
  1845  04F6  043B               	iorwf	_flag_R+1,w
  1846  04F7  1D03               	btfss	3,2
  1847  04F8  2CFA               	goto	u1321
  1848  04F9  2CFB               	goto	u1320
  1849  04FA                     u1321:
  1850  04FA  2D0C               	goto	l208
  1851  04FB                     u1320:
  1852  04FB  2CDA               	goto	l1931
  1853  04FC                     l1947:
  1854                           
  1855                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1856                           ; Switch size 1, requested type "simple"
  1857                           ; Number of cases is 1, Range of values is 0 to 0
  1858                           ; switch strategies available:
  1859                           ; Name         Instructions Cycles
  1860                           ; simple_byte            4     3 (average)
  1861                           ; direct_byte            8     6 (fixed)
  1862                           ; jumptable            260     6 (fixed)
  1863                           ;	Chosen strategy is simple_byte
  1864  04FC  0879               	movf	tact@mode+1,w
  1865  04FD  3A00               	xorlw	0	; case 0
  1866  04FE  1903               	skipnz
  1867  04FF  2D01               	goto	l2499
  1868  0500  2D0C               	goto	l208
  1869  0501                     l2499:
  1870                           
  1871                           ; Switch size 1, requested type "simple"
  1872                           ; Number of cases is 3, Range of values is 0 to 2
  1873                           ; switch strategies available:
  1874                           ; Name         Instructions Cycles
  1875                           ; simple_byte           10     6 (average)
  1876                           ; direct_byte           12     6 (fixed)
  1877                           ; jumptable            260     6 (fixed)
  1878                           ;	Chosen strategy is simple_byte
  1879  0501  0878               	movf	tact@mode,w
  1880  0502  3A00               	xorlw	0	; case 0
  1881  0503  1903               	skipnz
  1882  0504  2CC2               	goto	l1921
  1883  0505  3A01               	xorlw	1	; case 1
  1884  0506  1903               	skipnz
  1885  0507  2CD1               	goto	l1927
  1886  0508  3A03               	xorlw	3	; case 2
  1887  0509  1903               	skipnz
  1888  050A  2CE0               	goto	l1933
  1889  050B  2D0C               	goto	l208
  1890  050C                     l208:
  1891  050C  0008               	return
  1892  050D                     __end_of_tact:
  1893                           
  1894                           	psect	text5
  1895  03FA                     __ptext5:	
  1896 ;; *************** function _tactsw *****************
  1897 ;; Defined at:
  1898 ;;		line 331 in file "Q2.c"
  1899 ;; Parameters:    Size  Location     Type
  1900 ;;		None
  1901 ;; Auto vars:     Size  Location     Type
  1902 ;;  a               2    6[COMMON] unsigned short 
  1903 ;;  c               2    4[COMMON] unsigned short 
  1904 ;;  b               2    2[COMMON] unsigned short 
  1905 ;; Return value:  Size  Location     Type
  1906 ;;                  1    wreg      void 
  1907 ;; Registers used:
  1908 ;;		wreg, status,2, status,0
  1909 ;; Tracked objects:
  1910 ;;		On entry : 0/0
  1911 ;;		On exit  : 0/0
  1912 ;;		Unchanged: 0/0
  1913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1915 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1916 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1917 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1918 ;;Total ram usage:        8 bytes
  1919 ;; Hardware stack levels used:    1
  1920 ;; This function calls:
  1921 ;;		Nothing
  1922 ;; This function is called by:
  1923 ;;		_tact
  1924 ;; This function uses a non-reentrant model
  1925 ;;
  1926                           
  1927                           
  1928                           ;psect for function _tactsw
  1929  03FA                     _tactsw:
  1930  03FA                     l1835:	
  1931                           ;incstack = 0
  1932                           ; Regs used in _tactsw: [wreg+status,2+status,0]
  1933                           
  1934                           
  1935                           ;Q2.c: 333:     unsigned short a,b,c;;Q2.c: 334:     b=c=0;
  1936  03FA  01F4               	clrf	tactsw@c
  1937  03FB  01F5               	clrf	tactsw@c+1
  1938  03FC  01F2               	clrf	tactsw@b
  1939  03FD  01F3               	clrf	tactsw@b+1
  1940  03FE                     l1837:
  1941                           
  1942                           ;Q2.c: 336:             a=RA2;
  1943  03FE  1003               	clrc
  1944  03FF  0020               	movlb	0	; select bank0
  1945  0400  190C               	btfsc	12,2	;volatile
  1946  0401  1403               	setc
  1947  0402  3000               	movlw	0
  1948  0403  3D09               	addwfc	9,w
  1949  0404  00F0               	movwf	??_tactsw
  1950  0405  01F1               	clrf	??_tactsw+1
  1951  0406  0870               	movf	??_tactsw,w
  1952  0407  00F6               	movwf	tactsw@a
  1953  0408  0871               	movf	??_tactsw+1,w
  1954  0409  00F7               	movwf	tactsw@a+1
  1955  040A                     l1839:
  1956                           
  1957                           ;Q2.c: 337:             if(b==a)++c;
  1958  040A  0877               	movf	tactsw@a+1,w
  1959  040B  0673               	xorwf	tactsw@b+1,w
  1960  040C  1D03               	skipz
  1961  040D  2C10               	goto	u1175
  1962  040E  0876               	movf	tactsw@a,w
  1963  040F  0672               	xorwf	tactsw@b,w
  1964  0410                     u1175:
  1965  0410  1D03               	skipz
  1966  0411  2C13               	goto	u1171
  1967  0412  2C14               	goto	u1170
  1968  0413                     u1171:
  1969  0413  2C19               	goto	l1843
  1970  0414                     u1170:
  1971  0414                     l1841:
  1972  0414  3001               	movlw	1
  1973  0415  07F4               	addwf	tactsw@c,f
  1974  0416  3000               	movlw	0
  1975  0417  3DF5               	addwfc	tactsw@c+1,f
  1976  0418  2C1B               	goto	l1845
  1977  0419                     l1843:
  1978  0419  01F4               	clrf	tactsw@c
  1979  041A  01F5               	clrf	tactsw@c+1
  1980  041B                     l1845:
  1981                           
  1982                           ;Q2.c: 339:             if(c>10){flag_sw3=(~a)&0x01;return;}
  1983  041B  3000               	movlw	0
  1984  041C  0275               	subwf	tactsw@c+1,w
  1985  041D  300B               	movlw	11
  1986  041E  1903               	skipnz
  1987  041F  0274               	subwf	tactsw@c,w
  1988  0420  1C03               	skipc
  1989  0421  2C23               	goto	u1181
  1990  0422  2C24               	goto	u1180
  1991  0423                     u1181:
  1992  0423  2C31               	goto	l1851
  1993  0424                     u1180:
  1994  0424                     l1847:
  1995  0424  0877               	movf	tactsw@a+1,w
  1996  0425  00F1               	movwf	??_tactsw+1
  1997  0426  0876               	movf	tactsw@a,w
  1998  0427  00F0               	movwf	??_tactsw
  1999  0428  09F0               	comf	??_tactsw,f
  2000  0429  09F1               	comf	??_tactsw+1,f
  2001  042A  3001               	movlw	1
  2002  042B  0570               	andwf	??_tactsw,w
  2003  042C  00FB               	movwf	_flag_sw3
  2004  042D  3000               	movlw	0
  2005  042E  0571               	andwf	??_tactsw+1,w
  2006  042F  00FC               	movwf	_flag_sw3+1
  2007  0430  2C36               	goto	l193
  2008  0431                     l1851:
  2009                           
  2010                           ;Q2.c: 340:             b=a;
  2011  0431  0877               	movf	tactsw@a+1,w
  2012  0432  00F3               	movwf	tactsw@b+1
  2013  0433  0876               	movf	tactsw@a,w
  2014  0434  00F2               	movwf	tactsw@b
  2015  0435  2BFE               	goto	l1837
  2016  0436                     l193:
  2017  0436  0008               	return
  2018  0437                     __end_of_tactsw:
  2019                           
  2020                           	psect	text6
  2021  0333                     __ptext6:	
  2022 ;; *************** function _portinit *****************
  2023 ;; Defined at:
  2024 ;;		line 160 in file "Q2.c"
  2025 ;; Parameters:    Size  Location     Type
  2026 ;;		None
  2027 ;; Auto vars:     Size  Location     Type
  2028 ;;		None
  2029 ;; Return value:  Size  Location     Type
  2030 ;;                  1    wreg      void 
  2031 ;; Registers used:
  2032 ;;		wreg, status,2
  2033 ;; Tracked objects:
  2034 ;;		On entry : 0/0
  2035 ;;		On exit  : 0/0
  2036 ;;		Unchanged: 0/0
  2037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2042 ;;Total ram usage:        0 bytes
  2043 ;; Hardware stack levels used:    1
  2044 ;; This function calls:
  2045 ;;		Nothing
  2046 ;; This function is called by:
  2047 ;;		_main
  2048 ;; This function uses a non-reentrant model
  2049 ;;
  2050                           
  2051                           
  2052                           ;psect for function _portinit
  2053  0333                     _portinit:
  2054  0333                     l1879:	
  2055                           ;incstack = 0
  2056                           ; Regs used in _portinit: [wreg+status,2]
  2057                           
  2058                           
  2059                           ;Q2.c: 163:     ANSELA=0x00;
  2060  0333  0023               	movlb	3	; select bank3
  2061  0334  018C               	clrf	12	;volatile
  2062                           
  2063                           ;Q2.c: 164:     ANSELB=0x00;
  2064  0335  018D               	clrf	13	;volatile
  2065  0336                     l1881:
  2066                           
  2067                           ;Q2.c: 166:     PORTA=0x07;
  2068  0336  3007               	movlw	7
  2069  0337  0020               	movlb	0	; select bank0
  2070  0338  008C               	movwf	12	;volatile
  2071  0339                     l1883:
  2072                           
  2073                           ;Q2.c: 167:     TRISA=0x07;
  2074  0339  3007               	movlw	7
  2075  033A  0021               	movlb	1	; select bank1
  2076  033B  008C               	movwf	12	;volatile
  2077                           
  2078                           ;Q2.c: 168:     PORTB=0x00;
  2079  033C  0020               	movlb	0	; select bank0
  2080  033D  018D               	clrf	13	;volatile
  2081                           
  2082                           ;Q2.c: 169:     TRISB=0x00;
  2083  033E  0021               	movlb	1	; select bank1
  2084  033F  018D               	clrf	13	;volatile
  2085  0340                     l1885:
  2086                           
  2087                           ;Q2.c: 170:     PORTC=0x07;
  2088  0340  3007               	movlw	7
  2089  0341  0020               	movlb	0	; select bank0
  2090  0342  008E               	movwf	14	;volatile
  2091  0343                     l1887:
  2092                           
  2093                           ;Q2.c: 171:     TRISC=0x00;
  2094  0343  0021               	movlb	1	; select bank1
  2095  0344  018E               	clrf	14	;volatile
  2096  0345                     l95:
  2097  0345  0008               	return
  2098  0346                     __end_of_portinit:
  2099                           
  2100                           	psect	text7
  2101  0366                     __ptext7:	
  2102 ;; *************** function _motor *****************
  2103 ;; Defined at:
  2104 ;;		line 460 in file "Q2.c"
  2105 ;; Parameters:    Size  Location     Type
  2106 ;;  kakudo          2    8[BANK0 ] int 
  2107 ;;  dig1data        2   10[BANK0 ] unsigned short 
  2108 ;;  dig2data        2   12[BANK0 ] unsigned short 
  2109 ;;  smdata          2   14[BANK0 ] unsigned short 
  2110 ;;  tr              2   16[BANK0 ] unsigned int 
  2111 ;; Auto vars:     Size  Location     Type
  2112 ;;  i               2    8[COMMON] int 
  2113 ;; Return value:  Size  Location     Type
  2114 ;;                  1    wreg      void 
  2115 ;; Registers used:
  2116 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2117 ;; Tracked objects:
  2118 ;;		On entry : 0/0
  2119 ;;		On exit  : 0/0
  2120 ;;		Unchanged: 0/0
  2121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2122 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2123 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2125 ;;      Totals:         2      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2126 ;;Total ram usage:       12 bytes
  2127 ;; Hardware stack levels used:    1
  2128 ;; Hardware stack levels required when called:    1
  2129 ;; This function calls:
  2130 ;;		_dynam
  2131 ;; This function is called by:
  2132 ;;		_main
  2133 ;; This function uses a non-reentrant model
  2134 ;;
  2135                           
  2136                           
  2137                           ;psect for function _motor
  2138  0366                     _motor:
  2139  0366                     l1983:	
  2140                           ;incstack = 0
  2141                           ; Regs used in _motor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2142                           
  2143                           
  2144                           ;Q2.c: 462:     for(int i = kakudo;i>=0;i--){
  2145  0366  0020               	movlb	0	; select bank0
  2146  0367  0849               	movf	motor@kakudo+1,w
  2147  0368  00F9               	movwf	motor@i+1
  2148  0369  0848               	movf	motor@kakudo,w
  2149  036A  00F8               	movwf	motor@i
  2150  036B                     l1985:
  2151  036B  1FF9               	btfss	motor@i+1,7
  2152  036C  2B6E               	goto	u1341
  2153  036D  2B6F               	goto	u1340
  2154  036E                     u1341:
  2155  036E  2B70               	goto	l1989
  2156  036F                     u1340:
  2157  036F  2B89               	goto	l263
  2158  0370                     l1989:
  2159                           
  2160                           ;Q2.c: 463:         dynam(dig1data,dig2data,smdata,tr);
  2161  0370  0020               	movlb	0	; select bank0
  2162  0371  084B               	movf	motor@dig1data+1,w
  2163  0372  00F1               	movwf	dynam@dig1data+1
  2164  0373  084A               	movf	motor@dig1data,w
  2165  0374  00F0               	movwf	dynam@dig1data
  2166  0375  084D               	movf	motor@dig2data+1,w
  2167  0376  00F3               	movwf	dynam@dig2data+1
  2168  0377  084C               	movf	motor@dig2data,w
  2169  0378  00F2               	movwf	dynam@dig2data
  2170  0379  084F               	movf	motor@smdata+1,w
  2171  037A  00F5               	movwf	dynam@smdata+1
  2172  037B  084E               	movf	motor@smdata,w
  2173  037C  00F4               	movwf	dynam@smdata
  2174  037D  0851               	movf	motor@tr+1,w
  2175  037E  00F7               	movwf	dynam@tr+1
  2176  037F  0850               	movf	motor@tr,w
  2177  0380  00F6               	movwf	dynam@tr
  2178  0381  3186  2665  3183   	fcall	_dynam
  2179  0384                     l1991:
  2180                           
  2181                           ;Q2.c: 464:     }
  2182  0384  30FF               	movlw	255
  2183  0385  07F8               	addwf	motor@i,f
  2184  0386  30FF               	movlw	255
  2185  0387  3DF9               	addwfc	motor@i+1,f
  2186  0388  2B6B               	goto	l1985
  2187  0389                     l263:
  2188  0389  0008               	return
  2189  038A                     __end_of_motor:
  2190                           
  2191                           	psect	text8
  2192  0665                     __ptext8:	
  2193 ;; *************** function _dynam *****************
  2194 ;; Defined at:
  2195 ;;		line 206 in file "Q2.c"
  2196 ;; Parameters:    Size  Location     Type
  2197 ;;  dig1data        2    0[COMMON] unsigned short 
  2198 ;;  dig2data        2    2[COMMON] unsigned short 
  2199 ;;  smdata          2    4[COMMON] unsigned short 
  2200 ;;  tr              2    6[COMMON] unsigned int 
  2201 ;; Auto vars:     Size  Location     Type
  2202 ;;  ext             2    6[BANK0 ] unsigned short 
  2203 ;;  j               2    4[BANK0 ] unsigned int 
  2204 ;;  tm              2    2[BANK0 ] unsigned int 
  2205 ;;  smd             2    0[BANK0 ] unsigned short 
  2206 ;; Return value:  Size  Location     Type
  2207 ;;                  1    wreg      void 
  2208 ;; Registers used:
  2209 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2210 ;; Tracked objects:
  2211 ;;		On entry : 0/0
  2212 ;;		On exit  : 0/0
  2213 ;;		Unchanged: 0/0
  2214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2215 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2216 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2218 ;;      Totals:         8       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2219 ;;Total ram usage:       16 bytes
  2220 ;; Hardware stack levels used:    1
  2221 ;; This function calls:
  2222 ;;		Nothing
  2223 ;; This function is called by:
  2224 ;;		_waitSEG
  2225 ;;		_motor
  2226 ;;		_main
  2227 ;;		_clear
  2228 ;; This function uses a non-reentrant model
  2229 ;;
  2230                           
  2231                           
  2232                           ;psect for function _dynam
  2233  0665                     _dynam:
  2234  0665                     l1679:	
  2235                           ;incstack = 0
  2236                           ; Regs used in _dynam: [wreg-fsr0h+status,2+status,0]
  2237                           
  2238  0665  0020               	movlb	0	; select bank0
  2239  0666  01C2               	clrf	dynam@tm
  2240  0667  01C3               	clrf	dynam@tm+1
  2241                           
  2242                           ;Q2.c: 209:     unsigned short ext=0,smd=0;
  2243  0668  01C6               	clrf	dynam@ext
  2244  0669  01C7               	clrf	dynam@ext+1
  2245  066A  01C0               	clrf	dynam@smd
  2246  066B  01C1               	clrf	dynam@smd+1
  2247  066C                     l1681:
  2248                           
  2249                           ;Q2.c: 210:     RC7=0;
  2250  066C  138E               	bcf	14,7	;volatile
  2251  066D                     l1683:
  2252                           
  2253                           ;Q2.c: 211:     PORTB=dig1data;
  2254  066D  0870               	movf	dynam@dig1data,w
  2255  066E  008D               	movwf	13	;volatile
  2256  066F                     l1685:
  2257                           
  2258                           ;Q2.c: 212:     RC5=0;RC6=1;
  2259  066F  128E               	bcf	14,5	;volatile
  2260  0670                     l1687:
  2261  0670  170E               	bsf	14,6	;volatile
  2262  0671                     l1689:
  2263                           
  2264                           ;Q2.c: 213:     if(tr==5){tm=4000;}
  2265  0671  3005               	movlw	5
  2266  0672  0676               	xorwf	dynam@tr,w
  2267  0673  0477               	iorwf	dynam@tr+1,w
  2268  0674  1D03               	btfss	3,2
  2269  0675  2E77               	goto	u951
  2270  0676  2E78               	goto	u950
  2271  0677                     u951:
  2272  0677  2E7D               	goto	l1693
  2273  0678                     u950:
  2274  0678                     l1691:
  2275  0678  30A0               	movlw	160
  2276  0679  00C2               	movwf	dynam@tm
  2277  067A  300F               	movlw	15
  2278  067B  00C3               	movwf	dynam@tm+1
  2279  067C  2E81               	goto	l112
  2280  067D                     l1693:
  2281  067D  30D0               	movlw	208
  2282  067E  00C2               	movwf	dynam@tm
  2283  067F  3007               	movlw	7
  2284  0680  00C3               	movwf	dynam@tm+1
  2285  0681                     l112:
  2286                           
  2287                           ;Q2.c: 215:     for(j=tm;j>0;--j);
  2288  0681  0843               	movf	dynam@tm+1,w
  2289  0682  00C5               	movwf	dynam@j+1
  2290  0683  0842               	movf	dynam@tm,w
  2291  0684  00C4               	movwf	dynam@j
  2292  0685                     l1695:
  2293  0685  0844               	movf	dynam@j,w
  2294  0686  0445               	iorwf	dynam@j+1,w
  2295  0687  1D03               	btfss	3,2
  2296  0688  2E8A               	goto	u961
  2297  0689  2E8B               	goto	u960
  2298  068A                     u961:
  2299  068A  2E8C               	goto	l1699
  2300  068B                     u960:
  2301  068B  2E91               	goto	l114
  2302  068C                     l1699:
  2303  068C  3001               	movlw	1
  2304  068D  02C4               	subwf	dynam@j,f
  2305  068E  3000               	movlw	0
  2306  068F  3BC5               	subwfb	dynam@j+1,f
  2307  0690  2E85               	goto	l1695
  2308  0691                     l114:
  2309                           
  2310                           ;Q2.c: 216:     RC5=0;RC6=0;
  2311  0691  128E               	bcf	14,5	;volatile
  2312  0692  130E               	bcf	14,6	;volatile
  2313  0693                     l1703:
  2314                           
  2315                           ;Q2.c: 217:     PORTB=dig2data;
  2316  0693  0872               	movf	dynam@dig2data,w
  2317  0694  008D               	movwf	13	;volatile
  2318  0695                     l1705:
  2319                           
  2320                           ;Q2.c: 218:     RC6=0;RC5=1;
  2321  0695  130E               	bcf	14,6	;volatile
  2322  0696                     l1707:
  2323  0696  168E               	bsf	14,5	;volatile
  2324  0697                     l1709:
  2325                           
  2326                           ;Q2.c: 219:     if(tr==5){tm=4000;}
  2327  0697  3005               	movlw	5
  2328  0698  0676               	xorwf	dynam@tr,w
  2329  0699  0477               	iorwf	dynam@tr+1,w
  2330  069A  1D03               	btfss	3,2
  2331  069B  2E9D               	goto	u971
  2332  069C  2E9E               	goto	u970
  2333  069D                     u971:
  2334  069D  2EA3               	goto	l1713
  2335  069E                     u970:
  2336  069E                     l1711:
  2337  069E  30A0               	movlw	160
  2338  069F  00C2               	movwf	dynam@tm
  2339  06A0  300F               	movlw	15
  2340  06A1  00C3               	movwf	dynam@tm+1
  2341  06A2  2EA7               	goto	l116
  2342  06A3                     l1713:
  2343  06A3  30D0               	movlw	208
  2344  06A4  00C2               	movwf	dynam@tm
  2345  06A5  3007               	movlw	7
  2346  06A6  00C3               	movwf	dynam@tm+1
  2347  06A7                     l116:
  2348                           
  2349                           ;Q2.c: 221:     for(j=tm;j>0;--j);
  2350  06A7  0843               	movf	dynam@tm+1,w
  2351  06A8  00C5               	movwf	dynam@j+1
  2352  06A9  0842               	movf	dynam@tm,w
  2353  06AA  00C4               	movwf	dynam@j
  2354  06AB                     l1715:
  2355  06AB  0844               	movf	dynam@j,w
  2356  06AC  0445               	iorwf	dynam@j+1,w
  2357  06AD  1D03               	btfss	3,2
  2358  06AE  2EB0               	goto	u981
  2359  06AF  2EB1               	goto	u980
  2360  06B0                     u981:
  2361  06B0  2EB2               	goto	l1719
  2362  06B1                     u980:
  2363  06B1  2EB7               	goto	l118
  2364  06B2                     l1719:
  2365  06B2  3001               	movlw	1
  2366  06B3  02C4               	subwf	dynam@j,f
  2367  06B4  3000               	movlw	0
  2368  06B5  3BC5               	subwfb	dynam@j+1,f
  2369  06B6  2EAB               	goto	l1715
  2370  06B7                     l118:
  2371                           
  2372                           ;Q2.c: 222:     RC5=0;RC6=0;
  2373  06B7  128E               	bcf	14,5	;volatile
  2374  06B8  130E               	bcf	14,6	;volatile
  2375                           
  2376                           ;Q2.c: 223:     switch(smdata){
  2377  06B9  2FBE               	goto	l1829
  2378  06BA                     l1723:
  2379                           
  2380                           ;Q2.c: 225:                 PORTB=0x00;smd=(0x01|0x02|0x04|0x08|0x10|0x20);
  2381  06BA  018D               	clrf	13	;volatile
  2382  06BB                     l1725:
  2383  06BB                     l1727:
  2384                           
  2385                           ;Q2.c: 226:                 RC7=0;RC7=1;RC7=0;
  2386  06BB  138E               	bcf	14,7	;volatile
  2387  06BC                     l1729:
  2388  06BC  178E               	bsf	14,7	;volatile
  2389  06BD                     l1731:
  2390  06BD  138E               	bcf	14,7	;volatile
  2391                           
  2392                           ;Q2.c: 227:                 break;
  2393  06BE  2FCE               	goto	l135
  2394  06BF                     l1733:
  2395                           
  2396                           ;Q2.c: 229:                 if(flg==1)cw=0;flg=0;
  2397  06BF  0336               	decf	_flg,w
  2398  06C0  0437               	iorwf	_flg+1,w
  2399  06C1  1D03               	btfss	3,2
  2400  06C2  2EC4               	goto	u991
  2401  06C3  2EC5               	goto	u990
  2402  06C4                     u991:
  2403  06C4  2EC7               	goto	l123
  2404  06C5                     u990:
  2405  06C5                     l1735:
  2406  06C5  01B4               	clrf	_cw
  2407  06C6  01B5               	clrf	_cw+1
  2408  06C7                     l123:
  2409  06C7  01B6               	clrf	_flg
  2410  06C8  01B7               	clrf	_flg+1
  2411  06C9                     l1737:
  2412                           
  2413                           ;Q2.c: 230:                 if((cw==0)&&(ext==0)){cw=1;ccw=0;ext=1;PORTB=smd=0x09;}
  2414  06C9  0834               	movf	_cw,w
  2415  06CA  0435               	iorwf	_cw+1,w
  2416  06CB  1D03               	btfss	3,2
  2417  06CC  2ECE               	goto	u1001
  2418  06CD  2ECF               	goto	u1000
  2419  06CE                     u1001:
  2420  06CE  2EE5               	goto	l1749
  2421  06CF                     u1000:
  2422  06CF                     l1739:
  2423  06CF  0846               	movf	dynam@ext,w
  2424  06D0  0447               	iorwf	dynam@ext+1,w
  2425  06D1  1D03               	btfss	3,2
  2426  06D2  2ED4               	goto	u1011
  2427  06D3  2ED5               	goto	u1010
  2428  06D4                     u1011:
  2429  06D4  2EE5               	goto	l1749
  2430  06D5                     u1010:
  2431  06D5                     l1741:
  2432  06D5  3001               	movlw	1
  2433  06D6  00B4               	movwf	_cw
  2434  06D7  3000               	movlw	0
  2435  06D8  00B5               	movwf	_cw+1
  2436  06D9                     l1743:
  2437  06D9  01B2               	clrf	_ccw
  2438  06DA  01B3               	clrf	_ccw+1
  2439  06DB                     l1745:
  2440  06DB  3001               	movlw	1
  2441  06DC  00C6               	movwf	dynam@ext
  2442  06DD  3000               	movlw	0
  2443  06DE  00C7               	movwf	dynam@ext+1
  2444  06DF                     l1747:
  2445  06DF  3009               	movlw	9
  2446  06E0  00C0               	movwf	dynam@smd
  2447  06E1  3000               	movlw	0
  2448  06E2  00C1               	movwf	dynam@smd+1
  2449  06E3  0840               	movf	dynam@smd,w
  2450  06E4  008D               	movwf	13	;volatile
  2451  06E5                     l1749:
  2452                           
  2453                           ;Q2.c: 231:                 if((cw==1)&&(ext==0)){cw=2;ccw=3;ext=1;PORTB=smd=0x0C;}
  2454  06E5  0334               	decf	_cw,w
  2455  06E6  0435               	iorwf	_cw+1,w
  2456  06E7  1D03               	btfss	3,2
  2457  06E8  2EEA               	goto	u1021
  2458  06E9  2EEB               	goto	u1020
  2459  06EA                     u1021:
  2460  06EA  2F03               	goto	l1755
  2461  06EB                     u1020:
  2462  06EB                     l1751:
  2463  06EB  0846               	movf	dynam@ext,w
  2464  06EC  0447               	iorwf	dynam@ext+1,w
  2465  06ED  1D03               	btfss	3,2
  2466  06EE  2EF0               	goto	u1031
  2467  06EF  2EF1               	goto	u1030
  2468  06F0                     u1031:
  2469  06F0  2F03               	goto	l1755
  2470  06F1                     u1030:
  2471  06F1                     l1753:
  2472  06F1  3002               	movlw	2
  2473  06F2  00B4               	movwf	_cw
  2474  06F3  3000               	movlw	0
  2475  06F4  00B5               	movwf	_cw+1
  2476  06F5  3003               	movlw	3
  2477  06F6  00B2               	movwf	_ccw
  2478  06F7  3000               	movlw	0
  2479  06F8  00B3               	movwf	_ccw+1
  2480  06F9  3001               	movlw	1
  2481  06FA  00C6               	movwf	dynam@ext
  2482  06FB  3000               	movlw	0
  2483  06FC  00C7               	movwf	dynam@ext+1
  2484  06FD  300C               	movlw	12
  2485  06FE  00C0               	movwf	dynam@smd
  2486  06FF  3000               	movlw	0
  2487  0700  00C1               	movwf	dynam@smd+1
  2488  0701  0840               	movf	dynam@smd,w
  2489  0702  008D               	movwf	13	;volatile
  2490  0703                     l1755:
  2491                           
  2492                           ;Q2.c: 232:                 if((cw==2)&&(ext==0)){cw=3;ccw=2;ext=1;PORTB=smd=0x06;}
  2493  0703  3002               	movlw	2
  2494  0704  0634               	xorwf	_cw,w
  2495  0705  0435               	iorwf	_cw+1,w
  2496  0706  1D03               	btfss	3,2
  2497  0707  2F09               	goto	u1041
  2498  0708  2F0A               	goto	u1040
  2499  0709                     u1041:
  2500  0709  2F22               	goto	l1761
  2501  070A                     u1040:
  2502  070A                     l1757:
  2503  070A  0846               	movf	dynam@ext,w
  2504  070B  0447               	iorwf	dynam@ext+1,w
  2505  070C  1D03               	btfss	3,2
  2506  070D  2F0F               	goto	u1051
  2507  070E  2F10               	goto	u1050
  2508  070F                     u1051:
  2509  070F  2F22               	goto	l1761
  2510  0710                     u1050:
  2511  0710                     l1759:
  2512  0710  3003               	movlw	3
  2513  0711  00B4               	movwf	_cw
  2514  0712  3000               	movlw	0
  2515  0713  00B5               	movwf	_cw+1
  2516  0714  3002               	movlw	2
  2517  0715  00B2               	movwf	_ccw
  2518  0716  3000               	movlw	0
  2519  0717  00B3               	movwf	_ccw+1
  2520  0718  3001               	movlw	1
  2521  0719  00C6               	movwf	dynam@ext
  2522  071A  3000               	movlw	0
  2523  071B  00C7               	movwf	dynam@ext+1
  2524  071C  3006               	movlw	6
  2525  071D  00C0               	movwf	dynam@smd
  2526  071E  3000               	movlw	0
  2527  071F  00C1               	movwf	dynam@smd+1
  2528  0720  0840               	movf	dynam@smd,w
  2529  0721  008D               	movwf	13	;volatile
  2530  0722                     l1761:
  2531                           
  2532                           ;Q2.c: 233:                 if((cw==3)&&(ext==0)){cw=0;ccw=1;ext=1;PORTB=smd=0x03;}
  2533  0722  3003               	movlw	3
  2534  0723  0634               	xorwf	_cw,w
  2535  0724  0435               	iorwf	_cw+1,w
  2536  0725  1D03               	btfss	3,2
  2537  0726  2F28               	goto	u1061
  2538  0727  2F29               	goto	u1060
  2539  0728                     u1061:
  2540  0728  2EBB               	goto	l1727
  2541  0729                     u1060:
  2542  0729                     l1763:
  2543  0729  0846               	movf	dynam@ext,w
  2544  072A  0447               	iorwf	dynam@ext+1,w
  2545  072B  1D03               	btfss	3,2
  2546  072C  2F2E               	goto	u1071
  2547  072D  2F2F               	goto	u1070
  2548  072E                     u1071:
  2549  072E  2EBB               	goto	l1727
  2550  072F                     u1070:
  2551  072F                     l1765:
  2552  072F  01B4               	clrf	_cw
  2553  0730  01B5               	clrf	_cw+1
  2554  0731                     l1767:
  2555  0731  3001               	movlw	1
  2556  0732  00B2               	movwf	_ccw
  2557  0733  3000               	movlw	0
  2558  0734  00B3               	movwf	_ccw+1
  2559  0735                     l1769:
  2560  0735                     l1771:
  2561  0735  3003               	movlw	3
  2562  0736  00C0               	movwf	dynam@smd
  2563  0737  3000               	movlw	0
  2564  0738  00C1               	movwf	dynam@smd+1
  2565  0739  0840               	movf	dynam@smd,w
  2566  073A  008D               	movwf	13	;volatile
  2567  073B  2EBB               	goto	l1727
  2568  073C                     l1779:
  2569                           
  2570                           ;Q2.c: 237:                 if(flg==1)ccw=0;flg=0;
  2571  073C  0336               	decf	_flg,w
  2572  073D  0437               	iorwf	_flg+1,w
  2573  073E  1D03               	btfss	3,2
  2574  073F  2F41               	goto	u1081
  2575  0740  2F42               	goto	u1080
  2576  0741                     u1081:
  2577  0741  2F44               	goto	l129
  2578  0742                     u1080:
  2579  0742                     l1781:
  2580  0742  01B2               	clrf	_ccw
  2581  0743  01B3               	clrf	_ccw+1
  2582  0744                     l129:
  2583  0744  01B6               	clrf	_flg
  2584  0745  01B7               	clrf	_flg+1
  2585  0746                     l1783:
  2586                           
  2587                           ;Q2.c: 238:                 if((ccw==0)&&(ext==0)){ccw=1;cw=0;ext=1;PORTB=smd=0x03;}
  2588  0746  0832               	movf	_ccw,w
  2589  0747  0433               	iorwf	_ccw+1,w
  2590  0748  1D03               	btfss	3,2
  2591  0749  2F4B               	goto	u1091
  2592  074A  2F4C               	goto	u1090
  2593  074B                     u1091:
  2594  074B  2F62               	goto	l1795
  2595  074C                     u1090:
  2596  074C                     l1785:
  2597  074C  0846               	movf	dynam@ext,w
  2598  074D  0447               	iorwf	dynam@ext+1,w
  2599  074E  1D03               	btfss	3,2
  2600  074F  2F51               	goto	u1101
  2601  0750  2F52               	goto	u1100
  2602  0751                     u1101:
  2603  0751  2F62               	goto	l1795
  2604  0752                     u1100:
  2605  0752                     l1787:
  2606  0752  3001               	movlw	1
  2607  0753  00B2               	movwf	_ccw
  2608  0754  3000               	movlw	0
  2609  0755  00B3               	movwf	_ccw+1
  2610  0756                     l1789:
  2611  0756  01B4               	clrf	_cw
  2612  0757  01B5               	clrf	_cw+1
  2613  0758                     l1791:
  2614  0758  3001               	movlw	1
  2615  0759  00C6               	movwf	dynam@ext
  2616  075A  3000               	movlw	0
  2617  075B  00C7               	movwf	dynam@ext+1
  2618  075C                     l1793:
  2619  075C  3003               	movlw	3
  2620  075D  00C0               	movwf	dynam@smd
  2621  075E  3000               	movlw	0
  2622  075F  00C1               	movwf	dynam@smd+1
  2623  0760  0840               	movf	dynam@smd,w
  2624  0761  008D               	movwf	13	;volatile
  2625  0762                     l1795:
  2626                           
  2627                           ;Q2.c: 239:                 if((ccw==1)&&(ext==0)){ccw=2;cw=3;ext=1;PORTB=smd=0x06;}
  2628  0762  0332               	decf	_ccw,w
  2629  0763  0433               	iorwf	_ccw+1,w
  2630  0764  1D03               	btfss	3,2
  2631  0765  2F67               	goto	u1111
  2632  0766  2F68               	goto	u1110
  2633  0767                     u1111:
  2634  0767  2F80               	goto	l1801
  2635  0768                     u1110:
  2636  0768                     l1797:
  2637  0768  0846               	movf	dynam@ext,w
  2638  0769  0447               	iorwf	dynam@ext+1,w
  2639  076A  1D03               	btfss	3,2
  2640  076B  2F6D               	goto	u1121
  2641  076C  2F6E               	goto	u1120
  2642  076D                     u1121:
  2643  076D  2F80               	goto	l1801
  2644  076E                     u1120:
  2645  076E                     l1799:
  2646  076E  3002               	movlw	2
  2647  076F  00B2               	movwf	_ccw
  2648  0770  3000               	movlw	0
  2649  0771  00B3               	movwf	_ccw+1
  2650  0772  3003               	movlw	3
  2651  0773  00B4               	movwf	_cw
  2652  0774  3000               	movlw	0
  2653  0775  00B5               	movwf	_cw+1
  2654  0776  3001               	movlw	1
  2655  0777  00C6               	movwf	dynam@ext
  2656  0778  3000               	movlw	0
  2657  0779  00C7               	movwf	dynam@ext+1
  2658  077A  3006               	movlw	6
  2659  077B  00C0               	movwf	dynam@smd
  2660  077C  3000               	movlw	0
  2661  077D  00C1               	movwf	dynam@smd+1
  2662  077E  0840               	movf	dynam@smd,w
  2663  077F  008D               	movwf	13	;volatile
  2664  0780                     l1801:
  2665                           
  2666                           ;Q2.c: 240:                 if((ccw==2)&&(ext==0)){ccw=3;cw=2;ext=1;PORTB=smd=0x0C;}
  2667  0780  3002               	movlw	2
  2668  0781  0632               	xorwf	_ccw,w
  2669  0782  0433               	iorwf	_ccw+1,w
  2670  0783  1D03               	btfss	3,2
  2671  0784  2F86               	goto	u1131
  2672  0785  2F87               	goto	u1130
  2673  0786                     u1131:
  2674  0786  2F9F               	goto	l1807
  2675  0787                     u1130:
  2676  0787                     l1803:
  2677  0787  0846               	movf	dynam@ext,w
  2678  0788  0447               	iorwf	dynam@ext+1,w
  2679  0789  1D03               	btfss	3,2
  2680  078A  2F8C               	goto	u1141
  2681  078B  2F8D               	goto	u1140
  2682  078C                     u1141:
  2683  078C  2F9F               	goto	l1807
  2684  078D                     u1140:
  2685  078D                     l1805:
  2686  078D  3003               	movlw	3
  2687  078E  00B2               	movwf	_ccw
  2688  078F  3000               	movlw	0
  2689  0790  00B3               	movwf	_ccw+1
  2690  0791  3002               	movlw	2
  2691  0792  00B4               	movwf	_cw
  2692  0793  3000               	movlw	0
  2693  0794  00B5               	movwf	_cw+1
  2694  0795  3001               	movlw	1
  2695  0796  00C6               	movwf	dynam@ext
  2696  0797  3000               	movlw	0
  2697  0798  00C7               	movwf	dynam@ext+1
  2698  0799  300C               	movlw	12
  2699  079A  00C0               	movwf	dynam@smd
  2700  079B  3000               	movlw	0
  2701  079C  00C1               	movwf	dynam@smd+1
  2702  079D  0840               	movf	dynam@smd,w
  2703  079E  008D               	movwf	13	;volatile
  2704  079F                     l1807:
  2705                           
  2706                           ;Q2.c: 241:                 if((ccw==3)&&(ext==0)){ccw=0;cw=1;ext=1;PORTB=smd=0x09;}
  2707  079F  3003               	movlw	3
  2708  07A0  0632               	xorwf	_ccw,w
  2709  07A1  0433               	iorwf	_ccw+1,w
  2710  07A2  1D03               	btfss	3,2
  2711  07A3  2FA5               	goto	u1151
  2712  07A4  2FA6               	goto	u1150
  2713  07A5                     u1151:
  2714  07A5  2EBB               	goto	l1727
  2715  07A6                     u1150:
  2716  07A6                     l1809:
  2717  07A6  0846               	movf	dynam@ext,w
  2718  07A7  0447               	iorwf	dynam@ext+1,w
  2719  07A8  1D03               	btfss	3,2
  2720  07A9  2FAB               	goto	u1161
  2721  07AA  2FAC               	goto	u1160
  2722  07AB                     u1161:
  2723  07AB  2EBB               	goto	l1727
  2724  07AC                     u1160:
  2725  07AC                     l1811:
  2726  07AC  01B2               	clrf	_ccw
  2727  07AD  01B3               	clrf	_ccw+1
  2728  07AE                     l1813:
  2729  07AE  3001               	movlw	1
  2730  07AF  00B4               	movwf	_cw
  2731  07B0  3000               	movlw	0
  2732  07B1  00B5               	movwf	_cw+1
  2733  07B2                     l1815:
  2734  07B2                     l1817:
  2735  07B2  3009               	movlw	9
  2736  07B3  00C0               	movwf	dynam@smd
  2737  07B4  3000               	movlw	0
  2738  07B5  00C1               	movwf	dynam@smd+1
  2739  07B6  0840               	movf	dynam@smd,w
  2740  07B7  008D               	movwf	13	;volatile
  2741  07B8  2EBB               	goto	l1727
  2742  07B9                     l1825:
  2743                           
  2744                           ;Q2.c: 245:                 cw=ccw=0;
  2745  07B9  01B2               	clrf	_ccw
  2746  07BA  01B3               	clrf	_ccw+1
  2747  07BB  01B4               	clrf	_cw
  2748  07BC  01B5               	clrf	_cw+1
  2749                           
  2750                           ;Q2.c: 246:                 break;
  2751  07BD  2FCE               	goto	l135
  2752  07BE                     l1829:
  2753                           
  2754                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2755                           ; Switch size 1, requested type "simple"
  2756                           ; Number of cases is 1, Range of values is 0 to 0
  2757                           ; switch strategies available:
  2758                           ; Name         Instructions Cycles
  2759                           ; simple_byte            4     3 (average)
  2760                           ; direct_byte            8     6 (fixed)
  2761                           ; jumptable            260     6 (fixed)
  2762                           ;	Chosen strategy is simple_byte
  2763  07BE  0875               	movf	dynam@smdata+1,w
  2764  07BF  3A00               	xorlw	0	; case 0
  2765  07C0  1903               	skipnz
  2766  07C1  2FC3               	goto	l2501
  2767  07C2  2FB9               	goto	l1825
  2768  07C3                     l2501:
  2769                           
  2770                           ; Switch size 1, requested type "simple"
  2771                           ; Number of cases is 3, Range of values is 0 to 2
  2772                           ; switch strategies available:
  2773                           ; Name         Instructions Cycles
  2774                           ; simple_byte           10     6 (average)
  2775                           ; direct_byte           12     6 (fixed)
  2776                           ; jumptable            260     6 (fixed)
  2777                           ;	Chosen strategy is simple_byte
  2778  07C3  0874               	movf	dynam@smdata,w
  2779  07C4  3A00               	xorlw	0	; case 0
  2780  07C5  1903               	skipnz
  2781  07C6  2EBA               	goto	l1723
  2782  07C7  3A01               	xorlw	1	; case 1
  2783  07C8  1903               	skipnz
  2784  07C9  2EBF               	goto	l1733
  2785  07CA  3A03               	xorlw	3	; case 2
  2786  07CB  1903               	skipnz
  2787  07CC  2F3C               	goto	l1779
  2788  07CD  2FB9               	goto	l1825
  2789  07CE                     l135:
  2790  07CE  0008               	return
  2791  07CF                     __end_of_dynam:
  2792                           
  2793                           	psect	text9
  2794  0346                     __ptext9:	
  2795 ;; *************** function _fclr *****************
  2796 ;; Defined at:
  2797 ;;		line 369 in file "Q2.c"
  2798 ;; Parameters:    Size  Location     Type
  2799 ;;  flg             2    0[COMMON] unsigned short 
  2800 ;; Auto vars:     Size  Location     Type
  2801 ;;		None
  2802 ;; Return value:  Size  Location     Type
  2803 ;;                  1    wreg      void 
  2804 ;; Registers used:
  2805 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2806 ;; Tracked objects:
  2807 ;;		On entry : 0/0
  2808 ;;		On exit  : 0/0
  2809 ;;		Unchanged: 0/0
  2810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2811 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2814 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2815 ;;Total ram usage:        2 bytes
  2816 ;; Hardware stack levels used:    1
  2817 ;; This function calls:
  2818 ;;		Nothing
  2819 ;; This function is called by:
  2820 ;;		_main
  2821 ;;		_kaisu
  2822 ;; This function uses a non-reentrant model
  2823 ;;
  2824                           
  2825                           
  2826                           ;psect for function _fclr
  2827  0346                     _fclr:
  2828  0346                     l1953:	
  2829                           ;incstack = 0
  2830                           ; Regs used in _fclr: [wreg-fsr0h+status,2+status,0]
  2831                           
  2832                           
  2833                           ;Q2.c: 369: void fclr(unsigned short flg);Q2.c: 370: {;Q2.c: 371:     switch(flg){
  2834  0346  2B55               	goto	l1963
  2835  0347                     l1955:
  2836                           
  2837                           ;Q2.c: 373:                     flag_R=0;
  2838  0347  0020               	movlb	0	; select bank0
  2839  0348  01BA               	clrf	_flag_R
  2840  0349  01BB               	clrf	_flag_R+1
  2841                           
  2842                           ;Q2.c: 374:                     break;
  2843  034A  2B65               	goto	l217
  2844  034B                     l1957:
  2845                           
  2846                           ;Q2.c: 376:                     flag_P=0;
  2847  034B  0020               	movlb	0	; select bank0
  2848  034C  01B8               	clrf	_flag_P
  2849  034D  01B9               	clrf	_flag_P+1
  2850                           
  2851                           ;Q2.c: 377:                     break;
  2852  034E  2B65               	goto	l217
  2853  034F                     l1959:
  2854                           
  2855                           ;Q2.c: 379:                     flag_P=flag_R=0;
  2856  034F  0020               	movlb	0	; select bank0
  2857  0350  01BA               	clrf	_flag_R
  2858  0351  01BB               	clrf	_flag_R+1
  2859  0352  01B8               	clrf	_flag_P
  2860  0353  01B9               	clrf	_flag_P+1
  2861                           
  2862                           ;Q2.c: 380:                     break;
  2863  0354  2B65               	goto	l217
  2864  0355                     l1963:
  2865                           
  2866                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2867                           ; Switch size 1, requested type "simple"
  2868                           ; Number of cases is 1, Range of values is 0 to 0
  2869                           ; switch strategies available:
  2870                           ; Name         Instructions Cycles
  2871                           ; simple_byte            4     3 (average)
  2872                           ; direct_byte            8     6 (fixed)
  2873                           ; jumptable            260     6 (fixed)
  2874                           ;	Chosen strategy is simple_byte
  2875  0355  0871               	movf	fclr@flg+1,w
  2876  0356  3A00               	xorlw	0	; case 0
  2877  0357  1903               	skipnz
  2878  0358  2B5A               	goto	l2503
  2879  0359  2B65               	goto	l217
  2880  035A                     l2503:
  2881                           
  2882                           ; Switch size 1, requested type "simple"
  2883                           ; Number of cases is 3, Range of values is 0 to 2
  2884                           ; switch strategies available:
  2885                           ; Name         Instructions Cycles
  2886                           ; simple_byte           10     6 (average)
  2887                           ; direct_byte           12     6 (fixed)
  2888                           ; jumptable            260     6 (fixed)
  2889                           ;	Chosen strategy is simple_byte
  2890  035A  0870               	movf	fclr@flg,w
  2891  035B  3A00               	xorlw	0	; case 0
  2892  035C  1903               	skipnz
  2893  035D  2B47               	goto	l1955
  2894  035E  3A01               	xorlw	1	; case 1
  2895  035F  1903               	skipnz
  2896  0360  2B4B               	goto	l1957
  2897  0361  3A03               	xorlw	3	; case 2
  2898  0362  1903               	skipnz
  2899  0363  2B4F               	goto	l1959
  2900  0364  2B65               	goto	l217
  2901  0365                     l217:
  2902  0365  0008               	return
  2903  0366                     __end_of_fclr:
  2904  007E                     btemp	set	126	;btemp
  2905  007E                     wtemp0	set	126
  2906                           
  2907                           	psect	config
  2908                           
  2909                           ;Config register CONFIG1 @ 0x8007
  2910                           ;	Oscillator Selection
  2911                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  2912                           ;	Watchdog Timer Enable
  2913                           ;	WDTE = OFF, WDT disabled
  2914                           ;	Power-up Timer Enable
  2915                           ;	PWRTE = OFF, PWRT disabled
  2916                           ;	MCLR Pin Function Select
  2917                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  2918                           ;	Flash Program Memory Code Protection
  2919                           ;	CP = OFF, Program memory code protection is disabled
  2920                           ;	Data Memory Code Protection
  2921                           ;	CPD = OFF, Data memory code protection is disabled
  2922                           ;	Brown-out Reset Enable
  2923                           ;	BOREN = OFF, Brown-out Reset disabled
  2924                           ;	Clock Out Enable
  2925                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  2926                           ;	Internal/External Switchover
  2927                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2928                           ;	Fail-Safe Clock Monitor Enable
  2929                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2930  8007                     	org	32775
  2931  8007  09E4               	dw	2532
  2932                           
  2933                           ;Config register CONFIG2 @ 0x8008
  2934                           ;	Flash Memory Self-Write Protection
  2935                           ;	WRT = OFF, Write protection off
  2936                           ;	Voltage Regulator Capacitor Enable
  2937                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
  2938                           ;	PLL Enable
  2939                           ;	PLLEN = OFF, 4x PLL disabled
  2940                           ;	Stack Overflow/Underflow Reset Enable
  2941                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  2942                           ;	Brown-out Reset Voltage Selection
  2943                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  2944                           ;	Low-Voltage Programming Enable
  2945                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  2946  8008                     	org	32776
  2947  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    0
    Data        156
    BSS         34
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      13
    BANK0            80     28      78
    BANK1            80      0      74
    BANK2            80      0      64
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_motor
    _main->_tact
    _main->_waitSEG
    _waitSEG->___lwdiv
    _waitSEG->_dynam
    _tact->_tactsw
    _motor->_dynam

Critical Paths under _main in BANK0

    _main->_motor
    _waitSEG->_dynam
    _motor->_dynam

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0    9487
                                             10 COMMON     1     1      0
                                             18 BANK0     10    10      0
                              _dynam
                               _fclr
                              _motor
                           _portinit
                               _tact
                            _waitSEG
                             _zenoff
 ---------------------------------------------------------------------------------
 (1) _zenoff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _waitSEG                                              8     2      6    2644
                                              8 COMMON     2     2      0
                                              8 BANK0      6     0      6
                            ___lwdiv
                              _dynam
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _tact                                                 2     0      2     442
                                              8 COMMON     2     0      2
                             _tactsw
 ---------------------------------------------------------------------------------
 (2) _tactsw                                               8     8      0     116
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 (1) _portinit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motor                                               12     2     10    3643
                                              8 COMMON     2     2      0
                                              8 BANK0     10     0     10
                              _dynam
 ---------------------------------------------------------------------------------
 (2) _dynam                                               16     8      8    1967
                                              0 COMMON     8     0      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (1) _fclr                                                 2     0      2     630
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _dynam
   _fclr
   _motor
     _dynam
   _portinit
   _tact
     _tactsw
   _waitSEG
     ___lwdiv
     _dynam
   _zenoff

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      B       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1C      4E       5       97.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      4A       7       92.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      40       9       80.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      E5      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      E5      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 09 17:32:16 2021

                     l95 0345                       _cw 0034                      l112 0681  
                    l114 0691                      l123 06C7                      l116 06A7  
                    l108 0320                      l118 06B7                      l135 07CE  
                    l208 050C                      l217 0365                      l129 0744  
                    l270 0523                      l263 0389                      l193 0436  
                    l258 03BD                      l292 0650                      l276 0540  
                    l268 0516                      l729 03F9                      _RA0 0060  
                    _RA1 0061                      _RA2 0062                      _RC0 0070  
                    _RC1 0071                      _RC2 0072                      _RC5 0075  
                    _RC6 0076                      _RC7 0077                      u950 0678  
                    u951 0677                      u960 068B                      u961 068A  
                    u970 069E                      u971 069D                      u980 06B1  
                    u981 06B0                      u990 06C5                      u991 06C4  
                    _ccw 0032                      _flg 0036                      wreg 0009  
                   l2301 0635                     l2303 0651                     l2231 050D  
                   l2241 0516                     l2233 0510                     l2251 053B  
                   l2243 0516                     l2235 0516                     l2501 07C3  
                   l2261 0569                     l2245 051B                     l2237 0516  
                   l2503 035A                     l1711 069E                     l1703 0693  
                   l2271 058B                     l2263 0570                     l2255 0545  
                   l2247 051F                     l2239 0516                     l1801 0780  
                   l1713 06A3                     l1705 0695                     l2281 05A6  
                   l2273 0591                     l2257 055C                     l2249 0534  
                   l1811 07AC                     l1803 0787                     l1731 06BD  
                   l1723 06BA                     l1715 06AB                     l1707 0696  
                   l2275 0598                     l2259 0562                     l1813 07AE  
                   l1805 078D                     l1741 06D5                     l1733 06BF  
                   l1725 06BB                     l1709 0697                     l2293 0603  
                   l2285 05C5                     l2277 059E                     l2269 0573  
                   l1815 07B2                     l1807 079F                     l1751 06EB  
                   l1743 06D9                     l1735 06C5                     l1727 06BB  
                   l1719 06B2                     l1911 031C                     l1825 07B9  
                   l1817 07B2                     l1809 07A6                     l1761 0722  
                   l1753 06F1                     l1745 06DB                     l1737 06C9  
                   l1729 06BC                     l1681 066C                     l1841 0414  
                   l1921 04C2                     l1913 031D                     l2289 05E4  
                   l1771 0735                     l1763 0729                     l1755 0703  
                   l1747 06DF                     l1739 06CF                     l1691 0678  
                   l1683 066D                     l1851 0431                     l1843 0419  
                   l1835 03FA                     l1931 04DA                     l1923 04C5  
                   l1915 031E                     l2299 0622                     l1781 0742  
                   l1765 072F                     l1757 070A                     l1749 06E5  
                   l1829 07BE                     l1693 067D                     l1685 066F  
                   l1845 041B                     l1837 03FE                     l1941 04F4  
                   l1933 04E0                     l1925 04CB                     l1861 03CE  
                   l1853 03BE                     l1917 031F                     l1909 0318  
                   l1791 0758                     l1783 0746                     l1767 0731  
                   l1759 0710                     l1695 0685                     l1687 0670  
                   l1679 0665                     l1847 0424                     l1839 040A  
                   l1935 04E3                     l1927 04D1                     l1919 04C1  
                   l1871 03EA                     l1863 03D2                     l1855 03C0  
                   l1953 0346                     l1793 075C                     l1785 074C  
                   l1769 0735                     l1689 0671                     l1881 0336  
                   l1937 04E9                     l1929 04D4                     l1873 03EF  
                   l1865 03D6                     l1857 03C6                     l2497 0627  
                   l1955 0347                     l1963 0355                     l1787 0752  
                   l1795 0762                     l1779 073C                     l1699 068C  
                   l1883 0339                     l2499 0501                     l1939 04EE  
                   l1947 04FC                     l1867 03E5                     l1859 03C9  
                   l1875 03F5                     l1971 039B                     l1957 034B  
                   l1797 0768                     l1789 0756                     l1885 0340  
                   l1869 03E9                     l1973 039F                     l1959 034F  
                   l1799 076E                     l1991 0384                     l1983 0366  
                   l1887 0343                     l1879 0333                     l1985 036B  
                   l1977 03A6                     l1969 038A                     l1979 03B8  
                   l1989 0370                     u1000 06CF                     u1001 06CE  
                   u1010 06D5                     u1011 06D4                     u1100 0752  
                   u1020 06EB                     u1101 0751                     u1021 06EA  
                   u1110 0768                     u1030 06F1                     u1111 0767  
                   u1031 06F0                     u1120 076E                     u1040 070A  
                   u1121 076D                     u1041 0709                     u1130 0787  
                   u1050 0710                     u1210 03D6                     u1131 0786  
                   u1051 070F                     u1211 03D5                     u1140 078D  
                   u1060 0729                     u1300 04E9                     u1141 078C  
                   u1061 0728                     u1301 04E8                     u1205 03CA  
                   u1150 07A6                     u1070 072F                     u1310 04F4  
                   u1230 03E5                     u1151 07A5                     u1071 072E  
                   u1311 04F3                     u1231 03E4                     u1160 07AC  
                   u1080 0742                     u1320 04FB                     u1161 07AB  
                   u1081 0741                     u1321 04FA                     u1225 03D7  
                   u1090 074C                     u1170 0414                     u1250 03F5  
                   u1330 03A5                     u1091 074B                     u1171 0413  
                   u1251 03F4                     u1235 03E1                     u1331 03A4  
                   u1340 036F                     u1180 0424                     u1341 036E  
                   u1181 0423                     u1245 03EB                     u1190 03C6  
                   u1175 0410                     u1191 03C5                     u1280 04CB  
                   u1281 04CA                     u1290 04DA                     u1291 04D9  
                   u1710 051B                     u1711 051A                     u1800 0569  
                   u1720 051F                     u1801 0568                     u1721 051E  
                   u1810 0591                     u1730 0523                     u1811 0590  
                   u1731 0522                     u1820 059E                     u1740 052A  
                   u1821 059D                     u1741 0527                     u1830 05A5  
                   u1750 0532                     u1831 05A4                     u1751 052F  
                   u1840 0662                     u1841 0661                     u1770 0540  
                   u1754 052C                     u1771 053F                     u1780 0545  
                   u1764 0534                     u1845 065E                     u1781 0544  
                   u1790 0562                     u1791 0561                     _atai 002C  
                   _fclr 0346                     _main 050D                     _num0 0140  
                   _kisu 00E0                     _moja 00D4                     _samf 0120  
                   _mojf 0154                     _tact 04C1                     _mojh 006A  
                   _moji 00C0                     _mojn 0066                     _samp 00A0  
                   _gusu 005C                     fsr0h 0005                     fsr1h 0007  
                   indf0 0000                     fsr0l 0004                     fsr1l 0006  
                   btemp 007E                     start 0002                    ?_fclr 0070  
                  ?_main 0070                    ?_tact 0078          __end_of___lwdiv 03FA  
                  _PORTA 000C                    _PORTB 000D                    _PORTC 000E  
                  _TRISA 008C                    _TRISB 008D                    _TRISC 008E  
                  _code1 0022                    _atai1 002E                    _count 002A  
                  _dynam 0665                    _fugou 0020                    _motor 0366  
                  main@i 005A          __end_of_waitSEG 03BE                    status 0003  
                  wtemp0 007E          __initialization 07CF             __end_of_fclr 0366  
           __end_of_main 0665             __end_of_tact 050D                   ??_fclr 0072  
                 ??_main 007A                   ??_tact 007A                   ?_dynam 0070  
                 ?_motor 0048                   _ANSELA 018C                   _ANSELB 018D  
                 _OSCCON 0099              dynam@smdata 0074                   _code10 0024  
                 _atai10 0030                   _flag_P 0038                   _flag_R 003A  
              ??___lwdiv 0074                   _tactsw 03FA                   _zenoff 0318  
                 dynam@j 0044                ??_waitSEG 0078                   motor@i 0078  
       __end_of_portinit 0346  __end_of__initialization 07FD           __pcstackCOMMON 0070  
           __pidataBANK0 0321             __pidataBANK1 0477             __pidataBANK2 0437  
          __end_of_dynam 07CF            __end_of_motor 038A                  ??_dynam 0078  
                ??_motor 0078               __pbssBANK0 0020               __pmaintext 050D  
                ?_tactsw 0070                  ?_zenoff 0070              waitSEG@seg1 0048  
            waitSEG@seg2 004A                ?_portinit 0070                  ___lwdiv 03BE  
                _code100 0026          __size_of_tactsw 003D                  __ptext1 0318  
                __ptext2 038A                  __ptext3 03BE                  __ptext4 04C1  
                __ptext5 03FA                  __ptext6 0333                  __ptext7 0366  
                __ptext8 0665                  __ptext9 0346          __size_of_zenoff 0009  
                fclr@flg 0070                  _waitSEG 038A              motor@kakudo 0048  
                clrloop0 030D     end_of_initialization 07FD              motor@smdata 004E  
                dynam@tm 0042                  dynam@tr 0076                  init_ram 0312  
                initloop 0313                  tactsw@a 0076                  tactsw@b 0072  
                tactsw@c 0074                  motor@tr 0050               ??_portinit 0070  
         __end_of_tactsw 0437           __end_of_zenoff 0321      start_initialization 07CF  
            __pdataBANK0 005C              __pdataBANK1 00A0              __pdataBANK2 0120  
               ??_tactsw 0070                 ??_zenoff 0070              __pbssCOMMON 007B  
              ___latbits 0003            __pcstackBANK0 0040         ___lwdiv@dividend 0072  
               ?___lwdiv 0070        __size_of_portinit 0013                 ?_waitSEG 0048  
       ___lwdiv@quotient 0075           __size_of_dynam 016A           __size_of_motor 0024  
          dynam@dig1data 0070            dynam@dig2data 0072                clear_ram0 030C  
          motor@dig1data 004A            motor@dig2data 004C         __size_of___lwdiv 003C  
               _code1000 0028          ___lwdiv@divisor 0070          ___lwdiv@counter 0077  
       __size_of_waitSEG 0034                 _flag_sw1 003E                 _flag_sw2 003C  
               _flag_sw3 007B                waitSEG@wt 004C            __size_of_fclr 0020  
          __size_of_main 0158            __size_of_tact 004C                 _portinit 0333  
               dynam@ext 0046                 dynam@smd 0040                 tact@mode 0078  
               waitSEG@i 0078  
