

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 09 18:14:12 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F1938
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.20
    32                           ; Generated 12/02/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F1938 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0016                     	;# 
    87  0017                     	;# 
    88  0018                     	;# 
    89  0019                     	;# 
    90  001A                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  010C                     	;# 
   114  010D                     	;# 
   115  010E                     	;# 
   116  0110                     	;# 
   117  0111                     	;# 
   118  0112                     	;# 
   119  0113                     	;# 
   120  0114                     	;# 
   121  0115                     	;# 
   122  0116                     	;# 
   123  0117                     	;# 
   124  0118                     	;# 
   125  0119                     	;# 
   126  011A                     	;# 
   127  011B                     	;# 
   128  011D                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0191                     	;# 
   132  0191                     	;# 
   133  0192                     	;# 
   134  0193                     	;# 
   135  0193                     	;# 
   136  0193                     	;# 
   137  0194                     	;# 
   138  0195                     	;# 
   139  0196                     	;# 
   140  0199                     	;# 
   141  019A                     	;# 
   142  019B                     	;# 
   143  019B                     	;# 
   144  019B                     	;# 
   145  019B                     	;# 
   146  019C                     	;# 
   147  019C                     	;# 
   148  019D                     	;# 
   149  019E                     	;# 
   150  019F                     	;# 
   151  020D                     	;# 
   152  0210                     	;# 
   153  0211                     	;# 
   154  0212                     	;# 
   155  0213                     	;# 
   156  0214                     	;# 
   157  0215                     	;# 
   158  0215                     	;# 
   159  0216                     	;# 
   160  0217                     	;# 
   161  0291                     	;# 
   162  0291                     	;# 
   163  0292                     	;# 
   164  0293                     	;# 
   165  0294                     	;# 
   166  0295                     	;# 
   167  0295                     	;# 
   168  0296                     	;# 
   169  0298                     	;# 
   170  0298                     	;# 
   171  0299                     	;# 
   172  029A                     	;# 
   173  029B                     	;# 
   174  029C                     	;# 
   175  029C                     	;# 
   176  029D                     	;# 
   177  029E                     	;# 
   178  029F                     	;# 
   179  0311                     	;# 
   180  0311                     	;# 
   181  0312                     	;# 
   182  0313                     	;# 
   183  0314                     	;# 
   184  0315                     	;# 
   185  0315                     	;# 
   186  0316                     	;# 
   187  0318                     	;# 
   188  0318                     	;# 
   189  0319                     	;# 
   190  031A                     	;# 
   191  031C                     	;# 
   192  031C                     	;# 
   193  031D                     	;# 
   194  031E                     	;# 
   195  0394                     	;# 
   196  0395                     	;# 
   197  0396                     	;# 
   198  0415                     	;# 
   199  0416                     	;# 
   200  0417                     	;# 
   201  041C                     	;# 
   202  041D                     	;# 
   203  041E                     	;# 
   204  0791                     	;# 
   205  0792                     	;# 
   206  0793                     	;# 
   207  0794                     	;# 
   208  0795                     	;# 
   209  0798                     	;# 
   210  0799                     	;# 
   211  07A0                     	;# 
   212  07A1                     	;# 
   213  07A3                     	;# 
   214  07A4                     	;# 
   215  07A6                     	;# 
   216  07A7                     	;# 
   217  07A9                     	;# 
   218  07AA                     	;# 
   219  0FE4                     	;# 
   220  0FE5                     	;# 
   221  0FE6                     	;# 
   222  0FE7                     	;# 
   223  0FE8                     	;# 
   224  0FE9                     	;# 
   225  0FEA                     	;# 
   226  0FEB                     	;# 
   227  0FED                     	;# 
   228  0FEE                     	;# 
   229  0FEF                     	;# 
   230  0000                     	;# 
   231  0001                     	;# 
   232  0002                     	;# 
   233  0003                     	;# 
   234  0004                     	;# 
   235  0005                     	;# 
   236  0006                     	;# 
   237  0007                     	;# 
   238  0008                     	;# 
   239  0009                     	;# 
   240  000A                     	;# 
   241  000B                     	;# 
   242  000C                     	;# 
   243  000D                     	;# 
   244  000E                     	;# 
   245  0010                     	;# 
   246  0011                     	;# 
   247  0012                     	;# 
   248  0013                     	;# 
   249  0015                     	;# 
   250  0016                     	;# 
   251  0016                     	;# 
   252  0017                     	;# 
   253  0018                     	;# 
   254  0019                     	;# 
   255  001A                     	;# 
   256  001B                     	;# 
   257  001C                     	;# 
   258  001E                     	;# 
   259  001F                     	;# 
   260  008C                     	;# 
   261  008D                     	;# 
   262  008E                     	;# 
   263  0090                     	;# 
   264  0091                     	;# 
   265  0092                     	;# 
   266  0093                     	;# 
   267  0095                     	;# 
   268  0096                     	;# 
   269  0097                     	;# 
   270  0098                     	;# 
   271  0099                     	;# 
   272  009A                     	;# 
   273  009B                     	;# 
   274  009B                     	;# 
   275  009C                     	;# 
   276  009D                     	;# 
   277  009E                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  0110                     	;# 
   282  0111                     	;# 
   283  0112                     	;# 
   284  0113                     	;# 
   285  0114                     	;# 
   286  0115                     	;# 
   287  0116                     	;# 
   288  0117                     	;# 
   289  0118                     	;# 
   290  0119                     	;# 
   291  011A                     	;# 
   292  011B                     	;# 
   293  011D                     	;# 
   294  018C                     	;# 
   295  018D                     	;# 
   296  0191                     	;# 
   297  0191                     	;# 
   298  0192                     	;# 
   299  0193                     	;# 
   300  0193                     	;# 
   301  0193                     	;# 
   302  0194                     	;# 
   303  0195                     	;# 
   304  0196                     	;# 
   305  0199                     	;# 
   306  019A                     	;# 
   307  019B                     	;# 
   308  019B                     	;# 
   309  019B                     	;# 
   310  019B                     	;# 
   311  019C                     	;# 
   312  019C                     	;# 
   313  019D                     	;# 
   314  019E                     	;# 
   315  019F                     	;# 
   316  020D                     	;# 
   317  0210                     	;# 
   318  0211                     	;# 
   319  0212                     	;# 
   320  0213                     	;# 
   321  0214                     	;# 
   322  0215                     	;# 
   323  0215                     	;# 
   324  0216                     	;# 
   325  0217                     	;# 
   326  0291                     	;# 
   327  0291                     	;# 
   328  0292                     	;# 
   329  0293                     	;# 
   330  0294                     	;# 
   331  0295                     	;# 
   332  0295                     	;# 
   333  0296                     	;# 
   334  0298                     	;# 
   335  0298                     	;# 
   336  0299                     	;# 
   337  029A                     	;# 
   338  029B                     	;# 
   339  029C                     	;# 
   340  029C                     	;# 
   341  029D                     	;# 
   342  029E                     	;# 
   343  029F                     	;# 
   344  0311                     	;# 
   345  0311                     	;# 
   346  0312                     	;# 
   347  0313                     	;# 
   348  0314                     	;# 
   349  0315                     	;# 
   350  0315                     	;# 
   351  0316                     	;# 
   352  0318                     	;# 
   353  0318                     	;# 
   354  0319                     	;# 
   355  031A                     	;# 
   356  031C                     	;# 
   357  031C                     	;# 
   358  031D                     	;# 
   359  031E                     	;# 
   360  0394                     	;# 
   361  0395                     	;# 
   362  0396                     	;# 
   363  0415                     	;# 
   364  0416                     	;# 
   365  0417                     	;# 
   366  041C                     	;# 
   367  041D                     	;# 
   368  041E                     	;# 
   369  0791                     	;# 
   370  0792                     	;# 
   371  0793                     	;# 
   372  0794                     	;# 
   373  0795                     	;# 
   374  0798                     	;# 
   375  0799                     	;# 
   376  07A0                     	;# 
   377  07A1                     	;# 
   378  07A3                     	;# 
   379  07A4                     	;# 
   380  07A6                     	;# 
   381  07A7                     	;# 
   382  07A9                     	;# 
   383  07AA                     	;# 
   384  0FE4                     	;# 
   385  0FE5                     	;# 
   386  0FE6                     	;# 
   387  0FE7                     	;# 
   388  0FE8                     	;# 
   389  0FE9                     	;# 
   390  0FEA                     	;# 
   391  0FEB                     	;# 
   392  0FED                     	;# 
   393  0FEE                     	;# 
   394  0FEF                     	;# 
   395                           
   396                           	psect	idataBANK0
   397  0342                     __pidataBANK0:
   398                           
   399                           ;initializer for _mojn
   400  0342  3454               	retlw	84
   401  0343  3400               	retlw	0
   402  0344  3473               	retlw	115
   403  0345  3400               	retlw	0
   404                           
   405                           ;initializer for _mojh
   406  0346  3476               	retlw	118
   407  0347  3400               	retlw	0
   408  0348  3438               	retlw	56
   409  0349  3400               	retlw	0
   410                           
   411                           	psect	idataBANK1
   412  0491                     __pidataBANK1:
   413                           
   414                           ;initializer for _samp
   415  0491  343F               	retlw	63
   416  0492  3400               	retlw	0
   417  0493  3406               	retlw	6
   418  0494  3400               	retlw	0
   419  0495  345B               	retlw	91
   420  0496  3400               	retlw	0
   421  0497  344F               	retlw	79
   422  0498  3400               	retlw	0
   423  0499  3466               	retlw	102
   424  049A  3400               	retlw	0
   425  049B  346D               	retlw	109
   426  049C  3400               	retlw	0
   427  049D  347D               	retlw	125
   428  049E  3400               	retlw	0
   429  049F  3427               	retlw	39
   430  04A0  3400               	retlw	0
   431  04A1  347F               	retlw	127
   432  04A2  3400               	retlw	0
   433  04A3  346F               	retlw	111
   434  04A4  3400               	retlw	0
   435  04A5  345F               	retlw	95
   436  04A6  3400               	retlw	0
   437  04A7  347C               	retlw	124
   438  04A8  3400               	retlw	0
   439  04A9  3458               	retlw	88
   440  04AA  3400               	retlw	0
   441  04AB  345E               	retlw	94
   442  04AC  3400               	retlw	0
   443  04AD  3479               	retlw	121
   444  04AE  3400               	retlw	0
   445  04AF  3471               	retlw	113
   446  04B0  3400               	retlw	0
   447                           
   448                           ;initializer for _num0
   449  04B1  343F               	retlw	63
   450  04B2  3400               	retlw	0
   451  04B3  3406               	retlw	6
   452  04B4  3400               	retlw	0
   453  04B5  345B               	retlw	91
   454  04B6  3400               	retlw	0
   455  04B7  344F               	retlw	79
   456  04B8  3400               	retlw	0
   457  04B9  3466               	retlw	102
   458  04BA  3400               	retlw	0
   459  04BB  346D               	retlw	109
   460  04BC  3400               	retlw	0
   461  04BD  347D               	retlw	125
   462  04BE  3400               	retlw	0
   463  04BF  3427               	retlw	39
   464  04C0  3400               	retlw	0
   465  04C1  347F               	retlw	127
   466  04C2  3400               	retlw	0
   467  04C3  346F               	retlw	111
   468  04C4  3400               	retlw	0
   469                           
   470                           ;initializer for _kisu
   471  04C5  3406               	retlw	6
   472  04C6  3400               	retlw	0
   473  04C7  344F               	retlw	79
   474  04C8  3400               	retlw	0
   475  04C9  346D               	retlw	109
   476  04CA  3400               	retlw	0
   477  04CB  3427               	retlw	39
   478  04CC  3400               	retlw	0
   479  04CD  346F               	retlw	111
   480  04CE  3400               	retlw	0
   481                           
   482                           ;initializer for _gusu
   483  04CF  343F               	retlw	63
   484  04D0  3400               	retlw	0
   485  04D1  345B               	retlw	91
   486  04D2  3400               	retlw	0
   487  04D3  3466               	retlw	102
   488  04D4  3400               	retlw	0
   489  04D5  347D               	retlw	125
   490  04D6  3400               	retlw	0
   491  04D7  347F               	retlw	127
   492  04D8  3400               	retlw	0
   493                           
   494                           	psect	idataBANK2
   495  0524                     __pidataBANK2:
   496                           
   497                           ;initializer for _samf
   498  0524  3471               	retlw	113
   499  0525  3400               	retlw	0
   500  0526  3479               	retlw	121
   501  0527  3400               	retlw	0
   502  0528  345E               	retlw	94
   503  0529  3400               	retlw	0
   504  052A  3458               	retlw	88
   505  052B  3400               	retlw	0
   506  052C  347C               	retlw	124
   507  052D  3400               	retlw	0
   508  052E  345F               	retlw	95
   509  052F  3400               	retlw	0
   510  0530  346F               	retlw	111
   511  0531  3400               	retlw	0
   512  0532  347F               	retlw	127
   513  0533  3400               	retlw	0
   514  0534  3427               	retlw	39
   515  0535  3400               	retlw	0
   516  0536  347D               	retlw	125
   517  0537  3400               	retlw	0
   518  0538  346D               	retlw	109
   519  0539  3400               	retlw	0
   520  053A  3466               	retlw	102
   521  053B  3400               	retlw	0
   522  053C  344F               	retlw	79
   523  053D  3400               	retlw	0
   524  053E  345B               	retlw	91
   525  053F  3400               	retlw	0
   526  0540  3406               	retlw	6
   527  0541  3400               	retlw	0
   528  0542  343F               	retlw	63
   529  0543  3400               	retlw	0
   530                           
   531                           ;initializer for _moji
   532  0544  345F               	retlw	95
   533  0545  3400               	retlw	0
   534  0546  347C               	retlw	124
   535  0547  3400               	retlw	0
   536  0548  3458               	retlw	88
   537  0549  3400               	retlw	0
   538  054A  345E               	retlw	94
   539  054B  3400               	retlw	0
   540  054C  3479               	retlw	121
   541  054D  3400               	retlw	0
   542  054E  3471               	retlw	113
   543  054F  3400               	retlw	0
   544  0550  3476               	retlw	118
   545  0551  3400               	retlw	0
   546  0552  3438               	retlw	56
   547  0553  3400               	retlw	0
   548  0554  3454               	retlw	84
   549  0555  3400               	retlw	0
   550  0556  3473               	retlw	115
   551  0557  3400               	retlw	0
   552                           
   553                           ;initializer for _mojf
   554  0558  3471               	retlw	113
   555  0559  3400               	retlw	0
   556  055A  3479               	retlw	121
   557  055B  3400               	retlw	0
   558  055C  345E               	retlw	94
   559  055D  3400               	retlw	0
   560  055E  3458               	retlw	88
   561  055F  3400               	retlw	0
   562  0560  347C               	retlw	124
   563  0561  3400               	retlw	0
   564  0562  345F               	retlw	95
   565  0563  3400               	retlw	0
   566                           
   567                           ;initializer for _moja
   568  0564  345F               	retlw	95
   569  0565  3400               	retlw	0
   570  0566  347C               	retlw	124
   571  0567  3400               	retlw	0
   572  0568  3458               	retlw	88
   573  0569  3400               	retlw	0
   574  056A  345E               	retlw	94
   575  056B  3400               	retlw	0
   576  056C  3479               	retlw	121
   577  056D  3400               	retlw	0
   578  056E  3471               	retlw	113
   579  056F  3400               	retlw	0
   580  000E                     _PORTC	set	14
   581  000D                     _PORTB	set	13
   582  000C                     _PORTA	set	12
   583  0061                     _RA1	set	97
   584  0060                     _RA0	set	96
   585  0062                     _RA2	set	98
   586  0077                     _RC7	set	119
   587  0072                     _RC2	set	114
   588  0071                     _RC1	set	113
   589  0070                     _RC0	set	112
   590  0076                     _RC6	set	118
   591  0075                     _RC5	set	117
   592  0099                     _OSCCON	set	153
   593  008E                     _TRISC	set	142
   594  008D                     _TRISB	set	141
   595  008C                     _TRISA	set	140
   596  018D                     _ANSELB	set	397
   597  018C                     _ANSELA	set	396
   598                           
   599                           	psect	cinit
   600  07D1                     start_initialization:	
   601                           ; #config settings
   602                           
   603  07D1                     __initialization:
   604                           
   605                           ; Initialize objects allocated to BANK0
   606  07D1  3042               	movlw	low __pidataBANK0
   607  07D2  0084               	movwf	4
   608  07D3  3083               	movlw	(high __pidataBANK0)| (0+128)
   609  07D4  0085               	movwf	5
   610  07D5  3060               	movlw	low __pdataBANK0
   611  07D6  0086               	movwf	6
   612  07D7  3000               	movlw	high __pdataBANK0
   613  07D8  0087               	movwf	7
   614  07D9  3008               	movlw	8
   615  07DA  3183  233C  3187   	fcall	init_ram
   616                           
   617                           ; Initialize objects allocated to BANK1
   618  07DD  3091               	movlw	low __pidataBANK1
   619  07DE  0084               	movwf	4
   620  07DF  3084               	movlw	(high __pidataBANK1)| (0+128)
   621  07E0  0085               	movwf	5
   622  07E1  30A0               	movlw	low __pdataBANK1
   623  07E2  0086               	movwf	6
   624  07E3  3000               	movlw	high __pdataBANK1
   625  07E4  0087               	movwf	7
   626  07E5  3048               	movlw	72
   627  07E6  3183  233C  3187   	fcall	init_ram
   628                           
   629                           ; Initialize objects allocated to BANK2
   630  07E9  3024               	movlw	low __pidataBANK2
   631  07EA  0084               	movwf	4
   632  07EB  3085               	movlw	(high __pidataBANK2)| (0+128)
   633  07EC  0085               	movwf	5
   634  07ED  3020               	movlw	low __pdataBANK2
   635  07EE  0086               	movwf	6
   636  07EF  3001               	movlw	high __pdataBANK2
   637  07F0  0087               	movwf	7
   638  07F1  304C               	movlw	76
   639  07F2  3183  233C  3187   	fcall	init_ram
   640                           
   641                           ; Clear objects allocated to BANK0
   642  07F5  3020               	movlw	low __pbssBANK0
   643  07F6  0084               	movwf	4
   644  07F7  3000               	movlw	high __pbssBANK0
   645  07F8  0085               	movwf	5
   646  07F9  3022               	movlw	34
   647  07FA  3183  2336  3187   	fcall	clear_ram0
   648  07FD                     end_of_initialization:	
   649                           ;End of C runtime variable initialization code
   650                           
   651  07FD                     __end_of__initialization:
   652  07FD  0020               	movlb	0
   653  07FE  3185  2D70         	ljmp	_main	;jump to C main() function
   654                           
   655                           	psect	bssBANK0
   656  0020                     __pbssBANK0:
   657  0020                     _fugou:
   658  0020                     	ds	2
   659  0022                     _code1:
   660  0022                     	ds	2
   661  0024                     _code10:
   662  0024                     	ds	2
   663  0026                     _code100:
   664  0026                     	ds	2
   665  0028                     _code1000:
   666  0028                     	ds	2
   667  002A                     _count:
   668  002A                     	ds	2
   669  002C                     _atai:
   670  002C                     	ds	2
   671  002E                     _atai1:
   672  002E                     	ds	2
   673  0030                     _atai10:
   674  0030                     	ds	2
   675  0032                     _ccw:
   676  0032                     	ds	2
   677  0034                     _cw:
   678  0034                     	ds	2
   679  0036                     _flg:
   680  0036                     	ds	2
   681  0038                     _flag_P:
   682  0038                     	ds	2
   683  003A                     _flag_R:
   684  003A                     	ds	2
   685  003C                     _flag_sw3:
   686  003C                     	ds	2
   687  003E                     _flag_sw2:
   688  003E                     	ds	2
   689  0040                     _flag_sw1:
   690  0040                     	ds	2
   691                           
   692                           	psect	dataBANK0
   693  0060                     __pdataBANK0:
   694  0060                     _mojn:
   695  0060                     	ds	4
   696  0064                     _mojh:
   697  0064                     	ds	4
   698                           
   699                           	psect	dataBANK1
   700  00A0                     __pdataBANK1:
   701  00A0                     _samp:
   702  00A0                     	ds	32
   703  00C0                     _num0:
   704  00C0                     	ds	20
   705  00D4                     _kisu:
   706  00D4                     	ds	10
   707  00DE                     _gusu:
   708  00DE                     	ds	10
   709                           
   710                           	psect	dataBANK2
   711  0120                     __pdataBANK2:
   712  0120                     _samf:
   713  0120                     	ds	32
   714  0140                     _moji:
   715  0140                     	ds	20
   716  0154                     _mojf:
   717  0154                     	ds	12
   718  0160                     _moja:
   719  0160                     	ds	12
   720                           
   721                           	psect	inittext
   722  033C                     init_ram:
   723  033C  00FE               	movwf	btemp
   724  033D                     initloop:
   725  033D  0012               	moviw fsr0++
   726  033E  001E               	movwi fsr1++
   727  033F  0BFE               	decfsz	btemp,f
   728  0340  2B3D               	goto	initloop
   729  0341  3400               	retlw	0
   730                           
   731                           	psect	clrtext
   732  0336                     clear_ram0:	
   733                           ;	Called with FSR0 containing the base address, and
   734                           ;	WREG with the size to clear
   735                           
   736  0336  0064               	clrwdt	;clear the watchdog before getting into this loop
   737  0337                     clrloop0:
   738  0337  0180               	clrf	0	;clear RAM location pointed to by FSR
   739  0338  3101               	addfsr 0,1
   740  0339  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   741  033A  2B37               	goto	clrloop0	;have we reached the end yet?
   742  033B  3400               	retlw	0	;all done for this memory range, return
   743                           
   744                           	psect	cstackCOMMON
   745  0070                     __pcstackCOMMON:
   746  0070                     ?_portinit:
   747  0070                     ??_portinit:	
   748                           ; 1 bytes @ 0x0
   749                           
   750  0070                     ?_zenoff:	
   751                           ; 1 bytes @ 0x0
   752                           
   753  0070                     ??_zenoff:	
   754                           ; 1 bytes @ 0x0
   755                           
   756  0070                     ?_dynam:	
   757                           ; 1 bytes @ 0x0
   758                           
   759  0070                     ?_tactsw:	
   760                           ; 1 bytes @ 0x0
   761                           
   762  0070                     ??_tactsw:	
   763                           ; 1 bytes @ 0x0
   764                           
   765  0070                     ?_fclr:	
   766                           ; 1 bytes @ 0x0
   767                           
   768  0070                     ?_jikan:	
   769                           ; 1 bytes @ 0x0
   770                           
   771  0070                     ??_jikan:	
   772                           ; 1 bytes @ 0x0
   773                           
   774  0070                     ?_main:	
   775                           ; 1 bytes @ 0x0
   776                           
   777  0070                     ?___lwdiv:	
   778                           ; 1 bytes @ 0x0
   779                           
   780  0070                     dynam@dig1data:	
   781                           ; 2 bytes @ 0x0
   782                           
   783  0070                     fclr@flg:	
   784                           ; 2 bytes @ 0x0
   785                           
   786  0070                     ___lwdiv@divisor:	
   787                           ; 2 bytes @ 0x0
   788                           
   789                           
   790                           ; 2 bytes @ 0x0
   791  0070                     	ds	2
   792  0072                     ??_fclr:
   793  0072                     dynam@dig2data:	
   794                           ; 1 bytes @ 0x2
   795                           
   796  0072                     tactsw@b:	
   797                           ; 2 bytes @ 0x2
   798                           
   799  0072                     ___lwdiv@dividend:	
   800                           ; 2 bytes @ 0x2
   801                           
   802                           
   803                           ; 2 bytes @ 0x2
   804  0072                     	ds	2
   805  0074                     ??___lwdiv:
   806  0074                     dynam@smdata:	
   807                           ; 1 bytes @ 0x4
   808                           
   809  0074                     tactsw@c:	
   810                           ; 2 bytes @ 0x4
   811                           
   812                           
   813                           ; 2 bytes @ 0x4
   814  0074                     	ds	1
   815  0075                     ___lwdiv@quotient:
   816                           
   817                           ; 2 bytes @ 0x5
   818  0075                     	ds	1
   819  0076                     dynam@tr:
   820  0076                     tactsw@a:	
   821                           ; 2 bytes @ 0x6
   822                           
   823                           
   824                           ; 2 bytes @ 0x6
   825  0076                     	ds	1
   826  0077                     ___lwdiv@counter:
   827                           
   828                           ; 1 bytes @ 0x7
   829  0077                     	ds	1
   830  0078                     ??_dynam:
   831  0078                     ?_tact:	
   832                           ; 1 bytes @ 0x8
   833                           
   834  0078                     ??_waitSEG:	
   835                           ; 1 bytes @ 0x8
   836                           
   837  0078                     ??_motor:	
   838                           ; 1 bytes @ 0x8
   839                           
   840  0078                     tact@mode:	
   841                           ; 1 bytes @ 0x8
   842                           
   843  0078                     waitSEG@i:	
   844                           ; 2 bytes @ 0x8
   845                           
   846  0078                     motor@i:	
   847                           ; 2 bytes @ 0x8
   848                           
   849                           
   850                           ; 2 bytes @ 0x8
   851  0078                     	ds	2
   852  007A                     ??_tact:
   853  007A                     ?_bottomTime:	
   854                           ; 1 bytes @ 0xA
   855                           
   856                           
   857                           ; 2 bytes @ 0xA
   858  007A                     	ds	2
   859  007C                     ??_bottomTime:
   860  007C                     ??_main:	
   861                           ; 1 bytes @ 0xC
   862                           
   863                           
   864                           ; 1 bytes @ 0xC
   865  007C                     	ds	1
   866                           
   867                           	psect	cstackBANK0
   868  0042                     __pcstackBANK0:
   869  0042                     dynam@smd:
   870                           
   871                           ; 2 bytes @ 0x0
   872  0042                     	ds	2
   873  0044                     dynam@tm:
   874                           
   875                           ; 2 bytes @ 0x2
   876  0044                     	ds	2
   877  0046                     dynam@j:
   878                           
   879                           ; 2 bytes @ 0x4
   880  0046                     	ds	2
   881  0048                     dynam@ext:
   882                           
   883                           ; 2 bytes @ 0x6
   884  0048                     	ds	2
   885  004A                     ?_waitSEG:
   886  004A                     ?_motor:	
   887                           ; 1 bytes @ 0x8
   888                           
   889  004A                     waitSEG@seg1:	
   890                           ; 1 bytes @ 0x8
   891                           
   892  004A                     motor@kakudo:	
   893                           ; 2 bytes @ 0x8
   894                           
   895                           
   896                           ; 2 bytes @ 0x8
   897  004A                     	ds	2
   898  004C                     waitSEG@seg2:
   899  004C                     motor@dig1data:	
   900                           ; 2 bytes @ 0xA
   901                           
   902                           
   903                           ; 2 bytes @ 0xA
   904  004C                     	ds	2
   905  004E                     waitSEG@wt:
   906  004E                     motor@dig2data:	
   907                           ; 2 bytes @ 0xC
   908                           
   909                           
   910                           ; 2 bytes @ 0xC
   911  004E                     	ds	2
   912  0050                     motor@smdata:
   913                           
   914                           ; 2 bytes @ 0xE
   915  0050                     	ds	2
   916  0052                     motor@tr:
   917                           
   918                           ; 2 bytes @ 0x10
   919  0052                     	ds	8
   920  005A                     main@time:
   921                           
   922                           ; 2 bytes @ 0x18
   923  005A                     	ds	2
   924  005C                     main@j:
   925                           
   926                           ; 2 bytes @ 0x1A
   927  005C                     	ds	2
   928  005E                     main@i:
   929                           
   930                           ; 2 bytes @ 0x1C
   931  005E                     	ds	2
   932                           
   933                           	psect	maintext
   934  0570                     __pmaintext:	
   935 ;;
   936 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   937 ;;
   938 ;; *************** function _main *****************
   939 ;; Defined at:
   940 ;;		line 483 in file "Q3.c"
   941 ;; Parameters:    Size  Location     Type
   942 ;;		None
   943 ;; Auto vars:     Size  Location     Type
   944 ;;  i               2   28[BANK0 ] int 
   945 ;;  j               2   26[BANK0 ] int 
   946 ;;  time            2   24[BANK0 ] int 
   947 ;;  n               2    0        int 
   948 ;;  m               2    0        int 
   949 ;;  k               2    0        int 
   950 ;; Return value:  Size  Location     Type
   951 ;;                  1    wreg      void 
   952 ;; Registers used:
   953 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   954 ;; Tracked objects:
   955 ;;		On entry : B1F/0
   956 ;;		On exit  : 0/0
   957 ;;		Unchanged: 0/0
   958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   960 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
   961 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   962 ;;      Totals:         1      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
   963 ;;Total ram usage:       13 bytes
   964 ;; Hardware stack levels required when called:    3
   965 ;; This function calls:
   966 ;;		_bottomTime
   967 ;;		_dynam
   968 ;;		_fclr
   969 ;;		_motor
   970 ;;		_portinit
   971 ;;		_waitSEG
   972 ;;		_zenoff
   973 ;; This function is called by:
   974 ;;		Startup code after reset
   975 ;; This function uses a non-reentrant model
   976 ;;
   977                           
   978                           
   979                           ;psect for function _main
   980  0570                     _main:
   981  0570                     l2221:	
   982                           ;incstack = 0
   983                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   984                           
   985                           
   986                           ;Q3.c: 486:     OSCCON=0x7A;
   987  0570  307A               	movlw	122
   988  0571  0021               	movlb	1	; select bank1
   989  0572  0099               	movwf	25	;volatile
   990  0573                     l2223:
   991                           
   992                           ;Q3.c: 488:     portinit();
   993  0573  3183  2360  3185   	fcall	_portinit
   994                           
   995                           ;Q3.c: 490:     zenoff();
   996  0576  3183  234A  3185   	fcall	_zenoff
   997  0579                     l2225:
   998  0579                     l2227:
   999  0579                     l2229:
  1000  0579                     l2231:
  1001  0579                     l2233:
  1002  0579                     l276:	
  1003                           ;Q3.c: 495:     while((RA0!=1)||(RA1!=1)||(RA2!=1));
  1004                           
  1005  0579  0020               	movlb	0	; select bank0
  1006  057A  1C0C               	btfss	12,0	;volatile
  1007  057B  2D7D               	goto	u1791
  1008  057C  2D7E               	goto	u1790
  1009  057D                     u1791:
  1010  057D  2D79               	goto	l276
  1011  057E                     u1790:
  1012  057E                     l2235:
  1013  057E  1C8C               	btfss	12,1	;volatile
  1014  057F  2D81               	goto	u1801
  1015  0580  2D82               	goto	u1800
  1016  0581                     u1801:
  1017  0581  2D79               	goto	l276
  1018  0582                     u1800:
  1019  0582                     l2237:
  1020  0582  1D0C               	btfss	12,2	;volatile
  1021  0583  2D85               	goto	u1811
  1022  0584  2D86               	goto	u1810
  1023  0585                     u1811:
  1024  0585  2D79               	goto	l276
  1025  0586                     u1810:
  1026  0586                     l278:
  1027                           
  1028                           ;Q3.c: 498:     RC0=RC2=RC1=1;
  1029  0586  148E               	bsf	14,1	;volatile
  1030  0587  188E               	btfsc	14,1	;volatile
  1031  0588  2D8A               	goto	u1821
  1032  0589  2D8D               	goto	u1820
  1033  058A                     u1821:
  1034  058A  0020               	movlb	0	; select bank0
  1035  058B  150E               	bsf	14,2	;volatile
  1036  058C  2D8F               	goto	u1834
  1037  058D                     u1820:
  1038  058D  0020               	movlb	0	; select bank0
  1039  058E  110E               	bcf	14,2	;volatile
  1040  058F                     u1834:
  1041  058F  190E               	btfsc	14,2	;volatile
  1042  0590  2D92               	goto	u1831
  1043  0591  2D95               	goto	u1830
  1044  0592                     u1831:
  1045  0592  0020               	movlb	0	; select bank0
  1046  0593  140E               	bsf	14,0	;volatile
  1047  0594  2D97               	goto	u1844
  1048  0595                     u1830:
  1049  0595  0020               	movlb	0	; select bank0
  1050  0596  100E               	bcf	14,0	;volatile
  1051  0597                     u1844:
  1052  0597                     l2239:
  1053                           
  1054                           ;Q3.c: 501:     fclr(2);
  1055  0597  3002               	movlw	2
  1056  0598  00F0               	movwf	fclr@flg
  1057  0599  3000               	movlw	0
  1058  059A  00F1               	movwf	fclr@flg+1
  1059  059B  3183  2373  3185   	fcall	_fclr
  1060  059E                     l2241:
  1061                           
  1062                           ;Q3.c: 506:         if(RA0 == 0){
  1063  059E  0020               	movlb	0	; select bank0
  1064  059F  180C               	btfsc	12,0	;volatile
  1065  05A0  2DA2               	goto	u1851
  1066  05A1  2DA3               	goto	u1850
  1067  05A2                     u1851:
  1068  05A2  2D9E               	goto	l2241
  1069  05A3                     u1850:
  1070  05A3                     l284:	
  1071                           ;Q3.c: 514:     while(1){
  1072                           
  1073                           
  1074                           ;Q3.c: 517:        if(RA0 == 0){
  1075  05A3  180C               	btfsc	12,0	;volatile
  1076  05A4  2DA6               	goto	u1861
  1077  05A5  2DA7               	goto	u1860
  1078  05A6                     u1861:
  1079  05A6  2DA3               	goto	l284
  1080  05A7                     u1860:
  1081  05A7                     l2245:
  1082                           
  1083                           ;Q3.c: 518:            for(i = 9;i>=0;i--){
  1084  05A7  3009               	movlw	9
  1085  05A8  00DE               	movwf	main@i
  1086  05A9  3000               	movlw	0
  1087  05AA  00DF               	movwf	main@i+1
  1088  05AB                     l2251:
  1089                           
  1090                           ;Q3.c: 520:                waitSEG(num0[i],0,500);
  1091  05AB  355E               	lslf	main@i,w
  1092  05AC  3EC0               	addlw	(low (_num0| 0))& (0+255)
  1093  05AD  0086               	movwf	6
  1094  05AE  0187               	clrf	7
  1095  05AF  3F40               	moviw [0]fsr1
  1096  05B0  00CA               	movwf	waitSEG@seg1
  1097  05B1  3F41               	moviw [1]fsr1
  1098  05B2  00CB               	movwf	waitSEG@seg1+1
  1099  05B3  3000               	movlw	0
  1100  05B4  00CC               	movwf	waitSEG@seg2
  1101  05B5  00CD               	movwf	waitSEG@seg2+1
  1102  05B6  30F4               	movlw	244
  1103  05B7  00CE               	movwf	waitSEG@wt
  1104  05B8  3001               	movlw	1
  1105  05B9  00CF               	movwf	waitSEG@wt+1
  1106  05BA  3183  23E4  3185   	fcall	_waitSEG
  1107                           
  1108                           ;Q3.c: 523:                 while(RA1 == 0){
  1109  05BD  2E57               	goto	l288
  1110  05BE                     l2253:
  1111                           
  1112                           ;Q3.c: 524:                     dynam(num0[i],(0x01|0x02|0x04|0x08|0x10|0x20),0,0);
  1113  05BE  355E               	lslf	main@i,w
  1114  05BF  3EC0               	addlw	(low (_num0| 0))& (0+255)
  1115  05C0  0086               	movwf	6
  1116  05C1  0187               	clrf	7
  1117  05C2  3F40               	moviw [0]fsr1
  1118  05C3  00F0               	movwf	dynam@dig1data
  1119  05C4  3F41               	moviw [1]fsr1
  1120  05C5  00F1               	movwf	dynam@dig1data+1
  1121  05C6  303F               	movlw	63
  1122  05C7  00F2               	movwf	dynam@dig2data
  1123  05C8  3000               	movlw	0
  1124  05C9  00F3               	movwf	dynam@dig2data+1
  1125  05CA  3000               	movlw	0
  1126  05CB  00F4               	movwf	dynam@smdata
  1127  05CC  00F5               	movwf	dynam@smdata+1
  1128  05CD  3000               	movlw	0
  1129  05CE  00F6               	movwf	dynam@tr
  1130  05CF  00F7               	movwf	dynam@tr+1
  1131  05D0  3186  2667  3185   	fcall	_dynam
  1132  05D3                     l2255:
  1133                           
  1134                           ;Q3.c: 525:                     time = bottomTime();
  1135  05D3  3183  23B7  3185   	fcall	_bottomTime
  1136  05D6  087B               	movf	?_bottomTime+1,w
  1137  05D7  0020               	movlb	0	; select bank0
  1138  05D8  00DB               	movwf	main@time+1
  1139  05D9  087A               	movf	?_bottomTime,w
  1140  05DA  00DA               	movwf	main@time
  1141  05DB                     l2257:
  1142                           
  1143                           ;Q3.c: 526:                     fclr(2);
  1144  05DB  3002               	movlw	2
  1145  05DC  00F0               	movwf	fclr@flg
  1146  05DD  3000               	movlw	0
  1147  05DE  00F1               	movwf	fclr@flg+1
  1148  05DF  3183  2373  3185   	fcall	_fclr
  1149  05E2                     l2259:
  1150                           
  1151                           ;Q3.c: 528:                     if(time >= 1000){
  1152  05E2  0020               	movlb	0	; select bank0
  1153  05E3  085B               	movf	main@time+1,w
  1154  05E4  3A80               	xorlw	128
  1155  05E5  00FC               	movwf	??_main
  1156  05E6  3083               	movlw	131
  1157  05E7  027C               	subwf	??_main,w
  1158  05E8  1D03               	skipz
  1159  05E9  2DEC               	goto	u1875
  1160  05EA  30E8               	movlw	232
  1161  05EB  025A               	subwf	main@time,w
  1162  05EC                     u1875:
  1163  05EC  1C03               	skipc
  1164  05ED  2DEF               	goto	u1871
  1165  05EE  2DF0               	goto	u1870
  1166  05EF                     u1871:
  1167  05EF  2E57               	goto	l288
  1168  05F0                     u1870:
  1169  05F0                     l2261:
  1170                           
  1171                           ;Q3.c: 529:                         for(j=0;j<i;j++){
  1172  05F0  0020               	movlb	0	; select bank0
  1173  05F1  01DC               	clrf	main@j
  1174  05F2  01DD               	clrf	main@j+1
  1175  05F3  2E19               	goto	l2267
  1176  05F4                     l2263:
  1177                           
  1178                           ;Q3.c: 531:                             motor(360,num0[i],num0[j],1,1);
  1179  05F4  3068               	movlw	104
  1180  05F5  0020               	movlb	0	; select bank0
  1181  05F6  00CA               	movwf	motor@kakudo
  1182  05F7  3001               	movlw	1
  1183  05F8  00CB               	movwf	motor@kakudo+1
  1184  05F9  355E               	lslf	main@i,w
  1185  05FA  3EC0               	addlw	(low (_num0| 0))& (0+255)
  1186  05FB  0086               	movwf	6
  1187  05FC  0187               	clrf	7
  1188  05FD  3F40               	moviw [0]fsr1
  1189  05FE  00CC               	movwf	motor@dig1data
  1190  05FF  3F41               	moviw [1]fsr1
  1191  0600  00CD               	movwf	motor@dig1data+1
  1192  0601  355C               	lslf	main@j,w
  1193  0602  3EC0               	addlw	(low (_num0| 0))& (0+255)
  1194  0603  0086               	movwf	6
  1195  0604  0187               	clrf	7
  1196  0605  3F40               	moviw [0]fsr1
  1197  0606  00CE               	movwf	motor@dig2data
  1198  0607  3F41               	moviw [1]fsr1
  1199  0608  00CF               	movwf	motor@dig2data+1
  1200  0609  3001               	movlw	1
  1201  060A  00D0               	movwf	motor@smdata
  1202  060B  3000               	movlw	0
  1203  060C  00D1               	movwf	motor@smdata+1
  1204  060D  3001               	movlw	1
  1205  060E  00D2               	movwf	motor@tr
  1206  060F  3000               	movlw	0
  1207  0610  00D3               	movwf	motor@tr+1
  1208  0611  3183  2393  3185   	fcall	_motor
  1209  0614                     l2265:
  1210                           
  1211                           ;Q3.c: 532:                         }
  1212  0614  3001               	movlw	1
  1213  0615  0020               	movlb	0	; select bank0
  1214  0616  07DC               	addwf	main@j,f
  1215  0617  3000               	movlw	0
  1216  0618  3DDD               	addwfc	main@j+1,f
  1217  0619                     l2267:
  1218  0619  085D               	movf	main@j+1,w
  1219  061A  3A80               	xorlw	128
  1220  061B  00FC               	movwf	??_main
  1221  061C  085F               	movf	main@i+1,w
  1222  061D  3A80               	xorlw	128
  1223  061E  027C               	subwf	??_main,w
  1224  061F  1D03               	skipz
  1225  0620  2E23               	goto	u1885
  1226  0621  085E               	movf	main@i,w
  1227  0622  025C               	subwf	main@j,w
  1228  0623                     u1885:
  1229  0623  1C03               	skipc
  1230  0624  2E26               	goto	u1881
  1231  0625  2E27               	goto	u1880
  1232  0626                     u1881:
  1233  0626  2DF4               	goto	l2263
  1234  0627                     u1880:
  1235  0627                     l2269:
  1236                           
  1237                           ;Q3.c: 535:                             waitSEG(num0[i],num0[j],500);
  1238  0627  0020               	movlb	0	; select bank0
  1239  0628  355E               	lslf	main@i,w
  1240  0629  3EC0               	addlw	(low (_num0| 0))& (0+255)
  1241  062A  0086               	movwf	6
  1242  062B  0187               	clrf	7
  1243  062C  3F40               	moviw [0]fsr1
  1244  062D  00CA               	movwf	waitSEG@seg1
  1245  062E  3F41               	moviw [1]fsr1
  1246  062F  00CB               	movwf	waitSEG@seg1+1
  1247  0630  355C               	lslf	main@j,w
  1248  0631  3EC0               	addlw	(low (_num0| 0))& (0+255)
  1249  0632  0086               	movwf	6
  1250  0633  0187               	clrf	7
  1251  0634  3F40               	moviw [0]fsr1
  1252  0635  00CC               	movwf	waitSEG@seg2
  1253  0636  3F41               	moviw [1]fsr1
  1254  0637  00CD               	movwf	waitSEG@seg2+1
  1255  0638  30F4               	movlw	244
  1256  0639  00CE               	movwf	waitSEG@wt
  1257  063A  3001               	movlw	1
  1258  063B  00CF               	movwf	waitSEG@wt+1
  1259  063C  3183  23E4  3185   	fcall	_waitSEG
  1260  063F                     l2271:
  1261                           
  1262                           ;Q3.c: 536:                             waitSEG(0,0,500);
  1263  063F  3000               	movlw	0
  1264  0640  0020               	movlb	0	; select bank0
  1265  0641  00CA               	movwf	waitSEG@seg1
  1266  0642  00CB               	movwf	waitSEG@seg1+1
  1267  0643  3000               	movlw	0
  1268  0644  00CC               	movwf	waitSEG@seg2
  1269  0645  00CD               	movwf	waitSEG@seg2+1
  1270  0646  30F4               	movlw	244
  1271  0647  00CE               	movwf	waitSEG@wt
  1272  0648  3001               	movlw	1
  1273  0649  00CF               	movwf	waitSEG@wt+1
  1274  064A  3183  23E4  3185   	fcall	_waitSEG
  1275  064D                     l2273:
  1276                           
  1277                           ;Q3.c: 537:                             if(RA0 == 1 && RA1 == 1){
  1278  064D  0020               	movlb	0	; select bank0
  1279  064E  1C0C               	btfss	12,0	;volatile
  1280  064F  2E51               	goto	u1891
  1281  0650  2E52               	goto	u1890
  1282  0651                     u1891:
  1283  0651  2E27               	goto	l2269
  1284  0652                     u1890:
  1285  0652                     l2275:
  1286  0652  1C8C               	btfss	12,1	;volatile
  1287  0653  2E55               	goto	u1901
  1288  0654  2E56               	goto	u1900
  1289  0655                     u1901:
  1290  0655  2E27               	goto	l2269
  1291  0656                     u1900:
  1292  0656  2DA3               	goto	l284
  1293  0657                     l288:	
  1294                           ;Q3.c: 546:                 }
  1295                           
  1296                           
  1297                           ;Q3.c: 523:                 while(RA1 == 0){
  1298  0657  0020               	movlb	0	; select bank0
  1299  0658  1C8C               	btfss	12,1	;volatile
  1300  0659  2E5B               	goto	u1911
  1301  065A  2E5C               	goto	u1910
  1302  065B                     u1911:
  1303  065B  2DBE               	goto	l2253
  1304  065C                     u1910:
  1305  065C                     l2279:
  1306                           
  1307                           ;Q3.c: 548:            }
  1308  065C  30FF               	movlw	255
  1309  065D  07DE               	addwf	main@i,f
  1310  065E  30FF               	movlw	255
  1311  065F  3DDF               	addwfc	main@i+1,f
  1312  0660                     l2281:
  1313  0660  1FDF               	btfss	main@i+1,7
  1314  0661  2E63               	goto	u1921
  1315  0662  2E64               	goto	u1920
  1316  0663                     u1921:
  1317  0663  2DAB               	goto	l2251
  1318  0664                     u1920:
  1319  0664  2DA3               	goto	l284
  1320  0665  3180  2802         	ljmp	start
  1321  0667                     __end_of_main:
  1322                           
  1323                           	psect	text1
  1324  034A                     __ptext1:	
  1325 ;; *************** function _zenoff *****************
  1326 ;; Defined at:
  1327 ;;		line 195 in file "Q3.c"
  1328 ;; Parameters:    Size  Location     Type
  1329 ;;		None
  1330 ;; Auto vars:     Size  Location     Type
  1331 ;;		None
  1332 ;; Return value:  Size  Location     Type
  1333 ;;                  1    wreg      void 
  1334 ;; Registers used:
  1335 ;;		status,2
  1336 ;; Tracked objects:
  1337 ;;		On entry : 0/0
  1338 ;;		On exit  : 0/0
  1339 ;;		Unchanged: 0/0
  1340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1345 ;;Total ram usage:        0 bytes
  1346 ;; Hardware stack levels used:    1
  1347 ;; This function calls:
  1348 ;;		Nothing
  1349 ;; This function is called by:
  1350 ;;		_main
  1351 ;; This function uses a non-reentrant model
  1352 ;;
  1353                           
  1354                           
  1355                           ;psect for function _zenoff
  1356  034A                     _zenoff:
  1357  034A                     l1921:	
  1358                           ;incstack = 0
  1359                           ; Regs used in _zenoff: [status,2]
  1360                           
  1361                           
  1362                           ;Q3.c: 197:     RC0=1;
  1363  034A  0020               	movlb	0	; select bank0
  1364  034B  140E               	bsf	14,0	;volatile
  1365                           
  1366                           ;Q3.c: 198:     RC1=1;
  1367  034C  148E               	bsf	14,1	;volatile
  1368                           
  1369                           ;Q3.c: 199:     RC2=1;
  1370  034D  150E               	bsf	14,2	;volatile
  1371  034E                     l1923:
  1372                           
  1373                           ;Q3.c: 200:     PORTB=0x00;
  1374  034E  018D               	clrf	13	;volatile
  1375  034F                     l1925:
  1376                           
  1377                           ;Q3.c: 201:     RC7=0;RC7=1;RC7=0;
  1378  034F  138E               	bcf	14,7	;volatile
  1379  0350                     l1927:
  1380  0350  178E               	bsf	14,7	;volatile
  1381  0351                     l1929:
  1382  0351  138E               	bcf	14,7	;volatile
  1383  0352                     l108:
  1384  0352  0008               	return
  1385  0353                     __end_of_zenoff:
  1386                           
  1387                           	psect	text2
  1388  03E4                     __ptext2:	
  1389 ;; *************** function _waitSEG *****************
  1390 ;; Defined at:
  1391 ;;		line 451 in file "Q3.c"
  1392 ;; Parameters:    Size  Location     Type
  1393 ;;  seg1            2    8[BANK0 ] unsigned short 
  1394 ;;  seg2            2   10[BANK0 ] unsigned short 
  1395 ;;  wt              2   12[BANK0 ] unsigned short 
  1396 ;; Auto vars:     Size  Location     Type
  1397 ;;  i               2    8[COMMON] unsigned int 
  1398 ;; Return value:  Size  Location     Type
  1399 ;;                  1    wreg      void 
  1400 ;; Registers used:
  1401 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1402 ;; Tracked objects:
  1403 ;;		On entry : 0/0
  1404 ;;		On exit  : 0/0
  1405 ;;		Unchanged: 0/0
  1406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1407 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1408 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1410 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1411 ;;Total ram usage:        8 bytes
  1412 ;; Hardware stack levels used:    1
  1413 ;; Hardware stack levels required when called:    1
  1414 ;; This function calls:
  1415 ;;		___lwdiv
  1416 ;;		_dynam
  1417 ;; This function is called by:
  1418 ;;		_main
  1419 ;; This function uses a non-reentrant model
  1420 ;;
  1421                           
  1422                           
  1423                           ;psect for function _waitSEG
  1424  03E4                     _waitSEG:
  1425  03E4                     l1947:	
  1426                           ;incstack = 0
  1427                           ; Regs used in _waitSEG: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1428                           
  1429                           
  1430                           ;Q3.c: 451: void waitSEG(unsigned short seg1,unsigned short seg2,unsigned short wt);Q3.c
      +                          : 452: {;Q3.c: 453:     wt = wt / 10;
  1431  03E4  300A               	movlw	10
  1432  03E5  00F0               	movwf	___lwdiv@divisor
  1433  03E6  3000               	movlw	0
  1434  03E7  00F1               	movwf	___lwdiv@divisor+1
  1435  03E8  0020               	movlb	0	; select bank0
  1436  03E9  084F               	movf	waitSEG@wt+1,w
  1437  03EA  00F3               	movwf	___lwdiv@dividend+1
  1438  03EB  084E               	movf	waitSEG@wt,w
  1439  03EC  00F2               	movwf	___lwdiv@dividend
  1440  03ED  3184  2418  3183   	fcall	___lwdiv
  1441  03F0  0871               	movf	?___lwdiv+1,w
  1442  03F1  0020               	movlb	0	; select bank0
  1443  03F2  00CF               	movwf	waitSEG@wt+1
  1444  03F3  0870               	movf	?___lwdiv,w
  1445  03F4  00CE               	movwf	waitSEG@wt
  1446  03F5                     l1949:
  1447                           
  1448                           ;Q3.c: 454:     unsigned int i;;Q3.c: 455:     for(i=wt;i>0;--i){
  1449  03F5  084F               	movf	waitSEG@wt+1,w
  1450  03F6  00F9               	movwf	waitSEG@i+1
  1451  03F7  084E               	movf	waitSEG@wt,w
  1452  03F8  00F8               	movwf	waitSEG@i
  1453  03F9                     l1951:
  1454  03F9  0878               	movf	waitSEG@i,w
  1455  03FA  0479               	iorwf	waitSEG@i+1,w
  1456  03FB  1D03               	btfss	3,2
  1457  03FC  2BFE               	goto	u1381
  1458  03FD  2BFF               	goto	u1380
  1459  03FE                     u1381:
  1460  03FE  2C00               	goto	l1955
  1461  03FF                     u1380:
  1462  03FF  2C17               	goto	l258
  1463  0400                     l1955:
  1464                           
  1465                           ;Q3.c: 456:         dynam(seg1,seg2,0,0);
  1466  0400  0020               	movlb	0	; select bank0
  1467  0401  084B               	movf	waitSEG@seg1+1,w
  1468  0402  00F1               	movwf	dynam@dig1data+1
  1469  0403  084A               	movf	waitSEG@seg1,w
  1470  0404  00F0               	movwf	dynam@dig1data
  1471  0405  084D               	movf	waitSEG@seg2+1,w
  1472  0406  00F3               	movwf	dynam@dig2data+1
  1473  0407  084C               	movf	waitSEG@seg2,w
  1474  0408  00F2               	movwf	dynam@dig2data
  1475  0409  3000               	movlw	0
  1476  040A  00F4               	movwf	dynam@smdata
  1477  040B  00F5               	movwf	dynam@smdata+1
  1478  040C  3000               	movlw	0
  1479  040D  00F6               	movwf	dynam@tr
  1480  040E  00F7               	movwf	dynam@tr+1
  1481  040F  3186  2667  3183   	fcall	_dynam
  1482  0412                     l1957:
  1483                           
  1484                           ;Q3.c: 457:     }
  1485  0412  3001               	movlw	1
  1486  0413  02F8               	subwf	waitSEG@i,f
  1487  0414  3000               	movlw	0
  1488  0415  3BF9               	subwfb	waitSEG@i+1,f
  1489  0416  2BF9               	goto	l1951
  1490  0417                     l258:
  1491  0417  0008               	return
  1492  0418                     __end_of_waitSEG:
  1493                           
  1494                           	psect	text3
  1495  0418                     __ptext3:	
  1496 ;; *************** function ___lwdiv *****************
  1497 ;; Defined at:
  1498 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\lwdiv.c"
  1499 ;; Parameters:    Size  Location     Type
  1500 ;;  divisor         2    0[COMMON] unsigned int 
  1501 ;;  dividend        2    2[COMMON] unsigned int 
  1502 ;; Auto vars:     Size  Location     Type
  1503 ;;  quotient        2    5[COMMON] unsigned int 
  1504 ;;  counter         1    7[COMMON] unsigned char 
  1505 ;; Return value:  Size  Location     Type
  1506 ;;                  2    0[COMMON] unsigned int 
  1507 ;; Registers used:
  1508 ;;		wreg, status,2, status,0
  1509 ;; Tracked objects:
  1510 ;;		On entry : 0/0
  1511 ;;		On exit  : 0/0
  1512 ;;		Unchanged: 0/0
  1513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1514 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1515 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1516 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1517 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1518 ;;Total ram usage:        8 bytes
  1519 ;; Hardware stack levels used:    1
  1520 ;; This function calls:
  1521 ;;		Nothing
  1522 ;; This function is called by:
  1523 ;;		_waitSEG
  1524 ;; This function uses a non-reentrant model
  1525 ;;
  1526                           
  1527                           
  1528                           ;psect for function ___lwdiv
  1529  0418                     ___lwdiv:
  1530  0418                     l1865:	
  1531                           ;incstack = 0
  1532                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1533                           
  1534  0418  01F5               	clrf	___lwdiv@quotient
  1535  0419  01F6               	clrf	___lwdiv@quotient+1
  1536  041A                     l1867:
  1537  041A  0870               	movf	___lwdiv@divisor,w
  1538  041B  0471               	iorwf	___lwdiv@divisor+1,w
  1539  041C  1903               	btfsc	3,2
  1540  041D  2C1F               	goto	u1291
  1541  041E  2C20               	goto	u1290
  1542  041F                     u1291:
  1543  041F  2C4F               	goto	l1887
  1544  0420                     u1290:
  1545  0420                     l1869:
  1546  0420  01F7               	clrf	___lwdiv@counter
  1547  0421  0AF7               	incf	___lwdiv@counter,f
  1548  0422  2C2C               	goto	l1875
  1549  0423                     l1871:
  1550  0423  3001               	movlw	1
  1551  0424                     u1305:
  1552  0424  35F0               	lslf	___lwdiv@divisor,f
  1553  0425  0DF1               	rlf	___lwdiv@divisor+1,f
  1554  0426  0B89               	decfsz	9,f
  1555  0427  2C24               	goto	u1305
  1556  0428                     l1873:
  1557  0428  3001               	movlw	1
  1558  0429  00F4               	movwf	??___lwdiv
  1559  042A  0874               	movf	??___lwdiv,w
  1560  042B  07F7               	addwf	___lwdiv@counter,f
  1561  042C                     l1875:
  1562  042C  1FF1               	btfss	___lwdiv@divisor+1,7
  1563  042D  2C2F               	goto	u1311
  1564  042E  2C30               	goto	u1310
  1565  042F                     u1311:
  1566  042F  2C23               	goto	l1871
  1567  0430                     u1310:
  1568  0430                     l1877:
  1569  0430  3001               	movlw	1
  1570  0431                     u1325:
  1571  0431  35F5               	lslf	___lwdiv@quotient,f
  1572  0432  0DF6               	rlf	___lwdiv@quotient+1,f
  1573  0433  0B89               	decfsz	9,f
  1574  0434  2C31               	goto	u1325
  1575  0435  0871               	movf	___lwdiv@divisor+1,w
  1576  0436  0273               	subwf	___lwdiv@dividend+1,w
  1577  0437  1D03               	skipz
  1578  0438  2C3B               	goto	u1335
  1579  0439  0870               	movf	___lwdiv@divisor,w
  1580  043A  0272               	subwf	___lwdiv@dividend,w
  1581  043B                     u1335:
  1582  043B  1C03               	skipc
  1583  043C  2C3E               	goto	u1331
  1584  043D  2C3F               	goto	u1330
  1585  043E                     u1331:
  1586  043E  2C44               	goto	l1883
  1587  043F                     u1330:
  1588  043F                     l1879:
  1589  043F  0870               	movf	___lwdiv@divisor,w
  1590  0440  02F2               	subwf	___lwdiv@dividend,f
  1591  0441  0871               	movf	___lwdiv@divisor+1,w
  1592  0442  3BF3               	subwfb	___lwdiv@dividend+1,f
  1593  0443                     l1881:
  1594  0443  1475               	bsf	___lwdiv@quotient,0
  1595  0444                     l1883:
  1596  0444  3001               	movlw	1
  1597  0445                     u1345:
  1598  0445  36F1               	lsrf	___lwdiv@divisor+1,f
  1599  0446  0CF0               	rrf	___lwdiv@divisor,f
  1600  0447  0B89               	decfsz	9,f
  1601  0448  2C45               	goto	u1345
  1602  0449                     l1885:
  1603  0449  3001               	movlw	1
  1604  044A  02F7               	subwf	___lwdiv@counter,f
  1605  044B  1D03               	btfss	3,2
  1606  044C  2C4E               	goto	u1351
  1607  044D  2C4F               	goto	u1350
  1608  044E                     u1351:
  1609  044E  2C30               	goto	l1877
  1610  044F                     u1350:
  1611  044F                     l1887:
  1612  044F  0876               	movf	___lwdiv@quotient+1,w
  1613  0450  00F1               	movwf	?___lwdiv+1
  1614  0451  0875               	movf	___lwdiv@quotient,w
  1615  0452  00F0               	movwf	?___lwdiv
  1616  0453                     l731:
  1617  0453  0008               	return
  1618  0454                     __end_of___lwdiv:
  1619                           
  1620                           	psect	text4
  1621  0360                     __ptext4:	
  1622 ;; *************** function _portinit *****************
  1623 ;; Defined at:
  1624 ;;		line 160 in file "Q3.c"
  1625 ;; Parameters:    Size  Location     Type
  1626 ;;		None
  1627 ;; Auto vars:     Size  Location     Type
  1628 ;;		None
  1629 ;; Return value:  Size  Location     Type
  1630 ;;                  1    wreg      void 
  1631 ;; Registers used:
  1632 ;;		wreg, status,2
  1633 ;; Tracked objects:
  1634 ;;		On entry : 0/0
  1635 ;;		On exit  : 0/0
  1636 ;;		Unchanged: 0/0
  1637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1642 ;;Total ram usage:        0 bytes
  1643 ;; Hardware stack levels used:    1
  1644 ;; This function calls:
  1645 ;;		Nothing
  1646 ;; This function is called by:
  1647 ;;		_main
  1648 ;; This function uses a non-reentrant model
  1649 ;;
  1650                           
  1651                           
  1652                           ;psect for function _portinit
  1653  0360                     _portinit:
  1654  0360                     l1891:	
  1655                           ;incstack = 0
  1656                           ; Regs used in _portinit: [wreg+status,2]
  1657                           
  1658                           
  1659                           ;Q3.c: 163:     ANSELA=0x00;
  1660  0360  0023               	movlb	3	; select bank3
  1661  0361  018C               	clrf	12	;volatile
  1662                           
  1663                           ;Q3.c: 164:     ANSELB=0x00;
  1664  0362  018D               	clrf	13	;volatile
  1665  0363                     l1893:
  1666                           
  1667                           ;Q3.c: 166:     PORTA=0x07;
  1668  0363  3007               	movlw	7
  1669  0364  0020               	movlb	0	; select bank0
  1670  0365  008C               	movwf	12	;volatile
  1671  0366                     l1895:
  1672                           
  1673                           ;Q3.c: 167:     TRISA=0x07;
  1674  0366  3007               	movlw	7
  1675  0367  0021               	movlb	1	; select bank1
  1676  0368  008C               	movwf	12	;volatile
  1677                           
  1678                           ;Q3.c: 168:     PORTB=0x00;
  1679  0369  0020               	movlb	0	; select bank0
  1680  036A  018D               	clrf	13	;volatile
  1681                           
  1682                           ;Q3.c: 169:     TRISB=0x00;
  1683  036B  0021               	movlb	1	; select bank1
  1684  036C  018D               	clrf	13	;volatile
  1685  036D                     l1897:
  1686                           
  1687                           ;Q3.c: 170:     PORTC=0x07;
  1688  036D  3007               	movlw	7
  1689  036E  0020               	movlb	0	; select bank0
  1690  036F  008E               	movwf	14	;volatile
  1691  0370                     l1899:
  1692                           
  1693                           ;Q3.c: 171:     TRISC=0x00;
  1694  0370  0021               	movlb	1	; select bank1
  1695  0371  018E               	clrf	14	;volatile
  1696  0372                     l95:
  1697  0372  0008               	return
  1698  0373                     __end_of_portinit:
  1699                           
  1700                           	psect	text5
  1701  0393                     __ptext5:	
  1702 ;; *************** function _motor *****************
  1703 ;; Defined at:
  1704 ;;		line 460 in file "Q3.c"
  1705 ;; Parameters:    Size  Location     Type
  1706 ;;  kakudo          2    8[BANK0 ] int 
  1707 ;;  dig1data        2   10[BANK0 ] unsigned short 
  1708 ;;  dig2data        2   12[BANK0 ] unsigned short 
  1709 ;;  smdata          2   14[BANK0 ] unsigned short 
  1710 ;;  tr              2   16[BANK0 ] unsigned int 
  1711 ;; Auto vars:     Size  Location     Type
  1712 ;;  i               2    8[COMMON] int 
  1713 ;; Return value:  Size  Location     Type
  1714 ;;                  1    wreg      void 
  1715 ;; Registers used:
  1716 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1717 ;; Tracked objects:
  1718 ;;		On entry : 0/0
  1719 ;;		On exit  : 0/0
  1720 ;;		Unchanged: 0/0
  1721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1722 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1723 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1725 ;;      Totals:         2      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1726 ;;Total ram usage:       12 bytes
  1727 ;; Hardware stack levels used:    1
  1728 ;; Hardware stack levels required when called:    1
  1729 ;; This function calls:
  1730 ;;		_dynam
  1731 ;; This function is called by:
  1732 ;;		_main
  1733 ;; This function uses a non-reentrant model
  1734 ;;
  1735                           
  1736                           
  1737                           ;psect for function _motor
  1738  0393                     _motor:
  1739  0393                     l1961:	
  1740                           ;incstack = 0
  1741                           ; Regs used in _motor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1742                           
  1743                           
  1744                           ;Q3.c: 462:     for(int i = kakudo;i>=0;i--){
  1745  0393  0020               	movlb	0	; select bank0
  1746  0394  084B               	movf	motor@kakudo+1,w
  1747  0395  00F9               	movwf	motor@i+1
  1748  0396  084A               	movf	motor@kakudo,w
  1749  0397  00F8               	movwf	motor@i
  1750  0398                     l1963:
  1751  0398  1FF9               	btfss	motor@i+1,7
  1752  0399  2B9B               	goto	u1391
  1753  039A  2B9C               	goto	u1390
  1754  039B                     u1391:
  1755  039B  2B9D               	goto	l1967
  1756  039C                     u1390:
  1757  039C  2BB6               	goto	l263
  1758  039D                     l1967:
  1759                           
  1760                           ;Q3.c: 463:         dynam(dig1data,dig2data,smdata,tr);
  1761  039D  0020               	movlb	0	; select bank0
  1762  039E  084D               	movf	motor@dig1data+1,w
  1763  039F  00F1               	movwf	dynam@dig1data+1
  1764  03A0  084C               	movf	motor@dig1data,w
  1765  03A1  00F0               	movwf	dynam@dig1data
  1766  03A2  084F               	movf	motor@dig2data+1,w
  1767  03A3  00F3               	movwf	dynam@dig2data+1
  1768  03A4  084E               	movf	motor@dig2data,w
  1769  03A5  00F2               	movwf	dynam@dig2data
  1770  03A6  0851               	movf	motor@smdata+1,w
  1771  03A7  00F5               	movwf	dynam@smdata+1
  1772  03A8  0850               	movf	motor@smdata,w
  1773  03A9  00F4               	movwf	dynam@smdata
  1774  03AA  0853               	movf	motor@tr+1,w
  1775  03AB  00F7               	movwf	dynam@tr+1
  1776  03AC  0852               	movf	motor@tr,w
  1777  03AD  00F6               	movwf	dynam@tr
  1778  03AE  3186  2667  3183   	fcall	_dynam
  1779  03B1                     l1969:
  1780                           
  1781                           ;Q3.c: 464:     }
  1782  03B1  30FF               	movlw	255
  1783  03B2  07F8               	addwf	motor@i,f
  1784  03B3  30FF               	movlw	255
  1785  03B4  3DF9               	addwfc	motor@i+1,f
  1786  03B5  2B98               	goto	l1963
  1787  03B6                     l263:
  1788  03B6  0008               	return
  1789  03B7                     __end_of_motor:
  1790                           
  1791                           	psect	text6
  1792  0667                     __ptext6:	
  1793 ;; *************** function _dynam *****************
  1794 ;; Defined at:
  1795 ;;		line 206 in file "Q3.c"
  1796 ;; Parameters:    Size  Location     Type
  1797 ;;  dig1data        2    0[COMMON] unsigned short 
  1798 ;;  dig2data        2    2[COMMON] unsigned short 
  1799 ;;  smdata          2    4[COMMON] unsigned short 
  1800 ;;  tr              2    6[COMMON] unsigned int 
  1801 ;; Auto vars:     Size  Location     Type
  1802 ;;  ext             2    6[BANK0 ] unsigned short 
  1803 ;;  j               2    4[BANK0 ] unsigned int 
  1804 ;;  tm              2    2[BANK0 ] unsigned int 
  1805 ;;  smd             2    0[BANK0 ] unsigned short 
  1806 ;; Return value:  Size  Location     Type
  1807 ;;                  1    wreg      void 
  1808 ;; Registers used:
  1809 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1810 ;; Tracked objects:
  1811 ;;		On entry : 0/0
  1812 ;;		On exit  : 0/0
  1813 ;;		Unchanged: 0/0
  1814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1815 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1816 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1818 ;;      Totals:         8       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1819 ;;Total ram usage:       16 bytes
  1820 ;; Hardware stack levels used:    1
  1821 ;; This function calls:
  1822 ;;		Nothing
  1823 ;; This function is called by:
  1824 ;;		_waitSEG
  1825 ;;		_motor
  1826 ;;		_main
  1827 ;;		_clear
  1828 ;; This function uses a non-reentrant model
  1829 ;;
  1830                           
  1831                           
  1832                           ;psect for function _dynam
  1833  0667                     _dynam:
  1834  0667                     l1669:	
  1835                           ;incstack = 0
  1836                           ; Regs used in _dynam: [wreg-fsr0h+status,2+status,0]
  1837                           
  1838  0667  0020               	movlb	0	; select bank0
  1839  0668  01C4               	clrf	dynam@tm
  1840  0669  01C5               	clrf	dynam@tm+1
  1841                           
  1842                           ;Q3.c: 209:     unsigned short ext=0,smd=0;
  1843  066A  01C8               	clrf	dynam@ext
  1844  066B  01C9               	clrf	dynam@ext+1
  1845  066C  01C2               	clrf	dynam@smd
  1846  066D  01C3               	clrf	dynam@smd+1
  1847  066E                     l1671:
  1848                           
  1849                           ;Q3.c: 210:     RC7=0;
  1850  066E  138E               	bcf	14,7	;volatile
  1851  066F                     l1673:
  1852                           
  1853                           ;Q3.c: 211:     PORTB=dig1data;
  1854  066F  0870               	movf	dynam@dig1data,w
  1855  0670  008D               	movwf	13	;volatile
  1856  0671                     l1675:
  1857                           
  1858                           ;Q3.c: 212:     RC5=0;RC6=1;
  1859  0671  128E               	bcf	14,5	;volatile
  1860  0672                     l1677:
  1861  0672  170E               	bsf	14,6	;volatile
  1862  0673                     l1679:
  1863                           
  1864                           ;Q3.c: 213:     if(tr==5){tm=4000;}
  1865  0673  3005               	movlw	5
  1866  0674  0676               	xorwf	dynam@tr,w
  1867  0675  0477               	iorwf	dynam@tr+1,w
  1868  0676  1D03               	btfss	3,2
  1869  0677  2E79               	goto	u1011
  1870  0678  2E7A               	goto	u1010
  1871  0679                     u1011:
  1872  0679  2E7F               	goto	l1683
  1873  067A                     u1010:
  1874  067A                     l1681:
  1875  067A  30A0               	movlw	160
  1876  067B  00C4               	movwf	dynam@tm
  1877  067C  300F               	movlw	15
  1878  067D  00C5               	movwf	dynam@tm+1
  1879  067E  2E83               	goto	l112
  1880  067F                     l1683:
  1881  067F  30D0               	movlw	208
  1882  0680  00C4               	movwf	dynam@tm
  1883  0681  3007               	movlw	7
  1884  0682  00C5               	movwf	dynam@tm+1
  1885  0683                     l112:
  1886                           
  1887                           ;Q3.c: 215:     for(j=tm;j>0;--j);
  1888  0683  0845               	movf	dynam@tm+1,w
  1889  0684  00C7               	movwf	dynam@j+1
  1890  0685  0844               	movf	dynam@tm,w
  1891  0686  00C6               	movwf	dynam@j
  1892  0687                     l1685:
  1893  0687  0846               	movf	dynam@j,w
  1894  0688  0447               	iorwf	dynam@j+1,w
  1895  0689  1D03               	btfss	3,2
  1896  068A  2E8C               	goto	u1021
  1897  068B  2E8D               	goto	u1020
  1898  068C                     u1021:
  1899  068C  2E8E               	goto	l1689
  1900  068D                     u1020:
  1901  068D  2E93               	goto	l114
  1902  068E                     l1689:
  1903  068E  3001               	movlw	1
  1904  068F  02C6               	subwf	dynam@j,f
  1905  0690  3000               	movlw	0
  1906  0691  3BC7               	subwfb	dynam@j+1,f
  1907  0692  2E87               	goto	l1685
  1908  0693                     l114:
  1909                           
  1910                           ;Q3.c: 216:     RC5=0;RC6=0;
  1911  0693  128E               	bcf	14,5	;volatile
  1912  0694  130E               	bcf	14,6	;volatile
  1913  0695                     l1693:
  1914                           
  1915                           ;Q3.c: 217:     PORTB=dig2data;
  1916  0695  0872               	movf	dynam@dig2data,w
  1917  0696  008D               	movwf	13	;volatile
  1918  0697                     l1695:
  1919                           
  1920                           ;Q3.c: 218:     RC6=0;RC5=1;
  1921  0697  130E               	bcf	14,6	;volatile
  1922  0698                     l1697:
  1923  0698  168E               	bsf	14,5	;volatile
  1924  0699                     l1699:
  1925                           
  1926                           ;Q3.c: 219:     if(tr==5){tm=4000;}
  1927  0699  3005               	movlw	5
  1928  069A  0676               	xorwf	dynam@tr,w
  1929  069B  0477               	iorwf	dynam@tr+1,w
  1930  069C  1D03               	btfss	3,2
  1931  069D  2E9F               	goto	u1031
  1932  069E  2EA0               	goto	u1030
  1933  069F                     u1031:
  1934  069F  2EA5               	goto	l1703
  1935  06A0                     u1030:
  1936  06A0                     l1701:
  1937  06A0  30A0               	movlw	160
  1938  06A1  00C4               	movwf	dynam@tm
  1939  06A2  300F               	movlw	15
  1940  06A3  00C5               	movwf	dynam@tm+1
  1941  06A4  2EA9               	goto	l116
  1942  06A5                     l1703:
  1943  06A5  30D0               	movlw	208
  1944  06A6  00C4               	movwf	dynam@tm
  1945  06A7  3007               	movlw	7
  1946  06A8  00C5               	movwf	dynam@tm+1
  1947  06A9                     l116:
  1948                           
  1949                           ;Q3.c: 221:     for(j=tm;j>0;--j);
  1950  06A9  0845               	movf	dynam@tm+1,w
  1951  06AA  00C7               	movwf	dynam@j+1
  1952  06AB  0844               	movf	dynam@tm,w
  1953  06AC  00C6               	movwf	dynam@j
  1954  06AD                     l1705:
  1955  06AD  0846               	movf	dynam@j,w
  1956  06AE  0447               	iorwf	dynam@j+1,w
  1957  06AF  1D03               	btfss	3,2
  1958  06B0  2EB2               	goto	u1041
  1959  06B1  2EB3               	goto	u1040
  1960  06B2                     u1041:
  1961  06B2  2EB4               	goto	l1709
  1962  06B3                     u1040:
  1963  06B3  2EB9               	goto	l118
  1964  06B4                     l1709:
  1965  06B4  3001               	movlw	1
  1966  06B5  02C6               	subwf	dynam@j,f
  1967  06B6  3000               	movlw	0
  1968  06B7  3BC7               	subwfb	dynam@j+1,f
  1969  06B8  2EAD               	goto	l1705
  1970  06B9                     l118:
  1971                           
  1972                           ;Q3.c: 222:     RC5=0;RC6=0;
  1973  06B9  128E               	bcf	14,5	;volatile
  1974  06BA  130E               	bcf	14,6	;volatile
  1975                           
  1976                           ;Q3.c: 223:     switch(smdata){
  1977  06BB  2FC0               	goto	l1819
  1978  06BC                     l1713:
  1979                           
  1980                           ;Q3.c: 225:                 PORTB=0x00;smd=(0x01|0x02|0x04|0x08|0x10|0x20);
  1981  06BC  018D               	clrf	13	;volatile
  1982  06BD                     l1715:
  1983  06BD                     l1717:
  1984                           
  1985                           ;Q3.c: 226:                 RC7=0;RC7=1;RC7=0;
  1986  06BD  138E               	bcf	14,7	;volatile
  1987  06BE                     l1719:
  1988  06BE  178E               	bsf	14,7	;volatile
  1989  06BF                     l1721:
  1990  06BF  138E               	bcf	14,7	;volatile
  1991                           
  1992                           ;Q3.c: 227:                 break;
  1993  06C0  2FD0               	goto	l135
  1994  06C1                     l1723:
  1995                           
  1996                           ;Q3.c: 229:                 if(flg==1)cw=0;flg=0;
  1997  06C1  0336               	decf	_flg,w
  1998  06C2  0437               	iorwf	_flg+1,w
  1999  06C3  1D03               	btfss	3,2
  2000  06C4  2EC6               	goto	u1051
  2001  06C5  2EC7               	goto	u1050
  2002  06C6                     u1051:
  2003  06C6  2EC9               	goto	l123
  2004  06C7                     u1050:
  2005  06C7                     l1725:
  2006  06C7  01B4               	clrf	_cw
  2007  06C8  01B5               	clrf	_cw+1
  2008  06C9                     l123:
  2009  06C9  01B6               	clrf	_flg
  2010  06CA  01B7               	clrf	_flg+1
  2011  06CB                     l1727:
  2012                           
  2013                           ;Q3.c: 230:                 if((cw==0)&&(ext==0)){cw=1;ccw=0;ext=1;PORTB=smd=0x09;}
  2014  06CB  0834               	movf	_cw,w
  2015  06CC  0435               	iorwf	_cw+1,w
  2016  06CD  1D03               	btfss	3,2
  2017  06CE  2ED0               	goto	u1061
  2018  06CF  2ED1               	goto	u1060
  2019  06D0                     u1061:
  2020  06D0  2EE7               	goto	l1739
  2021  06D1                     u1060:
  2022  06D1                     l1729:
  2023  06D1  0848               	movf	dynam@ext,w
  2024  06D2  0449               	iorwf	dynam@ext+1,w
  2025  06D3  1D03               	btfss	3,2
  2026  06D4  2ED6               	goto	u1071
  2027  06D5  2ED7               	goto	u1070
  2028  06D6                     u1071:
  2029  06D6  2EE7               	goto	l1739
  2030  06D7                     u1070:
  2031  06D7                     l1731:
  2032  06D7  3001               	movlw	1
  2033  06D8  00B4               	movwf	_cw
  2034  06D9  3000               	movlw	0
  2035  06DA  00B5               	movwf	_cw+1
  2036  06DB                     l1733:
  2037  06DB  01B2               	clrf	_ccw
  2038  06DC  01B3               	clrf	_ccw+1
  2039  06DD                     l1735:
  2040  06DD  3001               	movlw	1
  2041  06DE  00C8               	movwf	dynam@ext
  2042  06DF  3000               	movlw	0
  2043  06E0  00C9               	movwf	dynam@ext+1
  2044  06E1                     l1737:
  2045  06E1  3009               	movlw	9
  2046  06E2  00C2               	movwf	dynam@smd
  2047  06E3  3000               	movlw	0
  2048  06E4  00C3               	movwf	dynam@smd+1
  2049  06E5  0842               	movf	dynam@smd,w
  2050  06E6  008D               	movwf	13	;volatile
  2051  06E7                     l1739:
  2052                           
  2053                           ;Q3.c: 231:                 if((cw==1)&&(ext==0)){cw=2;ccw=3;ext=1;PORTB=smd=0x0C;}
  2054  06E7  0334               	decf	_cw,w
  2055  06E8  0435               	iorwf	_cw+1,w
  2056  06E9  1D03               	btfss	3,2
  2057  06EA  2EEC               	goto	u1081
  2058  06EB  2EED               	goto	u1080
  2059  06EC                     u1081:
  2060  06EC  2F05               	goto	l1745
  2061  06ED                     u1080:
  2062  06ED                     l1741:
  2063  06ED  0848               	movf	dynam@ext,w
  2064  06EE  0449               	iorwf	dynam@ext+1,w
  2065  06EF  1D03               	btfss	3,2
  2066  06F0  2EF2               	goto	u1091
  2067  06F1  2EF3               	goto	u1090
  2068  06F2                     u1091:
  2069  06F2  2F05               	goto	l1745
  2070  06F3                     u1090:
  2071  06F3                     l1743:
  2072  06F3  3002               	movlw	2
  2073  06F4  00B4               	movwf	_cw
  2074  06F5  3000               	movlw	0
  2075  06F6  00B5               	movwf	_cw+1
  2076  06F7  3003               	movlw	3
  2077  06F8  00B2               	movwf	_ccw
  2078  06F9  3000               	movlw	0
  2079  06FA  00B3               	movwf	_ccw+1
  2080  06FB  3001               	movlw	1
  2081  06FC  00C8               	movwf	dynam@ext
  2082  06FD  3000               	movlw	0
  2083  06FE  00C9               	movwf	dynam@ext+1
  2084  06FF  300C               	movlw	12
  2085  0700  00C2               	movwf	dynam@smd
  2086  0701  3000               	movlw	0
  2087  0702  00C3               	movwf	dynam@smd+1
  2088  0703  0842               	movf	dynam@smd,w
  2089  0704  008D               	movwf	13	;volatile
  2090  0705                     l1745:
  2091                           
  2092                           ;Q3.c: 232:                 if((cw==2)&&(ext==0)){cw=3;ccw=2;ext=1;PORTB=smd=0x06;}
  2093  0705  3002               	movlw	2
  2094  0706  0634               	xorwf	_cw,w
  2095  0707  0435               	iorwf	_cw+1,w
  2096  0708  1D03               	btfss	3,2
  2097  0709  2F0B               	goto	u1101
  2098  070A  2F0C               	goto	u1100
  2099  070B                     u1101:
  2100  070B  2F24               	goto	l1751
  2101  070C                     u1100:
  2102  070C                     l1747:
  2103  070C  0848               	movf	dynam@ext,w
  2104  070D  0449               	iorwf	dynam@ext+1,w
  2105  070E  1D03               	btfss	3,2
  2106  070F  2F11               	goto	u1111
  2107  0710  2F12               	goto	u1110
  2108  0711                     u1111:
  2109  0711  2F24               	goto	l1751
  2110  0712                     u1110:
  2111  0712                     l1749:
  2112  0712  3003               	movlw	3
  2113  0713  00B4               	movwf	_cw
  2114  0714  3000               	movlw	0
  2115  0715  00B5               	movwf	_cw+1
  2116  0716  3002               	movlw	2
  2117  0717  00B2               	movwf	_ccw
  2118  0718  3000               	movlw	0
  2119  0719  00B3               	movwf	_ccw+1
  2120  071A  3001               	movlw	1
  2121  071B  00C8               	movwf	dynam@ext
  2122  071C  3000               	movlw	0
  2123  071D  00C9               	movwf	dynam@ext+1
  2124  071E  3006               	movlw	6
  2125  071F  00C2               	movwf	dynam@smd
  2126  0720  3000               	movlw	0
  2127  0721  00C3               	movwf	dynam@smd+1
  2128  0722  0842               	movf	dynam@smd,w
  2129  0723  008D               	movwf	13	;volatile
  2130  0724                     l1751:
  2131                           
  2132                           ;Q3.c: 233:                 if((cw==3)&&(ext==0)){cw=0;ccw=1;ext=1;PORTB=smd=0x03;}
  2133  0724  3003               	movlw	3
  2134  0725  0634               	xorwf	_cw,w
  2135  0726  0435               	iorwf	_cw+1,w
  2136  0727  1D03               	btfss	3,2
  2137  0728  2F2A               	goto	u1121
  2138  0729  2F2B               	goto	u1120
  2139  072A                     u1121:
  2140  072A  2EBD               	goto	l1717
  2141  072B                     u1120:
  2142  072B                     l1753:
  2143  072B  0848               	movf	dynam@ext,w
  2144  072C  0449               	iorwf	dynam@ext+1,w
  2145  072D  1D03               	btfss	3,2
  2146  072E  2F30               	goto	u1131
  2147  072F  2F31               	goto	u1130
  2148  0730                     u1131:
  2149  0730  2EBD               	goto	l1717
  2150  0731                     u1130:
  2151  0731                     l1755:
  2152  0731  01B4               	clrf	_cw
  2153  0732  01B5               	clrf	_cw+1
  2154  0733                     l1757:
  2155  0733  3001               	movlw	1
  2156  0734  00B2               	movwf	_ccw
  2157  0735  3000               	movlw	0
  2158  0736  00B3               	movwf	_ccw+1
  2159  0737                     l1759:
  2160  0737                     l1761:
  2161  0737  3003               	movlw	3
  2162  0738  00C2               	movwf	dynam@smd
  2163  0739  3000               	movlw	0
  2164  073A  00C3               	movwf	dynam@smd+1
  2165  073B  0842               	movf	dynam@smd,w
  2166  073C  008D               	movwf	13	;volatile
  2167  073D  2EBD               	goto	l1717
  2168  073E                     l1769:
  2169                           
  2170                           ;Q3.c: 237:                 if(flg==1)ccw=0;flg=0;
  2171  073E  0336               	decf	_flg,w
  2172  073F  0437               	iorwf	_flg+1,w
  2173  0740  1D03               	btfss	3,2
  2174  0741  2F43               	goto	u1141
  2175  0742  2F44               	goto	u1140
  2176  0743                     u1141:
  2177  0743  2F46               	goto	l129
  2178  0744                     u1140:
  2179  0744                     l1771:
  2180  0744  01B2               	clrf	_ccw
  2181  0745  01B3               	clrf	_ccw+1
  2182  0746                     l129:
  2183  0746  01B6               	clrf	_flg
  2184  0747  01B7               	clrf	_flg+1
  2185  0748                     l1773:
  2186                           
  2187                           ;Q3.c: 238:                 if((ccw==0)&&(ext==0)){ccw=1;cw=0;ext=1;PORTB=smd=0x03;}
  2188  0748  0832               	movf	_ccw,w
  2189  0749  0433               	iorwf	_ccw+1,w
  2190  074A  1D03               	btfss	3,2
  2191  074B  2F4D               	goto	u1151
  2192  074C  2F4E               	goto	u1150
  2193  074D                     u1151:
  2194  074D  2F64               	goto	l1785
  2195  074E                     u1150:
  2196  074E                     l1775:
  2197  074E  0848               	movf	dynam@ext,w
  2198  074F  0449               	iorwf	dynam@ext+1,w
  2199  0750  1D03               	btfss	3,2
  2200  0751  2F53               	goto	u1161
  2201  0752  2F54               	goto	u1160
  2202  0753                     u1161:
  2203  0753  2F64               	goto	l1785
  2204  0754                     u1160:
  2205  0754                     l1777:
  2206  0754  3001               	movlw	1
  2207  0755  00B2               	movwf	_ccw
  2208  0756  3000               	movlw	0
  2209  0757  00B3               	movwf	_ccw+1
  2210  0758                     l1779:
  2211  0758  01B4               	clrf	_cw
  2212  0759  01B5               	clrf	_cw+1
  2213  075A                     l1781:
  2214  075A  3001               	movlw	1
  2215  075B  00C8               	movwf	dynam@ext
  2216  075C  3000               	movlw	0
  2217  075D  00C9               	movwf	dynam@ext+1
  2218  075E                     l1783:
  2219  075E  3003               	movlw	3
  2220  075F  00C2               	movwf	dynam@smd
  2221  0760  3000               	movlw	0
  2222  0761  00C3               	movwf	dynam@smd+1
  2223  0762  0842               	movf	dynam@smd,w
  2224  0763  008D               	movwf	13	;volatile
  2225  0764                     l1785:
  2226                           
  2227                           ;Q3.c: 239:                 if((ccw==1)&&(ext==0)){ccw=2;cw=3;ext=1;PORTB=smd=0x06;}
  2228  0764  0332               	decf	_ccw,w
  2229  0765  0433               	iorwf	_ccw+1,w
  2230  0766  1D03               	btfss	3,2
  2231  0767  2F69               	goto	u1171
  2232  0768  2F6A               	goto	u1170
  2233  0769                     u1171:
  2234  0769  2F82               	goto	l1791
  2235  076A                     u1170:
  2236  076A                     l1787:
  2237  076A  0848               	movf	dynam@ext,w
  2238  076B  0449               	iorwf	dynam@ext+1,w
  2239  076C  1D03               	btfss	3,2
  2240  076D  2F6F               	goto	u1181
  2241  076E  2F70               	goto	u1180
  2242  076F                     u1181:
  2243  076F  2F82               	goto	l1791
  2244  0770                     u1180:
  2245  0770                     l1789:
  2246  0770  3002               	movlw	2
  2247  0771  00B2               	movwf	_ccw
  2248  0772  3000               	movlw	0
  2249  0773  00B3               	movwf	_ccw+1
  2250  0774  3003               	movlw	3
  2251  0775  00B4               	movwf	_cw
  2252  0776  3000               	movlw	0
  2253  0777  00B5               	movwf	_cw+1
  2254  0778  3001               	movlw	1
  2255  0779  00C8               	movwf	dynam@ext
  2256  077A  3000               	movlw	0
  2257  077B  00C9               	movwf	dynam@ext+1
  2258  077C  3006               	movlw	6
  2259  077D  00C2               	movwf	dynam@smd
  2260  077E  3000               	movlw	0
  2261  077F  00C3               	movwf	dynam@smd+1
  2262  0780  0842               	movf	dynam@smd,w
  2263  0781  008D               	movwf	13	;volatile
  2264  0782                     l1791:
  2265                           
  2266                           ;Q3.c: 240:                 if((ccw==2)&&(ext==0)){ccw=3;cw=2;ext=1;PORTB=smd=0x0C;}
  2267  0782  3002               	movlw	2
  2268  0783  0632               	xorwf	_ccw,w
  2269  0784  0433               	iorwf	_ccw+1,w
  2270  0785  1D03               	btfss	3,2
  2271  0786  2F88               	goto	u1191
  2272  0787  2F89               	goto	u1190
  2273  0788                     u1191:
  2274  0788  2FA1               	goto	l1797
  2275  0789                     u1190:
  2276  0789                     l1793:
  2277  0789  0848               	movf	dynam@ext,w
  2278  078A  0449               	iorwf	dynam@ext+1,w
  2279  078B  1D03               	btfss	3,2
  2280  078C  2F8E               	goto	u1201
  2281  078D  2F8F               	goto	u1200
  2282  078E                     u1201:
  2283  078E  2FA1               	goto	l1797
  2284  078F                     u1200:
  2285  078F                     l1795:
  2286  078F  3003               	movlw	3
  2287  0790  00B2               	movwf	_ccw
  2288  0791  3000               	movlw	0
  2289  0792  00B3               	movwf	_ccw+1
  2290  0793  3002               	movlw	2
  2291  0794  00B4               	movwf	_cw
  2292  0795  3000               	movlw	0
  2293  0796  00B5               	movwf	_cw+1
  2294  0797  3001               	movlw	1
  2295  0798  00C8               	movwf	dynam@ext
  2296  0799  3000               	movlw	0
  2297  079A  00C9               	movwf	dynam@ext+1
  2298  079B  300C               	movlw	12
  2299  079C  00C2               	movwf	dynam@smd
  2300  079D  3000               	movlw	0
  2301  079E  00C3               	movwf	dynam@smd+1
  2302  079F  0842               	movf	dynam@smd,w
  2303  07A0  008D               	movwf	13	;volatile
  2304  07A1                     l1797:
  2305                           
  2306                           ;Q3.c: 241:                 if((ccw==3)&&(ext==0)){ccw=0;cw=1;ext=1;PORTB=smd=0x09;}
  2307  07A1  3003               	movlw	3
  2308  07A2  0632               	xorwf	_ccw,w
  2309  07A3  0433               	iorwf	_ccw+1,w
  2310  07A4  1D03               	btfss	3,2
  2311  07A5  2FA7               	goto	u1211
  2312  07A6  2FA8               	goto	u1210
  2313  07A7                     u1211:
  2314  07A7  2EBD               	goto	l1717
  2315  07A8                     u1210:
  2316  07A8                     l1799:
  2317  07A8  0848               	movf	dynam@ext,w
  2318  07A9  0449               	iorwf	dynam@ext+1,w
  2319  07AA  1D03               	btfss	3,2
  2320  07AB  2FAD               	goto	u1221
  2321  07AC  2FAE               	goto	u1220
  2322  07AD                     u1221:
  2323  07AD  2EBD               	goto	l1717
  2324  07AE                     u1220:
  2325  07AE                     l1801:
  2326  07AE  01B2               	clrf	_ccw
  2327  07AF  01B3               	clrf	_ccw+1
  2328  07B0                     l1803:
  2329  07B0  3001               	movlw	1
  2330  07B1  00B4               	movwf	_cw
  2331  07B2  3000               	movlw	0
  2332  07B3  00B5               	movwf	_cw+1
  2333  07B4                     l1805:
  2334  07B4                     l1807:
  2335  07B4  3009               	movlw	9
  2336  07B5  00C2               	movwf	dynam@smd
  2337  07B6  3000               	movlw	0
  2338  07B7  00C3               	movwf	dynam@smd+1
  2339  07B8  0842               	movf	dynam@smd,w
  2340  07B9  008D               	movwf	13	;volatile
  2341  07BA  2EBD               	goto	l1717
  2342  07BB                     l1815:
  2343                           
  2344                           ;Q3.c: 245:                 cw=ccw=0;
  2345  07BB  01B2               	clrf	_ccw
  2346  07BC  01B3               	clrf	_ccw+1
  2347  07BD  01B4               	clrf	_cw
  2348  07BE  01B5               	clrf	_cw+1
  2349                           
  2350                           ;Q3.c: 246:                 break;
  2351  07BF  2FD0               	goto	l135
  2352  07C0                     l1819:
  2353                           
  2354                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2355                           ; Switch size 1, requested type "simple"
  2356                           ; Number of cases is 1, Range of values is 0 to 0
  2357                           ; switch strategies available:
  2358                           ; Name         Instructions Cycles
  2359                           ; simple_byte            4     3 (average)
  2360                           ; direct_byte            8     6 (fixed)
  2361                           ; jumptable            260     6 (fixed)
  2362                           ;	Chosen strategy is simple_byte
  2363  07C0  0875               	movf	dynam@smdata+1,w
  2364  07C1  3A00               	xorlw	0	; case 0
  2365  07C2  1903               	skipnz
  2366  07C3  2FC5               	goto	l2439
  2367  07C4  2FBB               	goto	l1815
  2368  07C5                     l2439:
  2369                           
  2370                           ; Switch size 1, requested type "simple"
  2371                           ; Number of cases is 3, Range of values is 0 to 2
  2372                           ; switch strategies available:
  2373                           ; Name         Instructions Cycles
  2374                           ; simple_byte           10     6 (average)
  2375                           ; direct_byte           12     6 (fixed)
  2376                           ; jumptable            260     6 (fixed)
  2377                           ;	Chosen strategy is simple_byte
  2378  07C5  0874               	movf	dynam@smdata,w
  2379  07C6  3A00               	xorlw	0	; case 0
  2380  07C7  1903               	skipnz
  2381  07C8  2EBC               	goto	l1713
  2382  07C9  3A01               	xorlw	1	; case 1
  2383  07CA  1903               	skipnz
  2384  07CB  2EC1               	goto	l1723
  2385  07CC  3A03               	xorlw	3	; case 2
  2386  07CD  1903               	skipnz
  2387  07CE  2F3E               	goto	l1769
  2388  07CF  2FBB               	goto	l1815
  2389  07D0                     l135:
  2390  07D0  0008               	return
  2391  07D1                     __end_of_dynam:
  2392                           
  2393                           	psect	text7
  2394  0373                     __ptext7:	
  2395 ;; *************** function _fclr *****************
  2396 ;; Defined at:
  2397 ;;		line 369 in file "Q3.c"
  2398 ;; Parameters:    Size  Location     Type
  2399 ;;  flg             2    0[COMMON] unsigned short 
  2400 ;; Auto vars:     Size  Location     Type
  2401 ;;		None
  2402 ;; Return value:  Size  Location     Type
  2403 ;;                  1    wreg      void 
  2404 ;; Registers used:
  2405 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2406 ;; Tracked objects:
  2407 ;;		On entry : 0/0
  2408 ;;		On exit  : 0/0
  2409 ;;		Unchanged: 0/0
  2410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2411 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2414 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2415 ;;Total ram usage:        2 bytes
  2416 ;; Hardware stack levels used:    1
  2417 ;; This function calls:
  2418 ;;		Nothing
  2419 ;; This function is called by:
  2420 ;;		_main
  2421 ;;		_kaisu
  2422 ;; This function uses a non-reentrant model
  2423 ;;
  2424                           
  2425                           
  2426                           ;psect for function _fclr
  2427  0373                     _fclr:
  2428  0373                     l1931:	
  2429                           ;incstack = 0
  2430                           ; Regs used in _fclr: [wreg-fsr0h+status,2+status,0]
  2431                           
  2432                           
  2433                           ;Q3.c: 369: void fclr(unsigned short flg);Q3.c: 370: {;Q3.c: 371:     switch(flg){
  2434  0373  2B82               	goto	l1941
  2435  0374                     l1933:
  2436                           
  2437                           ;Q3.c: 373:                     flag_R=0;
  2438  0374  0020               	movlb	0	; select bank0
  2439  0375  01BA               	clrf	_flag_R
  2440  0376  01BB               	clrf	_flag_R+1
  2441                           
  2442                           ;Q3.c: 374:                     break;
  2443  0377  2B92               	goto	l217
  2444  0378                     l1935:
  2445                           
  2446                           ;Q3.c: 376:                     flag_P=0;
  2447  0378  0020               	movlb	0	; select bank0
  2448  0379  01B8               	clrf	_flag_P
  2449  037A  01B9               	clrf	_flag_P+1
  2450                           
  2451                           ;Q3.c: 377:                     break;
  2452  037B  2B92               	goto	l217
  2453  037C                     l1937:
  2454                           
  2455                           ;Q3.c: 379:                     flag_P=flag_R=0;
  2456  037C  0020               	movlb	0	; select bank0
  2457  037D  01BA               	clrf	_flag_R
  2458  037E  01BB               	clrf	_flag_R+1
  2459  037F  01B8               	clrf	_flag_P
  2460  0380  01B9               	clrf	_flag_P+1
  2461                           
  2462                           ;Q3.c: 380:                     break;
  2463  0381  2B92               	goto	l217
  2464  0382                     l1941:
  2465                           
  2466                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2467                           ; Switch size 1, requested type "simple"
  2468                           ; Number of cases is 1, Range of values is 0 to 0
  2469                           ; switch strategies available:
  2470                           ; Name         Instructions Cycles
  2471                           ; simple_byte            4     3 (average)
  2472                           ; direct_byte            8     6 (fixed)
  2473                           ; jumptable            260     6 (fixed)
  2474                           ;	Chosen strategy is simple_byte
  2475  0382  0871               	movf	fclr@flg+1,w
  2476  0383  3A00               	xorlw	0	; case 0
  2477  0384  1903               	skipnz
  2478  0385  2B87               	goto	l2441
  2479  0386  2B92               	goto	l217
  2480  0387                     l2441:
  2481                           
  2482                           ; Switch size 1, requested type "simple"
  2483                           ; Number of cases is 3, Range of values is 0 to 2
  2484                           ; switch strategies available:
  2485                           ; Name         Instructions Cycles
  2486                           ; simple_byte           10     6 (average)
  2487                           ; direct_byte           12     6 (fixed)
  2488                           ; jumptable            260     6 (fixed)
  2489                           ;	Chosen strategy is simple_byte
  2490  0387  0870               	movf	fclr@flg,w
  2491  0388  3A00               	xorlw	0	; case 0
  2492  0389  1903               	skipnz
  2493  038A  2B74               	goto	l1933
  2494  038B  3A01               	xorlw	1	; case 1
  2495  038C  1903               	skipnz
  2496  038D  2B78               	goto	l1935
  2497  038E  3A03               	xorlw	3	; case 2
  2498  038F  1903               	skipnz
  2499  0390  2B7C               	goto	l1937
  2500  0391  2B92               	goto	l217
  2501  0392                     l217:
  2502  0392  0008               	return
  2503  0393                     __end_of_fclr:
  2504                           
  2505                           	psect	text8
  2506  03B7                     __ptext8:	
  2507 ;; *************** function _bottomTime *****************
  2508 ;; Defined at:
  2509 ;;		line 467 in file "Q3.c"
  2510 ;; Parameters:    Size  Location     Type
  2511 ;;		None
  2512 ;; Auto vars:     Size  Location     Type
  2513 ;;		None
  2514 ;; Return value:  Size  Location     Type
  2515 ;;                  2   10[COMMON] int 
  2516 ;; Registers used:
  2517 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2518 ;; Tracked objects:
  2519 ;;		On entry : 0/0
  2520 ;;		On exit  : 0/0
  2521 ;;		Unchanged: 0/0
  2522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2523 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2526 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2527 ;;Total ram usage:        2 bytes
  2528 ;; Hardware stack levels used:    1
  2529 ;; Hardware stack levels required when called:    2
  2530 ;; This function calls:
  2531 ;;		_jikan
  2532 ;;		_tact
  2533 ;; This function is called by:
  2534 ;;		_main
  2535 ;; This function uses a non-reentrant model
  2536 ;;
  2537                           
  2538                           
  2539                           ;psect for function _bottomTime
  2540  03B7                     _bottomTime:
  2541  03B7                     l266:	
  2542                           ;incstack = 0
  2543                           ; Regs used in _bottomTime: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2544                           ;Q3.c: 468:     while (1){
  2545                           
  2546  03B7                     l1973:
  2547                           
  2548                           ;Q3.c: 469:         tact(2);
  2549  03B7  3002               	movlw	2
  2550  03B8  00F8               	movwf	tact@mode
  2551  03B9  3000               	movlw	0
  2552  03BA  00F9               	movwf	tact@mode+1
  2553  03BB  3184  24D9  3183   	fcall	_tact
  2554  03BE                     l1975:
  2555                           
  2556                           ;Q3.c: 470:         if(((flag_sw3==1)&&(flag_R==1))){
  2557  03BE  0020               	movlb	0	; select bank0
  2558  03BF  033C               	decf	_flag_sw3,w
  2559  03C0  043D               	iorwf	_flag_sw3+1,w
  2560  03C1  1D03               	btfss	3,2
  2561  03C2  2BC4               	goto	u1401
  2562  03C3  2BC5               	goto	u1400
  2563  03C4                     u1401:
  2564  03C4  2BCE               	goto	l1981
  2565  03C5                     u1400:
  2566  03C5                     l1977:
  2567  03C5  033A               	decf	_flag_R,w
  2568  03C6  043B               	iorwf	_flag_R+1,w
  2569  03C7  1D03               	btfss	3,2
  2570  03C8  2BCA               	goto	u1411
  2571  03C9  2BCB               	goto	u1410
  2572  03CA                     u1411:
  2573  03CA  2BCE               	goto	l1981
  2574  03CB                     u1410:
  2575  03CB                     l1979:
  2576                           
  2577                           ;Q3.c: 471:             jikan();
  2578  03CB  3183  2353  3183   	fcall	_jikan
  2579  03CE                     l1981:
  2580                           
  2581                           ;Q3.c: 473:         if(((flag_sw3==0)&&(flag_P==1))){
  2582  03CE  0020               	movlb	0	; select bank0
  2583  03CF  083C               	movf	_flag_sw3,w
  2584  03D0  043D               	iorwf	_flag_sw3+1,w
  2585  03D1  1D03               	btfss	3,2
  2586  03D2  2BD4               	goto	u1421
  2587  03D3  2BD5               	goto	u1420
  2588  03D4                     u1421:
  2589  03D4  2BB7               	goto	l266
  2590  03D5                     u1420:
  2591  03D5                     l1983:
  2592  03D5  0338               	decf	_flag_P,w
  2593  03D6  0439               	iorwf	_flag_P+1,w
  2594  03D7  1D03               	btfss	3,2
  2595  03D8  2BDA               	goto	u1431
  2596  03D9  2BDB               	goto	u1430
  2597  03DA                     u1431:
  2598  03DA  2BB7               	goto	l266
  2599  03DB                     u1430:
  2600  03DB                     l1985:
  2601                           
  2602                           ;Q3.c: 474:             jikan();
  2603  03DB  3183  2353  3183   	fcall	_jikan
  2604  03DE                     l1987:
  2605                           
  2606                           ;Q3.c: 475:             return count;
  2607  03DE  0020               	movlb	0	; select bank0
  2608  03DF  082B               	movf	_count+1,w
  2609  03E0  00FB               	movwf	?_bottomTime+1
  2610  03E1  082A               	movf	_count,w
  2611  03E2  00FA               	movwf	?_bottomTime
  2612  03E3                     l269:
  2613  03E3  0008               	return
  2614  03E4                     __end_of_bottomTime:
  2615                           
  2616                           	psect	text9
  2617  04D9                     __ptext9:	
  2618 ;; *************** function _tact *****************
  2619 ;; Defined at:
  2620 ;;		line 346 in file "Q3.c"
  2621 ;; Parameters:    Size  Location     Type
  2622 ;;  mode            2    8[COMMON] unsigned short 
  2623 ;; Auto vars:     Size  Location     Type
  2624 ;;		None
  2625 ;; Return value:  Size  Location     Type
  2626 ;;                  1    wreg      void 
  2627 ;; Registers used:
  2628 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2629 ;; Tracked objects:
  2630 ;;		On entry : 0/0
  2631 ;;		On exit  : 0/0
  2632 ;;		Unchanged: 0/0
  2633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2634 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2637 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2638 ;;Total ram usage:        2 bytes
  2639 ;; Hardware stack levels used:    1
  2640 ;; Hardware stack levels required when called:    1
  2641 ;; This function calls:
  2642 ;;		_tactsw
  2643 ;; This function is called by:
  2644 ;;		_bottomTime
  2645 ;;		_kaisu
  2646 ;; This function uses a non-reentrant model
  2647 ;;
  2648                           
  2649                           
  2650                           ;psect for function _tact
  2651  04D9                     _tact:
  2652  04D9                     l1825:	
  2653                           ;incstack = 0
  2654                           ; Regs used in _tact: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2655                           
  2656                           
  2657                           ;Q3.c: 346: void tact(unsigned short mode);Q3.c: 347: {;Q3.c: 348:     switch(mode){
  2658  04D9  2D13               	goto	l1853
  2659  04DA                     l1827:
  2660                           
  2661                           ;Q3.c: 350:                 tactsw();
  2662  04DA  3184  2454  3184   	fcall	_tactsw
  2663  04DD                     l1829:
  2664                           
  2665                           ;Q3.c: 351:                 if(flag_sw3==0)flag_R=1;
  2666  04DD  0020               	movlb	0	; select bank0
  2667  04DE  083C               	movf	_flag_sw3,w
  2668  04DF  043D               	iorwf	_flag_sw3+1,w
  2669  04E0  1D03               	btfss	3,2
  2670  04E1  2CE3               	goto	u1231
  2671  04E2  2CE4               	goto	u1230
  2672  04E3                     u1231:
  2673  04E3  2D23               	goto	l208
  2674  04E4                     u1230:
  2675  04E4                     l1831:
  2676  04E4  3001               	movlw	1
  2677  04E5  00BA               	movwf	_flag_R
  2678  04E6  3000               	movlw	0
  2679  04E7  00BB               	movwf	_flag_R+1
  2680  04E8  2D23               	goto	l208
  2681  04E9                     l1833:
  2682                           
  2683                           ;Q3.c: 354:                 tactsw();
  2684  04E9  3184  2454  3184   	fcall	_tactsw
  2685  04EC                     l1835:
  2686                           
  2687                           ;Q3.c: 355:                 if(flag_sw3==1)flag_P=1;
  2688  04EC  0020               	movlb	0	; select bank0
  2689  04ED  033C               	decf	_flag_sw3,w
  2690  04EE  043D               	iorwf	_flag_sw3+1,w
  2691  04EF  1D03               	btfss	3,2
  2692  04F0  2CF2               	goto	u1241
  2693  04F1  2CF3               	goto	u1240
  2694  04F2                     u1241:
  2695  04F2  2D23               	goto	l208
  2696  04F3                     u1240:
  2697  04F3                     l1837:
  2698  04F3  3001               	movlw	1
  2699  04F4  00B8               	movwf	_flag_P
  2700  04F5  3000               	movlw	0
  2701  04F6  00B9               	movwf	_flag_P+1
  2702  04F7  2D23               	goto	l208
  2703  04F8                     l1839:
  2704                           
  2705                           ;Q3.c: 358:                 tactsw();
  2706  04F8  3184  2454  3184   	fcall	_tactsw
  2707  04FB                     l1841:
  2708                           
  2709                           ;Q3.c: 359:                 if(flag_sw3==0)flag_R=1;
  2710  04FB  0020               	movlb	0	; select bank0
  2711  04FC  083C               	movf	_flag_sw3,w
  2712  04FD  043D               	iorwf	_flag_sw3+1,w
  2713  04FE  1D03               	btfss	3,2
  2714  04FF  2D01               	goto	u1251
  2715  0500  2D02               	goto	u1250
  2716  0501                     u1251:
  2717  0501  2D06               	goto	l1845
  2718  0502                     u1250:
  2719  0502                     l1843:
  2720  0502  3001               	movlw	1
  2721  0503  00BA               	movwf	_flag_R
  2722  0504  3000               	movlw	0
  2723  0505  00BB               	movwf	_flag_R+1
  2724  0506                     l1845:
  2725                           
  2726                           ;Q3.c: 360:                 if((flag_sw3==1)&&(flag_R==1))flag_P=1;
  2727  0506  033C               	decf	_flag_sw3,w
  2728  0507  043D               	iorwf	_flag_sw3+1,w
  2729  0508  1D03               	btfss	3,2
  2730  0509  2D0B               	goto	u1261
  2731  050A  2D0C               	goto	u1260
  2732  050B                     u1261:
  2733  050B  2D23               	goto	l208
  2734  050C                     u1260:
  2735  050C                     l1847:
  2736  050C  033A               	decf	_flag_R,w
  2737  050D  043B               	iorwf	_flag_R+1,w
  2738  050E  1D03               	btfss	3,2
  2739  050F  2D11               	goto	u1271
  2740  0510  2D12               	goto	u1270
  2741  0511                     u1271:
  2742  0511  2D23               	goto	l208
  2743  0512                     u1270:
  2744  0512  2CF3               	goto	l1837
  2745  0513                     l1853:
  2746                           
  2747                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2748                           ; Switch size 1, requested type "simple"
  2749                           ; Number of cases is 1, Range of values is 0 to 0
  2750                           ; switch strategies available:
  2751                           ; Name         Instructions Cycles
  2752                           ; simple_byte            4     3 (average)
  2753                           ; direct_byte            8     6 (fixed)
  2754                           ; jumptable            260     6 (fixed)
  2755                           ;	Chosen strategy is simple_byte
  2756  0513  0879               	movf	tact@mode+1,w
  2757  0514  3A00               	xorlw	0	; case 0
  2758  0515  1903               	skipnz
  2759  0516  2D18               	goto	l2443
  2760  0517  2D23               	goto	l208
  2761  0518                     l2443:
  2762                           
  2763                           ; Switch size 1, requested type "simple"
  2764                           ; Number of cases is 3, Range of values is 0 to 2
  2765                           ; switch strategies available:
  2766                           ; Name         Instructions Cycles
  2767                           ; simple_byte           10     6 (average)
  2768                           ; direct_byte           12     6 (fixed)
  2769                           ; jumptable            260     6 (fixed)
  2770                           ;	Chosen strategy is simple_byte
  2771  0518  0878               	movf	tact@mode,w
  2772  0519  3A00               	xorlw	0	; case 0
  2773  051A  1903               	skipnz
  2774  051B  2CDA               	goto	l1827
  2775  051C  3A01               	xorlw	1	; case 1
  2776  051D  1903               	skipnz
  2777  051E  2CE9               	goto	l1833
  2778  051F  3A03               	xorlw	3	; case 2
  2779  0520  1903               	skipnz
  2780  0521  2CF8               	goto	l1839
  2781  0522  2D23               	goto	l208
  2782  0523                     l208:
  2783  0523  0008               	return
  2784  0524                     __end_of_tact:
  2785                           
  2786                           	psect	text10
  2787  0454                     __ptext10:	
  2788 ;; *************** function _tactsw *****************
  2789 ;; Defined at:
  2790 ;;		line 331 in file "Q3.c"
  2791 ;; Parameters:    Size  Location     Type
  2792 ;;		None
  2793 ;; Auto vars:     Size  Location     Type
  2794 ;;  a               2    6[COMMON] unsigned short 
  2795 ;;  c               2    4[COMMON] unsigned short 
  2796 ;;  b               2    2[COMMON] unsigned short 
  2797 ;; Return value:  Size  Location     Type
  2798 ;;                  1    wreg      void 
  2799 ;; Registers used:
  2800 ;;		wreg, status,2, status,0
  2801 ;; Tracked objects:
  2802 ;;		On entry : 0/0
  2803 ;;		On exit  : 0/0
  2804 ;;		Unchanged: 0/0
  2805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2807 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2808 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2809 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2810 ;;Total ram usage:        8 bytes
  2811 ;; Hardware stack levels used:    1
  2812 ;; This function calls:
  2813 ;;		Nothing
  2814 ;; This function is called by:
  2815 ;;		_tact
  2816 ;; This function uses a non-reentrant model
  2817 ;;
  2818                           
  2819                           
  2820                           ;psect for function _tactsw
  2821  0454                     _tactsw:
  2822  0454                     l1651:	
  2823                           ;incstack = 0
  2824                           ; Regs used in _tactsw: [wreg+status,2+status,0]
  2825                           
  2826                           
  2827                           ;Q3.c: 333:     unsigned short a,b,c;;Q3.c: 334:     b=c=0;
  2828  0454  01F4               	clrf	tactsw@c
  2829  0455  01F5               	clrf	tactsw@c+1
  2830  0456  01F2               	clrf	tactsw@b
  2831  0457  01F3               	clrf	tactsw@b+1
  2832  0458                     l1653:
  2833                           
  2834                           ;Q3.c: 336:             a=RA2;
  2835  0458  1003               	clrc
  2836  0459  0020               	movlb	0	; select bank0
  2837  045A  190C               	btfsc	12,2	;volatile
  2838  045B  1403               	setc
  2839  045C  3000               	movlw	0
  2840  045D  3D09               	addwfc	9,w
  2841  045E  00F0               	movwf	??_tactsw
  2842  045F  01F1               	clrf	??_tactsw+1
  2843  0460  0870               	movf	??_tactsw,w
  2844  0461  00F6               	movwf	tactsw@a
  2845  0462  0871               	movf	??_tactsw+1,w
  2846  0463  00F7               	movwf	tactsw@a+1
  2847  0464                     l1655:
  2848                           
  2849                           ;Q3.c: 337:             if(b==a)++c;
  2850  0464  0877               	movf	tactsw@a+1,w
  2851  0465  0673               	xorwf	tactsw@b+1,w
  2852  0466  1D03               	skipz
  2853  0467  2C6A               	goto	u995
  2854  0468  0876               	movf	tactsw@a,w
  2855  0469  0672               	xorwf	tactsw@b,w
  2856  046A                     u995:
  2857  046A  1D03               	skipz
  2858  046B  2C6D               	goto	u991
  2859  046C  2C6E               	goto	u990
  2860  046D                     u991:
  2861  046D  2C73               	goto	l1659
  2862  046E                     u990:
  2863  046E                     l1657:
  2864  046E  3001               	movlw	1
  2865  046F  07F4               	addwf	tactsw@c,f
  2866  0470  3000               	movlw	0
  2867  0471  3DF5               	addwfc	tactsw@c+1,f
  2868  0472  2C75               	goto	l1661
  2869  0473                     l1659:
  2870  0473  01F4               	clrf	tactsw@c
  2871  0474  01F5               	clrf	tactsw@c+1
  2872  0475                     l1661:
  2873                           
  2874                           ;Q3.c: 339:             if(c>10){flag_sw3=(~a)&0x01;return;}
  2875  0475  3000               	movlw	0
  2876  0476  0275               	subwf	tactsw@c+1,w
  2877  0477  300B               	movlw	11
  2878  0478  1903               	skipnz
  2879  0479  0274               	subwf	tactsw@c,w
  2880  047A  1C03               	skipc
  2881  047B  2C7D               	goto	u1001
  2882  047C  2C7E               	goto	u1000
  2883  047D                     u1001:
  2884  047D  2C8B               	goto	l1667
  2885  047E                     u1000:
  2886  047E                     l1663:
  2887  047E  0877               	movf	tactsw@a+1,w
  2888  047F  00F1               	movwf	??_tactsw+1
  2889  0480  0876               	movf	tactsw@a,w
  2890  0481  00F0               	movwf	??_tactsw
  2891  0482  09F0               	comf	??_tactsw,f
  2892  0483  09F1               	comf	??_tactsw+1,f
  2893  0484  3001               	movlw	1
  2894  0485  0570               	andwf	??_tactsw,w
  2895  0486  00BC               	movwf	_flag_sw3
  2896  0487  3000               	movlw	0
  2897  0488  0571               	andwf	??_tactsw+1,w
  2898  0489  00BD               	movwf	_flag_sw3+1
  2899  048A  2C90               	goto	l193
  2900  048B                     l1667:
  2901                           
  2902                           ;Q3.c: 340:             b=a;
  2903  048B  0877               	movf	tactsw@a+1,w
  2904  048C  00F3               	movwf	tactsw@b+1
  2905  048D  0876               	movf	tactsw@a,w
  2906  048E  00F2               	movwf	tactsw@b
  2907  048F  2C58               	goto	l1653
  2908  0490                     l193:
  2909  0490  0008               	return
  2910  0491                     __end_of_tactsw:
  2911                           
  2912                           	psect	text11
  2913  0353                     __ptext11:	
  2914 ;; *************** function _jikan *****************
  2915 ;; Defined at:
  2916 ;;		line 406 in file "Q3.c"
  2917 ;; Parameters:    Size  Location     Type
  2918 ;;		None
  2919 ;; Auto vars:     Size  Location     Type
  2920 ;;		None
  2921 ;; Return value:  Size  Location     Type
  2922 ;;                  1    wreg      void 
  2923 ;; Registers used:
  2924 ;;		wreg, status,2
  2925 ;; Tracked objects:
  2926 ;;		On entry : 0/0
  2927 ;;		On exit  : 0/0
  2928 ;;		Unchanged: 0/0
  2929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2934 ;;Total ram usage:        0 bytes
  2935 ;; Hardware stack levels used:    1
  2936 ;; This function calls:
  2937 ;;		Nothing
  2938 ;; This function is called by:
  2939 ;;		_bottomTime
  2940 ;; This function uses a non-reentrant model
  2941 ;;
  2942                           
  2943                           
  2944                           ;psect for function _jikan
  2945  0353                     _jikan:
  2946  0353                     l1859:	
  2947                           ;incstack = 0
  2948                           ; Regs used in _jikan: [wreg+status,2]
  2949                           
  2950                           
  2951                           ;Q3.c: 408:     if(RA2==0){++count;}
  2952  0353  0020               	movlb	0	; select bank0
  2953  0354  190C               	btfsc	12,2	;volatile
  2954  0355  2B57               	goto	u1281
  2955  0356  2B58               	goto	u1280
  2956  0357                     u1281:
  2957  0357  2B5D               	goto	l1863
  2958  0358                     u1280:
  2959  0358                     l1861:
  2960  0358  3001               	movlw	1
  2961  0359  07AA               	addwf	_count,f
  2962  035A  3000               	movlw	0
  2963  035B  3DAB               	addwfc	_count+1,f
  2964  035C  2B5F               	goto	l232
  2965  035D                     l1863:
  2966  035D  01AA               	clrf	_count
  2967  035E  01AB               	clrf	_count+1
  2968  035F                     l232:
  2969  035F  0008               	return
  2970  0360                     __end_of_jikan:
  2971  007E                     btemp	set	126	;btemp
  2972  007E                     wtemp0	set	126
  2973                           
  2974                           	psect	config
  2975                           
  2976                           ;Config register CONFIG1 @ 0x8007
  2977                           ;	Oscillator Selection
  2978                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  2979                           ;	Watchdog Timer Enable
  2980                           ;	WDTE = OFF, WDT disabled
  2981                           ;	Power-up Timer Enable
  2982                           ;	PWRTE = OFF, PWRT disabled
  2983                           ;	MCLR Pin Function Select
  2984                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  2985                           ;	Flash Program Memory Code Protection
  2986                           ;	CP = OFF, Program memory code protection is disabled
  2987                           ;	Data Memory Code Protection
  2988                           ;	CPD = OFF, Data memory code protection is disabled
  2989                           ;	Brown-out Reset Enable
  2990                           ;	BOREN = OFF, Brown-out Reset disabled
  2991                           ;	Clock Out Enable
  2992                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  2993                           ;	Internal/External Switchover
  2994                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2995                           ;	Fail-Safe Clock Monitor Enable
  2996                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2997  8007                     	org	32775
  2998  8007  09E4               	dw	2532
  2999                           
  3000                           ;Config register CONFIG2 @ 0x8008
  3001                           ;	Flash Memory Self-Write Protection
  3002                           ;	WRT = OFF, Write protection off
  3003                           ;	Voltage Regulator Capacitor Enable
  3004                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
  3005                           ;	PLL Enable
  3006                           ;	PLLEN = OFF, 4x PLL disabled
  3007                           ;	Stack Overflow/Underflow Reset Enable
  3008                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  3009                           ;	Brown-out Reset Voltage Selection
  3010                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  3011                           ;	Low-Voltage Programming Enable
  3012                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  3013  8008                     	org	32776
  3014  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    0
    Data        156
    BSS         34
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     30      72
    BANK1            80      0      72
    BANK2            80      0      76
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_bottomTime
    _waitSEG->___lwdiv
    _waitSEG->_dynam
    _motor->_dynam
    _bottomTime->_tact
    _tact->_tactsw

Critical Paths under _main in BANK0

    _main->_motor
    _waitSEG->_dynam
    _motor->_dynam

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0    7602
                                             12 COMMON     1     1      0
                                             18 BANK0     12    12      0
                         _bottomTime
                              _dynam
                               _fclr
                              _motor
                           _portinit
                            _waitSEG
                             _zenoff
 ---------------------------------------------------------------------------------
 (1) _zenoff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _waitSEG                                              8     2      6    2796
                                              8 COMMON     2     2      0
                                              8 BANK0      6     0      6
                            ___lwdiv
                              _dynam
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _portinit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motor                                               12     2     10    2199
                                              8 COMMON     2     2      0
                                              8 BANK0     10     0     10
                              _dynam
 ---------------------------------------------------------------------------------
 (2) _dynam                                               16     8      8    1663
                                              0 COMMON     8     0      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (1) _fclr                                                 2     0      2     326
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _bottomTime                                           2     0      2     366
                                             10 COMMON     2     0      2
                              _jikan
                               _tact
 ---------------------------------------------------------------------------------
 (2) _tact                                                 2     0      2     366
                                              8 COMMON     2     0      2
                             _tactsw
 ---------------------------------------------------------------------------------
 (3) _tactsw                                               8     8      0     116
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 (2) _jikan                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _bottomTime
     _jikan
     _tact
       _tactsw
   _dynam
   _fclr
   _motor
     _dynam
   _portinit
   _waitSEG
     ___lwdiv
     _dynam
   _zenoff

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1E      48       5       90.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      48       7       90.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      4C       9       95.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      E9      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      E9      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 09 18:14:12 2021

                     l95 0372                       _cw 0034                      l112 0683  
                    l114 0693                      l123 06C9                      l116 06A9  
                    l108 0352                      l118 06B9                      l135 07D0  
                    l232 035F                      l208 0523                      l217 0392  
                    l129 0746                      l263 03B6                      l193 0490  
                    l266 03B7                      l258 0417                      l284 05A3  
                    l276 0579                      l269 03E3                      l278 0586  
                    l288 0657                      l731 0453                      _RA0 0060  
                    _RA1 0061                      _RA2 0062                      _RC0 0070  
                    _RC1 0071                      _RC2 0072                      _RC5 0075  
                    _RC6 0076                      _RC7 0077                      u990 046E  
                    u991 046D                      u995 046A                      _ccw 0032  
                    _flg 0036                      wreg 0009                     l2221 0570  
                   l2231 0579                     l2223 0573                     l2241 059E  
                   l2233 0579                     l2225 0579                     l2251 05AB  
                   l2235 057E                     l2227 0579                     l1701 06A0  
                   l2261 05F0                     l2253 05BE                     l2245 05A7  
                   l2237 0582                     l2229 0579                     l1703 06A5  
                   l2271 063F                     l2263 05F4                     l2255 05D3  
                   l2239 0597                     l2441 0387                     l1801 07AE  
                   l1721 06BF                     l1713 06BC                     l1705 06AD  
                   l2281 0660                     l2273 064D                     l2265 0614  
                   l2257 05DB                     l1651 0454                     l2443 0518  
                   l1803 07B0                     l1731 06D7                     l1723 06C1  
                   l1715 06BD                     l2275 0652                     l2267 0619  
                   l2259 05E2                     l1661 0475                     l1653 0458  
                   l1805 07B4                     l1741 06ED                     l1733 06DB  
                   l1725 06C7                     l1717 06BD                     l1709 06B4  
                   l2269 0627                     l1663 047E                     l1655 0464  
                   l1831 04E4                     l2439 07C5                     l1815 07BB  
                   l1807 07B4                     l1751 0724                     l1743 06F3  
                   l1735 06DD                     l1727 06CB                     l1719 06BE  
                   l1671 066E                     l2279 065C                     l1657 046E  
                   l1841 04FB                     l1833 04E9                     l1825 04D9  
                   l1761 0737                     l1753 072B                     l1745 0705  
                   l1737 06E1                     l1729 06D1                     l1681 067A  
                   l1673 066F                     l1921 034A                     l1667 048B  
                   l1659 0473                     l1843 0502                     l1835 04EC  
                   l1827 04DA                     l1931 0373                     l1771 0744  
                   l1755 0731                     l1747 070C                     l1739 06E7  
                   l1819 07C0                     l1683 067F                     l1675 0671  
                   l1923 034E                     l1861 0358                     l1845 0506  
                   l1837 04F3                     l1829 04DD                     l1853 0513  
                   l1933 0374                     l1941 0382                     l1781 075A  
                   l1773 0748                     l1757 0733                     l1749 0712  
                   l1693 0695                     l1685 0687                     l1677 0672  
                   l1669 0667                     l1925 034F                     l1863 035D  
                   l1847 050C                     l1839 04F8                     l1935 0378  
                   l1791 0782                     l1783 075E                     l1775 074E  
                   l1759 0737                     l1695 0697                     l1679 0673  
                   l1871 0423                     l1951 03F9                     l1927 0350  
                   l1937 037C                     l1793 0789                     l1777 0754  
                   l1785 0764                     l1769 073E                     l1697 0698  
                   l1689 068E                     l1961 0393                     l1881 0443  
                   l1873 0428                     l1865 0418                     l1929 0351  
                   l1859 0353                     l1795 078F                     l1787 076A  
                   l1779 0758                     l1699 0699                     l1963 0398  
                   l1891 0360                     l1883 0444                     l1875 042C  
                   l1867 041A                     l1955 0400                     l1947 03E4  
                   l1981 03CE                     l1973 03B7                     l1797 07A1  
                   l1789 0770                     l1893 0363                     l1885 0449  
                   l1877 0430                     l1869 0420                     l1957 0412  
                   l1949 03F5                     l1983 03D5                     l1975 03BE  
                   l1799 07A8                     l1967 039D                     l1895 0366  
                   l1879 043F                     l1887 044F                     l1985 03DB  
                   l1977 03C5                     l1969 03B1                     l1897 036D  
                   l1987 03DE                     l1979 03CB                     l1899 0370  
                   u1000 047E                     u1001 047D                     u1010 067A  
                   u1011 0679                     u1100 070C                     u1020 068D  
                   u1101 070B                     u1021 068C                     u1110 0712  
                   u1030 06A0                     u1111 0711                     u1031 069F  
                   u1200 078F                     u1120 072B                     u1040 06B3  
                   u1201 078E                     u1121 072A                     u1041 06B2  
                   u1210 07A8                     u1130 0731                     u1050 06C7  
                   u1211 07A7                     u1131 0730                     u1051 06C6  
                   u1220 07AE                     u1140 0744                     u1060 06D1  
                   u1221 07AD                     u1141 0743                     u1061 06D0  
                   u1230 04E4                     u1150 074E                     u1070 06D7  
                   u1310 0430                     u1231 04E3                     u1151 074D  
                   u1071 06D6                     u1311 042F                     u1240 04F3  
                   u1400 03C5                     u1160 0754                     u1080 06ED  
                   u1241 04F2                     u1401 03C4                     u1161 0753  
                   u1081 06EC                     u1305 0424                     u1250 0502  
                   u1410 03CB                     u1170 076A                     u1090 06F3  
                   u1330 043F                     u1251 0501                     u1411 03CA  
                   u1171 0769                     u1091 06F2                     u1331 043E  
                   u1260 050C                     u1420 03D5                     u1180 0770  
                   u1261 050B                     u1421 03D4                     u1181 076F  
                   u1325 0431                     u1270 0512                     u1430 03DB  
                   u1190 0789                     u1350 044F                     u1271 0511  
                   u1431 03DA                     u1191 0788                     u1351 044E  
                   u1335 043B                     u1280 0358                     u1281 0357  
                   u1345 0445                     u1290 0420                     u1291 041F  
                   u1380 03FF                     u1381 03FE                     u1390 039C  
                   u1391 039B                     u1800 0582                     u1801 0581  
                   u1810 0586                     u1811 0585                     u1900 0656  
                   u1820 058D                     u1901 0655                     u1821 058A  
                   u1910 065C                     u1830 0595                     u1911 065B  
                   u1831 0592                     u1920 0664                     u1921 0663  
                   u1850 05A3                     u1834 058F                     u1851 05A2  
                   u1860 05A7                     u1844 0597                     u1861 05A6  
                   u1870 05F0                     u1790 057E                     u1871 05EF  
                   u1791 057D                     u1880 0627                     u1881 0626  
                   u1890 0652                     u1891 0651                     u1875 05EC  
                   u1885 0623                     _atai 002C                     _fclr 0373  
                   _main 0570                     _num0 00C0                     _kisu 00D4  
                   _moja 0160                     _samf 0120                     _mojf 0154  
                   _tact 04D9                     _mojh 0064                     _moji 0140  
                   _mojn 0060                     _samp 00A0                     _gusu 00DE  
                   fsr0h 0005                     fsr1h 0007                     indf0 0000  
                   fsr0l 0004                     fsr1l 0006                     btemp 007E  
                   start 0002                    ?_fclr 0070                    ?_main 0070  
                  ?_tact 0078          __end_of___lwdiv 0454                    _PORTA 000C  
                  _PORTB 000D                    _PORTC 000E                    _TRISA 008C  
                  _TRISB 008D                    _TRISC 008E                    _code1 0022  
                  _atai1 002E                    _jikan 0353                    _count 002A  
                  _dynam 0667                    _fugou 0020                    _motor 0393  
                  main@i 005E                    main@j 005C          __end_of_waitSEG 0418  
                  status 0003                    wtemp0 007E          __initialization 07D1  
           __end_of_fclr 0393             __end_of_main 0667             __end_of_tact 0524  
                 ??_fclr 0072                   ??_main 007C                   ??_tact 007A  
                 ?_jikan 0070                   ?_dynam 0070                   ?_motor 004A  
                 _ANSELA 018C                   _ANSELB 018D                   _OSCCON 0099  
            dynam@smdata 0074                   _code10 0024                   _atai10 0030  
                 _flag_P 0038                   _flag_R 003A                ??___lwdiv 0074  
                 _tactsw 0454                   _zenoff 034A                   dynam@j 0046  
              ??_waitSEG 0078                   motor@i 0078         __end_of_portinit 0373  
__end_of__initialization 07FD           __pcstackCOMMON 0070             __pidataBANK0 0342  
           __pidataBANK1 0491             __pidataBANK2 0524            __end_of_jikan 0360  
          __end_of_dynam 07D1            __end_of_motor 03B7                  ??_jikan 0070  
                ??_dynam 0078                  ??_motor 0078               __pbssBANK0 0020  
             __pmaintext 0570                  ?_tactsw 0070                  ?_zenoff 0070  
            waitSEG@seg1 004A              waitSEG@seg2 004C               _bottomTime 03B7  
              ?_portinit 0070                  ___lwdiv 0418                  _code100 0026  
        __size_of_tactsw 003D                  __ptext1 034A                  __ptext2 03E4  
                __ptext3 0418                  __ptext4 0360                  __ptext5 0393  
                __ptext6 0667                  __ptext7 0373                  __ptext8 03B7  
                __ptext9 04D9          __size_of_zenoff 0009                  fclr@flg 0070  
                _waitSEG 03E4              motor@kakudo 004A                  clrloop0 0337  
   end_of_initialization 07FD              motor@smdata 0050                  dynam@tm 0044  
                dynam@tr 0076                  init_ram 033C                  initloop 033D  
                tactsw@a 0076                  tactsw@b 0072                  tactsw@c 0074  
                motor@tr 0052               ??_portinit 0070              ?_bottomTime 007A  
         __end_of_tactsw 0491           __end_of_zenoff 0353      start_initialization 07D1  
            __pdataBANK0 0060              __pdataBANK1 00A0              __pdataBANK2 0120  
               ??_tactsw 0070                 ??_zenoff 0070      __size_of_bottomTime 002D  
              ___latbits 0003            __pcstackBANK0 0042         ___lwdiv@dividend 0072  
               ?___lwdiv 0070        __size_of_portinit 0013                 ?_waitSEG 004A  
       ___lwdiv@quotient 0075           __size_of_jikan 000D           __size_of_dynam 016A  
         __size_of_motor 0024            dynam@dig1data 0070            dynam@dig2data 0072  
              clear_ram0 0336            motor@dig1data 004C            motor@dig2data 004E  
           ??_bottomTime 007C         __size_of___lwdiv 003C                 _code1000 0028  
     __end_of_bottomTime 03E4          ___lwdiv@divisor 0070          ___lwdiv@counter 0077  
       __size_of_waitSEG 0034                 __ptext10 0454                 __ptext11 0353  
               _flag_sw1 0040                 _flag_sw2 003E                 _flag_sw3 003C  
              waitSEG@wt 004E            __size_of_fclr 0020            __size_of_main 00F7  
          __size_of_tact 004B                 _portinit 0360                 main@time 005A  
               dynam@ext 0048                 dynam@smd 0042                 tact@mode 0078  
               waitSEG@i 0078  
