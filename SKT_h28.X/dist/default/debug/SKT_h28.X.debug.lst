

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Feb 06 01:31:31 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F1938
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27  0000                     
    28                           ; Version 2.20
    29                           ; Generated 12/02/2020 GMT
    30                           ; 
    31                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F1938 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  000D                     	;# 
    76  000E                     	;# 
    77  0010                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0095                     	;# 
   100  0096                     	;# 
   101  0097                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  010C                     	;# 
   111  010D                     	;# 
   112  010E                     	;# 
   113  0110                     	;# 
   114  0111                     	;# 
   115  0112                     	;# 
   116  0113                     	;# 
   117  0114                     	;# 
   118  0115                     	;# 
   119  0116                     	;# 
   120  0117                     	;# 
   121  0118                     	;# 
   122  0119                     	;# 
   123  011A                     	;# 
   124  011B                     	;# 
   125  011D                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0191                     	;# 
   129  0191                     	;# 
   130  0192                     	;# 
   131  0193                     	;# 
   132  0193                     	;# 
   133  0193                     	;# 
   134  0194                     	;# 
   135  0195                     	;# 
   136  0196                     	;# 
   137  0199                     	;# 
   138  019A                     	;# 
   139  019B                     	;# 
   140  019B                     	;# 
   141  019B                     	;# 
   142  019B                     	;# 
   143  019C                     	;# 
   144  019C                     	;# 
   145  019D                     	;# 
   146  019E                     	;# 
   147  019F                     	;# 
   148  020D                     	;# 
   149  0210                     	;# 
   150  0211                     	;# 
   151  0212                     	;# 
   152  0213                     	;# 
   153  0214                     	;# 
   154  0215                     	;# 
   155  0215                     	;# 
   156  0216                     	;# 
   157  0217                     	;# 
   158  0291                     	;# 
   159  0291                     	;# 
   160  0292                     	;# 
   161  0293                     	;# 
   162  0294                     	;# 
   163  0295                     	;# 
   164  0295                     	;# 
   165  0296                     	;# 
   166  0298                     	;# 
   167  0298                     	;# 
   168  0299                     	;# 
   169  029A                     	;# 
   170  029B                     	;# 
   171  029C                     	;# 
   172  029C                     	;# 
   173  029D                     	;# 
   174  029E                     	;# 
   175  029F                     	;# 
   176  0311                     	;# 
   177  0311                     	;# 
   178  0312                     	;# 
   179  0313                     	;# 
   180  0314                     	;# 
   181  0315                     	;# 
   182  0315                     	;# 
   183  0316                     	;# 
   184  0318                     	;# 
   185  0318                     	;# 
   186  0319                     	;# 
   187  031A                     	;# 
   188  031C                     	;# 
   189  031C                     	;# 
   190  031D                     	;# 
   191  031E                     	;# 
   192  0394                     	;# 
   193  0395                     	;# 
   194  0396                     	;# 
   195  0415                     	;# 
   196  0416                     	;# 
   197  0417                     	;# 
   198  041C                     	;# 
   199  041D                     	;# 
   200  041E                     	;# 
   201  0791                     	;# 
   202  0792                     	;# 
   203  0793                     	;# 
   204  0794                     	;# 
   205  0795                     	;# 
   206  0798                     	;# 
   207  0799                     	;# 
   208  07A0                     	;# 
   209  07A1                     	;# 
   210  07A3                     	;# 
   211  07A4                     	;# 
   212  07A6                     	;# 
   213  07A7                     	;# 
   214  07A9                     	;# 
   215  07AA                     	;# 
   216  0FE4                     	;# 
   217  0FE5                     	;# 
   218  0FE6                     	;# 
   219  0FE7                     	;# 
   220  0FE8                     	;# 
   221  0FE9                     	;# 
   222  0FEA                     	;# 
   223  0FEB                     	;# 
   224  0FED                     	;# 
   225  0FEE                     	;# 
   226  0FEF                     	;# 
   227  0000                     	;# 
   228  0001                     	;# 
   229  0002                     	;# 
   230  0003                     	;# 
   231  0004                     	;# 
   232  0005                     	;# 
   233  0006                     	;# 
   234  0007                     	;# 
   235  0008                     	;# 
   236  0009                     	;# 
   237  000A                     	;# 
   238  000B                     	;# 
   239  000C                     	;# 
   240  000D                     	;# 
   241  000E                     	;# 
   242  0010                     	;# 
   243  0011                     	;# 
   244  0012                     	;# 
   245  0013                     	;# 
   246  0015                     	;# 
   247  0016                     	;# 
   248  0016                     	;# 
   249  0017                     	;# 
   250  0018                     	;# 
   251  0019                     	;# 
   252  001A                     	;# 
   253  001B                     	;# 
   254  001C                     	;# 
   255  001E                     	;# 
   256  001F                     	;# 
   257  008C                     	;# 
   258  008D                     	;# 
   259  008E                     	;# 
   260  0090                     	;# 
   261  0091                     	;# 
   262  0092                     	;# 
   263  0093                     	;# 
   264  0095                     	;# 
   265  0096                     	;# 
   266  0097                     	;# 
   267  0098                     	;# 
   268  0099                     	;# 
   269  009A                     	;# 
   270  009B                     	;# 
   271  009B                     	;# 
   272  009C                     	;# 
   273  009D                     	;# 
   274  009E                     	;# 
   275  010C                     	;# 
   276  010D                     	;# 
   277  010E                     	;# 
   278  0110                     	;# 
   279  0111                     	;# 
   280  0112                     	;# 
   281  0113                     	;# 
   282  0114                     	;# 
   283  0115                     	;# 
   284  0116                     	;# 
   285  0117                     	;# 
   286  0118                     	;# 
   287  0119                     	;# 
   288  011A                     	;# 
   289  011B                     	;# 
   290  011D                     	;# 
   291  018C                     	;# 
   292  018D                     	;# 
   293  0191                     	;# 
   294  0191                     	;# 
   295  0192                     	;# 
   296  0193                     	;# 
   297  0193                     	;# 
   298  0193                     	;# 
   299  0194                     	;# 
   300  0195                     	;# 
   301  0196                     	;# 
   302  0199                     	;# 
   303  019A                     	;# 
   304  019B                     	;# 
   305  019B                     	;# 
   306  019B                     	;# 
   307  019B                     	;# 
   308  019C                     	;# 
   309  019C                     	;# 
   310  019D                     	;# 
   311  019E                     	;# 
   312  019F                     	;# 
   313  020D                     	;# 
   314  0210                     	;# 
   315  0211                     	;# 
   316  0212                     	;# 
   317  0213                     	;# 
   318  0214                     	;# 
   319  0215                     	;# 
   320  0215                     	;# 
   321  0216                     	;# 
   322  0217                     	;# 
   323  0291                     	;# 
   324  0291                     	;# 
   325  0292                     	;# 
   326  0293                     	;# 
   327  0294                     	;# 
   328  0295                     	;# 
   329  0295                     	;# 
   330  0296                     	;# 
   331  0298                     	;# 
   332  0298                     	;# 
   333  0299                     	;# 
   334  029A                     	;# 
   335  029B                     	;# 
   336  029C                     	;# 
   337  029C                     	;# 
   338  029D                     	;# 
   339  029E                     	;# 
   340  029F                     	;# 
   341  0311                     	;# 
   342  0311                     	;# 
   343  0312                     	;# 
   344  0313                     	;# 
   345  0314                     	;# 
   346  0315                     	;# 
   347  0315                     	;# 
   348  0316                     	;# 
   349  0318                     	;# 
   350  0318                     	;# 
   351  0319                     	;# 
   352  031A                     	;# 
   353  031C                     	;# 
   354  031C                     	;# 
   355  031D                     	;# 
   356  031E                     	;# 
   357  0394                     	;# 
   358  0395                     	;# 
   359  0396                     	;# 
   360  0415                     	;# 
   361  0416                     	;# 
   362  0417                     	;# 
   363  041C                     	;# 
   364  041D                     	;# 
   365  041E                     	;# 
   366  0791                     	;# 
   367  0792                     	;# 
   368  0793                     	;# 
   369  0794                     	;# 
   370  0795                     	;# 
   371  0798                     	;# 
   372  0799                     	;# 
   373  07A0                     	;# 
   374  07A1                     	;# 
   375  07A3                     	;# 
   376  07A4                     	;# 
   377  07A6                     	;# 
   378  07A7                     	;# 
   379  07A9                     	;# 
   380  07AA                     	;# 
   381  0FE4                     	;# 
   382  0FE5                     	;# 
   383  0FE6                     	;# 
   384  0FE7                     	;# 
   385  0FE8                     	;# 
   386  0FE9                     	;# 
   387  0FEA                     	;# 
   388  0FEB                     	;# 
   389  0FED                     	;# 
   390  0FEE                     	;# 
   391  0FEF                     	;# 
   392                           
   393                           	psect	idataBANK0
   394  041D                     __pidataBANK0:
   395                           
   396                           ;initializer for _gusu
   397  041D  343F               	retlw	63
   398  041E  3400               	retlw	0
   399  041F  345B               	retlw	91
   400  0420  3400               	retlw	0
   401  0421  3466               	retlw	102
   402  0422  3400               	retlw	0
   403  0423  347D               	retlw	125
   404  0424  3400               	retlw	0
   405  0425  347F               	retlw	127
   406  0426  3400               	retlw	0
   407                           
   408                           ;initializer for _mojn
   409  0427  3454               	retlw	84
   410  0428  3400               	retlw	0
   411  0429  3473               	retlw	115
   412  042A  3400               	retlw	0
   413                           
   414                           ;initializer for _mojh
   415  042B  3476               	retlw	118
   416  042C  3400               	retlw	0
   417  042D  3438               	retlw	56
   418  042E  3400               	retlw	0
   419                           
   420                           	psect	idataBANK1
   421  052F                     __pidataBANK1:
   422                           
   423                           ;initializer for _samp
   424  052F  343F               	retlw	63
   425  0530  3400               	retlw	0
   426  0531  3406               	retlw	6
   427  0532  3400               	retlw	0
   428  0533  345B               	retlw	91
   429  0534  3400               	retlw	0
   430  0535  344F               	retlw	79
   431  0536  3400               	retlw	0
   432  0537  3466               	retlw	102
   433  0538  3400               	retlw	0
   434  0539  346D               	retlw	109
   435  053A  3400               	retlw	0
   436  053B  347D               	retlw	125
   437  053C  3400               	retlw	0
   438  053D  3427               	retlw	39
   439  053E  3400               	retlw	0
   440  053F  347F               	retlw	127
   441  0540  3400               	retlw	0
   442  0541  346F               	retlw	111
   443  0542  3400               	retlw	0
   444  0543  345F               	retlw	95
   445  0544  3400               	retlw	0
   446  0545  347C               	retlw	124
   447  0546  3400               	retlw	0
   448  0547  3458               	retlw	88
   449  0548  3400               	retlw	0
   450  0549  345E               	retlw	94
   451  054A  3400               	retlw	0
   452  054B  3479               	retlw	121
   453  054C  3400               	retlw	0
   454  054D  3471               	retlw	113
   455  054E  3400               	retlw	0
   456                           
   457                           ;initializer for _moji
   458  054F  345F               	retlw	95
   459  0550  3400               	retlw	0
   460  0551  347C               	retlw	124
   461  0552  3400               	retlw	0
   462  0553  3458               	retlw	88
   463  0554  3400               	retlw	0
   464  0555  345E               	retlw	94
   465  0556  3400               	retlw	0
   466  0557  3479               	retlw	121
   467  0558  3400               	retlw	0
   468  0559  3471               	retlw	113
   469  055A  3400               	retlw	0
   470  055B  3476               	retlw	118
   471  055C  3400               	retlw	0
   472  055D  3438               	retlw	56
   473  055E  3400               	retlw	0
   474  055F  3454               	retlw	84
   475  0560  3400               	retlw	0
   476  0561  3473               	retlw	115
   477  0562  3400               	retlw	0
   478                           
   479                           ;initializer for _moja
   480  0563  345F               	retlw	95
   481  0564  3400               	retlw	0
   482  0565  347C               	retlw	124
   483  0566  3400               	retlw	0
   484  0567  3458               	retlw	88
   485  0568  3400               	retlw	0
   486  0569  345E               	retlw	94
   487  056A  3400               	retlw	0
   488  056B  3479               	retlw	121
   489  056C  3400               	retlw	0
   490  056D  3471               	retlw	113
   491  056E  3400               	retlw	0
   492                           
   493                           ;initializer for _kisu
   494  056F  3406               	retlw	6
   495  0570  3400               	retlw	0
   496  0571  344F               	retlw	79
   497  0572  3400               	retlw	0
   498  0573  346D               	retlw	109
   499  0574  3400               	retlw	0
   500  0575  3427               	retlw	39
   501  0576  3400               	retlw	0
   502  0577  346F               	retlw	111
   503  0578  3400               	retlw	0
   504                           
   505                           	psect	idataBANK2
   506  04EF                     __pidataBANK2:
   507                           
   508                           ;initializer for _samf
   509  04EF  3471               	retlw	113
   510  04F0  3400               	retlw	0
   511  04F1  3479               	retlw	121
   512  04F2  3400               	retlw	0
   513  04F3  345E               	retlw	94
   514  04F4  3400               	retlw	0
   515  04F5  3458               	retlw	88
   516  04F6  3400               	retlw	0
   517  04F7  347C               	retlw	124
   518  04F8  3400               	retlw	0
   519  04F9  345F               	retlw	95
   520  04FA  3400               	retlw	0
   521  04FB  346F               	retlw	111
   522  04FC  3400               	retlw	0
   523  04FD  347F               	retlw	127
   524  04FE  3400               	retlw	0
   525  04FF  3427               	retlw	39
   526  0500  3400               	retlw	0
   527  0501  347D               	retlw	125
   528  0502  3400               	retlw	0
   529  0503  346D               	retlw	109
   530  0504  3400               	retlw	0
   531  0505  3466               	retlw	102
   532  0506  3400               	retlw	0
   533  0507  344F               	retlw	79
   534  0508  3400               	retlw	0
   535  0509  345B               	retlw	91
   536  050A  3400               	retlw	0
   537  050B  3406               	retlw	6
   538  050C  3400               	retlw	0
   539  050D  343F               	retlw	63
   540  050E  3400               	retlw	0
   541                           
   542                           ;initializer for _num0
   543  050F  343F               	retlw	63
   544  0510  3400               	retlw	0
   545  0511  3406               	retlw	6
   546  0512  3400               	retlw	0
   547  0513  345B               	retlw	91
   548  0514  3400               	retlw	0
   549  0515  344F               	retlw	79
   550  0516  3400               	retlw	0
   551  0517  3466               	retlw	102
   552  0518  3400               	retlw	0
   553  0519  346D               	retlw	109
   554  051A  3400               	retlw	0
   555  051B  347D               	retlw	125
   556  051C  3400               	retlw	0
   557  051D  3427               	retlw	39
   558  051E  3400               	retlw	0
   559  051F  347F               	retlw	127
   560  0520  3400               	retlw	0
   561  0521  346F               	retlw	111
   562  0522  3400               	retlw	0
   563                           
   564                           ;initializer for _mojf
   565  0523  3471               	retlw	113
   566  0524  3400               	retlw	0
   567  0525  3479               	retlw	121
   568  0526  3400               	retlw	0
   569  0527  345E               	retlw	94
   570  0528  3400               	retlw	0
   571  0529  3458               	retlw	88
   572  052A  3400               	retlw	0
   573  052B  347C               	retlw	124
   574  052C  3400               	retlw	0
   575  052D  345F               	retlw	95
   576  052E  3400               	retlw	0
   577  000E                     _PORTC	set	14
   578  000D                     _PORTB	set	13
   579  000C                     _PORTA	set	12
   580  0061                     _RA1	set	97
   581  0060                     _RA0	set	96
   582  0062                     _RA2	set	98
   583  0077                     _RC7	set	119
   584  0072                     _RC2	set	114
   585  0071                     _RC1	set	113
   586  0070                     _RC0	set	112
   587  0076                     _RC6	set	118
   588  0075                     _RC5	set	117
   589  0099                     _OSCCON	set	153
   590  008E                     _TRISC	set	142
   591  008D                     _TRISB	set	141
   592  008C                     _TRISA	set	140
   593  018D                     _ANSELB	set	397
   594  018C                     _ANSELA	set	396
   595                           
   596                           	psect	cinit
   597  07CF                     start_initialization:	
   598                           ; #config settings
   599                           
   600  07CF                     __initialization:
   601                           
   602                           ; Initialize objects allocated to BANK0
   603  07CF  301D               	movlw	low __pidataBANK0
   604  07D0  0084               	movwf	4
   605  07D1  3084               	movlw	(high __pidataBANK0)| (0+128)
   606  07D2  0085               	movwf	5
   607  07D3  3058               	movlw	low __pdataBANK0
   608  07D4  0086               	movwf	6
   609  07D5  3000               	movlw	high __pdataBANK0
   610  07D6  0087               	movwf	7
   611  07D7  3012               	movlw	18
   612  07D8  3184  240E  3187   	fcall	init_ram
   613                           
   614                           ; Initialize objects allocated to BANK1
   615  07DB  302F               	movlw	low __pidataBANK1
   616  07DC  0084               	movwf	4
   617  07DD  3085               	movlw	(high __pidataBANK1)| (0+128)
   618  07DE  0085               	movwf	5
   619  07DF  30A0               	movlw	low __pdataBANK1
   620  07E0  0086               	movwf	6
   621  07E1  3000               	movlw	high __pdataBANK1
   622  07E2  0087               	movwf	7
   623  07E3  304A               	movlw	74
   624  07E4  3184  240E  3187   	fcall	init_ram
   625                           
   626                           ; Initialize objects allocated to BANK2
   627  07E7  30EF               	movlw	low __pidataBANK2
   628  07E8  0084               	movwf	4
   629  07E9  3084               	movlw	(high __pidataBANK2)| (0+128)
   630  07EA  0085               	movwf	5
   631  07EB  3020               	movlw	low __pdataBANK2
   632  07EC  0086               	movwf	6
   633  07ED  3001               	movlw	high __pdataBANK2
   634  07EE  0087               	movwf	7
   635  07EF  3040               	movlw	64
   636  07F0  3184  240E  3187   	fcall	init_ram
   637                           
   638                           ; Clear objects allocated to COMMON
   639  07F3  01FB               	clrf	__pbssCOMMON& (0+127)
   640  07F4  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   641                           
   642                           ; Clear objects allocated to BANK0
   643  07F5  3020               	movlw	low __pbssBANK0
   644  07F6  0084               	movwf	4
   645  07F7  3000               	movlw	high __pbssBANK0
   646  07F8  0085               	movwf	5
   647  07F9  3020               	movlw	32
   648  07FA  3184  2408  3187   	fcall	clear_ram0
   649  07FD                     end_of_initialization:	
   650                           ;End of C runtime variable initialization code
   651                           
   652  07FD                     __end_of__initialization:
   653  07FD  0020               	movlb	0
   654  07FE  3185  2DC5         	ljmp	_main	;jump to C main() function
   655                           
   656                           	psect	bssCOMMON
   657  007B                     __pbssCOMMON:
   658  007B                     _flag_sw3:
   659  007B                     	ds	2
   660                           
   661                           	psect	bssBANK0
   662  0020                     __pbssBANK0:
   663  0020                     _fugou:
   664  0020                     	ds	2
   665  0022                     _code1:
   666  0022                     	ds	2
   667  0024                     _code10:
   668  0024                     	ds	2
   669  0026                     _code100:
   670  0026                     	ds	2
   671  0028                     _code1000:
   672  0028                     	ds	2
   673  002A                     _count:
   674  002A                     	ds	2
   675  002C                     _atai:
   676  002C                     	ds	2
   677  002E                     _atai1:
   678  002E                     	ds	2
   679  0030                     _atai10:
   680  0030                     	ds	2
   681  0032                     _ccw:
   682  0032                     	ds	2
   683  0034                     _cw:
   684  0034                     	ds	2
   685  0036                     _flg:
   686  0036                     	ds	2
   687  0038                     _flag_P:
   688  0038                     	ds	2
   689  003A                     _flag_R:
   690  003A                     	ds	2
   691  003C                     _flag_sw2:
   692  003C                     	ds	2
   693  003E                     _flag_sw1:
   694  003E                     	ds	2
   695                           
   696                           	psect	dataBANK0
   697  0058                     __pdataBANK0:
   698  0058                     _gusu:
   699  0058                     	ds	10
   700  0062                     _mojn:
   701  0062                     	ds	4
   702  0066                     _mojh:
   703  0066                     	ds	4
   704                           
   705                           	psect	dataBANK1
   706  00A0                     __pdataBANK1:
   707  00A0                     _samp:
   708  00A0                     	ds	32
   709  00C0                     _moji:
   710  00C0                     	ds	20
   711  00D4                     _moja:
   712  00D4                     	ds	12
   713  00E0                     _kisu:
   714  00E0                     	ds	10
   715                           
   716                           	psect	dataBANK2
   717  0120                     __pdataBANK2:
   718  0120                     _samf:
   719  0120                     	ds	32
   720  0140                     _num0:
   721  0140                     	ds	20
   722  0154                     _mojf:
   723  0154                     	ds	12
   724                           
   725                           	psect	inittext
   726  040E                     init_ram:
   727  040E  00FE               	movwf	btemp
   728  040F                     initloop:
   729  040F  0012               	moviw fsr0++
   730  0410  001E               	movwi fsr1++
   731  0411  0BFE               	decfsz	btemp,f
   732  0412  2C0F               	goto	initloop
   733  0413  3400               	retlw	0
   734                           
   735                           	psect	clrtext
   736  0408                     clear_ram0:	
   737                           ;	Called with FSR0 containing the base address, and
   738                           ;	WREG with the size to clear
   739                           
   740  0408  0064               	clrwdt	;clear the watchdog before getting into this loop
   741  0409                     clrloop0:
   742  0409  0180               	clrf	0	;clear RAM location pointed to by FSR
   743  040A  3101               	addfsr 0,1
   744  040B  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   745  040C  2C09               	goto	clrloop0	;have we reached the end yet?
   746  040D  3400               	retlw	0	;all done for this memory range, return
   747                           
   748                           	psect	cstackCOMMON
   749  0070                     __pcstackCOMMON:
   750  0070                     ?_dynam:
   751  0070                     ?_portinit:	
   752                           ; 1 bytes @ 0x0
   753                           
   754  0070                     ??_portinit:	
   755                           ; 1 bytes @ 0x0
   756                           
   757  0070                     ?_zenoff:	
   758                           ; 1 bytes @ 0x0
   759                           
   760  0070                     ??_zenoff:	
   761                           ; 1 bytes @ 0x0
   762                           
   763  0070                     ?_tactsw:	
   764                           ; 1 bytes @ 0x0
   765                           
   766  0070                     ??_tactsw:	
   767                           ; 1 bytes @ 0x0
   768                           
   769  0070                     ?_main:	
   770                           ; 1 bytes @ 0x0
   771                           
   772  0070                     ?___lwdiv:	
   773                           ; 1 bytes @ 0x0
   774                           
   775  0070                     dynam@dig1data:	
   776                           ; 2 bytes @ 0x0
   777                           
   778  0070                     ___lwdiv@divisor:	
   779                           ; 2 bytes @ 0x0
   780                           
   781                           
   782                           ; 2 bytes @ 0x0
   783  0070                     	ds	2
   784  0072                     dynam@dig2data:
   785  0072                     tactsw@b:	
   786                           ; 2 bytes @ 0x2
   787                           
   788  0072                     ___lwdiv@dividend:	
   789                           ; 2 bytes @ 0x2
   790                           
   791                           
   792                           ; 2 bytes @ 0x2
   793  0072                     	ds	2
   794  0074                     ??___lwdiv:
   795  0074                     dynam@smdata:	
   796                           ; 1 bytes @ 0x4
   797                           
   798  0074                     tactsw@c:	
   799                           ; 2 bytes @ 0x4
   800                           
   801                           
   802                           ; 2 bytes @ 0x4
   803  0074                     	ds	1
   804  0075                     ___lwdiv@quotient:
   805                           
   806                           ; 2 bytes @ 0x5
   807  0075                     	ds	1
   808  0076                     dynam@tr:
   809  0076                     tactsw@a:	
   810                           ; 2 bytes @ 0x6
   811                           
   812                           
   813                           ; 2 bytes @ 0x6
   814  0076                     	ds	1
   815  0077                     ___lwdiv@counter:
   816                           
   817                           ; 1 bytes @ 0x7
   818  0077                     	ds	1
   819  0078                     ??_dynam:
   820  0078                     ??_waitSEG:	
   821                           ; 1 bytes @ 0x8
   822                           
   823  0078                     ?_tact:	
   824                           ; 1 bytes @ 0x8
   825                           
   826  0078                     waitSEG@i:	
   827                           ; 1 bytes @ 0x8
   828                           
   829  0078                     tact@mode:	
   830                           ; 2 bytes @ 0x8
   831                           
   832                           
   833                           ; 2 bytes @ 0x8
   834  0078                     	ds	2
   835  007A                     ??_tact:
   836  007A                     ??_main:	
   837                           ; 1 bytes @ 0xA
   838                           
   839                           
   840                           ; 1 bytes @ 0xA
   841  007A                     	ds	1
   842                           
   843                           	psect	cstackBANK0
   844  0040                     __pcstackBANK0:
   845  0040                     dynam@smd:
   846                           
   847                           ; 2 bytes @ 0x0
   848  0040                     	ds	2
   849  0042                     dynam@tm:
   850                           
   851                           ; 2 bytes @ 0x2
   852  0042                     	ds	2
   853  0044                     dynam@j:
   854                           
   855                           ; 2 bytes @ 0x4
   856  0044                     	ds	2
   857  0046                     dynam@ext:
   858                           
   859                           ; 2 bytes @ 0x6
   860  0046                     	ds	2
   861  0048                     ?_waitSEG:
   862  0048                     waitSEG@seg1:	
   863                           ; 1 bytes @ 0x8
   864                           
   865                           
   866                           ; 2 bytes @ 0x8
   867  0048                     	ds	2
   868  004A                     waitSEG@seg2:
   869                           
   870                           ; 2 bytes @ 0xA
   871  004A                     	ds	2
   872  004C                     waitSEG@wt:
   873                           
   874                           ; 2 bytes @ 0xC
   875  004C                     	ds	10
   876  0056                     main@i:
   877                           
   878                           ; 2 bytes @ 0x16
   879  0056                     	ds	2
   880                           
   881                           	psect	maintext
   882  05C5                     __pmaintext:	
   883 ;;
   884 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   885 ;;
   886 ;; *************** function _main *****************
   887 ;; Defined at:
   888 ;;		line 463 in file "Q2.c"
   889 ;; Parameters:    Size  Location     Type
   890 ;;		None
   891 ;; Auto vars:     Size  Location     Type
   892 ;;  i               2   22[BANK0 ] int 
   893 ;;  n               2    0        int 
   894 ;;  m               2    0        int 
   895 ;;  k               2    0        int 
   896 ;;  j               2    0        int 
   897 ;; Return value:  Size  Location     Type
   898 ;;                  1    wreg      void 
   899 ;; Registers used:
   900 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   901 ;; Tracked objects:
   902 ;;		On entry : B1F/0
   903 ;;		On exit  : 0/0
   904 ;;		Unchanged: 0/0
   905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   907 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
   908 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   909 ;;      Totals:         1      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
   910 ;;Total ram usage:       11 bytes
   911 ;; Hardware stack levels required when called:    2
   912 ;; This function calls:
   913 ;;		_dynam
   914 ;;		_portinit
   915 ;;		_tact
   916 ;;		_waitSEG
   917 ;;		_zenoff
   918 ;; This function is called by:
   919 ;;		Startup code after reset
   920 ;; This function uses a non-reentrant model
   921 ;;
   922                           
   923                           
   924                           ;psect for function _main
   925  05C5                     _main:
   926  05C5                     l2104:	
   927                           ;incstack = 0
   928                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   929                           
   930                           
   931                           ;Q2.c: 466:     OSCCON=0x7A;
   932  05C5  307A               	movlw	122
   933  05C6  0021               	movlb	1	; select bank1
   934  05C7  0099               	movwf	25	;volatile
   935  05C8                     l2106:
   936                           
   937                           ;Q2.c: 468:     portinit();
   938  05C8  3184  242F  3185   	fcall	_portinit
   939                           
   940                           ;Q2.c: 470:     zenoff();
   941  05CB  3184  2414  3185   	fcall	_zenoff
   942  05CE                     l2108:
   943  05CE                     l2110:
   944  05CE                     l2112:
   945  05CE                     l2114:
   946  05CE                     l2116:
   947  05CE                     l265:	
   948                           ;Q2.c: 475:     while((RA0!=1)||(RA1!=1)||(RA2!=1));
   949                           
   950  05CE  0020               	movlb	0	; select bank0
   951  05CF  1C0C               	btfss	12,0	;volatile
   952  05D0  2DD2               	goto	u1651
   953  05D1  2DD3               	goto	u1650
   954  05D2                     u1651:
   955  05D2  2DCE               	goto	l265
   956  05D3                     u1650:
   957  05D3                     l2118:
   958  05D3  1C8C               	btfss	12,1	;volatile
   959  05D4  2DD6               	goto	u1661
   960  05D5  2DD7               	goto	u1660
   961  05D6                     u1661:
   962  05D6  2DCE               	goto	l265
   963  05D7                     u1660:
   964  05D7                     l2120:
   965  05D7  1D0C               	btfss	12,2	;volatile
   966  05D8  2DDA               	goto	u1671
   967  05D9  2DDB               	goto	u1670
   968  05DA                     u1671:
   969  05DA  2DCE               	goto	l265
   970  05DB                     u1670:
   971  05DB                     l267:
   972                           
   973                           ;Q2.c: 478:     RC0=RC2=RC1=1;
   974  05DB  148E               	bsf	14,1	;volatile
   975  05DC  188E               	btfsc	14,1	;volatile
   976  05DD  2DDF               	goto	u1681
   977  05DE  2DE2               	goto	u1680
   978  05DF                     u1681:
   979  05DF  0020               	movlb	0	; select bank0
   980  05E0  150E               	bsf	14,2	;volatile
   981  05E1  2DE4               	goto	u1694
   982  05E2                     u1680:
   983  05E2  0020               	movlb	0	; select bank0
   984  05E3  110E               	bcf	14,2	;volatile
   985  05E4                     u1694:
   986  05E4  190E               	btfsc	14,2	;volatile
   987  05E5  2DE7               	goto	u1691
   988  05E6  2DEA               	goto	u1690
   989  05E7                     u1691:
   990  05E7  0020               	movlb	0	; select bank0
   991  05E8  140E               	bsf	14,0	;volatile
   992  05E9  2DEC               	goto	u1704
   993  05EA                     u1690:
   994  05EA  0020               	movlb	0	; select bank0
   995  05EB  100E               	bcf	14,0	;volatile
   996  05EC                     u1704:
   997  05EC                     l268:	
   998                           ;Q2.c: 482:     while(1){
   999                           
  1000                           
  1001                           ;Q2.c: 483:         if(RA0 == 0){
  1002  05EC  180C               	btfsc	12,0	;volatile
  1003  05ED  2DEF               	goto	u1711
  1004  05EE  2DF0               	goto	u1710
  1005  05EF                     u1711:
  1006  05EF  2DEC               	goto	l268
  1007  05F0                     u1710:
  1008  05F0                     l272:	
  1009                           ;Q2.c: 488:     while(1){
  1010                           
  1011                           
  1012                           ;Q2.c: 489:         if(RA0 == 0){
  1013  05F0  180C               	btfsc	12,0	;volatile
  1014  05F1  2DF3               	goto	u1721
  1015  05F2  2DF4               	goto	u1720
  1016  05F3                     u1721:
  1017  05F3  2DF0               	goto	l272
  1018  05F4                     u1720:
  1019  05F4                     l2124:
  1020                           
  1021                           ;Q2.c: 491:             dynam(0x40,0x40,0,0);
  1022  05F4  3040               	movlw	64
  1023  05F5  00F0               	movwf	dynam@dig1data
  1024  05F6  3000               	movlw	0
  1025  05F7  00F1               	movwf	dynam@dig1data+1
  1026  05F8  3040               	movlw	64
  1027  05F9  00F2               	movwf	dynam@dig2data
  1028  05FA  3000               	movlw	0
  1029  05FB  00F3               	movwf	dynam@dig2data+1
  1030  05FC  3000               	movlw	0
  1031  05FD  00F4               	movwf	dynam@smdata
  1032  05FE  00F5               	movwf	dynam@smdata+1
  1033  05FF  3000               	movlw	0
  1034  0600  00F6               	movwf	dynam@tr
  1035  0601  00F7               	movwf	dynam@tr+1
  1036  0602  3186  2665  3185   	fcall	_dynam
  1037                           
  1038                           ;Q2.c: 492:             tact(2);
  1039  0605  3002               	movlw	2
  1040  0606  00F8               	movwf	tact@mode
  1041  0607  3000               	movlw	0
  1042  0608  00F9               	movwf	tact@mode+1
  1043  0609  3185  2579  3185   	fcall	_tact
  1044  060C                     l2126:
  1045                           
  1046                           ;Q2.c: 494:             if((flag_P = 1)&&(flag_R = 1)){
  1047  060C  3001               	movlw	1
  1048  060D  0020               	movlb	0	; select bank0
  1049  060E  00B8               	movwf	_flag_P
  1050  060F  3000               	movlw	0
  1051  0610  00B9               	movwf	_flag_P+1
  1052  0611                     l2128:
  1053  0611  3001               	movlw	1
  1054  0612  00BA               	movwf	_flag_R
  1055  0613  3000               	movlw	0
  1056  0614  00BB               	movwf	_flag_R+1
  1057  0615                     l2130:
  1058                           
  1059                           ;Q2.c: 498:                     for(i = 1;i <= 4; i++){
  1060  0615  3001               	movlw	1
  1061  0616  0020               	movlb	0	; select bank0
  1062  0617  00D6               	movwf	main@i
  1063  0618  3000               	movlw	0
  1064  0619  00D7               	movwf	main@i+1
  1065  061A                     l2136:
  1066                           
  1067                           ;Q2.c: 500:                         waitSEG(moji[i],moji[i],1000);
  1068  061A  0020               	movlb	0	; select bank0
  1069  061B  3556               	lslf	main@i,w
  1070  061C  3EC0               	addlw	(low (_moji| 0))& (0+255)
  1071  061D  0086               	movwf	6
  1072  061E  0187               	clrf	7
  1073  061F  3F40               	moviw [0]fsr1
  1074  0620  00C8               	movwf	waitSEG@seg1
  1075  0621  3F41               	moviw [1]fsr1
  1076  0622  00C9               	movwf	waitSEG@seg1+1
  1077  0623  3556               	lslf	main@i,w
  1078  0624  3EC0               	addlw	(low (_moji| 0))& (0+255)
  1079  0625  0086               	movwf	6
  1080  0626  0187               	clrf	7
  1081  0627  3F40               	moviw [0]fsr1
  1082  0628  00CA               	movwf	waitSEG@seg2
  1083  0629  3F41               	moviw [1]fsr1
  1084  062A  00CB               	movwf	waitSEG@seg2+1
  1085  062B  30E8               	movlw	232
  1086  062C  00CC               	movwf	waitSEG@wt
  1087  062D  3003               	movlw	3
  1088  062E  00CD               	movwf	waitSEG@wt+1
  1089  062F  3184  2442  3185   	fcall	_waitSEG
  1090  0632                     l2138:
  1091                           
  1092                           ;Q2.c: 502:                         if(RA0 = 1){
  1093  0632  0020               	movlb	0	; select bank0
  1094  0633  140C               	bsf	12,0	;volatile
  1095  0634  1C0C               	btfss	12,0	;volatile
  1096  0635  2E37               	goto	u1731
  1097  0636  2E38               	goto	u1730
  1098  0637                     u1731:
  1099  0637  2E51               	goto	l2142
  1100  0638                     u1730:
  1101  0638                     l2140:
  1102                           
  1103                           ;Q2.c: 505:                                 waitSEG(moji[i],moji[i],1000);
  1104  0638  0020               	movlb	0	; select bank0
  1105  0639  3556               	lslf	main@i,w
  1106  063A  3EC0               	addlw	(low (_moji| 0))& (0+255)
  1107  063B  0086               	movwf	6
  1108  063C  0187               	clrf	7
  1109  063D  3F40               	moviw [0]fsr1
  1110  063E  00C8               	movwf	waitSEG@seg1
  1111  063F  3F41               	moviw [1]fsr1
  1112  0640  00C9               	movwf	waitSEG@seg1+1
  1113  0641  3556               	lslf	main@i,w
  1114  0642  3EC0               	addlw	(low (_moji| 0))& (0+255)
  1115  0643  0086               	movwf	6
  1116  0644  0187               	clrf	7
  1117  0645  3F40               	moviw [0]fsr1
  1118  0646  00CA               	movwf	waitSEG@seg2
  1119  0647  3F41               	moviw [1]fsr1
  1120  0648  00CB               	movwf	waitSEG@seg2+1
  1121  0649  30E8               	movlw	232
  1122  064A  00CC               	movwf	waitSEG@wt
  1123  064B  3003               	movlw	3
  1124  064C  00CD               	movwf	waitSEG@wt+1
  1125  064D  3184  2442  3185   	fcall	_waitSEG
  1126  0650  2E38               	goto	l2140
  1127  0651                     l2142:
  1128                           
  1129                           ;Q2.c: 513:                     }
  1130  0651  3001               	movlw	1
  1131  0652  07D6               	addwf	main@i,f
  1132  0653  3000               	movlw	0
  1133  0654  3DD7               	addwfc	main@i+1,f
  1134  0655  0857               	movf	main@i+1,w
  1135  0656  3A80               	xorlw	128
  1136  0657  00FA               	movwf	??_main
  1137  0658  3080               	movlw	128
  1138  0659  027A               	subwf	??_main,w
  1139  065A  1D03               	skipz
  1140  065B  2E5E               	goto	u1745
  1141  065C  3005               	movlw	5
  1142  065D  0256               	subwf	main@i,w
  1143  065E                     u1745:
  1144  065E  1C03               	skipc
  1145  065F  2E61               	goto	u1741
  1146  0660  2E62               	goto	u1740
  1147  0661                     u1741:
  1148  0661  2E1A               	goto	l2136
  1149  0662                     u1740:
  1150  0662  2E15               	goto	l2130
  1151  0663  3180  2802         	ljmp	start
  1152  0665                     __end_of_main:
  1153                           
  1154                           	psect	text1
  1155  0414                     __ptext1:	
  1156 ;; *************** function _zenoff *****************
  1157 ;; Defined at:
  1158 ;;		line 206 in file "Q2.c"
  1159 ;; Parameters:    Size  Location     Type
  1160 ;;		None
  1161 ;; Auto vars:     Size  Location     Type
  1162 ;;		None
  1163 ;; Return value:  Size  Location     Type
  1164 ;;                  1    wreg      void 
  1165 ;; Registers used:
  1166 ;;		status,2
  1167 ;; Tracked objects:
  1168 ;;		On entry : 0/0
  1169 ;;		On exit  : 0/0
  1170 ;;		Unchanged: 0/0
  1171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1176 ;;Total ram usage:        0 bytes
  1177 ;; Hardware stack levels used:    1
  1178 ;; This function calls:
  1179 ;;		Nothing
  1180 ;; This function is called by:
  1181 ;;		_main
  1182 ;; This function uses a non-reentrant model
  1183 ;;
  1184                           
  1185                           
  1186                           ;psect for function _zenoff
  1187  0414                     _zenoff:
  1188  0414                     l1808:	
  1189                           ;incstack = 0
  1190                           ; Regs used in _zenoff: [status,2]
  1191                           
  1192                           
  1193                           ;Q2.c: 208:     RC0=1;
  1194  0414  0020               	movlb	0	; select bank0
  1195  0415  140E               	bsf	14,0	;volatile
  1196                           
  1197                           ;Q2.c: 209:     RC1=1;
  1198  0416  148E               	bsf	14,1	;volatile
  1199                           
  1200                           ;Q2.c: 210:     RC2=1;
  1201  0417  150E               	bsf	14,2	;volatile
  1202  0418                     l1810:
  1203                           
  1204                           ;Q2.c: 211:     PORTB=0x00;
  1205  0418  018D               	clrf	13	;volatile
  1206  0419                     l1812:
  1207                           
  1208                           ;Q2.c: 212:     RC7=0;RC7=1;RC7=0;
  1209  0419  138E               	bcf	14,7	;volatile
  1210  041A                     l1814:
  1211  041A  178E               	bsf	14,7	;volatile
  1212  041B                     l1816:
  1213  041B  138E               	bcf	14,7	;volatile
  1214  041C                     l115:
  1215  041C  0008               	return
  1216  041D                     __end_of_zenoff:
  1217                           
  1218                           	psect	text2
  1219  0442                     __ptext2:	
  1220 ;; *************** function _waitSEG *****************
  1221 ;; Defined at:
  1222 ;;		line 187 in file "Q2.c"
  1223 ;; Parameters:    Size  Location     Type
  1224 ;;  seg1            2    8[BANK0 ] unsigned short 
  1225 ;;  seg2            2   10[BANK0 ] unsigned short 
  1226 ;;  wt              2   12[BANK0 ] unsigned short 
  1227 ;; Auto vars:     Size  Location     Type
  1228 ;;  i               2    8[COMMON] unsigned int 
  1229 ;; Return value:  Size  Location     Type
  1230 ;;                  1    wreg      void 
  1231 ;; Registers used:
  1232 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1233 ;; Tracked objects:
  1234 ;;		On entry : 0/0
  1235 ;;		On exit  : 0/0
  1236 ;;		Unchanged: 0/0
  1237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1238 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1239 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1241 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1242 ;;Total ram usage:        8 bytes
  1243 ;; Hardware stack levels used:    1
  1244 ;; Hardware stack levels required when called:    1
  1245 ;; This function calls:
  1246 ;;		___lwdiv
  1247 ;;		_dynam
  1248 ;; This function is called by:
  1249 ;;		_main
  1250 ;; This function uses a non-reentrant model
  1251 ;;
  1252                           
  1253                           
  1254                           ;psect for function _waitSEG
  1255  0442                     _waitSEG:
  1256  0442                     l1794:	
  1257                           ;incstack = 0
  1258                           ; Regs used in _waitSEG: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1259                           
  1260                           
  1261                           ;Q2.c: 187: void waitSEG(unsigned short seg1,unsigned short seg2,unsigned short wt);Q2.c
      +                          : 188: {;Q2.c: 189:     wt = wt / 10;
  1262  0442  300A               	movlw	10
  1263  0443  00F0               	movwf	___lwdiv@divisor
  1264  0444  3000               	movlw	0
  1265  0445  00F1               	movwf	___lwdiv@divisor+1
  1266  0446  0020               	movlb	0	; select bank0
  1267  0447  084D               	movf	waitSEG@wt+1,w
  1268  0448  00F3               	movwf	___lwdiv@dividend+1
  1269  0449  084C               	movf	waitSEG@wt,w
  1270  044A  00F2               	movwf	___lwdiv@dividend
  1271  044B  3184  2476  3184   	fcall	___lwdiv
  1272  044E  0871               	movf	?___lwdiv+1,w
  1273  044F  0020               	movlb	0	; select bank0
  1274  0450  00CD               	movwf	waitSEG@wt+1
  1275  0451  0870               	movf	?___lwdiv,w
  1276  0452  00CC               	movwf	waitSEG@wt
  1277  0453                     l1796:
  1278                           
  1279                           ;Q2.c: 190:     unsigned int i;;Q2.c: 191:     for(i=wt;i>0;--i){
  1280  0453  084D               	movf	waitSEG@wt+1,w
  1281  0454  00F9               	movwf	waitSEG@i+1
  1282  0455  084C               	movf	waitSEG@wt,w
  1283  0456  00F8               	movwf	waitSEG@i
  1284  0457                     l1798:
  1285  0457  0878               	movf	waitSEG@i,w
  1286  0458  0479               	iorwf	waitSEG@i+1,w
  1287  0459  1D03               	btfss	3,2
  1288  045A  2C5C               	goto	u1231
  1289  045B  2C5D               	goto	u1230
  1290  045C                     u1231:
  1291  045C  2C5E               	goto	l1802
  1292  045D                     u1230:
  1293  045D  2C75               	goto	l109
  1294  045E                     l1802:
  1295                           
  1296                           ;Q2.c: 192:         dynam(seg1,seg2,0,0);
  1297  045E  0020               	movlb	0	; select bank0
  1298  045F  0849               	movf	waitSEG@seg1+1,w
  1299  0460  00F1               	movwf	dynam@dig1data+1
  1300  0461  0848               	movf	waitSEG@seg1,w
  1301  0462  00F0               	movwf	dynam@dig1data
  1302  0463  084B               	movf	waitSEG@seg2+1,w
  1303  0464  00F3               	movwf	dynam@dig2data+1
  1304  0465  084A               	movf	waitSEG@seg2,w
  1305  0466  00F2               	movwf	dynam@dig2data
  1306  0467  3000               	movlw	0
  1307  0468  00F4               	movwf	dynam@smdata
  1308  0469  00F5               	movwf	dynam@smdata+1
  1309  046A  3000               	movlw	0
  1310  046B  00F6               	movwf	dynam@tr
  1311  046C  00F7               	movwf	dynam@tr+1
  1312  046D  3186  2665  3184   	fcall	_dynam
  1313  0470                     l1804:
  1314                           
  1315                           ;Q2.c: 193:     }
  1316  0470  3001               	movlw	1
  1317  0471  02F8               	subwf	waitSEG@i,f
  1318  0472  3000               	movlw	0
  1319  0473  3BF9               	subwfb	waitSEG@i+1,f
  1320  0474  2C57               	goto	l1798
  1321  0475                     l109:
  1322  0475  0008               	return
  1323  0476                     __end_of_waitSEG:
  1324                           
  1325                           	psect	text3
  1326  0665                     __ptext3:	
  1327 ;; *************** function _dynam *****************
  1328 ;; Defined at:
  1329 ;;		line 217 in file "Q2.c"
  1330 ;; Parameters:    Size  Location     Type
  1331 ;;  dig1data        2    0[COMMON] unsigned short 
  1332 ;;  dig2data        2    2[COMMON] unsigned short 
  1333 ;;  smdata          2    4[COMMON] unsigned short 
  1334 ;;  tr              2    6[COMMON] unsigned int 
  1335 ;; Auto vars:     Size  Location     Type
  1336 ;;  ext             2    6[BANK0 ] unsigned short 
  1337 ;;  j               2    4[BANK0 ] unsigned int 
  1338 ;;  tm              2    2[BANK0 ] unsigned int 
  1339 ;;  smd             2    0[BANK0 ] unsigned short 
  1340 ;; Return value:  Size  Location     Type
  1341 ;;                  1    wreg      void 
  1342 ;; Registers used:
  1343 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1344 ;; Tracked objects:
  1345 ;;		On entry : 0/0
  1346 ;;		On exit  : 0/0
  1347 ;;		Unchanged: 0/0
  1348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1349 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1350 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1352 ;;      Totals:         8       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1353 ;;Total ram usage:       16 bytes
  1354 ;; Hardware stack levels used:    1
  1355 ;; This function calls:
  1356 ;;		Nothing
  1357 ;; This function is called by:
  1358 ;;		_waitSEG
  1359 ;;		_main
  1360 ;;		_clear
  1361 ;; This function uses a non-reentrant model
  1362 ;;
  1363                           
  1364                           
  1365                           ;psect for function _dynam
  1366  0665                     _dynam:
  1367  0665                     l1564:	
  1368                           ;incstack = 0
  1369                           ; Regs used in _dynam: [wreg-fsr0h+status,2+status,0]
  1370                           
  1371  0665  0020               	movlb	0	; select bank0
  1372  0666  01C2               	clrf	dynam@tm
  1373  0667  01C3               	clrf	dynam@tm+1
  1374                           
  1375                           ;Q2.c: 220:     unsigned short ext=0,smd=0;
  1376  0668  01C6               	clrf	dynam@ext
  1377  0669  01C7               	clrf	dynam@ext+1
  1378  066A  01C0               	clrf	dynam@smd
  1379  066B  01C1               	clrf	dynam@smd+1
  1380  066C                     l1566:
  1381                           
  1382                           ;Q2.c: 221:     RC7=0;
  1383  066C  138E               	bcf	14,7	;volatile
  1384  066D                     l1568:
  1385                           
  1386                           ;Q2.c: 222:     PORTB=dig1data;
  1387  066D  0870               	movf	dynam@dig1data,w
  1388  066E  008D               	movwf	13	;volatile
  1389  066F                     l1570:
  1390                           
  1391                           ;Q2.c: 223:     RC5=0;RC6=1;
  1392  066F  128E               	bcf	14,5	;volatile
  1393  0670                     l1572:
  1394  0670  170E               	bsf	14,6	;volatile
  1395  0671                     l1574:
  1396                           
  1397                           ;Q2.c: 224:     if(tr==5){tm=4000;}
  1398  0671  3005               	movlw	5
  1399  0672  0676               	xorwf	dynam@tr,w
  1400  0673  0477               	iorwf	dynam@tr+1,w
  1401  0674  1D03               	btfss	3,2
  1402  0675  2E77               	goto	u901
  1403  0676  2E78               	goto	u900
  1404  0677                     u901:
  1405  0677  2E7D               	goto	l1578
  1406  0678                     u900:
  1407  0678                     l1576:
  1408  0678  30A0               	movlw	160
  1409  0679  00C2               	movwf	dynam@tm
  1410  067A  300F               	movlw	15
  1411  067B  00C3               	movwf	dynam@tm+1
  1412  067C  2E81               	goto	l119
  1413  067D                     l1578:
  1414  067D  30D0               	movlw	208
  1415  067E  00C2               	movwf	dynam@tm
  1416  067F  3007               	movlw	7
  1417  0680  00C3               	movwf	dynam@tm+1
  1418  0681                     l119:
  1419                           
  1420                           ;Q2.c: 226:     for(j=tm;j>0;--j);
  1421  0681  0843               	movf	dynam@tm+1,w
  1422  0682  00C5               	movwf	dynam@j+1
  1423  0683  0842               	movf	dynam@tm,w
  1424  0684  00C4               	movwf	dynam@j
  1425  0685                     l1580:
  1426  0685  0844               	movf	dynam@j,w
  1427  0686  0445               	iorwf	dynam@j+1,w
  1428  0687  1D03               	btfss	3,2
  1429  0688  2E8A               	goto	u911
  1430  0689  2E8B               	goto	u910
  1431  068A                     u911:
  1432  068A  2E8C               	goto	l1584
  1433  068B                     u910:
  1434  068B  2E91               	goto	l121
  1435  068C                     l1584:
  1436  068C  3001               	movlw	1
  1437  068D  02C4               	subwf	dynam@j,f
  1438  068E  3000               	movlw	0
  1439  068F  3BC5               	subwfb	dynam@j+1,f
  1440  0690  2E85               	goto	l1580
  1441  0691                     l121:
  1442                           
  1443                           ;Q2.c: 227:     RC5=0;RC6=0;
  1444  0691  128E               	bcf	14,5	;volatile
  1445  0692  130E               	bcf	14,6	;volatile
  1446  0693                     l1588:
  1447                           
  1448                           ;Q2.c: 228:     PORTB=dig2data;
  1449  0693  0872               	movf	dynam@dig2data,w
  1450  0694  008D               	movwf	13	;volatile
  1451  0695                     l1590:
  1452                           
  1453                           ;Q2.c: 229:     RC6=0;RC5=1;
  1454  0695  130E               	bcf	14,6	;volatile
  1455  0696                     l1592:
  1456  0696  168E               	bsf	14,5	;volatile
  1457  0697                     l1594:
  1458                           
  1459                           ;Q2.c: 230:     if(tr==5){tm=4000;}
  1460  0697  3005               	movlw	5
  1461  0698  0676               	xorwf	dynam@tr,w
  1462  0699  0477               	iorwf	dynam@tr+1,w
  1463  069A  1D03               	btfss	3,2
  1464  069B  2E9D               	goto	u921
  1465  069C  2E9E               	goto	u920
  1466  069D                     u921:
  1467  069D  2EA3               	goto	l1598
  1468  069E                     u920:
  1469  069E                     l1596:
  1470  069E  30A0               	movlw	160
  1471  069F  00C2               	movwf	dynam@tm
  1472  06A0  300F               	movlw	15
  1473  06A1  00C3               	movwf	dynam@tm+1
  1474  06A2  2EA7               	goto	l123
  1475  06A3                     l1598:
  1476  06A3  30D0               	movlw	208
  1477  06A4  00C2               	movwf	dynam@tm
  1478  06A5  3007               	movlw	7
  1479  06A6  00C3               	movwf	dynam@tm+1
  1480  06A7                     l123:
  1481                           
  1482                           ;Q2.c: 232:     for(j=tm;j>0;--j);
  1483  06A7  0843               	movf	dynam@tm+1,w
  1484  06A8  00C5               	movwf	dynam@j+1
  1485  06A9  0842               	movf	dynam@tm,w
  1486  06AA  00C4               	movwf	dynam@j
  1487  06AB                     l1600:
  1488  06AB  0844               	movf	dynam@j,w
  1489  06AC  0445               	iorwf	dynam@j+1,w
  1490  06AD  1D03               	btfss	3,2
  1491  06AE  2EB0               	goto	u931
  1492  06AF  2EB1               	goto	u930
  1493  06B0                     u931:
  1494  06B0  2EB2               	goto	l1604
  1495  06B1                     u930:
  1496  06B1  2EB7               	goto	l125
  1497  06B2                     l1604:
  1498  06B2  3001               	movlw	1
  1499  06B3  02C4               	subwf	dynam@j,f
  1500  06B4  3000               	movlw	0
  1501  06B5  3BC5               	subwfb	dynam@j+1,f
  1502  06B6  2EAB               	goto	l1600
  1503  06B7                     l125:
  1504                           
  1505                           ;Q2.c: 233:     RC5=0;RC6=0;
  1506  06B7  128E               	bcf	14,5	;volatile
  1507  06B8  130E               	bcf	14,6	;volatile
  1508                           
  1509                           ;Q2.c: 234:     switch(smdata){
  1510  06B9  2FBE               	goto	l1714
  1511  06BA                     l1608:
  1512                           
  1513                           ;Q2.c: 236:                 PORTB=0x00;smd=(0x01|0x02|0x04|0x08|0x10|0x20);
  1514  06BA  018D               	clrf	13	;volatile
  1515  06BB                     l1610:
  1516  06BB                     l1612:
  1517                           
  1518                           ;Q2.c: 237:                 RC7=0;RC7=1;RC7=0;
  1519  06BB  138E               	bcf	14,7	;volatile
  1520  06BC                     l1614:
  1521  06BC  178E               	bsf	14,7	;volatile
  1522  06BD                     l1616:
  1523  06BD  138E               	bcf	14,7	;volatile
  1524                           
  1525                           ;Q2.c: 238:                 break;
  1526  06BE  2FCE               	goto	l142
  1527  06BF                     l1618:
  1528                           
  1529                           ;Q2.c: 240:                 if(flg==1)cw=0;flg=0;
  1530  06BF  0336               	decf	_flg,w
  1531  06C0  0437               	iorwf	_flg+1,w
  1532  06C1  1D03               	btfss	3,2
  1533  06C2  2EC4               	goto	u941
  1534  06C3  2EC5               	goto	u940
  1535  06C4                     u941:
  1536  06C4  2EC7               	goto	l130
  1537  06C5                     u940:
  1538  06C5                     l1620:
  1539  06C5  01B4               	clrf	_cw
  1540  06C6  01B5               	clrf	_cw+1
  1541  06C7                     l130:
  1542  06C7  01B6               	clrf	_flg
  1543  06C8  01B7               	clrf	_flg+1
  1544  06C9                     l1622:
  1545                           
  1546                           ;Q2.c: 241:                 if((cw==0)&&(ext==0)){cw=1;ccw=0;ext=1;PORTB=smd=0x09;}
  1547  06C9  0834               	movf	_cw,w
  1548  06CA  0435               	iorwf	_cw+1,w
  1549  06CB  1D03               	btfss	3,2
  1550  06CC  2ECE               	goto	u951
  1551  06CD  2ECF               	goto	u950
  1552  06CE                     u951:
  1553  06CE  2EE5               	goto	l1634
  1554  06CF                     u950:
  1555  06CF                     l1624:
  1556  06CF  0846               	movf	dynam@ext,w
  1557  06D0  0447               	iorwf	dynam@ext+1,w
  1558  06D1  1D03               	btfss	3,2
  1559  06D2  2ED4               	goto	u961
  1560  06D3  2ED5               	goto	u960
  1561  06D4                     u961:
  1562  06D4  2EE5               	goto	l1634
  1563  06D5                     u960:
  1564  06D5                     l1626:
  1565  06D5  3001               	movlw	1
  1566  06D6  00B4               	movwf	_cw
  1567  06D7  3000               	movlw	0
  1568  06D8  00B5               	movwf	_cw+1
  1569  06D9                     l1628:
  1570  06D9  01B2               	clrf	_ccw
  1571  06DA  01B3               	clrf	_ccw+1
  1572  06DB                     l1630:
  1573  06DB  3001               	movlw	1
  1574  06DC  00C6               	movwf	dynam@ext
  1575  06DD  3000               	movlw	0
  1576  06DE  00C7               	movwf	dynam@ext+1
  1577  06DF                     l1632:
  1578  06DF  3009               	movlw	9
  1579  06E0  00C0               	movwf	dynam@smd
  1580  06E1  3000               	movlw	0
  1581  06E2  00C1               	movwf	dynam@smd+1
  1582  06E3  0840               	movf	dynam@smd,w
  1583  06E4  008D               	movwf	13	;volatile
  1584  06E5                     l1634:
  1585                           
  1586                           ;Q2.c: 242:                 if((cw==1)&&(ext==0)){cw=2;ccw=3;ext=1;PORTB=smd=0x0C;}
  1587  06E5  0334               	decf	_cw,w
  1588  06E6  0435               	iorwf	_cw+1,w
  1589  06E7  1D03               	btfss	3,2
  1590  06E8  2EEA               	goto	u971
  1591  06E9  2EEB               	goto	u970
  1592  06EA                     u971:
  1593  06EA  2F03               	goto	l1640
  1594  06EB                     u970:
  1595  06EB                     l1636:
  1596  06EB  0846               	movf	dynam@ext,w
  1597  06EC  0447               	iorwf	dynam@ext+1,w
  1598  06ED  1D03               	btfss	3,2
  1599  06EE  2EF0               	goto	u981
  1600  06EF  2EF1               	goto	u980
  1601  06F0                     u981:
  1602  06F0  2F03               	goto	l1640
  1603  06F1                     u980:
  1604  06F1                     l1638:
  1605  06F1  3002               	movlw	2
  1606  06F2  00B4               	movwf	_cw
  1607  06F3  3000               	movlw	0
  1608  06F4  00B5               	movwf	_cw+1
  1609  06F5  3003               	movlw	3
  1610  06F6  00B2               	movwf	_ccw
  1611  06F7  3000               	movlw	0
  1612  06F8  00B3               	movwf	_ccw+1
  1613  06F9  3001               	movlw	1
  1614  06FA  00C6               	movwf	dynam@ext
  1615  06FB  3000               	movlw	0
  1616  06FC  00C7               	movwf	dynam@ext+1
  1617  06FD  300C               	movlw	12
  1618  06FE  00C0               	movwf	dynam@smd
  1619  06FF  3000               	movlw	0
  1620  0700  00C1               	movwf	dynam@smd+1
  1621  0701  0840               	movf	dynam@smd,w
  1622  0702  008D               	movwf	13	;volatile
  1623  0703                     l1640:
  1624                           
  1625                           ;Q2.c: 243:                 if((cw==2)&&(ext==0)){cw=3;ccw=2;ext=1;PORTB=smd=0x06;}
  1626  0703  3002               	movlw	2
  1627  0704  0634               	xorwf	_cw,w
  1628  0705  0435               	iorwf	_cw+1,w
  1629  0706  1D03               	btfss	3,2
  1630  0707  2F09               	goto	u991
  1631  0708  2F0A               	goto	u990
  1632  0709                     u991:
  1633  0709  2F22               	goto	l1646
  1634  070A                     u990:
  1635  070A                     l1642:
  1636  070A  0846               	movf	dynam@ext,w
  1637  070B  0447               	iorwf	dynam@ext+1,w
  1638  070C  1D03               	btfss	3,2
  1639  070D  2F0F               	goto	u1001
  1640  070E  2F10               	goto	u1000
  1641  070F                     u1001:
  1642  070F  2F22               	goto	l1646
  1643  0710                     u1000:
  1644  0710                     l1644:
  1645  0710  3003               	movlw	3
  1646  0711  00B4               	movwf	_cw
  1647  0712  3000               	movlw	0
  1648  0713  00B5               	movwf	_cw+1
  1649  0714  3002               	movlw	2
  1650  0715  00B2               	movwf	_ccw
  1651  0716  3000               	movlw	0
  1652  0717  00B3               	movwf	_ccw+1
  1653  0718  3001               	movlw	1
  1654  0719  00C6               	movwf	dynam@ext
  1655  071A  3000               	movlw	0
  1656  071B  00C7               	movwf	dynam@ext+1
  1657  071C  3006               	movlw	6
  1658  071D  00C0               	movwf	dynam@smd
  1659  071E  3000               	movlw	0
  1660  071F  00C1               	movwf	dynam@smd+1
  1661  0720  0840               	movf	dynam@smd,w
  1662  0721  008D               	movwf	13	;volatile
  1663  0722                     l1646:
  1664                           
  1665                           ;Q2.c: 244:                 if((cw==3)&&(ext==0)){cw=0;ccw=1;ext=1;PORTB=smd=0x03;}
  1666  0722  3003               	movlw	3
  1667  0723  0634               	xorwf	_cw,w
  1668  0724  0435               	iorwf	_cw+1,w
  1669  0725  1D03               	btfss	3,2
  1670  0726  2F28               	goto	u1011
  1671  0727  2F29               	goto	u1010
  1672  0728                     u1011:
  1673  0728  2EBB               	goto	l1612
  1674  0729                     u1010:
  1675  0729                     l1648:
  1676  0729  0846               	movf	dynam@ext,w
  1677  072A  0447               	iorwf	dynam@ext+1,w
  1678  072B  1D03               	btfss	3,2
  1679  072C  2F2E               	goto	u1021
  1680  072D  2F2F               	goto	u1020
  1681  072E                     u1021:
  1682  072E  2EBB               	goto	l1612
  1683  072F                     u1020:
  1684  072F                     l1650:
  1685  072F  01B4               	clrf	_cw
  1686  0730  01B5               	clrf	_cw+1
  1687  0731                     l1652:
  1688  0731  3001               	movlw	1
  1689  0732  00B2               	movwf	_ccw
  1690  0733  3000               	movlw	0
  1691  0734  00B3               	movwf	_ccw+1
  1692  0735                     l1654:
  1693  0735                     l1656:
  1694  0735  3003               	movlw	3
  1695  0736  00C0               	movwf	dynam@smd
  1696  0737  3000               	movlw	0
  1697  0738  00C1               	movwf	dynam@smd+1
  1698  0739  0840               	movf	dynam@smd,w
  1699  073A  008D               	movwf	13	;volatile
  1700  073B  2EBB               	goto	l1612
  1701  073C                     l1664:
  1702                           
  1703                           ;Q2.c: 248:                 if(flg==1)ccw=0;flg=0;
  1704  073C  0336               	decf	_flg,w
  1705  073D  0437               	iorwf	_flg+1,w
  1706  073E  1D03               	btfss	3,2
  1707  073F  2F41               	goto	u1031
  1708  0740  2F42               	goto	u1030
  1709  0741                     u1031:
  1710  0741  2F44               	goto	l136
  1711  0742                     u1030:
  1712  0742                     l1666:
  1713  0742  01B2               	clrf	_ccw
  1714  0743  01B3               	clrf	_ccw+1
  1715  0744                     l136:
  1716  0744  01B6               	clrf	_flg
  1717  0745  01B7               	clrf	_flg+1
  1718  0746                     l1668:
  1719                           
  1720                           ;Q2.c: 249:                 if((ccw==0)&&(ext==0)){ccw=1;cw=0;ext=1;PORTB=smd=0x03;}
  1721  0746  0832               	movf	_ccw,w
  1722  0747  0433               	iorwf	_ccw+1,w
  1723  0748  1D03               	btfss	3,2
  1724  0749  2F4B               	goto	u1041
  1725  074A  2F4C               	goto	u1040
  1726  074B                     u1041:
  1727  074B  2F62               	goto	l1680
  1728  074C                     u1040:
  1729  074C                     l1670:
  1730  074C  0846               	movf	dynam@ext,w
  1731  074D  0447               	iorwf	dynam@ext+1,w
  1732  074E  1D03               	btfss	3,2
  1733  074F  2F51               	goto	u1051
  1734  0750  2F52               	goto	u1050
  1735  0751                     u1051:
  1736  0751  2F62               	goto	l1680
  1737  0752                     u1050:
  1738  0752                     l1672:
  1739  0752  3001               	movlw	1
  1740  0753  00B2               	movwf	_ccw
  1741  0754  3000               	movlw	0
  1742  0755  00B3               	movwf	_ccw+1
  1743  0756                     l1674:
  1744  0756  01B4               	clrf	_cw
  1745  0757  01B5               	clrf	_cw+1
  1746  0758                     l1676:
  1747  0758  3001               	movlw	1
  1748  0759  00C6               	movwf	dynam@ext
  1749  075A  3000               	movlw	0
  1750  075B  00C7               	movwf	dynam@ext+1
  1751  075C                     l1678:
  1752  075C  3003               	movlw	3
  1753  075D  00C0               	movwf	dynam@smd
  1754  075E  3000               	movlw	0
  1755  075F  00C1               	movwf	dynam@smd+1
  1756  0760  0840               	movf	dynam@smd,w
  1757  0761  008D               	movwf	13	;volatile
  1758  0762                     l1680:
  1759                           
  1760                           ;Q2.c: 250:                 if((ccw==1)&&(ext==0)){ccw=2;cw=3;ext=1;PORTB=smd=0x06;}
  1761  0762  0332               	decf	_ccw,w
  1762  0763  0433               	iorwf	_ccw+1,w
  1763  0764  1D03               	btfss	3,2
  1764  0765  2F67               	goto	u1061
  1765  0766  2F68               	goto	u1060
  1766  0767                     u1061:
  1767  0767  2F80               	goto	l1686
  1768  0768                     u1060:
  1769  0768                     l1682:
  1770  0768  0846               	movf	dynam@ext,w
  1771  0769  0447               	iorwf	dynam@ext+1,w
  1772  076A  1D03               	btfss	3,2
  1773  076B  2F6D               	goto	u1071
  1774  076C  2F6E               	goto	u1070
  1775  076D                     u1071:
  1776  076D  2F80               	goto	l1686
  1777  076E                     u1070:
  1778  076E                     l1684:
  1779  076E  3002               	movlw	2
  1780  076F  00B2               	movwf	_ccw
  1781  0770  3000               	movlw	0
  1782  0771  00B3               	movwf	_ccw+1
  1783  0772  3003               	movlw	3
  1784  0773  00B4               	movwf	_cw
  1785  0774  3000               	movlw	0
  1786  0775  00B5               	movwf	_cw+1
  1787  0776  3001               	movlw	1
  1788  0777  00C6               	movwf	dynam@ext
  1789  0778  3000               	movlw	0
  1790  0779  00C7               	movwf	dynam@ext+1
  1791  077A  3006               	movlw	6
  1792  077B  00C0               	movwf	dynam@smd
  1793  077C  3000               	movlw	0
  1794  077D  00C1               	movwf	dynam@smd+1
  1795  077E  0840               	movf	dynam@smd,w
  1796  077F  008D               	movwf	13	;volatile
  1797  0780                     l1686:
  1798                           
  1799                           ;Q2.c: 251:                 if((ccw==2)&&(ext==0)){ccw=3;cw=2;ext=1;PORTB=smd=0x0C;}
  1800  0780  3002               	movlw	2
  1801  0781  0632               	xorwf	_ccw,w
  1802  0782  0433               	iorwf	_ccw+1,w
  1803  0783  1D03               	btfss	3,2
  1804  0784  2F86               	goto	u1081
  1805  0785  2F87               	goto	u1080
  1806  0786                     u1081:
  1807  0786  2F9F               	goto	l1692
  1808  0787                     u1080:
  1809  0787                     l1688:
  1810  0787  0846               	movf	dynam@ext,w
  1811  0788  0447               	iorwf	dynam@ext+1,w
  1812  0789  1D03               	btfss	3,2
  1813  078A  2F8C               	goto	u1091
  1814  078B  2F8D               	goto	u1090
  1815  078C                     u1091:
  1816  078C  2F9F               	goto	l1692
  1817  078D                     u1090:
  1818  078D                     l1690:
  1819  078D  3003               	movlw	3
  1820  078E  00B2               	movwf	_ccw
  1821  078F  3000               	movlw	0
  1822  0790  00B3               	movwf	_ccw+1
  1823  0791  3002               	movlw	2
  1824  0792  00B4               	movwf	_cw
  1825  0793  3000               	movlw	0
  1826  0794  00B5               	movwf	_cw+1
  1827  0795  3001               	movlw	1
  1828  0796  00C6               	movwf	dynam@ext
  1829  0797  3000               	movlw	0
  1830  0798  00C7               	movwf	dynam@ext+1
  1831  0799  300C               	movlw	12
  1832  079A  00C0               	movwf	dynam@smd
  1833  079B  3000               	movlw	0
  1834  079C  00C1               	movwf	dynam@smd+1
  1835  079D  0840               	movf	dynam@smd,w
  1836  079E  008D               	movwf	13	;volatile
  1837  079F                     l1692:
  1838                           
  1839                           ;Q2.c: 252:                 if((ccw==3)&&(ext==0)){ccw=0;cw=1;ext=1;PORTB=smd=0x09;}
  1840  079F  3003               	movlw	3
  1841  07A0  0632               	xorwf	_ccw,w
  1842  07A1  0433               	iorwf	_ccw+1,w
  1843  07A2  1D03               	btfss	3,2
  1844  07A3  2FA5               	goto	u1101
  1845  07A4  2FA6               	goto	u1100
  1846  07A5                     u1101:
  1847  07A5  2EBB               	goto	l1612
  1848  07A6                     u1100:
  1849  07A6                     l1694:
  1850  07A6  0846               	movf	dynam@ext,w
  1851  07A7  0447               	iorwf	dynam@ext+1,w
  1852  07A8  1D03               	btfss	3,2
  1853  07A9  2FAB               	goto	u1111
  1854  07AA  2FAC               	goto	u1110
  1855  07AB                     u1111:
  1856  07AB  2EBB               	goto	l1612
  1857  07AC                     u1110:
  1858  07AC                     l1696:
  1859  07AC  01B2               	clrf	_ccw
  1860  07AD  01B3               	clrf	_ccw+1
  1861  07AE                     l1698:
  1862  07AE  3001               	movlw	1
  1863  07AF  00B4               	movwf	_cw
  1864  07B0  3000               	movlw	0
  1865  07B1  00B5               	movwf	_cw+1
  1866  07B2                     l1700:
  1867  07B2                     l1702:
  1868  07B2  3009               	movlw	9
  1869  07B3  00C0               	movwf	dynam@smd
  1870  07B4  3000               	movlw	0
  1871  07B5  00C1               	movwf	dynam@smd+1
  1872  07B6  0840               	movf	dynam@smd,w
  1873  07B7  008D               	movwf	13	;volatile
  1874  07B8  2EBB               	goto	l1612
  1875  07B9                     l1710:
  1876                           
  1877                           ;Q2.c: 256:                 cw=ccw=0;
  1878  07B9  01B2               	clrf	_ccw
  1879  07BA  01B3               	clrf	_ccw+1
  1880  07BB  01B4               	clrf	_cw
  1881  07BC  01B5               	clrf	_cw+1
  1882                           
  1883                           ;Q2.c: 257:                 break;
  1884  07BD  2FCE               	goto	l142
  1885  07BE                     l1714:
  1886                           
  1887                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1888                           ; Switch size 1, requested type "simple"
  1889                           ; Number of cases is 1, Range of values is 0 to 0
  1890                           ; switch strategies available:
  1891                           ; Name         Instructions Cycles
  1892                           ; simple_byte            4     3 (average)
  1893                           ; direct_byte            8     6 (fixed)
  1894                           ; jumptable            260     6 (fixed)
  1895                           ;	Chosen strategy is simple_byte
  1896  07BE  0875               	movf	dynam@smdata+1,w
  1897  07BF  3A00               	xorlw	0	; case 0
  1898  07C0  1903               	skipnz
  1899  07C1  2FC3               	goto	l2280
  1900  07C2  2FB9               	goto	l1710
  1901  07C3                     l2280:
  1902                           
  1903                           ; Switch size 1, requested type "simple"
  1904                           ; Number of cases is 3, Range of values is 0 to 2
  1905                           ; switch strategies available:
  1906                           ; Name         Instructions Cycles
  1907                           ; simple_byte           10     6 (average)
  1908                           ; direct_byte           12     6 (fixed)
  1909                           ; jumptable            260     6 (fixed)
  1910                           ;	Chosen strategy is simple_byte
  1911  07C3  0874               	movf	dynam@smdata,w
  1912  07C4  3A00               	xorlw	0	; case 0
  1913  07C5  1903               	skipnz
  1914  07C6  2EBA               	goto	l1608
  1915  07C7  3A01               	xorlw	1	; case 1
  1916  07C8  1903               	skipnz
  1917  07C9  2EBF               	goto	l1618
  1918  07CA  3A03               	xorlw	3	; case 2
  1919  07CB  1903               	skipnz
  1920  07CC  2F3C               	goto	l1664
  1921  07CD  2FB9               	goto	l1710
  1922  07CE                     l142:
  1923  07CE  0008               	return
  1924  07CF                     __end_of_dynam:
  1925                           
  1926                           	psect	text4
  1927  0476                     __ptext4:	
  1928 ;; *************** function ___lwdiv *****************
  1929 ;; Defined at:
  1930 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\lwdiv.c"
  1931 ;; Parameters:    Size  Location     Type
  1932 ;;  divisor         2    0[COMMON] unsigned int 
  1933 ;;  dividend        2    2[COMMON] unsigned int 
  1934 ;; Auto vars:     Size  Location     Type
  1935 ;;  quotient        2    5[COMMON] unsigned int 
  1936 ;;  counter         1    7[COMMON] unsigned char 
  1937 ;; Return value:  Size  Location     Type
  1938 ;;                  2    0[COMMON] unsigned int 
  1939 ;; Registers used:
  1940 ;;		wreg, status,2, status,0
  1941 ;; Tracked objects:
  1942 ;;		On entry : 0/0
  1943 ;;		On exit  : 0/0
  1944 ;;		Unchanged: 0/0
  1945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1946 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1947 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1948 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1949 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1950 ;;Total ram usage:        8 bytes
  1951 ;; Hardware stack levels used:    1
  1952 ;; This function calls:
  1953 ;;		Nothing
  1954 ;; This function is called by:
  1955 ;;		_waitSEG
  1956 ;; This function uses a non-reentrant model
  1957 ;;
  1958                           
  1959                           
  1960                           ;psect for function ___lwdiv
  1961  0476                     ___lwdiv:
  1962  0476                     l1738:	
  1963                           ;incstack = 0
  1964                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1965                           
  1966  0476  01F5               	clrf	___lwdiv@quotient
  1967  0477  01F6               	clrf	___lwdiv@quotient+1
  1968  0478                     l1740:
  1969  0478  0870               	movf	___lwdiv@divisor,w
  1970  0479  0471               	iorwf	___lwdiv@divisor+1,w
  1971  047A  1903               	btfsc	3,2
  1972  047B  2C7D               	goto	u1141
  1973  047C  2C7E               	goto	u1140
  1974  047D                     u1141:
  1975  047D  2CAD               	goto	l1760
  1976  047E                     u1140:
  1977  047E                     l1742:
  1978  047E  01F7               	clrf	___lwdiv@counter
  1979  047F  0AF7               	incf	___lwdiv@counter,f
  1980  0480  2C8A               	goto	l1748
  1981  0481                     l1744:
  1982  0481  3001               	movlw	1
  1983  0482                     u1155:
  1984  0482  35F0               	lslf	___lwdiv@divisor,f
  1985  0483  0DF1               	rlf	___lwdiv@divisor+1,f
  1986  0484  0B89               	decfsz	9,f
  1987  0485  2C82               	goto	u1155
  1988  0486                     l1746:
  1989  0486  3001               	movlw	1
  1990  0487  00F4               	movwf	??___lwdiv
  1991  0488  0874               	movf	??___lwdiv,w
  1992  0489  07F7               	addwf	___lwdiv@counter,f
  1993  048A                     l1748:
  1994  048A  1FF1               	btfss	___lwdiv@divisor+1,7
  1995  048B  2C8D               	goto	u1161
  1996  048C  2C8E               	goto	u1160
  1997  048D                     u1161:
  1998  048D  2C81               	goto	l1744
  1999  048E                     u1160:
  2000  048E                     l1750:
  2001  048E  3001               	movlw	1
  2002  048F                     u1175:
  2003  048F  35F5               	lslf	___lwdiv@quotient,f
  2004  0490  0DF6               	rlf	___lwdiv@quotient+1,f
  2005  0491  0B89               	decfsz	9,f
  2006  0492  2C8F               	goto	u1175
  2007  0493  0871               	movf	___lwdiv@divisor+1,w
  2008  0494  0273               	subwf	___lwdiv@dividend+1,w
  2009  0495  1D03               	skipz
  2010  0496  2C99               	goto	u1185
  2011  0497  0870               	movf	___lwdiv@divisor,w
  2012  0498  0272               	subwf	___lwdiv@dividend,w
  2013  0499                     u1185:
  2014  0499  1C03               	skipc
  2015  049A  2C9C               	goto	u1181
  2016  049B  2C9D               	goto	u1180
  2017  049C                     u1181:
  2018  049C  2CA2               	goto	l1756
  2019  049D                     u1180:
  2020  049D                     l1752:
  2021  049D  0870               	movf	___lwdiv@divisor,w
  2022  049E  02F2               	subwf	___lwdiv@dividend,f
  2023  049F  0871               	movf	___lwdiv@divisor+1,w
  2024  04A0  3BF3               	subwfb	___lwdiv@dividend+1,f
  2025  04A1                     l1754:
  2026  04A1  1475               	bsf	___lwdiv@quotient,0
  2027  04A2                     l1756:
  2028  04A2  3001               	movlw	1
  2029  04A3                     u1195:
  2030  04A3  36F1               	lsrf	___lwdiv@divisor+1,f
  2031  04A4  0CF0               	rrf	___lwdiv@divisor,f
  2032  04A5  0B89               	decfsz	9,f
  2033  04A6  2CA3               	goto	u1195
  2034  04A7                     l1758:
  2035  04A7  3001               	movlw	1
  2036  04A8  02F7               	subwf	___lwdiv@counter,f
  2037  04A9  1D03               	btfss	3,2
  2038  04AA  2CAC               	goto	u1201
  2039  04AB  2CAD               	goto	u1200
  2040  04AC                     u1201:
  2041  04AC  2C8E               	goto	l1750
  2042  04AD                     u1200:
  2043  04AD                     l1760:
  2044  04AD  0876               	movf	___lwdiv@quotient+1,w
  2045  04AE  00F1               	movwf	?___lwdiv+1
  2046  04AF  0875               	movf	___lwdiv@quotient,w
  2047  04B0  00F0               	movwf	?___lwdiv
  2048  04B1                     l716:
  2049  04B1  0008               	return
  2050  04B2                     __end_of___lwdiv:
  2051                           
  2052                           	psect	text5
  2053  0579                     __ptext5:	
  2054 ;; *************** function _tact *****************
  2055 ;; Defined at:
  2056 ;;		line 357 in file "Q2.c"
  2057 ;; Parameters:    Size  Location     Type
  2058 ;;  mode            2    8[COMMON] unsigned short 
  2059 ;; Auto vars:     Size  Location     Type
  2060 ;;		None
  2061 ;; Return value:  Size  Location     Type
  2062 ;;                  1    wreg      void 
  2063 ;; Registers used:
  2064 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2065 ;; Tracked objects:
  2066 ;;		On entry : 0/0
  2067 ;;		On exit  : 0/0
  2068 ;;		Unchanged: 0/0
  2069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2070 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2073 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2074 ;;Total ram usage:        2 bytes
  2075 ;; Hardware stack levels used:    1
  2076 ;; Hardware stack levels required when called:    1
  2077 ;; This function calls:
  2078 ;;		_tactsw
  2079 ;; This function is called by:
  2080 ;;		_main
  2081 ;;		_kaisu
  2082 ;; This function uses a non-reentrant model
  2083 ;;
  2084                           
  2085                           
  2086                           ;psect for function _tact
  2087  0579                     _tact:
  2088  0579                     l1818:	
  2089                           ;incstack = 0
  2090                           ; Regs used in _tact: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2091                           
  2092                           
  2093                           ;Q2.c: 357: void tact(unsigned short mode);Q2.c: 358: {;Q2.c: 359:     switch(mode){
  2094  0579  2DB4               	goto	l1846
  2095  057A                     l1820:
  2096                           
  2097                           ;Q2.c: 361:                 tactsw();
  2098  057A  3184  24B2  3185   	fcall	_tactsw
  2099  057D                     l1822:
  2100                           
  2101                           ;Q2.c: 362:                 if(flag_sw3==0)flag_R=1;
  2102  057D  087B               	movf	_flag_sw3,w
  2103  057E  047C               	iorwf	_flag_sw3+1,w
  2104  057F  1D03               	btfss	3,2
  2105  0580  2D82               	goto	u1241
  2106  0581  2D83               	goto	u1240
  2107  0582                     u1241:
  2108  0582  2DC4               	goto	l215
  2109  0583                     u1240:
  2110  0583                     l1824:
  2111  0583  3001               	movlw	1
  2112  0584  0020               	movlb	0	; select bank0
  2113  0585  00BA               	movwf	_flag_R
  2114  0586  3000               	movlw	0
  2115  0587  00BB               	movwf	_flag_R+1
  2116  0588  2DC4               	goto	l215
  2117  0589                     l1826:
  2118                           
  2119                           ;Q2.c: 365:                 tactsw();
  2120  0589  3184  24B2  3185   	fcall	_tactsw
  2121  058C                     l1828:
  2122                           
  2123                           ;Q2.c: 366:                 if(flag_sw3==1)flag_P=1;
  2124  058C  037B               	decf	_flag_sw3,w
  2125  058D  047C               	iorwf	_flag_sw3+1,w
  2126  058E  1D03               	btfss	3,2
  2127  058F  2D91               	goto	u1251
  2128  0590  2D92               	goto	u1250
  2129  0591                     u1251:
  2130  0591  2DC4               	goto	l215
  2131  0592                     u1250:
  2132  0592                     l1830:
  2133  0592  3001               	movlw	1
  2134  0593  0020               	movlb	0	; select bank0
  2135  0594  00B8               	movwf	_flag_P
  2136  0595  3000               	movlw	0
  2137  0596  00B9               	movwf	_flag_P+1
  2138  0597  2DC4               	goto	l215
  2139  0598                     l1832:
  2140                           
  2141                           ;Q2.c: 369:                 tactsw();
  2142  0598  3184  24B2  3185   	fcall	_tactsw
  2143  059B                     l1834:
  2144                           
  2145                           ;Q2.c: 370:                 if(flag_sw3==0)flag_R=1;
  2146  059B  087B               	movf	_flag_sw3,w
  2147  059C  047C               	iorwf	_flag_sw3+1,w
  2148  059D  1D03               	btfss	3,2
  2149  059E  2DA0               	goto	u1261
  2150  059F  2DA1               	goto	u1260
  2151  05A0                     u1261:
  2152  05A0  2DA6               	goto	l1838
  2153  05A1                     u1260:
  2154  05A1                     l1836:
  2155  05A1  3001               	movlw	1
  2156  05A2  0020               	movlb	0	; select bank0
  2157  05A3  00BA               	movwf	_flag_R
  2158  05A4  3000               	movlw	0
  2159  05A5  00BB               	movwf	_flag_R+1
  2160  05A6                     l1838:
  2161                           
  2162                           ;Q2.c: 371:                 if((flag_sw3==1)&&(flag_R==1))flag_P=1;
  2163  05A6  037B               	decf	_flag_sw3,w
  2164  05A7  047C               	iorwf	_flag_sw3+1,w
  2165  05A8  1D03               	btfss	3,2
  2166  05A9  2DAB               	goto	u1271
  2167  05AA  2DAC               	goto	u1270
  2168  05AB                     u1271:
  2169  05AB  2DC4               	goto	l215
  2170  05AC                     u1270:
  2171  05AC                     l1840:
  2172  05AC  0020               	movlb	0	; select bank0
  2173  05AD  033A               	decf	_flag_R,w
  2174  05AE  043B               	iorwf	_flag_R+1,w
  2175  05AF  1D03               	btfss	3,2
  2176  05B0  2DB2               	goto	u1281
  2177  05B1  2DB3               	goto	u1280
  2178  05B2                     u1281:
  2179  05B2  2DC4               	goto	l215
  2180  05B3                     u1280:
  2181  05B3  2D92               	goto	l1830
  2182  05B4                     l1846:
  2183                           
  2184                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2185                           ; Switch size 1, requested type "simple"
  2186                           ; Number of cases is 1, Range of values is 0 to 0
  2187                           ; switch strategies available:
  2188                           ; Name         Instructions Cycles
  2189                           ; simple_byte            4     3 (average)
  2190                           ; direct_byte            8     6 (fixed)
  2191                           ; jumptable            260     6 (fixed)
  2192                           ;	Chosen strategy is simple_byte
  2193  05B4  0879               	movf	tact@mode+1,w
  2194  05B5  3A00               	xorlw	0	; case 0
  2195  05B6  1903               	skipnz
  2196  05B7  2DB9               	goto	l2282
  2197  05B8  2DC4               	goto	l215
  2198  05B9                     l2282:
  2199                           
  2200                           ; Switch size 1, requested type "simple"
  2201                           ; Number of cases is 3, Range of values is 0 to 2
  2202                           ; switch strategies available:
  2203                           ; Name         Instructions Cycles
  2204                           ; simple_byte           10     6 (average)
  2205                           ; direct_byte           12     6 (fixed)
  2206                           ; jumptable            260     6 (fixed)
  2207                           ;	Chosen strategy is simple_byte
  2208  05B9  0878               	movf	tact@mode,w
  2209  05BA  3A00               	xorlw	0	; case 0
  2210  05BB  1903               	skipnz
  2211  05BC  2D7A               	goto	l1820
  2212  05BD  3A01               	xorlw	1	; case 1
  2213  05BE  1903               	skipnz
  2214  05BF  2D89               	goto	l1826
  2215  05C0  3A03               	xorlw	3	; case 2
  2216  05C1  1903               	skipnz
  2217  05C2  2D98               	goto	l1832
  2218  05C3  2DC4               	goto	l215
  2219  05C4                     l215:
  2220  05C4  0008               	return
  2221  05C5                     __end_of_tact:
  2222                           
  2223                           	psect	text6
  2224  04B2                     __ptext6:	
  2225 ;; *************** function _tactsw *****************
  2226 ;; Defined at:
  2227 ;;		line 342 in file "Q2.c"
  2228 ;; Parameters:    Size  Location     Type
  2229 ;;		None
  2230 ;; Auto vars:     Size  Location     Type
  2231 ;;  a               2    6[COMMON] unsigned short 
  2232 ;;  c               2    4[COMMON] unsigned short 
  2233 ;;  b               2    2[COMMON] unsigned short 
  2234 ;; Return value:  Size  Location     Type
  2235 ;;                  1    wreg      void 
  2236 ;; Registers used:
  2237 ;;		wreg, status,2, status,0
  2238 ;; Tracked objects:
  2239 ;;		On entry : 0/0
  2240 ;;		On exit  : 0/0
  2241 ;;		Unchanged: 0/0
  2242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2244 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2245 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2246 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2247 ;;Total ram usage:        8 bytes
  2248 ;; Hardware stack levels used:    1
  2249 ;; This function calls:
  2250 ;;		Nothing
  2251 ;; This function is called by:
  2252 ;;		_tact
  2253 ;; This function uses a non-reentrant model
  2254 ;;
  2255                           
  2256                           
  2257                           ;psect for function _tactsw
  2258  04B2                     _tactsw:
  2259  04B2                     l1720:	
  2260                           ;incstack = 0
  2261                           ; Regs used in _tactsw: [wreg+status,2+status,0]
  2262                           
  2263                           
  2264                           ;Q2.c: 344:     unsigned short a,b,c;;Q2.c: 345:     b=c=0;
  2265  04B2  01F4               	clrf	tactsw@c
  2266  04B3  01F5               	clrf	tactsw@c+1
  2267  04B4  01F2               	clrf	tactsw@b
  2268  04B5  01F3               	clrf	tactsw@b+1
  2269  04B6                     l1722:
  2270                           
  2271                           ;Q2.c: 347:             a=RA2;
  2272  04B6  1003               	clrc
  2273  04B7  0020               	movlb	0	; select bank0
  2274  04B8  190C               	btfsc	12,2	;volatile
  2275  04B9  1403               	setc
  2276  04BA  3000               	movlw	0
  2277  04BB  3D09               	addwfc	9,w
  2278  04BC  00F0               	movwf	??_tactsw
  2279  04BD  01F1               	clrf	??_tactsw+1
  2280  04BE  0870               	movf	??_tactsw,w
  2281  04BF  00F6               	movwf	tactsw@a
  2282  04C0  0871               	movf	??_tactsw+1,w
  2283  04C1  00F7               	movwf	tactsw@a+1
  2284  04C2                     l1724:
  2285                           
  2286                           ;Q2.c: 348:             if(b==a)++c;
  2287  04C2  0877               	movf	tactsw@a+1,w
  2288  04C3  0673               	xorwf	tactsw@b+1,w
  2289  04C4  1D03               	skipz
  2290  04C5  2CC8               	goto	u1125
  2291  04C6  0876               	movf	tactsw@a,w
  2292  04C7  0672               	xorwf	tactsw@b,w
  2293  04C8                     u1125:
  2294  04C8  1D03               	skipz
  2295  04C9  2CCB               	goto	u1121
  2296  04CA  2CCC               	goto	u1120
  2297  04CB                     u1121:
  2298  04CB  2CD1               	goto	l1728
  2299  04CC                     u1120:
  2300  04CC                     l1726:
  2301  04CC  3001               	movlw	1
  2302  04CD  07F4               	addwf	tactsw@c,f
  2303  04CE  3000               	movlw	0
  2304  04CF  3DF5               	addwfc	tactsw@c+1,f
  2305  04D0  2CD3               	goto	l1730
  2306  04D1                     l1728:
  2307  04D1  01F4               	clrf	tactsw@c
  2308  04D2  01F5               	clrf	tactsw@c+1
  2309  04D3                     l1730:
  2310                           
  2311                           ;Q2.c: 350:             if(c>10){flag_sw3=(~a)&0x01;return;}
  2312  04D3  3000               	movlw	0
  2313  04D4  0275               	subwf	tactsw@c+1,w
  2314  04D5  300B               	movlw	11
  2315  04D6  1903               	skipnz
  2316  04D7  0274               	subwf	tactsw@c,w
  2317  04D8  1C03               	skipc
  2318  04D9  2CDB               	goto	u1131
  2319  04DA  2CDC               	goto	u1130
  2320  04DB                     u1131:
  2321  04DB  2CE9               	goto	l1736
  2322  04DC                     u1130:
  2323  04DC                     l1732:
  2324  04DC  0877               	movf	tactsw@a+1,w
  2325  04DD  00F1               	movwf	??_tactsw+1
  2326  04DE  0876               	movf	tactsw@a,w
  2327  04DF  00F0               	movwf	??_tactsw
  2328  04E0  09F0               	comf	??_tactsw,f
  2329  04E1  09F1               	comf	??_tactsw+1,f
  2330  04E2  3001               	movlw	1
  2331  04E3  0570               	andwf	??_tactsw,w
  2332  04E4  00FB               	movwf	_flag_sw3
  2333  04E5  3000               	movlw	0
  2334  04E6  0571               	andwf	??_tactsw+1,w
  2335  04E7  00FC               	movwf	_flag_sw3+1
  2336  04E8  2CEE               	goto	l200
  2337  04E9                     l1736:
  2338                           
  2339                           ;Q2.c: 351:             b=a;
  2340  04E9  0877               	movf	tactsw@a+1,w
  2341  04EA  00F3               	movwf	tactsw@b+1
  2342  04EB  0876               	movf	tactsw@a,w
  2343  04EC  00F2               	movwf	tactsw@b
  2344  04ED  2CB6               	goto	l1722
  2345  04EE                     l200:
  2346  04EE  0008               	return
  2347  04EF                     __end_of_tactsw:
  2348                           
  2349                           	psect	text7
  2350  042F                     __ptext7:	
  2351 ;; *************** function _portinit *****************
  2352 ;; Defined at:
  2353 ;;		line 160 in file "Q2.c"
  2354 ;; Parameters:    Size  Location     Type
  2355 ;;		None
  2356 ;; Auto vars:     Size  Location     Type
  2357 ;;		None
  2358 ;; Return value:  Size  Location     Type
  2359 ;;                  1    wreg      void 
  2360 ;; Registers used:
  2361 ;;		wreg, status,2
  2362 ;; Tracked objects:
  2363 ;;		On entry : 0/0
  2364 ;;		On exit  : 0/0
  2365 ;;		Unchanged: 0/0
  2366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2371 ;;Total ram usage:        0 bytes
  2372 ;; Hardware stack levels used:    1
  2373 ;; This function calls:
  2374 ;;		Nothing
  2375 ;; This function is called by:
  2376 ;;		_main
  2377 ;; This function uses a non-reentrant model
  2378 ;;
  2379                           
  2380                           
  2381                           ;psect for function _portinit
  2382  042F                     _portinit:
  2383  042F                     l1764:	
  2384                           ;incstack = 0
  2385                           ; Regs used in _portinit: [wreg+status,2]
  2386                           
  2387                           
  2388                           ;Q2.c: 163:     ANSELA=0x00;
  2389  042F  0023               	movlb	3	; select bank3
  2390  0430  018C               	clrf	12	;volatile
  2391                           
  2392                           ;Q2.c: 164:     ANSELB=0x00;
  2393  0431  018D               	clrf	13	;volatile
  2394  0432                     l1766:
  2395                           
  2396                           ;Q2.c: 166:     PORTA=0x07;
  2397  0432  3007               	movlw	7
  2398  0433  0020               	movlb	0	; select bank0
  2399  0434  008C               	movwf	12	;volatile
  2400  0435                     l1768:
  2401                           
  2402                           ;Q2.c: 167:     TRISA=0x07;
  2403  0435  3007               	movlw	7
  2404  0436  0021               	movlb	1	; select bank1
  2405  0437  008C               	movwf	12	;volatile
  2406                           
  2407                           ;Q2.c: 168:     PORTB=0x00;
  2408  0438  0020               	movlb	0	; select bank0
  2409  0439  018D               	clrf	13	;volatile
  2410                           
  2411                           ;Q2.c: 169:     TRISB=0x00;
  2412  043A  0021               	movlb	1	; select bank1
  2413  043B  018D               	clrf	13	;volatile
  2414  043C                     l1770:
  2415                           
  2416                           ;Q2.c: 170:     PORTC=0x07;
  2417  043C  3007               	movlw	7
  2418  043D  0020               	movlb	0	; select bank0
  2419  043E  008E               	movwf	14	;volatile
  2420  043F                     l1772:
  2421                           
  2422                           ;Q2.c: 171:     TRISC=0x00;
  2423  043F  0021               	movlb	1	; select bank1
  2424  0440  018E               	clrf	14	;volatile
  2425  0441                     l97:
  2426  0441  0008               	return
  2427  0442                     __end_of_portinit:
  2428  007E                     btemp	set	126	;btemp
  2429  007E                     wtemp0	set	126
  2430                           
  2431                           	psect	config
  2432                           
  2433                           ;Config register CONFIG1 @ 0x8007
  2434                           ;	Oscillator Selection
  2435                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  2436                           ;	Watchdog Timer Enable
  2437                           ;	WDTE = OFF, WDT disabled
  2438                           ;	Power-up Timer Enable
  2439                           ;	PWRTE = OFF, PWRT disabled
  2440                           ;	MCLR Pin Function Select
  2441                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  2442                           ;	Flash Program Memory Code Protection
  2443                           ;	CP = OFF, Program memory code protection is disabled
  2444                           ;	Data Memory Code Protection
  2445                           ;	CPD = OFF, Data memory code protection is disabled
  2446                           ;	Brown-out Reset Enable
  2447                           ;	BOREN = OFF, Brown-out Reset disabled
  2448                           ;	Clock Out Enable
  2449                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  2450                           ;	Internal/External Switchover
  2451                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2452                           ;	Fail-Safe Clock Monitor Enable
  2453                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2454  8007                     	org	32775
  2455  8007  09E4               	dw	2532
  2456                           
  2457                           ;Config register CONFIG2 @ 0x8008
  2458                           ;	Flash Memory Self-Write Protection
  2459                           ;	WRT = OFF, Write protection off
  2460                           ;	Voltage Regulator Capacitor Enable
  2461                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
  2462                           ;	PLL Enable
  2463                           ;	PLLEN = OFF, 4x PLL disabled
  2464                           ;	Stack Overflow/Underflow Reset Enable
  2465                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  2466                           ;	Brown-out Reset Voltage Selection
  2467                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  2468                           ;	Low-Voltage Programming Enable
  2469                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  2470  8008                     	org	32776
  2471  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    0
    Data        156
    BSS         34
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      13
    BANK0            80     24      74
    BANK1            80      0      74
    BANK2            80      0      64
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_tact
    _main->_waitSEG
    _waitSEG->___lwdiv
    _waitSEG->_dynam
    _tact->_tactsw

Critical Paths under _main in BANK0

    _main->_waitSEG
    _waitSEG->_dynam

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0    4128
                                             10 COMMON     1     1      0
                                             14 BANK0     10    10      0
                              _dynam
                           _portinit
                               _tact
                            _waitSEG
                             _zenoff
 ---------------------------------------------------------------------------------
 (1) _zenoff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _waitSEG                                              8     2      6    2264
                                              8 COMMON     2     2      0
                                              8 BANK0      6     0      6
                            ___lwdiv
                              _dynam
 ---------------------------------------------------------------------------------
 (2) _dynam                                               16     8      8    1359
                                              0 COMMON     8     0      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _tact                                                 2     0      2     366
                                              8 COMMON     2     0      2
                             _tactsw
 ---------------------------------------------------------------------------------
 (2) _tactsw                                               8     8      0     116
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 (1) _portinit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _dynam
   _portinit
   _tact
     _tactsw
   _waitSEG
     ___lwdiv
     _dynam
   _zenoff

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      B       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     18      4A       5       92.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      4A       7       92.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      40       9       80.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      E1      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      E1      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Feb 06 01:31:31 2021

                     l97 0441                       _cw 0034                      l200 04EE  
                    l121 0691                      l130 06C7                      l123 06A7  
                    l115 041C                      l125 06B7                      l109 0475  
                    l142 07CE                      l215 05C4                      l119 0681  
                    l136 0744                      l272 05F0                      l265 05CE  
                    l267 05DB                      l268 05EC                      l716 04B1  
                    _RA0 0060                      _RA1 0061                      _RA2 0062  
                    _RC0 0070                      _RC1 0071                      _RC2 0072  
                    _RC5 0075                      _RC6 0076                      _RC7 0077  
                    u900 0678                      u901 0677                      u910 068B  
                    u911 068A                      u920 069E                      u921 069D  
                    u930 06B1                      u931 06B0                      u940 06C5  
                    u941 06C4                      u950 06CF                      u951 06CE  
                    u960 06D5                      u961 06D4                      u970 06EB  
                    u971 06EA                      u980 06F1                      u981 06F0  
                    u990 070A                      u991 0709                      _ccw 0032  
                    _flg 0036                      wreg 0009                     l2110 05CE  
                   l2120 05D7                     l2112 05CE                     l2104 05C5  
                   l2130 0615                     l2114 05CE                     l2106 05C8  
                   l2140 0638                     l2124 05F4                     l2116 05CE  
                   l2108 05CE                     l2142 0651                     l2126 060C  
                   l2118 05D3                     l1600 06AB                     l2136 061A  
                   l2128 0611                     l1610 06BB                     l2138 0632  
                   l1700 07B2                     l1620 06C5                     l1612 06BB  
                   l1604 06B2                     l1710 07B9                     l1702 07B2  
                   l1630 06DB                     l1622 06C9                     l1614 06BC  
                   l1720 04B2                     l2280 07C3                     l1640 0703  
                   l1632 06DF                     l1624 06CF                     l1616 06BD  
                   l1608 06BA                     l1730 04D3                     l1722 04B6  
                   l2282 05B9                     l1650 072F                     l1642 070A  
                   l1626 06D5                     l1634 06E5                     l1618 06BF  
                   l1714 07BE                     l1570 066F                     l1802 045E  
                   l1810 0418                     l1732 04DC                     l1724 04C2  
                   l1820 057A                     l1740 0478                     l1652 0731  
                   l1644 0710                     l1636 06EB                     l1628 06D9  
                   l1580 0685                     l1572 0670                     l1564 0665  
                   l1804 0470                     l1812 0419                     l1726 04CC  
                   l1830 0592                     l1822 057D                     l1750 048E  
                   l1742 047E                     l1670 074C                     l1654 0735  
                   l1646 0722                     l1638 06F1                     l1590 0695  
                   l1574 0671                     l1566 066C                     l1814 041A  
                   l1736 04E9                     l1728 04D1                     l1840 05AC  
                   l1832 0598                     l1824 0583                     l1752 049D  
                   l1744 0481                     l1760 04AD                     l1672 0752  
                   l1680 0762                     l1664 073C                     l1656 0735  
                   l1648 0729                     l1592 0696                     l1584 068C  
                   l1576 0678                     l1568 066D                     l1816 041B  
                   l1808 0414                     l1770 043C                     l1834 059B  
                   l1826 0589                     l1818 0579                     l1754 04A1  
                   l1746 0486                     l1738 0476                     l1690 078D  
                   l1682 0768                     l1674 0756                     l1666 0742  
                   l1594 0697                     l1578 067D                     l1772 043F  
                   l1764 042F                     l1836 05A1                     l1828 058C  
                   l1756 04A2                     l1748 048A                     l1692 079F  
                   l1684 076E                     l1676 0758                     l1668 0746  
                   l1596 069E                     l1588 0693                     l1766 0432  
                   l1838 05A6                     l1846 05B4                     l1758 04A7  
                   l1694 07A6                     l1686 0780                     l1678 075C  
                   l1598 06A3                     l1768 0435                     l1696 07AC  
                   l1688 0787                     l1698 07AE                     l1794 0442  
                   l1796 0453                     l1798 0457                     u1000 0710  
                   u1001 070F                     u1010 0729                     u1011 0728  
                   u1100 07A6                     u1020 072F                     u1101 07A5  
                   u1021 072E                     u1110 07AC                     u1030 0742  
                   u1111 07AB                     u1031 0741                     u1120 04CC  
                   u1200 04AD                     u1040 074C                     u1121 04CB  
                   u1201 04AC                     u1041 074B                     u1130 04DC  
                   u1050 0752                     u1131 04DB                     u1051 0751  
                   u1140 047E                     u1060 0768                     u1125 04C8  
                   u1141 047D                     u1061 0767                     u1070 076E  
                   u1230 045D                     u1071 076D                     u1231 045C  
                   u1240 0583                     u1160 048E                     u1080 0787  
                   u1241 0582                     u1161 048D                     u1081 0786  
                   u1250 0592                     u1090 078D                     u1251 0591  
                   u1155 0482                     u1091 078C                     u1260 05A1  
                   u1180 049D                     u1261 05A0                     u1181 049C  
                   u1270 05AC                     u1271 05AB                     u1175 048F  
                   u1280 05B3                     u1281 05B2                     u1185 0499  
                   u1195 04A3                     u1710 05F0                     u1711 05EF  
                   u1720 05F4                     u1704 05EC                     u1721 05F3  
                   u1730 0638                     u1650 05D3                     u1731 0637  
                   u1651 05D2                     u1740 0662                     u1660 05D7  
                   u1741 0661                     u1661 05D6                     u1670 05DB  
                   u1671 05DA                     u1680 05E2                     u1745 065E  
                   u1681 05DF                     u1690 05EA                     u1691 05E7  
                   u1694 05E4                     _atai 002C                     _main 05C5  
                   _num0 0140                     _kisu 00E0                     _moja 00D4  
                   _samf 0120                     _mojf 0154                     _tact 0579  
                   _mojh 0066                     _moji 00C0                     _mojn 0062  
                   _samp 00A0                     _gusu 0058                     fsr0h 0005  
                   fsr1h 0007                     indf0 0000                     fsr0l 0004  
                   fsr1l 0006                     btemp 007E                     start 0002  
                  ?_main 0070                    ?_tact 0078          __end_of___lwdiv 04B2  
                  _PORTA 000C                    _PORTB 000D                    _PORTC 000E  
                  _TRISA 008C                    _TRISB 008D                    _TRISC 008E  
                  _code1 0022                    _atai1 002E                    _count 002A  
                  _dynam 0665                    _fugou 0020                    main@i 0056  
        __end_of_waitSEG 0476                    status 0003                    wtemp0 007E  
        __initialization 07CF             __end_of_main 0665             __end_of_tact 05C5  
                 ??_main 007A                   ??_tact 007A                   ?_dynam 0070  
                 _ANSELA 018C                   _ANSELB 018D                   _OSCCON 0099  
            dynam@smdata 0074                   _code10 0024                   _atai10 0030  
                 _flag_P 0038                   _flag_R 003A                ??___lwdiv 0074  
                 _tactsw 04B2                   _zenoff 0414                   dynam@j 0044  
              ??_waitSEG 0078         __end_of_portinit 0442  __end_of__initialization 07FD  
         __pcstackCOMMON 0070             __pidataBANK0 041D             __pidataBANK1 052F  
           __pidataBANK2 04EF            __end_of_dynam 07CF                  ??_dynam 0078  
             __pbssBANK0 0020               __pmaintext 05C5                  ?_tactsw 0070  
                ?_zenoff 0070              waitSEG@seg1 0048              waitSEG@seg2 004A  
              ?_portinit 0070                  ___lwdiv 0476                  _code100 0026  
        __size_of_tactsw 003D                  __ptext1 0414                  __ptext2 0442  
                __ptext3 0665                  __ptext4 0476                  __ptext5 0579  
                __ptext6 04B2                  __ptext7 042F          __size_of_zenoff 0009  
                _waitSEG 0442                  clrloop0 0409     end_of_initialization 07FD  
                dynam@tm 0042                  dynam@tr 0076                  init_ram 040E  
                initloop 040F                  tactsw@a 0076                  tactsw@b 0072  
                tactsw@c 0074               ??_portinit 0070           __end_of_tactsw 04EF  
         __end_of_zenoff 041D      start_initialization 07CF              __pdataBANK0 0058  
            __pdataBANK1 00A0              __pdataBANK2 0120                 ??_tactsw 0070  
               ??_zenoff 0070              __pbssCOMMON 007B                ___latbits 0003  
          __pcstackBANK0 0040         ___lwdiv@dividend 0072                 ?___lwdiv 0070  
      __size_of_portinit 0013                 ?_waitSEG 0048         ___lwdiv@quotient 0075  
         __size_of_dynam 016A            dynam@dig1data 0070            dynam@dig2data 0072  
              clear_ram0 0408         __size_of___lwdiv 003C                 _code1000 0028  
        ___lwdiv@divisor 0070          ___lwdiv@counter 0077         __size_of_waitSEG 0034  
               _flag_sw1 003E                 _flag_sw2 003C                 _flag_sw3 007B  
              waitSEG@wt 004C            __size_of_main 00A0            __size_of_tact 004C  
               _portinit 042F                 dynam@ext 0046                 dynam@smd 0040  
               tact@mode 0078                 waitSEG@i 0078  
