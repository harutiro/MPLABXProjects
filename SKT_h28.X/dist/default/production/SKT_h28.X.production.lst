

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Feb 04 03:03:56 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F1938
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27  0000                     
    28                           ; Version 2.20
    29                           ; Generated 12/02/2020 GMT
    30                           ; 
    31                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F1938 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  000D                     	;# 
    76  000E                     	;# 
    77  0010                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0095                     	;# 
   100  0096                     	;# 
   101  0097                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  010C                     	;# 
   111  010D                     	;# 
   112  010E                     	;# 
   113  0110                     	;# 
   114  0111                     	;# 
   115  0112                     	;# 
   116  0113                     	;# 
   117  0114                     	;# 
   118  0115                     	;# 
   119  0116                     	;# 
   120  0117                     	;# 
   121  0118                     	;# 
   122  0119                     	;# 
   123  011A                     	;# 
   124  011B                     	;# 
   125  011D                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0191                     	;# 
   129  0191                     	;# 
   130  0192                     	;# 
   131  0193                     	;# 
   132  0193                     	;# 
   133  0193                     	;# 
   134  0194                     	;# 
   135  0195                     	;# 
   136  0196                     	;# 
   137  0199                     	;# 
   138  019A                     	;# 
   139  019B                     	;# 
   140  019B                     	;# 
   141  019B                     	;# 
   142  019B                     	;# 
   143  019C                     	;# 
   144  019C                     	;# 
   145  019D                     	;# 
   146  019E                     	;# 
   147  019F                     	;# 
   148  020D                     	;# 
   149  0210                     	;# 
   150  0211                     	;# 
   151  0212                     	;# 
   152  0213                     	;# 
   153  0214                     	;# 
   154  0215                     	;# 
   155  0215                     	;# 
   156  0216                     	;# 
   157  0217                     	;# 
   158  0291                     	;# 
   159  0291                     	;# 
   160  0292                     	;# 
   161  0293                     	;# 
   162  0294                     	;# 
   163  0295                     	;# 
   164  0295                     	;# 
   165  0296                     	;# 
   166  0298                     	;# 
   167  0298                     	;# 
   168  0299                     	;# 
   169  029A                     	;# 
   170  029B                     	;# 
   171  029C                     	;# 
   172  029C                     	;# 
   173  029D                     	;# 
   174  029E                     	;# 
   175  029F                     	;# 
   176  0311                     	;# 
   177  0311                     	;# 
   178  0312                     	;# 
   179  0313                     	;# 
   180  0314                     	;# 
   181  0315                     	;# 
   182  0315                     	;# 
   183  0316                     	;# 
   184  0318                     	;# 
   185  0318                     	;# 
   186  0319                     	;# 
   187  031A                     	;# 
   188  031C                     	;# 
   189  031C                     	;# 
   190  031D                     	;# 
   191  031E                     	;# 
   192  0394                     	;# 
   193  0395                     	;# 
   194  0396                     	;# 
   195  0415                     	;# 
   196  0416                     	;# 
   197  0417                     	;# 
   198  041C                     	;# 
   199  041D                     	;# 
   200  041E                     	;# 
   201  0791                     	;# 
   202  0792                     	;# 
   203  0793                     	;# 
   204  0794                     	;# 
   205  0795                     	;# 
   206  0798                     	;# 
   207  0799                     	;# 
   208  07A0                     	;# 
   209  07A1                     	;# 
   210  07A3                     	;# 
   211  07A4                     	;# 
   212  07A6                     	;# 
   213  07A7                     	;# 
   214  07A9                     	;# 
   215  07AA                     	;# 
   216  0FE4                     	;# 
   217  0FE5                     	;# 
   218  0FE6                     	;# 
   219  0FE7                     	;# 
   220  0FE8                     	;# 
   221  0FE9                     	;# 
   222  0FEA                     	;# 
   223  0FEB                     	;# 
   224  0FED                     	;# 
   225  0FEE                     	;# 
   226  0FEF                     	;# 
   227  0000                     	;# 
   228  0001                     	;# 
   229  0002                     	;# 
   230  0003                     	;# 
   231  0004                     	;# 
   232  0005                     	;# 
   233  0006                     	;# 
   234  0007                     	;# 
   235  0008                     	;# 
   236  0009                     	;# 
   237  000A                     	;# 
   238  000B                     	;# 
   239  000C                     	;# 
   240  000D                     	;# 
   241  000E                     	;# 
   242  0010                     	;# 
   243  0011                     	;# 
   244  0012                     	;# 
   245  0013                     	;# 
   246  0015                     	;# 
   247  0016                     	;# 
   248  0016                     	;# 
   249  0017                     	;# 
   250  0018                     	;# 
   251  0019                     	;# 
   252  001A                     	;# 
   253  001B                     	;# 
   254  001C                     	;# 
   255  001E                     	;# 
   256  001F                     	;# 
   257  008C                     	;# 
   258  008D                     	;# 
   259  008E                     	;# 
   260  0090                     	;# 
   261  0091                     	;# 
   262  0092                     	;# 
   263  0093                     	;# 
   264  0095                     	;# 
   265  0096                     	;# 
   266  0097                     	;# 
   267  0098                     	;# 
   268  0099                     	;# 
   269  009A                     	;# 
   270  009B                     	;# 
   271  009B                     	;# 
   272  009C                     	;# 
   273  009D                     	;# 
   274  009E                     	;# 
   275  010C                     	;# 
   276  010D                     	;# 
   277  010E                     	;# 
   278  0110                     	;# 
   279  0111                     	;# 
   280  0112                     	;# 
   281  0113                     	;# 
   282  0114                     	;# 
   283  0115                     	;# 
   284  0116                     	;# 
   285  0117                     	;# 
   286  0118                     	;# 
   287  0119                     	;# 
   288  011A                     	;# 
   289  011B                     	;# 
   290  011D                     	;# 
   291  018C                     	;# 
   292  018D                     	;# 
   293  0191                     	;# 
   294  0191                     	;# 
   295  0192                     	;# 
   296  0193                     	;# 
   297  0193                     	;# 
   298  0193                     	;# 
   299  0194                     	;# 
   300  0195                     	;# 
   301  0196                     	;# 
   302  0199                     	;# 
   303  019A                     	;# 
   304  019B                     	;# 
   305  019B                     	;# 
   306  019B                     	;# 
   307  019B                     	;# 
   308  019C                     	;# 
   309  019C                     	;# 
   310  019D                     	;# 
   311  019E                     	;# 
   312  019F                     	;# 
   313  020D                     	;# 
   314  0210                     	;# 
   315  0211                     	;# 
   316  0212                     	;# 
   317  0213                     	;# 
   318  0214                     	;# 
   319  0215                     	;# 
   320  0215                     	;# 
   321  0216                     	;# 
   322  0217                     	;# 
   323  0291                     	;# 
   324  0291                     	;# 
   325  0292                     	;# 
   326  0293                     	;# 
   327  0294                     	;# 
   328  0295                     	;# 
   329  0295                     	;# 
   330  0296                     	;# 
   331  0298                     	;# 
   332  0298                     	;# 
   333  0299                     	;# 
   334  029A                     	;# 
   335  029B                     	;# 
   336  029C                     	;# 
   337  029C                     	;# 
   338  029D                     	;# 
   339  029E                     	;# 
   340  029F                     	;# 
   341  0311                     	;# 
   342  0311                     	;# 
   343  0312                     	;# 
   344  0313                     	;# 
   345  0314                     	;# 
   346  0315                     	;# 
   347  0315                     	;# 
   348  0316                     	;# 
   349  0318                     	;# 
   350  0318                     	;# 
   351  0319                     	;# 
   352  031A                     	;# 
   353  031C                     	;# 
   354  031C                     	;# 
   355  031D                     	;# 
   356  031E                     	;# 
   357  0394                     	;# 
   358  0395                     	;# 
   359  0396                     	;# 
   360  0415                     	;# 
   361  0416                     	;# 
   362  0417                     	;# 
   363  041C                     	;# 
   364  041D                     	;# 
   365  041E                     	;# 
   366  0791                     	;# 
   367  0792                     	;# 
   368  0793                     	;# 
   369  0794                     	;# 
   370  0795                     	;# 
   371  0798                     	;# 
   372  0799                     	;# 
   373  07A0                     	;# 
   374  07A1                     	;# 
   375  07A3                     	;# 
   376  07A4                     	;# 
   377  07A6                     	;# 
   378  07A7                     	;# 
   379  07A9                     	;# 
   380  07AA                     	;# 
   381  0FE4                     	;# 
   382  0FE5                     	;# 
   383  0FE6                     	;# 
   384  0FE7                     	;# 
   385  0FE8                     	;# 
   386  0FE9                     	;# 
   387  0FEA                     	;# 
   388  0FEB                     	;# 
   389  0FED                     	;# 
   390  0FEE                     	;# 
   391  0FEF                     	;# 
   392                           
   393                           	psect	idataBANK0
   394  043B                     __pidataBANK0:
   395                           
   396                           ;initializer for _gusu
   397  043B  343F               	retlw	63
   398  043C  3400               	retlw	0
   399  043D  345B               	retlw	91
   400  043E  3400               	retlw	0
   401  043F  3466               	retlw	102
   402  0440  3400               	retlw	0
   403  0441  347D               	retlw	125
   404  0442  3400               	retlw	0
   405  0443  347F               	retlw	127
   406  0444  3400               	retlw	0
   407                           
   408                           ;initializer for _mojn
   409  0445  3454               	retlw	84
   410  0446  3400               	retlw	0
   411  0447  3473               	retlw	115
   412  0448  3400               	retlw	0
   413                           
   414                           ;initializer for _mojh
   415  0449  3476               	retlw	118
   416  044A  3400               	retlw	0
   417  044B  3438               	retlw	56
   418  044C  3400               	retlw	0
   419                           
   420                           	psect	idataBANK1
   421  054D                     __pidataBANK1:
   422                           
   423                           ;initializer for _samp
   424  054D  343F               	retlw	63
   425  054E  3400               	retlw	0
   426  054F  3406               	retlw	6
   427  0550  3400               	retlw	0
   428  0551  345B               	retlw	91
   429  0552  3400               	retlw	0
   430  0553  344F               	retlw	79
   431  0554  3400               	retlw	0
   432  0555  3466               	retlw	102
   433  0556  3400               	retlw	0
   434  0557  346D               	retlw	109
   435  0558  3400               	retlw	0
   436  0559  347D               	retlw	125
   437  055A  3400               	retlw	0
   438  055B  3427               	retlw	39
   439  055C  3400               	retlw	0
   440  055D  347F               	retlw	127
   441  055E  3400               	retlw	0
   442  055F  346F               	retlw	111
   443  0560  3400               	retlw	0
   444  0561  345F               	retlw	95
   445  0562  3400               	retlw	0
   446  0563  347C               	retlw	124
   447  0564  3400               	retlw	0
   448  0565  3458               	retlw	88
   449  0566  3400               	retlw	0
   450  0567  345E               	retlw	94
   451  0568  3400               	retlw	0
   452  0569  3479               	retlw	121
   453  056A  3400               	retlw	0
   454  056B  3471               	retlw	113
   455  056C  3400               	retlw	0
   456                           
   457                           ;initializer for _moji
   458  056D  345F               	retlw	95
   459  056E  3400               	retlw	0
   460  056F  347C               	retlw	124
   461  0570  3400               	retlw	0
   462  0571  3458               	retlw	88
   463  0572  3400               	retlw	0
   464  0573  345E               	retlw	94
   465  0574  3400               	retlw	0
   466  0575  3479               	retlw	121
   467  0576  3400               	retlw	0
   468  0577  3471               	retlw	113
   469  0578  3400               	retlw	0
   470  0579  3476               	retlw	118
   471  057A  3400               	retlw	0
   472  057B  3438               	retlw	56
   473  057C  3400               	retlw	0
   474  057D  3454               	retlw	84
   475  057E  3400               	retlw	0
   476  057F  3473               	retlw	115
   477  0580  3400               	retlw	0
   478                           
   479                           ;initializer for _moja
   480  0581  345F               	retlw	95
   481  0582  3400               	retlw	0
   482  0583  347C               	retlw	124
   483  0584  3400               	retlw	0
   484  0585  3458               	retlw	88
   485  0586  3400               	retlw	0
   486  0587  345E               	retlw	94
   487  0588  3400               	retlw	0
   488  0589  3479               	retlw	121
   489  058A  3400               	retlw	0
   490  058B  3471               	retlw	113
   491  058C  3400               	retlw	0
   492                           
   493                           ;initializer for _kisu
   494  058D  3406               	retlw	6
   495  058E  3400               	retlw	0
   496  058F  344F               	retlw	79
   497  0590  3400               	retlw	0
   498  0591  346D               	retlw	109
   499  0592  3400               	retlw	0
   500  0593  3427               	retlw	39
   501  0594  3400               	retlw	0
   502  0595  346F               	retlw	111
   503  0596  3400               	retlw	0
   504                           
   505                           	psect	idataBANK2
   506  050D                     __pidataBANK2:
   507                           
   508                           ;initializer for _samf
   509  050D  3471               	retlw	113
   510  050E  3400               	retlw	0
   511  050F  3479               	retlw	121
   512  0510  3400               	retlw	0
   513  0511  345E               	retlw	94
   514  0512  3400               	retlw	0
   515  0513  3458               	retlw	88
   516  0514  3400               	retlw	0
   517  0515  347C               	retlw	124
   518  0516  3400               	retlw	0
   519  0517  345F               	retlw	95
   520  0518  3400               	retlw	0
   521  0519  346F               	retlw	111
   522  051A  3400               	retlw	0
   523  051B  347F               	retlw	127
   524  051C  3400               	retlw	0
   525  051D  3427               	retlw	39
   526  051E  3400               	retlw	0
   527  051F  347D               	retlw	125
   528  0520  3400               	retlw	0
   529  0521  346D               	retlw	109
   530  0522  3400               	retlw	0
   531  0523  3466               	retlw	102
   532  0524  3400               	retlw	0
   533  0525  344F               	retlw	79
   534  0526  3400               	retlw	0
   535  0527  345B               	retlw	91
   536  0528  3400               	retlw	0
   537  0529  3406               	retlw	6
   538  052A  3400               	retlw	0
   539  052B  343F               	retlw	63
   540  052C  3400               	retlw	0
   541                           
   542                           ;initializer for _num0
   543  052D  343F               	retlw	63
   544  052E  3400               	retlw	0
   545  052F  3406               	retlw	6
   546  0530  3400               	retlw	0
   547  0531  345B               	retlw	91
   548  0532  3400               	retlw	0
   549  0533  344F               	retlw	79
   550  0534  3400               	retlw	0
   551  0535  3466               	retlw	102
   552  0536  3400               	retlw	0
   553  0537  346D               	retlw	109
   554  0538  3400               	retlw	0
   555  0539  347D               	retlw	125
   556  053A  3400               	retlw	0
   557  053B  3427               	retlw	39
   558  053C  3400               	retlw	0
   559  053D  347F               	retlw	127
   560  053E  3400               	retlw	0
   561  053F  346F               	retlw	111
   562  0540  3400               	retlw	0
   563                           
   564                           ;initializer for _mojf
   565  0541  3471               	retlw	113
   566  0542  3400               	retlw	0
   567  0543  3479               	retlw	121
   568  0544  3400               	retlw	0
   569  0545  345E               	retlw	94
   570  0546  3400               	retlw	0
   571  0547  3458               	retlw	88
   572  0548  3400               	retlw	0
   573  0549  347C               	retlw	124
   574  054A  3400               	retlw	0
   575  054B  345F               	retlw	95
   576  054C  3400               	retlw	0
   577  000E                     _PORTC	set	14
   578  000D                     _PORTB	set	13
   579  000C                     _PORTA	set	12
   580  0061                     _RA1	set	97
   581  0060                     _RA0	set	96
   582  0062                     _RA2	set	98
   583  0077                     _RC7	set	119
   584  0072                     _RC2	set	114
   585  0071                     _RC1	set	113
   586  0070                     _RC0	set	112
   587  0076                     _RC6	set	118
   588  0075                     _RC5	set	117
   589  0099                     _OSCCON	set	153
   590  008E                     _TRISC	set	142
   591  008D                     _TRISB	set	141
   592  008C                     _TRISA	set	140
   593  018D                     _ANSELB	set	397
   594  018C                     _ANSELA	set	396
   595                           
   596                           	psect	cinit
   597  07CF                     start_initialization:	
   598                           ; #config settings
   599                           
   600  07CF                     __initialization:
   601                           
   602                           ; Initialize objects allocated to BANK0
   603  07CF  303B               	movlw	low __pidataBANK0
   604  07D0  0084               	movwf	4
   605  07D1  3084               	movlw	(high __pidataBANK0)| (0+128)
   606  07D2  0085               	movwf	5
   607  07D3  3058               	movlw	low __pdataBANK0
   608  07D4  0086               	movwf	6
   609  07D5  3000               	movlw	high __pdataBANK0
   610  07D6  0087               	movwf	7
   611  07D7  3012               	movlw	18
   612  07D8  3184  242C  3187   	fcall	init_ram
   613                           
   614                           ; Initialize objects allocated to BANK1
   615  07DB  304D               	movlw	low __pidataBANK1
   616  07DC  0084               	movwf	4
   617  07DD  3085               	movlw	(high __pidataBANK1)| (0+128)
   618  07DE  0085               	movwf	5
   619  07DF  30A0               	movlw	low __pdataBANK1
   620  07E0  0086               	movwf	6
   621  07E1  3000               	movlw	high __pdataBANK1
   622  07E2  0087               	movwf	7
   623  07E3  304A               	movlw	74
   624  07E4  3184  242C  3187   	fcall	init_ram
   625                           
   626                           ; Initialize objects allocated to BANK2
   627  07E7  300D               	movlw	low __pidataBANK2
   628  07E8  0084               	movwf	4
   629  07E9  3085               	movlw	(high __pidataBANK2)| (0+128)
   630  07EA  0085               	movwf	5
   631  07EB  3020               	movlw	low __pdataBANK2
   632  07EC  0086               	movwf	6
   633  07ED  3001               	movlw	high __pdataBANK2
   634  07EE  0087               	movwf	7
   635  07EF  3040               	movlw	64
   636  07F0  3184  242C  3187   	fcall	init_ram
   637                           
   638                           ; Clear objects allocated to COMMON
   639  07F3  01FB               	clrf	__pbssCOMMON& (0+127)
   640  07F4  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   641                           
   642                           ; Clear objects allocated to BANK0
   643  07F5  3020               	movlw	low __pbssBANK0
   644  07F6  0084               	movwf	4
   645  07F7  3000               	movlw	high __pbssBANK0
   646  07F8  0085               	movwf	5
   647  07F9  3020               	movlw	32
   648  07FA  3184  2426  3187   	fcall	clear_ram0
   649  07FD                     end_of_initialization:	
   650                           ;End of C runtime variable initialization code
   651                           
   652  07FD                     __end_of__initialization:
   653  07FD  0020               	movlb	0
   654  07FE  3185  2DE3         	ljmp	_main	;jump to C main() function
   655                           
   656                           	psect	bssCOMMON
   657  007B                     __pbssCOMMON:
   658  007B                     _flag_sw3:
   659  007B                     	ds	2
   660                           
   661                           	psect	bssBANK0
   662  0020                     __pbssBANK0:
   663  0020                     _fugou:
   664  0020                     	ds	2
   665  0022                     _code1:
   666  0022                     	ds	2
   667  0024                     _code10:
   668  0024                     	ds	2
   669  0026                     _code100:
   670  0026                     	ds	2
   671  0028                     _code1000:
   672  0028                     	ds	2
   673  002A                     _count:
   674  002A                     	ds	2
   675  002C                     _atai:
   676  002C                     	ds	2
   677  002E                     _atai1:
   678  002E                     	ds	2
   679  0030                     _atai10:
   680  0030                     	ds	2
   681  0032                     _ccw:
   682  0032                     	ds	2
   683  0034                     _cw:
   684  0034                     	ds	2
   685  0036                     _flg:
   686  0036                     	ds	2
   687  0038                     _flag_P:
   688  0038                     	ds	2
   689  003A                     _flag_R:
   690  003A                     	ds	2
   691  003C                     _flag_sw2:
   692  003C                     	ds	2
   693  003E                     _flag_sw1:
   694  003E                     	ds	2
   695                           
   696                           	psect	dataBANK0
   697  0058                     __pdataBANK0:
   698  0058                     _gusu:
   699  0058                     	ds	10
   700  0062                     _mojn:
   701  0062                     	ds	4
   702  0066                     _mojh:
   703  0066                     	ds	4
   704                           
   705                           	psect	dataBANK1
   706  00A0                     __pdataBANK1:
   707  00A0                     _samp:
   708  00A0                     	ds	32
   709  00C0                     _moji:
   710  00C0                     	ds	20
   711  00D4                     _moja:
   712  00D4                     	ds	12
   713  00E0                     _kisu:
   714  00E0                     	ds	10
   715                           
   716                           	psect	dataBANK2
   717  0120                     __pdataBANK2:
   718  0120                     _samf:
   719  0120                     	ds	32
   720  0140                     _num0:
   721  0140                     	ds	20
   722  0154                     _mojf:
   723  0154                     	ds	12
   724                           
   725                           	psect	inittext
   726  042C                     init_ram:
   727  042C  00FE               	movwf	btemp
   728  042D                     initloop:
   729  042D  0012               	moviw fsr0++
   730  042E  001E               	movwi fsr1++
   731  042F  0BFE               	decfsz	btemp,f
   732  0430  2C2D               	goto	initloop
   733  0431  3400               	retlw	0
   734                           
   735                           	psect	clrtext
   736  0426                     clear_ram0:	
   737                           ;	Called with FSR0 containing the base address, and
   738                           ;	WREG with the size to clear
   739                           
   740  0426  0064               	clrwdt	;clear the watchdog before getting into this loop
   741  0427                     clrloop0:
   742  0427  0180               	clrf	0	;clear RAM location pointed to by FSR
   743  0428  3101               	addfsr 0,1
   744  0429  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   745  042A  2C27               	goto	clrloop0	;have we reached the end yet?
   746  042B  3400               	retlw	0	;all done for this memory range, return
   747                           
   748                           	psect	cstackCOMMON
   749  0070                     __pcstackCOMMON:
   750  0070                     ?_dynam:
   751  0070                     ?_portinit:	
   752                           ; 1 bytes @ 0x0
   753                           
   754  0070                     ??_portinit:	
   755                           ; 1 bytes @ 0x0
   756                           
   757  0070                     ?_zenoff:	
   758                           ; 1 bytes @ 0x0
   759                           
   760  0070                     ??_zenoff:	
   761                           ; 1 bytes @ 0x0
   762                           
   763  0070                     ?_tactsw:	
   764                           ; 1 bytes @ 0x0
   765                           
   766  0070                     ??_tactsw:	
   767                           ; 1 bytes @ 0x0
   768                           
   769  0070                     ?_main:	
   770                           ; 1 bytes @ 0x0
   771                           
   772  0070                     ?___lwdiv:	
   773                           ; 1 bytes @ 0x0
   774                           
   775  0070                     dynam@dig1data:	
   776                           ; 2 bytes @ 0x0
   777                           
   778  0070                     ___lwdiv@divisor:	
   779                           ; 2 bytes @ 0x0
   780                           
   781                           
   782                           ; 2 bytes @ 0x0
   783  0070                     	ds	2
   784  0072                     dynam@dig2data:
   785  0072                     tactsw@b:	
   786                           ; 2 bytes @ 0x2
   787                           
   788  0072                     ___lwdiv@dividend:	
   789                           ; 2 bytes @ 0x2
   790                           
   791                           
   792                           ; 2 bytes @ 0x2
   793  0072                     	ds	2
   794  0074                     ??___lwdiv:
   795  0074                     dynam@smdata:	
   796                           ; 1 bytes @ 0x4
   797                           
   798  0074                     tactsw@c:	
   799                           ; 2 bytes @ 0x4
   800                           
   801                           
   802                           ; 2 bytes @ 0x4
   803  0074                     	ds	1
   804  0075                     ___lwdiv@quotient:
   805                           
   806                           ; 2 bytes @ 0x5
   807  0075                     	ds	1
   808  0076                     dynam@tr:
   809  0076                     tactsw@a:	
   810                           ; 2 bytes @ 0x6
   811                           
   812                           
   813                           ; 2 bytes @ 0x6
   814  0076                     	ds	1
   815  0077                     ___lwdiv@counter:
   816                           
   817                           ; 1 bytes @ 0x7
   818  0077                     	ds	1
   819  0078                     ??_dynam:
   820  0078                     ??_waitSEG:	
   821                           ; 1 bytes @ 0x8
   822                           
   823  0078                     ?_tact:	
   824                           ; 1 bytes @ 0x8
   825                           
   826  0078                     waitSEG@i:	
   827                           ; 1 bytes @ 0x8
   828                           
   829  0078                     tact@mode:	
   830                           ; 2 bytes @ 0x8
   831                           
   832                           
   833                           ; 2 bytes @ 0x8
   834  0078                     	ds	2
   835  007A                     ??_tact:
   836  007A                     ??_main:	
   837                           ; 1 bytes @ 0xA
   838                           
   839                           
   840                           ; 1 bytes @ 0xA
   841  007A                     	ds	1
   842                           
   843                           	psect	cstackBANK0
   844  0040                     __pcstackBANK0:
   845  0040                     dynam@smd:
   846                           
   847                           ; 2 bytes @ 0x0
   848  0040                     	ds	2
   849  0042                     dynam@tm:
   850                           
   851                           ; 2 bytes @ 0x2
   852  0042                     	ds	2
   853  0044                     dynam@j:
   854                           
   855                           ; 2 bytes @ 0x4
   856  0044                     	ds	2
   857  0046                     dynam@ext:
   858                           
   859                           ; 2 bytes @ 0x6
   860  0046                     	ds	2
   861  0048                     ?_waitSEG:
   862  0048                     waitSEG@seg1:	
   863                           ; 1 bytes @ 0x8
   864                           
   865                           
   866                           ; 2 bytes @ 0x8
   867  0048                     	ds	2
   868  004A                     waitSEG@seg2:
   869                           
   870                           ; 2 bytes @ 0xA
   871  004A                     	ds	2
   872  004C                     waitSEG@wt:
   873                           
   874                           ; 2 bytes @ 0xC
   875  004C                     	ds	10
   876  0056                     main@i:
   877                           
   878                           ; 2 bytes @ 0x16
   879  0056                     	ds	2
   880                           
   881                           	psect	maintext
   882  05E3                     __pmaintext:	
   883 ;;
   884 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   885 ;;
   886 ;; *************** function _main *****************
   887 ;; Defined at:
   888 ;;		line 463 in file "Q2.c"
   889 ;; Parameters:    Size  Location     Type
   890 ;;		None
   891 ;; Auto vars:     Size  Location     Type
   892 ;;  i               2   22[BANK0 ] int 
   893 ;;  n               2    0        int 
   894 ;;  m               2    0        int 
   895 ;;  k               2    0        int 
   896 ;;  j               2    0        int 
   897 ;; Return value:  Size  Location     Type
   898 ;;                  1    wreg      void 
   899 ;; Registers used:
   900 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   901 ;; Tracked objects:
   902 ;;		On entry : B1F/0
   903 ;;		On exit  : 0/0
   904 ;;		Unchanged: 0/0
   905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   907 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
   908 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   909 ;;      Totals:         1      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
   910 ;;Total ram usage:       11 bytes
   911 ;; Hardware stack levels required when called:    2
   912 ;; This function calls:
   913 ;;		_dynam
   914 ;;		_portinit
   915 ;;		_tact
   916 ;;		_waitSEG
   917 ;;		_zenoff
   918 ;; This function is called by:
   919 ;;		Startup code after reset
   920 ;; This function uses a non-reentrant model
   921 ;;
   922                           
   923                           
   924                           ;psect for function _main
   925  05E3                     _main:
   926  05E3                     l2098:	
   927                           ;incstack = 0
   928                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   929                           
   930                           
   931                           ;Q2.c: 466:     OSCCON=0x7A;
   932  05E3  307A               	movlw	122
   933  05E4  0021               	movlb	1	; select bank1
   934  05E5  0099               	movwf	25	;volatile
   935  05E6                     l2100:
   936                           
   937                           ;Q2.c: 468:     portinit();
   938  05E6  3184  244D  3185   	fcall	_portinit
   939                           
   940                           ;Q2.c: 470:     zenoff();
   941  05E9  3184  2432  3185   	fcall	_zenoff
   942  05EC                     l2102:
   943  05EC                     l2104:
   944  05EC                     l2106:
   945  05EC                     l2108:
   946  05EC                     l2110:
   947  05EC                     l265:	
   948                           ;Q2.c: 475:     while((RA0!=1)||(RA1!=1)||(RA2!=1));
   949                           
   950  05EC  0020               	movlb	0	; select bank0
   951  05ED  1C0C               	btfss	12,0	;volatile
   952  05EE  2DF0               	goto	u1641
   953  05EF  2DF1               	goto	u1640
   954  05F0                     u1641:
   955  05F0  2DEC               	goto	l265
   956  05F1                     u1640:
   957  05F1                     l2112:
   958  05F1  1C8C               	btfss	12,1	;volatile
   959  05F2  2DF4               	goto	u1651
   960  05F3  2DF5               	goto	u1650
   961  05F4                     u1651:
   962  05F4  2DEC               	goto	l265
   963  05F5                     u1650:
   964  05F5                     l2114:
   965  05F5  1D0C               	btfss	12,2	;volatile
   966  05F6  2DF8               	goto	u1661
   967  05F7  2DF9               	goto	u1660
   968  05F8                     u1661:
   969  05F8  2DEC               	goto	l265
   970  05F9                     u1660:
   971  05F9                     l267:
   972                           
   973                           ;Q2.c: 478:     RC0=RC2=RC1=1;
   974  05F9  148E               	bsf	14,1	;volatile
   975  05FA  188E               	btfsc	14,1	;volatile
   976  05FB  2DFD               	goto	u1671
   977  05FC  2E00               	goto	u1670
   978  05FD                     u1671:
   979  05FD  0020               	movlb	0	; select bank0
   980  05FE  150E               	bsf	14,2	;volatile
   981  05FF  2E02               	goto	u1684
   982  0600                     u1670:
   983  0600  0020               	movlb	0	; select bank0
   984  0601  110E               	bcf	14,2	;volatile
   985  0602                     u1684:
   986  0602  190E               	btfsc	14,2	;volatile
   987  0603  2E05               	goto	u1681
   988  0604  2E08               	goto	u1680
   989  0605                     u1681:
   990  0605  0020               	movlb	0	; select bank0
   991  0606  140E               	bsf	14,0	;volatile
   992  0607  2E0A               	goto	u1694
   993  0608                     u1680:
   994  0608  0020               	movlb	0	; select bank0
   995  0609  100E               	bcf	14,0	;volatile
   996  060A                     u1694:
   997  060A                     l268:	
   998                           ;Q2.c: 482:     while(1){
   999                           
  1000                           
  1001                           ;Q2.c: 483:         if(RA0 == 0){
  1002  060A  180C               	btfsc	12,0	;volatile
  1003  060B  2E0D               	goto	u1701
  1004  060C  2E0E               	goto	u1700
  1005  060D                     u1701:
  1006  060D  2E0A               	goto	l268
  1007  060E                     u1700:
  1008  060E                     l272:	
  1009                           ;Q2.c: 488:     while(1){
  1010                           
  1011                           
  1012                           ;Q2.c: 489:         if(RA0 == 0){
  1013  060E  180C               	btfsc	12,0	;volatile
  1014  060F  2E11               	goto	u1711
  1015  0610  2E12               	goto	u1710
  1016  0611                     u1711:
  1017  0611  2E0E               	goto	l272
  1018  0612                     u1710:
  1019  0612                     l2118:
  1020                           
  1021                           ;Q2.c: 491:             dynam(0x40,0x40,0,0);
  1022  0612  3040               	movlw	64
  1023  0613  00F0               	movwf	dynam@dig1data
  1024  0614  3000               	movlw	0
  1025  0615  00F1               	movwf	dynam@dig1data+1
  1026  0616  3040               	movlw	64
  1027  0617  00F2               	movwf	dynam@dig2data
  1028  0618  3000               	movlw	0
  1029  0619  00F3               	movwf	dynam@dig2data+1
  1030  061A  3000               	movlw	0
  1031  061B  00F4               	movwf	dynam@smdata
  1032  061C  00F5               	movwf	dynam@smdata+1
  1033  061D  3000               	movlw	0
  1034  061E  00F6               	movwf	dynam@tr
  1035  061F  00F7               	movwf	dynam@tr+1
  1036  0620  3186  2665  3185   	fcall	_dynam
  1037                           
  1038                           ;Q2.c: 492:             tact(2);
  1039  0623  3002               	movlw	2
  1040  0624  00F8               	movwf	tact@mode
  1041  0625  3000               	movlw	0
  1042  0626  00F9               	movwf	tact@mode+1
  1043  0627  3185  2597  3185   	fcall	_tact
  1044  062A                     l2120:
  1045                           
  1046                           ;Q2.c: 494:             if((flag_P = 1)&&(flag_R = 1)){
  1047  062A  3001               	movlw	1
  1048  062B  0020               	movlb	0	; select bank0
  1049  062C  00B8               	movwf	_flag_P
  1050  062D  3000               	movlw	0
  1051  062E  00B9               	movwf	_flag_P+1
  1052  062F                     l2122:
  1053  062F  3001               	movlw	1
  1054  0630  00BA               	movwf	_flag_R
  1055  0631  3000               	movlw	0
  1056  0632  00BB               	movwf	_flag_R+1
  1057  0633                     l2124:
  1058                           
  1059                           ;Q2.c: 498:                     for(i = 1;i <= 4; i++){
  1060  0633  3001               	movlw	1
  1061  0634  0020               	movlb	0	; select bank0
  1062  0635  00D6               	movwf	main@i
  1063  0636  3000               	movlw	0
  1064  0637  00D7               	movwf	main@i+1
  1065  0638                     l2130:
  1066                           
  1067                           ;Q2.c: 500:                         waitSEG(moji[i],moji[i],1000);
  1068  0638  0020               	movlb	0	; select bank0
  1069  0639  3556               	lslf	main@i,w
  1070  063A  3EC0               	addlw	(low (_moji| 0))& (0+255)
  1071  063B  0086               	movwf	6
  1072  063C  0187               	clrf	7
  1073  063D  3F40               	moviw [0]fsr1
  1074  063E  00C8               	movwf	waitSEG@seg1
  1075  063F  3F41               	moviw [1]fsr1
  1076  0640  00C9               	movwf	waitSEG@seg1+1
  1077  0641  3556               	lslf	main@i,w
  1078  0642  3EC0               	addlw	(low (_moji| 0))& (0+255)
  1079  0643  0086               	movwf	6
  1080  0644  0187               	clrf	7
  1081  0645  3F40               	moviw [0]fsr1
  1082  0646  00CA               	movwf	waitSEG@seg2
  1083  0647  3F41               	moviw [1]fsr1
  1084  0648  00CB               	movwf	waitSEG@seg2+1
  1085  0649  30E8               	movlw	232
  1086  064A  00CC               	movwf	waitSEG@wt
  1087  064B  3003               	movlw	3
  1088  064C  00CD               	movwf	waitSEG@wt+1
  1089  064D  3184  2460  3185   	fcall	_waitSEG
  1090  0650                     l2132:
  1091                           
  1092                           ;Q2.c: 502:                     }
  1093  0650  3001               	movlw	1
  1094  0651  0020               	movlb	0	; select bank0
  1095  0652  07D6               	addwf	main@i,f
  1096  0653  3000               	movlw	0
  1097  0654  3DD7               	addwfc	main@i+1,f
  1098  0655                     l2134:
  1099  0655  0857               	movf	main@i+1,w
  1100  0656  3A80               	xorlw	128
  1101  0657  00FA               	movwf	??_main
  1102  0658  3080               	movlw	128
  1103  0659  027A               	subwf	??_main,w
  1104  065A  1D03               	skipz
  1105  065B  2E5E               	goto	u1725
  1106  065C  3005               	movlw	5
  1107  065D  0256               	subwf	main@i,w
  1108  065E                     u1725:
  1109  065E  1C03               	skipc
  1110  065F  2E61               	goto	u1721
  1111  0660  2E62               	goto	u1720
  1112  0661                     u1721:
  1113  0661  2E38               	goto	l2130
  1114  0662                     u1720:
  1115  0662  2E33               	goto	l2124
  1116  0663  3180  2802         	ljmp	start
  1117  0665                     __end_of_main:
  1118                           
  1119                           	psect	text1
  1120  0432                     __ptext1:	
  1121 ;; *************** function _zenoff *****************
  1122 ;; Defined at:
  1123 ;;		line 206 in file "Q2.c"
  1124 ;; Parameters:    Size  Location     Type
  1125 ;;		None
  1126 ;; Auto vars:     Size  Location     Type
  1127 ;;		None
  1128 ;; Return value:  Size  Location     Type
  1129 ;;                  1    wreg      void 
  1130 ;; Registers used:
  1131 ;;		status,2
  1132 ;; Tracked objects:
  1133 ;;		On entry : 0/0
  1134 ;;		On exit  : 0/0
  1135 ;;		Unchanged: 0/0
  1136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1141 ;;Total ram usage:        0 bytes
  1142 ;; Hardware stack levels used:    1
  1143 ;; This function calls:
  1144 ;;		Nothing
  1145 ;; This function is called by:
  1146 ;;		_main
  1147 ;; This function uses a non-reentrant model
  1148 ;;
  1149                           
  1150                           
  1151                           ;psect for function _zenoff
  1152  0432                     _zenoff:
  1153  0432                     l1802:	
  1154                           ;incstack = 0
  1155                           ; Regs used in _zenoff: [status,2]
  1156                           
  1157                           
  1158                           ;Q2.c: 208:     RC0=1;
  1159  0432  0020               	movlb	0	; select bank0
  1160  0433  140E               	bsf	14,0	;volatile
  1161                           
  1162                           ;Q2.c: 209:     RC1=1;
  1163  0434  148E               	bsf	14,1	;volatile
  1164                           
  1165                           ;Q2.c: 210:     RC2=1;
  1166  0435  150E               	bsf	14,2	;volatile
  1167  0436                     l1804:
  1168                           
  1169                           ;Q2.c: 211:     PORTB=0x00;
  1170  0436  018D               	clrf	13	;volatile
  1171  0437                     l1806:
  1172                           
  1173                           ;Q2.c: 212:     RC7=0;RC7=1;RC7=0;
  1174  0437  138E               	bcf	14,7	;volatile
  1175  0438                     l1808:
  1176  0438  178E               	bsf	14,7	;volatile
  1177  0439                     l1810:
  1178  0439  138E               	bcf	14,7	;volatile
  1179  043A                     l115:
  1180  043A  0008               	return
  1181  043B                     __end_of_zenoff:
  1182                           
  1183                           	psect	text2
  1184  0460                     __ptext2:	
  1185 ;; *************** function _waitSEG *****************
  1186 ;; Defined at:
  1187 ;;		line 187 in file "Q2.c"
  1188 ;; Parameters:    Size  Location     Type
  1189 ;;  seg1            2    8[BANK0 ] unsigned short 
  1190 ;;  seg2            2   10[BANK0 ] unsigned short 
  1191 ;;  wt              2   12[BANK0 ] unsigned short 
  1192 ;; Auto vars:     Size  Location     Type
  1193 ;;  i               2    8[COMMON] unsigned int 
  1194 ;; Return value:  Size  Location     Type
  1195 ;;                  1    wreg      void 
  1196 ;; Registers used:
  1197 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1198 ;; Tracked objects:
  1199 ;;		On entry : 0/0
  1200 ;;		On exit  : 0/0
  1201 ;;		Unchanged: 0/0
  1202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1203 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1204 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1206 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1207 ;;Total ram usage:        8 bytes
  1208 ;; Hardware stack levels used:    1
  1209 ;; Hardware stack levels required when called:    1
  1210 ;; This function calls:
  1211 ;;		___lwdiv
  1212 ;;		_dynam
  1213 ;; This function is called by:
  1214 ;;		_main
  1215 ;; This function uses a non-reentrant model
  1216 ;;
  1217                           
  1218                           
  1219                           ;psect for function _waitSEG
  1220  0460                     _waitSEG:
  1221  0460                     l1788:	
  1222                           ;incstack = 0
  1223                           ; Regs used in _waitSEG: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1224                           
  1225                           
  1226                           ;Q2.c: 187: void waitSEG(unsigned short seg1,unsigned short seg2,unsigned short wt);Q2.c
      +                          : 188: {;Q2.c: 189:     wt = wt / 10;
  1227  0460  300A               	movlw	10
  1228  0461  00F0               	movwf	___lwdiv@divisor
  1229  0462  3000               	movlw	0
  1230  0463  00F1               	movwf	___lwdiv@divisor+1
  1231  0464  0020               	movlb	0	; select bank0
  1232  0465  084D               	movf	waitSEG@wt+1,w
  1233  0466  00F3               	movwf	___lwdiv@dividend+1
  1234  0467  084C               	movf	waitSEG@wt,w
  1235  0468  00F2               	movwf	___lwdiv@dividend
  1236  0469  3184  2494  3184   	fcall	___lwdiv
  1237  046C  0871               	movf	?___lwdiv+1,w
  1238  046D  0020               	movlb	0	; select bank0
  1239  046E  00CD               	movwf	waitSEG@wt+1
  1240  046F  0870               	movf	?___lwdiv,w
  1241  0470  00CC               	movwf	waitSEG@wt
  1242  0471                     l1790:
  1243                           
  1244                           ;Q2.c: 190:     unsigned int i;;Q2.c: 191:     for(i=wt;i>0;--i){
  1245  0471  084D               	movf	waitSEG@wt+1,w
  1246  0472  00F9               	movwf	waitSEG@i+1
  1247  0473  084C               	movf	waitSEG@wt,w
  1248  0474  00F8               	movwf	waitSEG@i
  1249  0475                     l1792:
  1250  0475  0878               	movf	waitSEG@i,w
  1251  0476  0479               	iorwf	waitSEG@i+1,w
  1252  0477  1D03               	btfss	3,2
  1253  0478  2C7A               	goto	u1221
  1254  0479  2C7B               	goto	u1220
  1255  047A                     u1221:
  1256  047A  2C7C               	goto	l1796
  1257  047B                     u1220:
  1258  047B  2C93               	goto	l109
  1259  047C                     l1796:
  1260                           
  1261                           ;Q2.c: 192:         dynam(seg1,seg2,0,0);
  1262  047C  0020               	movlb	0	; select bank0
  1263  047D  0849               	movf	waitSEG@seg1+1,w
  1264  047E  00F1               	movwf	dynam@dig1data+1
  1265  047F  0848               	movf	waitSEG@seg1,w
  1266  0480  00F0               	movwf	dynam@dig1data
  1267  0481  084B               	movf	waitSEG@seg2+1,w
  1268  0482  00F3               	movwf	dynam@dig2data+1
  1269  0483  084A               	movf	waitSEG@seg2,w
  1270  0484  00F2               	movwf	dynam@dig2data
  1271  0485  3000               	movlw	0
  1272  0486  00F4               	movwf	dynam@smdata
  1273  0487  00F5               	movwf	dynam@smdata+1
  1274  0488  3000               	movlw	0
  1275  0489  00F6               	movwf	dynam@tr
  1276  048A  00F7               	movwf	dynam@tr+1
  1277  048B  3186  2665  3184   	fcall	_dynam
  1278  048E                     l1798:
  1279                           
  1280                           ;Q2.c: 193:     }
  1281  048E  3001               	movlw	1
  1282  048F  02F8               	subwf	waitSEG@i,f
  1283  0490  3000               	movlw	0
  1284  0491  3BF9               	subwfb	waitSEG@i+1,f
  1285  0492  2C75               	goto	l1792
  1286  0493                     l109:
  1287  0493  0008               	return
  1288  0494                     __end_of_waitSEG:
  1289                           
  1290                           	psect	text3
  1291  0665                     __ptext3:	
  1292 ;; *************** function _dynam *****************
  1293 ;; Defined at:
  1294 ;;		line 217 in file "Q2.c"
  1295 ;; Parameters:    Size  Location     Type
  1296 ;;  dig1data        2    0[COMMON] unsigned short 
  1297 ;;  dig2data        2    2[COMMON] unsigned short 
  1298 ;;  smdata          2    4[COMMON] unsigned short 
  1299 ;;  tr              2    6[COMMON] unsigned int 
  1300 ;; Auto vars:     Size  Location     Type
  1301 ;;  ext             2    6[BANK0 ] unsigned short 
  1302 ;;  j               2    4[BANK0 ] unsigned int 
  1303 ;;  tm              2    2[BANK0 ] unsigned int 
  1304 ;;  smd             2    0[BANK0 ] unsigned short 
  1305 ;; Return value:  Size  Location     Type
  1306 ;;                  1    wreg      void 
  1307 ;; Registers used:
  1308 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1309 ;; Tracked objects:
  1310 ;;		On entry : 0/0
  1311 ;;		On exit  : 0/0
  1312 ;;		Unchanged: 0/0
  1313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1314 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1315 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1317 ;;      Totals:         8       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1318 ;;Total ram usage:       16 bytes
  1319 ;; Hardware stack levels used:    1
  1320 ;; This function calls:
  1321 ;;		Nothing
  1322 ;; This function is called by:
  1323 ;;		_waitSEG
  1324 ;;		_main
  1325 ;;		_clear
  1326 ;; This function uses a non-reentrant model
  1327 ;;
  1328                           
  1329                           
  1330                           ;psect for function _dynam
  1331  0665                     _dynam:
  1332  0665                     l1558:	
  1333                           ;incstack = 0
  1334                           ; Regs used in _dynam: [wreg-fsr0h+status,2+status,0]
  1335                           
  1336  0665  0020               	movlb	0	; select bank0
  1337  0666  01C2               	clrf	dynam@tm
  1338  0667  01C3               	clrf	dynam@tm+1
  1339                           
  1340                           ;Q2.c: 220:     unsigned short ext=0,smd=0;
  1341  0668  01C6               	clrf	dynam@ext
  1342  0669  01C7               	clrf	dynam@ext+1
  1343  066A  01C0               	clrf	dynam@smd
  1344  066B  01C1               	clrf	dynam@smd+1
  1345  066C                     l1560:
  1346                           
  1347                           ;Q2.c: 221:     RC7=0;
  1348  066C  138E               	bcf	14,7	;volatile
  1349  066D                     l1562:
  1350                           
  1351                           ;Q2.c: 222:     PORTB=dig1data;
  1352  066D  0870               	movf	dynam@dig1data,w
  1353  066E  008D               	movwf	13	;volatile
  1354  066F                     l1564:
  1355                           
  1356                           ;Q2.c: 223:     RC5=0;RC6=1;
  1357  066F  128E               	bcf	14,5	;volatile
  1358  0670                     l1566:
  1359  0670  170E               	bsf	14,6	;volatile
  1360  0671                     l1568:
  1361                           
  1362                           ;Q2.c: 224:     if(tr==5){tm=4000;}
  1363  0671  3005               	movlw	5
  1364  0672  0676               	xorwf	dynam@tr,w
  1365  0673  0477               	iorwf	dynam@tr+1,w
  1366  0674  1D03               	btfss	3,2
  1367  0675  2E77               	goto	u891
  1368  0676  2E78               	goto	u890
  1369  0677                     u891:
  1370  0677  2E7D               	goto	l1572
  1371  0678                     u890:
  1372  0678                     l1570:
  1373  0678  30A0               	movlw	160
  1374  0679  00C2               	movwf	dynam@tm
  1375  067A  300F               	movlw	15
  1376  067B  00C3               	movwf	dynam@tm+1
  1377  067C  2E81               	goto	l119
  1378  067D                     l1572:
  1379  067D  30D0               	movlw	208
  1380  067E  00C2               	movwf	dynam@tm
  1381  067F  3007               	movlw	7
  1382  0680  00C3               	movwf	dynam@tm+1
  1383  0681                     l119:
  1384                           
  1385                           ;Q2.c: 226:     for(j=tm;j>0;--j);
  1386  0681  0843               	movf	dynam@tm+1,w
  1387  0682  00C5               	movwf	dynam@j+1
  1388  0683  0842               	movf	dynam@tm,w
  1389  0684  00C4               	movwf	dynam@j
  1390  0685                     l1574:
  1391  0685  0844               	movf	dynam@j,w
  1392  0686  0445               	iorwf	dynam@j+1,w
  1393  0687  1D03               	btfss	3,2
  1394  0688  2E8A               	goto	u901
  1395  0689  2E8B               	goto	u900
  1396  068A                     u901:
  1397  068A  2E8C               	goto	l1578
  1398  068B                     u900:
  1399  068B  2E91               	goto	l121
  1400  068C                     l1578:
  1401  068C  3001               	movlw	1
  1402  068D  02C4               	subwf	dynam@j,f
  1403  068E  3000               	movlw	0
  1404  068F  3BC5               	subwfb	dynam@j+1,f
  1405  0690  2E85               	goto	l1574
  1406  0691                     l121:
  1407                           
  1408                           ;Q2.c: 227:     RC5=0;RC6=0;
  1409  0691  128E               	bcf	14,5	;volatile
  1410  0692  130E               	bcf	14,6	;volatile
  1411  0693                     l1582:
  1412                           
  1413                           ;Q2.c: 228:     PORTB=dig2data;
  1414  0693  0872               	movf	dynam@dig2data,w
  1415  0694  008D               	movwf	13	;volatile
  1416  0695                     l1584:
  1417                           
  1418                           ;Q2.c: 229:     RC6=0;RC5=1;
  1419  0695  130E               	bcf	14,6	;volatile
  1420  0696                     l1586:
  1421  0696  168E               	bsf	14,5	;volatile
  1422  0697                     l1588:
  1423                           
  1424                           ;Q2.c: 230:     if(tr==5){tm=4000;}
  1425  0697  3005               	movlw	5
  1426  0698  0676               	xorwf	dynam@tr,w
  1427  0699  0477               	iorwf	dynam@tr+1,w
  1428  069A  1D03               	btfss	3,2
  1429  069B  2E9D               	goto	u911
  1430  069C  2E9E               	goto	u910
  1431  069D                     u911:
  1432  069D  2EA3               	goto	l1592
  1433  069E                     u910:
  1434  069E                     l1590:
  1435  069E  30A0               	movlw	160
  1436  069F  00C2               	movwf	dynam@tm
  1437  06A0  300F               	movlw	15
  1438  06A1  00C3               	movwf	dynam@tm+1
  1439  06A2  2EA7               	goto	l123
  1440  06A3                     l1592:
  1441  06A3  30D0               	movlw	208
  1442  06A4  00C2               	movwf	dynam@tm
  1443  06A5  3007               	movlw	7
  1444  06A6  00C3               	movwf	dynam@tm+1
  1445  06A7                     l123:
  1446                           
  1447                           ;Q2.c: 232:     for(j=tm;j>0;--j);
  1448  06A7  0843               	movf	dynam@tm+1,w
  1449  06A8  00C5               	movwf	dynam@j+1
  1450  06A9  0842               	movf	dynam@tm,w
  1451  06AA  00C4               	movwf	dynam@j
  1452  06AB                     l1594:
  1453  06AB  0844               	movf	dynam@j,w
  1454  06AC  0445               	iorwf	dynam@j+1,w
  1455  06AD  1D03               	btfss	3,2
  1456  06AE  2EB0               	goto	u921
  1457  06AF  2EB1               	goto	u920
  1458  06B0                     u921:
  1459  06B0  2EB2               	goto	l1598
  1460  06B1                     u920:
  1461  06B1  2EB7               	goto	l125
  1462  06B2                     l1598:
  1463  06B2  3001               	movlw	1
  1464  06B3  02C4               	subwf	dynam@j,f
  1465  06B4  3000               	movlw	0
  1466  06B5  3BC5               	subwfb	dynam@j+1,f
  1467  06B6  2EAB               	goto	l1594
  1468  06B7                     l125:
  1469                           
  1470                           ;Q2.c: 233:     RC5=0;RC6=0;
  1471  06B7  128E               	bcf	14,5	;volatile
  1472  06B8  130E               	bcf	14,6	;volatile
  1473                           
  1474                           ;Q2.c: 234:     switch(smdata){
  1475  06B9  2FBE               	goto	l1708
  1476  06BA                     l1602:
  1477                           
  1478                           ;Q2.c: 236:                 PORTB=0x00;smd=(0x01|0x02|0x04|0x08|0x10|0x20);
  1479  06BA  018D               	clrf	13	;volatile
  1480  06BB                     l1604:
  1481  06BB                     l1606:
  1482                           
  1483                           ;Q2.c: 237:                 RC7=0;RC7=1;RC7=0;
  1484  06BB  138E               	bcf	14,7	;volatile
  1485  06BC                     l1608:
  1486  06BC  178E               	bsf	14,7	;volatile
  1487  06BD                     l1610:
  1488  06BD  138E               	bcf	14,7	;volatile
  1489                           
  1490                           ;Q2.c: 238:                 break;
  1491  06BE  2FCE               	goto	l142
  1492  06BF                     l1612:
  1493                           
  1494                           ;Q2.c: 240:                 if(flg==1)cw=0;flg=0;
  1495  06BF  0336               	decf	_flg,w
  1496  06C0  0437               	iorwf	_flg+1,w
  1497  06C1  1D03               	btfss	3,2
  1498  06C2  2EC4               	goto	u931
  1499  06C3  2EC5               	goto	u930
  1500  06C4                     u931:
  1501  06C4  2EC7               	goto	l130
  1502  06C5                     u930:
  1503  06C5                     l1614:
  1504  06C5  01B4               	clrf	_cw
  1505  06C6  01B5               	clrf	_cw+1
  1506  06C7                     l130:
  1507  06C7  01B6               	clrf	_flg
  1508  06C8  01B7               	clrf	_flg+1
  1509  06C9                     l1616:
  1510                           
  1511                           ;Q2.c: 241:                 if((cw==0)&&(ext==0)){cw=1;ccw=0;ext=1;PORTB=smd=0x09;}
  1512  06C9  0834               	movf	_cw,w
  1513  06CA  0435               	iorwf	_cw+1,w
  1514  06CB  1D03               	btfss	3,2
  1515  06CC  2ECE               	goto	u941
  1516  06CD  2ECF               	goto	u940
  1517  06CE                     u941:
  1518  06CE  2EE5               	goto	l1628
  1519  06CF                     u940:
  1520  06CF                     l1618:
  1521  06CF  0846               	movf	dynam@ext,w
  1522  06D0  0447               	iorwf	dynam@ext+1,w
  1523  06D1  1D03               	btfss	3,2
  1524  06D2  2ED4               	goto	u951
  1525  06D3  2ED5               	goto	u950
  1526  06D4                     u951:
  1527  06D4  2EE5               	goto	l1628
  1528  06D5                     u950:
  1529  06D5                     l1620:
  1530  06D5  3001               	movlw	1
  1531  06D6  00B4               	movwf	_cw
  1532  06D7  3000               	movlw	0
  1533  06D8  00B5               	movwf	_cw+1
  1534  06D9                     l1622:
  1535  06D9  01B2               	clrf	_ccw
  1536  06DA  01B3               	clrf	_ccw+1
  1537  06DB                     l1624:
  1538  06DB  3001               	movlw	1
  1539  06DC  00C6               	movwf	dynam@ext
  1540  06DD  3000               	movlw	0
  1541  06DE  00C7               	movwf	dynam@ext+1
  1542  06DF                     l1626:
  1543  06DF  3009               	movlw	9
  1544  06E0  00C0               	movwf	dynam@smd
  1545  06E1  3000               	movlw	0
  1546  06E2  00C1               	movwf	dynam@smd+1
  1547  06E3  0840               	movf	dynam@smd,w
  1548  06E4  008D               	movwf	13	;volatile
  1549  06E5                     l1628:
  1550                           
  1551                           ;Q2.c: 242:                 if((cw==1)&&(ext==0)){cw=2;ccw=3;ext=1;PORTB=smd=0x0C;}
  1552  06E5  0334               	decf	_cw,w
  1553  06E6  0435               	iorwf	_cw+1,w
  1554  06E7  1D03               	btfss	3,2
  1555  06E8  2EEA               	goto	u961
  1556  06E9  2EEB               	goto	u960
  1557  06EA                     u961:
  1558  06EA  2F03               	goto	l1634
  1559  06EB                     u960:
  1560  06EB                     l1630:
  1561  06EB  0846               	movf	dynam@ext,w
  1562  06EC  0447               	iorwf	dynam@ext+1,w
  1563  06ED  1D03               	btfss	3,2
  1564  06EE  2EF0               	goto	u971
  1565  06EF  2EF1               	goto	u970
  1566  06F0                     u971:
  1567  06F0  2F03               	goto	l1634
  1568  06F1                     u970:
  1569  06F1                     l1632:
  1570  06F1  3002               	movlw	2
  1571  06F2  00B4               	movwf	_cw
  1572  06F3  3000               	movlw	0
  1573  06F4  00B5               	movwf	_cw+1
  1574  06F5  3003               	movlw	3
  1575  06F6  00B2               	movwf	_ccw
  1576  06F7  3000               	movlw	0
  1577  06F8  00B3               	movwf	_ccw+1
  1578  06F9  3001               	movlw	1
  1579  06FA  00C6               	movwf	dynam@ext
  1580  06FB  3000               	movlw	0
  1581  06FC  00C7               	movwf	dynam@ext+1
  1582  06FD  300C               	movlw	12
  1583  06FE  00C0               	movwf	dynam@smd
  1584  06FF  3000               	movlw	0
  1585  0700  00C1               	movwf	dynam@smd+1
  1586  0701  0840               	movf	dynam@smd,w
  1587  0702  008D               	movwf	13	;volatile
  1588  0703                     l1634:
  1589                           
  1590                           ;Q2.c: 243:                 if((cw==2)&&(ext==0)){cw=3;ccw=2;ext=1;PORTB=smd=0x06;}
  1591  0703  3002               	movlw	2
  1592  0704  0634               	xorwf	_cw,w
  1593  0705  0435               	iorwf	_cw+1,w
  1594  0706  1D03               	btfss	3,2
  1595  0707  2F09               	goto	u981
  1596  0708  2F0A               	goto	u980
  1597  0709                     u981:
  1598  0709  2F22               	goto	l1640
  1599  070A                     u980:
  1600  070A                     l1636:
  1601  070A  0846               	movf	dynam@ext,w
  1602  070B  0447               	iorwf	dynam@ext+1,w
  1603  070C  1D03               	btfss	3,2
  1604  070D  2F0F               	goto	u991
  1605  070E  2F10               	goto	u990
  1606  070F                     u991:
  1607  070F  2F22               	goto	l1640
  1608  0710                     u990:
  1609  0710                     l1638:
  1610  0710  3003               	movlw	3
  1611  0711  00B4               	movwf	_cw
  1612  0712  3000               	movlw	0
  1613  0713  00B5               	movwf	_cw+1
  1614  0714  3002               	movlw	2
  1615  0715  00B2               	movwf	_ccw
  1616  0716  3000               	movlw	0
  1617  0717  00B3               	movwf	_ccw+1
  1618  0718  3001               	movlw	1
  1619  0719  00C6               	movwf	dynam@ext
  1620  071A  3000               	movlw	0
  1621  071B  00C7               	movwf	dynam@ext+1
  1622  071C  3006               	movlw	6
  1623  071D  00C0               	movwf	dynam@smd
  1624  071E  3000               	movlw	0
  1625  071F  00C1               	movwf	dynam@smd+1
  1626  0720  0840               	movf	dynam@smd,w
  1627  0721  008D               	movwf	13	;volatile
  1628  0722                     l1640:
  1629                           
  1630                           ;Q2.c: 244:                 if((cw==3)&&(ext==0)){cw=0;ccw=1;ext=1;PORTB=smd=0x03;}
  1631  0722  3003               	movlw	3
  1632  0723  0634               	xorwf	_cw,w
  1633  0724  0435               	iorwf	_cw+1,w
  1634  0725  1D03               	btfss	3,2
  1635  0726  2F28               	goto	u1001
  1636  0727  2F29               	goto	u1000
  1637  0728                     u1001:
  1638  0728  2EBB               	goto	l1606
  1639  0729                     u1000:
  1640  0729                     l1642:
  1641  0729  0846               	movf	dynam@ext,w
  1642  072A  0447               	iorwf	dynam@ext+1,w
  1643  072B  1D03               	btfss	3,2
  1644  072C  2F2E               	goto	u1011
  1645  072D  2F2F               	goto	u1010
  1646  072E                     u1011:
  1647  072E  2EBB               	goto	l1606
  1648  072F                     u1010:
  1649  072F                     l1644:
  1650  072F  01B4               	clrf	_cw
  1651  0730  01B5               	clrf	_cw+1
  1652  0731                     l1646:
  1653  0731  3001               	movlw	1
  1654  0732  00B2               	movwf	_ccw
  1655  0733  3000               	movlw	0
  1656  0734  00B3               	movwf	_ccw+1
  1657  0735                     l1648:
  1658  0735                     l1650:
  1659  0735  3003               	movlw	3
  1660  0736  00C0               	movwf	dynam@smd
  1661  0737  3000               	movlw	0
  1662  0738  00C1               	movwf	dynam@smd+1
  1663  0739  0840               	movf	dynam@smd,w
  1664  073A  008D               	movwf	13	;volatile
  1665  073B  2EBB               	goto	l1606
  1666  073C                     l1658:
  1667                           
  1668                           ;Q2.c: 248:                 if(flg==1)ccw=0;flg=0;
  1669  073C  0336               	decf	_flg,w
  1670  073D  0437               	iorwf	_flg+1,w
  1671  073E  1D03               	btfss	3,2
  1672  073F  2F41               	goto	u1021
  1673  0740  2F42               	goto	u1020
  1674  0741                     u1021:
  1675  0741  2F44               	goto	l136
  1676  0742                     u1020:
  1677  0742                     l1660:
  1678  0742  01B2               	clrf	_ccw
  1679  0743  01B3               	clrf	_ccw+1
  1680  0744                     l136:
  1681  0744  01B6               	clrf	_flg
  1682  0745  01B7               	clrf	_flg+1
  1683  0746                     l1662:
  1684                           
  1685                           ;Q2.c: 249:                 if((ccw==0)&&(ext==0)){ccw=1;cw=0;ext=1;PORTB=smd=0x03;}
  1686  0746  0832               	movf	_ccw,w
  1687  0747  0433               	iorwf	_ccw+1,w
  1688  0748  1D03               	btfss	3,2
  1689  0749  2F4B               	goto	u1031
  1690  074A  2F4C               	goto	u1030
  1691  074B                     u1031:
  1692  074B  2F62               	goto	l1674
  1693  074C                     u1030:
  1694  074C                     l1664:
  1695  074C  0846               	movf	dynam@ext,w
  1696  074D  0447               	iorwf	dynam@ext+1,w
  1697  074E  1D03               	btfss	3,2
  1698  074F  2F51               	goto	u1041
  1699  0750  2F52               	goto	u1040
  1700  0751                     u1041:
  1701  0751  2F62               	goto	l1674
  1702  0752                     u1040:
  1703  0752                     l1666:
  1704  0752  3001               	movlw	1
  1705  0753  00B2               	movwf	_ccw
  1706  0754  3000               	movlw	0
  1707  0755  00B3               	movwf	_ccw+1
  1708  0756                     l1668:
  1709  0756  01B4               	clrf	_cw
  1710  0757  01B5               	clrf	_cw+1
  1711  0758                     l1670:
  1712  0758  3001               	movlw	1
  1713  0759  00C6               	movwf	dynam@ext
  1714  075A  3000               	movlw	0
  1715  075B  00C7               	movwf	dynam@ext+1
  1716  075C                     l1672:
  1717  075C  3003               	movlw	3
  1718  075D  00C0               	movwf	dynam@smd
  1719  075E  3000               	movlw	0
  1720  075F  00C1               	movwf	dynam@smd+1
  1721  0760  0840               	movf	dynam@smd,w
  1722  0761  008D               	movwf	13	;volatile
  1723  0762                     l1674:
  1724                           
  1725                           ;Q2.c: 250:                 if((ccw==1)&&(ext==0)){ccw=2;cw=3;ext=1;PORTB=smd=0x06;}
  1726  0762  0332               	decf	_ccw,w
  1727  0763  0433               	iorwf	_ccw+1,w
  1728  0764  1D03               	btfss	3,2
  1729  0765  2F67               	goto	u1051
  1730  0766  2F68               	goto	u1050
  1731  0767                     u1051:
  1732  0767  2F80               	goto	l1680
  1733  0768                     u1050:
  1734  0768                     l1676:
  1735  0768  0846               	movf	dynam@ext,w
  1736  0769  0447               	iorwf	dynam@ext+1,w
  1737  076A  1D03               	btfss	3,2
  1738  076B  2F6D               	goto	u1061
  1739  076C  2F6E               	goto	u1060
  1740  076D                     u1061:
  1741  076D  2F80               	goto	l1680
  1742  076E                     u1060:
  1743  076E                     l1678:
  1744  076E  3002               	movlw	2
  1745  076F  00B2               	movwf	_ccw
  1746  0770  3000               	movlw	0
  1747  0771  00B3               	movwf	_ccw+1
  1748  0772  3003               	movlw	3
  1749  0773  00B4               	movwf	_cw
  1750  0774  3000               	movlw	0
  1751  0775  00B5               	movwf	_cw+1
  1752  0776  3001               	movlw	1
  1753  0777  00C6               	movwf	dynam@ext
  1754  0778  3000               	movlw	0
  1755  0779  00C7               	movwf	dynam@ext+1
  1756  077A  3006               	movlw	6
  1757  077B  00C0               	movwf	dynam@smd
  1758  077C  3000               	movlw	0
  1759  077D  00C1               	movwf	dynam@smd+1
  1760  077E  0840               	movf	dynam@smd,w
  1761  077F  008D               	movwf	13	;volatile
  1762  0780                     l1680:
  1763                           
  1764                           ;Q2.c: 251:                 if((ccw==2)&&(ext==0)){ccw=3;cw=2;ext=1;PORTB=smd=0x0C;}
  1765  0780  3002               	movlw	2
  1766  0781  0632               	xorwf	_ccw,w
  1767  0782  0433               	iorwf	_ccw+1,w
  1768  0783  1D03               	btfss	3,2
  1769  0784  2F86               	goto	u1071
  1770  0785  2F87               	goto	u1070
  1771  0786                     u1071:
  1772  0786  2F9F               	goto	l1686
  1773  0787                     u1070:
  1774  0787                     l1682:
  1775  0787  0846               	movf	dynam@ext,w
  1776  0788  0447               	iorwf	dynam@ext+1,w
  1777  0789  1D03               	btfss	3,2
  1778  078A  2F8C               	goto	u1081
  1779  078B  2F8D               	goto	u1080
  1780  078C                     u1081:
  1781  078C  2F9F               	goto	l1686
  1782  078D                     u1080:
  1783  078D                     l1684:
  1784  078D  3003               	movlw	3
  1785  078E  00B2               	movwf	_ccw
  1786  078F  3000               	movlw	0
  1787  0790  00B3               	movwf	_ccw+1
  1788  0791  3002               	movlw	2
  1789  0792  00B4               	movwf	_cw
  1790  0793  3000               	movlw	0
  1791  0794  00B5               	movwf	_cw+1
  1792  0795  3001               	movlw	1
  1793  0796  00C6               	movwf	dynam@ext
  1794  0797  3000               	movlw	0
  1795  0798  00C7               	movwf	dynam@ext+1
  1796  0799  300C               	movlw	12
  1797  079A  00C0               	movwf	dynam@smd
  1798  079B  3000               	movlw	0
  1799  079C  00C1               	movwf	dynam@smd+1
  1800  079D  0840               	movf	dynam@smd,w
  1801  079E  008D               	movwf	13	;volatile
  1802  079F                     l1686:
  1803                           
  1804                           ;Q2.c: 252:                 if((ccw==3)&&(ext==0)){ccw=0;cw=1;ext=1;PORTB=smd=0x09;}
  1805  079F  3003               	movlw	3
  1806  07A0  0632               	xorwf	_ccw,w
  1807  07A1  0433               	iorwf	_ccw+1,w
  1808  07A2  1D03               	btfss	3,2
  1809  07A3  2FA5               	goto	u1091
  1810  07A4  2FA6               	goto	u1090
  1811  07A5                     u1091:
  1812  07A5  2EBB               	goto	l1606
  1813  07A6                     u1090:
  1814  07A6                     l1688:
  1815  07A6  0846               	movf	dynam@ext,w
  1816  07A7  0447               	iorwf	dynam@ext+1,w
  1817  07A8  1D03               	btfss	3,2
  1818  07A9  2FAB               	goto	u1101
  1819  07AA  2FAC               	goto	u1100
  1820  07AB                     u1101:
  1821  07AB  2EBB               	goto	l1606
  1822  07AC                     u1100:
  1823  07AC                     l1690:
  1824  07AC  01B2               	clrf	_ccw
  1825  07AD  01B3               	clrf	_ccw+1
  1826  07AE                     l1692:
  1827  07AE  3001               	movlw	1
  1828  07AF  00B4               	movwf	_cw
  1829  07B0  3000               	movlw	0
  1830  07B1  00B5               	movwf	_cw+1
  1831  07B2                     l1694:
  1832  07B2                     l1696:
  1833  07B2  3009               	movlw	9
  1834  07B3  00C0               	movwf	dynam@smd
  1835  07B4  3000               	movlw	0
  1836  07B5  00C1               	movwf	dynam@smd+1
  1837  07B6  0840               	movf	dynam@smd,w
  1838  07B7  008D               	movwf	13	;volatile
  1839  07B8  2EBB               	goto	l1606
  1840  07B9                     l1704:
  1841                           
  1842                           ;Q2.c: 256:                 cw=ccw=0;
  1843  07B9  01B2               	clrf	_ccw
  1844  07BA  01B3               	clrf	_ccw+1
  1845  07BB  01B4               	clrf	_cw
  1846  07BC  01B5               	clrf	_cw+1
  1847                           
  1848                           ;Q2.c: 257:                 break;
  1849  07BD  2FCE               	goto	l142
  1850  07BE                     l1708:
  1851                           
  1852                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1853                           ; Switch size 1, requested type "simple"
  1854                           ; Number of cases is 1, Range of values is 0 to 0
  1855                           ; switch strategies available:
  1856                           ; Name         Instructions Cycles
  1857                           ; simple_byte            4     3 (average)
  1858                           ; direct_byte            8     6 (fixed)
  1859                           ; jumptable            260     6 (fixed)
  1860                           ;	Chosen strategy is simple_byte
  1861  07BE  0875               	movf	dynam@smdata+1,w
  1862  07BF  3A00               	xorlw	0	; case 0
  1863  07C0  1903               	skipnz
  1864  07C1  2FC3               	goto	l2272
  1865  07C2  2FB9               	goto	l1704
  1866  07C3                     l2272:
  1867                           
  1868                           ; Switch size 1, requested type "simple"
  1869                           ; Number of cases is 3, Range of values is 0 to 2
  1870                           ; switch strategies available:
  1871                           ; Name         Instructions Cycles
  1872                           ; simple_byte           10     6 (average)
  1873                           ; direct_byte           12     6 (fixed)
  1874                           ; jumptable            260     6 (fixed)
  1875                           ;	Chosen strategy is simple_byte
  1876  07C3  0874               	movf	dynam@smdata,w
  1877  07C4  3A00               	xorlw	0	; case 0
  1878  07C5  1903               	skipnz
  1879  07C6  2EBA               	goto	l1602
  1880  07C7  3A01               	xorlw	1	; case 1
  1881  07C8  1903               	skipnz
  1882  07C9  2EBF               	goto	l1612
  1883  07CA  3A03               	xorlw	3	; case 2
  1884  07CB  1903               	skipnz
  1885  07CC  2F3C               	goto	l1658
  1886  07CD  2FB9               	goto	l1704
  1887  07CE                     l142:
  1888  07CE  0008               	return
  1889  07CF                     __end_of_dynam:
  1890                           
  1891                           	psect	text4
  1892  0494                     __ptext4:	
  1893 ;; *************** function ___lwdiv *****************
  1894 ;; Defined at:
  1895 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\lwdiv.c"
  1896 ;; Parameters:    Size  Location     Type
  1897 ;;  divisor         2    0[COMMON] unsigned int 
  1898 ;;  dividend        2    2[COMMON] unsigned int 
  1899 ;; Auto vars:     Size  Location     Type
  1900 ;;  quotient        2    5[COMMON] unsigned int 
  1901 ;;  counter         1    7[COMMON] unsigned char 
  1902 ;; Return value:  Size  Location     Type
  1903 ;;                  2    0[COMMON] unsigned int 
  1904 ;; Registers used:
  1905 ;;		wreg, status,2, status,0
  1906 ;; Tracked objects:
  1907 ;;		On entry : 0/0
  1908 ;;		On exit  : 0/0
  1909 ;;		Unchanged: 0/0
  1910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1911 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1912 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1913 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1914 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1915 ;;Total ram usage:        8 bytes
  1916 ;; Hardware stack levels used:    1
  1917 ;; This function calls:
  1918 ;;		Nothing
  1919 ;; This function is called by:
  1920 ;;		_waitSEG
  1921 ;; This function uses a non-reentrant model
  1922 ;;
  1923                           
  1924                           
  1925                           ;psect for function ___lwdiv
  1926  0494                     ___lwdiv:
  1927  0494                     l1732:	
  1928                           ;incstack = 0
  1929                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1930                           
  1931  0494  01F5               	clrf	___lwdiv@quotient
  1932  0495  01F6               	clrf	___lwdiv@quotient+1
  1933  0496                     l1734:
  1934  0496  0870               	movf	___lwdiv@divisor,w
  1935  0497  0471               	iorwf	___lwdiv@divisor+1,w
  1936  0498  1903               	btfsc	3,2
  1937  0499  2C9B               	goto	u1131
  1938  049A  2C9C               	goto	u1130
  1939  049B                     u1131:
  1940  049B  2CCB               	goto	l1754
  1941  049C                     u1130:
  1942  049C                     l1736:
  1943  049C  01F7               	clrf	___lwdiv@counter
  1944  049D  0AF7               	incf	___lwdiv@counter,f
  1945  049E  2CA8               	goto	l1742
  1946  049F                     l1738:
  1947  049F  3001               	movlw	1
  1948  04A0                     u1145:
  1949  04A0  35F0               	lslf	___lwdiv@divisor,f
  1950  04A1  0DF1               	rlf	___lwdiv@divisor+1,f
  1951  04A2  0B89               	decfsz	9,f
  1952  04A3  2CA0               	goto	u1145
  1953  04A4                     l1740:
  1954  04A4  3001               	movlw	1
  1955  04A5  00F4               	movwf	??___lwdiv
  1956  04A6  0874               	movf	??___lwdiv,w
  1957  04A7  07F7               	addwf	___lwdiv@counter,f
  1958  04A8                     l1742:
  1959  04A8  1FF1               	btfss	___lwdiv@divisor+1,7
  1960  04A9  2CAB               	goto	u1151
  1961  04AA  2CAC               	goto	u1150
  1962  04AB                     u1151:
  1963  04AB  2C9F               	goto	l1738
  1964  04AC                     u1150:
  1965  04AC                     l1744:
  1966  04AC  3001               	movlw	1
  1967  04AD                     u1165:
  1968  04AD  35F5               	lslf	___lwdiv@quotient,f
  1969  04AE  0DF6               	rlf	___lwdiv@quotient+1,f
  1970  04AF  0B89               	decfsz	9,f
  1971  04B0  2CAD               	goto	u1165
  1972  04B1  0871               	movf	___lwdiv@divisor+1,w
  1973  04B2  0273               	subwf	___lwdiv@dividend+1,w
  1974  04B3  1D03               	skipz
  1975  04B4  2CB7               	goto	u1175
  1976  04B5  0870               	movf	___lwdiv@divisor,w
  1977  04B6  0272               	subwf	___lwdiv@dividend,w
  1978  04B7                     u1175:
  1979  04B7  1C03               	skipc
  1980  04B8  2CBA               	goto	u1171
  1981  04B9  2CBB               	goto	u1170
  1982  04BA                     u1171:
  1983  04BA  2CC0               	goto	l1750
  1984  04BB                     u1170:
  1985  04BB                     l1746:
  1986  04BB  0870               	movf	___lwdiv@divisor,w
  1987  04BC  02F2               	subwf	___lwdiv@dividend,f
  1988  04BD  0871               	movf	___lwdiv@divisor+1,w
  1989  04BE  3BF3               	subwfb	___lwdiv@dividend+1,f
  1990  04BF                     l1748:
  1991  04BF  1475               	bsf	___lwdiv@quotient,0
  1992  04C0                     l1750:
  1993  04C0  3001               	movlw	1
  1994  04C1                     u1185:
  1995  04C1  36F1               	lsrf	___lwdiv@divisor+1,f
  1996  04C2  0CF0               	rrf	___lwdiv@divisor,f
  1997  04C3  0B89               	decfsz	9,f
  1998  04C4  2CC1               	goto	u1185
  1999  04C5                     l1752:
  2000  04C5  3001               	movlw	1
  2001  04C6  02F7               	subwf	___lwdiv@counter,f
  2002  04C7  1D03               	btfss	3,2
  2003  04C8  2CCA               	goto	u1191
  2004  04C9  2CCB               	goto	u1190
  2005  04CA                     u1191:
  2006  04CA  2CAC               	goto	l1744
  2007  04CB                     u1190:
  2008  04CB                     l1754:
  2009  04CB  0876               	movf	___lwdiv@quotient+1,w
  2010  04CC  00F1               	movwf	?___lwdiv+1
  2011  04CD  0875               	movf	___lwdiv@quotient,w
  2012  04CE  00F0               	movwf	?___lwdiv
  2013  04CF                     l712:
  2014  04CF  0008               	return
  2015  04D0                     __end_of___lwdiv:
  2016                           
  2017                           	psect	text5
  2018  0597                     __ptext5:	
  2019 ;; *************** function _tact *****************
  2020 ;; Defined at:
  2021 ;;		line 357 in file "Q2.c"
  2022 ;; Parameters:    Size  Location     Type
  2023 ;;  mode            2    8[COMMON] unsigned short 
  2024 ;; Auto vars:     Size  Location     Type
  2025 ;;		None
  2026 ;; Return value:  Size  Location     Type
  2027 ;;                  1    wreg      void 
  2028 ;; Registers used:
  2029 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2030 ;; Tracked objects:
  2031 ;;		On entry : 0/0
  2032 ;;		On exit  : 0/0
  2033 ;;		Unchanged: 0/0
  2034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2035 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2038 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2039 ;;Total ram usage:        2 bytes
  2040 ;; Hardware stack levels used:    1
  2041 ;; Hardware stack levels required when called:    1
  2042 ;; This function calls:
  2043 ;;		_tactsw
  2044 ;; This function is called by:
  2045 ;;		_main
  2046 ;;		_kaisu
  2047 ;; This function uses a non-reentrant model
  2048 ;;
  2049                           
  2050                           
  2051                           ;psect for function _tact
  2052  0597                     _tact:
  2053  0597                     l1812:	
  2054                           ;incstack = 0
  2055                           ; Regs used in _tact: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2056                           
  2057                           
  2058                           ;Q2.c: 357: void tact(unsigned short mode);Q2.c: 358: {;Q2.c: 359:     switch(mode){
  2059  0597  2DD2               	goto	l1840
  2060  0598                     l1814:
  2061                           
  2062                           ;Q2.c: 361:                 tactsw();
  2063  0598  3184  24D0  3185   	fcall	_tactsw
  2064  059B                     l1816:
  2065                           
  2066                           ;Q2.c: 362:                 if(flag_sw3==0)flag_R=1;
  2067  059B  087B               	movf	_flag_sw3,w
  2068  059C  047C               	iorwf	_flag_sw3+1,w
  2069  059D  1D03               	btfss	3,2
  2070  059E  2DA0               	goto	u1231
  2071  059F  2DA1               	goto	u1230
  2072  05A0                     u1231:
  2073  05A0  2DE2               	goto	l215
  2074  05A1                     u1230:
  2075  05A1                     l1818:
  2076  05A1  3001               	movlw	1
  2077  05A2  0020               	movlb	0	; select bank0
  2078  05A3  00BA               	movwf	_flag_R
  2079  05A4  3000               	movlw	0
  2080  05A5  00BB               	movwf	_flag_R+1
  2081  05A6  2DE2               	goto	l215
  2082  05A7                     l1820:
  2083                           
  2084                           ;Q2.c: 365:                 tactsw();
  2085  05A7  3184  24D0  3185   	fcall	_tactsw
  2086  05AA                     l1822:
  2087                           
  2088                           ;Q2.c: 366:                 if(flag_sw3==1)flag_P=1;
  2089  05AA  037B               	decf	_flag_sw3,w
  2090  05AB  047C               	iorwf	_flag_sw3+1,w
  2091  05AC  1D03               	btfss	3,2
  2092  05AD  2DAF               	goto	u1241
  2093  05AE  2DB0               	goto	u1240
  2094  05AF                     u1241:
  2095  05AF  2DE2               	goto	l215
  2096  05B0                     u1240:
  2097  05B0                     l1824:
  2098  05B0  3001               	movlw	1
  2099  05B1  0020               	movlb	0	; select bank0
  2100  05B2  00B8               	movwf	_flag_P
  2101  05B3  3000               	movlw	0
  2102  05B4  00B9               	movwf	_flag_P+1
  2103  05B5  2DE2               	goto	l215
  2104  05B6                     l1826:
  2105                           
  2106                           ;Q2.c: 369:                 tactsw();
  2107  05B6  3184  24D0  3185   	fcall	_tactsw
  2108  05B9                     l1828:
  2109                           
  2110                           ;Q2.c: 370:                 if(flag_sw3==0)flag_R=1;
  2111  05B9  087B               	movf	_flag_sw3,w
  2112  05BA  047C               	iorwf	_flag_sw3+1,w
  2113  05BB  1D03               	btfss	3,2
  2114  05BC  2DBE               	goto	u1251
  2115  05BD  2DBF               	goto	u1250
  2116  05BE                     u1251:
  2117  05BE  2DC4               	goto	l1832
  2118  05BF                     u1250:
  2119  05BF                     l1830:
  2120  05BF  3001               	movlw	1
  2121  05C0  0020               	movlb	0	; select bank0
  2122  05C1  00BA               	movwf	_flag_R
  2123  05C2  3000               	movlw	0
  2124  05C3  00BB               	movwf	_flag_R+1
  2125  05C4                     l1832:
  2126                           
  2127                           ;Q2.c: 371:                 if((flag_sw3==1)&&(flag_R==1))flag_P=1;
  2128  05C4  037B               	decf	_flag_sw3,w
  2129  05C5  047C               	iorwf	_flag_sw3+1,w
  2130  05C6  1D03               	btfss	3,2
  2131  05C7  2DC9               	goto	u1261
  2132  05C8  2DCA               	goto	u1260
  2133  05C9                     u1261:
  2134  05C9  2DE2               	goto	l215
  2135  05CA                     u1260:
  2136  05CA                     l1834:
  2137  05CA  0020               	movlb	0	; select bank0
  2138  05CB  033A               	decf	_flag_R,w
  2139  05CC  043B               	iorwf	_flag_R+1,w
  2140  05CD  1D03               	btfss	3,2
  2141  05CE  2DD0               	goto	u1271
  2142  05CF  2DD1               	goto	u1270
  2143  05D0                     u1271:
  2144  05D0  2DE2               	goto	l215
  2145  05D1                     u1270:
  2146  05D1  2DB0               	goto	l1824
  2147  05D2                     l1840:
  2148                           
  2149                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2150                           ; Switch size 1, requested type "simple"
  2151                           ; Number of cases is 1, Range of values is 0 to 0
  2152                           ; switch strategies available:
  2153                           ; Name         Instructions Cycles
  2154                           ; simple_byte            4     3 (average)
  2155                           ; direct_byte            8     6 (fixed)
  2156                           ; jumptable            260     6 (fixed)
  2157                           ;	Chosen strategy is simple_byte
  2158  05D2  0879               	movf	tact@mode+1,w
  2159  05D3  3A00               	xorlw	0	; case 0
  2160  05D4  1903               	skipnz
  2161  05D5  2DD7               	goto	l2274
  2162  05D6  2DE2               	goto	l215
  2163  05D7                     l2274:
  2164                           
  2165                           ; Switch size 1, requested type "simple"
  2166                           ; Number of cases is 3, Range of values is 0 to 2
  2167                           ; switch strategies available:
  2168                           ; Name         Instructions Cycles
  2169                           ; simple_byte           10     6 (average)
  2170                           ; direct_byte           12     6 (fixed)
  2171                           ; jumptable            260     6 (fixed)
  2172                           ;	Chosen strategy is simple_byte
  2173  05D7  0878               	movf	tact@mode,w
  2174  05D8  3A00               	xorlw	0	; case 0
  2175  05D9  1903               	skipnz
  2176  05DA  2D98               	goto	l1814
  2177  05DB  3A01               	xorlw	1	; case 1
  2178  05DC  1903               	skipnz
  2179  05DD  2DA7               	goto	l1820
  2180  05DE  3A03               	xorlw	3	; case 2
  2181  05DF  1903               	skipnz
  2182  05E0  2DB6               	goto	l1826
  2183  05E1  2DE2               	goto	l215
  2184  05E2                     l215:
  2185  05E2  0008               	return
  2186  05E3                     __end_of_tact:
  2187                           
  2188                           	psect	text6
  2189  04D0                     __ptext6:	
  2190 ;; *************** function _tactsw *****************
  2191 ;; Defined at:
  2192 ;;		line 342 in file "Q2.c"
  2193 ;; Parameters:    Size  Location     Type
  2194 ;;		None
  2195 ;; Auto vars:     Size  Location     Type
  2196 ;;  a               2    6[COMMON] unsigned short 
  2197 ;;  c               2    4[COMMON] unsigned short 
  2198 ;;  b               2    2[COMMON] unsigned short 
  2199 ;; Return value:  Size  Location     Type
  2200 ;;                  1    wreg      void 
  2201 ;; Registers used:
  2202 ;;		wreg, status,2, status,0
  2203 ;; Tracked objects:
  2204 ;;		On entry : 0/0
  2205 ;;		On exit  : 0/0
  2206 ;;		Unchanged: 0/0
  2207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2209 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2210 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2211 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2212 ;;Total ram usage:        8 bytes
  2213 ;; Hardware stack levels used:    1
  2214 ;; This function calls:
  2215 ;;		Nothing
  2216 ;; This function is called by:
  2217 ;;		_tact
  2218 ;; This function uses a non-reentrant model
  2219 ;;
  2220                           
  2221                           
  2222                           ;psect for function _tactsw
  2223  04D0                     _tactsw:
  2224  04D0                     l1714:	
  2225                           ;incstack = 0
  2226                           ; Regs used in _tactsw: [wreg+status,2+status,0]
  2227                           
  2228                           
  2229                           ;Q2.c: 344:     unsigned short a,b,c;;Q2.c: 345:     b=c=0;
  2230  04D0  01F4               	clrf	tactsw@c
  2231  04D1  01F5               	clrf	tactsw@c+1
  2232  04D2  01F2               	clrf	tactsw@b
  2233  04D3  01F3               	clrf	tactsw@b+1
  2234  04D4                     l1716:
  2235                           
  2236                           ;Q2.c: 347:             a=RA2;
  2237  04D4  1003               	clrc
  2238  04D5  0020               	movlb	0	; select bank0
  2239  04D6  190C               	btfsc	12,2	;volatile
  2240  04D7  1403               	setc
  2241  04D8  3000               	movlw	0
  2242  04D9  3D09               	addwfc	9,w
  2243  04DA  00F0               	movwf	??_tactsw
  2244  04DB  01F1               	clrf	??_tactsw+1
  2245  04DC  0870               	movf	??_tactsw,w
  2246  04DD  00F6               	movwf	tactsw@a
  2247  04DE  0871               	movf	??_tactsw+1,w
  2248  04DF  00F7               	movwf	tactsw@a+1
  2249  04E0                     l1718:
  2250                           
  2251                           ;Q2.c: 348:             if(b==a)++c;
  2252  04E0  0877               	movf	tactsw@a+1,w
  2253  04E1  0673               	xorwf	tactsw@b+1,w
  2254  04E2  1D03               	skipz
  2255  04E3  2CE6               	goto	u1115
  2256  04E4  0876               	movf	tactsw@a,w
  2257  04E5  0672               	xorwf	tactsw@b,w
  2258  04E6                     u1115:
  2259  04E6  1D03               	skipz
  2260  04E7  2CE9               	goto	u1111
  2261  04E8  2CEA               	goto	u1110
  2262  04E9                     u1111:
  2263  04E9  2CEF               	goto	l1722
  2264  04EA                     u1110:
  2265  04EA                     l1720:
  2266  04EA  3001               	movlw	1
  2267  04EB  07F4               	addwf	tactsw@c,f
  2268  04EC  3000               	movlw	0
  2269  04ED  3DF5               	addwfc	tactsw@c+1,f
  2270  04EE  2CF1               	goto	l1724
  2271  04EF                     l1722:
  2272  04EF  01F4               	clrf	tactsw@c
  2273  04F0  01F5               	clrf	tactsw@c+1
  2274  04F1                     l1724:
  2275                           
  2276                           ;Q2.c: 350:             if(c>10){flag_sw3=(~a)&0x01;return;}
  2277  04F1  3000               	movlw	0
  2278  04F2  0275               	subwf	tactsw@c+1,w
  2279  04F3  300B               	movlw	11
  2280  04F4  1903               	skipnz
  2281  04F5  0274               	subwf	tactsw@c,w
  2282  04F6  1C03               	skipc
  2283  04F7  2CF9               	goto	u1121
  2284  04F8  2CFA               	goto	u1120
  2285  04F9                     u1121:
  2286  04F9  2D07               	goto	l1730
  2287  04FA                     u1120:
  2288  04FA                     l1726:
  2289  04FA  0877               	movf	tactsw@a+1,w
  2290  04FB  00F1               	movwf	??_tactsw+1
  2291  04FC  0876               	movf	tactsw@a,w
  2292  04FD  00F0               	movwf	??_tactsw
  2293  04FE  09F0               	comf	??_tactsw,f
  2294  04FF  09F1               	comf	??_tactsw+1,f
  2295  0500  3001               	movlw	1
  2296  0501  0570               	andwf	??_tactsw,w
  2297  0502  00FB               	movwf	_flag_sw3
  2298  0503  3000               	movlw	0
  2299  0504  0571               	andwf	??_tactsw+1,w
  2300  0505  00FC               	movwf	_flag_sw3+1
  2301  0506  2D0C               	goto	l200
  2302  0507                     l1730:
  2303                           
  2304                           ;Q2.c: 351:             b=a;
  2305  0507  0877               	movf	tactsw@a+1,w
  2306  0508  00F3               	movwf	tactsw@b+1
  2307  0509  0876               	movf	tactsw@a,w
  2308  050A  00F2               	movwf	tactsw@b
  2309  050B  2CD4               	goto	l1716
  2310  050C                     l200:
  2311  050C  0008               	return
  2312  050D                     __end_of_tactsw:
  2313                           
  2314                           	psect	text7
  2315  044D                     __ptext7:	
  2316 ;; *************** function _portinit *****************
  2317 ;; Defined at:
  2318 ;;		line 160 in file "Q2.c"
  2319 ;; Parameters:    Size  Location     Type
  2320 ;;		None
  2321 ;; Auto vars:     Size  Location     Type
  2322 ;;		None
  2323 ;; Return value:  Size  Location     Type
  2324 ;;                  1    wreg      void 
  2325 ;; Registers used:
  2326 ;;		wreg, status,2
  2327 ;; Tracked objects:
  2328 ;;		On entry : 0/0
  2329 ;;		On exit  : 0/0
  2330 ;;		Unchanged: 0/0
  2331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2336 ;;Total ram usage:        0 bytes
  2337 ;; Hardware stack levels used:    1
  2338 ;; This function calls:
  2339 ;;		Nothing
  2340 ;; This function is called by:
  2341 ;;		_main
  2342 ;; This function uses a non-reentrant model
  2343 ;;
  2344                           
  2345                           
  2346                           ;psect for function _portinit
  2347  044D                     _portinit:
  2348  044D                     l1758:	
  2349                           ;incstack = 0
  2350                           ; Regs used in _portinit: [wreg+status,2]
  2351                           
  2352                           
  2353                           ;Q2.c: 163:     ANSELA=0x00;
  2354  044D  0023               	movlb	3	; select bank3
  2355  044E  018C               	clrf	12	;volatile
  2356                           
  2357                           ;Q2.c: 164:     ANSELB=0x00;
  2358  044F  018D               	clrf	13	;volatile
  2359  0450                     l1760:
  2360                           
  2361                           ;Q2.c: 166:     PORTA=0x07;
  2362  0450  3007               	movlw	7
  2363  0451  0020               	movlb	0	; select bank0
  2364  0452  008C               	movwf	12	;volatile
  2365  0453                     l1762:
  2366                           
  2367                           ;Q2.c: 167:     TRISA=0x07;
  2368  0453  3007               	movlw	7
  2369  0454  0021               	movlb	1	; select bank1
  2370  0455  008C               	movwf	12	;volatile
  2371                           
  2372                           ;Q2.c: 168:     PORTB=0x00;
  2373  0456  0020               	movlb	0	; select bank0
  2374  0457  018D               	clrf	13	;volatile
  2375                           
  2376                           ;Q2.c: 169:     TRISB=0x00;
  2377  0458  0021               	movlb	1	; select bank1
  2378  0459  018D               	clrf	13	;volatile
  2379  045A                     l1764:
  2380                           
  2381                           ;Q2.c: 170:     PORTC=0x07;
  2382  045A  3007               	movlw	7
  2383  045B  0020               	movlb	0	; select bank0
  2384  045C  008E               	movwf	14	;volatile
  2385  045D                     l1766:
  2386                           
  2387                           ;Q2.c: 171:     TRISC=0x00;
  2388  045D  0021               	movlb	1	; select bank1
  2389  045E  018E               	clrf	14	;volatile
  2390  045F                     l97:
  2391  045F  0008               	return
  2392  0460                     __end_of_portinit:
  2393  007E                     btemp	set	126	;btemp
  2394  007E                     wtemp0	set	126
  2395                           
  2396                           	psect	config
  2397                           
  2398                           ;Config register CONFIG1 @ 0x8007
  2399                           ;	Oscillator Selection
  2400                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  2401                           ;	Watchdog Timer Enable
  2402                           ;	WDTE = OFF, WDT disabled
  2403                           ;	Power-up Timer Enable
  2404                           ;	PWRTE = OFF, PWRT disabled
  2405                           ;	MCLR Pin Function Select
  2406                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  2407                           ;	Flash Program Memory Code Protection
  2408                           ;	CP = OFF, Program memory code protection is disabled
  2409                           ;	Data Memory Code Protection
  2410                           ;	CPD = OFF, Data memory code protection is disabled
  2411                           ;	Brown-out Reset Enable
  2412                           ;	BOREN = OFF, Brown-out Reset disabled
  2413                           ;	Clock Out Enable
  2414                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  2415                           ;	Internal/External Switchover
  2416                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2417                           ;	Fail-Safe Clock Monitor Enable
  2418                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2419  8007                     	org	32775
  2420  8007  09E4               	dw	2532
  2421                           
  2422                           ;Config register CONFIG2 @ 0x8008
  2423                           ;	Flash Memory Self-Write Protection
  2424                           ;	WRT = OFF, Write protection off
  2425                           ;	Voltage Regulator Capacitor Enable
  2426                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
  2427                           ;	PLL Enable
  2428                           ;	PLLEN = OFF, 4x PLL disabled
  2429                           ;	Stack Overflow/Underflow Reset Enable
  2430                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  2431                           ;	Brown-out Reset Voltage Selection
  2432                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  2433                           ;	Low-Voltage Programming Enable
  2434                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  2435  8008                     	org	32776
  2436  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    0
    Data        156
    BSS         34
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      13
    BANK0            80     24      74
    BANK1            80      0      74
    BANK2            80      0      64
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_tact
    _main->_waitSEG
    _waitSEG->___lwdiv
    _waitSEG->_dynam
    _tact->_tactsw

Critical Paths under _main in BANK0

    _main->_waitSEG
    _waitSEG->_dynam

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0    3856
                                             10 COMMON     1     1      0
                                             14 BANK0     10    10      0
                              _dynam
                           _portinit
                               _tact
                            _waitSEG
                             _zenoff
 ---------------------------------------------------------------------------------
 (1) _zenoff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _waitSEG                                              8     2      6    2036
                                              8 COMMON     2     2      0
                                              8 BANK0      6     0      6
                            ___lwdiv
                              _dynam
 ---------------------------------------------------------------------------------
 (2) _dynam                                               16     8      8    1359
                                              0 COMMON     8     0      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _tact                                                 2     0      2     366
                                              8 COMMON     2     0      2
                             _tactsw
 ---------------------------------------------------------------------------------
 (2) _tactsw                                               8     8      0     116
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 (1) _portinit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _dynam
   _portinit
   _tact
     _tactsw
   _waitSEG
     ___lwdiv
     _dynam
   _zenoff

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      B       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     18      4A       5       92.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      4A       7       92.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      40       9       80.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      E1      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      E1      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Feb 04 03:03:56 2021

                     l97 045F                       _cw 0034                      l200 050C  
                    l121 0691                      l130 06C7                      l123 06A7  
                    l115 043A                      l125 06B7                      l109 0493  
                    l142 07CE                      l215 05E2                      l119 0681  
                    l136 0744                      l272 060E                      l265 05EC  
                    l267 05F9                      l268 060A                      l712 04CF  
                    _RA0 0060                      _RA1 0061                      _RA2 0062  
                    _RC0 0070                      _RC1 0071                      _RC2 0072  
                    _RC5 0075                      _RC6 0076                      _RC7 0077  
                    u900 068B                      u901 068A                      u910 069E  
                    u911 069D                      u920 06B1                      u921 06B0  
                    u930 06C5                      u931 06C4                      u940 06CF  
                    u941 06CE                      u950 06D5                      u951 06D4  
                    u960 06EB                      u961 06EA                      u970 06F1  
                    u890 0678                      u971 06F0                      u891 0677  
                    u980 070A                      u981 0709                      u990 0710  
                    u991 070F                      _ccw 0032                      _flg 0036  
                    wreg 0009                     l2100 05E6                     l2110 05EC  
                   l2102 05EC                     l2120 062A                     l2112 05F1  
                   l2104 05EC                     l2130 0638                     l2122 062F  
                   l2114 05F5                     l2106 05EC                     l2132 0650  
                   l2124 0633                     l2108 05EC                     l2134 0655  
                   l2118 0612                     l1610 06BD                     l1602 06BA  
                   l1620 06D5                     l1612 06BF                     l1604 06BB  
                   l1630 06EB                     l1622 06D9                     l1614 06C5  
                   l1606 06BB                     l1720 04EA                     l2272 07C3  
                   l1704 07B9                     l1640 0722                     l1632 06F1  
                   l1624 06DB                     l1616 06C9                     l1608 06BC  
                   l1560 066C                     l1730 0507                     l1722 04EF  
                   l1714 04D0                     l2274 05D7                     l1650 0735  
                   l1642 0729                     l1634 0703                     l1626 06DF  
                   l1618 06CF                     l1570 0678                     l1562 066D  
                   l1810 0439                     l1802 0432                     l2098 05E3  
                   l1724 04F1                     l1716 04D4                     l1820 05A7  
                   l1812 0597                     l1740 04A4                     l1732 0494  
                   l1660 0742                     l1644 072F                     l1636 070A  
                   l1628 06E5                     l1708 07BE                     l1572 067D  
                   l1564 066F                     l1804 0436                     l1726 04FA  
                   l1718 04E0                     l1830 05BF                     l1822 05AA  
                   l1814 0598                     l1750 04C0                     l1742 04A8  
                   l1734 0496                     l1670 0758                     l1662 0746  
                   l1646 0731                     l1638 0710                     l1590 069E  
                   l1582 0693                     l1574 0685                     l1566 0670  
                   l1558 0665                     l1806 0437                     l1760 0450  
                   l1832 05C4                     l1824 05B0                     l1816 059B  
                   l1840 05D2                     l1752 04C5                     l1744 04AC  
                   l1736 049C                     l1680 0780                     l1672 075C  
                   l1664 074C                     l1648 0735                     l1592 06A3  
                   l1584 0695                     l1568 0671                     l1808 0438  
                   l1762 0453                     l1834 05CA                     l1826 05B6  
                   l1818 05A1                     l1746 04BB                     l1738 049F  
                   l1754 04CB                     l1690 07AC                     l1682 0787  
                   l1666 0752                     l1674 0762                     l1658 073C  
                   l1594 06AB                     l1586 0696                     l1578 068C  
                   l1764 045A                     l1828 05B9                     l1748 04BF  
                   l1692 07AE                     l1684 078D                     l1676 0768  
                   l1668 0756                     l1588 0697                     l1766 045D  
                   l1758 044D                     l1694 07B2                     l1686 079F  
                   l1678 076E                     l1598 06B2                     l1790 0471  
                   l1696 07B2                     l1688 07A6                     l1792 0475  
                   l1796 047C                     l1788 0460                     l1798 048E  
                   u1000 0729                     u1001 0728                     u1010 072F  
                   u1011 072E                     u1100 07AC                     u1020 0742  
                   u1101 07AB                     u1021 0741                     u1110 04EA  
                   u1030 074C                     u1111 04E9                     u1031 074B  
                   u1120 04FA                     u1040 0752                     u1121 04F9  
                   u1041 0751                     u1130 049C                     u1050 0768  
                   u1115 04E6                     u1131 049B                     u1051 0767  
                   u1060 076E                     u1220 047B                     u1061 076D  
                   u1221 047A                     u1230 05A1                     u1150 04AC  
                   u1070 0787                     u1231 05A0                     u1151 04AB  
                   u1071 0786                     u1240 05B0                     u1080 078D  
                   u1241 05AF                     u1145 04A0                     u1081 078C  
                   u1250 05BF                     u1170 04BB                     u1090 07A6  
                   u1251 05BE                     u1171 04BA                     u1091 07A5  
                   u1260 05CA                     u1261 05C9                     u1165 04AD  
                   u1270 05D1                     u1190 04CB                     u1271 05D0  
                   u1191 04CA                     u1175 04B7                     u1185 04C1  
                   u1700 060E                     u1701 060D                     u1710 0612  
                   u1711 0611                     u1720 0662                     u1640 05F1  
                   u1721 0661                     u1641 05F0                     u1650 05F5  
                   u1651 05F4                     u1660 05F9                     u1725 065E  
                   u1661 05F8                     u1670 0600                     u1671 05FD  
                   u1680 0608                     u1681 0605                     u1684 0602  
                   u1694 060A                     _atai 002C                     _main 05E3  
                   _num0 0140                     _kisu 00E0                     _moja 00D4  
                   _samf 0120                     _mojf 0154                     _tact 0597  
                   _mojh 0066                     _moji 00C0                     _mojn 0062  
                   _samp 00A0                     _gusu 0058                     fsr0h 0005  
                   fsr1h 0007                     indf0 0000                     fsr0l 0004  
                   fsr1l 0006                     btemp 007E                     start 0002  
                  ?_main 0070                    ?_tact 0078          __end_of___lwdiv 04D0  
                  _PORTA 000C                    _PORTB 000D                    _PORTC 000E  
                  _TRISA 008C                    _TRISB 008D                    _TRISC 008E  
                  _code1 0022                    _atai1 002E                    _count 002A  
                  _dynam 0665                    _fugou 0020                    main@i 0056  
        __end_of_waitSEG 0494                    status 0003                    wtemp0 007E  
        __initialization 07CF             __end_of_main 0665             __end_of_tact 05E3  
                 ??_main 007A                   ??_tact 007A                   ?_dynam 0070  
                 _ANSELA 018C                   _ANSELB 018D                   _OSCCON 0099  
            dynam@smdata 0074                   _code10 0024                   _atai10 0030  
                 _flag_P 0038                   _flag_R 003A                ??___lwdiv 0074  
                 _tactsw 04D0                   _zenoff 0432                   dynam@j 0044  
              ??_waitSEG 0078         __end_of_portinit 0460  __end_of__initialization 07FD  
         __pcstackCOMMON 0070             __pidataBANK0 043B             __pidataBANK1 054D  
           __pidataBANK2 050D            __end_of_dynam 07CF                  ??_dynam 0078  
             __pbssBANK0 0020               __pmaintext 05E3                  ?_tactsw 0070  
                ?_zenoff 0070              waitSEG@seg1 0048              waitSEG@seg2 004A  
              ?_portinit 0070                  ___lwdiv 0494                  _code100 0026  
        __size_of_tactsw 003D                  __ptext1 0432                  __ptext2 0460  
                __ptext3 0665                  __ptext4 0494                  __ptext5 0597  
                __ptext6 04D0                  __ptext7 044D          __size_of_zenoff 0009  
                _waitSEG 0460                  clrloop0 0427     end_of_initialization 07FD  
                dynam@tm 0042                  dynam@tr 0076                  init_ram 042C  
                initloop 042D                  tactsw@a 0076                  tactsw@b 0072  
                tactsw@c 0074               ??_portinit 0070           __end_of_tactsw 050D  
         __end_of_zenoff 043B      start_initialization 07CF              __pdataBANK0 0058  
            __pdataBANK1 00A0              __pdataBANK2 0120                 ??_tactsw 0070  
               ??_zenoff 0070              __pbssCOMMON 007B                ___latbits 0003  
          __pcstackBANK0 0040         ___lwdiv@dividend 0072                 ?___lwdiv 0070  
      __size_of_portinit 0013                 ?_waitSEG 0048         ___lwdiv@quotient 0075  
         __size_of_dynam 016A            dynam@dig1data 0070            dynam@dig2data 0072  
              clear_ram0 0426         __size_of___lwdiv 003C                 _code1000 0028  
        ___lwdiv@divisor 0070          ___lwdiv@counter 0077         __size_of_waitSEG 0034  
               _flag_sw1 003E                 _flag_sw2 003C                 _flag_sw3 007B  
              waitSEG@wt 004C            __size_of_main 0082            __size_of_tact 004C  
               _portinit 044D                 dynam@ext 0046                 dynam@smd 0040  
               tact@mode 0078                 waitSEG@i 0078  
