

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 26 16:40:07 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F1938
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    30                           	dabs	1,0x7E,2
    31  0000                     
    32                           ; Version 2.20
    33                           ; Generated 12/02/2020 GMT
    34                           ; 
    35                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F1938 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  0008                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000D                     	;# 
    80  000E                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0015                     	;# 
    86  0016                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001C                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  010C                     	;# 
   115  010D                     	;# 
   116  010E                     	;# 
   117  0110                     	;# 
   118  0111                     	;# 
   119  0112                     	;# 
   120  0113                     	;# 
   121  0114                     	;# 
   122  0115                     	;# 
   123  0116                     	;# 
   124  0117                     	;# 
   125  0118                     	;# 
   126  0119                     	;# 
   127  011A                     	;# 
   128  011B                     	;# 
   129  011D                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0191                     	;# 
   133  0191                     	;# 
   134  0192                     	;# 
   135  0193                     	;# 
   136  0193                     	;# 
   137  0193                     	;# 
   138  0194                     	;# 
   139  0195                     	;# 
   140  0196                     	;# 
   141  0199                     	;# 
   142  019A                     	;# 
   143  019B                     	;# 
   144  019B                     	;# 
   145  019B                     	;# 
   146  019B                     	;# 
   147  019C                     	;# 
   148  019C                     	;# 
   149  019D                     	;# 
   150  019E                     	;# 
   151  019F                     	;# 
   152  020D                     	;# 
   153  0210                     	;# 
   154  0211                     	;# 
   155  0212                     	;# 
   156  0213                     	;# 
   157  0214                     	;# 
   158  0215                     	;# 
   159  0215                     	;# 
   160  0216                     	;# 
   161  0217                     	;# 
   162  0291                     	;# 
   163  0291                     	;# 
   164  0292                     	;# 
   165  0293                     	;# 
   166  0294                     	;# 
   167  0295                     	;# 
   168  0295                     	;# 
   169  0296                     	;# 
   170  0298                     	;# 
   171  0298                     	;# 
   172  0299                     	;# 
   173  029A                     	;# 
   174  029B                     	;# 
   175  029C                     	;# 
   176  029C                     	;# 
   177  029D                     	;# 
   178  029E                     	;# 
   179  029F                     	;# 
   180  0311                     	;# 
   181  0311                     	;# 
   182  0312                     	;# 
   183  0313                     	;# 
   184  0314                     	;# 
   185  0315                     	;# 
   186  0315                     	;# 
   187  0316                     	;# 
   188  0318                     	;# 
   189  0318                     	;# 
   190  0319                     	;# 
   191  031A                     	;# 
   192  031C                     	;# 
   193  031C                     	;# 
   194  031D                     	;# 
   195  031E                     	;# 
   196  0394                     	;# 
   197  0395                     	;# 
   198  0396                     	;# 
   199  0415                     	;# 
   200  0416                     	;# 
   201  0417                     	;# 
   202  041C                     	;# 
   203  041D                     	;# 
   204  041E                     	;# 
   205  0791                     	;# 
   206  0792                     	;# 
   207  0793                     	;# 
   208  0794                     	;# 
   209  0795                     	;# 
   210  0798                     	;# 
   211  0799                     	;# 
   212  07A0                     	;# 
   213  07A1                     	;# 
   214  07A3                     	;# 
   215  07A4                     	;# 
   216  07A6                     	;# 
   217  07A7                     	;# 
   218  07A9                     	;# 
   219  07AA                     	;# 
   220  0FE4                     	;# 
   221  0FE5                     	;# 
   222  0FE6                     	;# 
   223  0FE7                     	;# 
   224  0FE8                     	;# 
   225  0FE9                     	;# 
   226  0FEA                     	;# 
   227  0FEB                     	;# 
   228  0FED                     	;# 
   229  0FEE                     	;# 
   230  0FEF                     	;# 
   231  0000                     	;# 
   232  0001                     	;# 
   233  0002                     	;# 
   234  0003                     	;# 
   235  0004                     	;# 
   236  0005                     	;# 
   237  0006                     	;# 
   238  0007                     	;# 
   239  0008                     	;# 
   240  0009                     	;# 
   241  000A                     	;# 
   242  000B                     	;# 
   243  000C                     	;# 
   244  000D                     	;# 
   245  000E                     	;# 
   246  0010                     	;# 
   247  0011                     	;# 
   248  0012                     	;# 
   249  0013                     	;# 
   250  0015                     	;# 
   251  0016                     	;# 
   252  0016                     	;# 
   253  0017                     	;# 
   254  0018                     	;# 
   255  0019                     	;# 
   256  001A                     	;# 
   257  001B                     	;# 
   258  001C                     	;# 
   259  001E                     	;# 
   260  001F                     	;# 
   261  008C                     	;# 
   262  008D                     	;# 
   263  008E                     	;# 
   264  0090                     	;# 
   265  0091                     	;# 
   266  0092                     	;# 
   267  0093                     	;# 
   268  0095                     	;# 
   269  0096                     	;# 
   270  0097                     	;# 
   271  0098                     	;# 
   272  0099                     	;# 
   273  009A                     	;# 
   274  009B                     	;# 
   275  009B                     	;# 
   276  009C                     	;# 
   277  009D                     	;# 
   278  009E                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  0110                     	;# 
   283  0111                     	;# 
   284  0112                     	;# 
   285  0113                     	;# 
   286  0114                     	;# 
   287  0115                     	;# 
   288  0116                     	;# 
   289  0117                     	;# 
   290  0118                     	;# 
   291  0119                     	;# 
   292  011A                     	;# 
   293  011B                     	;# 
   294  011D                     	;# 
   295  018C                     	;# 
   296  018D                     	;# 
   297  0191                     	;# 
   298  0191                     	;# 
   299  0192                     	;# 
   300  0193                     	;# 
   301  0193                     	;# 
   302  0193                     	;# 
   303  0194                     	;# 
   304  0195                     	;# 
   305  0196                     	;# 
   306  0199                     	;# 
   307  019A                     	;# 
   308  019B                     	;# 
   309  019B                     	;# 
   310  019B                     	;# 
   311  019B                     	;# 
   312  019C                     	;# 
   313  019C                     	;# 
   314  019D                     	;# 
   315  019E                     	;# 
   316  019F                     	;# 
   317  020D                     	;# 
   318  0210                     	;# 
   319  0211                     	;# 
   320  0212                     	;# 
   321  0213                     	;# 
   322  0214                     	;# 
   323  0215                     	;# 
   324  0215                     	;# 
   325  0216                     	;# 
   326  0217                     	;# 
   327  0291                     	;# 
   328  0291                     	;# 
   329  0292                     	;# 
   330  0293                     	;# 
   331  0294                     	;# 
   332  0295                     	;# 
   333  0295                     	;# 
   334  0296                     	;# 
   335  0298                     	;# 
   336  0298                     	;# 
   337  0299                     	;# 
   338  029A                     	;# 
   339  029B                     	;# 
   340  029C                     	;# 
   341  029C                     	;# 
   342  029D                     	;# 
   343  029E                     	;# 
   344  029F                     	;# 
   345  0311                     	;# 
   346  0311                     	;# 
   347  0312                     	;# 
   348  0313                     	;# 
   349  0314                     	;# 
   350  0315                     	;# 
   351  0315                     	;# 
   352  0316                     	;# 
   353  0318                     	;# 
   354  0318                     	;# 
   355  0319                     	;# 
   356  031A                     	;# 
   357  031C                     	;# 
   358  031C                     	;# 
   359  031D                     	;# 
   360  031E                     	;# 
   361  0394                     	;# 
   362  0395                     	;# 
   363  0396                     	;# 
   364  0415                     	;# 
   365  0416                     	;# 
   366  0417                     	;# 
   367  041C                     	;# 
   368  041D                     	;# 
   369  041E                     	;# 
   370  0791                     	;# 
   371  0792                     	;# 
   372  0793                     	;# 
   373  0794                     	;# 
   374  0795                     	;# 
   375  0798                     	;# 
   376  0799                     	;# 
   377  07A0                     	;# 
   378  07A1                     	;# 
   379  07A3                     	;# 
   380  07A4                     	;# 
   381  07A6                     	;# 
   382  07A7                     	;# 
   383  07A9                     	;# 
   384  07AA                     	;# 
   385  0FE4                     	;# 
   386  0FE5                     	;# 
   387  0FE6                     	;# 
   388  0FE7                     	;# 
   389  0FE8                     	;# 
   390  0FE9                     	;# 
   391  0FEA                     	;# 
   392  0FEB                     	;# 
   393  0FED                     	;# 
   394  0FEE                     	;# 
   395  0FEF                     	;# 
   396                           
   397                           	psect	idataBANK0
   398  0043                     __pidataBANK0:
   399                           
   400                           ;initializer for _mojn
   401  0043  3454               	retlw	84
   402  0044  3400               	retlw	0
   403  0045  3473               	retlw	115
   404  0046  3400               	retlw	0
   405                           
   406                           ;initializer for _mojh
   407  0047  3476               	retlw	118
   408  0048  3400               	retlw	0
   409  0049  3438               	retlw	56
   410  004A  3400               	retlw	0
   411                           
   412                           	psect	idataBANK1
   413  0156                     __pidataBANK1:
   414                           
   415                           ;initializer for _samp
   416  0156  343F               	retlw	63
   417  0157  3400               	retlw	0
   418  0158  3406               	retlw	6
   419  0159  3400               	retlw	0
   420  015A  345B               	retlw	91
   421  015B  3400               	retlw	0
   422  015C  344F               	retlw	79
   423  015D  3400               	retlw	0
   424  015E  3466               	retlw	102
   425  015F  3400               	retlw	0
   426  0160  346D               	retlw	109
   427  0161  3400               	retlw	0
   428  0162  347D               	retlw	125
   429  0163  3400               	retlw	0
   430  0164  3427               	retlw	39
   431  0165  3400               	retlw	0
   432  0166  347F               	retlw	127
   433  0167  3400               	retlw	0
   434  0168  346F               	retlw	111
   435  0169  3400               	retlw	0
   436  016A  345F               	retlw	95
   437  016B  3400               	retlw	0
   438  016C  347C               	retlw	124
   439  016D  3400               	retlw	0
   440  016E  3458               	retlw	88
   441  016F  3400               	retlw	0
   442  0170  345E               	retlw	94
   443  0171  3400               	retlw	0
   444  0172  3479               	retlw	121
   445  0173  3400               	retlw	0
   446  0174  3471               	retlw	113
   447  0175  3400               	retlw	0
   448                           
   449                           ;initializer for _num0
   450  0176  343F               	retlw	63
   451  0177  3400               	retlw	0
   452  0178  3406               	retlw	6
   453  0179  3400               	retlw	0
   454  017A  345B               	retlw	91
   455  017B  3400               	retlw	0
   456  017C  344F               	retlw	79
   457  017D  3400               	retlw	0
   458  017E  3466               	retlw	102
   459  017F  3400               	retlw	0
   460  0180  346D               	retlw	109
   461  0181  3400               	retlw	0
   462  0182  347D               	retlw	125
   463  0183  3400               	retlw	0
   464  0184  3427               	retlw	39
   465  0185  3400               	retlw	0
   466  0186  347F               	retlw	127
   467  0187  3400               	retlw	0
   468  0188  346F               	retlw	111
   469  0189  3400               	retlw	0
   470                           
   471                           ;initializer for _kisu
   472  018A  3406               	retlw	6
   473  018B  3400               	retlw	0
   474  018C  344F               	retlw	79
   475  018D  3400               	retlw	0
   476  018E  346D               	retlw	109
   477  018F  3400               	retlw	0
   478  0190  3427               	retlw	39
   479  0191  3400               	retlw	0
   480  0192  346F               	retlw	111
   481  0193  3400               	retlw	0
   482                           
   483                           ;initializer for _gusu
   484  0194  343F               	retlw	63
   485  0195  3400               	retlw	0
   486  0196  345B               	retlw	91
   487  0197  3400               	retlw	0
   488  0198  3466               	retlw	102
   489  0199  3400               	retlw	0
   490  019A  347D               	retlw	125
   491  019B  3400               	retlw	0
   492  019C  347F               	retlw	127
   493  019D  3400               	retlw	0
   494                           
   495                           	psect	idataBANK2
   496  01E9                     __pidataBANK2:
   497                           
   498                           ;initializer for _samf
   499  01E9  3471               	retlw	113
   500  01EA  3400               	retlw	0
   501  01EB  3479               	retlw	121
   502  01EC  3400               	retlw	0
   503  01ED  345E               	retlw	94
   504  01EE  3400               	retlw	0
   505  01EF  3458               	retlw	88
   506  01F0  3400               	retlw	0
   507  01F1  347C               	retlw	124
   508  01F2  3400               	retlw	0
   509  01F3  345F               	retlw	95
   510  01F4  3400               	retlw	0
   511  01F5  346F               	retlw	111
   512  01F6  3400               	retlw	0
   513  01F7  347F               	retlw	127
   514  01F8  3400               	retlw	0
   515  01F9  3427               	retlw	39
   516  01FA  3400               	retlw	0
   517  01FB  347D               	retlw	125
   518  01FC  3400               	retlw	0
   519  01FD  346D               	retlw	109
   520  01FE  3400               	retlw	0
   521  01FF  3466               	retlw	102
   522  0200  3400               	retlw	0
   523  0201  344F               	retlw	79
   524  0202  3400               	retlw	0
   525  0203  345B               	retlw	91
   526  0204  3400               	retlw	0
   527  0205  3406               	retlw	6
   528  0206  3400               	retlw	0
   529  0207  343F               	retlw	63
   530  0208  3400               	retlw	0
   531                           
   532                           ;initializer for _moji
   533  0209  345F               	retlw	95
   534  020A  3400               	retlw	0
   535  020B  347C               	retlw	124
   536  020C  3400               	retlw	0
   537  020D  3458               	retlw	88
   538  020E  3400               	retlw	0
   539  020F  345E               	retlw	94
   540  0210  3400               	retlw	0
   541  0211  3479               	retlw	121
   542  0212  3400               	retlw	0
   543  0213  3471               	retlw	113
   544  0214  3400               	retlw	0
   545  0215  3476               	retlw	118
   546  0216  3400               	retlw	0
   547  0217  3438               	retlw	56
   548  0218  3400               	retlw	0
   549  0219  3454               	retlw	84
   550  021A  3400               	retlw	0
   551  021B  3473               	retlw	115
   552  021C  3400               	retlw	0
   553                           
   554                           ;initializer for _mojf
   555  021D  3471               	retlw	113
   556  021E  3400               	retlw	0
   557  021F  3479               	retlw	121
   558  0220  3400               	retlw	0
   559  0221  345E               	retlw	94
   560  0222  3400               	retlw	0
   561  0223  3458               	retlw	88
   562  0224  3400               	retlw	0
   563  0225  347C               	retlw	124
   564  0226  3400               	retlw	0
   565  0227  345F               	retlw	95
   566  0228  3400               	retlw	0
   567                           
   568                           ;initializer for _moja
   569  0229  345F               	retlw	95
   570  022A  3400               	retlw	0
   571  022B  347C               	retlw	124
   572  022C  3400               	retlw	0
   573  022D  3458               	retlw	88
   574  022E  3400               	retlw	0
   575  022F  345E               	retlw	94
   576  0230  3400               	retlw	0
   577  0231  3479               	retlw	121
   578  0232  3400               	retlw	0
   579  0233  3471               	retlw	113
   580  0234  3400               	retlw	0
   581  000E                     _PORTC	set	14
   582  000D                     _PORTB	set	13
   583  000C                     _PORTA	set	12
   584  0061                     _RA1	set	97
   585  0060                     _RA0	set	96
   586  0062                     _RA2	set	98
   587  0077                     _RC7	set	119
   588  0072                     _RC2	set	114
   589  0071                     _RC1	set	113
   590  0070                     _RC0	set	112
   591  0076                     _RC6	set	118
   592  0075                     _RC5	set	117
   593  0099                     _OSCCON	set	153
   594  008E                     _TRISC	set	142
   595  008D                     _TRISB	set	141
   596  008C                     _TRISA	set	140
   597  018D                     _ANSELB	set	397
   598  018C                     _ANSELA	set	396
   599                           
   600                           	psect	cinit
   601  07D1                     start_initialization:	
   602                           ; #config settings
   603                           
   604  07D1                     __initialization:
   605                           
   606                           ; Initialize objects allocated to BANK0
   607  07D1  3043               	movlw	low __pidataBANK0
   608  07D2  0084               	movwf	4
   609  07D3  3080               	movlw	(high __pidataBANK0)| (0+128)
   610  07D4  0085               	movwf	5
   611  07D5  3068               	movlw	low __pdataBANK0
   612  07D6  0086               	movwf	6
   613  07D7  3000               	movlw	high __pdataBANK0
   614  07D8  0087               	movwf	7
   615  07D9  3008               	movlw	8
   616  07DA  3180  203D  3187   	fcall	init_ram
   617                           
   618                           ; Initialize objects allocated to BANK1
   619  07DD  3056               	movlw	low __pidataBANK1
   620  07DE  0084               	movwf	4
   621  07DF  3081               	movlw	(high __pidataBANK1)| (0+128)
   622  07E0  0085               	movwf	5
   623  07E1  30A0               	movlw	low __pdataBANK1
   624  07E2  0086               	movwf	6
   625  07E3  3000               	movlw	high __pdataBANK1
   626  07E4  0087               	movwf	7
   627  07E5  3048               	movlw	72
   628  07E6  3180  203D  3187   	fcall	init_ram
   629                           
   630                           ; Initialize objects allocated to BANK2
   631  07E9  30E9               	movlw	low __pidataBANK2
   632  07EA  0084               	movwf	4
   633  07EB  3081               	movlw	(high __pidataBANK2)| (0+128)
   634  07EC  0085               	movwf	5
   635  07ED  3020               	movlw	low __pdataBANK2
   636  07EE  0086               	movwf	6
   637  07EF  3001               	movlw	high __pdataBANK2
   638  07F0  0087               	movwf	7
   639  07F1  304C               	movlw	76
   640  07F2  3180  203D  3187   	fcall	init_ram
   641                           
   642                           ; Clear objects allocated to BANK0
   643  07F5  3046               	movlw	low __pbssBANK0
   644  07F6  0084               	movwf	4
   645  07F7  3000               	movlw	high __pbssBANK0
   646  07F8  0085               	movwf	5
   647  07F9  3022               	movlw	34
   648  07FA  3180  2037  3187   	fcall	clear_ram0
   649  07FD                     end_of_initialization:	
   650                           ;End of C runtime variable initialization code
   651                           
   652  07FD                     __end_of__initialization:
   653  07FD  0020               	movlb	0
   654  07FE  3184  2C95         	ljmp	_main	;jump to C main() function
   655                           
   656                           	psect	bssBANK0
   657  0046                     __pbssBANK0:
   658  0046                     _fugou:
   659  0046                     	ds	2
   660  0048                     _code1:
   661  0048                     	ds	2
   662  004A                     _code10:
   663  004A                     	ds	2
   664  004C                     _code100:
   665  004C                     	ds	2
   666  004E                     _code1000:
   667  004E                     	ds	2
   668  0050                     _count:
   669  0050                     	ds	2
   670  0052                     _atai:
   671  0052                     	ds	2
   672  0054                     _atai1:
   673  0054                     	ds	2
   674  0056                     _atai10:
   675  0056                     	ds	2
   676  0058                     _ccw:
   677  0058                     	ds	2
   678  005A                     _cw:
   679  005A                     	ds	2
   680  005C                     _flg:
   681  005C                     	ds	2
   682  005E                     _flag_P:
   683  005E                     	ds	2
   684  0060                     _flag_R:
   685  0060                     	ds	2
   686  0062                     _flag_sw3:
   687  0062                     	ds	2
   688  0064                     _flag_sw2:
   689  0064                     	ds	2
   690  0066                     _flag_sw1:
   691  0066                     	ds	2
   692                           
   693                           	psect	dataBANK0
   694  0068                     __pdataBANK0:
   695  0068                     _mojn:
   696  0068                     	ds	4
   697  006C                     _mojh:
   698  006C                     	ds	4
   699                           
   700                           	psect	dataBANK1
   701  00A0                     __pdataBANK1:
   702  00A0                     _samp:
   703  00A0                     	ds	32
   704  00C0                     _num0:
   705  00C0                     	ds	20
   706  00D4                     _kisu:
   707  00D4                     	ds	10
   708  00DE                     _gusu:
   709  00DE                     	ds	10
   710                           
   711                           	psect	dataBANK2
   712  0120                     __pdataBANK2:
   713  0120                     _samf:
   714  0120                     	ds	32
   715  0140                     _moji:
   716  0140                     	ds	20
   717  0154                     _mojf:
   718  0154                     	ds	12
   719  0160                     _moja:
   720  0160                     	ds	12
   721                           
   722                           	psect	inittext
   723  003D                     init_ram:
   724  003D  00FE               	movwf	btemp
   725  003E                     initloop:
   726  003E  0012               	moviw fsr0++
   727  003F  001E               	movwi fsr1++
   728  0040  0BFE               	decfsz	btemp,f
   729  0041  283E               	goto	initloop
   730  0042  3400               	retlw	0
   731                           
   732                           	psect	clrtext
   733  0037                     clear_ram0:	
   734                           ;	Called with FSR0 containing the base address, and
   735                           ;	WREG with the size to clear
   736                           
   737  0037  0064               	clrwdt	;clear the watchdog before getting into this loop
   738  0038                     clrloop0:
   739  0038  0180               	clrf	0	;clear RAM location pointed to by FSR
   740  0039  3101               	addfsr 0,1
   741  003A  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   742  003B  2838               	goto	clrloop0	;have we reached the end yet?
   743  003C  3400               	retlw	0	;all done for this memory range, return
   744                           
   745                           	psect	cstackCOMMON
   746  0070                     __pcstackCOMMON:
   747  0070                     ?_portinit:
   748  0070                     ??_portinit:	
   749                           ; 1 bytes @ 0x0
   750                           
   751  0070                     ?_zenoff:	
   752                           ; 1 bytes @ 0x0
   753                           
   754  0070                     ??_zenoff:	
   755                           ; 1 bytes @ 0x0
   756                           
   757  0070                     ?_dynam:	
   758                           ; 1 bytes @ 0x0
   759                           
   760  0070                     ?_tactsw:	
   761                           ; 1 bytes @ 0x0
   762                           
   763  0070                     ??_tactsw:	
   764                           ; 1 bytes @ 0x0
   765                           
   766  0070                     ?_fclr:	
   767                           ; 1 bytes @ 0x0
   768                           
   769  0070                     ?_jikan:	
   770                           ; 1 bytes @ 0x0
   771                           
   772  0070                     ??_jikan:	
   773                           ; 1 bytes @ 0x0
   774                           
   775  0070                     ?_main:	
   776                           ; 1 bytes @ 0x0
   777                           
   778  0070                     ?___wmul:	
   779                           ; 1 bytes @ 0x0
   780                           
   781  0070                     ?___lwdiv:	
   782                           ; 2 bytes @ 0x0
   783                           
   784  0070                     dynam@dig1data:	
   785                           ; 2 bytes @ 0x0
   786                           
   787  0070                     fclr@flg:	
   788                           ; 2 bytes @ 0x0
   789                           
   790  0070                     ___wmul@multiplier:	
   791                           ; 2 bytes @ 0x0
   792                           
   793  0070                     ___lwdiv@divisor:	
   794                           ; 2 bytes @ 0x0
   795                           
   796                           
   797                           ; 2 bytes @ 0x0
   798  0070                     	ds	2
   799  0072                     ??_fclr:
   800  0072                     dynam@dig2data:	
   801                           ; 1 bytes @ 0x2
   802                           
   803  0072                     tactsw@b:	
   804                           ; 2 bytes @ 0x2
   805                           
   806  0072                     ___wmul@multiplicand:	
   807                           ; 2 bytes @ 0x2
   808                           
   809  0072                     ___lwdiv@dividend:	
   810                           ; 2 bytes @ 0x2
   811                           
   812                           
   813                           ; 2 bytes @ 0x2
   814  0072                     	ds	2
   815  0074                     ??___wmul:
   816  0074                     ??___lwdiv:	
   817                           ; 1 bytes @ 0x4
   818                           
   819  0074                     dynam@smdata:	
   820                           ; 1 bytes @ 0x4
   821                           
   822  0074                     tactsw@c:	
   823                           ; 2 bytes @ 0x4
   824                           
   825  0074                     ___wmul@product:	
   826                           ; 2 bytes @ 0x4
   827                           
   828                           
   829                           ; 2 bytes @ 0x4
   830  0074                     	ds	1
   831  0075                     ___lwdiv@quotient:
   832                           
   833                           ; 2 bytes @ 0x5
   834  0075                     	ds	1
   835  0076                     ?_wait:
   836  0076                     wait@wt:	
   837                           ; 1 bytes @ 0x6
   838                           
   839  0076                     dynam@tr:	
   840                           ; 2 bytes @ 0x6
   841                           
   842  0076                     tactsw@a:	
   843                           ; 2 bytes @ 0x6
   844                           
   845                           
   846                           ; 2 bytes @ 0x6
   847  0076                     	ds	1
   848  0077                     ___lwdiv@counter:
   849                           
   850                           ; 1 bytes @ 0x7
   851  0077                     	ds	1
   852  0078                     ??_wait:
   853  0078                     ??_dynam:	
   854                           ; 1 bytes @ 0x8
   855                           
   856  0078                     ?_tact:	
   857                           ; 1 bytes @ 0x8
   858                           
   859  0078                     wait@i:	
   860                           ; 1 bytes @ 0x8
   861                           
   862  0078                     tact@mode:	
   863                           ; 2 bytes @ 0x8
   864                           
   865                           
   866                           ; 2 bytes @ 0x8
   867  0078                     	ds	2
   868  007A                     ??_tact:
   869  007A                     ??_waitSEG:	
   870                           ; 1 bytes @ 0xA
   871                           
   872  007A                     ??_motor:	
   873                           ; 1 bytes @ 0xA
   874                           
   875  007A                     wait@j:	
   876                           ; 1 bytes @ 0xA
   877                           
   878                           
   879                           ; 2 bytes @ 0xA
   880  007A                     	ds	2
   881  007C                     ??_main:
   882                           
   883                           ; 1 bytes @ 0xC
   884  007C                     	ds	1
   885                           
   886                           	psect	cstackBANK0
   887  0020                     __pcstackBANK0:
   888  0020                     dynam@smd:
   889                           
   890                           ; 2 bytes @ 0x0
   891  0020                     	ds	2
   892  0022                     dynam@tm:
   893                           
   894                           ; 2 bytes @ 0x2
   895  0022                     	ds	2
   896  0024                     dynam@j:
   897                           
   898                           ; 2 bytes @ 0x4
   899  0024                     	ds	2
   900  0026                     dynam@ext:
   901                           
   902                           ; 2 bytes @ 0x6
   903  0026                     	ds	2
   904  0028                     ?_waitSEG:
   905  0028                     ?_motor:	
   906                           ; 2 bytes @ 0x8
   907                           
   908  0028                     waitSEG@seg1:	
   909                           ; 2 bytes @ 0x8
   910                           
   911  0028                     motor@kakudo:	
   912                           ; 2 bytes @ 0x8
   913                           
   914                           
   915                           ; 2 bytes @ 0x8
   916  0028                     	ds	2
   917  002A                     waitSEG@seg2:
   918  002A                     motor@dig1data:	
   919                           ; 2 bytes @ 0xA
   920                           
   921                           
   922                           ; 2 bytes @ 0xA
   923  002A                     	ds	2
   924  002C                     waitSEG@wt:
   925  002C                     motor@dig2data:	
   926                           ; 2 bytes @ 0xC
   927                           
   928                           
   929                           ; 2 bytes @ 0xC
   930  002C                     	ds	2
   931  002E                     waitSEG@cpSW1:
   932  002E                     motor@smdata:	
   933                           ; 2 bytes @ 0xE
   934                           
   935                           
   936                           ; 2 bytes @ 0xE
   937  002E                     	ds	2
   938  0030                     waitSEG@cpSW2:
   939  0030                     motor@tr:	
   940                           ; 2 bytes @ 0x10
   941                           
   942                           
   943                           ; 2 bytes @ 0x10
   944  0030                     	ds	2
   945  0032                     waitSEG@i:
   946  0032                     motor@cpSW1:	
   947                           ; 2 bytes @ 0x12
   948                           
   949                           
   950                           ; 2 bytes @ 0x12
   951  0032                     	ds	2
   952  0034                     motor@cpSW2:
   953                           
   954                           ; 2 bytes @ 0x14
   955  0034                     	ds	2
   956  0036                     motor@i:
   957                           
   958                           ; 2 bytes @ 0x16
   959  0036                     	ds	8
   960  003E                     main@time:
   961                           
   962                           ; 2 bytes @ 0x1E
   963  003E                     	ds	2
   964  0040                     main@zyoutai:
   965                           
   966                           ; 2 bytes @ 0x20
   967  0040                     	ds	2
   968  0042                     main@j:
   969                           
   970                           ; 2 bytes @ 0x22
   971  0042                     	ds	2
   972  0044                     main@i:
   973                           
   974                           ; 2 bytes @ 0x24
   975  0044                     	ds	2
   976                           
   977                           	psect	maintext
   978  0495                     __pmaintext:	
   979 ;;
   980 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   981 ;;
   982 ;; *************** function _main *****************
   983 ;; Defined at:
   984 ;;		line 498 in file "Q4.c"
   985 ;; Parameters:    Size  Location     Type
   986 ;;		None
   987 ;; Auto vars:     Size  Location     Type
   988 ;;  i               2   36[BANK0 ] int 
   989 ;;  j               2   34[BANK0 ] int 
   990 ;;  zyoutai         2   32[BANK0 ] int 
   991 ;;  time            2   30[BANK0 ] int 
   992 ;;  n               2    0        int 
   993 ;;  m               2    0        int 
   994 ;;  k               2    0        int 
   995 ;; Return value:  Size  Location     Type
   996 ;;                  1    wreg      void 
   997 ;; Registers used:
   998 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   999 ;; Tracked objects:
  1000 ;;		On entry : B1F/0
  1001 ;;		On exit  : 0/0
  1002 ;;		Unchanged: 0/0
  1003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1005 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1006 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1007 ;;      Totals:         1      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1008 ;;Total ram usage:       15 bytes
  1009 ;; Hardware stack levels required when called:    3
  1010 ;; This function calls:
  1011 ;;		_dynam
  1012 ;;		_fclr
  1013 ;;		_jikan
  1014 ;;		_motor
  1015 ;;		_portinit
  1016 ;;		_wait
  1017 ;;		_waitSEG
  1018 ;;		_zenoff
  1019 ;; This function is called by:
  1020 ;;		Startup code after reset
  1021 ;; This function uses a non-reentrant model
  1022 ;;
  1023                           
  1024                           
  1025                           ;psect for function _main
  1026  0495                     _main:
  1027  0495                     l2405:	
  1028                           ;incstack = 0
  1029                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1030                           
  1031                           
  1032                           ;Q4.c: 501:     OSCCON=0x7A;
  1033  0495  307A               	movlw	122
  1034  0496  0021               	movlb	1	; select bank1
  1035  0497  0099               	movwf	25	;volatile
  1036  0498                     l2407:
  1037                           
  1038                           ;Q4.c: 503:     portinit();
  1039  0498  3180  2061  3184   	fcall	_portinit
  1040                           
  1041                           ;Q4.c: 505:     zenoff();
  1042  049B  3180  204B  3184   	fcall	_zenoff
  1043  049E                     l2409:
  1044  049E                     l2411:
  1045  049E                     l2413:
  1046  049E                     l2415:
  1047  049E                     l2417:
  1048  049E                     l278:	
  1049                           ;Q4.c: 510:     while((RA0!=1)||(RA1!=1)||(RA2!=1));
  1050                           
  1051  049E  0020               	movlb	0	; select bank0
  1052  049F  1C0C               	btfss	12,0	;volatile
  1053  04A0  2CA2               	goto	u2171
  1054  04A1  2CA3               	goto	u2170
  1055  04A2                     u2171:
  1056  04A2  2C9E               	goto	l278
  1057  04A3                     u2170:
  1058  04A3                     l2419:
  1059  04A3  1C8C               	btfss	12,1	;volatile
  1060  04A4  2CA6               	goto	u2181
  1061  04A5  2CA7               	goto	u2180
  1062  04A6                     u2181:
  1063  04A6  2C9E               	goto	l278
  1064  04A7                     u2180:
  1065  04A7                     l2421:
  1066  04A7  1D0C               	btfss	12,2	;volatile
  1067  04A8  2CAA               	goto	u2191
  1068  04A9  2CAB               	goto	u2190
  1069  04AA                     u2191:
  1070  04AA  2C9E               	goto	l278
  1071  04AB                     u2190:
  1072  04AB                     l280:
  1073                           
  1074                           ;Q4.c: 513:     RC0=RC2=RC1=1;
  1075  04AB  148E               	bsf	14,1	;volatile
  1076  04AC  188E               	btfsc	14,1	;volatile
  1077  04AD  2CAF               	goto	u2201
  1078  04AE  2CB2               	goto	u2200
  1079  04AF                     u2201:
  1080  04AF  0020               	movlb	0	; select bank0
  1081  04B0  150E               	bsf	14,2	;volatile
  1082  04B1  2CB4               	goto	u2214
  1083  04B2                     u2200:
  1084  04B2  0020               	movlb	0	; select bank0
  1085  04B3  110E               	bcf	14,2	;volatile
  1086  04B4                     u2214:
  1087  04B4  190E               	btfsc	14,2	;volatile
  1088  04B5  2CB7               	goto	u2211
  1089  04B6  2CBA               	goto	u2210
  1090  04B7                     u2211:
  1091  04B7  0020               	movlb	0	; select bank0
  1092  04B8  140E               	bsf	14,0	;volatile
  1093  04B9  2CBC               	goto	u2224
  1094  04BA                     u2210:
  1095  04BA  0020               	movlb	0	; select bank0
  1096  04BB  100E               	bcf	14,0	;volatile
  1097  04BC                     u2224:
  1098  04BC                     l2423:
  1099                           
  1100                           ;Q4.c: 516:     fclr(2);
  1101  04BC  3002               	movlw	2
  1102  04BD  00F0               	movwf	fclr@flg
  1103  04BE  3000               	movlw	0
  1104  04BF  00F1               	movwf	fclr@flg+1
  1105  04C0  3180  2093  3184   	fcall	_fclr
  1106  04C3                     l2425:
  1107                           
  1108                           ;Q4.c: 526:     int time = 0;
  1109  04C3  0020               	movlb	0	; select bank0
  1110  04C4  01BE               	clrf	main@time
  1111  04C5  01BF               	clrf	main@time+1
  1112  04C6                     l2427:
  1113  04C6                     l2429:
  1114                           
  1115                           ;Q4.c: 532:         if(RA1 == 0){
  1116  04C6  188C               	btfsc	12,1	;volatile
  1117  04C7  2CC9               	goto	u2231
  1118  04C8  2CCA               	goto	u2230
  1119  04C9                     u2231:
  1120  04C9  2E9D               	goto	l2497
  1121  04CA                     u2230:
  1122  04CA                     l2431:
  1123                           
  1124                           ;Q4.c: 534:             zyoutai = waitSEG(0,(0x08|0x10|0x20),2000);
  1125  04CA  3000               	movlw	0
  1126  04CB  00A8               	movwf	waitSEG@seg1
  1127  04CC  00A9               	movwf	waitSEG@seg1+1
  1128  04CD  3038               	movlw	56
  1129  04CE  00AA               	movwf	waitSEG@seg2
  1130  04CF  3000               	movlw	0
  1131  04D0  00AB               	movwf	waitSEG@seg2+1
  1132  04D1  30D0               	movlw	208
  1133  04D2  00AC               	movwf	waitSEG@wt
  1134  04D3  3007               	movlw	7
  1135  04D4  00AD               	movwf	waitSEG@wt+1
  1136  04D5  3182  22A8  3184   	fcall	_waitSEG
  1137  04D8  0020               	movlb	0	; select bank0
  1138  04D9  0829               	movf	?_waitSEG+1,w
  1139  04DA  00C1               	movwf	main@zyoutai+1
  1140  04DB  0828               	movf	?_waitSEG,w
  1141  04DC  00C0               	movwf	main@zyoutai
  1142  04DD                     l2433:
  1143                           
  1144                           ;Q4.c: 535:             if(zyoutai == 1){
  1145  04DD  0340               	decf	main@zyoutai,w
  1146  04DE  0441               	iorwf	main@zyoutai+1,w
  1147  04DF  1D03               	btfss	3,2
  1148  04E0  2CE2               	goto	u2241
  1149  04E1  2CE3               	goto	u2240
  1150  04E2                     u2241:
  1151  04E2  2D24               	goto	l2447
  1152  04E3                     u2240:
  1153  04E3                     l2435:
  1154                           
  1155                           ;Q4.c: 536:                 wait(10);
  1156  04E3  300A               	movlw	10
  1157  04E4  00F6               	movwf	wait@wt
  1158  04E5  3000               	movlw	0
  1159  04E6  00F7               	movwf	wait@wt+1
  1160  04E7  3180  20B3  3184   	fcall	_wait
  1161  04EA                     l2437:
  1162                           
  1163                           ;Q4.c: 537:                 motor(360,(0x01|0x08|0x10|0x20|0x40),(0x01|0x08|0x10|0x20|0x
      +                          40),1,1);
  1164  04EA  3068               	movlw	104
  1165  04EB  0020               	movlb	0	; select bank0
  1166  04EC  00A8               	movwf	motor@kakudo
  1167  04ED  3001               	movlw	1
  1168  04EE  00A9               	movwf	motor@kakudo+1
  1169  04EF  3079               	movlw	121
  1170  04F0  00AA               	movwf	motor@dig1data
  1171  04F1  3000               	movlw	0
  1172  04F2  00AB               	movwf	motor@dig1data+1
  1173  04F3  3079               	movlw	121
  1174  04F4  00AC               	movwf	motor@dig2data
  1175  04F5  3000               	movlw	0
  1176  04F6  00AD               	movwf	motor@dig2data+1
  1177  04F7  3001               	movlw	1
  1178  04F8  00AE               	movwf	motor@smdata
  1179  04F9  3000               	movlw	0
  1180  04FA  00AF               	movwf	motor@smdata+1
  1181  04FB  3001               	movlw	1
  1182  04FC  00B0               	movwf	motor@tr
  1183  04FD  3000               	movlw	0
  1184  04FE  00B1               	movwf	motor@tr+1
  1185  04FF  3182  2235  3184   	fcall	_motor
  1186  0502                     l2439:
  1187                           
  1188                           ;Q4.c: 538:                 wait(10);
  1189  0502  300A               	movlw	10
  1190  0503  00F6               	movwf	wait@wt
  1191  0504  3000               	movlw	0
  1192  0505  00F7               	movwf	wait@wt+1
  1193  0506  3180  20B3  3184   	fcall	_wait
  1194  0509                     l285:	
  1195                           ;Q4.c: 539:                 while(1){
  1196                           
  1197                           
  1198                           ;Q4.c: 540:                     dynam((0x01|0x10|0x20|0x40),(0x01|0x10|0x20|0x40),0,0);
  1199  0509  3071               	movlw	113
  1200  050A  00F0               	movwf	dynam@dig1data
  1201  050B  3000               	movlw	0
  1202  050C  00F1               	movwf	dynam@dig1data+1
  1203  050D  3071               	movlw	113
  1204  050E  00F2               	movwf	dynam@dig2data
  1205  050F  3000               	movlw	0
  1206  0510  00F3               	movwf	dynam@dig2data+1
  1207  0511  3000               	movlw	0
  1208  0512  00F4               	movwf	dynam@smdata
  1209  0513  00F5               	movwf	dynam@smdata+1
  1210  0514  3000               	movlw	0
  1211  0515  00F6               	movwf	dynam@tr
  1212  0516  00F7               	movwf	dynam@tr+1
  1213  0517  3183  232B  3184   	fcall	_dynam
  1214  051A                     l2441:
  1215                           
  1216                           ;Q4.c: 541:                     if(RA0 == 1 && RA1 == 1){
  1217  051A  0020               	movlb	0	; select bank0
  1218  051B  1C0C               	btfss	12,0	;volatile
  1219  051C  2D1E               	goto	u2251
  1220  051D  2D1F               	goto	u2250
  1221  051E                     u2251:
  1222  051E  2D09               	goto	l285
  1223  051F                     u2250:
  1224  051F                     l2443:
  1225  051F  1C8C               	btfss	12,1	;volatile
  1226  0520  2D22               	goto	u2261
  1227  0521  2D23               	goto	u2260
  1228  0522                     u2261:
  1229  0522  2D09               	goto	l285
  1230  0523                     u2260:
  1231  0523  2CC6               	goto	l2429
  1232  0524                     l2447:
  1233                           
  1234                           ;Q4.c: 546:             zyoutai = motor(90,(0x01|0x02|0x04|0x08|0x10|0x20),(0x20|0x08|0x
      +                          40|0x01|0x02|0x04),1,5);
  1235  0524  305A               	movlw	90
  1236  0525  00A8               	movwf	motor@kakudo
  1237  0526  3000               	movlw	0
  1238  0527  00A9               	movwf	motor@kakudo+1
  1239  0528  303F               	movlw	63
  1240  0529  00AA               	movwf	motor@dig1data
  1241  052A  3000               	movlw	0
  1242  052B  00AB               	movwf	motor@dig1data+1
  1243  052C  306F               	movlw	111
  1244  052D  00AC               	movwf	motor@dig2data
  1245  052E  3000               	movlw	0
  1246  052F  00AD               	movwf	motor@dig2data+1
  1247  0530  3001               	movlw	1
  1248  0531  00AE               	movwf	motor@smdata
  1249  0532  3000               	movlw	0
  1250  0533  00AF               	movwf	motor@smdata+1
  1251  0534  3005               	movlw	5
  1252  0535  00B0               	movwf	motor@tr
  1253  0536  3000               	movlw	0
  1254  0537  00B1               	movwf	motor@tr+1
  1255  0538  3182  2235  3184   	fcall	_motor
  1256  053B  0020               	movlb	0	; select bank0
  1257  053C  0829               	movf	?_motor+1,w
  1258  053D  00C1               	movwf	main@zyoutai+1
  1259  053E  0828               	movf	?_motor,w
  1260  053F  00C0               	movwf	main@zyoutai
  1261                           
  1262                           ;Q4.c: 548:             zyoutai = waitSEG((0x02|0x04|0x10|0x20|0x40),0,2000);
  1263  0540  3076               	movlw	118
  1264  0541  00A8               	movwf	waitSEG@seg1
  1265  0542  3000               	movlw	0
  1266  0543  00A9               	movwf	waitSEG@seg1+1
  1267  0544  3000               	movlw	0
  1268  0545  00AA               	movwf	waitSEG@seg2
  1269  0546  00AB               	movwf	waitSEG@seg2+1
  1270  0547  30D0               	movlw	208
  1271  0548  00AC               	movwf	waitSEG@wt
  1272  0549  3007               	movlw	7
  1273  054A  00AD               	movwf	waitSEG@wt+1
  1274  054B  3182  22A8  3184   	fcall	_waitSEG
  1275  054E  0020               	movlb	0	; select bank0
  1276  054F  0829               	movf	?_waitSEG+1,w
  1277  0550  00C1               	movwf	main@zyoutai+1
  1278  0551  0828               	movf	?_waitSEG,w
  1279  0552  00C0               	movwf	main@zyoutai
  1280  0553                     l2449:
  1281                           
  1282                           ;Q4.c: 549:             if(zyoutai == 1){
  1283  0553  0340               	decf	main@zyoutai,w
  1284  0554  0441               	iorwf	main@zyoutai+1,w
  1285  0555  1D03               	btfss	3,2
  1286  0556  2D58               	goto	u2271
  1287  0557  2D59               	goto	u2270
  1288  0558                     u2271:
  1289  0558  2D9A               	goto	l2463
  1290  0559                     u2270:
  1291  0559                     l2451:
  1292                           
  1293                           ;Q4.c: 550:                 wait(10);
  1294  0559  300A               	movlw	10
  1295  055A  00F6               	movwf	wait@wt
  1296  055B  3000               	movlw	0
  1297  055C  00F7               	movwf	wait@wt+1
  1298  055D  3180  20B3  3184   	fcall	_wait
  1299  0560                     l2453:
  1300                           
  1301                           ;Q4.c: 551:                 motor(270,(0x01|0x08|0x10|0x20|0x40),(0x01|0x08|0x10|0x20|0x
      +                          40),1,1);
  1302  0560  300E               	movlw	14
  1303  0561  0020               	movlb	0	; select bank0
  1304  0562  00A8               	movwf	motor@kakudo
  1305  0563  3001               	movlw	1
  1306  0564  00A9               	movwf	motor@kakudo+1
  1307  0565  3079               	movlw	121
  1308  0566  00AA               	movwf	motor@dig1data
  1309  0567  3000               	movlw	0
  1310  0568  00AB               	movwf	motor@dig1data+1
  1311  0569  3079               	movlw	121
  1312  056A  00AC               	movwf	motor@dig2data
  1313  056B  3000               	movlw	0
  1314  056C  00AD               	movwf	motor@dig2data+1
  1315  056D  3001               	movlw	1
  1316  056E  00AE               	movwf	motor@smdata
  1317  056F  3000               	movlw	0
  1318  0570  00AF               	movwf	motor@smdata+1
  1319  0571  3001               	movlw	1
  1320  0572  00B0               	movwf	motor@tr
  1321  0573  3000               	movlw	0
  1322  0574  00B1               	movwf	motor@tr+1
  1323  0575  3182  2235  3184   	fcall	_motor
  1324  0578                     l2455:
  1325                           
  1326                           ;Q4.c: 552:                 wait(10);
  1327  0578  300A               	movlw	10
  1328  0579  00F6               	movwf	wait@wt
  1329  057A  3000               	movlw	0
  1330  057B  00F7               	movwf	wait@wt+1
  1331  057C  3180  20B3  3184   	fcall	_wait
  1332  057F                     l290:	
  1333                           ;Q4.c: 553:                 while(1){
  1334                           
  1335                           
  1336                           ;Q4.c: 554:                     dynam((0x01|0x10|0x20|0x40),(0x01|0x10|0x20|0x40),0,0);
  1337  057F  3071               	movlw	113
  1338  0580  00F0               	movwf	dynam@dig1data
  1339  0581  3000               	movlw	0
  1340  0582  00F1               	movwf	dynam@dig1data+1
  1341  0583  3071               	movlw	113
  1342  0584  00F2               	movwf	dynam@dig2data
  1343  0585  3000               	movlw	0
  1344  0586  00F3               	movwf	dynam@dig2data+1
  1345  0587  3000               	movlw	0
  1346  0588  00F4               	movwf	dynam@smdata
  1347  0589  00F5               	movwf	dynam@smdata+1
  1348  058A  3000               	movlw	0
  1349  058B  00F6               	movwf	dynam@tr
  1350  058C  00F7               	movwf	dynam@tr+1
  1351  058D  3183  232B  3184   	fcall	_dynam
  1352  0590                     l2457:
  1353                           
  1354                           ;Q4.c: 555:                     if(RA0 == 1 && RA1 == 1){
  1355  0590  0020               	movlb	0	; select bank0
  1356  0591  1C0C               	btfss	12,0	;volatile
  1357  0592  2D94               	goto	u2281
  1358  0593  2D95               	goto	u2280
  1359  0594                     u2281:
  1360  0594  2D7F               	goto	l290
  1361  0595                     u2280:
  1362  0595                     l2459:
  1363  0595  1C8C               	btfss	12,1	;volatile
  1364  0596  2D98               	goto	u2291
  1365  0597  2D99               	goto	u2290
  1366  0598                     u2291:
  1367  0598  2D7F               	goto	l290
  1368  0599                     u2290:
  1369  0599  2CC6               	goto	l2429
  1370  059A                     l2463:
  1371                           
  1372                           ;Q4.c: 560:             zyoutai = motor(90,(0x02|0x04),(0x01|0x02|0x04|0x08|0x10|0x20|0x
      +                          40),1,1);
  1373  059A  305A               	movlw	90
  1374  059B  00A8               	movwf	motor@kakudo
  1375  059C  3000               	movlw	0
  1376  059D  00A9               	movwf	motor@kakudo+1
  1377  059E  3006               	movlw	6
  1378  059F  00AA               	movwf	motor@dig1data
  1379  05A0  3000               	movlw	0
  1380  05A1  00AB               	movwf	motor@dig1data+1
  1381  05A2  307F               	movlw	127
  1382  05A3  00AC               	movwf	motor@dig2data
  1383  05A4  3000               	movlw	0
  1384  05A5  00AD               	movwf	motor@dig2data+1
  1385  05A6  3001               	movlw	1
  1386  05A7  00AE               	movwf	motor@smdata
  1387  05A8  3000               	movlw	0
  1388  05A9  00AF               	movwf	motor@smdata+1
  1389  05AA  3001               	movlw	1
  1390  05AB  00B0               	movwf	motor@tr
  1391  05AC  3000               	movlw	0
  1392  05AD  00B1               	movwf	motor@tr+1
  1393  05AE  3182  2235  3184   	fcall	_motor
  1394  05B1  0020               	movlb	0	; select bank0
  1395  05B2  0829               	movf	?_motor+1,w
  1396  05B3  00C1               	movwf	main@zyoutai+1
  1397  05B4  0828               	movf	?_motor,w
  1398  05B5  00C0               	movwf	main@zyoutai
  1399                           
  1400                           ;Q4.c: 562:             zyoutai = waitSEG(0,(0x08|0x10|0x20),2000);
  1401  05B6  3000               	movlw	0
  1402  05B7  00A8               	movwf	waitSEG@seg1
  1403  05B8  00A9               	movwf	waitSEG@seg1+1
  1404  05B9  3038               	movlw	56
  1405  05BA  00AA               	movwf	waitSEG@seg2
  1406  05BB  3000               	movlw	0
  1407  05BC  00AB               	movwf	waitSEG@seg2+1
  1408  05BD  30D0               	movlw	208
  1409  05BE  00AC               	movwf	waitSEG@wt
  1410  05BF  3007               	movlw	7
  1411  05C0  00AD               	movwf	waitSEG@wt+1
  1412  05C1  3182  22A8  3184   	fcall	_waitSEG
  1413  05C4  0020               	movlb	0	; select bank0
  1414  05C5  0829               	movf	?_waitSEG+1,w
  1415  05C6  00C1               	movwf	main@zyoutai+1
  1416  05C7  0828               	movf	?_waitSEG,w
  1417  05C8  00C0               	movwf	main@zyoutai
  1418  05C9                     l2465:
  1419                           
  1420                           ;Q4.c: 563:             if(zyoutai == 1){
  1421  05C9  0340               	decf	main@zyoutai,w
  1422  05CA  0441               	iorwf	main@zyoutai+1,w
  1423  05CB  1D03               	btfss	3,2
  1424  05CC  2DCE               	goto	u2301
  1425  05CD  2DCF               	goto	u2300
  1426  05CE                     u2301:
  1427  05CE  2E10               	goto	l2479
  1428  05CF                     u2300:
  1429  05CF                     l2467:
  1430                           
  1431                           ;Q4.c: 564:                 wait(10);
  1432  05CF  300A               	movlw	10
  1433  05D0  00F6               	movwf	wait@wt
  1434  05D1  3000               	movlw	0
  1435  05D2  00F7               	movwf	wait@wt+1
  1436  05D3  3180  20B3  3184   	fcall	_wait
  1437  05D6                     l2469:
  1438                           
  1439                           ;Q4.c: 565:                 motor(180,(0x01|0x08|0x10|0x20|0x40),(0x01|0x08|0x10|0x20|0x
      +                          40),1,1);
  1440  05D6  30B4               	movlw	180
  1441  05D7  0020               	movlb	0	; select bank0
  1442  05D8  00A8               	movwf	motor@kakudo
  1443  05D9  3000               	movlw	0
  1444  05DA  00A9               	movwf	motor@kakudo+1
  1445  05DB  3079               	movlw	121
  1446  05DC  00AA               	movwf	motor@dig1data
  1447  05DD  3000               	movlw	0
  1448  05DE  00AB               	movwf	motor@dig1data+1
  1449  05DF  3079               	movlw	121
  1450  05E0  00AC               	movwf	motor@dig2data
  1451  05E1  3000               	movlw	0
  1452  05E2  00AD               	movwf	motor@dig2data+1
  1453  05E3  3001               	movlw	1
  1454  05E4  00AE               	movwf	motor@smdata
  1455  05E5  3000               	movlw	0
  1456  05E6  00AF               	movwf	motor@smdata+1
  1457  05E7  3001               	movlw	1
  1458  05E8  00B0               	movwf	motor@tr
  1459  05E9  3000               	movlw	0
  1460  05EA  00B1               	movwf	motor@tr+1
  1461  05EB  3182  2235  3184   	fcall	_motor
  1462  05EE                     l2471:
  1463                           
  1464                           ;Q4.c: 566:                 wait(10);
  1465  05EE  300A               	movlw	10
  1466  05EF  00F6               	movwf	wait@wt
  1467  05F0  3000               	movlw	0
  1468  05F1  00F7               	movwf	wait@wt+1
  1469  05F2  3180  20B3  3184   	fcall	_wait
  1470  05F5                     l295:	
  1471                           ;Q4.c: 567:                 while(1){
  1472                           
  1473                           
  1474                           ;Q4.c: 568:                     dynam((0x01|0x10|0x20|0x40),(0x01|0x10|0x20|0x40),0,0);
  1475  05F5  3071               	movlw	113
  1476  05F6  00F0               	movwf	dynam@dig1data
  1477  05F7  3000               	movlw	0
  1478  05F8  00F1               	movwf	dynam@dig1data+1
  1479  05F9  3071               	movlw	113
  1480  05FA  00F2               	movwf	dynam@dig2data
  1481  05FB  3000               	movlw	0
  1482  05FC  00F3               	movwf	dynam@dig2data+1
  1483  05FD  3000               	movlw	0
  1484  05FE  00F4               	movwf	dynam@smdata
  1485  05FF  00F5               	movwf	dynam@smdata+1
  1486  0600  3000               	movlw	0
  1487  0601  00F6               	movwf	dynam@tr
  1488  0602  00F7               	movwf	dynam@tr+1
  1489  0603  3183  232B  3184   	fcall	_dynam
  1490  0606                     l2473:
  1491                           
  1492                           ;Q4.c: 569:                     if(RA0 == 1 && RA1 == 1){
  1493  0606  0020               	movlb	0	; select bank0
  1494  0607  1C0C               	btfss	12,0	;volatile
  1495  0608  2E0A               	goto	u2311
  1496  0609  2E0B               	goto	u2310
  1497  060A                     u2311:
  1498  060A  2DF5               	goto	l295
  1499  060B                     u2310:
  1500  060B                     l2475:
  1501  060B  1C8C               	btfss	12,1	;volatile
  1502  060C  2E0E               	goto	u2321
  1503  060D  2E0F               	goto	u2320
  1504  060E                     u2321:
  1505  060E  2DF5               	goto	l295
  1506  060F                     u2320:
  1507  060F  2CC6               	goto	l2429
  1508  0610                     l2479:
  1509                           
  1510                           ;Q4.c: 574:             zyoutai = motor(90,(0x01|0x02|0x08|0x40|0x10),(0x01|0x02|0x04|0x
      +                          20),1,5);
  1511  0610  305A               	movlw	90
  1512  0611  00A8               	movwf	motor@kakudo
  1513  0612  3000               	movlw	0
  1514  0613  00A9               	movwf	motor@kakudo+1
  1515  0614  305B               	movlw	91
  1516  0615  00AA               	movwf	motor@dig1data
  1517  0616  3000               	movlw	0
  1518  0617  00AB               	movwf	motor@dig1data+1
  1519  0618  3027               	movlw	39
  1520  0619  00AC               	movwf	motor@dig2data
  1521  061A  3000               	movlw	0
  1522  061B  00AD               	movwf	motor@dig2data+1
  1523  061C  3001               	movlw	1
  1524  061D  00AE               	movwf	motor@smdata
  1525  061E  3000               	movlw	0
  1526  061F  00AF               	movwf	motor@smdata+1
  1527  0620  3005               	movlw	5
  1528  0621  00B0               	movwf	motor@tr
  1529  0622  3000               	movlw	0
  1530  0623  00B1               	movwf	motor@tr+1
  1531  0624  3182  2235  3184   	fcall	_motor
  1532  0627  0020               	movlb	0	; select bank0
  1533  0628  0829               	movf	?_motor+1,w
  1534  0629  00C1               	movwf	main@zyoutai+1
  1535  062A  0828               	movf	?_motor,w
  1536  062B  00C0               	movwf	main@zyoutai
  1537                           
  1538                           ;Q4.c: 576:             zyoutai = waitSEG((0x02|0x04|0x10|0x20|0x40),0,2000);
  1539  062C  3076               	movlw	118
  1540  062D  00A8               	movwf	waitSEG@seg1
  1541  062E  3000               	movlw	0
  1542  062F  00A9               	movwf	waitSEG@seg1+1
  1543  0630  3000               	movlw	0
  1544  0631  00AA               	movwf	waitSEG@seg2
  1545  0632  00AB               	movwf	waitSEG@seg2+1
  1546  0633  30D0               	movlw	208
  1547  0634  00AC               	movwf	waitSEG@wt
  1548  0635  3007               	movlw	7
  1549  0636  00AD               	movwf	waitSEG@wt+1
  1550  0637  3182  22A8  3184   	fcall	_waitSEG
  1551  063A  0020               	movlb	0	; select bank0
  1552  063B  0829               	movf	?_waitSEG+1,w
  1553  063C  00C1               	movwf	main@zyoutai+1
  1554  063D  0828               	movf	?_waitSEG,w
  1555  063E  00C0               	movwf	main@zyoutai
  1556  063F                     l2481:
  1557                           
  1558                           ;Q4.c: 577:             if(zyoutai == 1){
  1559  063F  0340               	decf	main@zyoutai,w
  1560  0640  0441               	iorwf	main@zyoutai+1,w
  1561  0641  1D03               	btfss	3,2
  1562  0642  2E44               	goto	u2331
  1563  0643  2E45               	goto	u2330
  1564  0644                     u2331:
  1565  0644  2E86               	goto	l2495
  1566  0645                     u2330:
  1567  0645                     l2483:
  1568                           
  1569                           ;Q4.c: 578:                 wait(10);
  1570  0645  300A               	movlw	10
  1571  0646  00F6               	movwf	wait@wt
  1572  0647  3000               	movlw	0
  1573  0648  00F7               	movwf	wait@wt+1
  1574  0649  3180  20B3  3184   	fcall	_wait
  1575  064C                     l2485:
  1576                           
  1577                           ;Q4.c: 579:                 motor(90,(0x01|0x08|0x10|0x20|0x40),(0x01|0x08|0x10|0x20|0x4
      +                          0),1,1);
  1578  064C  305A               	movlw	90
  1579  064D  0020               	movlb	0	; select bank0
  1580  064E  00A8               	movwf	motor@kakudo
  1581  064F  3000               	movlw	0
  1582  0650  00A9               	movwf	motor@kakudo+1
  1583  0651  3079               	movlw	121
  1584  0652  00AA               	movwf	motor@dig1data
  1585  0653  3000               	movlw	0
  1586  0654  00AB               	movwf	motor@dig1data+1
  1587  0655  3079               	movlw	121
  1588  0656  00AC               	movwf	motor@dig2data
  1589  0657  3000               	movlw	0
  1590  0658  00AD               	movwf	motor@dig2data+1
  1591  0659  3001               	movlw	1
  1592  065A  00AE               	movwf	motor@smdata
  1593  065B  3000               	movlw	0
  1594  065C  00AF               	movwf	motor@smdata+1
  1595  065D  3001               	movlw	1
  1596  065E  00B0               	movwf	motor@tr
  1597  065F  3000               	movlw	0
  1598  0660  00B1               	movwf	motor@tr+1
  1599  0661  3182  2235  3184   	fcall	_motor
  1600  0664                     l2487:
  1601                           
  1602                           ;Q4.c: 580:                 wait(10);
  1603  0664  300A               	movlw	10
  1604  0665  00F6               	movwf	wait@wt
  1605  0666  3000               	movlw	0
  1606  0667  00F7               	movwf	wait@wt+1
  1607  0668  3180  20B3  3184   	fcall	_wait
  1608  066B                     l300:	
  1609                           ;Q4.c: 581:                 while(1){
  1610                           
  1611                           
  1612                           ;Q4.c: 582:                     dynam((0x01|0x10|0x20|0x40),(0x01|0x10|0x20|0x40),0,0);
  1613  066B  3071               	movlw	113
  1614  066C  00F0               	movwf	dynam@dig1data
  1615  066D  3000               	movlw	0
  1616  066E  00F1               	movwf	dynam@dig1data+1
  1617  066F  3071               	movlw	113
  1618  0670  00F2               	movwf	dynam@dig2data
  1619  0671  3000               	movlw	0
  1620  0672  00F3               	movwf	dynam@dig2data+1
  1621  0673  3000               	movlw	0
  1622  0674  00F4               	movwf	dynam@smdata
  1623  0675  00F5               	movwf	dynam@smdata+1
  1624  0676  3000               	movlw	0
  1625  0677  00F6               	movwf	dynam@tr
  1626  0678  00F7               	movwf	dynam@tr+1
  1627  0679  3183  232B  3184   	fcall	_dynam
  1628  067C                     l2489:
  1629                           
  1630                           ;Q4.c: 583:                     if(RA0 == 1 && RA1 == 1){
  1631  067C  0020               	movlb	0	; select bank0
  1632  067D  1C0C               	btfss	12,0	;volatile
  1633  067E  2E80               	goto	u2341
  1634  067F  2E81               	goto	u2340
  1635  0680                     u2341:
  1636  0680  2E6B               	goto	l300
  1637  0681                     u2340:
  1638  0681                     l2491:
  1639  0681  1C8C               	btfss	12,1	;volatile
  1640  0682  2E84               	goto	u2351
  1641  0683  2E85               	goto	u2350
  1642  0684                     u2351:
  1643  0684  2E6B               	goto	l300
  1644  0685                     u2350:
  1645  0685  2CC6               	goto	l2429
  1646  0686                     l2495:
  1647  0686  305A               	movlw	90
  1648  0687  00A8               	movwf	motor@kakudo
  1649  0688  3000               	movlw	0
  1650  0689  00A9               	movwf	motor@kakudo+1
  1651  068A  304F               	movlw	79
  1652  068B  00AA               	movwf	motor@dig1data
  1653  068C  3000               	movlw	0
  1654  068D  00AB               	movwf	motor@dig1data+1
  1655  068E  307D               	movlw	125
  1656  068F  00AC               	movwf	motor@dig2data
  1657  0690  3000               	movlw	0
  1658  0691  00AD               	movwf	motor@dig2data+1
  1659  0692  3001               	movlw	1
  1660  0693  00AE               	movwf	motor@smdata
  1661  0694  3000               	movlw	0
  1662  0695  00AF               	movwf	motor@smdata+1
  1663  0696  3001               	movlw	1
  1664  0697  00B0               	movwf	motor@tr
  1665  0698  3000               	movlw	0
  1666  0699  00B1               	movwf	motor@tr+1
  1667  069A  3182  2235  3184   	fcall	_motor
  1668  069D                     l2497:
  1669                           
  1670                           ;Q4.c: 594:        if(RA0 == 0 && RA1 == 1){
  1671  069D  0020               	movlb	0	; select bank0
  1672  069E  180C               	btfsc	12,0	;volatile
  1673  069F  2EA1               	goto	u2361
  1674  06A0  2EA2               	goto	u2360
  1675  06A1                     u2361:
  1676  06A1  2CC6               	goto	l2429
  1677  06A2                     u2360:
  1678  06A2                     l2499:
  1679  06A2  1C8C               	btfss	12,1	;volatile
  1680  06A3  2EA5               	goto	u2371
  1681  06A4  2EA6               	goto	u2370
  1682  06A5                     u2371:
  1683  06A5  2CC6               	goto	l2429
  1684  06A6                     u2370:
  1685  06A6                     l2501:
  1686                           
  1687                           ;Q4.c: 595:            for(i = 9; i>=0 ; i--){
  1688  06A6  3009               	movlw	9
  1689  06A7  00C4               	movwf	main@i
  1690  06A8  3000               	movlw	0
  1691  06A9  00C5               	movwf	main@i+1
  1692  06AA                     l2507:
  1693                           
  1694                           ;Q4.c: 596:                waitSEG(num0[i],0,500);
  1695  06AA  3544               	lslf	main@i,w
  1696  06AB  3EC0               	addlw	(low (_num0| 0))& (0+255)
  1697  06AC  0086               	movwf	6
  1698  06AD  0187               	clrf	7
  1699  06AE  3F40               	moviw [0]fsr1
  1700  06AF  00A8               	movwf	waitSEG@seg1
  1701  06B0  3F41               	moviw [1]fsr1
  1702  06B1  00A9               	movwf	waitSEG@seg1+1
  1703  06B2  3000               	movlw	0
  1704  06B3  00AA               	movwf	waitSEG@seg2
  1705  06B4  00AB               	movwf	waitSEG@seg2+1
  1706  06B5  30F4               	movlw	244
  1707  06B6  00AC               	movwf	waitSEG@wt
  1708  06B7  3001               	movlw	1
  1709  06B8  00AD               	movwf	waitSEG@wt+1
  1710  06B9  3182  22A8  3184   	fcall	_waitSEG
  1711                           
  1712                           ;Q4.c: 598:                 while(RA1 == 0 ){
  1713  06BC  2FC1               	goto	l2561
  1714  06BD                     l2509:
  1715                           
  1716                           ;Q4.c: 599:                     dynam(num0[i],(0x01|0x02|0x04|0x08|0x10|0x20),0,0);
  1717  06BD  3544               	lslf	main@i,w
  1718  06BE  3EC0               	addlw	(low (_num0| 0))& (0+255)
  1719  06BF  0086               	movwf	6
  1720  06C0  0187               	clrf	7
  1721  06C1  3F40               	moviw [0]fsr1
  1722  06C2  00F0               	movwf	dynam@dig1data
  1723  06C3  3F41               	moviw [1]fsr1
  1724  06C4  00F1               	movwf	dynam@dig1data+1
  1725  06C5  303F               	movlw	63
  1726  06C6  00F2               	movwf	dynam@dig2data
  1727  06C7  3000               	movlw	0
  1728  06C8  00F3               	movwf	dynam@dig2data+1
  1729  06C9  3000               	movlw	0
  1730  06CA  00F4               	movwf	dynam@smdata
  1731  06CB  00F5               	movwf	dynam@smdata+1
  1732  06CC  3000               	movlw	0
  1733  06CD  00F6               	movwf	dynam@tr
  1734  06CE  00F7               	movwf	dynam@tr+1
  1735  06CF  3183  232B  3184   	fcall	_dynam
  1736  06D2                     l2511:
  1737                           
  1738                           ;Q4.c: 601:                     jikan();
  1739  06D2  3180  2054  3184   	fcall	_jikan
  1740  06D5                     l2513:
  1741                           
  1742                           ;Q4.c: 603:                     if(time != 0 && time < 100 && count == 0){
  1743  06D5  0020               	movlb	0	; select bank0
  1744  06D6  083E               	movf	main@time,w
  1745  06D7  043F               	iorwf	main@time+1,w
  1746  06D8  1903               	btfsc	3,2
  1747  06D9  2EDB               	goto	u2381
  1748  06DA  2EDC               	goto	u2380
  1749  06DB                     u2381:
  1750  06DB  2F51               	goto	l2537
  1751  06DC                     u2380:
  1752  06DC                     l2515:
  1753  06DC  083F               	movf	main@time+1,w
  1754  06DD  3A80               	xorlw	128
  1755  06DE  00FC               	movwf	??_main
  1756  06DF  3080               	movlw	128
  1757  06E0  027C               	subwf	??_main,w
  1758  06E1  1D03               	skipz
  1759  06E2  2EE5               	goto	u2395
  1760  06E3  3064               	movlw	100
  1761  06E4  023E               	subwf	main@time,w
  1762  06E5                     u2395:
  1763  06E5  1803               	skipnc
  1764  06E6  2EE8               	goto	u2391
  1765  06E7  2EE9               	goto	u2390
  1766  06E8                     u2391:
  1767  06E8  2F51               	goto	l2537
  1768  06E9                     u2390:
  1769  06E9                     l2517:
  1770  06E9  0020               	movlb	0	; select bank0
  1771  06EA  0850               	movf	_count,w
  1772  06EB  0451               	iorwf	_count+1,w
  1773  06EC  1D03               	btfss	3,2
  1774  06ED  2EEF               	goto	u2401
  1775  06EE  2EF0               	goto	u2400
  1776  06EF                     u2401:
  1777  06EF  2F51               	goto	l2537
  1778  06F0                     u2400:
  1779  06F0                     l2519:
  1780                           
  1781                           ;Q4.c: 605:                         for(j=0; j<i ; j++ ){
  1782  06F0  01C2               	clrf	main@j
  1783  06F1  01C3               	clrf	main@j+1
  1784  06F2  2F18               	goto	l2525
  1785  06F3                     l2521:
  1786                           
  1787                           ;Q4.c: 606:                             motor(360,num0[i],num0[j],1,1);
  1788  06F3  3068               	movlw	104
  1789  06F4  0020               	movlb	0	; select bank0
  1790  06F5  00A8               	movwf	motor@kakudo
  1791  06F6  3001               	movlw	1
  1792  06F7  00A9               	movwf	motor@kakudo+1
  1793  06F8  3544               	lslf	main@i,w
  1794  06F9  3EC0               	addlw	(low (_num0| 0))& (0+255)
  1795  06FA  0086               	movwf	6
  1796  06FB  0187               	clrf	7
  1797  06FC  3F40               	moviw [0]fsr1
  1798  06FD  00AA               	movwf	motor@dig1data
  1799  06FE  3F41               	moviw [1]fsr1
  1800  06FF  00AB               	movwf	motor@dig1data+1
  1801  0700  3542               	lslf	main@j,w
  1802  0701  3EC0               	addlw	(low (_num0| 0))& (0+255)
  1803  0702  0086               	movwf	6
  1804  0703  0187               	clrf	7
  1805  0704  3F40               	moviw [0]fsr1
  1806  0705  00AC               	movwf	motor@dig2data
  1807  0706  3F41               	moviw [1]fsr1
  1808  0707  00AD               	movwf	motor@dig2data+1
  1809  0708  3001               	movlw	1
  1810  0709  00AE               	movwf	motor@smdata
  1811  070A  3000               	movlw	0
  1812  070B  00AF               	movwf	motor@smdata+1
  1813  070C  3001               	movlw	1
  1814  070D  00B0               	movwf	motor@tr
  1815  070E  3000               	movlw	0
  1816  070F  00B1               	movwf	motor@tr+1
  1817  0710  3182  2235  3184   	fcall	_motor
  1818  0713                     l2523:
  1819                           
  1820                           ;Q4.c: 607:                         }
  1821  0713  3001               	movlw	1
  1822  0714  0020               	movlb	0	; select bank0
  1823  0715  07C2               	addwf	main@j,f
  1824  0716  3000               	movlw	0
  1825  0717  3DC3               	addwfc	main@j+1,f
  1826  0718                     l2525:
  1827  0718  0843               	movf	main@j+1,w
  1828  0719  3A80               	xorlw	128
  1829  071A  00FC               	movwf	??_main
  1830  071B  0845               	movf	main@i+1,w
  1831  071C  3A80               	xorlw	128
  1832  071D  027C               	subwf	??_main,w
  1833  071E  1D03               	skipz
  1834  071F  2F22               	goto	u2415
  1835  0720  0844               	movf	main@i,w
  1836  0721  0242               	subwf	main@j,w
  1837  0722                     u2415:
  1838  0722  1C03               	skipc
  1839  0723  2F25               	goto	u2411
  1840  0724  2F26               	goto	u2410
  1841  0725                     u2411:
  1842  0725  2EF3               	goto	l2521
  1843  0726                     u2410:
  1844  0726                     l2527:
  1845                           
  1846                           ;Q4.c: 609:                             waitSEG(num0[i],num0[j],500);
  1847  0726  0020               	movlb	0	; select bank0
  1848  0727  3544               	lslf	main@i,w
  1849  0728  3EC0               	addlw	(low (_num0| 0))& (0+255)
  1850  0729  0086               	movwf	6
  1851  072A  0187               	clrf	7
  1852  072B  3F40               	moviw [0]fsr1
  1853  072C  00A8               	movwf	waitSEG@seg1
  1854  072D  3F41               	moviw [1]fsr1
  1855  072E  00A9               	movwf	waitSEG@seg1+1
  1856  072F  3542               	lslf	main@j,w
  1857  0730  3EC0               	addlw	(low (_num0| 0))& (0+255)
  1858  0731  0086               	movwf	6
  1859  0732  0187               	clrf	7
  1860  0733  3F40               	moviw [0]fsr1
  1861  0734  00AA               	movwf	waitSEG@seg2
  1862  0735  3F41               	moviw [1]fsr1
  1863  0736  00AB               	movwf	waitSEG@seg2+1
  1864  0737  30F4               	movlw	244
  1865  0738  00AC               	movwf	waitSEG@wt
  1866  0739  3001               	movlw	1
  1867  073A  00AD               	movwf	waitSEG@wt+1
  1868  073B  3182  22A8  3184   	fcall	_waitSEG
  1869  073E                     l2529:
  1870                           
  1871                           ;Q4.c: 610:                             wait(500);
  1872  073E  30F4               	movlw	244
  1873  073F  00F6               	movwf	wait@wt
  1874  0740  3001               	movlw	1
  1875  0741  00F7               	movwf	wait@wt+1
  1876  0742  3180  20B3  3184   	fcall	_wait
  1877  0745                     l2531:
  1878                           
  1879                           ;Q4.c: 611:                             if(RA0 == 1 && RA1 == 1){
  1880  0745  0020               	movlb	0	; select bank0
  1881  0746  1C0C               	btfss	12,0	;volatile
  1882  0747  2F49               	goto	u2421
  1883  0748  2F4A               	goto	u2420
  1884  0749                     u2421:
  1885  0749  2F26               	goto	l2527
  1886  074A                     u2420:
  1887  074A                     l2533:
  1888  074A  1C8C               	btfss	12,1	;volatile
  1889  074B  2F4D               	goto	u2431
  1890  074C  2F4E               	goto	u2430
  1891  074D                     u2431:
  1892  074D  2F26               	goto	l2527
  1893  074E                     u2430:
  1894  074E                     l2535:
  1895                           
  1896                           ;Q4.c: 612:                                 time = 0;
  1897  074E  01BE               	clrf	main@time
  1898  074F  01BF               	clrf	main@time+1
  1899                           
  1900                           ;Q4.c: 613:                                 goto hukki;
  1901  0750  2CC6               	goto	l2429
  1902  0751                     l2537:
  1903  0751  0020               	movlb	0	; select bank0
  1904  0752  083E               	movf	main@time,w
  1905  0753  043F               	iorwf	main@time+1,w
  1906  0754  1903               	btfsc	3,2
  1907  0755  2F57               	goto	u2441
  1908  0756  2F58               	goto	u2440
  1909  0757                     u2441:
  1910  0757  2FBD               	goto	l2559
  1911  0758                     u2440:
  1912  0758                     l2539:
  1913  0758  0850               	movf	_count,w
  1914  0759  0451               	iorwf	_count+1,w
  1915  075A  1D03               	btfss	3,2
  1916  075B  2F5D               	goto	u2451
  1917  075C  2F5E               	goto	u2450
  1918  075D                     u2451:
  1919  075D  2FBD               	goto	l2559
  1920  075E                     u2450:
  1921  075E                     l2541:
  1922                           
  1923                           ;Q4.c: 622:                         for(j=0; j<i ; j++ ){
  1924  075E  01C2               	clrf	main@j
  1925  075F  01C3               	clrf	main@j+1
  1926  0760  2F86               	goto	l2547
  1927  0761                     l2543:
  1928                           
  1929                           ;Q4.c: 623:                             motor(360,num0[i],num0[j],2,5);
  1930  0761  3068               	movlw	104
  1931  0762  0020               	movlb	0	; select bank0
  1932  0763  00A8               	movwf	motor@kakudo
  1933  0764  3001               	movlw	1
  1934  0765  00A9               	movwf	motor@kakudo+1
  1935  0766  3544               	lslf	main@i,w
  1936  0767  3EC0               	addlw	(low (_num0| 0))& (0+255)
  1937  0768  0086               	movwf	6
  1938  0769  0187               	clrf	7
  1939  076A  3F40               	moviw [0]fsr1
  1940  076B  00AA               	movwf	motor@dig1data
  1941  076C  3F41               	moviw [1]fsr1
  1942  076D  00AB               	movwf	motor@dig1data+1
  1943  076E  3542               	lslf	main@j,w
  1944  076F  3EC0               	addlw	(low (_num0| 0))& (0+255)
  1945  0770  0086               	movwf	6
  1946  0771  0187               	clrf	7
  1947  0772  3F40               	moviw [0]fsr1
  1948  0773  00AC               	movwf	motor@dig2data
  1949  0774  3F41               	moviw [1]fsr1
  1950  0775  00AD               	movwf	motor@dig2data+1
  1951  0776  3002               	movlw	2
  1952  0777  00AE               	movwf	motor@smdata
  1953  0778  3000               	movlw	0
  1954  0779  00AF               	movwf	motor@smdata+1
  1955  077A  3005               	movlw	5
  1956  077B  00B0               	movwf	motor@tr
  1957  077C  3000               	movlw	0
  1958  077D  00B1               	movwf	motor@tr+1
  1959  077E  3182  2235  3184   	fcall	_motor
  1960  0781                     l2545:
  1961                           
  1962                           ;Q4.c: 624:                         }
  1963  0781  3001               	movlw	1
  1964  0782  0020               	movlb	0	; select bank0
  1965  0783  07C2               	addwf	main@j,f
  1966  0784  3000               	movlw	0
  1967  0785  3DC3               	addwfc	main@j+1,f
  1968  0786                     l2547:
  1969  0786  0843               	movf	main@j+1,w
  1970  0787  3A80               	xorlw	128
  1971  0788  00FC               	movwf	??_main
  1972  0789  0845               	movf	main@i+1,w
  1973  078A  3A80               	xorlw	128
  1974  078B  027C               	subwf	??_main,w
  1975  078C  1D03               	skipz
  1976  078D  2F90               	goto	u2465
  1977  078E  0844               	movf	main@i,w
  1978  078F  0242               	subwf	main@j,w
  1979  0790                     u2465:
  1980  0790  1C03               	skipc
  1981  0791  2F93               	goto	u2461
  1982  0792  2F94               	goto	u2460
  1983  0793                     u2461:
  1984  0793  2F61               	goto	l2543
  1985  0794                     u2460:
  1986  0794                     l2549:
  1987                           
  1988                           ;Q4.c: 626:                             waitSEG(num0[i],num0[j],1000);
  1989  0794  0020               	movlb	0	; select bank0
  1990  0795  3544               	lslf	main@i,w
  1991  0796  3EC0               	addlw	(low (_num0| 0))& (0+255)
  1992  0797  0086               	movwf	6
  1993  0798  0187               	clrf	7
  1994  0799  3F40               	moviw [0]fsr1
  1995  079A  00A8               	movwf	waitSEG@seg1
  1996  079B  3F41               	moviw [1]fsr1
  1997  079C  00A9               	movwf	waitSEG@seg1+1
  1998  079D  3542               	lslf	main@j,w
  1999  079E  3EC0               	addlw	(low (_num0| 0))& (0+255)
  2000  079F  0086               	movwf	6
  2001  07A0  0187               	clrf	7
  2002  07A1  3F40               	moviw [0]fsr1
  2003  07A2  00AA               	movwf	waitSEG@seg2
  2004  07A3  3F41               	moviw [1]fsr1
  2005  07A4  00AB               	movwf	waitSEG@seg2+1
  2006  07A5  30E8               	movlw	232
  2007  07A6  00AC               	movwf	waitSEG@wt
  2008  07A7  3003               	movlw	3
  2009  07A8  00AD               	movwf	waitSEG@wt+1
  2010  07A9  3182  22A8  3184   	fcall	_waitSEG
  2011  07AC                     l2551:
  2012                           
  2013                           ;Q4.c: 627:                             wait(1000);
  2014  07AC  30E8               	movlw	232
  2015  07AD  00F6               	movwf	wait@wt
  2016  07AE  3003               	movlw	3
  2017  07AF  00F7               	movwf	wait@wt+1
  2018  07B0  3180  20B3  3184   	fcall	_wait
  2019  07B3                     l2553:
  2020                           
  2021                           ;Q4.c: 628:                             if(RA0 == 1 && RA1 == 1){
  2022  07B3  0020               	movlb	0	; select bank0
  2023  07B4  1C0C               	btfss	12,0	;volatile
  2024  07B5  2FB7               	goto	u2471
  2025  07B6  2FB8               	goto	u2470
  2026  07B7                     u2471:
  2027  07B7  2F94               	goto	l2549
  2028  07B8                     u2470:
  2029  07B8                     l2555:
  2030  07B8  1C8C               	btfss	12,1	;volatile
  2031  07B9  2FBB               	goto	u2481
  2032  07BA  2FBC               	goto	u2480
  2033  07BB                     u2481:
  2034  07BB  2F94               	goto	l2549
  2035  07BC                     u2480:
  2036  07BC  2F4E               	goto	l2535
  2037  07BD                     l2559:
  2038                           
  2039                           ;Q4.c: 639:                     time = count;
  2040  07BD  0851               	movf	_count+1,w
  2041  07BE  00BF               	movwf	main@time+1
  2042  07BF  0850               	movf	_count,w
  2043  07C0  00BE               	movwf	main@time
  2044  07C1                     l2561:
  2045                           
  2046                           ;Q4.c: 598:                 while(RA1 == 0 ){
  2047  07C1  0020               	movlb	0	; select bank0
  2048  07C2  1C8C               	btfss	12,1	;volatile
  2049  07C3  2FC5               	goto	u2491
  2050  07C4  2FC6               	goto	u2490
  2051  07C5                     u2491:
  2052  07C5  2EBD               	goto	l2509
  2053  07C6                     u2490:
  2054  07C6                     l2563:
  2055                           
  2056                           ;Q4.c: 644:            }
  2057  07C6  30FF               	movlw	255
  2058  07C7  07C4               	addwf	main@i,f
  2059  07C8  30FF               	movlw	255
  2060  07C9  3DC5               	addwfc	main@i+1,f
  2061  07CA                     l2565:
  2062  07CA  1FC5               	btfss	main@i+1,7
  2063  07CB  2FCD               	goto	u2501
  2064  07CC  2FCE               	goto	u2500
  2065  07CD                     u2501:
  2066  07CD  2EAA               	goto	l2507
  2067  07CE                     u2500:
  2068  07CE  2CC6               	goto	l2429
  2069  07CF  3180  2802         	ljmp	start
  2070  07D1                     __end_of_main:
  2071                           
  2072                           	psect	text1
  2073  004B                     __ptext1:	
  2074 ;; *************** function _zenoff *****************
  2075 ;; Defined at:
  2076 ;;		line 195 in file "Q4.c"
  2077 ;; Parameters:    Size  Location     Type
  2078 ;;		None
  2079 ;; Auto vars:     Size  Location     Type
  2080 ;;		None
  2081 ;; Return value:  Size  Location     Type
  2082 ;;                  1    wreg      void 
  2083 ;; Registers used:
  2084 ;;		status,2
  2085 ;; Tracked objects:
  2086 ;;		On entry : 0/0
  2087 ;;		On exit  : 0/0
  2088 ;;		Unchanged: 0/0
  2089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2093 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2094 ;;Total ram usage:        0 bytes
  2095 ;; Hardware stack levels used:    1
  2096 ;; This function calls:
  2097 ;;		Nothing
  2098 ;; This function is called by:
  2099 ;;		_main
  2100 ;; This function uses a non-reentrant model
  2101 ;;
  2102                           
  2103                           
  2104                           ;psect for function _zenoff
  2105  004B                     _zenoff:
  2106  004B                     l2085:	
  2107                           ;incstack = 0
  2108                           ; Regs used in _zenoff: [status,2]
  2109                           
  2110                           
  2111                           ;Q4.c: 197:     RC0=1;
  2112  004B  0020               	movlb	0	; select bank0
  2113  004C  140E               	bsf	14,0	;volatile
  2114                           
  2115                           ;Q4.c: 198:     RC1=1;
  2116  004D  148E               	bsf	14,1	;volatile
  2117                           
  2118                           ;Q4.c: 199:     RC2=1;
  2119  004E  150E               	bsf	14,2	;volatile
  2120  004F                     l2087:
  2121                           
  2122                           ;Q4.c: 200:     PORTB=0x00;
  2123  004F  018D               	clrf	13	;volatile
  2124  0050                     l2089:
  2125                           
  2126                           ;Q4.c: 201:     RC7=0;RC7=1;RC7=0;
  2127  0050  138E               	bcf	14,7	;volatile
  2128  0051                     l2091:
  2129  0051  178E               	bsf	14,7	;volatile
  2130  0052                     l2093:
  2131  0052  138E               	bcf	14,7	;volatile
  2132  0053                     l108:
  2133  0053  0008               	return
  2134  0054                     __end_of_zenoff:
  2135                           
  2136                           	psect	text2
  2137  02A8                     __ptext2:	
  2138 ;; *************** function _waitSEG *****************
  2139 ;; Defined at:
  2140 ;;		line 451 in file "Q4.c"
  2141 ;; Parameters:    Size  Location     Type
  2142 ;;  seg1            2    8[BANK0 ] unsigned short 
  2143 ;;  seg2            2   10[BANK0 ] unsigned short 
  2144 ;;  wt              2   12[BANK0 ] unsigned short 
  2145 ;; Auto vars:     Size  Location     Type
  2146 ;;  i               2   18[BANK0 ] unsigned int 
  2147 ;;  cpSW2           2   16[BANK0 ] int 
  2148 ;;  cpSW1           2   14[BANK0 ] int 
  2149 ;; Return value:  Size  Location     Type
  2150 ;;                  2    8[BANK0 ] int 
  2151 ;; Registers used:
  2152 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2153 ;; Tracked objects:
  2154 ;;		On entry : 0/0
  2155 ;;		On exit  : 0/0
  2156 ;;		Unchanged: 0/0
  2157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2158 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2159 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2160 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2161 ;;      Totals:         2      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2162 ;;Total ram usage:       14 bytes
  2163 ;; Hardware stack levels used:    1
  2164 ;; Hardware stack levels required when called:    2
  2165 ;; This function calls:
  2166 ;;		___lwdiv
  2167 ;;		_dynam
  2168 ;;		_tact
  2169 ;; This function is called by:
  2170 ;;		_main
  2171 ;; This function uses a non-reentrant model
  2172 ;;
  2173                           
  2174                           
  2175                           ;psect for function _waitSEG
  2176  02A8                     _waitSEG:
  2177  02A8                     l2117:	
  2178                           ;incstack = 0
  2179                           ; Regs used in _waitSEG: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2180                           
  2181                           
  2182                           ;Q4.c: 451: int waitSEG(unsigned short seg1,unsigned short seg2,unsigned short wt);Q4.c:
      +                           452: {;Q4.c: 454:     int cpSW1 = RA0;
  2183  02A8  1003               	clrc
  2184  02A9  0020               	movlb	0	; select bank0
  2185  02AA  180C               	btfsc	12,0	;volatile
  2186  02AB  1403               	setc
  2187  02AC  3000               	movlw	0
  2188  02AD  3D09               	addwfc	9,w
  2189  02AE  00FA               	movwf	??_waitSEG
  2190  02AF  01FB               	clrf	??_waitSEG+1
  2191  02B0  087A               	movf	??_waitSEG,w
  2192  02B1  00AE               	movwf	waitSEG@cpSW1
  2193  02B2  087B               	movf	??_waitSEG+1,w
  2194  02B3  00AF               	movwf	waitSEG@cpSW1+1
  2195                           
  2196                           ;Q4.c: 455:     int cpSW2 = RA1;
  2197  02B4  1003               	clrc
  2198  02B5  188C               	btfsc	12,1	;volatile
  2199  02B6  1403               	setc
  2200  02B7  3000               	movlw	0
  2201  02B8  3D09               	addwfc	9,w
  2202  02B9  00FA               	movwf	??_waitSEG
  2203  02BA  01FB               	clrf	??_waitSEG+1
  2204  02BB  087A               	movf	??_waitSEG,w
  2205  02BC  00B0               	movwf	waitSEG@cpSW2
  2206  02BD  087B               	movf	??_waitSEG+1,w
  2207  02BE  00B1               	movwf	waitSEG@cpSW2+1
  2208  02BF                     l2119:
  2209                           
  2210                           ;Q4.c: 457:     wt = wt / 10;
  2211  02BF  300A               	movlw	10
  2212  02C0  00F0               	movwf	___lwdiv@divisor
  2213  02C1  3000               	movlw	0
  2214  02C2  00F1               	movwf	___lwdiv@divisor+1
  2215  02C3  082D               	movf	waitSEG@wt+1,w
  2216  02C4  00F3               	movwf	___lwdiv@dividend+1
  2217  02C5  082C               	movf	waitSEG@wt,w
  2218  02C6  00F2               	movwf	___lwdiv@dividend
  2219  02C7  3180  20DD  3182   	fcall	___lwdiv
  2220  02CA  0871               	movf	?___lwdiv+1,w
  2221  02CB  0020               	movlb	0	; select bank0
  2222  02CC  00AD               	movwf	waitSEG@wt+1
  2223  02CD  0870               	movf	?___lwdiv,w
  2224  02CE  00AC               	movwf	waitSEG@wt
  2225  02CF                     l2121:
  2226                           
  2227                           ;Q4.c: 458:     unsigned int i;;Q4.c: 460:     for(i=wt;i>0;--i){
  2228  02CF  082D               	movf	waitSEG@wt+1,w
  2229  02D0  00B3               	movwf	waitSEG@i+1
  2230  02D1  082C               	movf	waitSEG@wt,w
  2231  02D2  00B2               	movwf	waitSEG@i
  2232  02D3                     l2123:
  2233  02D3  0832               	movf	waitSEG@i,w
  2234  02D4  0433               	iorwf	waitSEG@i+1,w
  2235  02D5  1D03               	btfss	3,2
  2236  02D6  2AD8               	goto	u1711
  2237  02D7  2AD9               	goto	u1710
  2238  02D8                     u1711:
  2239  02D8  2ADA               	goto	l2127
  2240  02D9                     u1710:
  2241  02D9  2B2A               	goto	l261
  2242  02DA                     l2127:
  2243                           
  2244                           ;Q4.c: 461:         dynam(seg1,seg2,0,0);
  2245  02DA  0829               	movf	waitSEG@seg1+1,w
  2246  02DB  00F1               	movwf	dynam@dig1data+1
  2247  02DC  0828               	movf	waitSEG@seg1,w
  2248  02DD  00F0               	movwf	dynam@dig1data
  2249  02DE  082B               	movf	waitSEG@seg2+1,w
  2250  02DF  00F3               	movwf	dynam@dig2data+1
  2251  02E0  082A               	movf	waitSEG@seg2,w
  2252  02E1  00F2               	movwf	dynam@dig2data
  2253  02E2  3000               	movlw	0
  2254  02E3  00F4               	movwf	dynam@smdata
  2255  02E4  00F5               	movwf	dynam@smdata+1
  2256  02E5  3000               	movlw	0
  2257  02E6  00F6               	movwf	dynam@tr
  2258  02E7  00F7               	movwf	dynam@tr+1
  2259  02E8  3183  232B  3182   	fcall	_dynam
  2260                           
  2261                           ;Q4.c: 463:         tact(0);
  2262  02EB  3000               	movlw	0
  2263  02EC  00F8               	movwf	tact@mode
  2264  02ED  00F9               	movwf	tact@mode+1
  2265  02EE  3181  219E  3182   	fcall	_tact
  2266  02F1                     l2129:
  2267                           
  2268                           ;Q4.c: 465:         if(cpSW1 != RA0 || cpSW2 != RA1 || ((flag_sw3==1)&&(flag_R==1))){
  2269  02F1  1003               	clrc
  2270  02F2  0020               	movlb	0	; select bank0
  2271  02F3  180C               	btfsc	12,0	;volatile
  2272  02F4  1403               	setc
  2273  02F5  3000               	movlw	0
  2274  02F6  3D09               	addwfc	9,w
  2275  02F7  00FA               	movwf	??_waitSEG
  2276  02F8  01FB               	clrf	??_waitSEG+1
  2277  02F9  082F               	movf	waitSEG@cpSW1+1,w
  2278  02FA  067B               	xorwf	??_waitSEG+1,w
  2279  02FB  1D03               	skipz
  2280  02FC  2AFF               	goto	u1725
  2281  02FD  082E               	movf	waitSEG@cpSW1,w
  2282  02FE  067A               	xorwf	??_waitSEG,w
  2283  02FF                     u1725:
  2284  02FF  1D03               	skipz
  2285  0300  2B02               	goto	u1721
  2286  0301  2B03               	goto	u1720
  2287  0302                     u1721:
  2288  0302  2B20               	goto	l2137
  2289  0303                     u1720:
  2290  0303                     l2131:
  2291  0303  1003               	clrc
  2292  0304  188C               	btfsc	12,1	;volatile
  2293  0305  1403               	setc
  2294  0306  3000               	movlw	0
  2295  0307  3D09               	addwfc	9,w
  2296  0308  00FA               	movwf	??_waitSEG
  2297  0309  01FB               	clrf	??_waitSEG+1
  2298  030A  0831               	movf	waitSEG@cpSW2+1,w
  2299  030B  067B               	xorwf	??_waitSEG+1,w
  2300  030C  1D03               	skipz
  2301  030D  2B10               	goto	u1735
  2302  030E  0830               	movf	waitSEG@cpSW2,w
  2303  030F  067A               	xorwf	??_waitSEG,w
  2304  0310                     u1735:
  2305  0310  1D03               	skipz
  2306  0311  2B13               	goto	u1731
  2307  0312  2B14               	goto	u1730
  2308  0313                     u1731:
  2309  0313  2B20               	goto	l2137
  2310  0314                     u1730:
  2311  0314                     l2133:
  2312  0314  0362               	decf	_flag_sw3,w
  2313  0315  0463               	iorwf	_flag_sw3+1,w
  2314  0316  1D03               	btfss	3,2
  2315  0317  2B19               	goto	u1741
  2316  0318  2B1A               	goto	u1740
  2317  0319                     u1741:
  2318  0319  2B25               	goto	l2141
  2319  031A                     u1740:
  2320  031A                     l2135:
  2321  031A  0360               	decf	_flag_R,w
  2322  031B  0461               	iorwf	_flag_R+1,w
  2323  031C  1D03               	btfss	3,2
  2324  031D  2B1F               	goto	u1751
  2325  031E  2B20               	goto	u1750
  2326  031F                     u1751:
  2327  031F  2B25               	goto	l2141
  2328  0320                     u1750:
  2329  0320                     l2137:
  2330                           
  2331                           ;Q4.c: 466:             return 1;
  2332  0320  3001               	movlw	1
  2333  0321  00A8               	movwf	?_waitSEG
  2334  0322  3000               	movlw	0
  2335  0323  00A9               	movwf	?_waitSEG+1
  2336  0324  2B2A               	goto	l261
  2337  0325                     l2141:
  2338                           
  2339                           ;Q4.c: 468:     }
  2340  0325  3001               	movlw	1
  2341  0326  02B2               	subwf	waitSEG@i,f
  2342  0327  3000               	movlw	0
  2343  0328  3BB3               	subwfb	waitSEG@i+1,f
  2344  0329  2AD3               	goto	l2123
  2345  032A                     l261:
  2346  032A  0008               	return
  2347  032B                     __end_of_waitSEG:
  2348                           
  2349                           	psect	text3
  2350  00DD                     __ptext3:	
  2351 ;; *************** function ___lwdiv *****************
  2352 ;; Defined at:
  2353 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\lwdiv.c"
  2354 ;; Parameters:    Size  Location     Type
  2355 ;;  divisor         2    0[COMMON] unsigned int 
  2356 ;;  dividend        2    2[COMMON] unsigned int 
  2357 ;; Auto vars:     Size  Location     Type
  2358 ;;  quotient        2    5[COMMON] unsigned int 
  2359 ;;  counter         1    7[COMMON] unsigned char 
  2360 ;; Return value:  Size  Location     Type
  2361 ;;                  2    0[COMMON] unsigned int 
  2362 ;; Registers used:
  2363 ;;		wreg, status,2, status,0
  2364 ;; Tracked objects:
  2365 ;;		On entry : 0/0
  2366 ;;		On exit  : 0/0
  2367 ;;		Unchanged: 0/0
  2368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2369 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2370 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2371 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2372 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2373 ;;Total ram usage:        8 bytes
  2374 ;; Hardware stack levels used:    1
  2375 ;; This function calls:
  2376 ;;		Nothing
  2377 ;; This function is called by:
  2378 ;;		_waitSEG
  2379 ;; This function uses a non-reentrant model
  2380 ;;
  2381                           
  2382                           
  2383                           ;psect for function ___lwdiv
  2384  00DD                     ___lwdiv:
  2385  00DD                     l2029:	
  2386                           ;incstack = 0
  2387                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2388                           
  2389  00DD  01F5               	clrf	___lwdiv@quotient
  2390  00DE  01F6               	clrf	___lwdiv@quotient+1
  2391  00DF                     l2031:
  2392  00DF  0870               	movf	___lwdiv@divisor,w
  2393  00E0  0471               	iorwf	___lwdiv@divisor+1,w
  2394  00E1  1903               	btfsc	3,2
  2395  00E2  28E4               	goto	u1611
  2396  00E3  28E5               	goto	u1610
  2397  00E4                     u1611:
  2398  00E4  2914               	goto	l2051
  2399  00E5                     u1610:
  2400  00E5                     l2033:
  2401  00E5  01F7               	clrf	___lwdiv@counter
  2402  00E6  0AF7               	incf	___lwdiv@counter,f
  2403  00E7  28F1               	goto	l2039
  2404  00E8                     l2035:
  2405  00E8  3001               	movlw	1
  2406  00E9                     u1625:
  2407  00E9  35F0               	lslf	___lwdiv@divisor,f
  2408  00EA  0DF1               	rlf	___lwdiv@divisor+1,f
  2409  00EB  0B89               	decfsz	9,f
  2410  00EC  28E9               	goto	u1625
  2411  00ED                     l2037:
  2412  00ED  3001               	movlw	1
  2413  00EE  00F4               	movwf	??___lwdiv
  2414  00EF  0874               	movf	??___lwdiv,w
  2415  00F0  07F7               	addwf	___lwdiv@counter,f
  2416  00F1                     l2039:
  2417  00F1  1FF1               	btfss	___lwdiv@divisor+1,7
  2418  00F2  28F4               	goto	u1631
  2419  00F3  28F5               	goto	u1630
  2420  00F4                     u1631:
  2421  00F4  28E8               	goto	l2035
  2422  00F5                     u1630:
  2423  00F5                     l2041:
  2424  00F5  3001               	movlw	1
  2425  00F6                     u1645:
  2426  00F6  35F5               	lslf	___lwdiv@quotient,f
  2427  00F7  0DF6               	rlf	___lwdiv@quotient+1,f
  2428  00F8  0B89               	decfsz	9,f
  2429  00F9  28F6               	goto	u1645
  2430  00FA  0871               	movf	___lwdiv@divisor+1,w
  2431  00FB  0273               	subwf	___lwdiv@dividend+1,w
  2432  00FC  1D03               	skipz
  2433  00FD  2900               	goto	u1655
  2434  00FE  0870               	movf	___lwdiv@divisor,w
  2435  00FF  0272               	subwf	___lwdiv@dividend,w
  2436  0100                     u1655:
  2437  0100  1C03               	skipc
  2438  0101  2903               	goto	u1651
  2439  0102  2904               	goto	u1650
  2440  0103                     u1651:
  2441  0103  2909               	goto	l2047
  2442  0104                     u1650:
  2443  0104                     l2043:
  2444  0104  0870               	movf	___lwdiv@divisor,w
  2445  0105  02F2               	subwf	___lwdiv@dividend,f
  2446  0106  0871               	movf	___lwdiv@divisor+1,w
  2447  0107  3BF3               	subwfb	___lwdiv@dividend+1,f
  2448  0108                     l2045:
  2449  0108  1475               	bsf	___lwdiv@quotient,0
  2450  0109                     l2047:
  2451  0109  3001               	movlw	1
  2452  010A                     u1665:
  2453  010A  36F1               	lsrf	___lwdiv@divisor+1,f
  2454  010B  0CF0               	rrf	___lwdiv@divisor,f
  2455  010C  0B89               	decfsz	9,f
  2456  010D  290A               	goto	u1665
  2457  010E                     l2049:
  2458  010E  3001               	movlw	1
  2459  010F  02F7               	subwf	___lwdiv@counter,f
  2460  0110  1D03               	btfss	3,2
  2461  0111  2913               	goto	u1671
  2462  0112  2914               	goto	u1670
  2463  0113                     u1671:
  2464  0113  28F5               	goto	l2041
  2465  0114                     u1670:
  2466  0114                     l2051:
  2467  0114  0876               	movf	___lwdiv@quotient+1,w
  2468  0115  00F1               	movwf	?___lwdiv+1
  2469  0116  0875               	movf	___lwdiv@quotient,w
  2470  0117  00F0               	movwf	?___lwdiv
  2471  0118                     l759:
  2472  0118  0008               	return
  2473  0119                     __end_of___lwdiv:
  2474                           
  2475                           	psect	text4
  2476  00B3                     __ptext4:	
  2477 ;; *************** function _wait *****************
  2478 ;; Defined at:
  2479 ;;		line 176 in file "Q4.c"
  2480 ;; Parameters:    Size  Location     Type
  2481 ;;  wt              2    6[COMMON] unsigned short 
  2482 ;; Auto vars:     Size  Location     Type
  2483 ;;  j               2   10[COMMON] unsigned int 
  2484 ;;  i               2    8[COMMON] unsigned int 
  2485 ;; Return value:  Size  Location     Type
  2486 ;;                  1    wreg      void 
  2487 ;; Registers used:
  2488 ;;		wreg, status,2, status,0, pclath, cstack
  2489 ;; Tracked objects:
  2490 ;;		On entry : 0/0
  2491 ;;		On exit  : 0/0
  2492 ;;		Unchanged: 0/0
  2493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2494 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2495 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2497 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2498 ;;Total ram usage:        6 bytes
  2499 ;; Hardware stack levels used:    1
  2500 ;; Hardware stack levels required when called:    1
  2501 ;; This function calls:
  2502 ;;		___wmul
  2503 ;; This function is called by:
  2504 ;;		_main
  2505 ;;		_hyouji
  2506 ;; This function uses a non-reentrant model
  2507 ;;
  2508                           
  2509                           
  2510                           ;psect for function _wait
  2511  00B3                     _wait:
  2512  00B3                     l2065:	
  2513                           ;incstack = 0
  2514                           ; Regs used in _wait: [wreg+status,2+status,0+pclath+cstack]
  2515                           
  2516                           
  2517                           ;Q4.c: 176: void wait(unsigned short wt);Q4.c: 177: {;Q4.c: 178:     unsigned int i,j;;Q
      +                          4.c: 179:     for(i=10*wt;i>0;--i){
  2518  00B3  0877               	movf	wait@wt+1,w
  2519  00B4  00F1               	movwf	___wmul@multiplier+1
  2520  00B5  0876               	movf	wait@wt,w
  2521  00B6  00F0               	movwf	___wmul@multiplier
  2522  00B7  300A               	movlw	10
  2523  00B8  00F2               	movwf	___wmul@multiplicand
  2524  00B9  3000               	movlw	0
  2525  00BA  00F3               	movwf	___wmul@multiplicand+1
  2526  00BB  3180  2074  3180   	fcall	___wmul
  2527  00BE  0871               	movf	?___wmul+1,w
  2528  00BF  00F9               	movwf	wait@i+1
  2529  00C0  0870               	movf	?___wmul,w
  2530  00C1  00F8               	movwf	wait@i
  2531  00C2                     l2067:
  2532  00C2  0878               	movf	wait@i,w
  2533  00C3  0479               	iorwf	wait@i+1,w
  2534  00C4  1D03               	btfss	3,2
  2535  00C5  28C7               	goto	u1681
  2536  00C6  28C8               	goto	u1680
  2537  00C7                     u1681:
  2538  00C7  28C9               	goto	l2071
  2539  00C8                     u1680:
  2540  00C8  28DC               	goto	l102
  2541  00C9                     l2071:
  2542                           
  2543                           ;Q4.c: 180:         for(j=10;j>0;--j);
  2544  00C9  300A               	movlw	10
  2545  00CA  00FA               	movwf	wait@j
  2546  00CB  3000               	movlw	0
  2547  00CC  00FB               	movwf	wait@j+1
  2548  00CD                     l2077:
  2549  00CD  3001               	movlw	1
  2550  00CE  02FA               	subwf	wait@j,f
  2551  00CF  3000               	movlw	0
  2552  00D0  3BFB               	subwfb	wait@j+1,f
  2553  00D1                     l2079:
  2554  00D1  087A               	movf	wait@j,w
  2555  00D2  047B               	iorwf	wait@j+1,w
  2556  00D3  1D03               	btfss	3,2
  2557  00D4  28D6               	goto	u1691
  2558  00D5  28D7               	goto	u1690
  2559  00D6                     u1691:
  2560  00D6  28CD               	goto	l2077
  2561  00D7                     u1690:
  2562  00D7                     l2081:
  2563                           
  2564                           ;Q4.c: 181:     }
  2565  00D7  3001               	movlw	1
  2566  00D8  02F8               	subwf	wait@i,f
  2567  00D9  3000               	movlw	0
  2568  00DA  3BF9               	subwfb	wait@i+1,f
  2569  00DB  28C2               	goto	l2067
  2570  00DC                     l102:
  2571  00DC  0008               	return
  2572  00DD                     __end_of_wait:
  2573                           
  2574                           	psect	text5
  2575  0074                     __ptext5:	
  2576 ;; *************** function ___wmul *****************
  2577 ;; Defined at:
  2578 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  2579 ;; Parameters:    Size  Location     Type
  2580 ;;  multiplier      2    0[COMMON] unsigned int 
  2581 ;;  multiplicand    2    2[COMMON] unsigned int 
  2582 ;; Auto vars:     Size  Location     Type
  2583 ;;  product         2    4[COMMON] unsigned int 
  2584 ;; Return value:  Size  Location     Type
  2585 ;;                  2    0[COMMON] unsigned int 
  2586 ;; Registers used:
  2587 ;;		wreg, status,2, status,0
  2588 ;; Tracked objects:
  2589 ;;		On entry : 0/0
  2590 ;;		On exit  : 0/0
  2591 ;;		Unchanged: 0/0
  2592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2593 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2594 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2596 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2597 ;;Total ram usage:        6 bytes
  2598 ;; Hardware stack levels used:    1
  2599 ;; This function calls:
  2600 ;;		Nothing
  2601 ;; This function is called by:
  2602 ;;		_wait
  2603 ;;		_hen7
  2604 ;;		_hens
  2605 ;; This function uses a non-reentrant model
  2606 ;;
  2607                           
  2608                           
  2609                           ;psect for function ___wmul
  2610  0074                     ___wmul:
  2611  0074                     l2015:	
  2612                           ;incstack = 0
  2613                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2614                           
  2615  0074  01F4               	clrf	___wmul@product
  2616  0075  01F5               	clrf	___wmul@product+1
  2617  0076                     l2017:
  2618  0076  1C70               	btfss	___wmul@multiplier,0
  2619  0077  2879               	goto	u1571
  2620  0078  287A               	goto	u1570
  2621  0079                     u1571:
  2622  0079  287E               	goto	l479
  2623  007A                     u1570:
  2624  007A                     l2019:
  2625  007A  0872               	movf	___wmul@multiplicand,w
  2626  007B  07F4               	addwf	___wmul@product,f
  2627  007C  0873               	movf	___wmul@multiplicand+1,w
  2628  007D  3DF5               	addwfc	___wmul@product+1,f
  2629  007E                     l479:
  2630  007E  3001               	movlw	1
  2631  007F                     u1585:
  2632  007F  35F2               	lslf	___wmul@multiplicand,f
  2633  0080  0DF3               	rlf	___wmul@multiplicand+1,f
  2634  0081  0B89               	decfsz	9,f
  2635  0082  287F               	goto	u1585
  2636  0083                     l2021:
  2637  0083  3001               	movlw	1
  2638  0084                     u1595:
  2639  0084  36F1               	lsrf	___wmul@multiplier+1,f
  2640  0085  0CF0               	rrf	___wmul@multiplier,f
  2641  0086  0B89               	decfsz	9,f
  2642  0087  2884               	goto	u1595
  2643  0088                     l2023:
  2644  0088  0870               	movf	___wmul@multiplier,w
  2645  0089  0471               	iorwf	___wmul@multiplier+1,w
  2646  008A  1D03               	btfss	3,2
  2647  008B  288D               	goto	u1601
  2648  008C  288E               	goto	u1600
  2649  008D                     u1601:
  2650  008D  2876               	goto	l2017
  2651  008E                     u1600:
  2652  008E                     l2025:
  2653  008E  0875               	movf	___wmul@product+1,w
  2654  008F  00F1               	movwf	?___wmul+1
  2655  0090  0874               	movf	___wmul@product,w
  2656  0091  00F0               	movwf	?___wmul
  2657  0092                     l481:
  2658  0092  0008               	return
  2659  0093                     __end_of___wmul:
  2660                           
  2661                           	psect	text6
  2662  0061                     __ptext6:	
  2663 ;; *************** function _portinit *****************
  2664 ;; Defined at:
  2665 ;;		line 160 in file "Q4.c"
  2666 ;; Parameters:    Size  Location     Type
  2667 ;;		None
  2668 ;; Auto vars:     Size  Location     Type
  2669 ;;		None
  2670 ;; Return value:  Size  Location     Type
  2671 ;;                  1    wreg      void 
  2672 ;; Registers used:
  2673 ;;		wreg, status,2
  2674 ;; Tracked objects:
  2675 ;;		On entry : 0/0
  2676 ;;		On exit  : 0/0
  2677 ;;		Unchanged: 0/0
  2678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2683 ;;Total ram usage:        0 bytes
  2684 ;; Hardware stack levels used:    1
  2685 ;; This function calls:
  2686 ;;		Nothing
  2687 ;; This function is called by:
  2688 ;;		_main
  2689 ;; This function uses a non-reentrant model
  2690 ;;
  2691                           
  2692                           
  2693                           ;psect for function _portinit
  2694  0061                     _portinit:
  2695  0061                     l2055:	
  2696                           ;incstack = 0
  2697                           ; Regs used in _portinit: [wreg+status,2]
  2698                           
  2699                           
  2700                           ;Q4.c: 163:     ANSELA=0x00;
  2701  0061  0023               	movlb	3	; select bank3
  2702  0062  018C               	clrf	12	;volatile
  2703                           
  2704                           ;Q4.c: 164:     ANSELB=0x00;
  2705  0063  018D               	clrf	13	;volatile
  2706  0064                     l2057:
  2707                           
  2708                           ;Q4.c: 166:     PORTA=0x07;
  2709  0064  3007               	movlw	7
  2710  0065  0020               	movlb	0	; select bank0
  2711  0066  008C               	movwf	12	;volatile
  2712  0067                     l2059:
  2713                           
  2714                           ;Q4.c: 167:     TRISA=0x07;
  2715  0067  3007               	movlw	7
  2716  0068  0021               	movlb	1	; select bank1
  2717  0069  008C               	movwf	12	;volatile
  2718                           
  2719                           ;Q4.c: 168:     PORTB=0x00;
  2720  006A  0020               	movlb	0	; select bank0
  2721  006B  018D               	clrf	13	;volatile
  2722                           
  2723                           ;Q4.c: 169:     TRISB=0x00;
  2724  006C  0021               	movlb	1	; select bank1
  2725  006D  018D               	clrf	13	;volatile
  2726  006E                     l2061:
  2727                           
  2728                           ;Q4.c: 170:     PORTC=0x07;
  2729  006E  3007               	movlw	7
  2730  006F  0020               	movlb	0	; select bank0
  2731  0070  008E               	movwf	14	;volatile
  2732  0071                     l2063:
  2733                           
  2734                           ;Q4.c: 171:     TRISC=0x00;
  2735  0071  0021               	movlb	1	; select bank1
  2736  0072  018E               	clrf	14	;volatile
  2737  0073                     l95:
  2738  0073  0008               	return
  2739  0074                     __end_of_portinit:
  2740                           
  2741                           	psect	text7
  2742  0235                     __ptext7:	
  2743 ;; *************** function _motor *****************
  2744 ;; Defined at:
  2745 ;;		line 471 in file "Q4.c"
  2746 ;; Parameters:    Size  Location     Type
  2747 ;;  kakudo          2    8[BANK0 ] int 
  2748 ;;  dig1data        2   10[BANK0 ] unsigned short 
  2749 ;;  dig2data        2   12[BANK0 ] unsigned short 
  2750 ;;  smdata          2   14[BANK0 ] unsigned short 
  2751 ;;  tr              2   16[BANK0 ] unsigned int 
  2752 ;; Auto vars:     Size  Location     Type
  2753 ;;  i               2   22[BANK0 ] int 
  2754 ;;  cpSW2           2   20[BANK0 ] int 
  2755 ;;  cpSW1           2   18[BANK0 ] int 
  2756 ;; Return value:  Size  Location     Type
  2757 ;;                  2    8[BANK0 ] int 
  2758 ;; Registers used:
  2759 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2760 ;; Tracked objects:
  2761 ;;		On entry : 0/0
  2762 ;;		On exit  : 0/0
  2763 ;;		Unchanged: 0/0
  2764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2765 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2766 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2767 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2768 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2769 ;;Total ram usage:       18 bytes
  2770 ;; Hardware stack levels used:    1
  2771 ;; Hardware stack levels required when called:    2
  2772 ;; This function calls:
  2773 ;;		_dynam
  2774 ;;		_tact
  2775 ;; This function is called by:
  2776 ;;		_main
  2777 ;;		_henka
  2778 ;; This function uses a non-reentrant model
  2779 ;;
  2780                           
  2781                           
  2782                           ;psect for function _motor
  2783  0235                     _motor:
  2784  0235                     l2145:	
  2785                           ;incstack = 0
  2786                           ; Regs used in _motor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2787                           
  2788                           
  2789                           ;Q4.c: 474:     int cpSW1 = RA0;
  2790  0235  1003               	clrc
  2791  0236  0020               	movlb	0	; select bank0
  2792  0237  180C               	btfsc	12,0	;volatile
  2793  0238  1403               	setc
  2794  0239  3000               	movlw	0
  2795  023A  3D09               	addwfc	9,w
  2796  023B  00FA               	movwf	??_motor
  2797  023C  01FB               	clrf	??_motor+1
  2798  023D  087A               	movf	??_motor,w
  2799  023E  00B2               	movwf	motor@cpSW1
  2800  023F  087B               	movf	??_motor+1,w
  2801  0240  00B3               	movwf	motor@cpSW1+1
  2802                           
  2803                           ;Q4.c: 475:     int cpSW2 = RA1;
  2804  0241  1003               	clrc
  2805  0242  188C               	btfsc	12,1	;volatile
  2806  0243  1403               	setc
  2807  0244  3000               	movlw	0
  2808  0245  3D09               	addwfc	9,w
  2809  0246  00FA               	movwf	??_motor
  2810  0247  01FB               	clrf	??_motor+1
  2811  0248  087A               	movf	??_motor,w
  2812  0249  00B4               	movwf	motor@cpSW2
  2813  024A  087B               	movf	??_motor+1,w
  2814  024B  00B5               	movwf	motor@cpSW2+1
  2815  024C                     l2147:
  2816                           
  2817                           ;Q4.c: 477:     for(int i = kakudo;i>=0;i--){
  2818  024C  0829               	movf	motor@kakudo+1,w
  2819  024D  00B7               	movwf	motor@i+1
  2820  024E  0828               	movf	motor@kakudo,w
  2821  024F  00B6               	movwf	motor@i
  2822  0250                     l2149:
  2823  0250  1FB7               	btfss	motor@i+1,7
  2824  0251  2A53               	goto	u1761
  2825  0252  2A54               	goto	u1760
  2826  0253                     u1761:
  2827  0253  2A55               	goto	l2153
  2828  0254                     u1760:
  2829  0254  2AA7               	goto	l269
  2830  0255                     l2153:
  2831                           
  2832                           ;Q4.c: 478:         dynam(dig1data,dig2data,smdata,tr);
  2833  0255  082B               	movf	motor@dig1data+1,w
  2834  0256  00F1               	movwf	dynam@dig1data+1
  2835  0257  082A               	movf	motor@dig1data,w
  2836  0258  00F0               	movwf	dynam@dig1data
  2837  0259  082D               	movf	motor@dig2data+1,w
  2838  025A  00F3               	movwf	dynam@dig2data+1
  2839  025B  082C               	movf	motor@dig2data,w
  2840  025C  00F2               	movwf	dynam@dig2data
  2841  025D  082F               	movf	motor@smdata+1,w
  2842  025E  00F5               	movwf	dynam@smdata+1
  2843  025F  082E               	movf	motor@smdata,w
  2844  0260  00F4               	movwf	dynam@smdata
  2845  0261  0831               	movf	motor@tr+1,w
  2846  0262  00F7               	movwf	dynam@tr+1
  2847  0263  0830               	movf	motor@tr,w
  2848  0264  00F6               	movwf	dynam@tr
  2849  0265  3183  232B  3182   	fcall	_dynam
  2850                           
  2851                           ;Q4.c: 480:         tact(0);
  2852  0268  3000               	movlw	0
  2853  0269  00F8               	movwf	tact@mode
  2854  026A  00F9               	movwf	tact@mode+1
  2855  026B  3181  219E  3182   	fcall	_tact
  2856  026E                     l2155:
  2857                           
  2858                           ;Q4.c: 482:         if(cpSW1 != RA0 || cpSW2 != RA1 || ((flag_sw3==1)&&(flag_R==1))){
  2859  026E  1003               	clrc
  2860  026F  0020               	movlb	0	; select bank0
  2861  0270  180C               	btfsc	12,0	;volatile
  2862  0271  1403               	setc
  2863  0272  3000               	movlw	0
  2864  0273  3D09               	addwfc	9,w
  2865  0274  00FA               	movwf	??_motor
  2866  0275  01FB               	clrf	??_motor+1
  2867  0276  0833               	movf	motor@cpSW1+1,w
  2868  0277  067B               	xorwf	??_motor+1,w
  2869  0278  1D03               	skipz
  2870  0279  2A7C               	goto	u1775
  2871  027A  0832               	movf	motor@cpSW1,w
  2872  027B  067A               	xorwf	??_motor,w
  2873  027C                     u1775:
  2874  027C  1D03               	skipz
  2875  027D  2A7F               	goto	u1771
  2876  027E  2A80               	goto	u1770
  2877  027F                     u1771:
  2878  027F  2A9D               	goto	l2163
  2879  0280                     u1770:
  2880  0280                     l2157:
  2881  0280  1003               	clrc
  2882  0281  188C               	btfsc	12,1	;volatile
  2883  0282  1403               	setc
  2884  0283  3000               	movlw	0
  2885  0284  3D09               	addwfc	9,w
  2886  0285  00FA               	movwf	??_motor
  2887  0286  01FB               	clrf	??_motor+1
  2888  0287  0835               	movf	motor@cpSW2+1,w
  2889  0288  067B               	xorwf	??_motor+1,w
  2890  0289  1D03               	skipz
  2891  028A  2A8D               	goto	u1785
  2892  028B  0834               	movf	motor@cpSW2,w
  2893  028C  067A               	xorwf	??_motor,w
  2894  028D                     u1785:
  2895  028D  1D03               	skipz
  2896  028E  2A90               	goto	u1781
  2897  028F  2A91               	goto	u1780
  2898  0290                     u1781:
  2899  0290  2A9D               	goto	l2163
  2900  0291                     u1780:
  2901  0291                     l2159:
  2902  0291  0362               	decf	_flag_sw3,w
  2903  0292  0463               	iorwf	_flag_sw3+1,w
  2904  0293  1D03               	btfss	3,2
  2905  0294  2A96               	goto	u1791
  2906  0295  2A97               	goto	u1790
  2907  0296                     u1791:
  2908  0296  2AA2               	goto	l2167
  2909  0297                     u1790:
  2910  0297                     l2161:
  2911  0297  0360               	decf	_flag_R,w
  2912  0298  0461               	iorwf	_flag_R+1,w
  2913  0299  1D03               	btfss	3,2
  2914  029A  2A9C               	goto	u1801
  2915  029B  2A9D               	goto	u1800
  2916  029C                     u1801:
  2917  029C  2AA2               	goto	l2167
  2918  029D                     u1800:
  2919  029D                     l2163:
  2920                           
  2921                           ;Q4.c: 483:             return 1;
  2922  029D  3001               	movlw	1
  2923  029E  00A8               	movwf	?_motor
  2924  029F  3000               	movlw	0
  2925  02A0  00A9               	movwf	?_motor+1
  2926  02A1  2AA7               	goto	l269
  2927  02A2                     l2167:
  2928                           
  2929                           ;Q4.c: 485:     }
  2930  02A2  30FF               	movlw	255
  2931  02A3  07B6               	addwf	motor@i,f
  2932  02A4  30FF               	movlw	255
  2933  02A5  3DB7               	addwfc	motor@i+1,f
  2934  02A6  2A50               	goto	l2149
  2935  02A7                     l269:
  2936  02A7  0008               	return
  2937  02A8                     __end_of_motor:
  2938                           
  2939                           	psect	text8
  2940  019E                     __ptext8:	
  2941 ;; *************** function _tact *****************
  2942 ;; Defined at:
  2943 ;;		line 346 in file "Q4.c"
  2944 ;; Parameters:    Size  Location     Type
  2945 ;;  mode            2    8[COMMON] unsigned short 
  2946 ;; Auto vars:     Size  Location     Type
  2947 ;;		None
  2948 ;; Return value:  Size  Location     Type
  2949 ;;                  1    wreg      void 
  2950 ;; Registers used:
  2951 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2952 ;; Tracked objects:
  2953 ;;		On entry : 0/0
  2954 ;;		On exit  : 0/0
  2955 ;;		Unchanged: 0/0
  2956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2957 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2960 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2961 ;;Total ram usage:        2 bytes
  2962 ;; Hardware stack levels used:    1
  2963 ;; Hardware stack levels required when called:    1
  2964 ;; This function calls:
  2965 ;;		_tactsw
  2966 ;; This function is called by:
  2967 ;;		_waitSEG
  2968 ;;		_motor
  2969 ;;		_kaisu
  2970 ;; This function uses a non-reentrant model
  2971 ;;
  2972                           
  2973                           
  2974                           ;psect for function _tact
  2975  019E                     _tact:
  2976  019E                     l1981:	
  2977                           ;incstack = 0
  2978                           ; Regs used in _tact: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2979                           
  2980                           
  2981                           ;Q4.c: 346: void tact(unsigned short mode);Q4.c: 347: {;Q4.c: 348:     switch(mode){
  2982  019E  29D8               	goto	l2009
  2983  019F                     l1983:
  2984                           
  2985                           ;Q4.c: 350:                 tactsw();
  2986  019F  3181  2119  3181   	fcall	_tactsw
  2987  01A2                     l1985:
  2988                           
  2989                           ;Q4.c: 351:                 if(flag_sw3==0)flag_R=1;
  2990  01A2  0020               	movlb	0	; select bank0
  2991  01A3  0862               	movf	_flag_sw3,w
  2992  01A4  0463               	iorwf	_flag_sw3+1,w
  2993  01A5  1D03               	btfss	3,2
  2994  01A6  29A8               	goto	u1521
  2995  01A7  29A9               	goto	u1520
  2996  01A8                     u1521:
  2997  01A8  29E8               	goto	l208
  2998  01A9                     u1520:
  2999  01A9                     l1987:
  3000  01A9  3001               	movlw	1
  3001  01AA  00E0               	movwf	_flag_R
  3002  01AB  3000               	movlw	0
  3003  01AC  00E1               	movwf	_flag_R+1
  3004  01AD  29E8               	goto	l208
  3005  01AE                     l1989:
  3006                           
  3007                           ;Q4.c: 354:                 tactsw();
  3008  01AE  3181  2119  3181   	fcall	_tactsw
  3009  01B1                     l1991:
  3010                           
  3011                           ;Q4.c: 355:                 if(flag_sw3==1)flag_P=1;
  3012  01B1  0020               	movlb	0	; select bank0
  3013  01B2  0362               	decf	_flag_sw3,w
  3014  01B3  0463               	iorwf	_flag_sw3+1,w
  3015  01B4  1D03               	btfss	3,2
  3016  01B5  29B7               	goto	u1531
  3017  01B6  29B8               	goto	u1530
  3018  01B7                     u1531:
  3019  01B7  29E8               	goto	l208
  3020  01B8                     u1530:
  3021  01B8                     l1993:
  3022  01B8  3001               	movlw	1
  3023  01B9  00DE               	movwf	_flag_P
  3024  01BA  3000               	movlw	0
  3025  01BB  00DF               	movwf	_flag_P+1
  3026  01BC  29E8               	goto	l208
  3027  01BD                     l1995:
  3028                           
  3029                           ;Q4.c: 358:                 tactsw();
  3030  01BD  3181  2119  3181   	fcall	_tactsw
  3031  01C0                     l1997:
  3032                           
  3033                           ;Q4.c: 359:                 if(flag_sw3==0)flag_R=1;
  3034  01C0  0020               	movlb	0	; select bank0
  3035  01C1  0862               	movf	_flag_sw3,w
  3036  01C2  0463               	iorwf	_flag_sw3+1,w
  3037  01C3  1D03               	btfss	3,2
  3038  01C4  29C6               	goto	u1541
  3039  01C5  29C7               	goto	u1540
  3040  01C6                     u1541:
  3041  01C6  29CB               	goto	l2001
  3042  01C7                     u1540:
  3043  01C7                     l1999:
  3044  01C7  3001               	movlw	1
  3045  01C8  00E0               	movwf	_flag_R
  3046  01C9  3000               	movlw	0
  3047  01CA  00E1               	movwf	_flag_R+1
  3048  01CB                     l2001:
  3049                           
  3050                           ;Q4.c: 360:                 if((flag_sw3==1)&&(flag_R==1))flag_P=1;
  3051  01CB  0362               	decf	_flag_sw3,w
  3052  01CC  0463               	iorwf	_flag_sw3+1,w
  3053  01CD  1D03               	btfss	3,2
  3054  01CE  29D0               	goto	u1551
  3055  01CF  29D1               	goto	u1550
  3056  01D0                     u1551:
  3057  01D0  29E8               	goto	l208
  3058  01D1                     u1550:
  3059  01D1                     l2003:
  3060  01D1  0360               	decf	_flag_R,w
  3061  01D2  0461               	iorwf	_flag_R+1,w
  3062  01D3  1D03               	btfss	3,2
  3063  01D4  29D6               	goto	u1561
  3064  01D5  29D7               	goto	u1560
  3065  01D6                     u1561:
  3066  01D6  29E8               	goto	l208
  3067  01D7                     u1560:
  3068  01D7  29B8               	goto	l1993
  3069  01D8                     l2009:
  3070                           
  3071                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3072                           ; Switch size 1, requested type "simple"
  3073                           ; Number of cases is 1, Range of values is 0 to 0
  3074                           ; switch strategies available:
  3075                           ; Name         Instructions Cycles
  3076                           ; simple_byte            4     3 (average)
  3077                           ; direct_byte            8     6 (fixed)
  3078                           ; jumptable            260     6 (fixed)
  3079                           ;	Chosen strategy is simple_byte
  3080  01D8  0879               	movf	tact@mode+1,w
  3081  01D9  3A00               	xorlw	0	; case 0
  3082  01DA  1903               	skipnz
  3083  01DB  29DD               	goto	l2709
  3084  01DC  29E8               	goto	l208
  3085  01DD                     l2709:
  3086                           
  3087                           ; Switch size 1, requested type "simple"
  3088                           ; Number of cases is 3, Range of values is 0 to 2
  3089                           ; switch strategies available:
  3090                           ; Name         Instructions Cycles
  3091                           ; simple_byte           10     6 (average)
  3092                           ; direct_byte           12     6 (fixed)
  3093                           ; jumptable            260     6 (fixed)
  3094                           ;	Chosen strategy is simple_byte
  3095  01DD  0878               	movf	tact@mode,w
  3096  01DE  3A00               	xorlw	0	; case 0
  3097  01DF  1903               	skipnz
  3098  01E0  299F               	goto	l1983
  3099  01E1  3A01               	xorlw	1	; case 1
  3100  01E2  1903               	skipnz
  3101  01E3  29AE               	goto	l1989
  3102  01E4  3A03               	xorlw	3	; case 2
  3103  01E5  1903               	skipnz
  3104  01E6  29BD               	goto	l1995
  3105  01E7  29E8               	goto	l208
  3106  01E8                     l208:
  3107  01E8  0008               	return
  3108  01E9                     __end_of_tact:
  3109                           
  3110                           	psect	text9
  3111  0119                     __ptext9:	
  3112 ;; *************** function _tactsw *****************
  3113 ;; Defined at:
  3114 ;;		line 331 in file "Q4.c"
  3115 ;; Parameters:    Size  Location     Type
  3116 ;;		None
  3117 ;; Auto vars:     Size  Location     Type
  3118 ;;  a               2    6[COMMON] unsigned short 
  3119 ;;  c               2    4[COMMON] unsigned short 
  3120 ;;  b               2    2[COMMON] unsigned short 
  3121 ;; Return value:  Size  Location     Type
  3122 ;;                  1    wreg      void 
  3123 ;; Registers used:
  3124 ;;		wreg, status,2, status,0
  3125 ;; Tracked objects:
  3126 ;;		On entry : 0/0
  3127 ;;		On exit  : 0/0
  3128 ;;		Unchanged: 0/0
  3129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3131 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3132 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3133 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3134 ;;Total ram usage:        8 bytes
  3135 ;; Hardware stack levels used:    1
  3136 ;; This function calls:
  3137 ;;		Nothing
  3138 ;; This function is called by:
  3139 ;;		_tact
  3140 ;; This function uses a non-reentrant model
  3141 ;;
  3142                           
  3143                           
  3144                           ;psect for function _tactsw
  3145  0119                     _tactsw:
  3146  0119                     l1807:	
  3147                           ;incstack = 0
  3148                           ; Regs used in _tactsw: [wreg+status,2+status,0]
  3149                           
  3150                           
  3151                           ;Q4.c: 333:     unsigned short a,b,c;;Q4.c: 334:     b=c=0;
  3152  0119  01F4               	clrf	tactsw@c
  3153  011A  01F5               	clrf	tactsw@c+1
  3154  011B  01F2               	clrf	tactsw@b
  3155  011C  01F3               	clrf	tactsw@b+1
  3156  011D                     l1809:
  3157                           
  3158                           ;Q4.c: 336:             a=RA2;
  3159  011D  1003               	clrc
  3160  011E  0020               	movlb	0	; select bank0
  3161  011F  190C               	btfsc	12,2	;volatile
  3162  0120  1403               	setc
  3163  0121  3000               	movlw	0
  3164  0122  3D09               	addwfc	9,w
  3165  0123  00F0               	movwf	??_tactsw
  3166  0124  01F1               	clrf	??_tactsw+1
  3167  0125  0870               	movf	??_tactsw,w
  3168  0126  00F6               	movwf	tactsw@a
  3169  0127  0871               	movf	??_tactsw+1,w
  3170  0128  00F7               	movwf	tactsw@a+1
  3171  0129                     l1811:
  3172                           
  3173                           ;Q4.c: 337:             if(b==a)++c;
  3174  0129  0877               	movf	tactsw@a+1,w
  3175  012A  0673               	xorwf	tactsw@b+1,w
  3176  012B  1D03               	skipz
  3177  012C  292F               	goto	u1285
  3178  012D  0876               	movf	tactsw@a,w
  3179  012E  0672               	xorwf	tactsw@b,w
  3180  012F                     u1285:
  3181  012F  1D03               	skipz
  3182  0130  2932               	goto	u1281
  3183  0131  2933               	goto	u1280
  3184  0132                     u1281:
  3185  0132  2938               	goto	l1815
  3186  0133                     u1280:
  3187  0133                     l1813:
  3188  0133  3001               	movlw	1
  3189  0134  07F4               	addwf	tactsw@c,f
  3190  0135  3000               	movlw	0
  3191  0136  3DF5               	addwfc	tactsw@c+1,f
  3192  0137  293A               	goto	l1817
  3193  0138                     l1815:
  3194  0138  01F4               	clrf	tactsw@c
  3195  0139  01F5               	clrf	tactsw@c+1
  3196  013A                     l1817:
  3197                           
  3198                           ;Q4.c: 339:             if(c>10){flag_sw3=(~a)&0x01;return;}
  3199  013A  3000               	movlw	0
  3200  013B  0275               	subwf	tactsw@c+1,w
  3201  013C  300B               	movlw	11
  3202  013D  1903               	skipnz
  3203  013E  0274               	subwf	tactsw@c,w
  3204  013F  1C03               	skipc
  3205  0140  2942               	goto	u1291
  3206  0141  2943               	goto	u1290
  3207  0142                     u1291:
  3208  0142  2950               	goto	l1823
  3209  0143                     u1290:
  3210  0143                     l1819:
  3211  0143  0877               	movf	tactsw@a+1,w
  3212  0144  00F1               	movwf	??_tactsw+1
  3213  0145  0876               	movf	tactsw@a,w
  3214  0146  00F0               	movwf	??_tactsw
  3215  0147  09F0               	comf	??_tactsw,f
  3216  0148  09F1               	comf	??_tactsw+1,f
  3217  0149  3001               	movlw	1
  3218  014A  0570               	andwf	??_tactsw,w
  3219  014B  00E2               	movwf	_flag_sw3
  3220  014C  3000               	movlw	0
  3221  014D  0571               	andwf	??_tactsw+1,w
  3222  014E  00E3               	movwf	_flag_sw3+1
  3223  014F  2955               	goto	l193
  3224  0150                     l1823:
  3225                           
  3226                           ;Q4.c: 340:             b=a;
  3227  0150  0877               	movf	tactsw@a+1,w
  3228  0151  00F3               	movwf	tactsw@b+1
  3229  0152  0876               	movf	tactsw@a,w
  3230  0153  00F2               	movwf	tactsw@b
  3231  0154  291D               	goto	l1809
  3232  0155                     l193:
  3233  0155  0008               	return
  3234  0156                     __end_of_tactsw:
  3235                           
  3236                           	psect	text10
  3237  032B                     __ptext10:	
  3238 ;; *************** function _dynam *****************
  3239 ;; Defined at:
  3240 ;;		line 206 in file "Q4.c"
  3241 ;; Parameters:    Size  Location     Type
  3242 ;;  dig1data        2    0[COMMON] unsigned short 
  3243 ;;  dig2data        2    2[COMMON] unsigned short 
  3244 ;;  smdata          2    4[COMMON] unsigned short 
  3245 ;;  tr              2    6[COMMON] unsigned int 
  3246 ;; Auto vars:     Size  Location     Type
  3247 ;;  ext             2    6[BANK0 ] unsigned short 
  3248 ;;  j               2    4[BANK0 ] unsigned int 
  3249 ;;  tm              2    2[BANK0 ] unsigned int 
  3250 ;;  smd             2    0[BANK0 ] unsigned short 
  3251 ;; Return value:  Size  Location     Type
  3252 ;;                  1    wreg      void 
  3253 ;; Registers used:
  3254 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3255 ;; Tracked objects:
  3256 ;;		On entry : 0/0
  3257 ;;		On exit  : 0/0
  3258 ;;		Unchanged: 0/0
  3259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3260 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3261 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3263 ;;      Totals:         8       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3264 ;;Total ram usage:       16 bytes
  3265 ;; Hardware stack levels used:    1
  3266 ;; This function calls:
  3267 ;;		Nothing
  3268 ;; This function is called by:
  3269 ;;		_waitSEG
  3270 ;;		_motor
  3271 ;;		_main
  3272 ;;		_clear
  3273 ;; This function uses a non-reentrant model
  3274 ;;
  3275                           
  3276                           
  3277                           ;psect for function _dynam
  3278  032B                     _dynam:
  3279  032B                     l1825:	
  3280                           ;incstack = 0
  3281                           ; Regs used in _dynam: [wreg-fsr0h+status,2+status,0]
  3282                           
  3283  032B  0020               	movlb	0	; select bank0
  3284  032C  01A2               	clrf	dynam@tm
  3285  032D  01A3               	clrf	dynam@tm+1
  3286                           
  3287                           ;Q4.c: 209:     unsigned short ext=0,smd=0;
  3288  032E  01A6               	clrf	dynam@ext
  3289  032F  01A7               	clrf	dynam@ext+1
  3290  0330  01A0               	clrf	dynam@smd
  3291  0331  01A1               	clrf	dynam@smd+1
  3292  0332                     l1827:
  3293                           
  3294                           ;Q4.c: 210:     RC7=0;
  3295  0332  138E               	bcf	14,7	;volatile
  3296  0333                     l1829:
  3297                           
  3298                           ;Q4.c: 211:     PORTB=dig1data;
  3299  0333  0870               	movf	dynam@dig1data,w
  3300  0334  008D               	movwf	13	;volatile
  3301  0335                     l1831:
  3302                           
  3303                           ;Q4.c: 212:     RC5=0;RC6=1;
  3304  0335  128E               	bcf	14,5	;volatile
  3305  0336                     l1833:
  3306  0336  170E               	bsf	14,6	;volatile
  3307  0337                     l1835:
  3308                           
  3309                           ;Q4.c: 213:     if(tr==5){tm=4000;}
  3310  0337  3005               	movlw	5
  3311  0338  0676               	xorwf	dynam@tr,w
  3312  0339  0477               	iorwf	dynam@tr+1,w
  3313  033A  1D03               	btfss	3,2
  3314  033B  2B3D               	goto	u1301
  3315  033C  2B3E               	goto	u1300
  3316  033D                     u1301:
  3317  033D  2B43               	goto	l1839
  3318  033E                     u1300:
  3319  033E                     l1837:
  3320  033E  30A0               	movlw	160
  3321  033F  00A2               	movwf	dynam@tm
  3322  0340  300F               	movlw	15
  3323  0341  00A3               	movwf	dynam@tm+1
  3324  0342  2B47               	goto	l112
  3325  0343                     l1839:
  3326  0343  30D0               	movlw	208
  3327  0344  00A2               	movwf	dynam@tm
  3328  0345  3007               	movlw	7
  3329  0346  00A3               	movwf	dynam@tm+1
  3330  0347                     l112:
  3331                           
  3332                           ;Q4.c: 215:     for(j=tm;j>0;--j);
  3333  0347  0823               	movf	dynam@tm+1,w
  3334  0348  00A5               	movwf	dynam@j+1
  3335  0349  0822               	movf	dynam@tm,w
  3336  034A  00A4               	movwf	dynam@j
  3337  034B                     l1841:
  3338  034B  0824               	movf	dynam@j,w
  3339  034C  0425               	iorwf	dynam@j+1,w
  3340  034D  1D03               	btfss	3,2
  3341  034E  2B50               	goto	u1311
  3342  034F  2B51               	goto	u1310
  3343  0350                     u1311:
  3344  0350  2B52               	goto	l1845
  3345  0351                     u1310:
  3346  0351  2B57               	goto	l114
  3347  0352                     l1845:
  3348  0352  3001               	movlw	1
  3349  0353  02A4               	subwf	dynam@j,f
  3350  0354  3000               	movlw	0
  3351  0355  3BA5               	subwfb	dynam@j+1,f
  3352  0356  2B4B               	goto	l1841
  3353  0357                     l114:
  3354                           
  3355                           ;Q4.c: 216:     RC5=0;RC6=0;
  3356  0357  128E               	bcf	14,5	;volatile
  3357  0358  130E               	bcf	14,6	;volatile
  3358  0359                     l1849:
  3359                           
  3360                           ;Q4.c: 217:     PORTB=dig2data;
  3361  0359  0872               	movf	dynam@dig2data,w
  3362  035A  008D               	movwf	13	;volatile
  3363  035B                     l1851:
  3364                           
  3365                           ;Q4.c: 218:     RC6=0;RC5=1;
  3366  035B  130E               	bcf	14,6	;volatile
  3367  035C                     l1853:
  3368  035C  168E               	bsf	14,5	;volatile
  3369  035D                     l1855:
  3370                           
  3371                           ;Q4.c: 219:     if(tr==5){tm=4000;}
  3372  035D  3005               	movlw	5
  3373  035E  0676               	xorwf	dynam@tr,w
  3374  035F  0477               	iorwf	dynam@tr+1,w
  3375  0360  1D03               	btfss	3,2
  3376  0361  2B63               	goto	u1321
  3377  0362  2B64               	goto	u1320
  3378  0363                     u1321:
  3379  0363  2B69               	goto	l1859
  3380  0364                     u1320:
  3381  0364                     l1857:
  3382  0364  30A0               	movlw	160
  3383  0365  00A2               	movwf	dynam@tm
  3384  0366  300F               	movlw	15
  3385  0367  00A3               	movwf	dynam@tm+1
  3386  0368  2B6D               	goto	l116
  3387  0369                     l1859:
  3388  0369  30D0               	movlw	208
  3389  036A  00A2               	movwf	dynam@tm
  3390  036B  3007               	movlw	7
  3391  036C  00A3               	movwf	dynam@tm+1
  3392  036D                     l116:
  3393                           
  3394                           ;Q4.c: 221:     for(j=tm;j>0;--j);
  3395  036D  0823               	movf	dynam@tm+1,w
  3396  036E  00A5               	movwf	dynam@j+1
  3397  036F  0822               	movf	dynam@tm,w
  3398  0370  00A4               	movwf	dynam@j
  3399  0371                     l1861:
  3400  0371  0824               	movf	dynam@j,w
  3401  0372  0425               	iorwf	dynam@j+1,w
  3402  0373  1D03               	btfss	3,2
  3403  0374  2B76               	goto	u1331
  3404  0375  2B77               	goto	u1330
  3405  0376                     u1331:
  3406  0376  2B78               	goto	l1865
  3407  0377                     u1330:
  3408  0377  2B7D               	goto	l118
  3409  0378                     l1865:
  3410  0378  3001               	movlw	1
  3411  0379  02A4               	subwf	dynam@j,f
  3412  037A  3000               	movlw	0
  3413  037B  3BA5               	subwfb	dynam@j+1,f
  3414  037C  2B71               	goto	l1861
  3415  037D                     l118:
  3416                           
  3417                           ;Q4.c: 222:     RC5=0;RC6=0;
  3418  037D  128E               	bcf	14,5	;volatile
  3419  037E  130E               	bcf	14,6	;volatile
  3420                           
  3421                           ;Q4.c: 223:     switch(smdata){
  3422  037F  2C84               	goto	l1975
  3423  0380                     l1869:
  3424                           
  3425                           ;Q4.c: 225:                 PORTB=0x00;smd=(0x01|0x02|0x04|0x08|0x10|0x20);
  3426  0380  018D               	clrf	13	;volatile
  3427  0381                     l1871:
  3428  0381                     l1873:
  3429                           
  3430                           ;Q4.c: 226:                 RC7=0;RC7=1;RC7=0;
  3431  0381  138E               	bcf	14,7	;volatile
  3432  0382                     l1875:
  3433  0382  178E               	bsf	14,7	;volatile
  3434  0383                     l1877:
  3435  0383  138E               	bcf	14,7	;volatile
  3436                           
  3437                           ;Q4.c: 227:                 break;
  3438  0384  2C94               	goto	l135
  3439  0385                     l1879:
  3440                           
  3441                           ;Q4.c: 229:                 if(flg==1)cw=0;flg=0;
  3442  0385  035C               	decf	_flg,w
  3443  0386  045D               	iorwf	_flg+1,w
  3444  0387  1D03               	btfss	3,2
  3445  0388  2B8A               	goto	u1341
  3446  0389  2B8B               	goto	u1340
  3447  038A                     u1341:
  3448  038A  2B8D               	goto	l123
  3449  038B                     u1340:
  3450  038B                     l1881:
  3451  038B  01DA               	clrf	_cw
  3452  038C  01DB               	clrf	_cw+1
  3453  038D                     l123:
  3454  038D  01DC               	clrf	_flg
  3455  038E  01DD               	clrf	_flg+1
  3456  038F                     l1883:
  3457                           
  3458                           ;Q4.c: 230:                 if((cw==0)&&(ext==0)){cw=1;ccw=0;ext=1;PORTB=smd=0x09;}
  3459  038F  085A               	movf	_cw,w
  3460  0390  045B               	iorwf	_cw+1,w
  3461  0391  1D03               	btfss	3,2
  3462  0392  2B94               	goto	u1351
  3463  0393  2B95               	goto	u1350
  3464  0394                     u1351:
  3465  0394  2BAB               	goto	l1895
  3466  0395                     u1350:
  3467  0395                     l1885:
  3468  0395  0826               	movf	dynam@ext,w
  3469  0396  0427               	iorwf	dynam@ext+1,w
  3470  0397  1D03               	btfss	3,2
  3471  0398  2B9A               	goto	u1361
  3472  0399  2B9B               	goto	u1360
  3473  039A                     u1361:
  3474  039A  2BAB               	goto	l1895
  3475  039B                     u1360:
  3476  039B                     l1887:
  3477  039B  3001               	movlw	1
  3478  039C  00DA               	movwf	_cw
  3479  039D  3000               	movlw	0
  3480  039E  00DB               	movwf	_cw+1
  3481  039F                     l1889:
  3482  039F  01D8               	clrf	_ccw
  3483  03A0  01D9               	clrf	_ccw+1
  3484  03A1                     l1891:
  3485  03A1  3001               	movlw	1
  3486  03A2  00A6               	movwf	dynam@ext
  3487  03A3  3000               	movlw	0
  3488  03A4  00A7               	movwf	dynam@ext+1
  3489  03A5                     l1893:
  3490  03A5  3009               	movlw	9
  3491  03A6  00A0               	movwf	dynam@smd
  3492  03A7  3000               	movlw	0
  3493  03A8  00A1               	movwf	dynam@smd+1
  3494  03A9  0820               	movf	dynam@smd,w
  3495  03AA  008D               	movwf	13	;volatile
  3496  03AB                     l1895:
  3497                           
  3498                           ;Q4.c: 231:                 if((cw==1)&&(ext==0)){cw=2;ccw=3;ext=1;PORTB=smd=0x0C;}
  3499  03AB  035A               	decf	_cw,w
  3500  03AC  045B               	iorwf	_cw+1,w
  3501  03AD  1D03               	btfss	3,2
  3502  03AE  2BB0               	goto	u1371
  3503  03AF  2BB1               	goto	u1370
  3504  03B0                     u1371:
  3505  03B0  2BC9               	goto	l1901
  3506  03B1                     u1370:
  3507  03B1                     l1897:
  3508  03B1  0826               	movf	dynam@ext,w
  3509  03B2  0427               	iorwf	dynam@ext+1,w
  3510  03B3  1D03               	btfss	3,2
  3511  03B4  2BB6               	goto	u1381
  3512  03B5  2BB7               	goto	u1380
  3513  03B6                     u1381:
  3514  03B6  2BC9               	goto	l1901
  3515  03B7                     u1380:
  3516  03B7                     l1899:
  3517  03B7  3002               	movlw	2
  3518  03B8  00DA               	movwf	_cw
  3519  03B9  3000               	movlw	0
  3520  03BA  00DB               	movwf	_cw+1
  3521  03BB  3003               	movlw	3
  3522  03BC  00D8               	movwf	_ccw
  3523  03BD  3000               	movlw	0
  3524  03BE  00D9               	movwf	_ccw+1
  3525  03BF  3001               	movlw	1
  3526  03C0  00A6               	movwf	dynam@ext
  3527  03C1  3000               	movlw	0
  3528  03C2  00A7               	movwf	dynam@ext+1
  3529  03C3  300C               	movlw	12
  3530  03C4  00A0               	movwf	dynam@smd
  3531  03C5  3000               	movlw	0
  3532  03C6  00A1               	movwf	dynam@smd+1
  3533  03C7  0820               	movf	dynam@smd,w
  3534  03C8  008D               	movwf	13	;volatile
  3535  03C9                     l1901:
  3536                           
  3537                           ;Q4.c: 232:                 if((cw==2)&&(ext==0)){cw=3;ccw=2;ext=1;PORTB=smd=0x06;}
  3538  03C9  3002               	movlw	2
  3539  03CA  065A               	xorwf	_cw,w
  3540  03CB  045B               	iorwf	_cw+1,w
  3541  03CC  1D03               	btfss	3,2
  3542  03CD  2BCF               	goto	u1391
  3543  03CE  2BD0               	goto	u1390
  3544  03CF                     u1391:
  3545  03CF  2BE8               	goto	l1907
  3546  03D0                     u1390:
  3547  03D0                     l1903:
  3548  03D0  0826               	movf	dynam@ext,w
  3549  03D1  0427               	iorwf	dynam@ext+1,w
  3550  03D2  1D03               	btfss	3,2
  3551  03D3  2BD5               	goto	u1401
  3552  03D4  2BD6               	goto	u1400
  3553  03D5                     u1401:
  3554  03D5  2BE8               	goto	l1907
  3555  03D6                     u1400:
  3556  03D6                     l1905:
  3557  03D6  3003               	movlw	3
  3558  03D7  00DA               	movwf	_cw
  3559  03D8  3000               	movlw	0
  3560  03D9  00DB               	movwf	_cw+1
  3561  03DA  3002               	movlw	2
  3562  03DB  00D8               	movwf	_ccw
  3563  03DC  3000               	movlw	0
  3564  03DD  00D9               	movwf	_ccw+1
  3565  03DE  3001               	movlw	1
  3566  03DF  00A6               	movwf	dynam@ext
  3567  03E0  3000               	movlw	0
  3568  03E1  00A7               	movwf	dynam@ext+1
  3569  03E2  3006               	movlw	6
  3570  03E3  00A0               	movwf	dynam@smd
  3571  03E4  3000               	movlw	0
  3572  03E5  00A1               	movwf	dynam@smd+1
  3573  03E6  0820               	movf	dynam@smd,w
  3574  03E7  008D               	movwf	13	;volatile
  3575  03E8                     l1907:
  3576                           
  3577                           ;Q4.c: 233:                 if((cw==3)&&(ext==0)){cw=0;ccw=1;ext=1;PORTB=smd=0x03;}
  3578  03E8  3003               	movlw	3
  3579  03E9  065A               	xorwf	_cw,w
  3580  03EA  045B               	iorwf	_cw+1,w
  3581  03EB  1D03               	btfss	3,2
  3582  03EC  2BEE               	goto	u1411
  3583  03ED  2BEF               	goto	u1410
  3584  03EE                     u1411:
  3585  03EE  2B81               	goto	l1873
  3586  03EF                     u1410:
  3587  03EF                     l1909:
  3588  03EF  0826               	movf	dynam@ext,w
  3589  03F0  0427               	iorwf	dynam@ext+1,w
  3590  03F1  1D03               	btfss	3,2
  3591  03F2  2BF4               	goto	u1421
  3592  03F3  2BF5               	goto	u1420
  3593  03F4                     u1421:
  3594  03F4  2B81               	goto	l1873
  3595  03F5                     u1420:
  3596  03F5                     l1911:
  3597  03F5  01DA               	clrf	_cw
  3598  03F6  01DB               	clrf	_cw+1
  3599  03F7                     l1913:
  3600  03F7  3001               	movlw	1
  3601  03F8  00D8               	movwf	_ccw
  3602  03F9  3000               	movlw	0
  3603  03FA  00D9               	movwf	_ccw+1
  3604  03FB                     l1915:
  3605  03FB                     l1917:
  3606  03FB  3003               	movlw	3
  3607  03FC  00A0               	movwf	dynam@smd
  3608  03FD  3000               	movlw	0
  3609  03FE  00A1               	movwf	dynam@smd+1
  3610  03FF  0820               	movf	dynam@smd,w
  3611  0400  008D               	movwf	13	;volatile
  3612  0401  2B81               	goto	l1873
  3613  0402                     l1925:
  3614                           
  3615                           ;Q4.c: 237:                 if(flg==1)ccw=0;flg=0;
  3616  0402  035C               	decf	_flg,w
  3617  0403  045D               	iorwf	_flg+1,w
  3618  0404  1D03               	btfss	3,2
  3619  0405  2C07               	goto	u1431
  3620  0406  2C08               	goto	u1430
  3621  0407                     u1431:
  3622  0407  2C0A               	goto	l129
  3623  0408                     u1430:
  3624  0408                     l1927:
  3625  0408  01D8               	clrf	_ccw
  3626  0409  01D9               	clrf	_ccw+1
  3627  040A                     l129:
  3628  040A  01DC               	clrf	_flg
  3629  040B  01DD               	clrf	_flg+1
  3630  040C                     l1929:
  3631                           
  3632                           ;Q4.c: 238:                 if((ccw==0)&&(ext==0)){ccw=1;cw=0;ext=1;PORTB=smd=0x03;}
  3633  040C  0858               	movf	_ccw,w
  3634  040D  0459               	iorwf	_ccw+1,w
  3635  040E  1D03               	btfss	3,2
  3636  040F  2C11               	goto	u1441
  3637  0410  2C12               	goto	u1440
  3638  0411                     u1441:
  3639  0411  2C28               	goto	l1941
  3640  0412                     u1440:
  3641  0412                     l1931:
  3642  0412  0826               	movf	dynam@ext,w
  3643  0413  0427               	iorwf	dynam@ext+1,w
  3644  0414  1D03               	btfss	3,2
  3645  0415  2C17               	goto	u1451
  3646  0416  2C18               	goto	u1450
  3647  0417                     u1451:
  3648  0417  2C28               	goto	l1941
  3649  0418                     u1450:
  3650  0418                     l1933:
  3651  0418  3001               	movlw	1
  3652  0419  00D8               	movwf	_ccw
  3653  041A  3000               	movlw	0
  3654  041B  00D9               	movwf	_ccw+1
  3655  041C                     l1935:
  3656  041C  01DA               	clrf	_cw
  3657  041D  01DB               	clrf	_cw+1
  3658  041E                     l1937:
  3659  041E  3001               	movlw	1
  3660  041F  00A6               	movwf	dynam@ext
  3661  0420  3000               	movlw	0
  3662  0421  00A7               	movwf	dynam@ext+1
  3663  0422                     l1939:
  3664  0422  3003               	movlw	3
  3665  0423  00A0               	movwf	dynam@smd
  3666  0424  3000               	movlw	0
  3667  0425  00A1               	movwf	dynam@smd+1
  3668  0426  0820               	movf	dynam@smd,w
  3669  0427  008D               	movwf	13	;volatile
  3670  0428                     l1941:
  3671                           
  3672                           ;Q4.c: 239:                 if((ccw==1)&&(ext==0)){ccw=2;cw=3;ext=1;PORTB=smd=0x06;}
  3673  0428  0358               	decf	_ccw,w
  3674  0429  0459               	iorwf	_ccw+1,w
  3675  042A  1D03               	btfss	3,2
  3676  042B  2C2D               	goto	u1461
  3677  042C  2C2E               	goto	u1460
  3678  042D                     u1461:
  3679  042D  2C46               	goto	l1947
  3680  042E                     u1460:
  3681  042E                     l1943:
  3682  042E  0826               	movf	dynam@ext,w
  3683  042F  0427               	iorwf	dynam@ext+1,w
  3684  0430  1D03               	btfss	3,2
  3685  0431  2C33               	goto	u1471
  3686  0432  2C34               	goto	u1470
  3687  0433                     u1471:
  3688  0433  2C46               	goto	l1947
  3689  0434                     u1470:
  3690  0434                     l1945:
  3691  0434  3002               	movlw	2
  3692  0435  00D8               	movwf	_ccw
  3693  0436  3000               	movlw	0
  3694  0437  00D9               	movwf	_ccw+1
  3695  0438  3003               	movlw	3
  3696  0439  00DA               	movwf	_cw
  3697  043A  3000               	movlw	0
  3698  043B  00DB               	movwf	_cw+1
  3699  043C  3001               	movlw	1
  3700  043D  00A6               	movwf	dynam@ext
  3701  043E  3000               	movlw	0
  3702  043F  00A7               	movwf	dynam@ext+1
  3703  0440  3006               	movlw	6
  3704  0441  00A0               	movwf	dynam@smd
  3705  0442  3000               	movlw	0
  3706  0443  00A1               	movwf	dynam@smd+1
  3707  0444  0820               	movf	dynam@smd,w
  3708  0445  008D               	movwf	13	;volatile
  3709  0446                     l1947:
  3710                           
  3711                           ;Q4.c: 240:                 if((ccw==2)&&(ext==0)){ccw=3;cw=2;ext=1;PORTB=smd=0x0C;}
  3712  0446  3002               	movlw	2
  3713  0447  0658               	xorwf	_ccw,w
  3714  0448  0459               	iorwf	_ccw+1,w
  3715  0449  1D03               	btfss	3,2
  3716  044A  2C4C               	goto	u1481
  3717  044B  2C4D               	goto	u1480
  3718  044C                     u1481:
  3719  044C  2C65               	goto	l1953
  3720  044D                     u1480:
  3721  044D                     l1949:
  3722  044D  0826               	movf	dynam@ext,w
  3723  044E  0427               	iorwf	dynam@ext+1,w
  3724  044F  1D03               	btfss	3,2
  3725  0450  2C52               	goto	u1491
  3726  0451  2C53               	goto	u1490
  3727  0452                     u1491:
  3728  0452  2C65               	goto	l1953
  3729  0453                     u1490:
  3730  0453                     l1951:
  3731  0453  3003               	movlw	3
  3732  0454  00D8               	movwf	_ccw
  3733  0455  3000               	movlw	0
  3734  0456  00D9               	movwf	_ccw+1
  3735  0457  3002               	movlw	2
  3736  0458  00DA               	movwf	_cw
  3737  0459  3000               	movlw	0
  3738  045A  00DB               	movwf	_cw+1
  3739  045B  3001               	movlw	1
  3740  045C  00A6               	movwf	dynam@ext
  3741  045D  3000               	movlw	0
  3742  045E  00A7               	movwf	dynam@ext+1
  3743  045F  300C               	movlw	12
  3744  0460  00A0               	movwf	dynam@smd
  3745  0461  3000               	movlw	0
  3746  0462  00A1               	movwf	dynam@smd+1
  3747  0463  0820               	movf	dynam@smd,w
  3748  0464  008D               	movwf	13	;volatile
  3749  0465                     l1953:
  3750                           
  3751                           ;Q4.c: 241:                 if((ccw==3)&&(ext==0)){ccw=0;cw=1;ext=1;PORTB=smd=0x09;}
  3752  0465  3003               	movlw	3
  3753  0466  0658               	xorwf	_ccw,w
  3754  0467  0459               	iorwf	_ccw+1,w
  3755  0468  1D03               	btfss	3,2
  3756  0469  2C6B               	goto	u1501
  3757  046A  2C6C               	goto	u1500
  3758  046B                     u1501:
  3759  046B  2B81               	goto	l1873
  3760  046C                     u1500:
  3761  046C                     l1955:
  3762  046C  0826               	movf	dynam@ext,w
  3763  046D  0427               	iorwf	dynam@ext+1,w
  3764  046E  1D03               	btfss	3,2
  3765  046F  2C71               	goto	u1511
  3766  0470  2C72               	goto	u1510
  3767  0471                     u1511:
  3768  0471  2B81               	goto	l1873
  3769  0472                     u1510:
  3770  0472                     l1957:
  3771  0472  01D8               	clrf	_ccw
  3772  0473  01D9               	clrf	_ccw+1
  3773  0474                     l1959:
  3774  0474  3001               	movlw	1
  3775  0475  00DA               	movwf	_cw
  3776  0476  3000               	movlw	0
  3777  0477  00DB               	movwf	_cw+1
  3778  0478                     l1961:
  3779  0478                     l1963:
  3780  0478  3009               	movlw	9
  3781  0479  00A0               	movwf	dynam@smd
  3782  047A  3000               	movlw	0
  3783  047B  00A1               	movwf	dynam@smd+1
  3784  047C  0820               	movf	dynam@smd,w
  3785  047D  008D               	movwf	13	;volatile
  3786  047E  2B81               	goto	l1873
  3787  047F                     l1971:
  3788                           
  3789                           ;Q4.c: 245:                 cw=ccw=0;
  3790  047F  01D8               	clrf	_ccw
  3791  0480  01D9               	clrf	_ccw+1
  3792  0481  01DA               	clrf	_cw
  3793  0482  01DB               	clrf	_cw+1
  3794                           
  3795                           ;Q4.c: 246:                 break;
  3796  0483  2C94               	goto	l135
  3797  0484                     l1975:
  3798                           
  3799                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3800                           ; Switch size 1, requested type "simple"
  3801                           ; Number of cases is 1, Range of values is 0 to 0
  3802                           ; switch strategies available:
  3803                           ; Name         Instructions Cycles
  3804                           ; simple_byte            4     3 (average)
  3805                           ; direct_byte            8     6 (fixed)
  3806                           ; jumptable            260     6 (fixed)
  3807                           ;	Chosen strategy is simple_byte
  3808  0484  0875               	movf	dynam@smdata+1,w
  3809  0485  3A00               	xorlw	0	; case 0
  3810  0486  1903               	skipnz
  3811  0487  2C89               	goto	l2711
  3812  0488  2C7F               	goto	l1971
  3813  0489                     l2711:
  3814                           
  3815                           ; Switch size 1, requested type "simple"
  3816                           ; Number of cases is 3, Range of values is 0 to 2
  3817                           ; switch strategies available:
  3818                           ; Name         Instructions Cycles
  3819                           ; simple_byte           10     6 (average)
  3820                           ; direct_byte           12     6 (fixed)
  3821                           ; jumptable            260     6 (fixed)
  3822                           ;	Chosen strategy is simple_byte
  3823  0489  0874               	movf	dynam@smdata,w
  3824  048A  3A00               	xorlw	0	; case 0
  3825  048B  1903               	skipnz
  3826  048C  2B80               	goto	l1869
  3827  048D  3A01               	xorlw	1	; case 1
  3828  048E  1903               	skipnz
  3829  048F  2B85               	goto	l1879
  3830  0490  3A03               	xorlw	3	; case 2
  3831  0491  1903               	skipnz
  3832  0492  2C02               	goto	l1925
  3833  0493  2C7F               	goto	l1971
  3834  0494                     l135:
  3835  0494  0008               	return
  3836  0495                     __end_of_dynam:
  3837                           
  3838                           	psect	text11
  3839  0054                     __ptext11:	
  3840 ;; *************** function _jikan *****************
  3841 ;; Defined at:
  3842 ;;		line 406 in file "Q4.c"
  3843 ;; Parameters:    Size  Location     Type
  3844 ;;		None
  3845 ;; Auto vars:     Size  Location     Type
  3846 ;;		None
  3847 ;; Return value:  Size  Location     Type
  3848 ;;                  1    wreg      void 
  3849 ;; Registers used:
  3850 ;;		wreg, status,2
  3851 ;; Tracked objects:
  3852 ;;		On entry : 0/0
  3853 ;;		On exit  : 0/0
  3854 ;;		Unchanged: 0/0
  3855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3860 ;;Total ram usage:        0 bytes
  3861 ;; Hardware stack levels used:    1
  3862 ;; This function calls:
  3863 ;;		Nothing
  3864 ;; This function is called by:
  3865 ;;		_main
  3866 ;; This function uses a non-reentrant model
  3867 ;;
  3868                           
  3869                           
  3870                           ;psect for function _jikan
  3871  0054                     _jikan:
  3872  0054                     l2111:	
  3873                           ;incstack = 0
  3874                           ; Regs used in _jikan: [wreg+status,2]
  3875                           
  3876                           
  3877                           ;Q4.c: 408:     if(RA2==0){++count;}
  3878  0054  0020               	movlb	0	; select bank0
  3879  0055  190C               	btfsc	12,2	;volatile
  3880  0056  2858               	goto	u1701
  3881  0057  2859               	goto	u1700
  3882  0058                     u1701:
  3883  0058  285E               	goto	l2115
  3884  0059                     u1700:
  3885  0059                     l2113:
  3886  0059  3001               	movlw	1
  3887  005A  07D0               	addwf	_count,f
  3888  005B  3000               	movlw	0
  3889  005C  3DD1               	addwfc	_count+1,f
  3890  005D  2860               	goto	l232
  3891  005E                     l2115:
  3892  005E  01D0               	clrf	_count
  3893  005F  01D1               	clrf	_count+1
  3894  0060                     l232:
  3895  0060  0008               	return
  3896  0061                     __end_of_jikan:
  3897                           
  3898                           	psect	text12
  3899  0093                     __ptext12:	
  3900 ;; *************** function _fclr *****************
  3901 ;; Defined at:
  3902 ;;		line 369 in file "Q4.c"
  3903 ;; Parameters:    Size  Location     Type
  3904 ;;  flg             2    0[COMMON] unsigned short 
  3905 ;; Auto vars:     Size  Location     Type
  3906 ;;		None
  3907 ;; Return value:  Size  Location     Type
  3908 ;;                  1    wreg      void 
  3909 ;; Registers used:
  3910 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3911 ;; Tracked objects:
  3912 ;;		On entry : 0/0
  3913 ;;		On exit  : 0/0
  3914 ;;		Unchanged: 0/0
  3915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3916 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3919 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3920 ;;Total ram usage:        2 bytes
  3921 ;; Hardware stack levels used:    1
  3922 ;; This function calls:
  3923 ;;		Nothing
  3924 ;; This function is called by:
  3925 ;;		_main
  3926 ;;		_kaisu
  3927 ;; This function uses a non-reentrant model
  3928 ;;
  3929                           
  3930                           
  3931                           ;psect for function _fclr
  3932  0093                     _fclr:
  3933  0093                     l2095:	
  3934                           ;incstack = 0
  3935                           ; Regs used in _fclr: [wreg-fsr0h+status,2+status,0]
  3936                           
  3937                           
  3938                           ;Q4.c: 369: void fclr(unsigned short flg);Q4.c: 370: {;Q4.c: 371:     switch(flg){
  3939  0093  28A2               	goto	l2105
  3940  0094                     l2097:
  3941                           
  3942                           ;Q4.c: 373:                     flag_R=0;
  3943  0094  0020               	movlb	0	; select bank0
  3944  0095  01E0               	clrf	_flag_R
  3945  0096  01E1               	clrf	_flag_R+1
  3946                           
  3947                           ;Q4.c: 374:                     break;
  3948  0097  28B2               	goto	l217
  3949  0098                     l2099:
  3950                           
  3951                           ;Q4.c: 376:                     flag_P=0;
  3952  0098  0020               	movlb	0	; select bank0
  3953  0099  01DE               	clrf	_flag_P
  3954  009A  01DF               	clrf	_flag_P+1
  3955                           
  3956                           ;Q4.c: 377:                     break;
  3957  009B  28B2               	goto	l217
  3958  009C                     l2101:
  3959                           
  3960                           ;Q4.c: 379:                     flag_P=flag_R=0;
  3961  009C  0020               	movlb	0	; select bank0
  3962  009D  01E0               	clrf	_flag_R
  3963  009E  01E1               	clrf	_flag_R+1
  3964  009F  01DE               	clrf	_flag_P
  3965  00A0  01DF               	clrf	_flag_P+1
  3966                           
  3967                           ;Q4.c: 380:                     break;
  3968  00A1  28B2               	goto	l217
  3969  00A2                     l2105:
  3970                           
  3971                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3972                           ; Switch size 1, requested type "simple"
  3973                           ; Number of cases is 1, Range of values is 0 to 0
  3974                           ; switch strategies available:
  3975                           ; Name         Instructions Cycles
  3976                           ; simple_byte            4     3 (average)
  3977                           ; direct_byte            8     6 (fixed)
  3978                           ; jumptable            260     6 (fixed)
  3979                           ;	Chosen strategy is simple_byte
  3980  00A2  0871               	movf	fclr@flg+1,w
  3981  00A3  3A00               	xorlw	0	; case 0
  3982  00A4  1903               	skipnz
  3983  00A5  28A7               	goto	l2713
  3984  00A6  28B2               	goto	l217
  3985  00A7                     l2713:
  3986                           
  3987                           ; Switch size 1, requested type "simple"
  3988                           ; Number of cases is 3, Range of values is 0 to 2
  3989                           ; switch strategies available:
  3990                           ; Name         Instructions Cycles
  3991                           ; simple_byte           10     6 (average)
  3992                           ; direct_byte           12     6 (fixed)
  3993                           ; jumptable            260     6 (fixed)
  3994                           ;	Chosen strategy is simple_byte
  3995  00A7  0870               	movf	fclr@flg,w
  3996  00A8  3A00               	xorlw	0	; case 0
  3997  00A9  1903               	skipnz
  3998  00AA  2894               	goto	l2097
  3999  00AB  3A01               	xorlw	1	; case 1
  4000  00AC  1903               	skipnz
  4001  00AD  2898               	goto	l2099
  4002  00AE  3A03               	xorlw	3	; case 2
  4003  00AF  1903               	skipnz
  4004  00B0  289C               	goto	l2101
  4005  00B1  28B2               	goto	l217
  4006  00B2                     l217:
  4007  00B2  0008               	return
  4008  00B3                     __end_of_fclr:
  4009  007E                     btemp	set	126	;btemp
  4010  007E                     wtemp0	set	126
  4011                           
  4012                           	psect	config
  4013                           
  4014                           ;Config register CONFIG1 @ 0x8007
  4015                           ;	Oscillator Selection
  4016                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  4017                           ;	Watchdog Timer Enable
  4018                           ;	WDTE = OFF, WDT disabled
  4019                           ;	Power-up Timer Enable
  4020                           ;	PWRTE = OFF, PWRT disabled
  4021                           ;	MCLR Pin Function Select
  4022                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  4023                           ;	Flash Program Memory Code Protection
  4024                           ;	CP = OFF, Program memory code protection is disabled
  4025                           ;	Data Memory Code Protection
  4026                           ;	CPD = OFF, Data memory code protection is disabled
  4027                           ;	Brown-out Reset Enable
  4028                           ;	BOREN = OFF, Brown-out Reset disabled
  4029                           ;	Clock Out Enable
  4030                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  4031                           ;	Internal/External Switchover
  4032                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4033                           ;	Fail-Safe Clock Monitor Enable
  4034                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4035  8007                     	org	32775
  4036  8007  09E4               	dw	2532
  4037                           
  4038                           ;Config register CONFIG2 @ 0x8008
  4039                           ;	Flash Memory Self-Write Protection
  4040                           ;	WRT = OFF, Write protection off
  4041                           ;	Voltage Regulator Capacitor Enable
  4042                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
  4043                           ;	PLL Enable
  4044                           ;	PLLEN = OFF, 4x PLL disabled
  4045                           ;	Stack Overflow/Underflow Reset Enable
  4046                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  4047                           ;	Brown-out Reset Voltage Selection
  4048                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  4049                           ;	Low-Voltage Programming Enable
  4050                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  4051  8008                     	org	32776
  4052  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    0
    Data        156
    BSS         34
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     38      80
    BANK1            80      0      72
    BANK2            80      0      76
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_motor
    _main->_wait
    _main->_waitSEG
    _waitSEG->_tact
    _wait->___wmul
    _motor->_tact
    _tact->_tactsw

Critical Paths under _main in BANK0

    _main->_motor
    _waitSEG->_dynam
    _motor->_dynam

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0   18272
                                             12 COMMON     1     1      0
                                             24 BANK0     14    14      0
                              _dynam
                               _fclr
                              _jikan
                              _motor
                           _portinit
                               _wait
                            _waitSEG
                             _zenoff
 ---------------------------------------------------------------------------------
 (1) _zenoff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _waitSEG                                             14     8      6    5412
                                             10 COMMON     2     2      0
                                              8 BANK0     12     6      6
                            ___lwdiv
                              _dynam
                               _tact
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _wait                                                 6     4      2    1498
                                              6 COMMON     6     4      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _portinit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motor                                               18     8     10    7703
                                             10 COMMON     2     2      0
                                              8 BANK0     16     6     10
                              _dynam
                               _tact
 ---------------------------------------------------------------------------------
 (2) _tact                                                 2     0      2     442
                                              8 COMMON     2     0      2
                             _tactsw
 ---------------------------------------------------------------------------------
 (3) _tactsw                                               8     8      0     116
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 (2) _dynam                                               16     8      8    2879
                                              0 COMMON     8     0      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (1) _jikan                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _fclr                                                 2     0      2     250
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _dynam
   _fclr
   _jikan
   _motor
     _dynam
     _tact
       _tactsw
   _portinit
   _wait
     ___wmul
   _waitSEG
     ___lwdiv
     _dynam
     _tact
       _tactsw
   _zenoff

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     26      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      48       7       90.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      4C       9       95.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      F1      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      F1      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 26 16:40:07 2021

                     l95 0073                       _cw 005A      ___wmul@multiplicand 0072  
                    l102 00DC                      l112 0347                      l114 0357  
                    l123 038D                      l116 036D                      l108 0053  
                    l300 066B                      l118 037D                      l135 0494  
                    l232 0060                      l208 01E8                      l217 00B2  
                    l129 040A                      l261 032A                      l280 04AB  
                    l193 0155                      l290 057F                      l269 02A7  
                    l285 0509                      l278 049E                      l295 05F5  
                    l481 0092                      l479 007E                      l759 0118  
                    _RA0 0060                      _RA1 0061                      _RA2 0062  
                    _RC0 0070                      _RC1 0071                      _RC2 0072  
                    _RC5 0075                      _RC6 0076                      _RC7 0077  
                    _ccw 0058                      _flg 005C                      wreg 0009  
                   l2001 01CB                     l2003 01D1                     l2101 009C  
                   l2021 0083                     l2111 0054                     l2023 0088  
                   l2015 0074                     l2031 00DF                     l2105 00A2  
                   l2113 0059                     l2009 01D8                     l2025 008E  
                   l2017 0076                     l2041 00F5                     l2033 00E5  
                   l2121 02CF                     l2115 005E                     l2019 007A  
                   l2043 0104                     l2035 00E8                     l2051 0114  
                   l2131 0303                     l2123 02D3                     l2061 006E  
                   l2045 0108                     l2037 00ED                     l2029 00DD  
                   l2141 0325                     l2133 0314                     l2117 02A8  
                   l2063 0071                     l2055 0061                     l2071 00C9  
                   l2047 0109                     l2039 00F1                     l2135 031A  
                   l2127 02DA                     l2119 02BF                     l2161 0297  
                   l2153 0255                     l2145 0235                     l2057 0064  
                   l2081 00D7                     l2065 00B3                     l2049 010E  
                   l2137 0320                     l2129 02F1                     l2163 029D  
                   l2155 026E                     l2147 024C                     l2059 0067  
                   l2067 00C2                     l2091 0051                     l2411 049E  
                   l2157 0280                     l2149 0250                     l2077 00CD  
                   l2093 0052                     l2085 004B                     l2501 06A6  
                   l2421 04A7                     l2413 049E                     l2405 0495  
                   l2095 0093                     l2167 02A2                     l2159 0291  
                   l2079 00D1                     l2087 004F                     l2511 06D2  
                   l2431 04CA                     l2423 04BC                     l2415 049E  
                   l2407 0498                     l2097 0094                     l2089 0050  
                   l2521 06F3                     l2513 06D5                     l2441 051A  
                   l2433 04DD                     l2425 04C3                     l2417 049E  
                   l2409 049E                     l2099 0098                     l1811 0129  
                   l2531 0745                     l2523 0713                     l2515 06DC  
                   l2507 06AA                     l2451 0559                     l2443 051F  
                   l2435 04E3                     l2427 04C6                     l2419 04A3  
                   l1901 03C9                     l1813 0133                     l2541 075E  
                   l2533 074A                     l2525 0718                     l2517 06E9  
                   l2509 06BD                     l2453 0560                     l2437 04EA  
                   l2429 04C6                     l2711 0489                     l1911 03F5  
                   l1903 03D0                     l1831 0335                     l1823 0150  
                   l1815 0138                     l1807 0119                     l2551 07AC  
                   l2543 0761                     l2535 074E                     l2527 0726  
                   l2519 06F0                     l2471 05EE                     l2455 0578  
                   l2463 059A                     l2439 0502                     l2447 0524  
                   l2713 00A7                     l1913 03F7                     l1905 03D6  
                   l1841 034B                     l1833 0336                     l1825 032B  
                   l1817 013A                     l1809 011D                     l2553 07B3  
                   l2545 0781                     l2529 073E                     l2537 0751  
                   l2561 07C1                     l2481 063F                     l2473 0606  
                   l2465 05C9                     l2457 0590                     l2449 0553  
                   l1931 0412                     l1915 03FB                     l1907 03E8  
                   l1851 035B                     l1835 0337                     l1827 0332  
                   l1819 0143                     l2563 07C6                     l2555 07B8  
                   l2547 0786                     l2539 0758                     l2491 0681  
                   l2483 0645                     l2475 060B                     l2467 05CF  
                   l2459 0595                     l1933 0418                     l1941 0428  
                   l1925 0402                     l1917 03FB                     l1909 03EF  
                   l1861 0371                     l1853 035C                     l1845 0352  
                   l1837 033E                     l1829 0333                     l2709 01DD  
                   l2565 07CA                     l2549 0794                     l2485 064C  
                   l2469 05D6                     l1951 0453                     l1943 042E  
                   l1935 041C                     l1927 0408                     l1871 0381  
                   l1855 035D                     l1839 0343                     l2559 07BD  
                   l2487 0664                     l2495 0686                     l2479 0610  
                   l1961 0478                     l1953 0465                     l1945 0434  
                   l1937 041E                     l1929 040C                     l1881 038B  
                   l1873 0381                     l1865 0378                     l1857 0364  
                   l1849 0359                     l2489 067C                     l2497 069D  
                   l1971 047F                     l1963 0478                     l1955 046C  
                   l1947 0446                     l1939 0422                     l1891 03A1  
                   l1883 038F                     l1875 0382                     l1859 0369  
                   l2499 06A2                     l1957 0472                     l1949 044D  
                   l1893 03A5                     l1885 0395                     l1877 0383  
                   l1869 0380                     l1981 019E                     l1959 0474  
                   l1887 039B                     l1895 03AB                     l1879 0385  
                   l1975 0484                     l1991 01B1                     l1983 019F  
                   l1897 03B1                     l1889 039F                     l1993 01B8  
                   l1985 01A2                     l1899 03B7                     l1995 01BD  
                   l1987 01A9                     l1997 01C0                     l1989 01AE  
                   l1999 01C7                     u1300 033E                     u1301 033D  
                   u1310 0351                     u1311 0350                     u1400 03D6  
                   u1320 0364                     u2200 04B2                     u1401 03D5  
                   u1321 0363                     u2201 04AF                     u1410 03EF  
                   u1330 0377                     u2210 04BA                     u1411 03EE  
                   u1331 0376                     u2211 04B7                     u1500 046C  
                   u1420 03F5                     u1340 038B                     u2300 05CF  
                   u1501 046B                     u1421 03F4                     u1341 038A  
                   u2301 05CE                     u1510 0472                     u1430 0408  
                   u1350 0395                     u2310 060B                     u2230 04CA  
                   u2214 04B4                     u1511 0471                     u1431 0407  
                   u1351 0394                     u2311 060A                     u2231 04C9  
                   u1440 0412                     u1360 039B                     u1280 0133  
                   u1520 01A9                     u1600 008E                     u2400 06F0  
                   u2320 060F                     u2240 04E3                     u2224 04BC  
                   u1441 0411                     u1361 039A                     u1281 0132  
                   u1521 01A8                     u1601 008D                     u2401 06EF  
                   u2321 060E                     u2241 04E2                     u1450 0418  
                   u1370 03B1                     u1290 0143                     u1530 01B8  
                   u1610 00E5                     u2410 0726                     u2330 0645  
                   u2250 051F                     u2170 04A3                     u1451 0417  
                   u1371 03B0                     u1291 0142                     u1531 01B7  
                   u1611 00E4                     u2411 0725                     u2331 0644  
                   u2251 051E                     u2171 04A2                     u1700 0059  
                   u1460 042E                     u1380 03B7                     u1540 01C7  
                   u2500 07CE                     u2420 074A                     u2340 0681  
                   u2260 0523                     u2180 04A7                     u1701 0058  
                   u1461 042D                     u1381 03B6                     u1285 012F  
                   u1541 01C6                     u2501 07CD                     u2421 0749  
                   u2341 0680                     u2261 0522                     u2181 04A6  
                   u1470 0434                     u1390 03D0                     u1550 01D1  
                   u1630 00F5                     u1710 02D9                     u2430 074E  
                   u2350 0685                     u2270 0559                     u2190 04AB  
                   u1471 0433                     u1391 03CF                     u1551 01D0  
                   u1631 00F4                     u1711 02D8                     u2431 074D  
                   u2415 0722                     u2351 0684                     u2271 0558  
                   u2191 04AA                     u1480 044D                     u1560 01D7  
                   u1800 029D                     u1720 0303                     u2440 0758  
                   u2360 06A2                     u2280 0595                     u1481 044C  
                   u1561 01D6                     u1801 029C                     u1625 00E9  
                   u1721 0302                     u2441 0757                     u2361 06A1  
                   u2281 0594                     u1490 0453                     u1570 007A  
                   u1650 0104                     u1730 0314                     u2450 075E  
                   u2370 06A6                     u2290 0599                     u1491 0452  
                   u1571 0079                     u1651 0103                     u1731 0313  
                   u2451 075D                     u2371 06A5                     u2291 0598  
                   u1740 031A                     u2460 0794                     u2380 06DC  
                   u1645 00F6                     u1741 0319                     u1725 02FF  
                   u2461 0793                     u2381 06DB                     u1670 0114  
                   u1750 0320                     u2470 07B8                     u2390 06E9  
                   u1671 0113                     u1655 0100                     u1751 031F  
                   u1735 0310                     u2471 07B7                     u2391 06E8  
                   u1760 0254                     u1680 00C8                     u2480 07BC  
                   u1761 0253                     u1585 007F                     u1681 00C7  
                   u1665 010A                     u2481 07BB                     u2465 0790  
                   u1770 0280                     u1690 00D7                     u2490 07C6  
                   u1771 027F                     u1595 0084                     u1691 00D6  
                   u2491 07C5                     u2395 06E5                     u1780 0291  
                   u1781 0290                     u1790 0297                     u1791 0296  
                   u1775 027C                     u1785 028D                     _atai 0052  
                   _fclr 0093                     _main 0495                     _num0 00C0  
                   _kisu 00D4                     _moja 0160                     _samf 0120  
                   _mojf 0154                     _tact 019E                     _mojh 006C  
                   _moji 0140                     _mojn 0068                     _samp 00A0  
                   _gusu 00DE                     _wait 00B3                     fsr0h 0005  
                   fsr1h 0007                     indf0 0000                     fsr0l 0004  
                   fsr1l 0006                     btemp 007E                     start 0002  
            main@zyoutai 0040                    ?_fclr 0070                    ?_main 0070  
                  ?_tact 0078                    ?_wait 0076          __end_of___lwdiv 0119  
                  _PORTA 000C                    _PORTB 000D                    _PORTC 000E  
                  _TRISA 008C                    _TRISB 008D                    _TRISC 008E  
                  _code1 0048                    _atai1 0054                    _jikan 0054  
                  _count 0050                    _dynam 032B                    _fugou 0046  
                  _motor 0235                    main@i 0044                    main@j 0042  
        __end_of_waitSEG 032B                    wait@i 0078                    wait@j 007A  
                  status 0003                    wtemp0 007E          __initialization 07D1  
           __end_of_fclr 00B3             __end_of_main 07D1             __end_of_tact 01E9  
           __end_of_wait 00DD                   ??_fclr 0072                   ??_main 007C  
                 ??_tact 007A                   ??_wait 0078                   ?_jikan 0070  
                 ?_dynam 0070                   ?_motor 0028                   _ANSELA 018C  
                 _ANSELB 018D                   _OSCCON 0099              dynam@smdata 0074  
                 ___wmul 0074                   _code10 004A                   _atai10 0056  
                 _flag_P 005E                   _flag_R 0060                ??___lwdiv 0074  
                 _tactsw 0119                   _zenoff 004B                   dynam@j 0024  
              ??_waitSEG 007A                   wait@wt 0076                   motor@i 0036  
       __end_of_portinit 0074  __end_of__initialization 07FD           __pcstackCOMMON 0070  
           __pidataBANK0 0043             __pidataBANK1 0156             __pidataBANK2 01E9  
          __end_of_jikan 0061            __end_of_dynam 0495            __end_of_motor 02A8  
                ??_jikan 0070                  ??_dynam 0078                  ??_motor 007A  
             __pbssBANK0 0046               __pmaintext 0495                  ?___wmul 0070  
                ?_tactsw 0070                  ?_zenoff 0070              waitSEG@seg1 0028  
            waitSEG@seg2 002A          __size_of___wmul 001F                ?_portinit 0070  
                ___lwdiv 00DD                  _code100 004C          __size_of_tactsw 003D  
                __ptext1 004B                  __ptext2 02A8                  __ptext3 00DD  
                __ptext4 00B3                  __ptext5 0074                  __ptext6 0061  
                __ptext7 0235                  __ptext8 019E                  __ptext9 0119  
        __size_of_zenoff 0009                  fclr@flg 0070                  _waitSEG 02A8  
            motor@kakudo 0028                  clrloop0 0038     end_of_initialization 07FD  
            motor@smdata 002E                  dynam@tm 0022                  dynam@tr 0076  
                init_ram 003D                  initloop 003E                  tactsw@a 0076  
                tactsw@b 0072                  tactsw@c 0074                  motor@tr 0030  
             ??_portinit 0070           __end_of___wmul 0093           __end_of_tactsw 0156  
         __end_of_zenoff 0054      start_initialization 07D1                 ??___wmul 0074  
            __pdataBANK0 0068              __pdataBANK1 00A0              __pdataBANK2 0120  
               ??_tactsw 0070                 ??_zenoff 0070                ___latbits 0003  
          __pcstackBANK0 0020         ___lwdiv@dividend 0072                 ?___lwdiv 0070  
      __size_of_portinit 0013                 ?_waitSEG 0028         ___lwdiv@quotient 0075  
         __size_of_jikan 000D           __size_of_dynam 016A           __size_of_motor 0073  
          dynam@dig1data 0070            dynam@dig2data 0072               motor@cpSW1 0032  
             motor@cpSW2 0034           ___wmul@product 0074                clear_ram0 0037  
          motor@dig1data 002A            motor@dig2data 002C        ___wmul@multiplier 0070  
           waitSEG@cpSW1 002E             waitSEG@cpSW2 0030         __size_of___lwdiv 003C  
               _code1000 004E          ___lwdiv@divisor 0070          ___lwdiv@counter 0077  
       __size_of_waitSEG 0083                 __ptext10 032B                 __ptext11 0054  
               _flag_sw1 0066                 __ptext12 0093                 _flag_sw2 0064  
               _flag_sw3 0062                waitSEG@wt 002C            __size_of_fclr 0020  
          __size_of_main 033C            __size_of_tact 004B            __size_of_wait 002A  
               _portinit 0061                 main@time 003E                 dynam@ext 0026  
               dynam@smd 0020                 tact@mode 0078                 waitSEG@i 0032  
