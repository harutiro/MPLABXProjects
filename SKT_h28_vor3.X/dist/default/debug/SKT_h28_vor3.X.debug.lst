

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Mar 04 13:59:49 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F1938
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.20
    31                           ; Generated 12/02/2020 GMT
    32                           ; 
    33                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F1938 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  0010                     	;# 
    80  0011                     	;# 
    81  0012                     	;# 
    82  0013                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  010C                     	;# 
   113  010D                     	;# 
   114  010E                     	;# 
   115  0110                     	;# 
   116  0111                     	;# 
   117  0112                     	;# 
   118  0113                     	;# 
   119  0114                     	;# 
   120  0115                     	;# 
   121  0116                     	;# 
   122  0117                     	;# 
   123  0118                     	;# 
   124  0119                     	;# 
   125  011A                     	;# 
   126  011B                     	;# 
   127  011D                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0191                     	;# 
   131  0191                     	;# 
   132  0192                     	;# 
   133  0193                     	;# 
   134  0193                     	;# 
   135  0193                     	;# 
   136  0194                     	;# 
   137  0195                     	;# 
   138  0196                     	;# 
   139  0199                     	;# 
   140  019A                     	;# 
   141  019B                     	;# 
   142  019B                     	;# 
   143  019B                     	;# 
   144  019B                     	;# 
   145  019C                     	;# 
   146  019C                     	;# 
   147  019D                     	;# 
   148  019E                     	;# 
   149  019F                     	;# 
   150  020D                     	;# 
   151  0210                     	;# 
   152  0211                     	;# 
   153  0212                     	;# 
   154  0213                     	;# 
   155  0214                     	;# 
   156  0215                     	;# 
   157  0215                     	;# 
   158  0216                     	;# 
   159  0217                     	;# 
   160  0291                     	;# 
   161  0291                     	;# 
   162  0292                     	;# 
   163  0293                     	;# 
   164  0294                     	;# 
   165  0295                     	;# 
   166  0295                     	;# 
   167  0296                     	;# 
   168  0298                     	;# 
   169  0298                     	;# 
   170  0299                     	;# 
   171  029A                     	;# 
   172  029B                     	;# 
   173  029C                     	;# 
   174  029C                     	;# 
   175  029D                     	;# 
   176  029E                     	;# 
   177  029F                     	;# 
   178  0311                     	;# 
   179  0311                     	;# 
   180  0312                     	;# 
   181  0313                     	;# 
   182  0314                     	;# 
   183  0315                     	;# 
   184  0315                     	;# 
   185  0316                     	;# 
   186  0318                     	;# 
   187  0318                     	;# 
   188  0319                     	;# 
   189  031A                     	;# 
   190  031C                     	;# 
   191  031C                     	;# 
   192  031D                     	;# 
   193  031E                     	;# 
   194  0394                     	;# 
   195  0395                     	;# 
   196  0396                     	;# 
   197  0415                     	;# 
   198  0416                     	;# 
   199  0417                     	;# 
   200  041C                     	;# 
   201  041D                     	;# 
   202  041E                     	;# 
   203  0791                     	;# 
   204  0792                     	;# 
   205  0793                     	;# 
   206  0794                     	;# 
   207  0795                     	;# 
   208  0798                     	;# 
   209  0799                     	;# 
   210  07A0                     	;# 
   211  07A1                     	;# 
   212  07A3                     	;# 
   213  07A4                     	;# 
   214  07A6                     	;# 
   215  07A7                     	;# 
   216  07A9                     	;# 
   217  07AA                     	;# 
   218  0FE4                     	;# 
   219  0FE5                     	;# 
   220  0FE6                     	;# 
   221  0FE7                     	;# 
   222  0FE8                     	;# 
   223  0FE9                     	;# 
   224  0FEA                     	;# 
   225  0FEB                     	;# 
   226  0FED                     	;# 
   227  0FEE                     	;# 
   228  0FEF                     	;# 
   229  0000                     	;# 
   230  0001                     	;# 
   231  0002                     	;# 
   232  0003                     	;# 
   233  0004                     	;# 
   234  0005                     	;# 
   235  0006                     	;# 
   236  0007                     	;# 
   237  0008                     	;# 
   238  0009                     	;# 
   239  000A                     	;# 
   240  000B                     	;# 
   241  000C                     	;# 
   242  000D                     	;# 
   243  000E                     	;# 
   244  0010                     	;# 
   245  0011                     	;# 
   246  0012                     	;# 
   247  0013                     	;# 
   248  0015                     	;# 
   249  0016                     	;# 
   250  0016                     	;# 
   251  0017                     	;# 
   252  0018                     	;# 
   253  0019                     	;# 
   254  001A                     	;# 
   255  001B                     	;# 
   256  001C                     	;# 
   257  001E                     	;# 
   258  001F                     	;# 
   259  008C                     	;# 
   260  008D                     	;# 
   261  008E                     	;# 
   262  0090                     	;# 
   263  0091                     	;# 
   264  0092                     	;# 
   265  0093                     	;# 
   266  0095                     	;# 
   267  0096                     	;# 
   268  0097                     	;# 
   269  0098                     	;# 
   270  0099                     	;# 
   271  009A                     	;# 
   272  009B                     	;# 
   273  009B                     	;# 
   274  009C                     	;# 
   275  009D                     	;# 
   276  009E                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  0110                     	;# 
   281  0111                     	;# 
   282  0112                     	;# 
   283  0113                     	;# 
   284  0114                     	;# 
   285  0115                     	;# 
   286  0116                     	;# 
   287  0117                     	;# 
   288  0118                     	;# 
   289  0119                     	;# 
   290  011A                     	;# 
   291  011B                     	;# 
   292  011D                     	;# 
   293  018C                     	;# 
   294  018D                     	;# 
   295  0191                     	;# 
   296  0191                     	;# 
   297  0192                     	;# 
   298  0193                     	;# 
   299  0193                     	;# 
   300  0193                     	;# 
   301  0194                     	;# 
   302  0195                     	;# 
   303  0196                     	;# 
   304  0199                     	;# 
   305  019A                     	;# 
   306  019B                     	;# 
   307  019B                     	;# 
   308  019B                     	;# 
   309  019B                     	;# 
   310  019C                     	;# 
   311  019C                     	;# 
   312  019D                     	;# 
   313  019E                     	;# 
   314  019F                     	;# 
   315  020D                     	;# 
   316  0210                     	;# 
   317  0211                     	;# 
   318  0212                     	;# 
   319  0213                     	;# 
   320  0214                     	;# 
   321  0215                     	;# 
   322  0215                     	;# 
   323  0216                     	;# 
   324  0217                     	;# 
   325  0291                     	;# 
   326  0291                     	;# 
   327  0292                     	;# 
   328  0293                     	;# 
   329  0294                     	;# 
   330  0295                     	;# 
   331  0295                     	;# 
   332  0296                     	;# 
   333  0298                     	;# 
   334  0298                     	;# 
   335  0299                     	;# 
   336  029A                     	;# 
   337  029B                     	;# 
   338  029C                     	;# 
   339  029C                     	;# 
   340  029D                     	;# 
   341  029E                     	;# 
   342  029F                     	;# 
   343  0311                     	;# 
   344  0311                     	;# 
   345  0312                     	;# 
   346  0313                     	;# 
   347  0314                     	;# 
   348  0315                     	;# 
   349  0315                     	;# 
   350  0316                     	;# 
   351  0318                     	;# 
   352  0318                     	;# 
   353  0319                     	;# 
   354  031A                     	;# 
   355  031C                     	;# 
   356  031C                     	;# 
   357  031D                     	;# 
   358  031E                     	;# 
   359  0394                     	;# 
   360  0395                     	;# 
   361  0396                     	;# 
   362  0415                     	;# 
   363  0416                     	;# 
   364  0417                     	;# 
   365  041C                     	;# 
   366  041D                     	;# 
   367  041E                     	;# 
   368  0791                     	;# 
   369  0792                     	;# 
   370  0793                     	;# 
   371  0794                     	;# 
   372  0795                     	;# 
   373  0798                     	;# 
   374  0799                     	;# 
   375  07A0                     	;# 
   376  07A1                     	;# 
   377  07A3                     	;# 
   378  07A4                     	;# 
   379  07A6                     	;# 
   380  07A7                     	;# 
   381  07A9                     	;# 
   382  07AA                     	;# 
   383  0FE4                     	;# 
   384  0FE5                     	;# 
   385  0FE6                     	;# 
   386  0FE7                     	;# 
   387  0FE8                     	;# 
   388  0FE9                     	;# 
   389  0FEA                     	;# 
   390  0FEB                     	;# 
   391  0FED                     	;# 
   392  0FEE                     	;# 
   393  0FEF                     	;# 
   394                           
   395                           	psect	idataBANK1
   396  0171                     __pidataBANK1:
   397                           
   398                           ;initializer for _samp
   399  0171  343F               	retlw	63
   400  0172  3400               	retlw	0
   401  0173  3406               	retlw	6
   402  0174  3400               	retlw	0
   403  0175  345B               	retlw	91
   404  0176  3400               	retlw	0
   405  0177  344F               	retlw	79
   406  0178  3400               	retlw	0
   407  0179  3466               	retlw	102
   408  017A  3400               	retlw	0
   409  017B  346D               	retlw	109
   410  017C  3400               	retlw	0
   411  017D  347D               	retlw	125
   412  017E  3400               	retlw	0
   413  017F  3427               	retlw	39
   414  0180  3400               	retlw	0
   415  0181  347F               	retlw	127
   416  0182  3400               	retlw	0
   417  0183  346F               	retlw	111
   418  0184  3400               	retlw	0
   419  0185  345F               	retlw	95
   420  0186  3400               	retlw	0
   421  0187  347C               	retlw	124
   422  0188  3400               	retlw	0
   423  0189  3458               	retlw	88
   424  018A  3400               	retlw	0
   425  018B  345E               	retlw	94
   426  018C  3400               	retlw	0
   427  018D  3479               	retlw	121
   428  018E  3400               	retlw	0
   429  018F  3471               	retlw	113
   430  0190  3400               	retlw	0
   431                           
   432                           ;initializer for _num0
   433  0191  343F               	retlw	63
   434  0192  3400               	retlw	0
   435  0193  3406               	retlw	6
   436  0194  3400               	retlw	0
   437  0195  345B               	retlw	91
   438  0196  3400               	retlw	0
   439  0197  344F               	retlw	79
   440  0198  3400               	retlw	0
   441  0199  3466               	retlw	102
   442  019A  3400               	retlw	0
   443  019B  346D               	retlw	109
   444  019C  3400               	retlw	0
   445  019D  347D               	retlw	125
   446  019E  3400               	retlw	0
   447  019F  3427               	retlw	39
   448  01A0  3400               	retlw	0
   449  01A1  347F               	retlw	127
   450  01A2  3400               	retlw	0
   451  01A3  346F               	retlw	111
   452  01A4  3400               	retlw	0
   453                           
   454                           ;initializer for _kisu
   455  01A5  3406               	retlw	6
   456  01A6  3400               	retlw	0
   457  01A7  344F               	retlw	79
   458  01A8  3400               	retlw	0
   459  01A9  346D               	retlw	109
   460  01AA  3400               	retlw	0
   461  01AB  3427               	retlw	39
   462  01AC  3400               	retlw	0
   463  01AD  346F               	retlw	111
   464  01AE  3400               	retlw	0
   465                           
   466                           ;initializer for _gusu
   467  01AF  343F               	retlw	63
   468  01B0  3400               	retlw	0
   469  01B1  345B               	retlw	91
   470  01B2  3400               	retlw	0
   471  01B3  3466               	retlw	102
   472  01B4  3400               	retlw	0
   473  01B5  347D               	retlw	125
   474  01B6  3400               	retlw	0
   475  01B7  347F               	retlw	127
   476  01B8  3400               	retlw	0
   477                           
   478                           ;initializer for _mojn
   479  01B9  3454               	retlw	84
   480  01BA  3400               	retlw	0
   481  01BB  3473               	retlw	115
   482  01BC  3400               	retlw	0
   483                           
   484                           ;initializer for _mojh
   485  01BD  3476               	retlw	118
   486  01BE  3400               	retlw	0
   487  01BF  3438               	retlw	56
   488  01C0  3400               	retlw	0
   489                           
   490                           	psect	idataBANK2
   491  0125                     __pidataBANK2:
   492                           
   493                           ;initializer for _samf
   494  0125  3471               	retlw	113
   495  0126  3400               	retlw	0
   496  0127  3479               	retlw	121
   497  0128  3400               	retlw	0
   498  0129  345E               	retlw	94
   499  012A  3400               	retlw	0
   500  012B  3458               	retlw	88
   501  012C  3400               	retlw	0
   502  012D  347C               	retlw	124
   503  012E  3400               	retlw	0
   504  012F  345F               	retlw	95
   505  0130  3400               	retlw	0
   506  0131  346F               	retlw	111
   507  0132  3400               	retlw	0
   508  0133  347F               	retlw	127
   509  0134  3400               	retlw	0
   510  0135  3427               	retlw	39
   511  0136  3400               	retlw	0
   512  0137  347D               	retlw	125
   513  0138  3400               	retlw	0
   514  0139  346D               	retlw	109
   515  013A  3400               	retlw	0
   516  013B  3466               	retlw	102
   517  013C  3400               	retlw	0
   518  013D  344F               	retlw	79
   519  013E  3400               	retlw	0
   520  013F  345B               	retlw	91
   521  0140  3400               	retlw	0
   522  0141  3406               	retlw	6
   523  0142  3400               	retlw	0
   524  0143  343F               	retlw	63
   525  0144  3400               	retlw	0
   526                           
   527                           ;initializer for _moji
   528  0145  345F               	retlw	95
   529  0146  3400               	retlw	0
   530  0147  347C               	retlw	124
   531  0148  3400               	retlw	0
   532  0149  3458               	retlw	88
   533  014A  3400               	retlw	0
   534  014B  345E               	retlw	94
   535  014C  3400               	retlw	0
   536  014D  3479               	retlw	121
   537  014E  3400               	retlw	0
   538  014F  3471               	retlw	113
   539  0150  3400               	retlw	0
   540  0151  3476               	retlw	118
   541  0152  3400               	retlw	0
   542  0153  3438               	retlw	56
   543  0154  3400               	retlw	0
   544  0155  3454               	retlw	84
   545  0156  3400               	retlw	0
   546  0157  3473               	retlw	115
   547  0158  3400               	retlw	0
   548                           
   549                           ;initializer for _mojf
   550  0159  3471               	retlw	113
   551  015A  3400               	retlw	0
   552  015B  3479               	retlw	121
   553  015C  3400               	retlw	0
   554  015D  345E               	retlw	94
   555  015E  3400               	retlw	0
   556  015F  3458               	retlw	88
   557  0160  3400               	retlw	0
   558  0161  347C               	retlw	124
   559  0162  3400               	retlw	0
   560  0163  345F               	retlw	95
   561  0164  3400               	retlw	0
   562                           
   563                           ;initializer for _moja
   564  0165  345F               	retlw	95
   565  0166  3400               	retlw	0
   566  0167  347C               	retlw	124
   567  0168  3400               	retlw	0
   568  0169  3458               	retlw	88
   569  016A  3400               	retlw	0
   570  016B  345E               	retlw	94
   571  016C  3400               	retlw	0
   572  016D  3479               	retlw	121
   573  016E  3400               	retlw	0
   574  016F  3471               	retlw	113
   575  0170  3400               	retlw	0
   576  000E                     _PORTC	set	14
   577  000D                     _PORTB	set	13
   578  000C                     _PORTA	set	12
   579  0061                     _RA1	set	97
   580  0060                     _RA0	set	96
   581  0062                     _RA2	set	98
   582  0077                     _RC7	set	119
   583  0072                     _RC2	set	114
   584  0071                     _RC1	set	113
   585  0070                     _RC0	set	112
   586  0076                     _RC6	set	118
   587  0075                     _RC5	set	117
   588  0099                     _OSCCON	set	153
   589  008E                     _TRISC	set	142
   590  008D                     _TRISB	set	141
   591  008C                     _TRISA	set	140
   592  018D                     _ANSELB	set	397
   593  018C                     _ANSELA	set	396
   594                           
   595                           	psect	cinit
   596  07DB                     start_initialization:	
   597                           ; #config settings
   598                           
   599  07DB                     __initialization:
   600                           
   601                           ; Initialize objects allocated to BANK1
   602  07DB  3071               	movlw	low __pidataBANK1
   603  07DC  0084               	movwf	4
   604  07DD  3081               	movlw	(high __pidataBANK1)| (0+128)
   605  07DE  0085               	movwf	5
   606  07DF  30A0               	movlw	low __pdataBANK1
   607  07E0  0086               	movwf	6
   608  07E1  3000               	movlw	high __pdataBANK1
   609  07E2  0087               	movwf	7
   610  07E3  3050               	movlw	80
   611  07E4  3180  2017  3187   	fcall	init_ram
   612                           
   613                           ; Initialize objects allocated to BANK2
   614  07E7  3025               	movlw	low __pidataBANK2
   615  07E8  0084               	movwf	4
   616  07E9  3081               	movlw	(high __pidataBANK2)| (0+128)
   617  07EA  0085               	movwf	5
   618  07EB  3020               	movlw	low __pdataBANK2
   619  07EC  0086               	movwf	6
   620  07ED  3001               	movlw	high __pdataBANK2
   621  07EE  0087               	movwf	7
   622  07EF  304C               	movlw	76
   623  07F0  3180  2017  3187   	fcall	init_ram
   624                           
   625                           ; Clear objects allocated to COMMON
   626  07F3  01FC               	clrf	__pbssCOMMON& (0+127)
   627  07F4  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   628                           
   629                           ; Clear objects allocated to BANK0
   630  07F5  3050               	movlw	low __pbssBANK0
   631  07F6  0084               	movwf	4
   632  07F7  3000               	movlw	high __pbssBANK0
   633  07F8  0085               	movwf	5
   634  07F9  3020               	movlw	32
   635  07FA  3180  2011  3187   	fcall	clear_ram0
   636  07FD                     end_of_initialization:	
   637                           ;End of C runtime variable initialization code
   638                           
   639  07FD                     __end_of__initialization:
   640  07FD  0020               	movlb	0
   641  07FE  3185  2DA8         	ljmp	_main	;jump to C main() function
   642                           
   643                           	psect	bssCOMMON
   644  007C                     __pbssCOMMON:
   645  007C                     _flag_sw3:
   646  007C                     	ds	2
   647                           
   648                           	psect	bssBANK0
   649  0050                     __pbssBANK0:
   650  0050                     _fugou:
   651  0050                     	ds	2
   652  0052                     _code1:
   653  0052                     	ds	2
   654  0054                     _code10:
   655  0054                     	ds	2
   656  0056                     _code100:
   657  0056                     	ds	2
   658  0058                     _code1000:
   659  0058                     	ds	2
   660  005A                     _count:
   661  005A                     	ds	2
   662  005C                     _atai:
   663  005C                     	ds	2
   664  005E                     _atai1:
   665  005E                     	ds	2
   666  0060                     _atai10:
   667  0060                     	ds	2
   668  0062                     _ccw:
   669  0062                     	ds	2
   670  0064                     _cw:
   671  0064                     	ds	2
   672  0066                     _flg:
   673  0066                     	ds	2
   674  0068                     _flag_P:
   675  0068                     	ds	2
   676  006A                     _flag_R:
   677  006A                     	ds	2
   678  006C                     _flag_sw2:
   679  006C                     	ds	2
   680  006E                     _flag_sw1:
   681  006E                     	ds	2
   682                           
   683                           	psect	dataBANK1
   684  00A0                     __pdataBANK1:
   685  00A0                     _samp:
   686  00A0                     	ds	32
   687  00C0                     _num0:
   688  00C0                     	ds	20
   689  00D4                     _kisu:
   690  00D4                     	ds	10
   691  00DE                     _gusu:
   692  00DE                     	ds	10
   693  00E8                     _mojn:
   694  00E8                     	ds	4
   695  00EC                     _mojh:
   696  00EC                     	ds	4
   697                           
   698                           	psect	dataBANK2
   699  0120                     __pdataBANK2:
   700  0120                     _samf:
   701  0120                     	ds	32
   702  0140                     _moji:
   703  0140                     	ds	20
   704  0154                     _mojf:
   705  0154                     	ds	12
   706  0160                     _moja:
   707  0160                     	ds	12
   708                           
   709                           	psect	inittext
   710  0017                     init_ram:
   711  0017  00FE               	movwf	btemp
   712  0018                     initloop:
   713  0018  0012               	moviw fsr0++
   714  0019  001E               	movwi fsr1++
   715  001A  0BFE               	decfsz	btemp,f
   716  001B  2818               	goto	initloop
   717  001C  3400               	retlw	0
   718                           
   719                           	psect	clrtext
   720  0011                     clear_ram0:	
   721                           ;	Called with FSR0 containing the base address, and
   722                           ;	WREG with the size to clear
   723                           
   724  0011  0064               	clrwdt	;clear the watchdog before getting into this loop
   725  0012                     clrloop0:
   726  0012  0180               	clrf	0	;clear RAM location pointed to by FSR
   727  0013  3101               	addfsr 0,1
   728  0014  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   729  0015  2812               	goto	clrloop0	;have we reached the end yet?
   730  0016  3400               	retlw	0	;all done for this memory range, return
   731                           
   732                           	psect	cstackCOMMON
   733  0070                     __pcstackCOMMON:
   734  0070                     ?_portinit:
   735  0070                     ??_portinit:	
   736                           ; 1 bytes @ 0x0
   737                           
   738  0070                     ?_zenoff:	
   739                           ; 1 bytes @ 0x0
   740                           
   741  0070                     ??_zenoff:	
   742                           ; 1 bytes @ 0x0
   743                           
   744  0070                     ?_dynam:	
   745                           ; 1 bytes @ 0x0
   746                           
   747  0070                     ?_tactsw:	
   748                           ; 1 bytes @ 0x0
   749                           
   750  0070                     ??_tactsw:	
   751                           ; 1 bytes @ 0x0
   752                           
   753  0070                     ?_fclr:	
   754                           ; 1 bytes @ 0x0
   755                           
   756  0070                     ?_main:	
   757                           ; 1 bytes @ 0x0
   758                           
   759  0070                     ?___wmul:	
   760                           ; 1 bytes @ 0x0
   761                           
   762  0070                     ?___awmod:	
   763                           ; 2 bytes @ 0x0
   764                           
   765  0070                     dynam@dig1data:	
   766                           ; 2 bytes @ 0x0
   767                           
   768  0070                     fclr@flg:	
   769                           ; 2 bytes @ 0x0
   770                           
   771  0070                     ___wmul@multiplier:	
   772                           ; 2 bytes @ 0x0
   773                           
   774  0070                     ___awmod@divisor:	
   775                           ; 2 bytes @ 0x0
   776                           
   777                           
   778                           ; 2 bytes @ 0x0
   779  0070                     	ds	2
   780  0072                     ??_fclr:
   781  0072                     dynam@dig2data:	
   782                           ; 1 bytes @ 0x2
   783                           
   784  0072                     tactsw@b:	
   785                           ; 2 bytes @ 0x2
   786                           
   787  0072                     ___wmul@multiplicand:	
   788                           ; 2 bytes @ 0x2
   789                           
   790  0072                     ___awmod@dividend:	
   791                           ; 2 bytes @ 0x2
   792                           
   793                           
   794                           ; 2 bytes @ 0x2
   795  0072                     	ds	2
   796  0074                     ??___wmul:
   797  0074                     ??___awmod:	
   798                           ; 1 bytes @ 0x4
   799                           
   800  0074                     dynam@smdata:	
   801                           ; 1 bytes @ 0x4
   802                           
   803  0074                     tactsw@c:	
   804                           ; 2 bytes @ 0x4
   805                           
   806  0074                     ___wmul@product:	
   807                           ; 2 bytes @ 0x4
   808                           
   809                           
   810                           ; 2 bytes @ 0x4
   811  0074                     	ds	1
   812  0075                     ___awmod@counter:
   813                           
   814                           ; 1 bytes @ 0x5
   815  0075                     	ds	1
   816  0076                     ?___awdiv:
   817  0076                     ___awmod@sign:	
   818                           ; 2 bytes @ 0x6
   819                           
   820  0076                     dynam@tr:	
   821                           ; 1 bytes @ 0x6
   822                           
   823  0076                     tactsw@a:	
   824                           ; 2 bytes @ 0x6
   825                           
   826  0076                     ___awdiv@divisor:	
   827                           ; 2 bytes @ 0x6
   828                           
   829                           
   830                           ; 2 bytes @ 0x6
   831  0076                     	ds	2
   832  0078                     ??_dynam:
   833  0078                     ?_tact:	
   834                           ; 1 bytes @ 0x8
   835                           
   836  0078                     ??_motor:	
   837                           ; 1 bytes @ 0x8
   838                           
   839  0078                     tact@mode:	
   840                           ; 1 bytes @ 0x8
   841                           
   842  0078                     motor@i:	
   843                           ; 2 bytes @ 0x8
   844                           
   845  0078                     ___awdiv@dividend:	
   846                           ; 2 bytes @ 0x8
   847                           
   848                           
   849                           ; 2 bytes @ 0x8
   850  0078                     	ds	2
   851  007A                     ??_tact:
   852  007A                     ??___awdiv:	
   853                           ; 1 bytes @ 0xA
   854                           
   855                           
   856                           ; 1 bytes @ 0xA
   857  007A                     	ds	1
   858  007B                     ??_main:
   859                           
   860                           ; 1 bytes @ 0xB
   861  007B                     	ds	1
   862                           
   863                           	psect	cstackBANK0
   864  0020                     __pcstackBANK0:
   865  0020                     ___awdiv@counter:
   866  0020                     dynam@smd:	
   867                           ; 1 bytes @ 0x0
   868                           
   869                           
   870                           ; 2 bytes @ 0x0
   871  0020                     	ds	1
   872  0021                     ___awdiv@sign:
   873                           
   874                           ; 1 bytes @ 0x1
   875  0021                     	ds	1
   876  0022                     dynam@tm:
   877  0022                     ___awdiv@quotient:	
   878                           ; 2 bytes @ 0x2
   879                           
   880                           
   881                           ; 2 bytes @ 0x2
   882  0022                     	ds	2
   883  0024                     ?_hen7:
   884  0024                     dynam@j:	
   885                           ; 1 bytes @ 0x4
   886                           
   887  0024                     hen7@value:	
   888                           ; 2 bytes @ 0x4
   889                           
   890                           
   891                           ; 2 bytes @ 0x4
   892  0024                     	ds	2
   893  0026                     dynam@ext:
   894  0026                     hen7@ns1:	
   895                           ; 2 bytes @ 0x6
   896                           
   897                           
   898                           ; 2 bytes @ 0x6
   899  0026                     	ds	2
   900  0028                     ??_hen7:
   901  0028                     ?_motor:	
   902                           ; 1 bytes @ 0x8
   903                           
   904  0028                     motor@kakudo:	
   905                           ; 1 bytes @ 0x8
   906                           
   907                           
   908                           ; 2 bytes @ 0x8
   909  0028                     	ds	2
   910  002A                     motor@dig1data:
   911                           
   912                           ; 2 bytes @ 0xA
   913  002A                     	ds	2
   914  002C                     hen7@value1:
   915  002C                     motor@dig2data:	
   916                           ; 2 bytes @ 0xC
   917                           
   918                           
   919                           ; 2 bytes @ 0xC
   920  002C                     	ds	2
   921  002E                     hen7@value10:
   922  002E                     motor@smdata:	
   923                           ; 2 bytes @ 0xE
   924                           
   925                           
   926                           ; 2 bytes @ 0xE
   927  002E                     	ds	2
   928  0030                     hen7@value100:
   929  0030                     motor@tr:	
   930                           ; 2 bytes @ 0x10
   931                           
   932                           
   933                           ; 2 bytes @ 0x10
   934  0030                     	ds	2
   935  0032                     hen7@l:
   936                           
   937                           ; 2 bytes @ 0x12
   938  0032                     	ds	2
   939  0034                     hen7@m:
   940                           
   941                           ; 2 bytes @ 0x14
   942  0034                     	ds	2
   943  0036                     hen7@n:
   944                           
   945                           ; 2 bytes @ 0x16
   946  0036                     	ds	14
   947  0044                     main@ataiL:
   948                           
   949                           ; 2 bytes @ 0x24
   950  0044                     	ds	2
   951  0046                     main@ataiR:
   952                           
   953                           ; 2 bytes @ 0x26
   954  0046                     	ds	2
   955  0048                     main@ans:
   956                           
   957                           ; 2 bytes @ 0x28
   958  0048                     	ds	2
   959  004A                     main@zyoutai:
   960                           
   961                           ; 2 bytes @ 0x2A
   962  004A                     	ds	2
   963  004C                     main@segL:
   964                           
   965                           ; 2 bytes @ 0x2C
   966  004C                     	ds	2
   967  004E                     main@segR:
   968                           
   969                           ; 2 bytes @ 0x2E
   970  004E                     	ds	2
   971                           
   972                           	psect	maintext
   973  05A8                     __pmaintext:	
   974 ;;
   975 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   976 ;;
   977 ;; *************** function _main *****************
   978 ;; Defined at:
   979 ;;		line 519 in file "Q5.c"
   980 ;; Parameters:    Size  Location     Type
   981 ;;		None
   982 ;; Auto vars:     Size  Location     Type
   983 ;;  segR            2   46[BANK0 ] unsigned short 
   984 ;;  segL            2   44[BANK0 ] unsigned short 
   985 ;;  zyoutai         2   42[BANK0 ] int 
   986 ;;  ans             2   40[BANK0 ] int 
   987 ;;  ataiR           2   38[BANK0 ] int 
   988 ;;  ataiL           2   36[BANK0 ] int 
   989 ;;  time            2    0        int 
   990 ;;  n               2    0        int 
   991 ;;  m               2    0        int 
   992 ;;  k               2    0        int 
   993 ;;  j               2    0        int 
   994 ;;  i               2    0        int 
   995 ;; Return value:  Size  Location     Type
   996 ;;                  1    wreg      void 
   997 ;; Registers used:
   998 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   999 ;; Tracked objects:
  1000 ;;		On entry : B1F/0
  1001 ;;		On exit  : 0/0
  1002 ;;		Unchanged: 0/0
  1003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1005 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1006 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1007 ;;      Totals:         1      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1008 ;;Total ram usage:       25 bytes
  1009 ;; Hardware stack levels required when called:    2
  1010 ;; This function calls:
  1011 ;;		___awdiv
  1012 ;;		___wmul
  1013 ;;		_dynam
  1014 ;;		_fclr
  1015 ;;		_hen7
  1016 ;;		_motor
  1017 ;;		_portinit
  1018 ;;		_tact
  1019 ;;		_zenoff
  1020 ;; This function is called by:
  1021 ;;		Startup code after reset
  1022 ;; This function uses a non-reentrant model
  1023 ;;
  1024                           
  1025                           
  1026                           ;psect for function _main
  1027  05A8                     _main:
  1028  05A8                     l2574:	
  1029                           ;incstack = 0
  1030                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1031                           
  1032                           
  1033                           ;Q5.c: 522:     OSCCON=0x7A;
  1034  05A8  307A               	movlw	122
  1035  05A9  0021               	movlb	1	; select bank1
  1036  05AA  0099               	movwf	25	;volatile
  1037  05AB                     l2576:
  1038                           
  1039                           ;Q5.c: 524:     portinit();
  1040  05AB  3180  2026  3185   	fcall	_portinit
  1041                           
  1042                           ;Q5.c: 526:     zenoff();
  1043  05AE  3180  201D  3185   	fcall	_zenoff
  1044  05B1                     l2578:
  1045  05B1                     l2580:
  1046  05B1                     l2582:
  1047  05B1                     l2584:
  1048  05B1                     l2586:
  1049  05B1                     l288:	
  1050                           ;Q5.c: 531:     while((RA0!=1)||(RA1!=1)||(RA2!=1));
  1051                           
  1052  05B1  0020               	movlb	0	; select bank0
  1053  05B2  1C0C               	btfss	12,0	;volatile
  1054  05B3  2DB5               	goto	u2541
  1055  05B4  2DB6               	goto	u2540
  1056  05B5                     u2541:
  1057  05B5  2DB1               	goto	l288
  1058  05B6                     u2540:
  1059  05B6                     l2588:
  1060  05B6  1C8C               	btfss	12,1	;volatile
  1061  05B7  2DB9               	goto	u2551
  1062  05B8  2DBA               	goto	u2550
  1063  05B9                     u2551:
  1064  05B9  2DB1               	goto	l288
  1065  05BA                     u2550:
  1066  05BA                     l2590:
  1067  05BA  1D0C               	btfss	12,2	;volatile
  1068  05BB  2DBD               	goto	u2561
  1069  05BC  2DBE               	goto	u2560
  1070  05BD                     u2561:
  1071  05BD  2DB1               	goto	l288
  1072  05BE                     u2560:
  1073  05BE                     l290:
  1074                           
  1075                           ;Q5.c: 534:     RC0=RC2=RC1=1;
  1076  05BE  148E               	bsf	14,1	;volatile
  1077  05BF  188E               	btfsc	14,1	;volatile
  1078  05C0  2DC2               	goto	u2571
  1079  05C1  2DC5               	goto	u2570
  1080  05C2                     u2571:
  1081  05C2  0020               	movlb	0	; select bank0
  1082  05C3  150E               	bsf	14,2	;volatile
  1083  05C4  2DC7               	goto	u2584
  1084  05C5                     u2570:
  1085  05C5  0020               	movlb	0	; select bank0
  1086  05C6  110E               	bcf	14,2	;volatile
  1087  05C7                     u2584:
  1088  05C7  190E               	btfsc	14,2	;volatile
  1089  05C8  2DCA               	goto	u2581
  1090  05C9  2DCD               	goto	u2580
  1091  05CA                     u2581:
  1092  05CA  0020               	movlb	0	; select bank0
  1093  05CB  140E               	bsf	14,0	;volatile
  1094  05CC  2DCF               	goto	u2594
  1095  05CD                     u2580:
  1096  05CD  0020               	movlb	0	; select bank0
  1097  05CE  100E               	bcf	14,0	;volatile
  1098  05CF                     u2594:
  1099  05CF                     l2592:
  1100                           
  1101                           ;Q5.c: 537:     fclr(2);
  1102  05CF  3002               	movlw	2
  1103  05D0  00F0               	movwf	fclr@flg
  1104  05D1  3000               	movlw	0
  1105  05D2  00F1               	movwf	fclr@flg+1
  1106  05D3  3180  2058  3185   	fcall	_fclr
  1107  05D6                     l2594:
  1108  05D6                     l2596:
  1109                           
  1110                           ;Q5.c: 550:     unsigned short segL = 0;
  1111  05D6  0020               	movlb	0	; select bank0
  1112  05D7  01CC               	clrf	main@segL
  1113  05D8  01CD               	clrf	main@segL+1
  1114  05D9                     l2598:
  1115                           
  1116                           ;Q5.c: 551:     unsigned short segR = 0;
  1117  05D9  01CE               	clrf	main@segR
  1118  05DA  01CF               	clrf	main@segR+1
  1119  05DB                     l2600:
  1120                           
  1121                           ;Q5.c: 553:     int ataiL = 0;
  1122  05DB  01C4               	clrf	main@ataiL
  1123  05DC  01C5               	clrf	main@ataiL+1
  1124  05DD                     l2602:
  1125                           
  1126                           ;Q5.c: 554:     int ataiR = 0;
  1127  05DD  01C6               	clrf	main@ataiR
  1128  05DE  01C7               	clrf	main@ataiR+1
  1129  05DF                     l2604:
  1130                           
  1131                           ;Q5.c: 556:     int zyoutai = 0;
  1132  05DF  01CA               	clrf	main@zyoutai
  1133  05E0  01CB               	clrf	main@zyoutai+1
  1134  05E1                     l2606:
  1135  05E1                     l2608:
  1136                           
  1137                           ;Q5.c: 572:         dynam(segL,segR,0,0);
  1138  05E1  084D               	movf	main@segL+1,w
  1139  05E2  00F1               	movwf	dynam@dig1data+1
  1140  05E3  084C               	movf	main@segL,w
  1141  05E4  00F0               	movwf	dynam@dig1data
  1142  05E5  084F               	movf	main@segR+1,w
  1143  05E6  00F3               	movwf	dynam@dig2data+1
  1144  05E7  084E               	movf	main@segR,w
  1145  05E8  00F2               	movwf	dynam@dig2data
  1146  05E9  3000               	movlw	0
  1147  05EA  00F4               	movwf	dynam@smdata
  1148  05EB  00F5               	movwf	dynam@smdata+1
  1149  05EC  3000               	movlw	0
  1150  05ED  00F6               	movwf	dynam@tr
  1151  05EE  00F7               	movwf	dynam@tr+1
  1152  05EF  3182  2274  3185   	fcall	_dynam
  1153  05F2                     l2610:
  1154                           
  1155                           ;Q5.c: 575:         if(RA0 == 0 && RA1 == 1){
  1156  05F2  0020               	movlb	0	; select bank0
  1157  05F3  180C               	btfsc	12,0	;volatile
  1158  05F4  2DF6               	goto	u2601
  1159  05F5  2DF7               	goto	u2600
  1160  05F6                     u2601:
  1161  05F6  2E41               	goto	l2634
  1162  05F7                     u2600:
  1163  05F7                     l2612:
  1164  05F7  1C8C               	btfss	12,1	;volatile
  1165  05F8  2DFA               	goto	u2611
  1166  05F9  2DFB               	goto	u2610
  1167  05FA                     u2611:
  1168  05FA  2E41               	goto	l2634
  1169  05FB                     u2610:
  1170  05FB                     l2614:
  1171                           
  1172                           ;Q5.c: 577:             if(segL == 0 && segR == 0){
  1173  05FB  084C               	movf	main@segL,w
  1174  05FC  044D               	iorwf	main@segL+1,w
  1175  05FD  1D03               	btfss	3,2
  1176  05FE  2E00               	goto	u2621
  1177  05FF  2E01               	goto	u2620
  1178  0600                     u2621:
  1179  0600  2E0F               	goto	l2620
  1180  0601                     u2620:
  1181  0601                     l2616:
  1182  0601  084E               	movf	main@segR,w
  1183  0602  044F               	iorwf	main@segR+1,w
  1184  0603  1D03               	btfss	3,2
  1185  0604  2E06               	goto	u2631
  1186  0605  2E07               	goto	u2630
  1187  0606                     u2631:
  1188  0606  2E0F               	goto	l2620
  1189  0607                     u2630:
  1190  0607                     l2618:
  1191                           
  1192                           ;Q5.c: 578:                 segL = 0x40;
  1193  0607  3040               	movlw	64
  1194  0608  00CC               	movwf	main@segL
  1195  0609  3000               	movlw	0
  1196  060A  00CD               	movwf	main@segL+1
  1197                           
  1198                           ;Q5.c: 579:                 segR = 0x40;
  1199  060B  3040               	movlw	64
  1200  060C  00CE               	movwf	main@segR
  1201  060D  3000               	movlw	0
  1202  060E  00CF               	movwf	main@segR+1
  1203  060F                     l2620:
  1204                           
  1205                           ;Q5.c: 585:             tact(2);
  1206  060F  3002               	movlw	2
  1207  0610  00F8               	movwf	tact@mode
  1208  0611  3000               	movlw	0
  1209  0612  00F9               	movwf	tact@mode+1
  1210  0613  3180  20D9  3185   	fcall	_tact
  1211  0616                     l2622:
  1212                           
  1213                           ;Q5.c: 586:             if(((flag_sw3==0)&&(flag_P==1))){
  1214  0616  087C               	movf	_flag_sw3,w
  1215  0617  047D               	iorwf	_flag_sw3+1,w
  1216  0618  1D03               	btfss	3,2
  1217  0619  2E1B               	goto	u2641
  1218  061A  2E1C               	goto	u2640
  1219  061B                     u2641:
  1220  061B  2E41               	goto	l2634
  1221  061C                     u2640:
  1222  061C                     l2624:
  1223  061C  0020               	movlb	0	; select bank0
  1224  061D  0368               	decf	_flag_P,w
  1225  061E  0469               	iorwf	_flag_P+1,w
  1226  061F  1D03               	btfss	3,2
  1227  0620  2E22               	goto	u2651
  1228  0621  2E23               	goto	u2650
  1229  0622                     u2651:
  1230  0622  2E41               	goto	l2634
  1231  0623                     u2650:
  1232  0623                     l2626:
  1233                           
  1234                           ;Q5.c: 588:                 if(ataiL == 0){
  1235  0623  0844               	movf	main@ataiL,w
  1236  0624  0445               	iorwf	main@ataiL+1,w
  1237  0625  1D03               	btfss	3,2
  1238  0626  2E28               	goto	u2661
  1239  0627  2E29               	goto	u2660
  1240  0628                     u2661:
  1241  0628  2E2D               	goto	l296
  1242  0629                     u2660:
  1243  0629                     l2628:
  1244                           
  1245                           ;Q5.c: 589:                     ataiL = 10;
  1246  0629  300A               	movlw	10
  1247  062A  00C4               	movwf	main@ataiL
  1248  062B  3000               	movlw	0
  1249  062C  00C5               	movwf	main@ataiL+1
  1250  062D                     l296:	
  1251                           ;Q5.c: 590:                 }
  1252                           
  1253                           
  1254                           ;Q5.c: 592:                 ataiL--;
  1255  062D  30FF               	movlw	255
  1256  062E  07C4               	addwf	main@ataiL,f
  1257  062F  30FF               	movlw	255
  1258  0630  3DC5               	addwfc	main@ataiL+1,f
  1259  0631                     l2630:
  1260                           
  1261                           ;Q5.c: 594:                 fclr(2);
  1262  0631  3002               	movlw	2
  1263  0632  00F0               	movwf	fclr@flg
  1264  0633  3000               	movlw	0
  1265  0634  00F1               	movwf	fclr@flg+1
  1266  0635  3180  2058  3185   	fcall	_fclr
  1267  0638                     l2632:
  1268                           
  1269                           ;Q5.c: 596:                 segL = num0[ataiL];
  1270  0638  0020               	movlb	0	; select bank0
  1271  0639  3544               	lslf	main@ataiL,w
  1272  063A  3EC0               	addlw	(low (_num0| 0))& (0+255)
  1273  063B  0086               	movwf	6
  1274  063C  0187               	clrf	7
  1275  063D  3F40               	moviw [0]fsr1
  1276  063E  00CC               	movwf	main@segL
  1277  063F  3F41               	moviw [1]fsr1
  1278  0640  00CD               	movwf	main@segL+1
  1279  0641                     l2634:
  1280                           
  1281                           ;Q5.c: 602:         if(RA0 == 1 && RA1 == 1 && segL != 0x40){
  1282  0641  0020               	movlb	0	; select bank0
  1283  0642  1C0C               	btfss	12,0	;volatile
  1284  0643  2E45               	goto	u2671
  1285  0644  2E46               	goto	u2670
  1286  0645                     u2671:
  1287  0645  2E93               	goto	l2658
  1288  0646                     u2670:
  1289  0646                     l2636:
  1290  0646  1C8C               	btfss	12,1	;volatile
  1291  0647  2E49               	goto	u2681
  1292  0648  2E4A               	goto	u2680
  1293  0649                     u2681:
  1294  0649  2E93               	goto	l2658
  1295  064A                     u2680:
  1296  064A                     l2638:
  1297  064A  3040               	movlw	64
  1298  064B  064C               	xorwf	main@segL,w
  1299  064C  044D               	iorwf	main@segL+1,w
  1300  064D  1903               	btfsc	3,2
  1301  064E  2E50               	goto	u2691
  1302  064F  2E51               	goto	u2690
  1303  0650                     u2691:
  1304  0650  2E93               	goto	l2658
  1305  0651                     u2690:
  1306  0651                     l2640:
  1307                           
  1308                           ;Q5.c: 604:             if(segR == 0x40){
  1309  0651  3040               	movlw	64
  1310  0652  064E               	xorwf	main@segR,w
  1311  0653  044F               	iorwf	main@segR+1,w
  1312  0654  1D03               	btfss	3,2
  1313  0655  2E57               	goto	u2701
  1314  0656  2E58               	goto	u2700
  1315  0657                     u2701:
  1316  0657  2E60               	goto	l2644
  1317  0658                     u2700:
  1318  0658                     l2642:
  1319                           
  1320                           ;Q5.c: 605:                 segR = num0[0];
  1321  0658  0021               	movlb	1	; select bank1
  1322  0659  0841               	movf	(_num0+1)^(0+128),w
  1323  065A  0020               	movlb	0	; select bank0
  1324  065B  00CF               	movwf	main@segR+1
  1325  065C  0021               	movlb	1	; select bank1
  1326  065D  0840               	movf	_num0^(0+128),w
  1327  065E  0020               	movlb	0	; select bank0
  1328  065F  00CE               	movwf	main@segR
  1329  0660                     l2644:
  1330                           
  1331                           ;Q5.c: 608:             tact(2);
  1332  0660  3002               	movlw	2
  1333  0661  00F8               	movwf	tact@mode
  1334  0662  3000               	movlw	0
  1335  0663  00F9               	movwf	tact@mode+1
  1336  0664  3180  20D9  3185   	fcall	_tact
  1337  0667                     l2646:
  1338                           
  1339                           ;Q5.c: 609:             if(((flag_sw3==0)&&(flag_P==1))){
  1340  0667  087C               	movf	_flag_sw3,w
  1341  0668  047D               	iorwf	_flag_sw3+1,w
  1342  0669  1D03               	btfss	3,2
  1343  066A  2E6C               	goto	u2711
  1344  066B  2E6D               	goto	u2710
  1345  066C                     u2711:
  1346  066C  2E93               	goto	l2658
  1347  066D                     u2710:
  1348  066D                     l2648:
  1349  066D  0020               	movlb	0	; select bank0
  1350  066E  0368               	decf	_flag_P,w
  1351  066F  0469               	iorwf	_flag_P+1,w
  1352  0670  1D03               	btfss	3,2
  1353  0671  2E73               	goto	u2721
  1354  0672  2E74               	goto	u2720
  1355  0673                     u2721:
  1356  0673  2E93               	goto	l2658
  1357  0674                     u2720:
  1358  0674                     l2650:
  1359                           
  1360                           ;Q5.c: 611:                 if(ataiR == 9){
  1361  0674  3009               	movlw	9
  1362  0675  0646               	xorwf	main@ataiR,w
  1363  0676  0447               	iorwf	main@ataiR+1,w
  1364  0677  1D03               	btfss	3,2
  1365  0678  2E7A               	goto	u2731
  1366  0679  2E7B               	goto	u2730
  1367  067A                     u2731:
  1368  067A  2E7F               	goto	l300
  1369  067B                     u2730:
  1370  067B                     l2652:
  1371                           
  1372                           ;Q5.c: 612:                     ataiR = -1;
  1373  067B  30FF               	movlw	255
  1374  067C  00C6               	movwf	main@ataiR
  1375  067D  30FF               	movlw	255
  1376  067E  00C7               	movwf	main@ataiR+1
  1377  067F                     l300:	
  1378                           ;Q5.c: 613:                 }
  1379                           
  1380                           
  1381                           ;Q5.c: 615:                 ataiR++;
  1382  067F  3001               	movlw	1
  1383  0680  07C6               	addwf	main@ataiR,f
  1384  0681  3000               	movlw	0
  1385  0682  3DC7               	addwfc	main@ataiR+1,f
  1386  0683                     l2654:
  1387                           
  1388                           ;Q5.c: 617:                 fclr(2);
  1389  0683  3002               	movlw	2
  1390  0684  00F0               	movwf	fclr@flg
  1391  0685  3000               	movlw	0
  1392  0686  00F1               	movwf	fclr@flg+1
  1393  0687  3180  2058  3185   	fcall	_fclr
  1394  068A                     l2656:
  1395                           
  1396                           ;Q5.c: 619:                 segR = num0[ataiR];
  1397  068A  0020               	movlb	0	; select bank0
  1398  068B  3546               	lslf	main@ataiR,w
  1399  068C  3EC0               	addlw	(low (_num0| 0))& (0+255)
  1400  068D  0086               	movwf	6
  1401  068E  0187               	clrf	7
  1402  068F  3F40               	moviw [0]fsr1
  1403  0690  00CE               	movwf	main@segR
  1404  0691  3F41               	moviw [1]fsr1
  1405  0692  00CF               	movwf	main@segR+1
  1406  0693                     l2658:
  1407                           
  1408                           ;Q5.c: 625:         if(RA0 ==1 && RA1 == 0 && segR != 0x40 && segL != 0x40 && zyoutai ==
      +                           0){
  1409  0693  0020               	movlb	0	; select bank0
  1410  0694  1C0C               	btfss	12,0	;volatile
  1411  0695  2E97               	goto	u2741
  1412  0696  2E98               	goto	u2740
  1413  0697                     u2741:
  1414  0697  2EB4               	goto	l2670
  1415  0698                     u2740:
  1416  0698                     l2660:
  1417  0698  188C               	btfsc	12,1	;volatile
  1418  0699  2E9B               	goto	u2751
  1419  069A  2E9C               	goto	u2750
  1420  069B                     u2751:
  1421  069B  2EB4               	goto	l2670
  1422  069C                     u2750:
  1423  069C                     l2662:
  1424  069C  3040               	movlw	64
  1425  069D  064E               	xorwf	main@segR,w
  1426  069E  044F               	iorwf	main@segR+1,w
  1427  069F  1903               	btfsc	3,2
  1428  06A0  2EA2               	goto	u2761
  1429  06A1  2EA3               	goto	u2760
  1430  06A2                     u2761:
  1431  06A2  2EB4               	goto	l2670
  1432  06A3                     u2760:
  1433  06A3                     l2664:
  1434  06A3  3040               	movlw	64
  1435  06A4  064C               	xorwf	main@segL,w
  1436  06A5  044D               	iorwf	main@segL+1,w
  1437  06A6  1903               	btfsc	3,2
  1438  06A7  2EA9               	goto	u2771
  1439  06A8  2EAA               	goto	u2770
  1440  06A9                     u2771:
  1441  06A9  2EB4               	goto	l2670
  1442  06AA                     u2770:
  1443  06AA                     l2666:
  1444  06AA  084A               	movf	main@zyoutai,w
  1445  06AB  044B               	iorwf	main@zyoutai+1,w
  1446  06AC  1D03               	btfss	3,2
  1447  06AD  2EAF               	goto	u2781
  1448  06AE  2EB0               	goto	u2780
  1449  06AF                     u2781:
  1450  06AF  2EB4               	goto	l2670
  1451  06B0                     u2780:
  1452  06B0                     l2668:
  1453                           
  1454                           ;Q5.c: 626:             zyoutai = 1;
  1455  06B0  3001               	movlw	1
  1456  06B1  00CA               	movwf	main@zyoutai
  1457  06B2  3000               	movlw	0
  1458  06B3  00CB               	movwf	main@zyoutai+1
  1459  06B4                     l2670:
  1460                           
  1461                           ;Q5.c: 629:         if(RA0 ==1 && RA1 == 1 && segR != 0x40 && segL != 0x40 && zyoutai ==
      +                           1){
  1462  06B4  1C0C               	btfss	12,0	;volatile
  1463  06B5  2EB7               	goto	u2791
  1464  06B6  2EB8               	goto	u2790
  1465  06B7                     u2791:
  1466  06B7  2F9D               	goto	l2726
  1467  06B8                     u2790:
  1468  06B8                     l2672:
  1469  06B8  1C8C               	btfss	12,1	;volatile
  1470  06B9  2EBB               	goto	u2801
  1471  06BA  2EBC               	goto	u2800
  1472  06BB                     u2801:
  1473  06BB  2F9D               	goto	l2726
  1474  06BC                     u2800:
  1475  06BC                     l2674:
  1476  06BC  3040               	movlw	64
  1477  06BD  064E               	xorwf	main@segR,w
  1478  06BE  044F               	iorwf	main@segR+1,w
  1479  06BF  1903               	btfsc	3,2
  1480  06C0  2EC2               	goto	u2811
  1481  06C1  2EC3               	goto	u2810
  1482  06C2                     u2811:
  1483  06C2  2F9D               	goto	l2726
  1484  06C3                     u2810:
  1485  06C3                     l2676:
  1486  06C3  3040               	movlw	64
  1487  06C4  064C               	xorwf	main@segL,w
  1488  06C5  044D               	iorwf	main@segL+1,w
  1489  06C6  1903               	btfsc	3,2
  1490  06C7  2EC9               	goto	u2821
  1491  06C8  2ECA               	goto	u2820
  1492  06C9                     u2821:
  1493  06C9  2F9D               	goto	l2726
  1494  06CA                     u2820:
  1495  06CA                     l2678:
  1496  06CA  034A               	decf	main@zyoutai,w
  1497  06CB  044B               	iorwf	main@zyoutai+1,w
  1498  06CC  1D03               	btfss	3,2
  1499  06CD  2ECF               	goto	u2831
  1500  06CE  2ED0               	goto	u2830
  1501  06CF                     u2831:
  1502  06CF  2F9D               	goto	l2726
  1503  06D0                     u2830:
  1504  06D0                     l2680:
  1505                           
  1506                           ;Q5.c: 631:             RC0 = 0;
  1507  06D0  100E               	bcf	14,0	;volatile
  1508  06D1                     l2682:
  1509  06D1                     l2684:
  1510                           
  1511                           ;Q5.c: 635:             ans = (ataiL*10)+ataiR;
  1512  06D1  0845               	movf	main@ataiL+1,w
  1513  06D2  00F1               	movwf	___wmul@multiplier+1
  1514  06D3  0844               	movf	main@ataiL,w
  1515  06D4  00F0               	movwf	___wmul@multiplier
  1516  06D5  300A               	movlw	10
  1517  06D6  00F2               	movwf	___wmul@multiplicand
  1518  06D7  3000               	movlw	0
  1519  06D8  00F3               	movwf	___wmul@multiplicand+1
  1520  06D9  3180  2039  3185   	fcall	___wmul
  1521  06DC  0020               	movlb	0	; select bank0
  1522  06DD  0846               	movf	main@ataiR,w
  1523  06DE  0770               	addwf	?___wmul,w
  1524  06DF  00C8               	movwf	main@ans
  1525  06E0  0847               	movf	main@ataiR+1,w
  1526  06E1  3D71               	addwfc	?___wmul+1,w
  1527  06E2  00C9               	movwf	main@ans+1
  1528  06E3                     l2686:
  1529                           
  1530                           ;Q5.c: 637:             hen7(ans,10);
  1531  06E3  0849               	movf	main@ans+1,w
  1532  06E4  00A5               	movwf	hen7@value+1
  1533  06E5  0848               	movf	main@ans,w
  1534  06E6  00A4               	movwf	hen7@value
  1535  06E7  300A               	movlw	10
  1536  06E8  00A6               	movwf	hen7@ns1
  1537  06E9  3000               	movlw	0
  1538  06EA  00A7               	movwf	hen7@ns1+1
  1539  06EB  3183  23DE  3185   	fcall	_hen7
  1540  06EE                     l2688:
  1541                           
  1542                           ;Q5.c: 638:             if(ans/10 > 1){
  1543  06EE  300A               	movlw	10
  1544  06EF  00F6               	movwf	___awdiv@divisor
  1545  06F0  3000               	movlw	0
  1546  06F1  00F7               	movwf	___awdiv@divisor+1
  1547  06F2  0020               	movlb	0	; select bank0
  1548  06F3  0849               	movf	main@ans+1,w
  1549  06F4  00F9               	movwf	___awdiv@dividend+1
  1550  06F5  0848               	movf	main@ans,w
  1551  06F6  00F8               	movwf	___awdiv@dividend
  1552  06F7  3182  2214  3185   	fcall	___awdiv
  1553  06FA  0877               	movf	?___awdiv+1,w
  1554  06FB  3A80               	xorlw	128
  1555  06FC  00FB               	movwf	??_main
  1556  06FD  3080               	movlw	128
  1557  06FE  027B               	subwf	??_main,w
  1558  06FF  1D03               	skipz
  1559  0700  2F03               	goto	u2845
  1560  0701  3002               	movlw	2
  1561  0702  0276               	subwf	?___awdiv,w
  1562  0703                     u2845:
  1563  0703  1C03               	skipc
  1564  0704  2F06               	goto	u2841
  1565  0705  2F07               	goto	u2840
  1566  0706                     u2841:
  1567  0706  2F0D               	goto	l2692
  1568  0707                     u2840:
  1569  0707                     l2690:
  1570                           
  1571                           ;Q5.c: 639:                 segL = code10;
  1572  0707  0020               	movlb	0	; select bank0
  1573  0708  0855               	movf	_code10+1,w
  1574  0709  00CD               	movwf	main@segL+1
  1575  070A  0854               	movf	_code10,w
  1576  070B  00CC               	movwf	main@segL
  1577                           
  1578                           ;Q5.c: 640:             }else{
  1579  070C  2F10               	goto	l2694
  1580  070D                     l2692:
  1581                           
  1582                           ;Q5.c: 641:                 segL = 0;
  1583  070D  0020               	movlb	0	; select bank0
  1584  070E  01CC               	clrf	main@segL
  1585  070F  01CD               	clrf	main@segL+1
  1586  0710                     l2694:
  1587                           
  1588                           ;Q5.c: 644:             segR = code1;
  1589  0710  0853               	movf	_code1+1,w
  1590  0711  00CF               	movwf	main@segR+1
  1591  0712  0852               	movf	_code1,w
  1592  0713  00CE               	movwf	main@segR
  1593  0714                     l2696:
  1594  0714                     l2698:	
  1595                           ;Q5.c: 647:             if(zyoutai == 0){
  1596                           
  1597                           
  1598                           ;Q5.c: 648:                 zyoutai = 2;
  1599  0714  3002               	movlw	2
  1600  0715  00CA               	movwf	main@zyoutai
  1601  0716  3000               	movlw	0
  1602  0717  00CB               	movwf	main@zyoutai+1
  1603  0718                     l2700:
  1604                           
  1605                           ;Q5.c: 652:             if(ans%2 == 1 && zyoutai == 2){
  1606  0718  1C48               	btfss	main@ans,0
  1607  0719  2F1B               	goto	u2851
  1608  071A  2F1C               	goto	u2850
  1609  071B                     u2851:
  1610  071B  2F37               	goto	l2708
  1611  071C                     u2850:
  1612  071C                     l2702:
  1613  071C                     l2704:
  1614                           
  1615                           ;Q5.c: 653:                 zyoutai = 3;
  1616  071C  3003               	movlw	3
  1617  071D  00CA               	movwf	main@zyoutai
  1618  071E  3000               	movlw	0
  1619  071F  00CB               	movwf	main@zyoutai+1
  1620  0720                     l2706:
  1621                           
  1622                           ;Q5.c: 655:                 motor(360,segL,segR,1,1);
  1623  0720  3068               	movlw	104
  1624  0721  00A8               	movwf	motor@kakudo
  1625  0722  3001               	movlw	1
  1626  0723  00A9               	movwf	motor@kakudo+1
  1627  0724  084D               	movf	main@segL+1,w
  1628  0725  00AB               	movwf	motor@dig1data+1
  1629  0726  084C               	movf	main@segL,w
  1630  0727  00AA               	movwf	motor@dig1data
  1631  0728  084F               	movf	main@segR+1,w
  1632  0729  00AD               	movwf	motor@dig2data+1
  1633  072A  084E               	movf	main@segR,w
  1634  072B  00AC               	movwf	motor@dig2data
  1635  072C  3001               	movlw	1
  1636  072D  00AE               	movwf	motor@smdata
  1637  072E  3000               	movlw	0
  1638  072F  00AF               	movwf	motor@smdata+1
  1639  0730  3001               	movlw	1
  1640  0731  00B0               	movwf	motor@tr
  1641  0732  3000               	movlw	0
  1642  0733  00B1               	movwf	motor@tr+1
  1643  0734  3180  2078  3185   	fcall	_motor
  1644  0737                     l2708:
  1645                           
  1646                           ;Q5.c: 660:             if(ans%2 == 0 && zyoutai == 2){
  1647  0737  0020               	movlb	0	; select bank0
  1648  0738  1848               	btfsc	main@ans,0
  1649  0739  2F3B               	goto	u2861
  1650  073A  2F3C               	goto	u2860
  1651  073B                     u2861:
  1652  073B  2F5E               	goto	l2716
  1653  073C                     u2860:
  1654  073C                     l2710:
  1655  073C  3002               	movlw	2
  1656  073D  064A               	xorwf	main@zyoutai,w
  1657  073E  044B               	iorwf	main@zyoutai+1,w
  1658  073F  1D03               	btfss	3,2
  1659  0740  2F42               	goto	u2871
  1660  0741  2F43               	goto	u2870
  1661  0742                     u2871:
  1662  0742  2F5E               	goto	l2716
  1663  0743                     u2870:
  1664  0743                     l2712:
  1665                           
  1666                           ;Q5.c: 661:                 zyoutai = 3;
  1667  0743  3003               	movlw	3
  1668  0744  00CA               	movwf	main@zyoutai
  1669  0745  3000               	movlw	0
  1670  0746  00CB               	movwf	main@zyoutai+1
  1671  0747                     l2714:
  1672                           
  1673                           ;Q5.c: 663:                 motor(720,segL,segR,2,1);
  1674  0747  30D0               	movlw	208
  1675  0748  00A8               	movwf	motor@kakudo
  1676  0749  3002               	movlw	2
  1677  074A  00A9               	movwf	motor@kakudo+1
  1678  074B  084D               	movf	main@segL+1,w
  1679  074C  00AB               	movwf	motor@dig1data+1
  1680  074D  084C               	movf	main@segL,w
  1681  074E  00AA               	movwf	motor@dig1data
  1682  074F  084F               	movf	main@segR+1,w
  1683  0750  00AD               	movwf	motor@dig2data+1
  1684  0751  084E               	movf	main@segR,w
  1685  0752  00AC               	movwf	motor@dig2data
  1686  0753  3002               	movlw	2
  1687  0754  00AE               	movwf	motor@smdata
  1688  0755  3000               	movlw	0
  1689  0756  00AF               	movwf	motor@smdata+1
  1690  0757  3001               	movlw	1
  1691  0758  00B0               	movwf	motor@tr
  1692  0759  3000               	movlw	0
  1693  075A  00B1               	movwf	motor@tr+1
  1694  075B  3180  2078  3185   	fcall	_motor
  1695  075E                     l2716:
  1696                           
  1697                           ;Q5.c: 668:             if(ans%2 == 0 && zyoutai == 2){
  1698  075E  0020               	movlb	0	; select bank0
  1699  075F  1848               	btfsc	main@ans,0
  1700  0760  2F62               	goto	u2881
  1701  0761  2F63               	goto	u2880
  1702  0762                     u2881:
  1703  0762  2F9D               	goto	l2726
  1704  0763                     u2880:
  1705  0763                     l2718:
  1706  0763  3002               	movlw	2
  1707  0764  064A               	xorwf	main@zyoutai,w
  1708  0765  044B               	iorwf	main@zyoutai+1,w
  1709  0766  1D03               	btfss	3,2
  1710  0767  2F69               	goto	u2891
  1711  0768  2F6A               	goto	u2890
  1712  0769                     u2891:
  1713  0769  2F9D               	goto	l2726
  1714  076A                     u2890:
  1715  076A                     l2720:
  1716                           
  1717                           ;Q5.c: 669:                 zyoutai = 3;
  1718  076A  3003               	movlw	3
  1719  076B  00CA               	movwf	main@zyoutai
  1720  076C  3000               	movlw	0
  1721  076D  00CB               	movwf	main@zyoutai+1
  1722  076E                     l2722:
  1723                           
  1724                           ;Q5.c: 671:                 motor(360,segL,segR,1,1);
  1725  076E  3068               	movlw	104
  1726  076F  00A8               	movwf	motor@kakudo
  1727  0770  3001               	movlw	1
  1728  0771  00A9               	movwf	motor@kakudo+1
  1729  0772  084D               	movf	main@segL+1,w
  1730  0773  00AB               	movwf	motor@dig1data+1
  1731  0774  084C               	movf	main@segL,w
  1732  0775  00AA               	movwf	motor@dig1data
  1733  0776  084F               	movf	main@segR+1,w
  1734  0777  00AD               	movwf	motor@dig2data+1
  1735  0778  084E               	movf	main@segR,w
  1736  0779  00AC               	movwf	motor@dig2data
  1737  077A  3001               	movlw	1
  1738  077B  00AE               	movwf	motor@smdata
  1739  077C  3000               	movlw	0
  1740  077D  00AF               	movwf	motor@smdata+1
  1741  077E  3001               	movlw	1
  1742  077F  00B0               	movwf	motor@tr
  1743  0780  3000               	movlw	0
  1744  0781  00B1               	movwf	motor@tr+1
  1745  0782  3180  2078  3185   	fcall	_motor
  1746  0785                     l2724:
  1747                           
  1748                           ;Q5.c: 672:                 motor(360,segL,segR,2,1);
  1749  0785  3068               	movlw	104
  1750  0786  0020               	movlb	0	; select bank0
  1751  0787  00A8               	movwf	motor@kakudo
  1752  0788  3001               	movlw	1
  1753  0789  00A9               	movwf	motor@kakudo+1
  1754  078A  084D               	movf	main@segL+1,w
  1755  078B  00AB               	movwf	motor@dig1data+1
  1756  078C  084C               	movf	main@segL,w
  1757  078D  00AA               	movwf	motor@dig1data
  1758  078E  084F               	movf	main@segR+1,w
  1759  078F  00AD               	movwf	motor@dig2data+1
  1760  0790  084E               	movf	main@segR,w
  1761  0791  00AC               	movwf	motor@dig2data
  1762  0792  3002               	movlw	2
  1763  0793  00AE               	movwf	motor@smdata
  1764  0794  3000               	movlw	0
  1765  0795  00AF               	movwf	motor@smdata+1
  1766  0796  3001               	movlw	1
  1767  0797  00B0               	movwf	motor@tr
  1768  0798  3000               	movlw	0
  1769  0799  00B1               	movwf	motor@tr+1
  1770  079A  3180  2078  3185   	fcall	_motor
  1771  079D                     l2726:
  1772                           
  1773                           ;Q5.c: 680:         tact(2);
  1774  079D  3002               	movlw	2
  1775  079E  00F8               	movwf	tact@mode
  1776  079F  3000               	movlw	0
  1777  07A0  00F9               	movwf	tact@mode+1
  1778  07A1  3180  20D9  3185   	fcall	_tact
  1779  07A4                     l2728:
  1780                           
  1781                           ;Q5.c: 682:         if(RA0 ==1 && RA1 == 1 && ((flag_sw3==0)&&(flag_P==1)) && segR != 0x
      +                          40 && segL != 0x40 && zyoutai == 3){
  1782  07A4  0020               	movlb	0	; select bank0
  1783  07A5  1C0C               	btfss	12,0	;volatile
  1784  07A6  2FA8               	goto	u2901
  1785  07A7  2FA9               	goto	u2900
  1786  07A8                     u2901:
  1787  07A8  2DE1               	goto	l2608
  1788  07A9                     u2900:
  1789  07A9                     l2730:
  1790  07A9  1C8C               	btfss	12,1	;volatile
  1791  07AA  2FAC               	goto	u2911
  1792  07AB  2FAD               	goto	u2910
  1793  07AC                     u2911:
  1794  07AC  2DE1               	goto	l2608
  1795  07AD                     u2910:
  1796  07AD                     l2732:
  1797  07AD  087C               	movf	_flag_sw3,w
  1798  07AE  047D               	iorwf	_flag_sw3+1,w
  1799  07AF  1D03               	btfss	3,2
  1800  07B0  2FB2               	goto	u2921
  1801  07B1  2FB3               	goto	u2920
  1802  07B2                     u2921:
  1803  07B2  2DE1               	goto	l2608
  1804  07B3                     u2920:
  1805  07B3                     l2734:
  1806  07B3  0368               	decf	_flag_P,w
  1807  07B4  0469               	iorwf	_flag_P+1,w
  1808  07B5  1D03               	btfss	3,2
  1809  07B6  2FB8               	goto	u2931
  1810  07B7  2FB9               	goto	u2930
  1811  07B8                     u2931:
  1812  07B8  2DE1               	goto	l2608
  1813  07B9                     u2930:
  1814  07B9                     l2736:
  1815  07B9  3040               	movlw	64
  1816  07BA  064E               	xorwf	main@segR,w
  1817  07BB  044F               	iorwf	main@segR+1,w
  1818  07BC  1903               	btfsc	3,2
  1819  07BD  2FBF               	goto	u2941
  1820  07BE  2FC0               	goto	u2940
  1821  07BF                     u2941:
  1822  07BF  2DE1               	goto	l2608
  1823  07C0                     u2940:
  1824  07C0                     l2738:
  1825  07C0  3040               	movlw	64
  1826  07C1  064C               	xorwf	main@segL,w
  1827  07C2  044D               	iorwf	main@segL+1,w
  1828  07C3  1903               	btfsc	3,2
  1829  07C4  2FC6               	goto	u2951
  1830  07C5  2FC7               	goto	u2950
  1831  07C6                     u2951:
  1832  07C6  2DE1               	goto	l2608
  1833  07C7                     u2950:
  1834  07C7                     l2740:
  1835  07C7  3003               	movlw	3
  1836  07C8  064A               	xorwf	main@zyoutai,w
  1837  07C9  044B               	iorwf	main@zyoutai+1,w
  1838  07CA  1D03               	btfss	3,2
  1839  07CB  2FCD               	goto	u2961
  1840  07CC  2FCE               	goto	u2960
  1841  07CD                     u2961:
  1842  07CD  2DE1               	goto	l2608
  1843  07CE                     u2960:
  1844  07CE                     l2742:
  1845                           
  1846                           ;Q5.c: 683:             zyoutai = 0;
  1847  07CE  01CA               	clrf	main@zyoutai
  1848  07CF  01CB               	clrf	main@zyoutai+1
  1849                           
  1850                           ;Q5.c: 685:             segR = 0;
  1851  07D0  01CE               	clrf	main@segR
  1852  07D1  01CF               	clrf	main@segR+1
  1853                           
  1854                           ;Q5.c: 686:             segL = 0;
  1855  07D2  01CC               	clrf	main@segL
  1856  07D3  01CD               	clrf	main@segL+1
  1857                           
  1858                           ;Q5.c: 688:             ataiR = 0;
  1859  07D4  01C6               	clrf	main@ataiR
  1860  07D5  01C7               	clrf	main@ataiR+1
  1861                           
  1862                           ;Q5.c: 689:             ataiL = 0;
  1863  07D6  01C4               	clrf	main@ataiL
  1864  07D7  01C5               	clrf	main@ataiL+1
  1865  07D8  2DE1               	goto	l2608
  1866  07D9  3180  2802         	ljmp	start
  1867  07DB                     __end_of_main:
  1868                           
  1869                           	psect	text1
  1870  001D                     __ptext1:	
  1871 ;; *************** function _zenoff *****************
  1872 ;; Defined at:
  1873 ;;		line 195 in file "Q5.c"
  1874 ;; Parameters:    Size  Location     Type
  1875 ;;		None
  1876 ;; Auto vars:     Size  Location     Type
  1877 ;;		None
  1878 ;; Return value:  Size  Location     Type
  1879 ;;                  1    wreg      void 
  1880 ;; Registers used:
  1881 ;;		status,2
  1882 ;; Tracked objects:
  1883 ;;		On entry : 0/0
  1884 ;;		On exit  : 0/0
  1885 ;;		Unchanged: 0/0
  1886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1891 ;;Total ram usage:        0 bytes
  1892 ;; Hardware stack levels used:    1
  1893 ;; This function calls:
  1894 ;;		Nothing
  1895 ;; This function is called by:
  1896 ;;		_main
  1897 ;; This function uses a non-reentrant model
  1898 ;;
  1899                           
  1900                           
  1901                           ;psect for function _zenoff
  1902  001D                     _zenoff:
  1903  001D                     l2204:	
  1904                           ;incstack = 0
  1905                           ; Regs used in _zenoff: [status,2]
  1906                           
  1907                           
  1908                           ;Q5.c: 197:     RC0=1;
  1909  001D  0020               	movlb	0	; select bank0
  1910  001E  140E               	bsf	14,0	;volatile
  1911                           
  1912                           ;Q5.c: 198:     RC1=1;
  1913  001F  148E               	bsf	14,1	;volatile
  1914                           
  1915                           ;Q5.c: 199:     RC2=1;
  1916  0020  150E               	bsf	14,2	;volatile
  1917  0021                     l2206:
  1918                           
  1919                           ;Q5.c: 200:     PORTB=0x00;
  1920  0021  018D               	clrf	13	;volatile
  1921  0022                     l2208:
  1922                           
  1923                           ;Q5.c: 201:     RC7=0;RC7=1;RC7=0;
  1924  0022  138E               	bcf	14,7	;volatile
  1925  0023                     l2210:
  1926  0023  178E               	bsf	14,7	;volatile
  1927  0024                     l2212:
  1928  0024  138E               	bcf	14,7	;volatile
  1929  0025                     l108:
  1930  0025  0008               	return
  1931  0026                     __end_of_zenoff:
  1932                           
  1933                           	psect	text2
  1934  00D9                     __ptext2:	
  1935 ;; *************** function _tact *****************
  1936 ;; Defined at:
  1937 ;;		line 346 in file "Q5.c"
  1938 ;; Parameters:    Size  Location     Type
  1939 ;;  mode            2    8[COMMON] unsigned short 
  1940 ;; Auto vars:     Size  Location     Type
  1941 ;;		None
  1942 ;; Return value:  Size  Location     Type
  1943 ;;                  1    wreg      void 
  1944 ;; Registers used:
  1945 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1946 ;; Tracked objects:
  1947 ;;		On entry : 0/0
  1948 ;;		On exit  : 0/0
  1949 ;;		Unchanged: 0/0
  1950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1951 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1954 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1955 ;;Total ram usage:        2 bytes
  1956 ;; Hardware stack levels used:    1
  1957 ;; Hardware stack levels required when called:    1
  1958 ;; This function calls:
  1959 ;;		_tactsw
  1960 ;; This function is called by:
  1961 ;;		_main
  1962 ;;		_kaisu
  1963 ;;		_waitSEGStop
  1964 ;;		_motorStop
  1965 ;; This function uses a non-reentrant model
  1966 ;;
  1967                           
  1968                           
  1969                           ;psect for function _tact
  1970  00D9                     _tact:
  1971  00D9                     l2360:	
  1972                           ;incstack = 0
  1973                           ; Regs used in _tact: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1974                           
  1975                           
  1976                           ;Q5.c: 346: void tact(unsigned short mode);Q5.c: 347: {;Q5.c: 348:     switch(mode){
  1977  00D9  2914               	goto	l2388
  1978  00DA                     l2362:
  1979                           
  1980                           ;Q5.c: 350:                 tactsw();
  1981  00DA  3180  209C  3180   	fcall	_tactsw
  1982  00DD                     l2364:
  1983                           
  1984                           ;Q5.c: 351:                 if(flag_sw3==0)flag_R=1;
  1985  00DD  087C               	movf	_flag_sw3,w
  1986  00DE  047D               	iorwf	_flag_sw3+1,w
  1987  00DF  1D03               	btfss	3,2
  1988  00E0  28E2               	goto	u2201
  1989  00E1  28E3               	goto	u2200
  1990  00E2                     u2201:
  1991  00E2  2924               	goto	l208
  1992  00E3                     u2200:
  1993  00E3                     l2366:
  1994  00E3  3001               	movlw	1
  1995  00E4  0020               	movlb	0	; select bank0
  1996  00E5  00EA               	movwf	_flag_R
  1997  00E6  3000               	movlw	0
  1998  00E7  00EB               	movwf	_flag_R+1
  1999  00E8  2924               	goto	l208
  2000  00E9                     l2368:
  2001                           
  2002                           ;Q5.c: 354:                 tactsw();
  2003  00E9  3180  209C  3180   	fcall	_tactsw
  2004  00EC                     l2370:
  2005                           
  2006                           ;Q5.c: 355:                 if(flag_sw3==1)flag_P=1;
  2007  00EC  037C               	decf	_flag_sw3,w
  2008  00ED  047D               	iorwf	_flag_sw3+1,w
  2009  00EE  1D03               	btfss	3,2
  2010  00EF  28F1               	goto	u2211
  2011  00F0  28F2               	goto	u2210
  2012  00F1                     u2211:
  2013  00F1  2924               	goto	l208
  2014  00F2                     u2210:
  2015  00F2                     l2372:
  2016  00F2  3001               	movlw	1
  2017  00F3  0020               	movlb	0	; select bank0
  2018  00F4  00E8               	movwf	_flag_P
  2019  00F5  3000               	movlw	0
  2020  00F6  00E9               	movwf	_flag_P+1
  2021  00F7  2924               	goto	l208
  2022  00F8                     l2374:
  2023                           
  2024                           ;Q5.c: 358:                 tactsw();
  2025  00F8  3180  209C  3180   	fcall	_tactsw
  2026  00FB                     l2376:
  2027                           
  2028                           ;Q5.c: 359:                 if(flag_sw3==0)flag_R=1;
  2029  00FB  087C               	movf	_flag_sw3,w
  2030  00FC  047D               	iorwf	_flag_sw3+1,w
  2031  00FD  1D03               	btfss	3,2
  2032  00FE  2900               	goto	u2221
  2033  00FF  2901               	goto	u2220
  2034  0100                     u2221:
  2035  0100  2906               	goto	l2380
  2036  0101                     u2220:
  2037  0101                     l2378:
  2038  0101  3001               	movlw	1
  2039  0102  0020               	movlb	0	; select bank0
  2040  0103  00EA               	movwf	_flag_R
  2041  0104  3000               	movlw	0
  2042  0105  00EB               	movwf	_flag_R+1
  2043  0106                     l2380:
  2044                           
  2045                           ;Q5.c: 360:                 if((flag_sw3==1)&&(flag_R==1))flag_P=1;
  2046  0106  037C               	decf	_flag_sw3,w
  2047  0107  047D               	iorwf	_flag_sw3+1,w
  2048  0108  1D03               	btfss	3,2
  2049  0109  290B               	goto	u2231
  2050  010A  290C               	goto	u2230
  2051  010B                     u2231:
  2052  010B  2924               	goto	l208
  2053  010C                     u2230:
  2054  010C                     l2382:
  2055  010C  0020               	movlb	0	; select bank0
  2056  010D  036A               	decf	_flag_R,w
  2057  010E  046B               	iorwf	_flag_R+1,w
  2058  010F  1D03               	btfss	3,2
  2059  0110  2912               	goto	u2241
  2060  0111  2913               	goto	u2240
  2061  0112                     u2241:
  2062  0112  2924               	goto	l208
  2063  0113                     u2240:
  2064  0113  28F2               	goto	l2372
  2065  0114                     l2388:
  2066                           
  2067                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2068                           ; Switch size 1, requested type "simple"
  2069                           ; Number of cases is 1, Range of values is 0 to 0
  2070                           ; switch strategies available:
  2071                           ; Name         Instructions Cycles
  2072                           ; simple_byte            4     3 (average)
  2073                           ; direct_byte            8     6 (fixed)
  2074                           ; jumptable            260     6 (fixed)
  2075                           ;	Chosen strategy is simple_byte
  2076  0114  0879               	movf	tact@mode+1,w
  2077  0115  3A00               	xorlw	0	; case 0
  2078  0116  1903               	skipnz
  2079  0117  2919               	goto	l2850
  2080  0118  2924               	goto	l208
  2081  0119                     l2850:
  2082                           
  2083                           ; Switch size 1, requested type "simple"
  2084                           ; Number of cases is 3, Range of values is 0 to 2
  2085                           ; switch strategies available:
  2086                           ; Name         Instructions Cycles
  2087                           ; simple_byte           10     6 (average)
  2088                           ; direct_byte           12     6 (fixed)
  2089                           ; jumptable            260     6 (fixed)
  2090                           ;	Chosen strategy is simple_byte
  2091  0119  0878               	movf	tact@mode,w
  2092  011A  3A00               	xorlw	0	; case 0
  2093  011B  1903               	skipnz
  2094  011C  28DA               	goto	l2362
  2095  011D  3A01               	xorlw	1	; case 1
  2096  011E  1903               	skipnz
  2097  011F  28E9               	goto	l2368
  2098  0120  3A03               	xorlw	3	; case 2
  2099  0121  1903               	skipnz
  2100  0122  28F8               	goto	l2374
  2101  0123  2924               	goto	l208
  2102  0124                     l208:
  2103  0124  0008               	return
  2104  0125                     __end_of_tact:
  2105                           
  2106                           	psect	text3
  2107  009C                     __ptext3:	
  2108 ;; *************** function _tactsw *****************
  2109 ;; Defined at:
  2110 ;;		line 331 in file "Q5.c"
  2111 ;; Parameters:    Size  Location     Type
  2112 ;;		None
  2113 ;; Auto vars:     Size  Location     Type
  2114 ;;  a               2    6[COMMON] unsigned short 
  2115 ;;  c               2    4[COMMON] unsigned short 
  2116 ;;  b               2    2[COMMON] unsigned short 
  2117 ;; Return value:  Size  Location     Type
  2118 ;;                  1    wreg      void 
  2119 ;; Registers used:
  2120 ;;		wreg, status,2, status,0
  2121 ;; Tracked objects:
  2122 ;;		On entry : 0/0
  2123 ;;		On exit  : 0/0
  2124 ;;		Unchanged: 0/0
  2125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2127 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2128 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2129 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2130 ;;Total ram usage:        8 bytes
  2131 ;; Hardware stack levels used:    1
  2132 ;; This function calls:
  2133 ;;		Nothing
  2134 ;; This function is called by:
  2135 ;;		_tact
  2136 ;; This function uses a non-reentrant model
  2137 ;;
  2138                           
  2139                           
  2140                           ;psect for function _tactsw
  2141  009C                     _tactsw:
  2142  009C                     l2060:	
  2143                           ;incstack = 0
  2144                           ; Regs used in _tactsw: [wreg+status,2+status,0]
  2145                           
  2146                           
  2147                           ;Q5.c: 333:     unsigned short a,b,c;;Q5.c: 334:     b=c=0;
  2148  009C  01F4               	clrf	tactsw@c
  2149  009D  01F5               	clrf	tactsw@c+1
  2150  009E  01F2               	clrf	tactsw@b
  2151  009F  01F3               	clrf	tactsw@b+1
  2152  00A0                     l2062:
  2153                           
  2154                           ;Q5.c: 336:             a=RA2;
  2155  00A0  1003               	clrc
  2156  00A1  0020               	movlb	0	; select bank0
  2157  00A2  190C               	btfsc	12,2	;volatile
  2158  00A3  1403               	setc
  2159  00A4  3000               	movlw	0
  2160  00A5  3D09               	addwfc	9,w
  2161  00A6  00F0               	movwf	??_tactsw
  2162  00A7  01F1               	clrf	??_tactsw+1
  2163  00A8  0870               	movf	??_tactsw,w
  2164  00A9  00F6               	movwf	tactsw@a
  2165  00AA  0871               	movf	??_tactsw+1,w
  2166  00AB  00F7               	movwf	tactsw@a+1
  2167  00AC                     l2064:
  2168                           
  2169                           ;Q5.c: 337:             if(b==a)++c;
  2170  00AC  0877               	movf	tactsw@a+1,w
  2171  00AD  0673               	xorwf	tactsw@b+1,w
  2172  00AE  1D03               	skipz
  2173  00AF  28B2               	goto	u1735
  2174  00B0  0876               	movf	tactsw@a,w
  2175  00B1  0672               	xorwf	tactsw@b,w
  2176  00B2                     u1735:
  2177  00B2  1D03               	skipz
  2178  00B3  28B5               	goto	u1731
  2179  00B4  28B6               	goto	u1730
  2180  00B5                     u1731:
  2181  00B5  28BB               	goto	l2068
  2182  00B6                     u1730:
  2183  00B6                     l2066:
  2184  00B6  3001               	movlw	1
  2185  00B7  07F4               	addwf	tactsw@c,f
  2186  00B8  3000               	movlw	0
  2187  00B9  3DF5               	addwfc	tactsw@c+1,f
  2188  00BA  28BD               	goto	l2070
  2189  00BB                     l2068:
  2190  00BB  01F4               	clrf	tactsw@c
  2191  00BC  01F5               	clrf	tactsw@c+1
  2192  00BD                     l2070:
  2193                           
  2194                           ;Q5.c: 339:             if(c>10){flag_sw3=(~a)&0x01;return;}
  2195  00BD  3000               	movlw	0
  2196  00BE  0275               	subwf	tactsw@c+1,w
  2197  00BF  300B               	movlw	11
  2198  00C0  1903               	skipnz
  2199  00C1  0274               	subwf	tactsw@c,w
  2200  00C2  1C03               	skipc
  2201  00C3  28C5               	goto	u1741
  2202  00C4  28C6               	goto	u1740
  2203  00C5                     u1741:
  2204  00C5  28D3               	goto	l2076
  2205  00C6                     u1740:
  2206  00C6                     l2072:
  2207  00C6  0877               	movf	tactsw@a+1,w
  2208  00C7  00F1               	movwf	??_tactsw+1
  2209  00C8  0876               	movf	tactsw@a,w
  2210  00C9  00F0               	movwf	??_tactsw
  2211  00CA  09F0               	comf	??_tactsw,f
  2212  00CB  09F1               	comf	??_tactsw+1,f
  2213  00CC  3001               	movlw	1
  2214  00CD  0570               	andwf	??_tactsw,w
  2215  00CE  00FC               	movwf	_flag_sw3
  2216  00CF  3000               	movlw	0
  2217  00D0  0571               	andwf	??_tactsw+1,w
  2218  00D1  00FD               	movwf	_flag_sw3+1
  2219  00D2  28D8               	goto	l193
  2220  00D3                     l2076:
  2221                           
  2222                           ;Q5.c: 340:             b=a;
  2223  00D3  0877               	movf	tactsw@a+1,w
  2224  00D4  00F3               	movwf	tactsw@b+1
  2225  00D5  0876               	movf	tactsw@a,w
  2226  00D6  00F2               	movwf	tactsw@b
  2227  00D7  28A0               	goto	l2062
  2228  00D8                     l193:
  2229  00D8  0008               	return
  2230  00D9                     __end_of_tactsw:
  2231                           
  2232                           	psect	text4
  2233  0026                     __ptext4:	
  2234 ;; *************** function _portinit *****************
  2235 ;; Defined at:
  2236 ;;		line 160 in file "Q5.c"
  2237 ;; Parameters:    Size  Location     Type
  2238 ;;		None
  2239 ;; Auto vars:     Size  Location     Type
  2240 ;;		None
  2241 ;; Return value:  Size  Location     Type
  2242 ;;                  1    wreg      void 
  2243 ;; Registers used:
  2244 ;;		wreg, status,2
  2245 ;; Tracked objects:
  2246 ;;		On entry : 0/0
  2247 ;;		On exit  : 0/0
  2248 ;;		Unchanged: 0/0
  2249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2254 ;;Total ram usage:        0 bytes
  2255 ;; Hardware stack levels used:    1
  2256 ;; This function calls:
  2257 ;;		Nothing
  2258 ;; This function is called by:
  2259 ;;		_main
  2260 ;; This function uses a non-reentrant model
  2261 ;;
  2262                           
  2263                           
  2264                           ;psect for function _portinit
  2265  0026                     _portinit:
  2266  0026                     l2174:	
  2267                           ;incstack = 0
  2268                           ; Regs used in _portinit: [wreg+status,2]
  2269                           
  2270                           
  2271                           ;Q5.c: 163:     ANSELA=0x00;
  2272  0026  0023               	movlb	3	; select bank3
  2273  0027  018C               	clrf	12	;volatile
  2274                           
  2275                           ;Q5.c: 164:     ANSELB=0x00;
  2276  0028  018D               	clrf	13	;volatile
  2277  0029                     l2176:
  2278                           
  2279                           ;Q5.c: 166:     PORTA=0x07;
  2280  0029  3007               	movlw	7
  2281  002A  0020               	movlb	0	; select bank0
  2282  002B  008C               	movwf	12	;volatile
  2283  002C                     l2178:
  2284                           
  2285                           ;Q5.c: 167:     TRISA=0x07;
  2286  002C  3007               	movlw	7
  2287  002D  0021               	movlb	1	; select bank1
  2288  002E  008C               	movwf	12	;volatile
  2289                           
  2290                           ;Q5.c: 168:     PORTB=0x00;
  2291  002F  0020               	movlb	0	; select bank0
  2292  0030  018D               	clrf	13	;volatile
  2293                           
  2294                           ;Q5.c: 169:     TRISB=0x00;
  2295  0031  0021               	movlb	1	; select bank1
  2296  0032  018D               	clrf	13	;volatile
  2297  0033                     l2180:
  2298                           
  2299                           ;Q5.c: 170:     PORTC=0x07;
  2300  0033  3007               	movlw	7
  2301  0034  0020               	movlb	0	; select bank0
  2302  0035  008E               	movwf	14	;volatile
  2303  0036                     l2182:
  2304                           
  2305                           ;Q5.c: 171:     TRISC=0x00;
  2306  0036  0021               	movlb	1	; select bank1
  2307  0037  018E               	clrf	14	;volatile
  2308  0038                     l95:
  2309  0038  0008               	return
  2310  0039                     __end_of_portinit:
  2311                           
  2312                           	psect	text5
  2313  0078                     __ptext5:	
  2314 ;; *************** function _motor *****************
  2315 ;; Defined at:
  2316 ;;		line 484 in file "Q5.c"
  2317 ;; Parameters:    Size  Location     Type
  2318 ;;  kakudo          2    8[BANK0 ] int 
  2319 ;;  dig1data        2   10[BANK0 ] unsigned short 
  2320 ;;  dig2data        2   12[BANK0 ] unsigned short 
  2321 ;;  smdata          2   14[BANK0 ] unsigned short 
  2322 ;;  tr              2   16[BANK0 ] unsigned int 
  2323 ;; Auto vars:     Size  Location     Type
  2324 ;;  i               2    8[COMMON] int 
  2325 ;; Return value:  Size  Location     Type
  2326 ;;                  1    wreg      void 
  2327 ;; Registers used:
  2328 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2329 ;; Tracked objects:
  2330 ;;		On entry : 0/0
  2331 ;;		On exit  : 0/0
  2332 ;;		Unchanged: 0/0
  2333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2334 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2335 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2337 ;;      Totals:         2      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2338 ;;Total ram usage:       12 bytes
  2339 ;; Hardware stack levels used:    1
  2340 ;; Hardware stack levels required when called:    1
  2341 ;; This function calls:
  2342 ;;		_dynam
  2343 ;; This function is called by:
  2344 ;;		_main
  2345 ;;		_henka
  2346 ;; This function uses a non-reentrant model
  2347 ;;
  2348                           
  2349                           
  2350                           ;psect for function _motor
  2351  0078                     _motor:
  2352  0078                     l2410:	
  2353                           ;incstack = 0
  2354                           ; Regs used in _motor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2355                           
  2356                           
  2357                           ;Q5.c: 486:     for(int i = kakudo;i>=0;i--){
  2358  0078  0020               	movlb	0	; select bank0
  2359  0079  0829               	movf	motor@kakudo+1,w
  2360  007A  00F9               	movwf	motor@i+1
  2361  007B  0828               	movf	motor@kakudo,w
  2362  007C  00F8               	movwf	motor@i
  2363  007D                     l2412:
  2364  007D  1FF9               	btfss	motor@i+1,7
  2365  007E  2880               	goto	u2251
  2366  007F  2881               	goto	u2250
  2367  0080                     u2251:
  2368  0080  2882               	goto	l2416
  2369  0081                     u2250:
  2370  0081  289B               	goto	l271
  2371  0082                     l2416:
  2372                           
  2373                           ;Q5.c: 487:         dynam(dig1data,dig2data,smdata,tr);
  2374  0082  0020               	movlb	0	; select bank0
  2375  0083  082B               	movf	motor@dig1data+1,w
  2376  0084  00F1               	movwf	dynam@dig1data+1
  2377  0085  082A               	movf	motor@dig1data,w
  2378  0086  00F0               	movwf	dynam@dig1data
  2379  0087  082D               	movf	motor@dig2data+1,w
  2380  0088  00F3               	movwf	dynam@dig2data+1
  2381  0089  082C               	movf	motor@dig2data,w
  2382  008A  00F2               	movwf	dynam@dig2data
  2383  008B  082F               	movf	motor@smdata+1,w
  2384  008C  00F5               	movwf	dynam@smdata+1
  2385  008D  082E               	movf	motor@smdata,w
  2386  008E  00F4               	movwf	dynam@smdata
  2387  008F  0831               	movf	motor@tr+1,w
  2388  0090  00F7               	movwf	dynam@tr+1
  2389  0091  0830               	movf	motor@tr,w
  2390  0092  00F6               	movwf	dynam@tr
  2391  0093  3182  2274  3180   	fcall	_dynam
  2392  0096                     l2418:
  2393                           
  2394                           ;Q5.c: 488:     }
  2395  0096  30FF               	movlw	255
  2396  0097  07F8               	addwf	motor@i,f
  2397  0098  30FF               	movlw	255
  2398  0099  3DF9               	addwfc	motor@i+1,f
  2399  009A  287D               	goto	l2412
  2400  009B                     l271:
  2401  009B  0008               	return
  2402  009C                     __end_of_motor:
  2403                           
  2404                           	psect	text6
  2405  0274                     __ptext6:	
  2406 ;; *************** function _dynam *****************
  2407 ;; Defined at:
  2408 ;;		line 206 in file "Q5.c"
  2409 ;; Parameters:    Size  Location     Type
  2410 ;;  dig1data        2    0[COMMON] unsigned short 
  2411 ;;  dig2data        2    2[COMMON] unsigned short 
  2412 ;;  smdata          2    4[COMMON] unsigned short 
  2413 ;;  tr              2    6[COMMON] unsigned int 
  2414 ;; Auto vars:     Size  Location     Type
  2415 ;;  ext             2    6[BANK0 ] unsigned short 
  2416 ;;  j               2    4[BANK0 ] unsigned int 
  2417 ;;  tm              2    2[BANK0 ] unsigned int 
  2418 ;;  smd             2    0[BANK0 ] unsigned short 
  2419 ;; Return value:  Size  Location     Type
  2420 ;;                  1    wreg      void 
  2421 ;; Registers used:
  2422 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2423 ;; Tracked objects:
  2424 ;;		On entry : 0/0
  2425 ;;		On exit  : 0/0
  2426 ;;		Unchanged: 0/0
  2427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2428 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2429 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2431 ;;      Totals:         8       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2432 ;;Total ram usage:       16 bytes
  2433 ;; Hardware stack levels used:    1
  2434 ;; This function calls:
  2435 ;;		Nothing
  2436 ;; This function is called by:
  2437 ;;		_motor
  2438 ;;		_main
  2439 ;;		_clear
  2440 ;;		_waitSEG
  2441 ;;		_waitSEGStop
  2442 ;;		_motorStop
  2443 ;; This function uses a non-reentrant model
  2444 ;;
  2445                           
  2446                           
  2447                           ;psect for function _dynam
  2448  0274                     _dynam:
  2449  0274                     l1904:	
  2450                           ;incstack = 0
  2451                           ; Regs used in _dynam: [wreg-fsr0h+status,2+status,0]
  2452                           
  2453  0274  0020               	movlb	0	; select bank0
  2454  0275  01A2               	clrf	dynam@tm
  2455  0276  01A3               	clrf	dynam@tm+1
  2456                           
  2457                           ;Q5.c: 209:     unsigned short ext=0,smd=0;
  2458  0277  01A6               	clrf	dynam@ext
  2459  0278  01A7               	clrf	dynam@ext+1
  2460  0279  01A0               	clrf	dynam@smd
  2461  027A  01A1               	clrf	dynam@smd+1
  2462  027B                     l1906:
  2463                           
  2464                           ;Q5.c: 210:     RC7=0;
  2465  027B  138E               	bcf	14,7	;volatile
  2466  027C                     l1908:
  2467                           
  2468                           ;Q5.c: 211:     PORTB=dig1data;
  2469  027C  0870               	movf	dynam@dig1data,w
  2470  027D  008D               	movwf	13	;volatile
  2471  027E                     l1910:
  2472                           
  2473                           ;Q5.c: 212:     RC5=0;RC6=1;
  2474  027E  128E               	bcf	14,5	;volatile
  2475  027F                     l1912:
  2476  027F  170E               	bsf	14,6	;volatile
  2477  0280                     l1914:
  2478                           
  2479                           ;Q5.c: 213:     if(tr==5){tm=4000;}
  2480  0280  3005               	movlw	5
  2481  0281  0676               	xorwf	dynam@tr,w
  2482  0282  0477               	iorwf	dynam@tr+1,w
  2483  0283  1D03               	btfss	3,2
  2484  0284  2A86               	goto	u1511
  2485  0285  2A87               	goto	u1510
  2486  0286                     u1511:
  2487  0286  2A8C               	goto	l1918
  2488  0287                     u1510:
  2489  0287                     l1916:
  2490  0287  30A0               	movlw	160
  2491  0288  00A2               	movwf	dynam@tm
  2492  0289  300F               	movlw	15
  2493  028A  00A3               	movwf	dynam@tm+1
  2494  028B  2A90               	goto	l112
  2495  028C                     l1918:
  2496  028C  30D0               	movlw	208
  2497  028D  00A2               	movwf	dynam@tm
  2498  028E  3007               	movlw	7
  2499  028F  00A3               	movwf	dynam@tm+1
  2500  0290                     l112:
  2501                           
  2502                           ;Q5.c: 215:     for(j=tm;j>0;--j);
  2503  0290  0823               	movf	dynam@tm+1,w
  2504  0291  00A5               	movwf	dynam@j+1
  2505  0292  0822               	movf	dynam@tm,w
  2506  0293  00A4               	movwf	dynam@j
  2507  0294                     l1920:
  2508  0294  0824               	movf	dynam@j,w
  2509  0295  0425               	iorwf	dynam@j+1,w
  2510  0296  1D03               	btfss	3,2
  2511  0297  2A99               	goto	u1521
  2512  0298  2A9A               	goto	u1520
  2513  0299                     u1521:
  2514  0299  2A9B               	goto	l1924
  2515  029A                     u1520:
  2516  029A  2AA0               	goto	l114
  2517  029B                     l1924:
  2518  029B  3001               	movlw	1
  2519  029C  02A4               	subwf	dynam@j,f
  2520  029D  3000               	movlw	0
  2521  029E  3BA5               	subwfb	dynam@j+1,f
  2522  029F  2A94               	goto	l1920
  2523  02A0                     l114:
  2524                           
  2525                           ;Q5.c: 216:     RC5=0;RC6=0;
  2526  02A0  128E               	bcf	14,5	;volatile
  2527  02A1  130E               	bcf	14,6	;volatile
  2528  02A2                     l1928:
  2529                           
  2530                           ;Q5.c: 217:     PORTB=dig2data;
  2531  02A2  0872               	movf	dynam@dig2data,w
  2532  02A3  008D               	movwf	13	;volatile
  2533  02A4                     l1930:
  2534                           
  2535                           ;Q5.c: 218:     RC6=0;RC5=1;
  2536  02A4  130E               	bcf	14,6	;volatile
  2537  02A5                     l1932:
  2538  02A5  168E               	bsf	14,5	;volatile
  2539  02A6                     l1934:
  2540                           
  2541                           ;Q5.c: 219:     if(tr==5){tm=4000;}
  2542  02A6  3005               	movlw	5
  2543  02A7  0676               	xorwf	dynam@tr,w
  2544  02A8  0477               	iorwf	dynam@tr+1,w
  2545  02A9  1D03               	btfss	3,2
  2546  02AA  2AAC               	goto	u1531
  2547  02AB  2AAD               	goto	u1530
  2548  02AC                     u1531:
  2549  02AC  2AB2               	goto	l1938
  2550  02AD                     u1530:
  2551  02AD                     l1936:
  2552  02AD  30A0               	movlw	160
  2553  02AE  00A2               	movwf	dynam@tm
  2554  02AF  300F               	movlw	15
  2555  02B0  00A3               	movwf	dynam@tm+1
  2556  02B1  2AB6               	goto	l116
  2557  02B2                     l1938:
  2558  02B2  30D0               	movlw	208
  2559  02B3  00A2               	movwf	dynam@tm
  2560  02B4  3007               	movlw	7
  2561  02B5  00A3               	movwf	dynam@tm+1
  2562  02B6                     l116:
  2563                           
  2564                           ;Q5.c: 221:     for(j=tm;j>0;--j);
  2565  02B6  0823               	movf	dynam@tm+1,w
  2566  02B7  00A5               	movwf	dynam@j+1
  2567  02B8  0822               	movf	dynam@tm,w
  2568  02B9  00A4               	movwf	dynam@j
  2569  02BA                     l1940:
  2570  02BA  0824               	movf	dynam@j,w
  2571  02BB  0425               	iorwf	dynam@j+1,w
  2572  02BC  1D03               	btfss	3,2
  2573  02BD  2ABF               	goto	u1541
  2574  02BE  2AC0               	goto	u1540
  2575  02BF                     u1541:
  2576  02BF  2AC1               	goto	l1944
  2577  02C0                     u1540:
  2578  02C0  2AC6               	goto	l118
  2579  02C1                     l1944:
  2580  02C1  3001               	movlw	1
  2581  02C2  02A4               	subwf	dynam@j,f
  2582  02C3  3000               	movlw	0
  2583  02C4  3BA5               	subwfb	dynam@j+1,f
  2584  02C5  2ABA               	goto	l1940
  2585  02C6                     l118:
  2586                           
  2587                           ;Q5.c: 222:     RC5=0;RC6=0;
  2588  02C6  128E               	bcf	14,5	;volatile
  2589  02C7  130E               	bcf	14,6	;volatile
  2590                           
  2591                           ;Q5.c: 223:     switch(smdata){
  2592  02C8  2BCD               	goto	l2054
  2593  02C9                     l1948:
  2594                           
  2595                           ;Q5.c: 225:                 PORTB=0x00;smd=(0x01|0x02|0x04|0x08|0x10|0x20);
  2596  02C9  018D               	clrf	13	;volatile
  2597  02CA                     l1950:
  2598  02CA                     l1952:
  2599                           
  2600                           ;Q5.c: 226:                 RC7=0;RC7=1;RC7=0;
  2601  02CA  138E               	bcf	14,7	;volatile
  2602  02CB                     l1954:
  2603  02CB  178E               	bsf	14,7	;volatile
  2604  02CC                     l1956:
  2605  02CC  138E               	bcf	14,7	;volatile
  2606                           
  2607                           ;Q5.c: 227:                 break;
  2608  02CD  2BDD               	goto	l135
  2609  02CE                     l1958:
  2610                           
  2611                           ;Q5.c: 229:                 if(flg==1)cw=0;flg=0;
  2612  02CE  0366               	decf	_flg,w
  2613  02CF  0467               	iorwf	_flg+1,w
  2614  02D0  1D03               	btfss	3,2
  2615  02D1  2AD3               	goto	u1551
  2616  02D2  2AD4               	goto	u1550
  2617  02D3                     u1551:
  2618  02D3  2AD6               	goto	l123
  2619  02D4                     u1550:
  2620  02D4                     l1960:
  2621  02D4  01E4               	clrf	_cw
  2622  02D5  01E5               	clrf	_cw+1
  2623  02D6                     l123:
  2624  02D6  01E6               	clrf	_flg
  2625  02D7  01E7               	clrf	_flg+1
  2626  02D8                     l1962:
  2627                           
  2628                           ;Q5.c: 230:                 if((cw==0)&&(ext==0)){cw=1;ccw=0;ext=1;PORTB=smd=0x09;}
  2629  02D8  0864               	movf	_cw,w
  2630  02D9  0465               	iorwf	_cw+1,w
  2631  02DA  1D03               	btfss	3,2
  2632  02DB  2ADD               	goto	u1561
  2633  02DC  2ADE               	goto	u1560
  2634  02DD                     u1561:
  2635  02DD  2AF4               	goto	l1974
  2636  02DE                     u1560:
  2637  02DE                     l1964:
  2638  02DE  0826               	movf	dynam@ext,w
  2639  02DF  0427               	iorwf	dynam@ext+1,w
  2640  02E0  1D03               	btfss	3,2
  2641  02E1  2AE3               	goto	u1571
  2642  02E2  2AE4               	goto	u1570
  2643  02E3                     u1571:
  2644  02E3  2AF4               	goto	l1974
  2645  02E4                     u1570:
  2646  02E4                     l1966:
  2647  02E4  3001               	movlw	1
  2648  02E5  00E4               	movwf	_cw
  2649  02E6  3000               	movlw	0
  2650  02E7  00E5               	movwf	_cw+1
  2651  02E8                     l1968:
  2652  02E8  01E2               	clrf	_ccw
  2653  02E9  01E3               	clrf	_ccw+1
  2654  02EA                     l1970:
  2655  02EA  3001               	movlw	1
  2656  02EB  00A6               	movwf	dynam@ext
  2657  02EC  3000               	movlw	0
  2658  02ED  00A7               	movwf	dynam@ext+1
  2659  02EE                     l1972:
  2660  02EE  3009               	movlw	9
  2661  02EF  00A0               	movwf	dynam@smd
  2662  02F0  3000               	movlw	0
  2663  02F1  00A1               	movwf	dynam@smd+1
  2664  02F2  0820               	movf	dynam@smd,w
  2665  02F3  008D               	movwf	13	;volatile
  2666  02F4                     l1974:
  2667                           
  2668                           ;Q5.c: 231:                 if((cw==1)&&(ext==0)){cw=2;ccw=3;ext=1;PORTB=smd=0x0C;}
  2669  02F4  0364               	decf	_cw,w
  2670  02F5  0465               	iorwf	_cw+1,w
  2671  02F6  1D03               	btfss	3,2
  2672  02F7  2AF9               	goto	u1581
  2673  02F8  2AFA               	goto	u1580
  2674  02F9                     u1581:
  2675  02F9  2B12               	goto	l1980
  2676  02FA                     u1580:
  2677  02FA                     l1976:
  2678  02FA  0826               	movf	dynam@ext,w
  2679  02FB  0427               	iorwf	dynam@ext+1,w
  2680  02FC  1D03               	btfss	3,2
  2681  02FD  2AFF               	goto	u1591
  2682  02FE  2B00               	goto	u1590
  2683  02FF                     u1591:
  2684  02FF  2B12               	goto	l1980
  2685  0300                     u1590:
  2686  0300                     l1978:
  2687  0300  3002               	movlw	2
  2688  0301  00E4               	movwf	_cw
  2689  0302  3000               	movlw	0
  2690  0303  00E5               	movwf	_cw+1
  2691  0304  3003               	movlw	3
  2692  0305  00E2               	movwf	_ccw
  2693  0306  3000               	movlw	0
  2694  0307  00E3               	movwf	_ccw+1
  2695  0308  3001               	movlw	1
  2696  0309  00A6               	movwf	dynam@ext
  2697  030A  3000               	movlw	0
  2698  030B  00A7               	movwf	dynam@ext+1
  2699  030C  300C               	movlw	12
  2700  030D  00A0               	movwf	dynam@smd
  2701  030E  3000               	movlw	0
  2702  030F  00A1               	movwf	dynam@smd+1
  2703  0310  0820               	movf	dynam@smd,w
  2704  0311  008D               	movwf	13	;volatile
  2705  0312                     l1980:
  2706                           
  2707                           ;Q5.c: 232:                 if((cw==2)&&(ext==0)){cw=3;ccw=2;ext=1;PORTB=smd=0x06;}
  2708  0312  3002               	movlw	2
  2709  0313  0664               	xorwf	_cw,w
  2710  0314  0465               	iorwf	_cw+1,w
  2711  0315  1D03               	btfss	3,2
  2712  0316  2B18               	goto	u1601
  2713  0317  2B19               	goto	u1600
  2714  0318                     u1601:
  2715  0318  2B31               	goto	l1986
  2716  0319                     u1600:
  2717  0319                     l1982:
  2718  0319  0826               	movf	dynam@ext,w
  2719  031A  0427               	iorwf	dynam@ext+1,w
  2720  031B  1D03               	btfss	3,2
  2721  031C  2B1E               	goto	u1611
  2722  031D  2B1F               	goto	u1610
  2723  031E                     u1611:
  2724  031E  2B31               	goto	l1986
  2725  031F                     u1610:
  2726  031F                     l1984:
  2727  031F  3003               	movlw	3
  2728  0320  00E4               	movwf	_cw
  2729  0321  3000               	movlw	0
  2730  0322  00E5               	movwf	_cw+1
  2731  0323  3002               	movlw	2
  2732  0324  00E2               	movwf	_ccw
  2733  0325  3000               	movlw	0
  2734  0326  00E3               	movwf	_ccw+1
  2735  0327  3001               	movlw	1
  2736  0328  00A6               	movwf	dynam@ext
  2737  0329  3000               	movlw	0
  2738  032A  00A7               	movwf	dynam@ext+1
  2739  032B  3006               	movlw	6
  2740  032C  00A0               	movwf	dynam@smd
  2741  032D  3000               	movlw	0
  2742  032E  00A1               	movwf	dynam@smd+1
  2743  032F  0820               	movf	dynam@smd,w
  2744  0330  008D               	movwf	13	;volatile
  2745  0331                     l1986:
  2746                           
  2747                           ;Q5.c: 233:                 if((cw==3)&&(ext==0)){cw=0;ccw=1;ext=1;PORTB=smd=0x03;}
  2748  0331  3003               	movlw	3
  2749  0332  0664               	xorwf	_cw,w
  2750  0333  0465               	iorwf	_cw+1,w
  2751  0334  1D03               	btfss	3,2
  2752  0335  2B37               	goto	u1621
  2753  0336  2B38               	goto	u1620
  2754  0337                     u1621:
  2755  0337  2ACA               	goto	l1952
  2756  0338                     u1620:
  2757  0338                     l1988:
  2758  0338  0826               	movf	dynam@ext,w
  2759  0339  0427               	iorwf	dynam@ext+1,w
  2760  033A  1D03               	btfss	3,2
  2761  033B  2B3D               	goto	u1631
  2762  033C  2B3E               	goto	u1630
  2763  033D                     u1631:
  2764  033D  2ACA               	goto	l1952
  2765  033E                     u1630:
  2766  033E                     l1990:
  2767  033E  01E4               	clrf	_cw
  2768  033F  01E5               	clrf	_cw+1
  2769  0340                     l1992:
  2770  0340  3001               	movlw	1
  2771  0341  00E2               	movwf	_ccw
  2772  0342  3000               	movlw	0
  2773  0343  00E3               	movwf	_ccw+1
  2774  0344                     l1994:
  2775  0344                     l1996:
  2776  0344  3003               	movlw	3
  2777  0345  00A0               	movwf	dynam@smd
  2778  0346  3000               	movlw	0
  2779  0347  00A1               	movwf	dynam@smd+1
  2780  0348  0820               	movf	dynam@smd,w
  2781  0349  008D               	movwf	13	;volatile
  2782  034A  2ACA               	goto	l1952
  2783  034B                     l2004:
  2784                           
  2785                           ;Q5.c: 237:                 if(flg==1)ccw=0;flg=0;
  2786  034B  0366               	decf	_flg,w
  2787  034C  0467               	iorwf	_flg+1,w
  2788  034D  1D03               	btfss	3,2
  2789  034E  2B50               	goto	u1641
  2790  034F  2B51               	goto	u1640
  2791  0350                     u1641:
  2792  0350  2B53               	goto	l129
  2793  0351                     u1640:
  2794  0351                     l2006:
  2795  0351  01E2               	clrf	_ccw
  2796  0352  01E3               	clrf	_ccw+1
  2797  0353                     l129:
  2798  0353  01E6               	clrf	_flg
  2799  0354  01E7               	clrf	_flg+1
  2800  0355                     l2008:
  2801                           
  2802                           ;Q5.c: 238:                 if((ccw==0)&&(ext==0)){ccw=1;cw=0;ext=1;PORTB=smd=0x03;}
  2803  0355  0862               	movf	_ccw,w
  2804  0356  0463               	iorwf	_ccw+1,w
  2805  0357  1D03               	btfss	3,2
  2806  0358  2B5A               	goto	u1651
  2807  0359  2B5B               	goto	u1650
  2808  035A                     u1651:
  2809  035A  2B71               	goto	l2020
  2810  035B                     u1650:
  2811  035B                     l2010:
  2812  035B  0826               	movf	dynam@ext,w
  2813  035C  0427               	iorwf	dynam@ext+1,w
  2814  035D  1D03               	btfss	3,2
  2815  035E  2B60               	goto	u1661
  2816  035F  2B61               	goto	u1660
  2817  0360                     u1661:
  2818  0360  2B71               	goto	l2020
  2819  0361                     u1660:
  2820  0361                     l2012:
  2821  0361  3001               	movlw	1
  2822  0362  00E2               	movwf	_ccw
  2823  0363  3000               	movlw	0
  2824  0364  00E3               	movwf	_ccw+1
  2825  0365                     l2014:
  2826  0365  01E4               	clrf	_cw
  2827  0366  01E5               	clrf	_cw+1
  2828  0367                     l2016:
  2829  0367  3001               	movlw	1
  2830  0368  00A6               	movwf	dynam@ext
  2831  0369  3000               	movlw	0
  2832  036A  00A7               	movwf	dynam@ext+1
  2833  036B                     l2018:
  2834  036B  3003               	movlw	3
  2835  036C  00A0               	movwf	dynam@smd
  2836  036D  3000               	movlw	0
  2837  036E  00A1               	movwf	dynam@smd+1
  2838  036F  0820               	movf	dynam@smd,w
  2839  0370  008D               	movwf	13	;volatile
  2840  0371                     l2020:
  2841                           
  2842                           ;Q5.c: 239:                 if((ccw==1)&&(ext==0)){ccw=2;cw=3;ext=1;PORTB=smd=0x06;}
  2843  0371  0362               	decf	_ccw,w
  2844  0372  0463               	iorwf	_ccw+1,w
  2845  0373  1D03               	btfss	3,2
  2846  0374  2B76               	goto	u1671
  2847  0375  2B77               	goto	u1670
  2848  0376                     u1671:
  2849  0376  2B8F               	goto	l2026
  2850  0377                     u1670:
  2851  0377                     l2022:
  2852  0377  0826               	movf	dynam@ext,w
  2853  0378  0427               	iorwf	dynam@ext+1,w
  2854  0379  1D03               	btfss	3,2
  2855  037A  2B7C               	goto	u1681
  2856  037B  2B7D               	goto	u1680
  2857  037C                     u1681:
  2858  037C  2B8F               	goto	l2026
  2859  037D                     u1680:
  2860  037D                     l2024:
  2861  037D  3002               	movlw	2
  2862  037E  00E2               	movwf	_ccw
  2863  037F  3000               	movlw	0
  2864  0380  00E3               	movwf	_ccw+1
  2865  0381  3003               	movlw	3
  2866  0382  00E4               	movwf	_cw
  2867  0383  3000               	movlw	0
  2868  0384  00E5               	movwf	_cw+1
  2869  0385  3001               	movlw	1
  2870  0386  00A6               	movwf	dynam@ext
  2871  0387  3000               	movlw	0
  2872  0388  00A7               	movwf	dynam@ext+1
  2873  0389  3006               	movlw	6
  2874  038A  00A0               	movwf	dynam@smd
  2875  038B  3000               	movlw	0
  2876  038C  00A1               	movwf	dynam@smd+1
  2877  038D  0820               	movf	dynam@smd,w
  2878  038E  008D               	movwf	13	;volatile
  2879  038F                     l2026:
  2880                           
  2881                           ;Q5.c: 240:                 if((ccw==2)&&(ext==0)){ccw=3;cw=2;ext=1;PORTB=smd=0x0C;}
  2882  038F  3002               	movlw	2
  2883  0390  0662               	xorwf	_ccw,w
  2884  0391  0463               	iorwf	_ccw+1,w
  2885  0392  1D03               	btfss	3,2
  2886  0393  2B95               	goto	u1691
  2887  0394  2B96               	goto	u1690
  2888  0395                     u1691:
  2889  0395  2BAE               	goto	l2032
  2890  0396                     u1690:
  2891  0396                     l2028:
  2892  0396  0826               	movf	dynam@ext,w
  2893  0397  0427               	iorwf	dynam@ext+1,w
  2894  0398  1D03               	btfss	3,2
  2895  0399  2B9B               	goto	u1701
  2896  039A  2B9C               	goto	u1700
  2897  039B                     u1701:
  2898  039B  2BAE               	goto	l2032
  2899  039C                     u1700:
  2900  039C                     l2030:
  2901  039C  3003               	movlw	3
  2902  039D  00E2               	movwf	_ccw
  2903  039E  3000               	movlw	0
  2904  039F  00E3               	movwf	_ccw+1
  2905  03A0  3002               	movlw	2
  2906  03A1  00E4               	movwf	_cw
  2907  03A2  3000               	movlw	0
  2908  03A3  00E5               	movwf	_cw+1
  2909  03A4  3001               	movlw	1
  2910  03A5  00A6               	movwf	dynam@ext
  2911  03A6  3000               	movlw	0
  2912  03A7  00A7               	movwf	dynam@ext+1
  2913  03A8  300C               	movlw	12
  2914  03A9  00A0               	movwf	dynam@smd
  2915  03AA  3000               	movlw	0
  2916  03AB  00A1               	movwf	dynam@smd+1
  2917  03AC  0820               	movf	dynam@smd,w
  2918  03AD  008D               	movwf	13	;volatile
  2919  03AE                     l2032:
  2920                           
  2921                           ;Q5.c: 241:                 if((ccw==3)&&(ext==0)){ccw=0;cw=1;ext=1;PORTB=smd=0x09;}
  2922  03AE  3003               	movlw	3
  2923  03AF  0662               	xorwf	_ccw,w
  2924  03B0  0463               	iorwf	_ccw+1,w
  2925  03B1  1D03               	btfss	3,2
  2926  03B2  2BB4               	goto	u1711
  2927  03B3  2BB5               	goto	u1710
  2928  03B4                     u1711:
  2929  03B4  2ACA               	goto	l1952
  2930  03B5                     u1710:
  2931  03B5                     l2034:
  2932  03B5  0826               	movf	dynam@ext,w
  2933  03B6  0427               	iorwf	dynam@ext+1,w
  2934  03B7  1D03               	btfss	3,2
  2935  03B8  2BBA               	goto	u1721
  2936  03B9  2BBB               	goto	u1720
  2937  03BA                     u1721:
  2938  03BA  2ACA               	goto	l1952
  2939  03BB                     u1720:
  2940  03BB                     l2036:
  2941  03BB  01E2               	clrf	_ccw
  2942  03BC  01E3               	clrf	_ccw+1
  2943  03BD                     l2038:
  2944  03BD  3001               	movlw	1
  2945  03BE  00E4               	movwf	_cw
  2946  03BF  3000               	movlw	0
  2947  03C0  00E5               	movwf	_cw+1
  2948  03C1                     l2040:
  2949  03C1                     l2042:
  2950  03C1  3009               	movlw	9
  2951  03C2  00A0               	movwf	dynam@smd
  2952  03C3  3000               	movlw	0
  2953  03C4  00A1               	movwf	dynam@smd+1
  2954  03C5  0820               	movf	dynam@smd,w
  2955  03C6  008D               	movwf	13	;volatile
  2956  03C7  2ACA               	goto	l1952
  2957  03C8                     l2050:
  2958                           
  2959                           ;Q5.c: 245:                 cw=ccw=0;
  2960  03C8  01E2               	clrf	_ccw
  2961  03C9  01E3               	clrf	_ccw+1
  2962  03CA  01E4               	clrf	_cw
  2963  03CB  01E5               	clrf	_cw+1
  2964                           
  2965                           ;Q5.c: 246:                 break;
  2966  03CC  2BDD               	goto	l135
  2967  03CD                     l2054:
  2968                           
  2969                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2970                           ; Switch size 1, requested type "simple"
  2971                           ; Number of cases is 1, Range of values is 0 to 0
  2972                           ; switch strategies available:
  2973                           ; Name         Instructions Cycles
  2974                           ; simple_byte            4     3 (average)
  2975                           ; direct_byte            8     6 (fixed)
  2976                           ; jumptable            260     6 (fixed)
  2977                           ;	Chosen strategy is simple_byte
  2978  03CD  0875               	movf	dynam@smdata+1,w
  2979  03CE  3A00               	xorlw	0	; case 0
  2980  03CF  1903               	skipnz
  2981  03D0  2BD2               	goto	l2852
  2982  03D1  2BC8               	goto	l2050
  2983  03D2                     l2852:
  2984                           
  2985                           ; Switch size 1, requested type "simple"
  2986                           ; Number of cases is 3, Range of values is 0 to 2
  2987                           ; switch strategies available:
  2988                           ; Name         Instructions Cycles
  2989                           ; simple_byte           10     6 (average)
  2990                           ; direct_byte           12     6 (fixed)
  2991                           ; jumptable            260     6 (fixed)
  2992                           ;	Chosen strategy is simple_byte
  2993  03D2  0874               	movf	dynam@smdata,w
  2994  03D3  3A00               	xorlw	0	; case 0
  2995  03D4  1903               	skipnz
  2996  03D5  2AC9               	goto	l1948
  2997  03D6  3A01               	xorlw	1	; case 1
  2998  03D7  1903               	skipnz
  2999  03D8  2ACE               	goto	l1958
  3000  03D9  3A03               	xorlw	3	; case 2
  3001  03DA  1903               	skipnz
  3002  03DB  2B4B               	goto	l2004
  3003  03DC  2BC8               	goto	l2050
  3004  03DD                     l135:
  3005  03DD  0008               	return
  3006  03DE                     __end_of_dynam:
  3007                           
  3008                           	psect	text7
  3009  03DE                     __ptext7:	
  3010 ;; *************** function _hen7 *****************
  3011 ;; Defined at:
  3012 ;;		line 252 in file "Q5.c"
  3013 ;; Parameters:    Size  Location     Type
  3014 ;;  value           2    4[BANK0 ] int 
  3015 ;;  ns1             2    6[BANK0 ] unsigned short 
  3016 ;; Auto vars:     Size  Location     Type
  3017 ;;  n               2   22[BANK0 ] unsigned int 
  3018 ;;  m               2   20[BANK0 ] unsigned int 
  3019 ;;  l               2   18[BANK0 ] unsigned int 
  3020 ;;  value100        2   16[BANK0 ] int 
  3021 ;;  value10         2   14[BANK0 ] int 
  3022 ;;  value1          2   12[BANK0 ] int 
  3023 ;; Return value:  Size  Location     Type
  3024 ;;                  1    wreg      void 
  3025 ;; Registers used:
  3026 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3027 ;; Tracked objects:
  3028 ;;		On entry : 0/0
  3029 ;;		On exit  : 0/0
  3030 ;;		Unchanged: 0/0
  3031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3032 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3033 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3034 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3035 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3036 ;;Total ram usage:       20 bytes
  3037 ;; Hardware stack levels used:    1
  3038 ;; Hardware stack levels required when called:    1
  3039 ;; This function calls:
  3040 ;;		___awdiv
  3041 ;;		___awmod
  3042 ;;		___wmul
  3043 ;; This function is called by:
  3044 ;;		_main
  3045 ;; This function uses a non-reentrant model
  3046 ;;
  3047                           
  3048                           
  3049                           ;psect for function _hen7
  3050  03DE                     _hen7:
  3051  03DE                     l2214:	
  3052                           ;incstack = 0
  3053                           ; Regs used in _hen7: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3054                           
  3055                           
  3056                           ;Q5.c: 252: void hen7(int value,unsigned short ns1);Q5.c: 253: {;Q5.c: 254:     int valu
      +                          e100,value10,value1;;Q5.c: 255:     unsigned int l,m,n;;Q5.c: 256:     fugou=0;
  3057  03DE  0020               	movlb	0	; select bank0
  3058  03DF  01D0               	clrf	_fugou
  3059  03E0  01D1               	clrf	_fugou+1
  3060  03E1                     l2216:
  3061                           
  3062                           ;Q5.c: 257:     if(value<0)fugou=1;
  3063  03E1  1FA5               	btfss	hen7@value+1,7
  3064  03E2  2BE4               	goto	u2001
  3065  03E3  2BE5               	goto	u2000
  3066  03E4                     u2001:
  3067  03E4  2BE9               	goto	l2220
  3068  03E5                     u2000:
  3069  03E5                     l2218:
  3070  03E5  3001               	movlw	1
  3071  03E6  00D0               	movwf	_fugou
  3072  03E7  3000               	movlw	0
  3073  03E8  00D1               	movwf	_fugou+1
  3074  03E9                     l2220:
  3075                           
  3076                           ;Q5.c: 258:     if(fugou==1){
  3077  03E9  0350               	decf	_fugou,w
  3078  03EA  0451               	iorwf	_fugou+1,w
  3079  03EB  1D03               	btfss	3,2
  3080  03EC  2BEE               	goto	u2011
  3081  03ED  2BEF               	goto	u2010
  3082  03EE                     u2011:
  3083  03EE  2D97               	goto	l2354
  3084  03EF                     u2010:
  3085  03EF                     l2222:
  3086                           
  3087                           ;Q5.c: 259:         value=(~(value-1));
  3088  03EF  0824               	movf	hen7@value,w
  3089  03F0  3EFF               	addlw	255
  3090  03F1  00A8               	movwf	??_hen7
  3091  03F2  30FF               	movlw	255
  3092  03F3  3D25               	addwfc	hen7@value+1,w
  3093  03F4  00A9               	movwf	??_hen7+1
  3094  03F5  0928               	comf	??_hen7,w
  3095  03F6  00A4               	movwf	hen7@value
  3096  03F7  0929               	comf	??_hen7+1,w
  3097  03F8  00A5               	movwf	hen7@value+1
  3098  03F9  2D97               	goto	l2354
  3099  03FA                     l2224:
  3100                           
  3101                           ;Q5.c: 263:                 value100=value/100;
  3102  03FA  3064               	movlw	100
  3103  03FB  00F6               	movwf	___awdiv@divisor
  3104  03FC  3000               	movlw	0
  3105  03FD  00F7               	movwf	___awdiv@divisor+1
  3106  03FE  0825               	movf	hen7@value+1,w
  3107  03FF  00F9               	movwf	___awdiv@dividend+1
  3108  0400  0824               	movf	hen7@value,w
  3109  0401  00F8               	movwf	___awdiv@dividend
  3110  0402  3182  2214  3183   	fcall	___awdiv
  3111  0405  0877               	movf	?___awdiv+1,w
  3112  0406  0020               	movlb	0	; select bank0
  3113  0407  00B1               	movwf	hen7@value100+1
  3114  0408  0876               	movf	?___awdiv,w
  3115  0409  00B0               	movwf	hen7@value100
  3116                           
  3117                           ;Q5.c: 264:                 value10 =(value-(value100*100))/10;
  3118  040A  300A               	movlw	10
  3119  040B  00F6               	movwf	___awdiv@divisor
  3120  040C  3000               	movlw	0
  3121  040D  00F7               	movwf	___awdiv@divisor+1
  3122  040E  0831               	movf	hen7@value100+1,w
  3123  040F  00F1               	movwf	___wmul@multiplier+1
  3124  0410  0830               	movf	hen7@value100,w
  3125  0411  00F0               	movwf	___wmul@multiplier
  3126  0412  309C               	movlw	156
  3127  0413  00F2               	movwf	___wmul@multiplicand
  3128  0414  30FF               	movlw	255
  3129  0415  00F3               	movwf	___wmul@multiplicand+1
  3130  0416  3180  2039  3183   	fcall	___wmul
  3131  0419  0020               	movlb	0	; select bank0
  3132  041A  0824               	movf	hen7@value,w
  3133  041B  0770               	addwf	?___wmul,w
  3134  041C  00F8               	movwf	___awdiv@dividend
  3135  041D  0825               	movf	hen7@value+1,w
  3136  041E  3D71               	addwfc	?___wmul+1,w
  3137  041F  00F9               	movwf	___awdiv@dividend+1
  3138  0420  3182  2214  3183   	fcall	___awdiv
  3139  0423  0877               	movf	?___awdiv+1,w
  3140  0424  0020               	movlb	0	; select bank0
  3141  0425  00AF               	movwf	hen7@value10+1
  3142  0426  0876               	movf	?___awdiv,w
  3143  0427  00AE               	movwf	hen7@value10
  3144                           
  3145                           ;Q5.c: 265:                 value1 =value%10;
  3146  0428  300A               	movlw	10
  3147  0429  00F0               	movwf	___awmod@divisor
  3148  042A  3000               	movlw	0
  3149  042B  00F1               	movwf	___awmod@divisor+1
  3150  042C  0825               	movf	hen7@value+1,w
  3151  042D  00F3               	movwf	___awmod@dividend+1
  3152  042E  0824               	movf	hen7@value,w
  3153  042F  00F2               	movwf	___awmod@dividend
  3154  0430  3181  21C1  3183   	fcall	___awmod
  3155  0433  0871               	movf	?___awmod+1,w
  3156  0434  0020               	movlb	0	; select bank0
  3157  0435  00AD               	movwf	hen7@value1+1
  3158  0436  0870               	movf	?___awmod,w
  3159  0437  00AC               	movwf	hen7@value1
  3160  0438                     l2226:
  3161                           
  3162                           ;Q5.c: 266:                 code1000=(0x01|0x02|0x04|0x08|0x10|0x20);
  3163  0438  303F               	movlw	63
  3164  0439  00D8               	movwf	_code1000
  3165  043A  3000               	movlw	0
  3166  043B  00D9               	movwf	_code1000+1
  3167  043C                     l2228:
  3168                           
  3169                           ;Q5.c: 267:                 for(l=0;l<=2;++l){
  3170  043C  01B2               	clrf	hen7@l
  3171  043D  01B3               	clrf	hen7@l+1
  3172  043E                     l2234:
  3173                           
  3174                           ;Q5.c: 268:                     if(value100==l)code100=samp[l];
  3175  043E  0833               	movf	hen7@l+1,w
  3176  043F  0631               	xorwf	hen7@value100+1,w
  3177  0440  1D03               	skipz
  3178  0441  2C44               	goto	u2025
  3179  0442  0832               	movf	hen7@l,w
  3180  0443  0630               	xorwf	hen7@value100,w
  3181  0444                     u2025:
  3182  0444  1D03               	skipz
  3183  0445  2C47               	goto	u2021
  3184  0446  2C48               	goto	u2020
  3185  0447                     u2021:
  3186  0447  2C50               	goto	l2238
  3187  0448                     u2020:
  3188  0448                     l2236:
  3189  0448  3532               	lslf	hen7@l,w
  3190  0449  3EA0               	addlw	(low (_samp| 0))& (0+255)
  3191  044A  0086               	movwf	6
  3192  044B  0187               	clrf	7
  3193  044C  3F40               	moviw [0]fsr1
  3194  044D  00D6               	movwf	_code100
  3195  044E  3F41               	moviw [1]fsr1
  3196  044F  00D7               	movwf	_code100+1
  3197  0450                     l2238:
  3198                           
  3199                           ;Q5.c: 269:                 }
  3200  0450  3001               	movlw	1
  3201  0451  07B2               	addwf	hen7@l,f
  3202  0452  3000               	movlw	0
  3203  0453  3DB3               	addwfc	hen7@l+1,f
  3204  0454                     l2240:
  3205  0454  3000               	movlw	0
  3206  0455  0233               	subwf	hen7@l+1,w
  3207  0456  3003               	movlw	3
  3208  0457  1903               	skipnz
  3209  0458  0232               	subwf	hen7@l,w
  3210  0459  1C03               	skipc
  3211  045A  2C5C               	goto	u2031
  3212  045B  2C5D               	goto	u2030
  3213  045C                     u2031:
  3214  045C  2C3E               	goto	l2234
  3215  045D                     u2030:
  3216  045D                     l2242:
  3217                           
  3218                           ;Q5.c: 270:                 for(m=0;m<=9;++m){
  3219  045D  01B4               	clrf	hen7@m
  3220  045E  01B5               	clrf	hen7@m+1
  3221  045F                     l2248:
  3222                           
  3223                           ;Q5.c: 271:                     if(value10==m)code10=samp[m];
  3224  045F  0835               	movf	hen7@m+1,w
  3225  0460  062F               	xorwf	hen7@value10+1,w
  3226  0461  1D03               	skipz
  3227  0462  2C65               	goto	u2045
  3228  0463  0834               	movf	hen7@m,w
  3229  0464  062E               	xorwf	hen7@value10,w
  3230  0465                     u2045:
  3231  0465  1D03               	skipz
  3232  0466  2C68               	goto	u2041
  3233  0467  2C69               	goto	u2040
  3234  0468                     u2041:
  3235  0468  2C71               	goto	l2252
  3236  0469                     u2040:
  3237  0469                     l2250:
  3238  0469  3534               	lslf	hen7@m,w
  3239  046A  3EA0               	addlw	(low (_samp| 0))& (0+255)
  3240  046B  0086               	movwf	6
  3241  046C  0187               	clrf	7
  3242  046D  3F40               	moviw [0]fsr1
  3243  046E  00D4               	movwf	_code10
  3244  046F  3F41               	moviw [1]fsr1
  3245  0470  00D5               	movwf	_code10+1
  3246  0471                     l2252:
  3247                           
  3248                           ;Q5.c: 272:                 }
  3249  0471  3001               	movlw	1
  3250  0472  07B4               	addwf	hen7@m,f
  3251  0473  3000               	movlw	0
  3252  0474  3DB5               	addwfc	hen7@m+1,f
  3253  0475                     l2254:
  3254  0475  3000               	movlw	0
  3255  0476  0235               	subwf	hen7@m+1,w
  3256  0477  300A               	movlw	10
  3257  0478  1903               	skipnz
  3258  0479  0234               	subwf	hen7@m,w
  3259  047A  1C03               	skipc
  3260  047B  2C7D               	goto	u2051
  3261  047C  2C7E               	goto	u2050
  3262  047D                     u2051:
  3263  047D  2C5F               	goto	l2248
  3264  047E                     u2050:
  3265  047E                     l2256:
  3266                           
  3267                           ;Q5.c: 273:                 for(n=0;n<=9;++n){
  3268  047E  01B6               	clrf	hen7@n
  3269  047F  01B7               	clrf	hen7@n+1
  3270  0480                     l2262:
  3271                           
  3272                           ;Q5.c: 274:                     if(value1==n)code1=samp[n];
  3273  0480  0837               	movf	hen7@n+1,w
  3274  0481  062D               	xorwf	hen7@value1+1,w
  3275  0482  1D03               	skipz
  3276  0483  2C86               	goto	u2065
  3277  0484  0836               	movf	hen7@n,w
  3278  0485  062C               	xorwf	hen7@value1,w
  3279  0486                     u2065:
  3280  0486  1D03               	skipz
  3281  0487  2C89               	goto	u2061
  3282  0488  2C8A               	goto	u2060
  3283  0489                     u2061:
  3284  0489  2C92               	goto	l2266
  3285  048A                     u2060:
  3286  048A                     l2264:
  3287  048A  3536               	lslf	hen7@n,w
  3288  048B  3EA0               	addlw	(low (_samp| 0))& (0+255)
  3289  048C  0086               	movwf	6
  3290  048D  0187               	clrf	7
  3291  048E  3F40               	moviw [0]fsr1
  3292  048F  00D2               	movwf	_code1
  3293  0490  3F41               	moviw [1]fsr1
  3294  0491  00D3               	movwf	_code1+1
  3295  0492                     l2266:
  3296                           
  3297                           ;Q5.c: 275:                 }
  3298  0492  3001               	movlw	1
  3299  0493  07B6               	addwf	hen7@n,f
  3300  0494  3000               	movlw	0
  3301  0495  3DB7               	addwfc	hen7@n+1,f
  3302  0496                     l2268:
  3303  0496  3000               	movlw	0
  3304  0497  0237               	subwf	hen7@n+1,w
  3305  0498  300A               	movlw	10
  3306  0499  1903               	skipnz
  3307  049A  0236               	subwf	hen7@n,w
  3308  049B  1C03               	skipc
  3309  049C  2C9E               	goto	u2071
  3310  049D  2C9F               	goto	u2070
  3311  049E                     u2071:
  3312  049E  2C80               	goto	l2262
  3313  049F                     u2070:
  3314  049F  2DA7               	goto	l170
  3315  04A0                     l2270:
  3316                           
  3317                           ;Q5.c: 278:                 value100=value>>6;
  3318  04A0  0825               	movf	hen7@value+1,w
  3319  04A1  00A9               	movwf	??_hen7+1
  3320  04A2  0824               	movf	hen7@value,w
  3321  04A3  00A8               	movwf	??_hen7
  3322  04A4  3006               	movlw	6
  3323  04A5  00AA               	movwf	??_hen7+2
  3324  04A6                     u2085:
  3325  04A6  0D29               	rlf	??_hen7+1,w
  3326  04A7  0CA9               	rrf	??_hen7+1,f
  3327  04A8  0CA8               	rrf	??_hen7,f
  3328  04A9  0BAA               	decfsz	??_hen7+2,f
  3329  04AA  2CA6               	goto	u2085
  3330  04AB  0828               	movf	??_hen7,w
  3331  04AC  00B0               	movwf	hen7@value100
  3332  04AD  0829               	movf	??_hen7+1,w
  3333  04AE  00B1               	movwf	hen7@value100+1
  3334                           
  3335                           ;Q5.c: 279:                 value10 =(value-(value100<<6))>>3;
  3336  04AF  0831               	movf	hen7@value100+1,w
  3337  04B0  00A9               	movwf	??_hen7+1
  3338  04B1  0830               	movf	hen7@value100,w
  3339  04B2  00A8               	movwf	??_hen7
  3340  04B3  3006               	movlw	6
  3341  04B4                     u2095:
  3342  04B4  35A8               	lslf	??_hen7,f
  3343  04B5  0DA9               	rlf	??_hen7+1,f
  3344  04B6  0B89               	decfsz	9,f
  3345  04B7  2CB4               	goto	u2095
  3346  04B8  0828               	movf	??_hen7,w
  3347  04B9  0224               	subwf	hen7@value,w
  3348  04BA  00AA               	movwf	??_hen7+2
  3349  04BB  0829               	movf	??_hen7+1,w
  3350  04BC  3B25               	subwfb	hen7@value+1,w
  3351  04BD  00AB               	movwf	??_hen7+3
  3352  04BE  0D2B               	rlf	??_hen7+3,w
  3353  04BF  0CAB               	rrf	??_hen7+3,f
  3354  04C0  0CAA               	rrf	??_hen7+2,f
  3355  04C1  0D2B               	rlf	??_hen7+3,w
  3356  04C2  0CAB               	rrf	??_hen7+3,f
  3357  04C3  0CAA               	rrf	??_hen7+2,f
  3358  04C4  0D2B               	rlf	??_hen7+3,w
  3359  04C5  0CAB               	rrf	??_hen7+3,f
  3360  04C6  0CAA               	rrf	??_hen7+2,f
  3361  04C7  082A               	movf	??_hen7+2,w
  3362  04C8  00AE               	movwf	hen7@value10
  3363  04C9  082B               	movf	??_hen7+3,w
  3364  04CA  00AF               	movwf	hen7@value10+1
  3365  04CB                     l2272:
  3366                           
  3367                           ;Q5.c: 280:                 value =value%8;
  3368  04CB  3007               	movlw	7
  3369  04CC  0524               	andwf	hen7@value,w
  3370  04CD  00A4               	movwf	hen7@value
  3371  04CE  3000               	movlw	0
  3372  04CF  0525               	andwf	hen7@value+1,w
  3373  04D0  00A5               	movwf	hen7@value+1
  3374  04D1                     l2274:
  3375                           
  3376                           ;Q5.c: 281:                 code1000=(0x01|0x02|0x04|0x08|0x10|0x20);
  3377  04D1  303F               	movlw	63
  3378  04D2  00D8               	movwf	_code1000
  3379  04D3  3000               	movlw	0
  3380  04D4  00D9               	movwf	_code1000+1
  3381  04D5                     l2276:
  3382                           
  3383                           ;Q5.c: 282:                 for(l=0;l<=3;++l){
  3384  04D5  01B2               	clrf	hen7@l
  3385  04D6  01B3               	clrf	hen7@l+1
  3386  04D7                     l2282:
  3387                           
  3388                           ;Q5.c: 283:                     if(value100==l)code100=samp[l];
  3389  04D7  0833               	movf	hen7@l+1,w
  3390  04D8  0631               	xorwf	hen7@value100+1,w
  3391  04D9  1D03               	skipz
  3392  04DA  2CDD               	goto	u2105
  3393  04DB  0832               	movf	hen7@l,w
  3394  04DC  0630               	xorwf	hen7@value100,w
  3395  04DD                     u2105:
  3396  04DD  1D03               	skipz
  3397  04DE  2CE0               	goto	u2101
  3398  04DF  2CE1               	goto	u2100
  3399  04E0                     u2101:
  3400  04E0  2CE9               	goto	l2286
  3401  04E1                     u2100:
  3402  04E1                     l2284:
  3403  04E1  3532               	lslf	hen7@l,w
  3404  04E2  3EA0               	addlw	(low (_samp| 0))& (0+255)
  3405  04E3  0086               	movwf	6
  3406  04E4  0187               	clrf	7
  3407  04E5  3F40               	moviw [0]fsr1
  3408  04E6  00D6               	movwf	_code100
  3409  04E7  3F41               	moviw [1]fsr1
  3410  04E8  00D7               	movwf	_code100+1
  3411  04E9                     l2286:
  3412                           
  3413                           ;Q5.c: 284:                 }
  3414  04E9  3001               	movlw	1
  3415  04EA  07B2               	addwf	hen7@l,f
  3416  04EB  3000               	movlw	0
  3417  04EC  3DB3               	addwfc	hen7@l+1,f
  3418  04ED                     l2288:
  3419  04ED  3000               	movlw	0
  3420  04EE  0233               	subwf	hen7@l+1,w
  3421  04EF  3004               	movlw	4
  3422  04F0  1903               	skipnz
  3423  04F1  0232               	subwf	hen7@l,w
  3424  04F2  1C03               	skipc
  3425  04F3  2CF5               	goto	u2111
  3426  04F4  2CF6               	goto	u2110
  3427  04F5                     u2111:
  3428  04F5  2CD7               	goto	l2282
  3429  04F6                     u2110:
  3430  04F6                     l2290:
  3431                           
  3432                           ;Q5.c: 285:                 for(m=0;m<=7;++m){
  3433  04F6  01B4               	clrf	hen7@m
  3434  04F7  01B5               	clrf	hen7@m+1
  3435  04F8                     l2296:
  3436                           
  3437                           ;Q5.c: 286:                     if(value10==m)code10=samp[m];
  3438  04F8  0835               	movf	hen7@m+1,w
  3439  04F9  062F               	xorwf	hen7@value10+1,w
  3440  04FA  1D03               	skipz
  3441  04FB  2CFE               	goto	u2125
  3442  04FC  0834               	movf	hen7@m,w
  3443  04FD  062E               	xorwf	hen7@value10,w
  3444  04FE                     u2125:
  3445  04FE  1D03               	skipz
  3446  04FF  2D01               	goto	u2121
  3447  0500  2D02               	goto	u2120
  3448  0501                     u2121:
  3449  0501  2D0A               	goto	l2300
  3450  0502                     u2120:
  3451  0502                     l2298:
  3452  0502  3534               	lslf	hen7@m,w
  3453  0503  3EA0               	addlw	(low (_samp| 0))& (0+255)
  3454  0504  0086               	movwf	6
  3455  0505  0187               	clrf	7
  3456  0506  3F40               	moviw [0]fsr1
  3457  0507  00D4               	movwf	_code10
  3458  0508  3F41               	moviw [1]fsr1
  3459  0509  00D5               	movwf	_code10+1
  3460  050A                     l2300:
  3461                           
  3462                           ;Q5.c: 287:                 }
  3463  050A  3001               	movlw	1
  3464  050B  07B4               	addwf	hen7@m,f
  3465  050C  3000               	movlw	0
  3466  050D  3DB5               	addwfc	hen7@m+1,f
  3467  050E                     l2302:
  3468  050E  3000               	movlw	0
  3469  050F  0235               	subwf	hen7@m+1,w
  3470  0510  3008               	movlw	8
  3471  0511  1903               	skipnz
  3472  0512  0234               	subwf	hen7@m,w
  3473  0513  1C03               	skipc
  3474  0514  2D16               	goto	u2131
  3475  0515  2D17               	goto	u2130
  3476  0516                     u2131:
  3477  0516  2CF8               	goto	l2296
  3478  0517                     u2130:
  3479  0517                     l2304:
  3480                           
  3481                           ;Q5.c: 288:                 for(n=0;n<=7;++n){
  3482  0517  01B6               	clrf	hen7@n
  3483  0518  01B7               	clrf	hen7@n+1
  3484  0519                     l2310:
  3485                           
  3486                           ;Q5.c: 289:                     if(value1==n)code1=samp[n];
  3487  0519  0837               	movf	hen7@n+1,w
  3488  051A  062D               	xorwf	hen7@value1+1,w
  3489  051B  1D03               	skipz
  3490  051C  2D1F               	goto	u2145
  3491  051D  0836               	movf	hen7@n,w
  3492  051E  062C               	xorwf	hen7@value1,w
  3493  051F                     u2145:
  3494  051F  1D03               	skipz
  3495  0520  2D22               	goto	u2141
  3496  0521  2D23               	goto	u2140
  3497  0522                     u2141:
  3498  0522  2D2B               	goto	l2314
  3499  0523                     u2140:
  3500  0523                     l2312:
  3501  0523  3536               	lslf	hen7@n,w
  3502  0524  3EA0               	addlw	(low (_samp| 0))& (0+255)
  3503  0525  0086               	movwf	6
  3504  0526  0187               	clrf	7
  3505  0527  3F40               	moviw [0]fsr1
  3506  0528  00D2               	movwf	_code1
  3507  0529  3F41               	moviw [1]fsr1
  3508  052A  00D3               	movwf	_code1+1
  3509  052B                     l2314:
  3510                           
  3511                           ;Q5.c: 290:                 }
  3512  052B  3001               	movlw	1
  3513  052C  07B6               	addwf	hen7@n,f
  3514  052D  3000               	movlw	0
  3515  052E  3DB7               	addwfc	hen7@n+1,f
  3516  052F                     l2316:
  3517  052F  3000               	movlw	0
  3518  0530  0237               	subwf	hen7@n+1,w
  3519  0531  3008               	movlw	8
  3520  0532  1903               	skipnz
  3521  0533  0236               	subwf	hen7@n,w
  3522  0534  1C03               	skipc
  3523  0535  2D37               	goto	u2151
  3524  0536  2D38               	goto	u2150
  3525  0537                     u2151:
  3526  0537  2D19               	goto	l2310
  3527  0538                     u2150:
  3528  0538  2DA7               	goto	l170
  3529  0539                     l2318:
  3530                           
  3531                           ;Q5.c: 293:                 code1000=(0x01|0x02|0x04|0x08|0x10|0x20);
  3532  0539  303F               	movlw	63
  3533  053A  00D8               	movwf	_code1000
  3534  053B  3000               	movlw	0
  3535  053C  00D9               	movwf	_code1000+1
  3536                           
  3537                           ;Q5.c: 294:                 code100=(0x01|0x02|0x04|0x08|0x10|0x20);
  3538  053D  303F               	movlw	63
  3539  053E  00D6               	movwf	_code100
  3540  053F  3000               	movlw	0
  3541  0540  00D7               	movwf	_code100+1
  3542  0541                     l2320:
  3543                           
  3544                           ;Q5.c: 295:                 value10 =value>>4;
  3545  0541  0E24               	swapf	hen7@value,w
  3546  0542  390F               	andlw	15
  3547  0543  00AE               	movwf	hen7@value10
  3548  0544  0E25               	swapf	hen7@value+1,w
  3549  0545  39F0               	andlw	240
  3550  0546  04AE               	iorwf	hen7@value10,f
  3551  0547  0E25               	swapf	hen7@value+1,w
  3552  0548  390F               	andlw	15
  3553  0549  00AF               	movwf	hen7@value10+1
  3554  054A  30F0               	movlw	240
  3555  054B  1DAF               	btfss	hen7@value10+1,3
  3556  054C  3000               	movlw	0
  3557  054D  04AF               	iorwf	hen7@value10+1,f
  3558  054E                     l2322:
  3559                           
  3560                           ;Q5.c: 296:                 value1 =value%16;
  3561  054E  300F               	movlw	15
  3562  054F  0524               	andwf	hen7@value,w
  3563  0550  00AC               	movwf	hen7@value1
  3564  0551  3000               	movlw	0
  3565  0552  0525               	andwf	hen7@value+1,w
  3566  0553  00AD               	movwf	hen7@value1+1
  3567  0554                     l2324:
  3568                           
  3569                           ;Q5.c: 297:                 for(m=0;m<=15;++m){
  3570  0554  01B4               	clrf	hen7@m
  3571  0555  01B5               	clrf	hen7@m+1
  3572  0556                     l2330:
  3573                           
  3574                           ;Q5.c: 298:                     if(value10==m)code10=samp[m];
  3575  0556  0835               	movf	hen7@m+1,w
  3576  0557  062F               	xorwf	hen7@value10+1,w
  3577  0558  1D03               	skipz
  3578  0559  2D5C               	goto	u2165
  3579  055A  0834               	movf	hen7@m,w
  3580  055B  062E               	xorwf	hen7@value10,w
  3581  055C                     u2165:
  3582  055C  1D03               	skipz
  3583  055D  2D5F               	goto	u2161
  3584  055E  2D60               	goto	u2160
  3585  055F                     u2161:
  3586  055F  2D68               	goto	l2334
  3587  0560                     u2160:
  3588  0560                     l2332:
  3589  0560  3534               	lslf	hen7@m,w
  3590  0561  3EA0               	addlw	(low (_samp| 0))& (0+255)
  3591  0562  0086               	movwf	6
  3592  0563  0187               	clrf	7
  3593  0564  3F40               	moviw [0]fsr1
  3594  0565  00D4               	movwf	_code10
  3595  0566  3F41               	moviw [1]fsr1
  3596  0567  00D5               	movwf	_code10+1
  3597  0568                     l2334:
  3598                           
  3599                           ;Q5.c: 299:                 }
  3600  0568  3001               	movlw	1
  3601  0569  07B4               	addwf	hen7@m,f
  3602  056A  3000               	movlw	0
  3603  056B  3DB5               	addwfc	hen7@m+1,f
  3604  056C                     l2336:
  3605  056C  3000               	movlw	0
  3606  056D  0235               	subwf	hen7@m+1,w
  3607  056E  3010               	movlw	16
  3608  056F  1903               	skipnz
  3609  0570  0234               	subwf	hen7@m,w
  3610  0571  1C03               	skipc
  3611  0572  2D74               	goto	u2171
  3612  0573  2D75               	goto	u2170
  3613  0574                     u2171:
  3614  0574  2D56               	goto	l2330
  3615  0575                     u2170:
  3616  0575                     l2338:
  3617                           
  3618                           ;Q5.c: 300:                 for(n=0;n<=15;++n){
  3619  0575  01B6               	clrf	hen7@n
  3620  0576  01B7               	clrf	hen7@n+1
  3621  0577                     l2344:
  3622                           
  3623                           ;Q5.c: 301:                     if(value1==n)code1=samp[n];
  3624  0577  0837               	movf	hen7@n+1,w
  3625  0578  062D               	xorwf	hen7@value1+1,w
  3626  0579  1D03               	skipz
  3627  057A  2D7D               	goto	u2185
  3628  057B  0836               	movf	hen7@n,w
  3629  057C  062C               	xorwf	hen7@value1,w
  3630  057D                     u2185:
  3631  057D  1D03               	skipz
  3632  057E  2D80               	goto	u2181
  3633  057F  2D81               	goto	u2180
  3634  0580                     u2181:
  3635  0580  2D89               	goto	l2348
  3636  0581                     u2180:
  3637  0581                     l2346:
  3638  0581  3536               	lslf	hen7@n,w
  3639  0582  3EA0               	addlw	(low (_samp| 0))& (0+255)
  3640  0583  0086               	movwf	6
  3641  0584  0187               	clrf	7
  3642  0585  3F40               	moviw [0]fsr1
  3643  0586  00D2               	movwf	_code1
  3644  0587  3F41               	moviw [1]fsr1
  3645  0588  00D3               	movwf	_code1+1
  3646  0589                     l2348:
  3647                           
  3648                           ;Q5.c: 302:                 }
  3649  0589  3001               	movlw	1
  3650  058A  07B6               	addwf	hen7@n,f
  3651  058B  3000               	movlw	0
  3652  058C  3DB7               	addwfc	hen7@n+1,f
  3653  058D                     l2350:
  3654  058D  3000               	movlw	0
  3655  058E  0237               	subwf	hen7@n+1,w
  3656  058F  3010               	movlw	16
  3657  0590  1903               	skipnz
  3658  0591  0236               	subwf	hen7@n,w
  3659  0592  1C03               	skipc
  3660  0593  2D95               	goto	u2191
  3661  0594  2D96               	goto	u2190
  3662  0595                     u2191:
  3663  0595  2D77               	goto	l2344
  3664  0596                     u2190:
  3665  0596  2DA7               	goto	l170
  3666  0597                     l2354:
  3667                           
  3668                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3669                           ; Switch size 1, requested type "simple"
  3670                           ; Number of cases is 1, Range of values is 0 to 0
  3671                           ; switch strategies available:
  3672                           ; Name         Instructions Cycles
  3673                           ; simple_byte            4     3 (average)
  3674                           ; direct_byte            8     6 (fixed)
  3675                           ; jumptable            260     6 (fixed)
  3676                           ;	Chosen strategy is simple_byte
  3677  0597  0827               	movf	hen7@ns1+1,w
  3678  0598  3A00               	xorlw	0	; case 0
  3679  0599  1903               	skipnz
  3680  059A  2D9C               	goto	l2854
  3681  059B  2DA7               	goto	l170
  3682  059C                     l2854:
  3683                           
  3684                           ; Switch size 1, requested type "simple"
  3685                           ; Number of cases is 3, Range of values is 8 to 16
  3686                           ; switch strategies available:
  3687                           ; Name         Instructions Cycles
  3688                           ; simple_byte           10     6 (average)
  3689                           ; direct_byte           27     9 (fixed)
  3690                           ; jumptable            263     9 (fixed)
  3691                           ;	Chosen strategy is simple_byte
  3692  059C  0826               	movf	hen7@ns1,w
  3693  059D  3A08               	xorlw	8	; case 8
  3694  059E  1903               	skipnz
  3695  059F  2CA0               	goto	l2270
  3696  05A0  3A02               	xorlw	2	; case 10
  3697  05A1  1903               	skipnz
  3698  05A2  2BFA               	goto	l2224
  3699  05A3  3A1A               	xorlw	26	; case 16
  3700  05A4  1903               	skipnz
  3701  05A5  2D39               	goto	l2318
  3702  05A6  2DA7               	goto	l170
  3703  05A7                     l170:
  3704  05A7  0008               	return
  3705  05A8                     __end_of_hen7:
  3706                           
  3707                           	psect	text8
  3708  0039                     __ptext8:	
  3709 ;; *************** function ___wmul *****************
  3710 ;; Defined at:
  3711 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  3712 ;; Parameters:    Size  Location     Type
  3713 ;;  multiplier      2    0[COMMON] unsigned int 
  3714 ;;  multiplicand    2    2[COMMON] unsigned int 
  3715 ;; Auto vars:     Size  Location     Type
  3716 ;;  product         2    4[COMMON] unsigned int 
  3717 ;; Return value:  Size  Location     Type
  3718 ;;                  2    0[COMMON] unsigned int 
  3719 ;; Registers used:
  3720 ;;		wreg, status,2, status,0
  3721 ;; Tracked objects:
  3722 ;;		On entry : 0/0
  3723 ;;		On exit  : 0/0
  3724 ;;		Unchanged: 0/0
  3725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3726 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3727 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3729 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3730 ;;Total ram usage:        6 bytes
  3731 ;; Hardware stack levels used:    1
  3732 ;; This function calls:
  3733 ;;		Nothing
  3734 ;; This function is called by:
  3735 ;;		_hen7
  3736 ;;		_main
  3737 ;;		_wait
  3738 ;;		_hens
  3739 ;; This function uses a non-reentrant model
  3740 ;;
  3741                           
  3742                           
  3743                           ;psect for function ___wmul
  3744  0039                     ___wmul:
  3745  0039                     l2078:	
  3746                           ;incstack = 0
  3747                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3748                           
  3749  0039  01F4               	clrf	___wmul@product
  3750  003A  01F5               	clrf	___wmul@product+1
  3751  003B                     l2080:
  3752  003B  1C70               	btfss	___wmul@multiplier,0
  3753  003C  283E               	goto	u1751
  3754  003D  283F               	goto	u1750
  3755  003E                     u1751:
  3756  003E  2843               	goto	l462
  3757  003F                     u1750:
  3758  003F                     l2082:
  3759  003F  0872               	movf	___wmul@multiplicand,w
  3760  0040  07F4               	addwf	___wmul@product,f
  3761  0041  0873               	movf	___wmul@multiplicand+1,w
  3762  0042  3DF5               	addwfc	___wmul@product+1,f
  3763  0043                     l462:
  3764  0043  3001               	movlw	1
  3765  0044                     u1765:
  3766  0044  35F2               	lslf	___wmul@multiplicand,f
  3767  0045  0DF3               	rlf	___wmul@multiplicand+1,f
  3768  0046  0B89               	decfsz	9,f
  3769  0047  2844               	goto	u1765
  3770  0048                     l2084:
  3771  0048  3001               	movlw	1
  3772  0049                     u1775:
  3773  0049  36F1               	lsrf	___wmul@multiplier+1,f
  3774  004A  0CF0               	rrf	___wmul@multiplier,f
  3775  004B  0B89               	decfsz	9,f
  3776  004C  2849               	goto	u1775
  3777  004D                     l2086:
  3778  004D  0870               	movf	___wmul@multiplier,w
  3779  004E  0471               	iorwf	___wmul@multiplier+1,w
  3780  004F  1D03               	btfss	3,2
  3781  0050  2852               	goto	u1781
  3782  0051  2853               	goto	u1780
  3783  0052                     u1781:
  3784  0052  283B               	goto	l2080
  3785  0053                     u1780:
  3786  0053                     l2088:
  3787  0053  0875               	movf	___wmul@product+1,w
  3788  0054  00F1               	movwf	?___wmul+1
  3789  0055  0874               	movf	___wmul@product,w
  3790  0056  00F0               	movwf	?___wmul
  3791  0057                     l464:
  3792  0057  0008               	return
  3793  0058                     __end_of___wmul:
  3794                           
  3795                           	psect	text9
  3796  01C1                     __ptext9:	
  3797 ;; *************** function ___awmod *****************
  3798 ;; Defined at:
  3799 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awmod.c"
  3800 ;; Parameters:    Size  Location     Type
  3801 ;;  divisor         2    0[COMMON] int 
  3802 ;;  dividend        2    2[COMMON] int 
  3803 ;; Auto vars:     Size  Location     Type
  3804 ;;  sign            1    6[COMMON] unsigned char 
  3805 ;;  counter         1    5[COMMON] unsigned char 
  3806 ;; Return value:  Size  Location     Type
  3807 ;;                  2    0[COMMON] int 
  3808 ;; Registers used:
  3809 ;;		wreg, status,2, status,0
  3810 ;; Tracked objects:
  3811 ;;		On entry : 0/0
  3812 ;;		On exit  : 0/0
  3813 ;;		Unchanged: 0/0
  3814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3815 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3816 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3817 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3818 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3819 ;;Total ram usage:        7 bytes
  3820 ;; Hardware stack levels used:    1
  3821 ;; This function calls:
  3822 ;;		Nothing
  3823 ;; This function is called by:
  3824 ;;		_hen7
  3825 ;; This function uses a non-reentrant model
  3826 ;;
  3827                           
  3828                           
  3829                           ;psect for function ___awmod
  3830  01C1                     ___awmod:
  3831  01C1                     l2136:	
  3832                           ;incstack = 0
  3833                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3834                           
  3835  01C1  01F6               	clrf	___awmod@sign
  3836  01C2                     l2138:
  3837  01C2  1FF3               	btfss	___awmod@dividend+1,7
  3838  01C3  29C5               	goto	u1891
  3839  01C4  29C6               	goto	u1890
  3840  01C5                     u1891:
  3841  01C5  29CD               	goto	l2144
  3842  01C6                     u1890:
  3843  01C6                     l2140:
  3844  01C6  09F2               	comf	___awmod@dividend,f
  3845  01C7  09F3               	comf	___awmod@dividend+1,f
  3846  01C8  0AF2               	incf	___awmod@dividend,f
  3847  01C9  1903               	skipnz
  3848  01CA  0AF3               	incf	___awmod@dividend+1,f
  3849  01CB                     l2142:
  3850  01CB  01F6               	clrf	___awmod@sign
  3851  01CC  0AF6               	incf	___awmod@sign,f
  3852  01CD                     l2144:
  3853  01CD  1FF1               	btfss	___awmod@divisor+1,7
  3854  01CE  29D0               	goto	u1901
  3855  01CF  29D1               	goto	u1900
  3856  01D0                     u1901:
  3857  01D0  29D6               	goto	l2148
  3858  01D1                     u1900:
  3859  01D1                     l2146:
  3860  01D1  09F0               	comf	___awmod@divisor,f
  3861  01D2  09F1               	comf	___awmod@divisor+1,f
  3862  01D3  0AF0               	incf	___awmod@divisor,f
  3863  01D4  1903               	skipnz
  3864  01D5  0AF1               	incf	___awmod@divisor+1,f
  3865  01D6                     l2148:
  3866  01D6  0870               	movf	___awmod@divisor,w
  3867  01D7  0471               	iorwf	___awmod@divisor+1,w
  3868  01D8  1903               	btfsc	3,2
  3869  01D9  29DB               	goto	u1911
  3870  01DA  29DC               	goto	u1910
  3871  01DB                     u1911:
  3872  01DB  2A05               	goto	l2166
  3873  01DC                     u1910:
  3874  01DC                     l2150:
  3875  01DC  01F5               	clrf	___awmod@counter
  3876  01DD  0AF5               	incf	___awmod@counter,f
  3877  01DE  29E8               	goto	l2156
  3878  01DF                     l2152:
  3879  01DF  3001               	movlw	1
  3880  01E0                     u1925:
  3881  01E0  35F0               	lslf	___awmod@divisor,f
  3882  01E1  0DF1               	rlf	___awmod@divisor+1,f
  3883  01E2  0B89               	decfsz	9,f
  3884  01E3  29E0               	goto	u1925
  3885  01E4                     l2154:
  3886  01E4  3001               	movlw	1
  3887  01E5  00F4               	movwf	??___awmod
  3888  01E6  0874               	movf	??___awmod,w
  3889  01E7  07F5               	addwf	___awmod@counter,f
  3890  01E8                     l2156:
  3891  01E8  1FF1               	btfss	___awmod@divisor+1,7
  3892  01E9  29EB               	goto	u1931
  3893  01EA  29EC               	goto	u1930
  3894  01EB                     u1931:
  3895  01EB  29DF               	goto	l2152
  3896  01EC                     u1930:
  3897  01EC                     l2158:
  3898  01EC  0871               	movf	___awmod@divisor+1,w
  3899  01ED  0273               	subwf	___awmod@dividend+1,w
  3900  01EE  1D03               	skipz
  3901  01EF  29F2               	goto	u1945
  3902  01F0  0870               	movf	___awmod@divisor,w
  3903  01F1  0272               	subwf	___awmod@dividend,w
  3904  01F2                     u1945:
  3905  01F2  1C03               	skipc
  3906  01F3  29F5               	goto	u1941
  3907  01F4  29F6               	goto	u1940
  3908  01F5                     u1941:
  3909  01F5  29FA               	goto	l2162
  3910  01F6                     u1940:
  3911  01F6                     l2160:
  3912  01F6  0870               	movf	___awmod@divisor,w
  3913  01F7  02F2               	subwf	___awmod@dividend,f
  3914  01F8  0871               	movf	___awmod@divisor+1,w
  3915  01F9  3BF3               	subwfb	___awmod@dividend+1,f
  3916  01FA                     l2162:
  3917  01FA  3001               	movlw	1
  3918  01FB                     u1955:
  3919  01FB  36F1               	lsrf	___awmod@divisor+1,f
  3920  01FC  0CF0               	rrf	___awmod@divisor,f
  3921  01FD  0B89               	decfsz	9,f
  3922  01FE  29FB               	goto	u1955
  3923  01FF                     l2164:
  3924  01FF  3001               	movlw	1
  3925  0200  02F5               	subwf	___awmod@counter,f
  3926  0201  1D03               	btfss	3,2
  3927  0202  2A04               	goto	u1961
  3928  0203  2A05               	goto	u1960
  3929  0204                     u1961:
  3930  0204  29EC               	goto	l2158
  3931  0205                     u1960:
  3932  0205                     l2166:
  3933  0205  0876               	movf	___awmod@sign,w
  3934  0206  1903               	btfsc	3,2
  3935  0207  2A09               	goto	u1971
  3936  0208  2A0A               	goto	u1970
  3937  0209                     u1971:
  3938  0209  2A0F               	goto	l2170
  3939  020A                     u1970:
  3940  020A                     l2168:
  3941  020A  09F2               	comf	___awmod@dividend,f
  3942  020B  09F3               	comf	___awmod@dividend+1,f
  3943  020C  0AF2               	incf	___awmod@dividend,f
  3944  020D  1903               	skipnz
  3945  020E  0AF3               	incf	___awmod@dividend+1,f
  3946  020F                     l2170:
  3947  020F  0873               	movf	___awmod@dividend+1,w
  3948  0210  00F1               	movwf	?___awmod+1
  3949  0211  0872               	movf	___awmod@dividend,w
  3950  0212  00F0               	movwf	?___awmod
  3951  0213                     l628:
  3952  0213  0008               	return
  3953  0214                     __end_of___awmod:
  3954                           
  3955                           	psect	text10
  3956  0214                     __ptext10:	
  3957 ;; *************** function ___awdiv *****************
  3958 ;; Defined at:
  3959 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awdiv.c"
  3960 ;; Parameters:    Size  Location     Type
  3961 ;;  divisor         2    6[COMMON] int 
  3962 ;;  dividend        2    8[COMMON] int 
  3963 ;; Auto vars:     Size  Location     Type
  3964 ;;  quotient        2    2[BANK0 ] int 
  3965 ;;  sign            1    1[BANK0 ] unsigned char 
  3966 ;;  counter         1    0[BANK0 ] unsigned char 
  3967 ;; Return value:  Size  Location     Type
  3968 ;;                  2    6[COMMON] int 
  3969 ;; Registers used:
  3970 ;;		wreg, status,2, status,0
  3971 ;; Tracked objects:
  3972 ;;		On entry : 0/0
  3973 ;;		On exit  : 0/0
  3974 ;;		Unchanged: 0/0
  3975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3976 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3977 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3978 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3979 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3980 ;;Total ram usage:        9 bytes
  3981 ;; Hardware stack levels used:    1
  3982 ;; This function calls:
  3983 ;;		Nothing
  3984 ;; This function is called by:
  3985 ;;		_hen7
  3986 ;;		_main
  3987 ;; This function uses a non-reentrant model
  3988 ;;
  3989                           
  3990                           
  3991                           ;psect for function ___awdiv
  3992  0214                     ___awdiv:
  3993  0214                     l2092:	
  3994                           ;incstack = 0
  3995                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3996                           
  3997  0214  0020               	movlb	0	; select bank0
  3998  0215  01A1               	clrf	___awdiv@sign
  3999  0216                     l2094:
  4000  0216  1FF7               	btfss	___awdiv@divisor+1,7
  4001  0217  2A19               	goto	u1791
  4002  0218  2A1A               	goto	u1790
  4003  0219                     u1791:
  4004  0219  2A21               	goto	l2100
  4005  021A                     u1790:
  4006  021A                     l2096:
  4007  021A  09F6               	comf	___awdiv@divisor,f
  4008  021B  09F7               	comf	___awdiv@divisor+1,f
  4009  021C  0AF6               	incf	___awdiv@divisor,f
  4010  021D  1903               	skipnz
  4011  021E  0AF7               	incf	___awdiv@divisor+1,f
  4012  021F                     l2098:
  4013  021F  01A1               	clrf	___awdiv@sign
  4014  0220  0AA1               	incf	___awdiv@sign,f
  4015  0221                     l2100:
  4016  0221  1FF9               	btfss	___awdiv@dividend+1,7
  4017  0222  2A24               	goto	u1801
  4018  0223  2A25               	goto	u1800
  4019  0224                     u1801:
  4020  0224  2A2E               	goto	l2106
  4021  0225                     u1800:
  4022  0225                     l2102:
  4023  0225  09F8               	comf	___awdiv@dividend,f
  4024  0226  09F9               	comf	___awdiv@dividend+1,f
  4025  0227  0AF8               	incf	___awdiv@dividend,f
  4026  0228  1903               	skipnz
  4027  0229  0AF9               	incf	___awdiv@dividend+1,f
  4028  022A                     l2104:
  4029  022A  3001               	movlw	1
  4030  022B  00FA               	movwf	??___awdiv
  4031  022C  087A               	movf	??___awdiv,w
  4032  022D  06A1               	xorwf	___awdiv@sign,f
  4033  022E                     l2106:
  4034  022E  01A2               	clrf	___awdiv@quotient
  4035  022F  01A3               	clrf	___awdiv@quotient+1
  4036  0230                     l2108:
  4037  0230  0876               	movf	___awdiv@divisor,w
  4038  0231  0477               	iorwf	___awdiv@divisor+1,w
  4039  0232  1903               	btfsc	3,2
  4040  0233  2A35               	goto	u1811
  4041  0234  2A36               	goto	u1810
  4042  0235                     u1811:
  4043  0235  2A65               	goto	l2128
  4044  0236                     u1810:
  4045  0236                     l2110:
  4046  0236  01A0               	clrf	___awdiv@counter
  4047  0237  0AA0               	incf	___awdiv@counter,f
  4048  0238  2A42               	goto	l2116
  4049  0239                     l2112:
  4050  0239  3001               	movlw	1
  4051  023A                     u1825:
  4052  023A  35F6               	lslf	___awdiv@divisor,f
  4053  023B  0DF7               	rlf	___awdiv@divisor+1,f
  4054  023C  0B89               	decfsz	9,f
  4055  023D  2A3A               	goto	u1825
  4056  023E                     l2114:
  4057  023E  3001               	movlw	1
  4058  023F  00FA               	movwf	??___awdiv
  4059  0240  087A               	movf	??___awdiv,w
  4060  0241  07A0               	addwf	___awdiv@counter,f
  4061  0242                     l2116:
  4062  0242  1FF7               	btfss	___awdiv@divisor+1,7
  4063  0243  2A45               	goto	u1831
  4064  0244  2A46               	goto	u1830
  4065  0245                     u1831:
  4066  0245  2A39               	goto	l2112
  4067  0246                     u1830:
  4068  0246                     l2118:
  4069  0246  3001               	movlw	1
  4070  0247                     u1845:
  4071  0247  35A2               	lslf	___awdiv@quotient,f
  4072  0248  0DA3               	rlf	___awdiv@quotient+1,f
  4073  0249  0B89               	decfsz	9,f
  4074  024A  2A47               	goto	u1845
  4075  024B  0877               	movf	___awdiv@divisor+1,w
  4076  024C  0279               	subwf	___awdiv@dividend+1,w
  4077  024D  1D03               	skipz
  4078  024E  2A51               	goto	u1855
  4079  024F  0876               	movf	___awdiv@divisor,w
  4080  0250  0278               	subwf	___awdiv@dividend,w
  4081  0251                     u1855:
  4082  0251  1C03               	skipc
  4083  0252  2A54               	goto	u1851
  4084  0253  2A55               	goto	u1850
  4085  0254                     u1851:
  4086  0254  2A5A               	goto	l2124
  4087  0255                     u1850:
  4088  0255                     l2120:
  4089  0255  0876               	movf	___awdiv@divisor,w
  4090  0256  02F8               	subwf	___awdiv@dividend,f
  4091  0257  0877               	movf	___awdiv@divisor+1,w
  4092  0258  3BF9               	subwfb	___awdiv@dividend+1,f
  4093  0259                     l2122:
  4094  0259  1422               	bsf	___awdiv@quotient,0
  4095  025A                     l2124:
  4096  025A  3001               	movlw	1
  4097  025B                     u1865:
  4098  025B  36F7               	lsrf	___awdiv@divisor+1,f
  4099  025C  0CF6               	rrf	___awdiv@divisor,f
  4100  025D  0B89               	decfsz	9,f
  4101  025E  2A5B               	goto	u1865
  4102  025F                     l2126:
  4103  025F  3001               	movlw	1
  4104  0260  02A0               	subwf	___awdiv@counter,f
  4105  0261  1D03               	btfss	3,2
  4106  0262  2A64               	goto	u1871
  4107  0263  2A65               	goto	u1870
  4108  0264                     u1871:
  4109  0264  2A46               	goto	l2118
  4110  0265                     u1870:
  4111  0265                     l2128:
  4112  0265  0821               	movf	___awdiv@sign,w
  4113  0266  1903               	btfsc	3,2
  4114  0267  2A69               	goto	u1881
  4115  0268  2A6A               	goto	u1880
  4116  0269                     u1881:
  4117  0269  2A6F               	goto	l2132
  4118  026A                     u1880:
  4119  026A                     l2130:
  4120  026A  09A2               	comf	___awdiv@quotient,f
  4121  026B  09A3               	comf	___awdiv@quotient+1,f
  4122  026C  0AA2               	incf	___awdiv@quotient,f
  4123  026D  1903               	skipnz
  4124  026E  0AA3               	incf	___awdiv@quotient+1,f
  4125  026F                     l2132:
  4126  026F  0823               	movf	___awdiv@quotient+1,w
  4127  0270  00F7               	movwf	?___awdiv+1
  4128  0271  0822               	movf	___awdiv@quotient,w
  4129  0272  00F6               	movwf	?___awdiv
  4130  0273                     l615:
  4131  0273  0008               	return
  4132  0274                     __end_of___awdiv:
  4133                           
  4134                           	psect	text11
  4135  0058                     __ptext11:	
  4136 ;; *************** function _fclr *****************
  4137 ;; Defined at:
  4138 ;;		line 369 in file "Q5.c"
  4139 ;; Parameters:    Size  Location     Type
  4140 ;;  flg             2    0[COMMON] unsigned short 
  4141 ;; Auto vars:     Size  Location     Type
  4142 ;;		None
  4143 ;; Return value:  Size  Location     Type
  4144 ;;                  1    wreg      void 
  4145 ;; Registers used:
  4146 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4147 ;; Tracked objects:
  4148 ;;		On entry : 0/0
  4149 ;;		On exit  : 0/0
  4150 ;;		Unchanged: 0/0
  4151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4152 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4155 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4156 ;;Total ram usage:        2 bytes
  4157 ;; Hardware stack levels used:    1
  4158 ;; This function calls:
  4159 ;;		Nothing
  4160 ;; This function is called by:
  4161 ;;		_main
  4162 ;;		_kaisu
  4163 ;; This function uses a non-reentrant model
  4164 ;;
  4165                           
  4166                           
  4167                           ;psect for function _fclr
  4168  0058                     _fclr:
  4169  0058                     l2394:	
  4170                           ;incstack = 0
  4171                           ; Regs used in _fclr: [wreg-fsr0h+status,2+status,0]
  4172                           
  4173                           
  4174                           ;Q5.c: 369: void fclr(unsigned short flg);Q5.c: 370: {;Q5.c: 371:     switch(flg){
  4175  0058  2867               	goto	l2404
  4176  0059                     l2396:
  4177                           
  4178                           ;Q5.c: 373:                     flag_R=0;
  4179  0059  0020               	movlb	0	; select bank0
  4180  005A  01EA               	clrf	_flag_R
  4181  005B  01EB               	clrf	_flag_R+1
  4182                           
  4183                           ;Q5.c: 374:                     break;
  4184  005C  2877               	goto	l217
  4185  005D                     l2398:
  4186                           
  4187                           ;Q5.c: 376:                     flag_P=0;
  4188  005D  0020               	movlb	0	; select bank0
  4189  005E  01E8               	clrf	_flag_P
  4190  005F  01E9               	clrf	_flag_P+1
  4191                           
  4192                           ;Q5.c: 377:                     break;
  4193  0060  2877               	goto	l217
  4194  0061                     l2400:
  4195                           
  4196                           ;Q5.c: 379:                     flag_P=flag_R=0;
  4197  0061  0020               	movlb	0	; select bank0
  4198  0062  01EA               	clrf	_flag_R
  4199  0063  01EB               	clrf	_flag_R+1
  4200  0064  01E8               	clrf	_flag_P
  4201  0065  01E9               	clrf	_flag_P+1
  4202                           
  4203                           ;Q5.c: 380:                     break;
  4204  0066  2877               	goto	l217
  4205  0067                     l2404:
  4206                           
  4207                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4208                           ; Switch size 1, requested type "simple"
  4209                           ; Number of cases is 1, Range of values is 0 to 0
  4210                           ; switch strategies available:
  4211                           ; Name         Instructions Cycles
  4212                           ; simple_byte            4     3 (average)
  4213                           ; direct_byte            8     6 (fixed)
  4214                           ; jumptable            260     6 (fixed)
  4215                           ;	Chosen strategy is simple_byte
  4216  0067  0871               	movf	fclr@flg+1,w
  4217  0068  3A00               	xorlw	0	; case 0
  4218  0069  1903               	skipnz
  4219  006A  286C               	goto	l2856
  4220  006B  2877               	goto	l217
  4221  006C                     l2856:
  4222                           
  4223                           ; Switch size 1, requested type "simple"
  4224                           ; Number of cases is 3, Range of values is 0 to 2
  4225                           ; switch strategies available:
  4226                           ; Name         Instructions Cycles
  4227                           ; simple_byte           10     6 (average)
  4228                           ; direct_byte           12     6 (fixed)
  4229                           ; jumptable            260     6 (fixed)
  4230                           ;	Chosen strategy is simple_byte
  4231  006C  0870               	movf	fclr@flg,w
  4232  006D  3A00               	xorlw	0	; case 0
  4233  006E  1903               	skipnz
  4234  006F  2859               	goto	l2396
  4235  0070  3A01               	xorlw	1	; case 1
  4236  0071  1903               	skipnz
  4237  0072  285D               	goto	l2398
  4238  0073  3A03               	xorlw	3	; case 2
  4239  0074  1903               	skipnz
  4240  0075  2861               	goto	l2400
  4241  0076  2877               	goto	l217
  4242  0077                     l217:
  4243  0077  0008               	return
  4244  0078                     __end_of_fclr:
  4245  007E                     btemp	set	126	;btemp
  4246  007E                     wtemp0	set	126
  4247                           
  4248                           	psect	config
  4249                           
  4250                           ;Config register CONFIG1 @ 0x8007
  4251                           ;	Oscillator Selection
  4252                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  4253                           ;	Watchdog Timer Enable
  4254                           ;	WDTE = OFF, WDT disabled
  4255                           ;	Power-up Timer Enable
  4256                           ;	PWRTE = OFF, PWRT disabled
  4257                           ;	MCLR Pin Function Select
  4258                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  4259                           ;	Flash Program Memory Code Protection
  4260                           ;	CP = OFF, Program memory code protection is disabled
  4261                           ;	Data Memory Code Protection
  4262                           ;	CPD = OFF, Data memory code protection is disabled
  4263                           ;	Brown-out Reset Enable
  4264                           ;	BOREN = OFF, Brown-out Reset disabled
  4265                           ;	Clock Out Enable
  4266                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  4267                           ;	Internal/External Switchover
  4268                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4269                           ;	Fail-Safe Clock Monitor Enable
  4270                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4271  8007                     	org	32775
  4272  8007  09E4               	dw	2532
  4273                           
  4274                           ;Config register CONFIG2 @ 0x8008
  4275                           ;	Flash Memory Self-Write Protection
  4276                           ;	WRT = OFF, Write protection off
  4277                           ;	Voltage Regulator Capacitor Enable
  4278                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
  4279                           ;	PLL Enable
  4280                           ;	PLLEN = OFF, 4x PLL disabled
  4281                           ;	Stack Overflow/Underflow Reset Enable
  4282                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  4283                           ;	Brown-out Reset Voltage Selection
  4284                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  4285                           ;	Low-Voltage Programming Enable
  4286                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  4287  8008                     	org	32776
  4288  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    0
    Data        156
    BSS         34
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     48      80
    BANK1            80      0      80
    BANK2            80      0      76
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___awdiv
    _tact->_tactsw
    _motor->_dynam
    _hen7->___awdiv
    ___awdiv->___wmul

Critical Paths under _main in BANK0

    _main->_hen7
    _motor->_dynam
    _hen7->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                25    25      0   13246
                                             11 COMMON     1     1      0
                                             24 BANK0     24    24      0
                            ___awdiv
                             ___wmul
                              _dynam
                               _fclr
                               _hen7
                              _motor
                           _portinit
                               _tact
                             _zenoff
 ---------------------------------------------------------------------------------
 (1) _zenoff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _tact                                                 2     0      2     670
                                              8 COMMON     2     0      2
                             _tactsw
 ---------------------------------------------------------------------------------
 (2) _tactsw                                               8     8      0     116
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 (1) _portinit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motor                                               12     2     10    4327
                                              8 COMMON     2     2      0
                                              8 BANK0     10     0     10
                              _dynam
 ---------------------------------------------------------------------------------
 (2) _dynam                                               16     8      8    2271
                                              0 COMMON     8     0      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (1) _hen7                                                20    16      4    3247
                                              4 BANK0     20    16      4
                            ___awdiv
                            ___awmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     700
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     756
                                              6 COMMON     5     1      4
                                              0 BANK0      4     4      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _fclr                                                 2     0      2     402
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
     ___wmul (ARG)
   ___wmul
   _dynam
   _fclr
   _hen7
     ___awdiv
       ___wmul (ARG)
     ___awmod
     ___wmul
   _motor
     _dynam
   _portinit
   _tact
     _tactsw
   _zenoff

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     30      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      4C       9       95.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      FA      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      FA      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Mar 04 13:59:49 2021

                     l95 0038             ___awdiv@sign 0021                       _cw 0064  
    ___wmul@multiplicand 0072                      l112 0290                      l114 02A0  
                    l123 02D6                      l116 02B6                      l108 0025  
                    l300 067F                      l118 02C6                      l135 03DD  
                    l208 0124                      l217 0077                      l129 0353  
                    l170 05A7                      l271 009B                      l193 00D8  
                    l290 05BE                      l462 0043                      l615 0273  
                    l464 0057                      l296 062D                      l288 05B1  
                    l628 0213                      _RA0 0060                      _RA1 0061  
                    _RA2 0062                      _RC0 0070                      _RC1 0071  
                    _RC2 0072                      _RC5 0075                      _RC6 0076  
                    _RC7 0077                      _ccw 0062                      _flg 0066  
           ___awmod@sign 0076                      wreg 0009                     l2010 035B  
                   l2100 0221                     l2012 0361                     l2020 0371  
                   l2004 034B                     l2110 0236                     l2102 0225  
                   l2030 039C                     l2022 0377                     l2014 0365  
                   l2006 0351                     l2120 0255                     l2112 0239  
                   l2104 022A                     l2040 03C1                     l2032 03AE  
                   l2024 037D                     l2016 0367                     l2008 0355  
                   l2130 026A                     l2122 0259                     l2114 023E  
                   l2106 022E                     l2050 03C8                     l2042 03C1  
                   l2034 03B5                     l2026 038F                     l2018 036B  
                   l2210 0023                     l2132 026F                     l2124 025A  
                   l2116 0242                     l2108 0230                     l2140 01C6  
                   l2300 050A                     l2220 03E9                     l2036 03BB  
                   l2028 0396                     l2060 009C                     l2212 0024  
                   l2204 001D                     l2126 025F                     l2118 0246  
                   l2150 01DC                     l2142 01CB                     l2310 0519  
                   l2302 050E                     l2222 03EF                     l2214 03DE  
                   l2038 03BD                     l2054 03CD                     l2070 00BD  
                   l2062 00A0                     l2206 0021                     l2400 0061  
                   l2128 0265                     l2160 01F6                     l2152 01DF  
                   l2144 01CD                     l2136 01C1                     l2080 003B  
                   l2320 0541                     l2312 0523                     l2304 0517  
                   l2240 0454                     l2224 03FA                     l2216 03E1  
                   l2072 00C6                     l2064 00AC                     l2208 0022  
                   l2170 020F                     l2162 01FA                     l2154 01E4  
                   l2146 01D1                     l2138 01C2                     l2082 003F  
                   l2330 0556                     l2322 054E                     l2314 052B  
                   l2250 0469                     l2242 045D                     l2234 043E  
                   l2226 0438                     l2218 03E5                     l2410 0078  
                   l2066 00B6                     l2404 0067                     l2092 0214  
                   l2164 01FF                     l2156 01E8                     l2148 01D6  
                   l2084 0048                     l2332 0560                     l2324 0554  
                   l2316 052F                     l2252 0471                     l2236 0448  
                   l2228 043C                     l2412 007D                     l2180 0033  
                   l2076 00D3                     l2068 00BB                     l2094 0216  
                   l2158 01EC                     l2166 0205                     l2086 004D  
                   l2078 0039                     l2350 058D                     l2334 0568  
                   l2318 0539                     l2270 04A0                     l2262 0480  
                   l2254 0475                     l2238 0450                     l2182 0036  
                   l2174 0026                     l2096 021A                     l2168 020A  
                   l2088 0053                     l2344 0577                     l2336 056C  
                   l2272 04CB                     l2264 048A                     l2256 047E  
                   l2248 045F                     l2416 0082                     l2176 0029  
                   l2360 00D9                     l2600 05DB                     l2098 021F  
                   l2346 0581                     l2338 0575                     l2290 04F6  
                   l2282 04D7                     l2274 04D1                     l2266 0492  
                   l2354 0597                     l2418 0096                     l2178 002C  
                   l2370 00EC                     l2362 00DA                     l2610 05F2  
                   l2602 05DD                     l2348 0589                     l2284 04E1  
                   l2276 04D5                     l2268 0496                     l2380 0106  
                   l2372 00F2                     l2364 00DD                     l2700 0718  
                   l2620 060F                     l2612 05F7                     l2604 05DF  
                   l2286 04E9                     l1910 027E                     l2382 010C  
                   l2374 00F8                     l2366 00E3                     l2710 073C  
                   l2702 071C                     l2630 0631                     l2622 0616  
                   l2614 05FB                     l2606 05E1                     l2296 04F8  
                   l2288 04ED                     l1920 0294                     l1912 027F  
                   l1904 0274                     l2376 00FB                     l2368 00E9  
                   l2720 076A                     l2712 0743                     l2704 071C  
                   l2640 0651                     l2632 0638                     l2624 061C  
                   l2616 0601                     l2608 05E1                     l2394 0058  
                   l2298 0502                     l1930 02A4                     l1914 0280  
                   l1906 027B                     l2378 0101                     l2730 07A9  
                   l2722 076E                     l2714 0747                     l2706 0720  
                   l2650 0674                     l2642 0658                     l2626 0623  
                   l2618 0607                     l2634 0641                     l2396 0059  
                   l1940 02BA                     l1932 02A5                     l1924 029B  
                   l1916 0287                     l1908 027C                     l2388 0114  
                   l2740 07C7                     l2732 07AD                     l2724 0785  
                   l2716 075E                     l2708 0737                     l2660 0698  
                   l2652 067B                     l2644 0660                     l2636 0646  
                   l2628 0629                     l2580 05B1                     l2398 005D  
                   l1950 02CA                     l1934 02A6                     l1918 028C  
                   l2742 07CE                     l2734 07B3                     l2718 0763  
                   l2726 079D                     l2662 069C                     l2670 06B4  
                   l2654 0683                     l2646 0667                     l2638 064A  
                   l2590 05BA                     l2582 05B1                     l2574 05A8  
                   l1960 02D4                     l1952 02CA                     l1944 02C1  
                   l1936 02AD                     l1928 02A2                     l2736 07B9  
                   l2728 07A4                     l2680 06D0                     l2672 06B8  
                   l2664 06A3                     l2656 068A                     l2648 066D  
                   l2592 05CF                     l2584 05B1                     l2576 05AB  
                   l1970 02EA                     l1962 02D8                     l1954 02CB  
                   l1938 02B2                     l2850 0119                     l2738 07C0  
                   l2690 0707                     l2682 06D1                     l2674 06BC  
                   l2666 06AA                     l2658 0693                     l2594 05D6  
                   l2586 05B1                     l2578 05B1                     l2852 03D2  
                   l1980 0312                     l1972 02EE                     l1964 02DE  
                   l1956 02CC                     l1948 02C9                     l2692 070D  
                   l2684 06D1                     l2676 06C3                     l2668 06B0  
                   l2596 05D6                     l2588 05B6                     l2854 059C  
                   l1990 033E                     l1982 0319                     l1966 02E4  
                   l1974 02F4                     l1958 02CE                     l2694 0710  
                   l2686 06E3                     l2678 06CA                     l2598 05D9  
                   l2856 006C                     l1992 0340                     l1984 031F  
                   l1976 02FA                     l1968 02E8                     l2696 0714  
                   l2688 06EE                     l1994 0344                     l1986 0331  
                   l1978 0300                     l2698 0714                     l1996 0344  
                   l1988 0338                     u2000 03E5                     u2001 03E4  
                   u2010 03EF                     u2011 03EE                     u2100 04E1  
                   u2020 0448                     u2101 04E0                     u2021 0447  
                   u2110 04F6                     u2030 045D                     u2111 04F5  
                   u2031 045C                     u2120 0502                     u2040 0469  
                   u2200 00E3                     u2121 0501                     u2105 04DD  
                   u2041 0468                     u2025 0444                     u2201 00E2  
                   u2130 0517                     u2050 047E                     u2210 00F2  
                   u2131 0516                     u2051 047D                     u2211 00F1  
                   u2140 0523                     u2060 048A                     u2220 0101  
                   u2141 0522                     u2125 04FE                     u2061 0489  
                   u2045 0465                     u2221 0100                     u2150 0538  
                   u2070 049F                     u1510 0287                     u2230 010C  
                   u2151 0537                     u2071 049E                     u1511 0286  
                   u2231 010B                     u2160 0560                     u1600 0319  
                   u1520 029A                     u2240 0113                     u2161 055F  
                   u2145 051F                     u2065 0486                     u1601 0318  
                   u1521 0299                     u2241 0112                     u2170 0575  
                   u1610 031F                     u1530 02AD                     u2250 0081  
                   u2171 0574                     u1611 031E                     u1531 02AC  
                   u2251 0080                     u2180 0581                     u1700 039C  
                   u1620 0338                     u1540 02C0                     u2181 0580  
                   u2165 055C                     u2085 04A6                     u1701 039B  
                   u1621 0337                     u1541 02BF                     u2190 0596  
                   u1710 03B5                     u1630 033E                     u1550 02D4  
                   u2191 0595                     u2095 04B4                     u1711 03B4  
                   u1631 033D                     u1551 02D3                     u1800 0225  
                   u1720 03BB                     u1640 0351                     u1560 02DE  
                   u2600 05F7                     u1801 0224                     u2185 057D  
                   u1721 03BA                     u1641 0350                     u1561 02DD  
                   u2601 05F6                     u1810 0236                     u1650 035B  
                   u1570 02E4                     u1730 00B6                     u2610 05FB  
                   u1811 0235                     u1651 035A                     u1571 02E3  
                   u1731 00B5                     u2611 05FA                     u1900 01D1  
                   u1660 0361                     u1580 02FA                     u1740 00C6  
                   u2700 0658                     u2620 0601                     u2540 05B6  
                   u1901 01D0                     u1661 0360                     u1581 02F9  
                   u1741 00C5                     u2701 0657                     u2621 0600  
                   u2541 05B5                     u1830 0246                     u1910 01DC  
                   u1750 003F                     u1670 0377                     u1590 0300  
                   u2710 066D                     u2630 0607                     u2550 05BA  
                   u1831 0245                     u1911 01DB                     u1751 003E  
                   u1671 0376                     u1591 02FF                     u1735 00B2  
                   u2711 066C                     u2631 0606                     u2551 05B9  
                   u1680 037D                     u2800 06BC                     u2720 0674  
                   u2640 061C                     u2560 05BE                     u1825 023A  
                   u1681 037C                     u2801 06BB                     u2721 0673  
                   u2641 061B                     u2561 05BD                     u1850 0255  
                   u1930 01EC                     u1690 0396                     u2810 06C3  
                   u2730 067B                     u2650 0623                     u2570 05C5  
                   u1851 0254                     u1931 01EB                     u1691 0395  
                   u2811 06C2                     u2731 067A                     u2651 0622  
                   u2571 05C2                     u1940 01F6                     u1780 0053  
                   u2900 07A9                     u2820 06CA                     u2740 0698  
                   u2660 0629                     u2580 05CD                     u1845 0247  
                   u1941 01F5                     u1925 01E0                     u1781 0052  
                   u1765 0044                     u2901 07A8                     u2821 06C9  
                   u2741 0697                     u2661 0628                     u2581 05CA  
                   u1870 0265                     u1790 021A                     u2910 07AD  
                   u2830 06D0                     u2750 069C                     u2670 0646  
                   u1871 0264                     u1855 0251                     u1791 0219  
                   u1775 0049                     u2911 07AC                     u2831 06CF  
                   u2751 069B                     u2671 0645                     u1880 026A  
                   u1960 0205                     u2920 07B3                     u2840 0707  
                   u2760 06A3                     u2680 064A                     u2584 05C7  
                   u1881 0269                     u1865 025B                     u1961 0204  
                   u1945 01F2                     u2921 07B2                     u2841 0706  
                   u2761 06A2                     u2681 0649                     u1970 020A  
                   u1890 01C6                     u2930 07B9                     u2850 071C  
                   u2770 06AA                     u2690 0651                     u2594 05CF  
                   u1971 0209                     u1955 01FB                     u1891 01C5  
                   u2931 07B8                     u2851 071B                     u2771 06A9  
                   u2691 0650                     u2940 07C0                     u2860 073C  
                   u2780 06B0                     u2941 07BF                     u2861 073B  
                   u2845 0703                     u2781 06AF                     u2950 07C7  
                   u2870 0743                     u2790 06B8                     u2951 07C6  
                   u2871 0742                     u2791 06B7                     u2960 07CE  
                   u2880 0763                     u2961 07CD                     u2881 0762  
                   u2890 076A                     u2891 0769                     _hen7 03DE  
                   _atai 005C                     _fclr 0058                     _main 05A8  
                   _num0 00C0                     _kisu 00D4                     _moja 0160  
                   _samf 0120                     _mojf 0154                     _tact 00D9  
                   _mojh 00EC                     _moji 0140                     _mojn 00E8  
                   _samp 00A0                     _gusu 00DE                     fsr0h 0005  
                   fsr1h 0007                     indf0 0000                     fsr0l 0004  
                   fsr1l 0006                     btemp 007E                     start 0002  
            main@zyoutai 004A                    ?_hen7 0024                    ?_fclr 0070  
                  ?_main 0070          __end_of___awdiv 0274                    ?_tact 0078  
        __end_of___awmod 0214          ___awdiv@divisor 0076          ___awdiv@counter 0020  
                  _PORTA 000C                    _PORTB 000D                    _PORTC 000E  
                  _TRISA 008C                    _TRISB 008D                    _TRISC 008E  
                  _code1 0052                    _atai1 005E                    hen7@l 0032  
                  hen7@m 0034                    hen7@n 0036                    _count 005A  
                  _dynam 0274                    _fugou 0050                    _motor 0078  
                  status 0003                    wtemp0 007E          __initialization 07DB  
           __end_of_hen7 05A8             __end_of_fclr 0078             __end_of_main 07DB  
           __end_of_tact 0125                   ??_hen7 0028                   ??_fclr 0072  
                 ??_main 007B                   ??_tact 007A                   ?_dynam 0070  
       ___awdiv@dividend 0078                   ?_motor 0028                   _ANSELA 018C  
                 _ANSELB 018D                   _OSCCON 0099              dynam@smdata 0074  
                 ___wmul 0039                   _code10 0054                   _atai10 0060  
              ??___awdiv 007A                ??___awmod 0074                   _flag_P 0068  
                 _flag_R 006A         ___awdiv@quotient 0022                   _tactsw 009C  
        ___awmod@divisor 0070          ___awmod@counter 0075                   _zenoff 001D  
                 dynam@j 0024                   motor@i 0078         __end_of_portinit 0039  
__end_of__initialization 07FD           __pcstackCOMMON 0070             __pidataBANK1 0171  
           __pidataBANK2 0125            __end_of_dynam 03DE            __end_of_motor 009C  
                ??_dynam 0078                  ??_motor 0078               __pbssBANK0 0050  
             __pmaintext 05A8                  ?___wmul 0070                  ?_tactsw 0070  
                ?_zenoff 0070               hen7@value1 002C                  ___awdiv 0214  
                ___awmod 01C1          __size_of___wmul 001F                ?_portinit 0070  
                _code100 0056          __size_of_tactsw 003D                  __ptext1 001D  
                __ptext2 00D9                  __ptext3 009C                  __ptext4 0026  
                __ptext5 0078                  __ptext6 0274                  __ptext7 03DE  
                __ptext8 0039                  __ptext9 01C1                  hen7@ns1 0026  
        __size_of_zenoff 0009         ___awmod@dividend 0072                  fclr@flg 0070  
                main@ans 0048              motor@kakudo 0028                  clrloop0 0012  
   end_of_initialization 07FD              motor@smdata 002E                  dynam@tm 0022  
                dynam@tr 0076                  init_ram 0017                  initloop 0018  
                tactsw@a 0076                  tactsw@b 0072                  tactsw@c 0074  
                motor@tr 0030               ??_portinit 0070             hen7@value100 0030  
         __end_of___wmul 0058           __end_of_tactsw 00D9           __end_of_zenoff 0026  
    start_initialization 07DB                 ??___wmul 0074              __pdataBANK1 00A0  
            __pdataBANK2 0120                 ??_tactsw 0070                 ??_zenoff 0070  
            __pbssCOMMON 007C                ___latbits 0003            __pcstackBANK0 0020  
               ?___awdiv 0076                 ?___awmod 0070        __size_of_portinit 0013  
              hen7@value 0024           __size_of_dynam 016A           __size_of_motor 0024  
          dynam@dig1data 0070            dynam@dig2data 0072           ___wmul@product 0074  
              clear_ram0 0011            motor@dig1data 002A            motor@dig2data 002C  
      ___wmul@multiplier 0070                main@ataiL 0044                main@ataiR 0046  
            hen7@value10 002E         __size_of___awdiv 0060         __size_of___awmod 0053  
               _code1000 0058                 __ptext10 0214                 __ptext11 0058  
               _flag_sw1 006E                 _flag_sw2 006C                 _flag_sw3 007C  
          __size_of_hen7 01CA            __size_of_fclr 0020            __size_of_main 0233  
          __size_of_tact 004C                 _portinit 0026                 main@segL 004C  
               main@segR 004E                 dynam@ext 0026                 dynam@smd 0020  
               tact@mode 0078  
