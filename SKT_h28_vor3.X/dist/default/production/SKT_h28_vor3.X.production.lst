

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Mar 02 14:43:43 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F1938
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    25                           	dabs	1,0x7E,2
    26  0000                     
    27                           ; Version 2.20
    28                           ; Generated 12/02/2020 GMT
    29                           ; 
    30                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F1938 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0095                     	;# 
    99  0096                     	;# 
   100  0097                     	;# 
   101  0098                     	;# 
   102  0099                     	;# 
   103  009A                     	;# 
   104  009B                     	;# 
   105  009B                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  010C                     	;# 
   110  010D                     	;# 
   111  010E                     	;# 
   112  0110                     	;# 
   113  0111                     	;# 
   114  0112                     	;# 
   115  0113                     	;# 
   116  0114                     	;# 
   117  0115                     	;# 
   118  0116                     	;# 
   119  0117                     	;# 
   120  0118                     	;# 
   121  0119                     	;# 
   122  011A                     	;# 
   123  011B                     	;# 
   124  011D                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0191                     	;# 
   128  0191                     	;# 
   129  0192                     	;# 
   130  0193                     	;# 
   131  0193                     	;# 
   132  0193                     	;# 
   133  0194                     	;# 
   134  0195                     	;# 
   135  0196                     	;# 
   136  0199                     	;# 
   137  019A                     	;# 
   138  019B                     	;# 
   139  019B                     	;# 
   140  019B                     	;# 
   141  019B                     	;# 
   142  019C                     	;# 
   143  019C                     	;# 
   144  019D                     	;# 
   145  019E                     	;# 
   146  019F                     	;# 
   147  020D                     	;# 
   148  0210                     	;# 
   149  0211                     	;# 
   150  0212                     	;# 
   151  0213                     	;# 
   152  0214                     	;# 
   153  0215                     	;# 
   154  0215                     	;# 
   155  0216                     	;# 
   156  0217                     	;# 
   157  0291                     	;# 
   158  0291                     	;# 
   159  0292                     	;# 
   160  0293                     	;# 
   161  0294                     	;# 
   162  0295                     	;# 
   163  0295                     	;# 
   164  0296                     	;# 
   165  0298                     	;# 
   166  0298                     	;# 
   167  0299                     	;# 
   168  029A                     	;# 
   169  029B                     	;# 
   170  029C                     	;# 
   171  029C                     	;# 
   172  029D                     	;# 
   173  029E                     	;# 
   174  029F                     	;# 
   175  0311                     	;# 
   176  0311                     	;# 
   177  0312                     	;# 
   178  0313                     	;# 
   179  0314                     	;# 
   180  0315                     	;# 
   181  0315                     	;# 
   182  0316                     	;# 
   183  0318                     	;# 
   184  0318                     	;# 
   185  0319                     	;# 
   186  031A                     	;# 
   187  031C                     	;# 
   188  031C                     	;# 
   189  031D                     	;# 
   190  031E                     	;# 
   191  0394                     	;# 
   192  0395                     	;# 
   193  0396                     	;# 
   194  0415                     	;# 
   195  0416                     	;# 
   196  0417                     	;# 
   197  041C                     	;# 
   198  041D                     	;# 
   199  041E                     	;# 
   200  0791                     	;# 
   201  0792                     	;# 
   202  0793                     	;# 
   203  0794                     	;# 
   204  0795                     	;# 
   205  0798                     	;# 
   206  0799                     	;# 
   207  07A0                     	;# 
   208  07A1                     	;# 
   209  07A3                     	;# 
   210  07A4                     	;# 
   211  07A6                     	;# 
   212  07A7                     	;# 
   213  07A9                     	;# 
   214  07AA                     	;# 
   215  0FE4                     	;# 
   216  0FE5                     	;# 
   217  0FE6                     	;# 
   218  0FE7                     	;# 
   219  0FE8                     	;# 
   220  0FE9                     	;# 
   221  0FEA                     	;# 
   222  0FEB                     	;# 
   223  0FED                     	;# 
   224  0FEE                     	;# 
   225  0FEF                     	;# 
   226  0000                     	;# 
   227  0001                     	;# 
   228  0002                     	;# 
   229  0003                     	;# 
   230  0004                     	;# 
   231  0005                     	;# 
   232  0006                     	;# 
   233  0007                     	;# 
   234  0008                     	;# 
   235  0009                     	;# 
   236  000A                     	;# 
   237  000B                     	;# 
   238  000C                     	;# 
   239  000D                     	;# 
   240  000E                     	;# 
   241  0010                     	;# 
   242  0011                     	;# 
   243  0012                     	;# 
   244  0013                     	;# 
   245  0015                     	;# 
   246  0016                     	;# 
   247  0016                     	;# 
   248  0017                     	;# 
   249  0018                     	;# 
   250  0019                     	;# 
   251  001A                     	;# 
   252  001B                     	;# 
   253  001C                     	;# 
   254  001E                     	;# 
   255  001F                     	;# 
   256  008C                     	;# 
   257  008D                     	;# 
   258  008E                     	;# 
   259  0090                     	;# 
   260  0091                     	;# 
   261  0092                     	;# 
   262  0093                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009B                     	;# 
   271  009C                     	;# 
   272  009D                     	;# 
   273  009E                     	;# 
   274  010C                     	;# 
   275  010D                     	;# 
   276  010E                     	;# 
   277  0110                     	;# 
   278  0111                     	;# 
   279  0112                     	;# 
   280  0113                     	;# 
   281  0114                     	;# 
   282  0115                     	;# 
   283  0116                     	;# 
   284  0117                     	;# 
   285  0118                     	;# 
   286  0119                     	;# 
   287  011A                     	;# 
   288  011B                     	;# 
   289  011D                     	;# 
   290  018C                     	;# 
   291  018D                     	;# 
   292  0191                     	;# 
   293  0191                     	;# 
   294  0192                     	;# 
   295  0193                     	;# 
   296  0193                     	;# 
   297  0193                     	;# 
   298  0194                     	;# 
   299  0195                     	;# 
   300  0196                     	;# 
   301  0199                     	;# 
   302  019A                     	;# 
   303  019B                     	;# 
   304  019B                     	;# 
   305  019B                     	;# 
   306  019B                     	;# 
   307  019C                     	;# 
   308  019C                     	;# 
   309  019D                     	;# 
   310  019E                     	;# 
   311  019F                     	;# 
   312  020D                     	;# 
   313  0210                     	;# 
   314  0211                     	;# 
   315  0212                     	;# 
   316  0213                     	;# 
   317  0214                     	;# 
   318  0215                     	;# 
   319  0215                     	;# 
   320  0216                     	;# 
   321  0217                     	;# 
   322  0291                     	;# 
   323  0291                     	;# 
   324  0292                     	;# 
   325  0293                     	;# 
   326  0294                     	;# 
   327  0295                     	;# 
   328  0295                     	;# 
   329  0296                     	;# 
   330  0298                     	;# 
   331  0298                     	;# 
   332  0299                     	;# 
   333  029A                     	;# 
   334  029B                     	;# 
   335  029C                     	;# 
   336  029C                     	;# 
   337  029D                     	;# 
   338  029E                     	;# 
   339  029F                     	;# 
   340  0311                     	;# 
   341  0311                     	;# 
   342  0312                     	;# 
   343  0313                     	;# 
   344  0314                     	;# 
   345  0315                     	;# 
   346  0315                     	;# 
   347  0316                     	;# 
   348  0318                     	;# 
   349  0318                     	;# 
   350  0319                     	;# 
   351  031A                     	;# 
   352  031C                     	;# 
   353  031C                     	;# 
   354  031D                     	;# 
   355  031E                     	;# 
   356  0394                     	;# 
   357  0395                     	;# 
   358  0396                     	;# 
   359  0415                     	;# 
   360  0416                     	;# 
   361  0417                     	;# 
   362  041C                     	;# 
   363  041D                     	;# 
   364  041E                     	;# 
   365  0791                     	;# 
   366  0792                     	;# 
   367  0793                     	;# 
   368  0794                     	;# 
   369  0795                     	;# 
   370  0798                     	;# 
   371  0799                     	;# 
   372  07A0                     	;# 
   373  07A1                     	;# 
   374  07A3                     	;# 
   375  07A4                     	;# 
   376  07A6                     	;# 
   377  07A7                     	;# 
   378  07A9                     	;# 
   379  07AA                     	;# 
   380  0FE4                     	;# 
   381  0FE5                     	;# 
   382  0FE6                     	;# 
   383  0FE7                     	;# 
   384  0FE8                     	;# 
   385  0FE9                     	;# 
   386  0FEA                     	;# 
   387  0FEB                     	;# 
   388  0FED                     	;# 
   389  0FEE                     	;# 
   390  0FEF                     	;# 
   391                           
   392                           	psect	idataBANK0
   393  0422                     __pidataBANK0:
   394                           
   395                           ;initializer for _gusu
   396  0422  343F               	retlw	63
   397  0423  3400               	retlw	0
   398  0424  345B               	retlw	91
   399  0425  3400               	retlw	0
   400  0426  3466               	retlw	102
   401  0427  3400               	retlw	0
   402  0428  347D               	retlw	125
   403  0429  3400               	retlw	0
   404  042A  347F               	retlw	127
   405  042B  3400               	retlw	0
   406                           
   407                           ;initializer for _mojn
   408  042C  3454               	retlw	84
   409  042D  3400               	retlw	0
   410  042E  3473               	retlw	115
   411  042F  3400               	retlw	0
   412                           
   413                           ;initializer for _mojh
   414  0430  3476               	retlw	118
   415  0431  3400               	retlw	0
   416  0432  3438               	retlw	56
   417  0433  3400               	retlw	0
   418                           
   419                           	psect	idataBANK1
   420  052C                     __pidataBANK1:
   421                           
   422                           ;initializer for _samp
   423  052C  343F               	retlw	63
   424  052D  3400               	retlw	0
   425  052E  3406               	retlw	6
   426  052F  3400               	retlw	0
   427  0530  345B               	retlw	91
   428  0531  3400               	retlw	0
   429  0532  344F               	retlw	79
   430  0533  3400               	retlw	0
   431  0534  3466               	retlw	102
   432  0535  3400               	retlw	0
   433  0536  346D               	retlw	109
   434  0537  3400               	retlw	0
   435  0538  347D               	retlw	125
   436  0539  3400               	retlw	0
   437  053A  3427               	retlw	39
   438  053B  3400               	retlw	0
   439  053C  347F               	retlw	127
   440  053D  3400               	retlw	0
   441  053E  346F               	retlw	111
   442  053F  3400               	retlw	0
   443  0540  345F               	retlw	95
   444  0541  3400               	retlw	0
   445  0542  347C               	retlw	124
   446  0543  3400               	retlw	0
   447  0544  3458               	retlw	88
   448  0545  3400               	retlw	0
   449  0546  345E               	retlw	94
   450  0547  3400               	retlw	0
   451  0548  3479               	retlw	121
   452  0549  3400               	retlw	0
   453  054A  3471               	retlw	113
   454  054B  3400               	retlw	0
   455                           
   456                           ;initializer for _num0
   457  054C  343F               	retlw	63
   458  054D  3400               	retlw	0
   459  054E  3406               	retlw	6
   460  054F  3400               	retlw	0
   461  0550  345B               	retlw	91
   462  0551  3400               	retlw	0
   463  0552  344F               	retlw	79
   464  0553  3400               	retlw	0
   465  0554  3466               	retlw	102
   466  0555  3400               	retlw	0
   467  0556  346D               	retlw	109
   468  0557  3400               	retlw	0
   469  0558  347D               	retlw	125
   470  0559  3400               	retlw	0
   471  055A  3427               	retlw	39
   472  055B  3400               	retlw	0
   473  055C  347F               	retlw	127
   474  055D  3400               	retlw	0
   475  055E  346F               	retlw	111
   476  055F  3400               	retlw	0
   477                           
   478                           ;initializer for _moja
   479  0560  345F               	retlw	95
   480  0561  3400               	retlw	0
   481  0562  347C               	retlw	124
   482  0563  3400               	retlw	0
   483  0564  3458               	retlw	88
   484  0565  3400               	retlw	0
   485  0566  345E               	retlw	94
   486  0567  3400               	retlw	0
   487  0568  3479               	retlw	121
   488  0569  3400               	retlw	0
   489  056A  3471               	retlw	113
   490  056B  3400               	retlw	0
   491                           
   492                           ;initializer for _kisu
   493  056C  3406               	retlw	6
   494  056D  3400               	retlw	0
   495  056E  344F               	retlw	79
   496  056F  3400               	retlw	0
   497  0570  346D               	retlw	109
   498  0571  3400               	retlw	0
   499  0572  3427               	retlw	39
   500  0573  3400               	retlw	0
   501  0574  346F               	retlw	111
   502  0575  3400               	retlw	0
   503                           
   504                           	psect	idataBANK2
   505  04A3                     __pidataBANK2:
   506                           
   507                           ;initializer for _samf
   508  04A3  3471               	retlw	113
   509  04A4  3400               	retlw	0
   510  04A5  3479               	retlw	121
   511  04A6  3400               	retlw	0
   512  04A7  345E               	retlw	94
   513  04A8  3400               	retlw	0
   514  04A9  3458               	retlw	88
   515  04AA  3400               	retlw	0
   516  04AB  347C               	retlw	124
   517  04AC  3400               	retlw	0
   518  04AD  345F               	retlw	95
   519  04AE  3400               	retlw	0
   520  04AF  346F               	retlw	111
   521  04B0  3400               	retlw	0
   522  04B1  347F               	retlw	127
   523  04B2  3400               	retlw	0
   524  04B3  3427               	retlw	39
   525  04B4  3400               	retlw	0
   526  04B5  347D               	retlw	125
   527  04B6  3400               	retlw	0
   528  04B7  346D               	retlw	109
   529  04B8  3400               	retlw	0
   530  04B9  3466               	retlw	102
   531  04BA  3400               	retlw	0
   532  04BB  344F               	retlw	79
   533  04BC  3400               	retlw	0
   534  04BD  345B               	retlw	91
   535  04BE  3400               	retlw	0
   536  04BF  3406               	retlw	6
   537  04C0  3400               	retlw	0
   538  04C1  343F               	retlw	63
   539  04C2  3400               	retlw	0
   540                           
   541                           ;initializer for _moji
   542  04C3  345F               	retlw	95
   543  04C4  3400               	retlw	0
   544  04C5  347C               	retlw	124
   545  04C6  3400               	retlw	0
   546  04C7  3458               	retlw	88
   547  04C8  3400               	retlw	0
   548  04C9  345E               	retlw	94
   549  04CA  3400               	retlw	0
   550  04CB  3479               	retlw	121
   551  04CC  3400               	retlw	0
   552  04CD  3471               	retlw	113
   553  04CE  3400               	retlw	0
   554  04CF  3476               	retlw	118
   555  04D0  3400               	retlw	0
   556  04D1  3438               	retlw	56
   557  04D2  3400               	retlw	0
   558  04D3  3454               	retlw	84
   559  04D4  3400               	retlw	0
   560  04D5  3473               	retlw	115
   561  04D6  3400               	retlw	0
   562                           
   563                           ;initializer for _mojf
   564  04D7  3471               	retlw	113
   565  04D8  3400               	retlw	0
   566  04D9  3479               	retlw	121
   567  04DA  3400               	retlw	0
   568  04DB  345E               	retlw	94
   569  04DC  3400               	retlw	0
   570  04DD  3458               	retlw	88
   571  04DE  3400               	retlw	0
   572  04DF  347C               	retlw	124
   573  04E0  3400               	retlw	0
   574  04E1  345F               	retlw	95
   575  04E2  3400               	retlw	0
   576  000E                     _PORTC	set	14
   577  000D                     _PORTB	set	13
   578  000C                     _PORTA	set	12
   579  0061                     _RA1	set	97
   580  0060                     _RA0	set	96
   581  0062                     _RA2	set	98
   582  0077                     _RC7	set	119
   583  0072                     _RC2	set	114
   584  0071                     _RC1	set	113
   585  0070                     _RC0	set	112
   586  0076                     _RC6	set	118
   587  0075                     _RC5	set	117
   588  0099                     _OSCCON	set	153
   589  008E                     _TRISC	set	142
   590  008D                     _TRISB	set	141
   591  008C                     _TRISA	set	140
   592  018D                     _ANSELB	set	397
   593  018C                     _ANSELA	set	396
   594                           
   595                           	psect	cinit
   596  07CD                     start_initialization:	
   597                           ; #config settings
   598                           
   599  07CD                     __initialization:
   600                           
   601                           ; Initialize objects allocated to BANK0
   602  07CD  3022               	movlw	low __pidataBANK0
   603  07CE  0084               	movwf	4
   604  07CF  3084               	movlw	(high __pidataBANK0)| (0+128)
   605  07D0  0085               	movwf	5
   606  07D1  3058               	movlw	low __pdataBANK0
   607  07D2  0086               	movwf	6
   608  07D3  3000               	movlw	high __pdataBANK0
   609  07D4  0087               	movwf	7
   610  07D5  3012               	movlw	18
   611  07D6  3184  2413  3187   	fcall	init_ram
   612                           
   613                           ; Initialize objects allocated to BANK1
   614  07D9  302C               	movlw	low __pidataBANK1
   615  07DA  0084               	movwf	4
   616  07DB  3085               	movlw	(high __pidataBANK1)| (0+128)
   617  07DC  0085               	movwf	5
   618  07DD  30A0               	movlw	low __pdataBANK1
   619  07DE  0086               	movwf	6
   620  07DF  3000               	movlw	high __pdataBANK1
   621  07E0  0087               	movwf	7
   622  07E1  304A               	movlw	74
   623  07E2  3184  2413  3187   	fcall	init_ram
   624                           
   625                           ; Initialize objects allocated to BANK2
   626  07E5  30A3               	movlw	low __pidataBANK2
   627  07E6  0084               	movwf	4
   628  07E7  3084               	movlw	(high __pidataBANK2)| (0+128)
   629  07E8  0085               	movwf	5
   630  07E9  3020               	movlw	low __pdataBANK2
   631  07EA  0086               	movwf	6
   632  07EB  3001               	movlw	high __pdataBANK2
   633  07EC  0087               	movwf	7
   634  07ED  3040               	movlw	64
   635  07EE  3184  2413  3187   	fcall	init_ram
   636                           
   637                           ; Clear objects allocated to COMMON
   638  07F1  01FA               	clrf	__pbssCOMMON& (0+127)
   639  07F2  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   640  07F3  01FC               	clrf	(__pbssCOMMON+2)& (0+127)
   641  07F4  01FD               	clrf	(__pbssCOMMON+3)& (0+127)
   642                           
   643                           ; Clear objects allocated to BANK0
   644  07F5  3020               	movlw	low __pbssBANK0
   645  07F6  0084               	movwf	4
   646  07F7  3000               	movlw	high __pbssBANK0
   647  07F8  0085               	movwf	5
   648  07F9  301E               	movlw	30
   649  07FA  3184  240D  3187   	fcall	clear_ram0
   650  07FD                     end_of_initialization:	
   651                           ;End of C runtime variable initialization code
   652                           
   653  07FD                     __end_of__initialization:
   654  07FD  0020               	movlb	0
   655  07FE  3185  2D76         	ljmp	_main	;jump to C main() function
   656                           
   657                           	psect	bssCOMMON
   658  007A                     __pbssCOMMON:
   659  007A                     _flag_R:
   660  007A                     	ds	2
   661  007C                     _flag_sw3:
   662  007C                     	ds	2
   663                           
   664                           	psect	bssBANK0
   665  0020                     __pbssBANK0:
   666  0020                     _fugou:
   667  0020                     	ds	2
   668  0022                     _code1:
   669  0022                     	ds	2
   670  0024                     _code10:
   671  0024                     	ds	2
   672  0026                     _code100:
   673  0026                     	ds	2
   674  0028                     _code1000:
   675  0028                     	ds	2
   676  002A                     _count:
   677  002A                     	ds	2
   678  002C                     _atai:
   679  002C                     	ds	2
   680  002E                     _atai1:
   681  002E                     	ds	2
   682  0030                     _atai10:
   683  0030                     	ds	2
   684  0032                     _ccw:
   685  0032                     	ds	2
   686  0034                     _cw:
   687  0034                     	ds	2
   688  0036                     _flg:
   689  0036                     	ds	2
   690  0038                     _flag_P:
   691  0038                     	ds	2
   692  003A                     _flag_sw2:
   693  003A                     	ds	2
   694  003C                     _flag_sw1:
   695  003C                     	ds	2
   696                           
   697                           	psect	dataBANK0
   698  0058                     __pdataBANK0:
   699  0058                     _gusu:
   700  0058                     	ds	10
   701  0062                     _mojn:
   702  0062                     	ds	4
   703  0066                     _mojh:
   704  0066                     	ds	4
   705                           
   706                           	psect	dataBANK1
   707  00A0                     __pdataBANK1:
   708  00A0                     _samp:
   709  00A0                     	ds	32
   710  00C0                     _num0:
   711  00C0                     	ds	20
   712  00D4                     _moja:
   713  00D4                     	ds	12
   714  00E0                     _kisu:
   715  00E0                     	ds	10
   716                           
   717                           	psect	dataBANK2
   718  0120                     __pdataBANK2:
   719  0120                     _samf:
   720  0120                     	ds	32
   721  0140                     _moji:
   722  0140                     	ds	20
   723  0154                     _mojf:
   724  0154                     	ds	12
   725                           
   726                           	psect	inittext
   727  0413                     init_ram:
   728  0413  00FE               	movwf	btemp
   729  0414                     initloop:
   730  0414  0012               	moviw fsr0++
   731  0415  001E               	movwi fsr1++
   732  0416  0BFE               	decfsz	btemp,f
   733  0417  2C14               	goto	initloop
   734  0418  3400               	retlw	0
   735                           
   736                           	psect	clrtext
   737  040D                     clear_ram0:	
   738                           ;	Called with FSR0 containing the base address, and
   739                           ;	WREG with the size to clear
   740                           
   741  040D  0064               	clrwdt	;clear the watchdog before getting into this loop
   742  040E                     clrloop0:
   743  040E  0180               	clrf	0	;clear RAM location pointed to by FSR
   744  040F  3101               	addfsr 0,1
   745  0410  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   746  0411  2C0E               	goto	clrloop0	;have we reached the end yet?
   747  0412  3400               	retlw	0	;all done for this memory range, return
   748                           
   749                           	psect	cstackCOMMON
   750  0070                     __pcstackCOMMON:
   751  0070                     ?_portinit:
   752  0070                     ??_portinit:	
   753                           ; 1 bytes @ 0x0
   754                           
   755  0070                     ?_zenoff:	
   756                           ; 1 bytes @ 0x0
   757                           
   758  0070                     ??_zenoff:	
   759                           ; 1 bytes @ 0x0
   760                           
   761  0070                     ?_dynam:	
   762                           ; 1 bytes @ 0x0
   763                           
   764  0070                     ?_tactsw:	
   765                           ; 1 bytes @ 0x0
   766                           
   767  0070                     ??_tactsw:	
   768                           ; 1 bytes @ 0x0
   769                           
   770  0070                     ?_fclr:	
   771                           ; 1 bytes @ 0x0
   772                           
   773  0070                     ?_main:	
   774                           ; 1 bytes @ 0x0
   775                           
   776  0070                     dynam@dig1data:	
   777                           ; 1 bytes @ 0x0
   778                           
   779  0070                     fclr@flg:	
   780                           ; 2 bytes @ 0x0
   781                           
   782                           
   783                           ; 2 bytes @ 0x0
   784  0070                     	ds	2
   785  0072                     ??_fclr:
   786  0072                     dynam@dig2data:	
   787                           ; 1 bytes @ 0x2
   788                           
   789  0072                     tactsw@b:	
   790                           ; 2 bytes @ 0x2
   791                           
   792                           
   793                           ; 2 bytes @ 0x2
   794  0072                     	ds	2
   795  0074                     dynam@smdata:
   796  0074                     tactsw@c:	
   797                           ; 2 bytes @ 0x4
   798                           
   799                           
   800                           ; 2 bytes @ 0x4
   801  0074                     	ds	2
   802  0076                     dynam@tr:
   803  0076                     tactsw@a:	
   804                           ; 2 bytes @ 0x6
   805                           
   806                           
   807                           ; 2 bytes @ 0x6
   808  0076                     	ds	2
   809  0078                     ??_dynam:
   810  0078                     ?_tact:	
   811                           ; 1 bytes @ 0x8
   812                           
   813  0078                     tact@mode:	
   814                           ; 1 bytes @ 0x8
   815                           
   816                           
   817                           ; 2 bytes @ 0x8
   818  0078                     	ds	2
   819  007A                     ??_tact:
   820  007A                     ??_main:	
   821                           ; 1 bytes @ 0xA
   822                           
   823                           
   824                           	psect	cstackBANK0
   825  003E                     __pcstackBANK0:	
   826                           ; 1 bytes @ 0xA
   827                           
   828  003E                     dynam@smd:
   829                           
   830                           ; 2 bytes @ 0x0
   831  003E                     	ds	2
   832  0040                     dynam@tm:
   833                           
   834                           ; 2 bytes @ 0x2
   835  0040                     	ds	2
   836  0042                     dynam@j:
   837                           
   838                           ; 2 bytes @ 0x4
   839  0042                     	ds	2
   840  0044                     dynam@ext:
   841                           
   842                           ; 2 bytes @ 0x6
   843  0044                     	ds	12
   844  0050                     main@k:
   845                           
   846                           ; 2 bytes @ 0x12
   847  0050                     	ds	2
   848  0052                     main@m:
   849                           
   850                           ; 2 bytes @ 0x14
   851  0052                     	ds	2
   852  0054                     main@hidari:
   853                           
   854                           ; 2 bytes @ 0x16
   855  0054                     	ds	2
   856  0056                     main@migi:
   857                           
   858                           ; 2 bytes @ 0x18
   859  0056                     	ds	2
   860                           
   861                           	psect	maintext
   862  0576                     __pmaintext:	
   863 ;;
   864 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   865 ;;
   866 ;; *************** function _main *****************
   867 ;; Defined at:
   868 ;;		line 519 in file "Q5.c"
   869 ;; Parameters:    Size  Location     Type
   870 ;;		None
   871 ;; Auto vars:     Size  Location     Type
   872 ;;  migi            2   24[BANK0 ] unsigned short 
   873 ;;  hidari          2   22[BANK0 ] unsigned short 
   874 ;;  m               2   20[BANK0 ] int 
   875 ;;  k               2   18[BANK0 ] int 
   876 ;;  zyoutai         2    0        int 
   877 ;;  time            2    0        int 
   878 ;;  n               2    0        int 
   879 ;;  j               2    0        int 
   880 ;;  i               2    0        int 
   881 ;; Return value:  Size  Location     Type
   882 ;;                  1    wreg      void 
   883 ;; Registers used:
   884 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   885 ;; Tracked objects:
   886 ;;		On entry : B1F/0
   887 ;;		On exit  : 0/0
   888 ;;		Unchanged: 0/0
   889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   891 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
   892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   893 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
   894 ;;Total ram usage:       18 bytes
   895 ;; Hardware stack levels required when called:    2
   896 ;; This function calls:
   897 ;;		_dynam
   898 ;;		_fclr
   899 ;;		_portinit
   900 ;;		_tact
   901 ;;		_zenoff
   902 ;; This function is called by:
   903 ;;		Startup code after reset
   904 ;; This function uses a non-reentrant model
   905 ;;
   906                           
   907                           
   908                           ;psect for function _main
   909  0576                     _main:
   910  0576                     l2244:	
   911                           ;incstack = 0
   912                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   913                           
   914                           
   915                           ;Q5.c: 522:     OSCCON=0x7A;
   916  0576  307A               	movlw	122
   917  0577  0021               	movlb	1	; select bank1
   918  0578  0099               	movwf	25	;volatile
   919  0579                     l2246:
   920                           
   921                           ;Q5.c: 524:     portinit();
   922  0579  3184  2434  3185   	fcall	_portinit
   923                           
   924                           ;Q5.c: 526:     zenoff();
   925  057C  3184  2419  3185   	fcall	_zenoff
   926  057F                     l2248:
   927  057F                     l2250:
   928  057F                     l2252:
   929  057F  0020               	movlb	0	; select bank0
   930  0580  01D0               	clrf	main@k
   931  0581  01D1               	clrf	main@k+1
   932  0582                     l2254:
   933  0582  01D2               	clrf	main@m
   934  0583  01D3               	clrf	main@m+1
   935  0584                     l2256:
   936  0584                     l288:	
   937                           ;Q5.c: 531:     while((RA0!=1)||(RA1!=1)||(RA2!=1));
   938                           
   939  0584  1C0C               	btfss	12,0	;volatile
   940  0585  2D87               	goto	u1831
   941  0586  2D88               	goto	u1830
   942  0587                     u1831:
   943  0587  2D84               	goto	l288
   944  0588                     u1830:
   945  0588                     l2258:
   946  0588  1C8C               	btfss	12,1	;volatile
   947  0589  2D8B               	goto	u1841
   948  058A  2D8C               	goto	u1840
   949  058B                     u1841:
   950  058B  2D84               	goto	l288
   951  058C                     u1840:
   952  058C                     l2260:
   953  058C  1D0C               	btfss	12,2	;volatile
   954  058D  2D8F               	goto	u1851
   955  058E  2D90               	goto	u1850
   956  058F                     u1851:
   957  058F  2D84               	goto	l288
   958  0590                     u1850:
   959  0590                     l290:
   960                           
   961                           ;Q5.c: 534:     RC0=RC2=RC1=1;
   962  0590  148E               	bsf	14,1	;volatile
   963  0591  188E               	btfsc	14,1	;volatile
   964  0592  2D94               	goto	u1861
   965  0593  2D97               	goto	u1860
   966  0594                     u1861:
   967  0594  0020               	movlb	0	; select bank0
   968  0595  150E               	bsf	14,2	;volatile
   969  0596  2D99               	goto	u1874
   970  0597                     u1860:
   971  0597  0020               	movlb	0	; select bank0
   972  0598  110E               	bcf	14,2	;volatile
   973  0599                     u1874:
   974  0599  190E               	btfsc	14,2	;volatile
   975  059A  2D9C               	goto	u1871
   976  059B  2D9F               	goto	u1870
   977  059C                     u1871:
   978  059C  0020               	movlb	0	; select bank0
   979  059D  140E               	bsf	14,0	;volatile
   980  059E  2DA1               	goto	u1884
   981  059F                     u1870:
   982  059F  0020               	movlb	0	; select bank0
   983  05A0  100E               	bcf	14,0	;volatile
   984  05A1                     u1884:
   985  05A1                     l2262:
   986                           
   987                           ;Q5.c: 537:     fclr(2);
   988  05A1  3002               	movlw	2
   989  05A2  00F0               	movwf	fclr@flg
   990  05A3  3000               	movlw	0
   991  05A4  00F1               	movwf	fclr@flg+1
   992  05A5  3184  2447  3185   	fcall	_fclr
   993  05A8                     l2264:
   994  05A8                     l2266:
   995  05A8                     l2268:
   996                           
   997                           ;Q5.c: 551:     unsigned short hidari = 0x40;
   998  05A8  3040               	movlw	64
   999  05A9  0020               	movlb	0	; select bank0
  1000  05AA  00D4               	movwf	main@hidari
  1001  05AB  3000               	movlw	0
  1002  05AC  00D5               	movwf	main@hidari+1
  1003  05AD                     l2270:
  1004                           
  1005                           ;Q5.c: 552:     unsigned short migi = 0x40;
  1006  05AD  3040               	movlw	64
  1007  05AE  00D6               	movwf	main@migi
  1008  05AF  3000               	movlw	0
  1009  05B0  00D7               	movwf	main@migi+1
  1010  05B1                     l2272:
  1011                           
  1012                           ;Q5.c: 556:         if(RA0 == 0 && RA1 == 1){
  1013  05B1  0020               	movlb	0	; select bank0
  1014  05B2  180C               	btfsc	12,0	;volatile
  1015  05B3  2DB5               	goto	u1891
  1016  05B4  2DB6               	goto	u1890
  1017  05B5                     u1891:
  1018  05B5  2DFD               	goto	l2290
  1019  05B6                     u1890:
  1020  05B6                     l2274:
  1021  05B6  1C8C               	btfss	12,1	;volatile
  1022  05B7  2DB9               	goto	u1901
  1023  05B8  2DBA               	goto	u1900
  1024  05B9                     u1901:
  1025  05B9  2DFD               	goto	l2290
  1026  05BA                     u1900:
  1027  05BA                     l2276:
  1028                           
  1029                           ;Q5.c: 557:             dynam(hidari,migi,0,0);
  1030  05BA  0855               	movf	main@hidari+1,w
  1031  05BB  00F1               	movwf	dynam@dig1data+1
  1032  05BC  0854               	movf	main@hidari,w
  1033  05BD  00F0               	movwf	dynam@dig1data
  1034  05BE  0857               	movf	main@migi+1,w
  1035  05BF  00F3               	movwf	dynam@dig2data+1
  1036  05C0  0856               	movf	main@migi,w
  1037  05C1  00F2               	movwf	dynam@dig2data
  1038  05C2  3000               	movlw	0
  1039  05C3  00F4               	movwf	dynam@smdata
  1040  05C4  00F5               	movwf	dynam@smdata+1
  1041  05C5  3000               	movlw	0
  1042  05C6  00F6               	movwf	dynam@tr
  1043  05C7  00F7               	movwf	dynam@tr+1
  1044  05C8  3186  2663  3185   	fcall	_dynam
  1045                           
  1046                           ;Q5.c: 558:             tact(2);
  1047  05CB  3002               	movlw	2
  1048  05CC  00F8               	movwf	tact@mode
  1049  05CD  3000               	movlw	0
  1050  05CE  00F9               	movwf	tact@mode+1
  1051  05CF  3184  24E3  3185   	fcall	_tact
  1052  05D2                     l2278:
  1053                           
  1054                           ;Q5.c: 559:             if(((flag_sw3==0)&&(flag_P==1))){
  1055  05D2  087C               	movf	_flag_sw3,w
  1056  05D3  047D               	iorwf	_flag_sw3+1,w
  1057  05D4  1D03               	btfss	3,2
  1058  05D5  2DD7               	goto	u1911
  1059  05D6  2DD8               	goto	u1910
  1060  05D7                     u1911:
  1061  05D7  2DFD               	goto	l2290
  1062  05D8                     u1910:
  1063  05D8                     l2280:
  1064  05D8  0020               	movlb	0	; select bank0
  1065  05D9  0338               	decf	_flag_P,w
  1066  05DA  0439               	iorwf	_flag_P+1,w
  1067  05DB  1D03               	btfss	3,2
  1068  05DC  2DDE               	goto	u1921
  1069  05DD  2DDF               	goto	u1920
  1070  05DE                     u1921:
  1071  05DE  2DFD               	goto	l2290
  1072  05DF                     u1920:
  1073  05DF                     l2282:
  1074                           
  1075                           ;Q5.c: 561:                 if(k == 0){
  1076  05DF  0850               	movf	main@k,w
  1077  05E0  0451               	iorwf	main@k+1,w
  1078  05E1  1D03               	btfss	3,2
  1079  05E2  2DE4               	goto	u1931
  1080  05E3  2DE5               	goto	u1930
  1081  05E4                     u1931:
  1082  05E4  2DE9               	goto	l295
  1083  05E5                     u1930:
  1084  05E5                     l2284:
  1085                           
  1086                           ;Q5.c: 562:                     k = 10;
  1087  05E5  300A               	movlw	10
  1088  05E6  00D0               	movwf	main@k
  1089  05E7  3000               	movlw	0
  1090  05E8  00D1               	movwf	main@k+1
  1091  05E9                     l295:	
  1092                           ;Q5.c: 563:                 }
  1093                           
  1094                           
  1095                           ;Q5.c: 565:                 k--;
  1096  05E9  30FF               	movlw	255
  1097  05EA  07D0               	addwf	main@k,f
  1098  05EB  30FF               	movlw	255
  1099  05EC  3DD1               	addwfc	main@k+1,f
  1100  05ED                     l2286:
  1101                           
  1102                           ;Q5.c: 567:                 fclr(2);
  1103  05ED  3002               	movlw	2
  1104  05EE  00F0               	movwf	fclr@flg
  1105  05EF  3000               	movlw	0
  1106  05F0  00F1               	movwf	fclr@flg+1
  1107  05F1  3184  2447  3185   	fcall	_fclr
  1108  05F4                     l2288:
  1109                           
  1110                           ;Q5.c: 569:                 hidari = num0[k];
  1111  05F4  0020               	movlb	0	; select bank0
  1112  05F5  3550               	lslf	main@k,w
  1113  05F6  3EC0               	addlw	(low (_num0| 0))& (0+255)
  1114  05F7  0086               	movwf	6
  1115  05F8  0187               	clrf	7
  1116  05F9  3F40               	moviw [0]fsr1
  1117  05FA  00D4               	movwf	main@hidari
  1118  05FB  3F41               	moviw [1]fsr1
  1119  05FC  00D5               	movwf	main@hidari+1
  1120  05FD                     l2290:
  1121                           
  1122                           ;Q5.c: 574:         if(RA0 == 1 && RA1 == 1 && hidari != 0x40){
  1123  05FD  0020               	movlb	0	; select bank0
  1124  05FE  1C0C               	btfss	12,0	;volatile
  1125  05FF  2E01               	goto	u1941
  1126  0600  2E02               	goto	u1940
  1127  0601                     u1941:
  1128  0601  2DB1               	goto	l2272
  1129  0602                     u1940:
  1130  0602                     l2292:
  1131  0602  1C8C               	btfss	12,1	;volatile
  1132  0603  2E05               	goto	u1951
  1133  0604  2E06               	goto	u1950
  1134  0605                     u1951:
  1135  0605  2DB1               	goto	l2272
  1136  0606                     u1950:
  1137  0606                     l2294:
  1138  0606  3040               	movlw	64
  1139  0607  0654               	xorwf	main@hidari,w
  1140  0608  0455               	iorwf	main@hidari+1,w
  1141  0609  1903               	btfsc	3,2
  1142  060A  2E0C               	goto	u1961
  1143  060B  2E0D               	goto	u1960
  1144  060C                     u1961:
  1145  060C  2DB1               	goto	l2272
  1146  060D                     u1960:
  1147  060D                     l2296:
  1148                           
  1149                           ;Q5.c: 576:             if(migi == 0x40){
  1150  060D  3040               	movlw	64
  1151  060E  0656               	xorwf	main@migi,w
  1152  060F  0457               	iorwf	main@migi+1,w
  1153  0610  1D03               	btfss	3,2
  1154  0611  2E13               	goto	u1971
  1155  0612  2E14               	goto	u1970
  1156  0613                     u1971:
  1157  0613  2E1C               	goto	l2300
  1158  0614                     u1970:
  1159  0614                     l2298:
  1160                           
  1161                           ;Q5.c: 577:                 migi = num0[0];
  1162  0614  0021               	movlb	1	; select bank1
  1163  0615  0841               	movf	(_num0+1)^(0+128),w
  1164  0616  0020               	movlb	0	; select bank0
  1165  0617  00D7               	movwf	main@migi+1
  1166  0618  0021               	movlb	1	; select bank1
  1167  0619  0840               	movf	_num0^(0+128),w
  1168  061A  0020               	movlb	0	; select bank0
  1169  061B  00D6               	movwf	main@migi
  1170  061C                     l2300:
  1171                           
  1172                           ;Q5.c: 580:             dynam(hidari,migi,0,0);
  1173  061C  0855               	movf	main@hidari+1,w
  1174  061D  00F1               	movwf	dynam@dig1data+1
  1175  061E  0854               	movf	main@hidari,w
  1176  061F  00F0               	movwf	dynam@dig1data
  1177  0620  0857               	movf	main@migi+1,w
  1178  0621  00F3               	movwf	dynam@dig2data+1
  1179  0622  0856               	movf	main@migi,w
  1180  0623  00F2               	movwf	dynam@dig2data
  1181  0624  3000               	movlw	0
  1182  0625  00F4               	movwf	dynam@smdata
  1183  0626  00F5               	movwf	dynam@smdata+1
  1184  0627  3000               	movlw	0
  1185  0628  00F6               	movwf	dynam@tr
  1186  0629  00F7               	movwf	dynam@tr+1
  1187  062A  3186  2663  3185   	fcall	_dynam
  1188  062D                     l2302:
  1189                           
  1190                           ;Q5.c: 581:             tact(2);
  1191  062D  3002               	movlw	2
  1192  062E  00F8               	movwf	tact@mode
  1193  062F  3000               	movlw	0
  1194  0630  00F9               	movwf	tact@mode+1
  1195  0631  3184  24E3  3185   	fcall	_tact
  1196  0634                     l2304:
  1197                           
  1198                           ;Q5.c: 582:             if(((flag_sw3==0)&&(flag_P==1))){
  1199  0634  087C               	movf	_flag_sw3,w
  1200  0635  047D               	iorwf	_flag_sw3+1,w
  1201  0636  1D03               	btfss	3,2
  1202  0637  2E39               	goto	u1981
  1203  0638  2E3A               	goto	u1980
  1204  0639                     u1981:
  1205  0639  2DB1               	goto	l2272
  1206  063A                     u1980:
  1207  063A                     l2306:
  1208  063A  0020               	movlb	0	; select bank0
  1209  063B  0338               	decf	_flag_P,w
  1210  063C  0439               	iorwf	_flag_P+1,w
  1211  063D  1D03               	btfss	3,2
  1212  063E  2E40               	goto	u1991
  1213  063F  2E41               	goto	u1990
  1214  0640                     u1991:
  1215  0640  2DB1               	goto	l2272
  1216  0641                     u1990:
  1217  0641                     l2308:
  1218                           
  1219                           ;Q5.c: 584:                 if(m == 9){
  1220  0641  3009               	movlw	9
  1221  0642  0652               	xorwf	main@m,w
  1222  0643  0453               	iorwf	main@m+1,w
  1223  0644  1D03               	btfss	3,2
  1224  0645  2E47               	goto	u2001
  1225  0646  2E48               	goto	u2000
  1226  0647                     u2001:
  1227  0647  2E4C               	goto	l299
  1228  0648                     u2000:
  1229  0648                     l2310:
  1230                           
  1231                           ;Q5.c: 585:                     m = -1;
  1232  0648  30FF               	movlw	255
  1233  0649  00D2               	movwf	main@m
  1234  064A  30FF               	movlw	255
  1235  064B  00D3               	movwf	main@m+1
  1236  064C                     l299:	
  1237                           ;Q5.c: 586:                 }
  1238                           
  1239                           
  1240                           ;Q5.c: 588:                 m++;
  1241  064C  3001               	movlw	1
  1242  064D  07D2               	addwf	main@m,f
  1243  064E  3000               	movlw	0
  1244  064F  3DD3               	addwfc	main@m+1,f
  1245  0650                     l2312:
  1246                           
  1247                           ;Q5.c: 590:                 fclr(2);
  1248  0650  3002               	movlw	2
  1249  0651  00F0               	movwf	fclr@flg
  1250  0652  3000               	movlw	0
  1251  0653  00F1               	movwf	fclr@flg+1
  1252  0654  3184  2447  3185   	fcall	_fclr
  1253  0657                     l2314:
  1254                           
  1255                           ;Q5.c: 592:                 migi = num0[m];
  1256  0657  0020               	movlb	0	; select bank0
  1257  0658  3552               	lslf	main@m,w
  1258  0659  3EC0               	addlw	(low (_num0| 0))& (0+255)
  1259  065A  0086               	movwf	6
  1260  065B  0187               	clrf	7
  1261  065C  3F40               	moviw [0]fsr1
  1262  065D  00D6               	movwf	main@migi
  1263  065E  3F41               	moviw [1]fsr1
  1264  065F  00D7               	movwf	main@migi+1
  1265  0660  2DB1               	goto	l2272
  1266  0661  3180  2802         	ljmp	start
  1267  0663                     __end_of_main:
  1268                           
  1269                           	psect	text1
  1270  0419                     __ptext1:	
  1271 ;; *************** function _zenoff *****************
  1272 ;; Defined at:
  1273 ;;		line 195 in file "Q5.c"
  1274 ;; Parameters:    Size  Location     Type
  1275 ;;		None
  1276 ;; Auto vars:     Size  Location     Type
  1277 ;;		None
  1278 ;; Return value:  Size  Location     Type
  1279 ;;                  1    wreg      void 
  1280 ;; Registers used:
  1281 ;;		status,2
  1282 ;; Tracked objects:
  1283 ;;		On entry : 0/0
  1284 ;;		On exit  : 0/0
  1285 ;;		Unchanged: 0/0
  1286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1291 ;;Total ram usage:        0 bytes
  1292 ;; Hardware stack levels used:    1
  1293 ;; This function calls:
  1294 ;;		Nothing
  1295 ;; This function is called by:
  1296 ;;		_main
  1297 ;; This function uses a non-reentrant model
  1298 ;;
  1299                           
  1300                           
  1301                           ;psect for function _zenoff
  1302  0419                     _zenoff:
  1303  0419                     l1716:	
  1304                           ;incstack = 0
  1305                           ; Regs used in _zenoff: [status,2]
  1306                           
  1307                           
  1308                           ;Q5.c: 197:     RC0=1;
  1309  0419  0020               	movlb	0	; select bank0
  1310  041A  140E               	bsf	14,0	;volatile
  1311                           
  1312                           ;Q5.c: 198:     RC1=1;
  1313  041B  148E               	bsf	14,1	;volatile
  1314                           
  1315                           ;Q5.c: 199:     RC2=1;
  1316  041C  150E               	bsf	14,2	;volatile
  1317  041D                     l1718:
  1318                           
  1319                           ;Q5.c: 200:     PORTB=0x00;
  1320  041D  018D               	clrf	13	;volatile
  1321  041E                     l1720:
  1322                           
  1323                           ;Q5.c: 201:     RC7=0;RC7=1;RC7=0;
  1324  041E  138E               	bcf	14,7	;volatile
  1325  041F                     l1722:
  1326  041F  178E               	bsf	14,7	;volatile
  1327  0420                     l1724:
  1328  0420  138E               	bcf	14,7	;volatile
  1329  0421                     l108:
  1330  0421  0008               	return
  1331  0422                     __end_of_zenoff:
  1332                           
  1333                           	psect	text2
  1334  04E3                     __ptext2:	
  1335 ;; *************** function _tact *****************
  1336 ;; Defined at:
  1337 ;;		line 346 in file "Q5.c"
  1338 ;; Parameters:    Size  Location     Type
  1339 ;;  mode            2    8[COMMON] unsigned short 
  1340 ;; Auto vars:     Size  Location     Type
  1341 ;;		None
  1342 ;; Return value:  Size  Location     Type
  1343 ;;                  1    wreg      void 
  1344 ;; Registers used:
  1345 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1346 ;; Tracked objects:
  1347 ;;		On entry : 0/0
  1348 ;;		On exit  : 0/0
  1349 ;;		Unchanged: 0/0
  1350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1351 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1354 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1355 ;;Total ram usage:        2 bytes
  1356 ;; Hardware stack levels used:    1
  1357 ;; Hardware stack levels required when called:    1
  1358 ;; This function calls:
  1359 ;;		_tactsw
  1360 ;; This function is called by:
  1361 ;;		_main
  1362 ;;		_kaisu
  1363 ;;		_waitSEGStop
  1364 ;;		_motorStop
  1365 ;; This function uses a non-reentrant model
  1366 ;;
  1367                           
  1368                           
  1369                           ;psect for function _tact
  1370  04E3                     _tact:
  1371  04E3                     l1882:	
  1372                           ;incstack = 0
  1373                           ; Regs used in _tact: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1374                           
  1375                           
  1376                           ;Q5.c: 346: void tact(unsigned short mode);Q5.c: 347: {;Q5.c: 348:     switch(mode){
  1377  04E3  2D1B               	goto	l1910
  1378  04E4                     l1884:
  1379                           
  1380                           ;Q5.c: 350:                 tactsw();
  1381  04E4  3184  2466  3184   	fcall	_tactsw
  1382  04E7                     l1886:
  1383                           
  1384                           ;Q5.c: 351:                 if(flag_sw3==0)flag_R=1;
  1385  04E7  087C               	movf	_flag_sw3,w
  1386  04E8  047D               	iorwf	_flag_sw3+1,w
  1387  04E9  1D03               	btfss	3,2
  1388  04EA  2CEC               	goto	u1291
  1389  04EB  2CED               	goto	u1290
  1390  04EC                     u1291:
  1391  04EC  2D2B               	goto	l208
  1392  04ED                     u1290:
  1393  04ED                     l1888:
  1394  04ED  3001               	movlw	1
  1395  04EE  00FA               	movwf	_flag_R
  1396  04EF  3000               	movlw	0
  1397  04F0  00FB               	movwf	_flag_R+1
  1398  04F1  2D2B               	goto	l208
  1399  04F2                     l1890:
  1400                           
  1401                           ;Q5.c: 354:                 tactsw();
  1402  04F2  3184  2466  3184   	fcall	_tactsw
  1403  04F5                     l1892:
  1404                           
  1405                           ;Q5.c: 355:                 if(flag_sw3==1)flag_P=1;
  1406  04F5  037C               	decf	_flag_sw3,w
  1407  04F6  047D               	iorwf	_flag_sw3+1,w
  1408  04F7  1D03               	btfss	3,2
  1409  04F8  2CFA               	goto	u1301
  1410  04F9  2CFB               	goto	u1300
  1411  04FA                     u1301:
  1412  04FA  2D2B               	goto	l208
  1413  04FB                     u1300:
  1414  04FB                     l1894:
  1415  04FB  3001               	movlw	1
  1416  04FC  0020               	movlb	0	; select bank0
  1417  04FD  00B8               	movwf	_flag_P
  1418  04FE  3000               	movlw	0
  1419  04FF  00B9               	movwf	_flag_P+1
  1420  0500  2D2B               	goto	l208
  1421  0501                     l1896:
  1422                           
  1423                           ;Q5.c: 358:                 tactsw();
  1424  0501  3184  2466  3184   	fcall	_tactsw
  1425  0504                     l1898:
  1426                           
  1427                           ;Q5.c: 359:                 if(flag_sw3==0)flag_R=1;
  1428  0504  087C               	movf	_flag_sw3,w
  1429  0505  047D               	iorwf	_flag_sw3+1,w
  1430  0506  1D03               	btfss	3,2
  1431  0507  2D09               	goto	u1311
  1432  0508  2D0A               	goto	u1310
  1433  0509                     u1311:
  1434  0509  2D0E               	goto	l1902
  1435  050A                     u1310:
  1436  050A                     l1900:
  1437  050A  3001               	movlw	1
  1438  050B  00FA               	movwf	_flag_R
  1439  050C  3000               	movlw	0
  1440  050D  00FB               	movwf	_flag_R+1
  1441  050E                     l1902:
  1442                           
  1443                           ;Q5.c: 360:                 if((flag_sw3==1)&&(flag_R==1))flag_P=1;
  1444  050E  037C               	decf	_flag_sw3,w
  1445  050F  047D               	iorwf	_flag_sw3+1,w
  1446  0510  1D03               	btfss	3,2
  1447  0511  2D13               	goto	u1321
  1448  0512  2D14               	goto	u1320
  1449  0513                     u1321:
  1450  0513  2D2B               	goto	l208
  1451  0514                     u1320:
  1452  0514                     l1904:
  1453  0514  037A               	decf	_flag_R,w
  1454  0515  047B               	iorwf	_flag_R+1,w
  1455  0516  1D03               	btfss	3,2
  1456  0517  2D19               	goto	u1331
  1457  0518  2D1A               	goto	u1330
  1458  0519                     u1331:
  1459  0519  2D2B               	goto	l208
  1460  051A                     u1330:
  1461  051A  2CFB               	goto	l1894
  1462  051B                     l1910:
  1463                           
  1464                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1465                           ; Switch size 1, requested type "simple"
  1466                           ; Number of cases is 1, Range of values is 0 to 0
  1467                           ; switch strategies available:
  1468                           ; Name         Instructions Cycles
  1469                           ; simple_byte            4     3 (average)
  1470                           ; direct_byte            8     6 (fixed)
  1471                           ; jumptable            260     6 (fixed)
  1472                           ;	Chosen strategy is simple_byte
  1473  051B  0879               	movf	tact@mode+1,w
  1474  051C  3A00               	xorlw	0	; case 0
  1475  051D  1903               	skipnz
  1476  051E  2D20               	goto	l2472
  1477  051F  2D2B               	goto	l208
  1478  0520                     l2472:
  1479                           
  1480                           ; Switch size 1, requested type "simple"
  1481                           ; Number of cases is 3, Range of values is 0 to 2
  1482                           ; switch strategies available:
  1483                           ; Name         Instructions Cycles
  1484                           ; simple_byte           10     6 (average)
  1485                           ; direct_byte           12     6 (fixed)
  1486                           ; jumptable            260     6 (fixed)
  1487                           ;	Chosen strategy is simple_byte
  1488  0520  0878               	movf	tact@mode,w
  1489  0521  3A00               	xorlw	0	; case 0
  1490  0522  1903               	skipnz
  1491  0523  2CE4               	goto	l1884
  1492  0524  3A01               	xorlw	1	; case 1
  1493  0525  1903               	skipnz
  1494  0526  2CF2               	goto	l1890
  1495  0527  3A03               	xorlw	3	; case 2
  1496  0528  1903               	skipnz
  1497  0529  2D01               	goto	l1896
  1498  052A  2D2B               	goto	l208
  1499  052B                     l208:
  1500  052B  0008               	return
  1501  052C                     __end_of_tact:
  1502                           
  1503                           	psect	text3
  1504  0466                     __ptext3:	
  1505 ;; *************** function _tactsw *****************
  1506 ;; Defined at:
  1507 ;;		line 331 in file "Q5.c"
  1508 ;; Parameters:    Size  Location     Type
  1509 ;;		None
  1510 ;; Auto vars:     Size  Location     Type
  1511 ;;  a               2    6[COMMON] unsigned short 
  1512 ;;  c               2    4[COMMON] unsigned short 
  1513 ;;  b               2    2[COMMON] unsigned short 
  1514 ;; Return value:  Size  Location     Type
  1515 ;;                  1    wreg      void 
  1516 ;; Registers used:
  1517 ;;		wreg, status,2, status,0
  1518 ;; Tracked objects:
  1519 ;;		On entry : 0/0
  1520 ;;		On exit  : 0/0
  1521 ;;		Unchanged: 0/0
  1522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1524 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1525 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1526 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1527 ;;Total ram usage:        8 bytes
  1528 ;; Hardware stack levels used:    1
  1529 ;; This function calls:
  1530 ;;		Nothing
  1531 ;; This function is called by:
  1532 ;;		_tact
  1533 ;; This function uses a non-reentrant model
  1534 ;;
  1535                           
  1536                           
  1537                           ;psect for function _tactsw
  1538  0466                     _tactsw:
  1539  0466                     l1668:	
  1540                           ;incstack = 0
  1541                           ; Regs used in _tactsw: [wreg+status,2+status,0]
  1542                           
  1543                           
  1544                           ;Q5.c: 333:     unsigned short a,b,c;;Q5.c: 334:     b=c=0;
  1545  0466  01F4               	clrf	tactsw@c
  1546  0467  01F5               	clrf	tactsw@c+1
  1547  0468  01F2               	clrf	tactsw@b
  1548  0469  01F3               	clrf	tactsw@b+1
  1549  046A                     l1670:
  1550                           
  1551                           ;Q5.c: 336:             a=RA2;
  1552  046A  1003               	clrc
  1553  046B  0020               	movlb	0	; select bank0
  1554  046C  190C               	btfsc	12,2	;volatile
  1555  046D  1403               	setc
  1556  046E  3000               	movlw	0
  1557  046F  3D09               	addwfc	9,w
  1558  0470  00F0               	movwf	??_tactsw
  1559  0471  01F1               	clrf	??_tactsw+1
  1560  0472  0870               	movf	??_tactsw,w
  1561  0473  00F6               	movwf	tactsw@a
  1562  0474  0871               	movf	??_tactsw+1,w
  1563  0475  00F7               	movwf	tactsw@a+1
  1564  0476                     l1672:
  1565                           
  1566                           ;Q5.c: 337:             if(b==a)++c;
  1567  0476  0877               	movf	tactsw@a+1,w
  1568  0477  0673               	xorwf	tactsw@b+1,w
  1569  0478  1D03               	skipz
  1570  0479  2C7C               	goto	u1035
  1571  047A  0876               	movf	tactsw@a,w
  1572  047B  0672               	xorwf	tactsw@b,w
  1573  047C                     u1035:
  1574  047C  1D03               	skipz
  1575  047D  2C7F               	goto	u1031
  1576  047E  2C80               	goto	u1030
  1577  047F                     u1031:
  1578  047F  2C85               	goto	l1676
  1579  0480                     u1030:
  1580  0480                     l1674:
  1581  0480  3001               	movlw	1
  1582  0481  07F4               	addwf	tactsw@c,f
  1583  0482  3000               	movlw	0
  1584  0483  3DF5               	addwfc	tactsw@c+1,f
  1585  0484  2C87               	goto	l1678
  1586  0485                     l1676:
  1587  0485  01F4               	clrf	tactsw@c
  1588  0486  01F5               	clrf	tactsw@c+1
  1589  0487                     l1678:
  1590                           
  1591                           ;Q5.c: 339:             if(c>10){flag_sw3=(~a)&0x01;return;}
  1592  0487  3000               	movlw	0
  1593  0488  0275               	subwf	tactsw@c+1,w
  1594  0489  300B               	movlw	11
  1595  048A  1903               	skipnz
  1596  048B  0274               	subwf	tactsw@c,w
  1597  048C  1C03               	skipc
  1598  048D  2C8F               	goto	u1041
  1599  048E  2C90               	goto	u1040
  1600  048F                     u1041:
  1601  048F  2C9D               	goto	l1684
  1602  0490                     u1040:
  1603  0490                     l1680:
  1604  0490  0877               	movf	tactsw@a+1,w
  1605  0491  00F1               	movwf	??_tactsw+1
  1606  0492  0876               	movf	tactsw@a,w
  1607  0493  00F0               	movwf	??_tactsw
  1608  0494  09F0               	comf	??_tactsw,f
  1609  0495  09F1               	comf	??_tactsw+1,f
  1610  0496  3001               	movlw	1
  1611  0497  0570               	andwf	??_tactsw,w
  1612  0498  00FC               	movwf	_flag_sw3
  1613  0499  3000               	movlw	0
  1614  049A  0571               	andwf	??_tactsw+1,w
  1615  049B  00FD               	movwf	_flag_sw3+1
  1616  049C  2CA2               	goto	l193
  1617  049D                     l1684:
  1618                           
  1619                           ;Q5.c: 340:             b=a;
  1620  049D  0877               	movf	tactsw@a+1,w
  1621  049E  00F3               	movwf	tactsw@b+1
  1622  049F  0876               	movf	tactsw@a,w
  1623  04A0  00F2               	movwf	tactsw@b
  1624  04A1  2C6A               	goto	l1670
  1625  04A2                     l193:
  1626  04A2  0008               	return
  1627  04A3                     __end_of_tactsw:
  1628                           
  1629                           	psect	text4
  1630  0434                     __ptext4:	
  1631 ;; *************** function _portinit *****************
  1632 ;; Defined at:
  1633 ;;		line 160 in file "Q5.c"
  1634 ;; Parameters:    Size  Location     Type
  1635 ;;		None
  1636 ;; Auto vars:     Size  Location     Type
  1637 ;;		None
  1638 ;; Return value:  Size  Location     Type
  1639 ;;                  1    wreg      void 
  1640 ;; Registers used:
  1641 ;;		wreg, status,2
  1642 ;; Tracked objects:
  1643 ;;		On entry : 0/0
  1644 ;;		On exit  : 0/0
  1645 ;;		Unchanged: 0/0
  1646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1651 ;;Total ram usage:        0 bytes
  1652 ;; Hardware stack levels used:    1
  1653 ;; This function calls:
  1654 ;;		Nothing
  1655 ;; This function is called by:
  1656 ;;		_main
  1657 ;; This function uses a non-reentrant model
  1658 ;;
  1659                           
  1660                           
  1661                           ;psect for function _portinit
  1662  0434                     _portinit:
  1663  0434                     l1686:	
  1664                           ;incstack = 0
  1665                           ; Regs used in _portinit: [wreg+status,2]
  1666                           
  1667                           
  1668                           ;Q5.c: 163:     ANSELA=0x00;
  1669  0434  0023               	movlb	3	; select bank3
  1670  0435  018C               	clrf	12	;volatile
  1671                           
  1672                           ;Q5.c: 164:     ANSELB=0x00;
  1673  0436  018D               	clrf	13	;volatile
  1674  0437                     l1688:
  1675                           
  1676                           ;Q5.c: 166:     PORTA=0x07;
  1677  0437  3007               	movlw	7
  1678  0438  0020               	movlb	0	; select bank0
  1679  0439  008C               	movwf	12	;volatile
  1680  043A                     l1690:
  1681                           
  1682                           ;Q5.c: 167:     TRISA=0x07;
  1683  043A  3007               	movlw	7
  1684  043B  0021               	movlb	1	; select bank1
  1685  043C  008C               	movwf	12	;volatile
  1686                           
  1687                           ;Q5.c: 168:     PORTB=0x00;
  1688  043D  0020               	movlb	0	; select bank0
  1689  043E  018D               	clrf	13	;volatile
  1690                           
  1691                           ;Q5.c: 169:     TRISB=0x00;
  1692  043F  0021               	movlb	1	; select bank1
  1693  0440  018D               	clrf	13	;volatile
  1694  0441                     l1692:
  1695                           
  1696                           ;Q5.c: 170:     PORTC=0x07;
  1697  0441  3007               	movlw	7
  1698  0442  0020               	movlb	0	; select bank0
  1699  0443  008E               	movwf	14	;volatile
  1700  0444                     l1694:
  1701                           
  1702                           ;Q5.c: 171:     TRISC=0x00;
  1703  0444  0021               	movlb	1	; select bank1
  1704  0445  018E               	clrf	14	;volatile
  1705  0446                     l95:
  1706  0446  0008               	return
  1707  0447                     __end_of_portinit:
  1708                           
  1709                           	psect	text5
  1710  0447                     __ptext5:	
  1711 ;; *************** function _fclr *****************
  1712 ;; Defined at:
  1713 ;;		line 369 in file "Q5.c"
  1714 ;; Parameters:    Size  Location     Type
  1715 ;;  flg             2    0[COMMON] unsigned short 
  1716 ;; Auto vars:     Size  Location     Type
  1717 ;;		None
  1718 ;; Return value:  Size  Location     Type
  1719 ;;                  1    wreg      void 
  1720 ;; Registers used:
  1721 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1722 ;; Tracked objects:
  1723 ;;		On entry : 0/0
  1724 ;;		On exit  : 0/0
  1725 ;;		Unchanged: 0/0
  1726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1727 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1730 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1731 ;;Total ram usage:        2 bytes
  1732 ;; Hardware stack levels used:    1
  1733 ;; This function calls:
  1734 ;;		Nothing
  1735 ;; This function is called by:
  1736 ;;		_main
  1737 ;;		_kaisu
  1738 ;; This function uses a non-reentrant model
  1739 ;;
  1740                           
  1741                           
  1742                           ;psect for function _fclr
  1743  0447                     _fclr:
  1744  0447                     l1916:	
  1745                           ;incstack = 0
  1746                           ; Regs used in _fclr: [wreg-fsr0h+status,2+status,0]
  1747                           
  1748                           
  1749                           ;Q5.c: 369: void fclr(unsigned short flg);Q5.c: 370: {;Q5.c: 371:     switch(flg){
  1750  0447  2C55               	goto	l1926
  1751  0448                     l1918:
  1752                           
  1753                           ;Q5.c: 373:                     flag_R=0;
  1754  0448  01FA               	clrf	_flag_R
  1755  0449  01FB               	clrf	_flag_R+1
  1756                           
  1757                           ;Q5.c: 374:                     break;
  1758  044A  2C65               	goto	l217
  1759  044B                     l1920:
  1760                           
  1761                           ;Q5.c: 376:                     flag_P=0;
  1762  044B  0020               	movlb	0	; select bank0
  1763  044C  01B8               	clrf	_flag_P
  1764  044D  01B9               	clrf	_flag_P+1
  1765                           
  1766                           ;Q5.c: 377:                     break;
  1767  044E  2C65               	goto	l217
  1768  044F                     l1922:
  1769                           
  1770                           ;Q5.c: 379:                     flag_P=flag_R=0;
  1771  044F  01FA               	clrf	_flag_R
  1772  0450  01FB               	clrf	_flag_R+1
  1773  0451  0020               	movlb	0	; select bank0
  1774  0452  01B8               	clrf	_flag_P
  1775  0453  01B9               	clrf	_flag_P+1
  1776                           
  1777                           ;Q5.c: 380:                     break;
  1778  0454  2C65               	goto	l217
  1779  0455                     l1926:
  1780                           
  1781                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1782                           ; Switch size 1, requested type "simple"
  1783                           ; Number of cases is 1, Range of values is 0 to 0
  1784                           ; switch strategies available:
  1785                           ; Name         Instructions Cycles
  1786                           ; simple_byte            4     3 (average)
  1787                           ; direct_byte            8     6 (fixed)
  1788                           ; jumptable            260     6 (fixed)
  1789                           ;	Chosen strategy is simple_byte
  1790  0455  0871               	movf	fclr@flg+1,w
  1791  0456  3A00               	xorlw	0	; case 0
  1792  0457  1903               	skipnz
  1793  0458  2C5A               	goto	l2474
  1794  0459  2C65               	goto	l217
  1795  045A                     l2474:
  1796                           
  1797                           ; Switch size 1, requested type "simple"
  1798                           ; Number of cases is 3, Range of values is 0 to 2
  1799                           ; switch strategies available:
  1800                           ; Name         Instructions Cycles
  1801                           ; simple_byte           10     6 (average)
  1802                           ; direct_byte           12     6 (fixed)
  1803                           ; jumptable            260     6 (fixed)
  1804                           ;	Chosen strategy is simple_byte
  1805  045A  0870               	movf	fclr@flg,w
  1806  045B  3A00               	xorlw	0	; case 0
  1807  045C  1903               	skipnz
  1808  045D  2C48               	goto	l1918
  1809  045E  3A01               	xorlw	1	; case 1
  1810  045F  1903               	skipnz
  1811  0460  2C4B               	goto	l1920
  1812  0461  3A03               	xorlw	3	; case 2
  1813  0462  1903               	skipnz
  1814  0463  2C4F               	goto	l1922
  1815  0464  2C65               	goto	l217
  1816  0465                     l217:
  1817  0465  0008               	return
  1818  0466                     __end_of_fclr:
  1819                           
  1820                           	psect	text6
  1821  0663                     __ptext6:	
  1822 ;; *************** function _dynam *****************
  1823 ;; Defined at:
  1824 ;;		line 206 in file "Q5.c"
  1825 ;; Parameters:    Size  Location     Type
  1826 ;;  dig1data        2    0[COMMON] unsigned short 
  1827 ;;  dig2data        2    2[COMMON] unsigned short 
  1828 ;;  smdata          2    4[COMMON] unsigned short 
  1829 ;;  tr              2    6[COMMON] unsigned int 
  1830 ;; Auto vars:     Size  Location     Type
  1831 ;;  ext             2    6[BANK0 ] unsigned short 
  1832 ;;  j               2    4[BANK0 ] unsigned int 
  1833 ;;  tm              2    2[BANK0 ] unsigned int 
  1834 ;;  smd             2    0[BANK0 ] unsigned short 
  1835 ;; Return value:  Size  Location     Type
  1836 ;;                  1    wreg      void 
  1837 ;; Registers used:
  1838 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1839 ;; Tracked objects:
  1840 ;;		On entry : 0/0
  1841 ;;		On exit  : 0/0
  1842 ;;		Unchanged: 0/0
  1843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1844 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1845 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1847 ;;      Totals:         8       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1848 ;;Total ram usage:       16 bytes
  1849 ;; Hardware stack levels used:    1
  1850 ;; This function calls:
  1851 ;;		Nothing
  1852 ;; This function is called by:
  1853 ;;		_main
  1854 ;;		_clear
  1855 ;;		_waitSEG
  1856 ;;		_waitSEGStop
  1857 ;;		_motor
  1858 ;;		_motorStop
  1859 ;; This function uses a non-reentrant model
  1860 ;;
  1861                           
  1862                           
  1863                           ;psect for function _dynam
  1864  0663                     _dynam:
  1865  0663                     l1726:	
  1866                           ;incstack = 0
  1867                           ; Regs used in _dynam: [wreg-fsr0h+status,2+status,0]
  1868                           
  1869  0663  0020               	movlb	0	; select bank0
  1870  0664  01C0               	clrf	dynam@tm
  1871  0665  01C1               	clrf	dynam@tm+1
  1872                           
  1873                           ;Q5.c: 209:     unsigned short ext=0,smd=0;
  1874  0666  01C4               	clrf	dynam@ext
  1875  0667  01C5               	clrf	dynam@ext+1
  1876  0668  01BE               	clrf	dynam@smd
  1877  0669  01BF               	clrf	dynam@smd+1
  1878  066A                     l1728:
  1879                           
  1880                           ;Q5.c: 210:     RC7=0;
  1881  066A  138E               	bcf	14,7	;volatile
  1882  066B                     l1730:
  1883                           
  1884                           ;Q5.c: 211:     PORTB=dig1data;
  1885  066B  0870               	movf	dynam@dig1data,w
  1886  066C  008D               	movwf	13	;volatile
  1887  066D                     l1732:
  1888                           
  1889                           ;Q5.c: 212:     RC5=0;RC6=1;
  1890  066D  128E               	bcf	14,5	;volatile
  1891  066E                     l1734:
  1892  066E  170E               	bsf	14,6	;volatile
  1893  066F                     l1736:
  1894                           
  1895                           ;Q5.c: 213:     if(tr==5){tm=4000;}
  1896  066F  3005               	movlw	5
  1897  0670  0676               	xorwf	dynam@tr,w
  1898  0671  0477               	iorwf	dynam@tr+1,w
  1899  0672  1D03               	btfss	3,2
  1900  0673  2E75               	goto	u1071
  1901  0674  2E76               	goto	u1070
  1902  0675                     u1071:
  1903  0675  2E7B               	goto	l1740
  1904  0676                     u1070:
  1905  0676                     l1738:
  1906  0676  30A0               	movlw	160
  1907  0677  00C0               	movwf	dynam@tm
  1908  0678  300F               	movlw	15
  1909  0679  00C1               	movwf	dynam@tm+1
  1910  067A  2E7F               	goto	l112
  1911  067B                     l1740:
  1912  067B  30D0               	movlw	208
  1913  067C  00C0               	movwf	dynam@tm
  1914  067D  3007               	movlw	7
  1915  067E  00C1               	movwf	dynam@tm+1
  1916  067F                     l112:
  1917                           
  1918                           ;Q5.c: 215:     for(j=tm;j>0;--j);
  1919  067F  0841               	movf	dynam@tm+1,w
  1920  0680  00C3               	movwf	dynam@j+1
  1921  0681  0840               	movf	dynam@tm,w
  1922  0682  00C2               	movwf	dynam@j
  1923  0683                     l1742:
  1924  0683  0842               	movf	dynam@j,w
  1925  0684  0443               	iorwf	dynam@j+1,w
  1926  0685  1D03               	btfss	3,2
  1927  0686  2E88               	goto	u1081
  1928  0687  2E89               	goto	u1080
  1929  0688                     u1081:
  1930  0688  2E8A               	goto	l1746
  1931  0689                     u1080:
  1932  0689  2E8F               	goto	l114
  1933  068A                     l1746:
  1934  068A  3001               	movlw	1
  1935  068B  02C2               	subwf	dynam@j,f
  1936  068C  3000               	movlw	0
  1937  068D  3BC3               	subwfb	dynam@j+1,f
  1938  068E  2E83               	goto	l1742
  1939  068F                     l114:
  1940                           
  1941                           ;Q5.c: 216:     RC5=0;RC6=0;
  1942  068F  128E               	bcf	14,5	;volatile
  1943  0690  130E               	bcf	14,6	;volatile
  1944  0691                     l1750:
  1945                           
  1946                           ;Q5.c: 217:     PORTB=dig2data;
  1947  0691  0872               	movf	dynam@dig2data,w
  1948  0692  008D               	movwf	13	;volatile
  1949  0693                     l1752:
  1950                           
  1951                           ;Q5.c: 218:     RC6=0;RC5=1;
  1952  0693  130E               	bcf	14,6	;volatile
  1953  0694                     l1754:
  1954  0694  168E               	bsf	14,5	;volatile
  1955  0695                     l1756:
  1956                           
  1957                           ;Q5.c: 219:     if(tr==5){tm=4000;}
  1958  0695  3005               	movlw	5
  1959  0696  0676               	xorwf	dynam@tr,w
  1960  0697  0477               	iorwf	dynam@tr+1,w
  1961  0698  1D03               	btfss	3,2
  1962  0699  2E9B               	goto	u1091
  1963  069A  2E9C               	goto	u1090
  1964  069B                     u1091:
  1965  069B  2EA1               	goto	l1760
  1966  069C                     u1090:
  1967  069C                     l1758:
  1968  069C  30A0               	movlw	160
  1969  069D  00C0               	movwf	dynam@tm
  1970  069E  300F               	movlw	15
  1971  069F  00C1               	movwf	dynam@tm+1
  1972  06A0  2EA5               	goto	l116
  1973  06A1                     l1760:
  1974  06A1  30D0               	movlw	208
  1975  06A2  00C0               	movwf	dynam@tm
  1976  06A3  3007               	movlw	7
  1977  06A4  00C1               	movwf	dynam@tm+1
  1978  06A5                     l116:
  1979                           
  1980                           ;Q5.c: 221:     for(j=tm;j>0;--j);
  1981  06A5  0841               	movf	dynam@tm+1,w
  1982  06A6  00C3               	movwf	dynam@j+1
  1983  06A7  0840               	movf	dynam@tm,w
  1984  06A8  00C2               	movwf	dynam@j
  1985  06A9                     l1762:
  1986  06A9  0842               	movf	dynam@j,w
  1987  06AA  0443               	iorwf	dynam@j+1,w
  1988  06AB  1D03               	btfss	3,2
  1989  06AC  2EAE               	goto	u1101
  1990  06AD  2EAF               	goto	u1100
  1991  06AE                     u1101:
  1992  06AE  2EB0               	goto	l1766
  1993  06AF                     u1100:
  1994  06AF  2EB5               	goto	l118
  1995  06B0                     l1766:
  1996  06B0  3001               	movlw	1
  1997  06B1  02C2               	subwf	dynam@j,f
  1998  06B2  3000               	movlw	0
  1999  06B3  3BC3               	subwfb	dynam@j+1,f
  2000  06B4  2EA9               	goto	l1762
  2001  06B5                     l118:
  2002                           
  2003                           ;Q5.c: 222:     RC5=0;RC6=0;
  2004  06B5  128E               	bcf	14,5	;volatile
  2005  06B6  130E               	bcf	14,6	;volatile
  2006                           
  2007                           ;Q5.c: 223:     switch(smdata){
  2008  06B7  2FBC               	goto	l1876
  2009  06B8                     l1770:
  2010                           
  2011                           ;Q5.c: 225:                 PORTB=0x00;smd=(0x01|0x02|0x04|0x08|0x10|0x20);
  2012  06B8  018D               	clrf	13	;volatile
  2013  06B9                     l1772:
  2014  06B9                     l1774:
  2015                           
  2016                           ;Q5.c: 226:                 RC7=0;RC7=1;RC7=0;
  2017  06B9  138E               	bcf	14,7	;volatile
  2018  06BA                     l1776:
  2019  06BA  178E               	bsf	14,7	;volatile
  2020  06BB                     l1778:
  2021  06BB  138E               	bcf	14,7	;volatile
  2022                           
  2023                           ;Q5.c: 227:                 break;
  2024  06BC  2FCC               	goto	l135
  2025  06BD                     l1780:
  2026                           
  2027                           ;Q5.c: 229:                 if(flg==1)cw=0;flg=0;
  2028  06BD  0336               	decf	_flg,w
  2029  06BE  0437               	iorwf	_flg+1,w
  2030  06BF  1D03               	btfss	3,2
  2031  06C0  2EC2               	goto	u1111
  2032  06C1  2EC3               	goto	u1110
  2033  06C2                     u1111:
  2034  06C2  2EC5               	goto	l123
  2035  06C3                     u1110:
  2036  06C3                     l1782:
  2037  06C3  01B4               	clrf	_cw
  2038  06C4  01B5               	clrf	_cw+1
  2039  06C5                     l123:
  2040  06C5  01B6               	clrf	_flg
  2041  06C6  01B7               	clrf	_flg+1
  2042  06C7                     l1784:
  2043                           
  2044                           ;Q5.c: 230:                 if((cw==0)&&(ext==0)){cw=1;ccw=0;ext=1;PORTB=smd=0x09;}
  2045  06C7  0834               	movf	_cw,w
  2046  06C8  0435               	iorwf	_cw+1,w
  2047  06C9  1D03               	btfss	3,2
  2048  06CA  2ECC               	goto	u1121
  2049  06CB  2ECD               	goto	u1120
  2050  06CC                     u1121:
  2051  06CC  2EE3               	goto	l1796
  2052  06CD                     u1120:
  2053  06CD                     l1786:
  2054  06CD  0844               	movf	dynam@ext,w
  2055  06CE  0445               	iorwf	dynam@ext+1,w
  2056  06CF  1D03               	btfss	3,2
  2057  06D0  2ED2               	goto	u1131
  2058  06D1  2ED3               	goto	u1130
  2059  06D2                     u1131:
  2060  06D2  2EE3               	goto	l1796
  2061  06D3                     u1130:
  2062  06D3                     l1788:
  2063  06D3  3001               	movlw	1
  2064  06D4  00B4               	movwf	_cw
  2065  06D5  3000               	movlw	0
  2066  06D6  00B5               	movwf	_cw+1
  2067  06D7                     l1790:
  2068  06D7  01B2               	clrf	_ccw
  2069  06D8  01B3               	clrf	_ccw+1
  2070  06D9                     l1792:
  2071  06D9  3001               	movlw	1
  2072  06DA  00C4               	movwf	dynam@ext
  2073  06DB  3000               	movlw	0
  2074  06DC  00C5               	movwf	dynam@ext+1
  2075  06DD                     l1794:
  2076  06DD  3009               	movlw	9
  2077  06DE  00BE               	movwf	dynam@smd
  2078  06DF  3000               	movlw	0
  2079  06E0  00BF               	movwf	dynam@smd+1
  2080  06E1  083E               	movf	dynam@smd,w
  2081  06E2  008D               	movwf	13	;volatile
  2082  06E3                     l1796:
  2083                           
  2084                           ;Q5.c: 231:                 if((cw==1)&&(ext==0)){cw=2;ccw=3;ext=1;PORTB=smd=0x0C;}
  2085  06E3  0334               	decf	_cw,w
  2086  06E4  0435               	iorwf	_cw+1,w
  2087  06E5  1D03               	btfss	3,2
  2088  06E6  2EE8               	goto	u1141
  2089  06E7  2EE9               	goto	u1140
  2090  06E8                     u1141:
  2091  06E8  2F01               	goto	l1802
  2092  06E9                     u1140:
  2093  06E9                     l1798:
  2094  06E9  0844               	movf	dynam@ext,w
  2095  06EA  0445               	iorwf	dynam@ext+1,w
  2096  06EB  1D03               	btfss	3,2
  2097  06EC  2EEE               	goto	u1151
  2098  06ED  2EEF               	goto	u1150
  2099  06EE                     u1151:
  2100  06EE  2F01               	goto	l1802
  2101  06EF                     u1150:
  2102  06EF                     l1800:
  2103  06EF  3002               	movlw	2
  2104  06F0  00B4               	movwf	_cw
  2105  06F1  3000               	movlw	0
  2106  06F2  00B5               	movwf	_cw+1
  2107  06F3  3003               	movlw	3
  2108  06F4  00B2               	movwf	_ccw
  2109  06F5  3000               	movlw	0
  2110  06F6  00B3               	movwf	_ccw+1
  2111  06F7  3001               	movlw	1
  2112  06F8  00C4               	movwf	dynam@ext
  2113  06F9  3000               	movlw	0
  2114  06FA  00C5               	movwf	dynam@ext+1
  2115  06FB  300C               	movlw	12
  2116  06FC  00BE               	movwf	dynam@smd
  2117  06FD  3000               	movlw	0
  2118  06FE  00BF               	movwf	dynam@smd+1
  2119  06FF  083E               	movf	dynam@smd,w
  2120  0700  008D               	movwf	13	;volatile
  2121  0701                     l1802:
  2122                           
  2123                           ;Q5.c: 232:                 if((cw==2)&&(ext==0)){cw=3;ccw=2;ext=1;PORTB=smd=0x06;}
  2124  0701  3002               	movlw	2
  2125  0702  0634               	xorwf	_cw,w
  2126  0703  0435               	iorwf	_cw+1,w
  2127  0704  1D03               	btfss	3,2
  2128  0705  2F07               	goto	u1161
  2129  0706  2F08               	goto	u1160
  2130  0707                     u1161:
  2131  0707  2F20               	goto	l1808
  2132  0708                     u1160:
  2133  0708                     l1804:
  2134  0708  0844               	movf	dynam@ext,w
  2135  0709  0445               	iorwf	dynam@ext+1,w
  2136  070A  1D03               	btfss	3,2
  2137  070B  2F0D               	goto	u1171
  2138  070C  2F0E               	goto	u1170
  2139  070D                     u1171:
  2140  070D  2F20               	goto	l1808
  2141  070E                     u1170:
  2142  070E                     l1806:
  2143  070E  3003               	movlw	3
  2144  070F  00B4               	movwf	_cw
  2145  0710  3000               	movlw	0
  2146  0711  00B5               	movwf	_cw+1
  2147  0712  3002               	movlw	2
  2148  0713  00B2               	movwf	_ccw
  2149  0714  3000               	movlw	0
  2150  0715  00B3               	movwf	_ccw+1
  2151  0716  3001               	movlw	1
  2152  0717  00C4               	movwf	dynam@ext
  2153  0718  3000               	movlw	0
  2154  0719  00C5               	movwf	dynam@ext+1
  2155  071A  3006               	movlw	6
  2156  071B  00BE               	movwf	dynam@smd
  2157  071C  3000               	movlw	0
  2158  071D  00BF               	movwf	dynam@smd+1
  2159  071E  083E               	movf	dynam@smd,w
  2160  071F  008D               	movwf	13	;volatile
  2161  0720                     l1808:
  2162                           
  2163                           ;Q5.c: 233:                 if((cw==3)&&(ext==0)){cw=0;ccw=1;ext=1;PORTB=smd=0x03;}
  2164  0720  3003               	movlw	3
  2165  0721  0634               	xorwf	_cw,w
  2166  0722  0435               	iorwf	_cw+1,w
  2167  0723  1D03               	btfss	3,2
  2168  0724  2F26               	goto	u1181
  2169  0725  2F27               	goto	u1180
  2170  0726                     u1181:
  2171  0726  2EB9               	goto	l1774
  2172  0727                     u1180:
  2173  0727                     l1810:
  2174  0727  0844               	movf	dynam@ext,w
  2175  0728  0445               	iorwf	dynam@ext+1,w
  2176  0729  1D03               	btfss	3,2
  2177  072A  2F2C               	goto	u1191
  2178  072B  2F2D               	goto	u1190
  2179  072C                     u1191:
  2180  072C  2EB9               	goto	l1774
  2181  072D                     u1190:
  2182  072D                     l1812:
  2183  072D  01B4               	clrf	_cw
  2184  072E  01B5               	clrf	_cw+1
  2185  072F                     l1814:
  2186  072F  3001               	movlw	1
  2187  0730  00B2               	movwf	_ccw
  2188  0731  3000               	movlw	0
  2189  0732  00B3               	movwf	_ccw+1
  2190  0733                     l1816:
  2191  0733                     l1818:
  2192  0733  3003               	movlw	3
  2193  0734  00BE               	movwf	dynam@smd
  2194  0735  3000               	movlw	0
  2195  0736  00BF               	movwf	dynam@smd+1
  2196  0737  083E               	movf	dynam@smd,w
  2197  0738  008D               	movwf	13	;volatile
  2198  0739  2EB9               	goto	l1774
  2199  073A                     l1826:
  2200                           
  2201                           ;Q5.c: 237:                 if(flg==1)ccw=0;flg=0;
  2202  073A  0336               	decf	_flg,w
  2203  073B  0437               	iorwf	_flg+1,w
  2204  073C  1D03               	btfss	3,2
  2205  073D  2F3F               	goto	u1201
  2206  073E  2F40               	goto	u1200
  2207  073F                     u1201:
  2208  073F  2F42               	goto	l129
  2209  0740                     u1200:
  2210  0740                     l1828:
  2211  0740  01B2               	clrf	_ccw
  2212  0741  01B3               	clrf	_ccw+1
  2213  0742                     l129:
  2214  0742  01B6               	clrf	_flg
  2215  0743  01B7               	clrf	_flg+1
  2216  0744                     l1830:
  2217                           
  2218                           ;Q5.c: 238:                 if((ccw==0)&&(ext==0)){ccw=1;cw=0;ext=1;PORTB=smd=0x03;}
  2219  0744  0832               	movf	_ccw,w
  2220  0745  0433               	iorwf	_ccw+1,w
  2221  0746  1D03               	btfss	3,2
  2222  0747  2F49               	goto	u1211
  2223  0748  2F4A               	goto	u1210
  2224  0749                     u1211:
  2225  0749  2F60               	goto	l1842
  2226  074A                     u1210:
  2227  074A                     l1832:
  2228  074A  0844               	movf	dynam@ext,w
  2229  074B  0445               	iorwf	dynam@ext+1,w
  2230  074C  1D03               	btfss	3,2
  2231  074D  2F4F               	goto	u1221
  2232  074E  2F50               	goto	u1220
  2233  074F                     u1221:
  2234  074F  2F60               	goto	l1842
  2235  0750                     u1220:
  2236  0750                     l1834:
  2237  0750  3001               	movlw	1
  2238  0751  00B2               	movwf	_ccw
  2239  0752  3000               	movlw	0
  2240  0753  00B3               	movwf	_ccw+1
  2241  0754                     l1836:
  2242  0754  01B4               	clrf	_cw
  2243  0755  01B5               	clrf	_cw+1
  2244  0756                     l1838:
  2245  0756  3001               	movlw	1
  2246  0757  00C4               	movwf	dynam@ext
  2247  0758  3000               	movlw	0
  2248  0759  00C5               	movwf	dynam@ext+1
  2249  075A                     l1840:
  2250  075A  3003               	movlw	3
  2251  075B  00BE               	movwf	dynam@smd
  2252  075C  3000               	movlw	0
  2253  075D  00BF               	movwf	dynam@smd+1
  2254  075E  083E               	movf	dynam@smd,w
  2255  075F  008D               	movwf	13	;volatile
  2256  0760                     l1842:
  2257                           
  2258                           ;Q5.c: 239:                 if((ccw==1)&&(ext==0)){ccw=2;cw=3;ext=1;PORTB=smd=0x06;}
  2259  0760  0332               	decf	_ccw,w
  2260  0761  0433               	iorwf	_ccw+1,w
  2261  0762  1D03               	btfss	3,2
  2262  0763  2F65               	goto	u1231
  2263  0764  2F66               	goto	u1230
  2264  0765                     u1231:
  2265  0765  2F7E               	goto	l1848
  2266  0766                     u1230:
  2267  0766                     l1844:
  2268  0766  0844               	movf	dynam@ext,w
  2269  0767  0445               	iorwf	dynam@ext+1,w
  2270  0768  1D03               	btfss	3,2
  2271  0769  2F6B               	goto	u1241
  2272  076A  2F6C               	goto	u1240
  2273  076B                     u1241:
  2274  076B  2F7E               	goto	l1848
  2275  076C                     u1240:
  2276  076C                     l1846:
  2277  076C  3002               	movlw	2
  2278  076D  00B2               	movwf	_ccw
  2279  076E  3000               	movlw	0
  2280  076F  00B3               	movwf	_ccw+1
  2281  0770  3003               	movlw	3
  2282  0771  00B4               	movwf	_cw
  2283  0772  3000               	movlw	0
  2284  0773  00B5               	movwf	_cw+1
  2285  0774  3001               	movlw	1
  2286  0775  00C4               	movwf	dynam@ext
  2287  0776  3000               	movlw	0
  2288  0777  00C5               	movwf	dynam@ext+1
  2289  0778  3006               	movlw	6
  2290  0779  00BE               	movwf	dynam@smd
  2291  077A  3000               	movlw	0
  2292  077B  00BF               	movwf	dynam@smd+1
  2293  077C  083E               	movf	dynam@smd,w
  2294  077D  008D               	movwf	13	;volatile
  2295  077E                     l1848:
  2296                           
  2297                           ;Q5.c: 240:                 if((ccw==2)&&(ext==0)){ccw=3;cw=2;ext=1;PORTB=smd=0x0C;}
  2298  077E  3002               	movlw	2
  2299  077F  0632               	xorwf	_ccw,w
  2300  0780  0433               	iorwf	_ccw+1,w
  2301  0781  1D03               	btfss	3,2
  2302  0782  2F84               	goto	u1251
  2303  0783  2F85               	goto	u1250
  2304  0784                     u1251:
  2305  0784  2F9D               	goto	l1854
  2306  0785                     u1250:
  2307  0785                     l1850:
  2308  0785  0844               	movf	dynam@ext,w
  2309  0786  0445               	iorwf	dynam@ext+1,w
  2310  0787  1D03               	btfss	3,2
  2311  0788  2F8A               	goto	u1261
  2312  0789  2F8B               	goto	u1260
  2313  078A                     u1261:
  2314  078A  2F9D               	goto	l1854
  2315  078B                     u1260:
  2316  078B                     l1852:
  2317  078B  3003               	movlw	3
  2318  078C  00B2               	movwf	_ccw
  2319  078D  3000               	movlw	0
  2320  078E  00B3               	movwf	_ccw+1
  2321  078F  3002               	movlw	2
  2322  0790  00B4               	movwf	_cw
  2323  0791  3000               	movlw	0
  2324  0792  00B5               	movwf	_cw+1
  2325  0793  3001               	movlw	1
  2326  0794  00C4               	movwf	dynam@ext
  2327  0795  3000               	movlw	0
  2328  0796  00C5               	movwf	dynam@ext+1
  2329  0797  300C               	movlw	12
  2330  0798  00BE               	movwf	dynam@smd
  2331  0799  3000               	movlw	0
  2332  079A  00BF               	movwf	dynam@smd+1
  2333  079B  083E               	movf	dynam@smd,w
  2334  079C  008D               	movwf	13	;volatile
  2335  079D                     l1854:
  2336                           
  2337                           ;Q5.c: 241:                 if((ccw==3)&&(ext==0)){ccw=0;cw=1;ext=1;PORTB=smd=0x09;}
  2338  079D  3003               	movlw	3
  2339  079E  0632               	xorwf	_ccw,w
  2340  079F  0433               	iorwf	_ccw+1,w
  2341  07A0  1D03               	btfss	3,2
  2342  07A1  2FA3               	goto	u1271
  2343  07A2  2FA4               	goto	u1270
  2344  07A3                     u1271:
  2345  07A3  2EB9               	goto	l1774
  2346  07A4                     u1270:
  2347  07A4                     l1856:
  2348  07A4  0844               	movf	dynam@ext,w
  2349  07A5  0445               	iorwf	dynam@ext+1,w
  2350  07A6  1D03               	btfss	3,2
  2351  07A7  2FA9               	goto	u1281
  2352  07A8  2FAA               	goto	u1280
  2353  07A9                     u1281:
  2354  07A9  2EB9               	goto	l1774
  2355  07AA                     u1280:
  2356  07AA                     l1858:
  2357  07AA  01B2               	clrf	_ccw
  2358  07AB  01B3               	clrf	_ccw+1
  2359  07AC                     l1860:
  2360  07AC  3001               	movlw	1
  2361  07AD  00B4               	movwf	_cw
  2362  07AE  3000               	movlw	0
  2363  07AF  00B5               	movwf	_cw+1
  2364  07B0                     l1862:
  2365  07B0                     l1864:
  2366  07B0  3009               	movlw	9
  2367  07B1  00BE               	movwf	dynam@smd
  2368  07B2  3000               	movlw	0
  2369  07B3  00BF               	movwf	dynam@smd+1
  2370  07B4  083E               	movf	dynam@smd,w
  2371  07B5  008D               	movwf	13	;volatile
  2372  07B6  2EB9               	goto	l1774
  2373  07B7                     l1872:
  2374                           
  2375                           ;Q5.c: 245:                 cw=ccw=0;
  2376  07B7  01B2               	clrf	_ccw
  2377  07B8  01B3               	clrf	_ccw+1
  2378  07B9  01B4               	clrf	_cw
  2379  07BA  01B5               	clrf	_cw+1
  2380                           
  2381                           ;Q5.c: 246:                 break;
  2382  07BB  2FCC               	goto	l135
  2383  07BC                     l1876:
  2384                           
  2385                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2386                           ; Switch size 1, requested type "simple"
  2387                           ; Number of cases is 1, Range of values is 0 to 0
  2388                           ; switch strategies available:
  2389                           ; Name         Instructions Cycles
  2390                           ; simple_byte            4     3 (average)
  2391                           ; direct_byte            8     6 (fixed)
  2392                           ; jumptable            260     6 (fixed)
  2393                           ;	Chosen strategy is simple_byte
  2394  07BC  0875               	movf	dynam@smdata+1,w
  2395  07BD  3A00               	xorlw	0	; case 0
  2396  07BE  1903               	skipnz
  2397  07BF  2FC1               	goto	l2476
  2398  07C0  2FB7               	goto	l1872
  2399  07C1                     l2476:
  2400                           
  2401                           ; Switch size 1, requested type "simple"
  2402                           ; Number of cases is 3, Range of values is 0 to 2
  2403                           ; switch strategies available:
  2404                           ; Name         Instructions Cycles
  2405                           ; simple_byte           10     6 (average)
  2406                           ; direct_byte           12     6 (fixed)
  2407                           ; jumptable            260     6 (fixed)
  2408                           ;	Chosen strategy is simple_byte
  2409  07C1  0874               	movf	dynam@smdata,w
  2410  07C2  3A00               	xorlw	0	; case 0
  2411  07C3  1903               	skipnz
  2412  07C4  2EB8               	goto	l1770
  2413  07C5  3A01               	xorlw	1	; case 1
  2414  07C6  1903               	skipnz
  2415  07C7  2EBD               	goto	l1780
  2416  07C8  3A03               	xorlw	3	; case 2
  2417  07C9  1903               	skipnz
  2418  07CA  2F3A               	goto	l1826
  2419  07CB  2FB7               	goto	l1872
  2420  07CC                     l135:
  2421  07CC  0008               	return
  2422  07CD                     __end_of_dynam:
  2423  007E                     btemp	set	126	;btemp
  2424  007E                     wtemp0	set	126
  2425                           
  2426                           	psect	config
  2427                           
  2428                           ;Config register CONFIG1 @ 0x8007
  2429                           ;	Oscillator Selection
  2430                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  2431                           ;	Watchdog Timer Enable
  2432                           ;	WDTE = OFF, WDT disabled
  2433                           ;	Power-up Timer Enable
  2434                           ;	PWRTE = OFF, PWRT disabled
  2435                           ;	MCLR Pin Function Select
  2436                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  2437                           ;	Flash Program Memory Code Protection
  2438                           ;	CP = OFF, Program memory code protection is disabled
  2439                           ;	Data Memory Code Protection
  2440                           ;	CPD = OFF, Data memory code protection is disabled
  2441                           ;	Brown-out Reset Enable
  2442                           ;	BOREN = OFF, Brown-out Reset disabled
  2443                           ;	Clock Out Enable
  2444                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  2445                           ;	Internal/External Switchover
  2446                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2447                           ;	Fail-Safe Clock Monitor Enable
  2448                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2449  8007                     	org	32775
  2450  8007  09E4               	dw	2532
  2451                           
  2452                           ;Config register CONFIG2 @ 0x8008
  2453                           ;	Flash Memory Self-Write Protection
  2454                           ;	WRT = OFF, Write protection off
  2455                           ;	Voltage Regulator Capacitor Enable
  2456                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
  2457                           ;	PLL Enable
  2458                           ;	PLLEN = OFF, 4x PLL disabled
  2459                           ;	Stack Overflow/Underflow Reset Enable
  2460                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  2461                           ;	Brown-out Reset Voltage Selection
  2462                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  2463                           ;	Low-Voltage Programming Enable
  2464                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  2465  8008                     	org	32776
  2466  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    0
    Data        156
    BSS         34
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      14
    BANK0            80     26      74
    BANK1            80      0      74
    BANK2            80      0      64
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_tact
    _tact->_tactsw

Critical Paths under _main in BANK0

    _main->_dynam

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0    3807
                                              8 BANK0     18    18      0
                              _dynam
                               _fclr
                           _portinit
                               _tact
                             _zenoff
 ---------------------------------------------------------------------------------
 (1) _zenoff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _tact                                                 2     0      2     594
                                              8 COMMON     2     0      2
                             _tactsw
 ---------------------------------------------------------------------------------
 (2) _tactsw                                               8     8      0     116
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 (1) _portinit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _fclr                                                 2     0      2     402
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _dynam                                               16     8      8    2575
                                              0 COMMON     8     0      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _dynam
   _fclr
   _portinit
   _tact
     _tactsw
   _zenoff

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1A      4A       5       92.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      4A       7       92.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      40       9       80.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      E2      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      E2      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Mar 02 14:43:43 2021

                     l95 0446                       _cw 0034                      l112 067F  
                    l114 068F                      l123 06C5                      l116 06A5  
                    l108 0421                      l118 06B5                      l135 07CC  
                    l208 052B                      l129 0742                      l217 0465  
                    l193 04A2                      l290 0590                      l295 05E9  
                    l288 0584                      l299 064C                      _RA0 0060  
                    _RA1 0061                      _RA2 0062                      _RC0 0070  
                    _RC1 0071                      _RC2 0072                      _RC5 0075  
                    _RC6 0076                      _RC7 0077                      _ccw 0032  
                    _flg 0036                      wreg 0009                     l2300 061C  
                   l2310 0648                     l2302 062D                     l2312 0650  
                   l2304 0634                     l2314 0657                     l2306 063A  
                   l2250 057F                     l2308 0641                     l2260 058C  
                   l2252 057F                     l2244 0576                     l2270 05AD  
                   l2262 05A1                     l2254 0582                     l2246 0579  
                   l1800 06EF                     l1720 041E                     l2280 05D8  
                   l2272 05B1                     l2264 05A8                     l2256 0584  
                   l2248 057F                     l1810 0727                     l1802 0701  
                   l1730 066B                     l1722 041F                     l2282 05DF  
                   l2274 05B6                     l2290 05FD                     l2266 05A8  
                   l2258 0588                     l1812 072D                     l1804 0708  
                   l1740 067B                     l1732 066D                     l1900 050A  
                   l1724 0420                     l1716 0419                     l2292 0602  
                   l2284 05E5                     l2276 05BA                     l2268 05A8  
                   l1830 0744                     l1814 072F                     l1806 070E  
                   l1750 0691                     l1742 0683                     l1734 066E  
                   l1726 0663                     l1670 046A                     l1902 050E  
                   l1910 051B                     l1718 041D                     l2294 0606  
                   l2286 05ED                     l2278 05D2                     l1840 075A  
                   l1832 074A                     l1816 0733                     l1808 0720  
                   l1760 06A1                     l1752 0693                     l1736 066F  
                   l1728 066A                     l1920 044B                     l1680 0490  
                   l1672 0476                     l2472 0520                     l1904 0514  
                   l2296 060D                     l2288 05F4                     l1850 0785  
                   l1834 0750                     l1842 0760                     l1826 073A  
                   l1818 0733                     l1770 06B8                     l1762 06A9  
                   l1754 0694                     l1746 068A                     l1738 0676  
                   l2474 045A                     l1922 044F                     l1690 043A  
                   l1674 0480                     l2298 0614                     l2476 07C1  
                   l1860 07AC                     l1852 078B                     l1844 0766  
                   l1836 0754                     l1828 0740                     l1780 06BD  
                   l1772 06B9                     l1756 0695                     l1916 0447  
                   l1692 0441                     l1684 049D                     l1676 0485  
                   l1668 0466                     l1862 07B0                     l1854 079D  
                   l1846 076C                     l1838 0756                     l1790 06D7  
                   l1782 06C3                     l1774 06B9                     l1766 06B0  
                   l1758 069C                     l1918 0448                     l1926 0455  
                   l1694 0444                     l1686 0434                     l1678 0487  
                   l1872 07B7                     l1864 07B0                     l1856 07A4  
                   l1848 077E                     l1792 06D9                     l1784 06C7  
                   l1776 06BA                     l1688 0437                     l1858 07AA  
                   l1794 06DD                     l1786 06CD                     l1778 06BB  
                   l1890 04F2                     l1882 04E3                     l1788 06D3  
                   l1796 06E3                     l1876 07BC                     l1892 04F5  
                   l1884 04E4                     l1798 06E9                     l1894 04FB  
                   l1886 04E7                     l1896 0501                     l1888 04ED  
                   l1898 0504                     u1100 06AF                     u1101 06AE  
                   u1110 06C3                     u1030 0480                     u1111 06C2  
                   u1031 047F                     u1200 0740                     u1120 06CD  
                   u1040 0490                     u2000 0648                     u1201 073F  
                   u1121 06CC                     u1041 048F                     u2001 0647  
                   u1210 074A                     u1130 06D3                     u1211 0749  
                   u1131 06D2                     u1035 047C                     u1220 0750  
                   u1140 06E9                     u1300 04FB                     u1221 074F  
                   u1141 06E8                     u1301 04FA                     u1230 0766  
                   u1150 06EF                     u1070 0676                     u1310 050A  
                   u1231 0765                     u1151 06EE                     u1071 0675  
                   u1311 0509                     u1240 076C                     u1160 0708  
                   u1080 0689                     u1320 0514                     u1241 076B  
                   u1161 0707                     u1081 0688                     u1321 0513  
                   u1250 0785                     u1170 070E                     u1090 069C  
                   u1330 051A                     u1251 0784                     u1171 070D  
                   u1091 069B                     u1331 0519                     u1260 078B  
                   u1180 0727                     u1261 078A                     u1181 0726  
                   u1270 07A4                     u1190 072D                     u1271 07A3  
                   u1191 072C                     u1280 07AA                     u1281 07A9  
                   u1290 04ED                     u1291 04EC                     u1900 05BA  
                   u1901 05B9                     u1910 05D8                     u1830 0588  
                   u1911 05D7                     u1831 0587                     u1920 05DF  
                   u1840 058C                     u1921 05DE                     u1841 058B  
                   u1930 05E5                     u1850 0590                     u1931 05E4  
                   u1851 058F                     u1940 0602                     u1860 0597  
                   u1941 0601                     u1861 0594                     u1950 0606  
                   u1870 059F                     u1951 0605                     u1871 059C  
                   u1960 060D                     u1961 060C                     u1970 0614  
                   u1890 05B6                     u1874 0599                     u1971 0613  
                   u1891 05B5                     u1980 063A                     u1884 05A1  
                   u1981 0639                     u1990 0641                     u1991 0640  
                   _atai 002C                     _fclr 0447                     _main 0576  
                   _num0 00C0                     _kisu 00E0                     _moja 00D4  
                   _samf 0120                     _mojf 0154                     _tact 04E3  
                   _mojh 0066                     _moji 0140                     _mojn 0062  
                   _samp 00A0                     _gusu 0058                     fsr0h 0005  
                   fsr1h 0007                     indf0 0000                     fsr0l 0004  
                   fsr1l 0006                     btemp 007E                     start 0002  
                  ?_fclr 0070                    ?_main 0070                    ?_tact 0078  
                  _PORTA 000C                    _PORTB 000D                    _PORTC 000E  
                  _TRISA 008C                    _TRISB 008D                    _TRISC 008E  
                  _code1 0022                    _atai1 002E                    _count 002A  
                  _dynam 0663                    _fugou 0020                    main@k 0050  
                  main@m 0052                    status 0003                    wtemp0 007E  
        __initialization 07CD             __end_of_fclr 0466             __end_of_main 0663  
           __end_of_tact 052C                   ??_fclr 0072                   ??_main 007A  
                 ??_tact 007A                   ?_dynam 0070                   _ANSELA 018C  
                 _ANSELB 018D                   _OSCCON 0099              dynam@smdata 0074  
                 _code10 0024                   _atai10 0030                   _flag_P 0038  
                 _flag_R 007A                   _tactsw 0466                   _zenoff 0419  
                 dynam@j 0042         __end_of_portinit 0447  __end_of__initialization 07FD  
         __pcstackCOMMON 0070             __pidataBANK0 0422             __pidataBANK1 052C  
           __pidataBANK2 04A3            __end_of_dynam 07CD                  ??_dynam 0078  
             __pbssBANK0 0020               __pmaintext 0576                  ?_tactsw 0070  
                ?_zenoff 0070                ?_portinit 0070                  _code100 0026  
        __size_of_tactsw 003D                  __ptext1 0419                  __ptext2 04E3  
                __ptext3 0466                  __ptext4 0434                  __ptext5 0447  
                __ptext6 0663          __size_of_zenoff 0009                  fclr@flg 0070  
                clrloop0 040E     end_of_initialization 07FD                  dynam@tm 0040  
                dynam@tr 0076                  init_ram 0413                  initloop 0414  
                tactsw@a 0076                  tactsw@b 0072                  tactsw@c 0074  
             ??_portinit 0070               main@hidari 0054           __end_of_tactsw 04A3  
         __end_of_zenoff 0422      start_initialization 07CD              __pdataBANK0 0058  
            __pdataBANK1 00A0              __pdataBANK2 0120                 ??_tactsw 0070  
               ??_zenoff 0070              __pbssCOMMON 007A                ___latbits 0003  
          __pcstackBANK0 003E        __size_of_portinit 0013           __size_of_dynam 016A  
          dynam@dig1data 0070            dynam@dig2data 0072                clear_ram0 040D  
               _code1000 0028                 _flag_sw1 003C                 _flag_sw2 003A  
               _flag_sw3 007C            __size_of_fclr 001F            __size_of_main 00ED  
          __size_of_tact 0049                 _portinit 0434                 main@migi 0056  
               dynam@ext 0044                 dynam@smd 003E                 tact@mode 0078  
