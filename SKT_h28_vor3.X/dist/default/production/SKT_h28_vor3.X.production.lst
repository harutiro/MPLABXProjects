

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Mar 04 14:18:12 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F1938
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.20
    31                           ; Generated 12/02/2020 GMT
    32                           ; 
    33                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F1938 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  0010                     	;# 
    80  0011                     	;# 
    81  0012                     	;# 
    82  0013                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  010C                     	;# 
   113  010D                     	;# 
   114  010E                     	;# 
   115  0110                     	;# 
   116  0111                     	;# 
   117  0112                     	;# 
   118  0113                     	;# 
   119  0114                     	;# 
   120  0115                     	;# 
   121  0116                     	;# 
   122  0117                     	;# 
   123  0118                     	;# 
   124  0119                     	;# 
   125  011A                     	;# 
   126  011B                     	;# 
   127  011D                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0191                     	;# 
   131  0191                     	;# 
   132  0192                     	;# 
   133  0193                     	;# 
   134  0193                     	;# 
   135  0193                     	;# 
   136  0194                     	;# 
   137  0195                     	;# 
   138  0196                     	;# 
   139  0199                     	;# 
   140  019A                     	;# 
   141  019B                     	;# 
   142  019B                     	;# 
   143  019B                     	;# 
   144  019B                     	;# 
   145  019C                     	;# 
   146  019C                     	;# 
   147  019D                     	;# 
   148  019E                     	;# 
   149  019F                     	;# 
   150  020D                     	;# 
   151  0210                     	;# 
   152  0211                     	;# 
   153  0212                     	;# 
   154  0213                     	;# 
   155  0214                     	;# 
   156  0215                     	;# 
   157  0215                     	;# 
   158  0216                     	;# 
   159  0217                     	;# 
   160  0291                     	;# 
   161  0291                     	;# 
   162  0292                     	;# 
   163  0293                     	;# 
   164  0294                     	;# 
   165  0295                     	;# 
   166  0295                     	;# 
   167  0296                     	;# 
   168  0298                     	;# 
   169  0298                     	;# 
   170  0299                     	;# 
   171  029A                     	;# 
   172  029B                     	;# 
   173  029C                     	;# 
   174  029C                     	;# 
   175  029D                     	;# 
   176  029E                     	;# 
   177  029F                     	;# 
   178  0311                     	;# 
   179  0311                     	;# 
   180  0312                     	;# 
   181  0313                     	;# 
   182  0314                     	;# 
   183  0315                     	;# 
   184  0315                     	;# 
   185  0316                     	;# 
   186  0318                     	;# 
   187  0318                     	;# 
   188  0319                     	;# 
   189  031A                     	;# 
   190  031C                     	;# 
   191  031C                     	;# 
   192  031D                     	;# 
   193  031E                     	;# 
   194  0394                     	;# 
   195  0395                     	;# 
   196  0396                     	;# 
   197  0415                     	;# 
   198  0416                     	;# 
   199  0417                     	;# 
   200  041C                     	;# 
   201  041D                     	;# 
   202  041E                     	;# 
   203  0791                     	;# 
   204  0792                     	;# 
   205  0793                     	;# 
   206  0794                     	;# 
   207  0795                     	;# 
   208  0798                     	;# 
   209  0799                     	;# 
   210  07A0                     	;# 
   211  07A1                     	;# 
   212  07A3                     	;# 
   213  07A4                     	;# 
   214  07A6                     	;# 
   215  07A7                     	;# 
   216  07A9                     	;# 
   217  07AA                     	;# 
   218  0FE4                     	;# 
   219  0FE5                     	;# 
   220  0FE6                     	;# 
   221  0FE7                     	;# 
   222  0FE8                     	;# 
   223  0FE9                     	;# 
   224  0FEA                     	;# 
   225  0FEB                     	;# 
   226  0FED                     	;# 
   227  0FEE                     	;# 
   228  0FEF                     	;# 
   229  0000                     	;# 
   230  0001                     	;# 
   231  0002                     	;# 
   232  0003                     	;# 
   233  0004                     	;# 
   234  0005                     	;# 
   235  0006                     	;# 
   236  0007                     	;# 
   237  0008                     	;# 
   238  0009                     	;# 
   239  000A                     	;# 
   240  000B                     	;# 
   241  000C                     	;# 
   242  000D                     	;# 
   243  000E                     	;# 
   244  0010                     	;# 
   245  0011                     	;# 
   246  0012                     	;# 
   247  0013                     	;# 
   248  0015                     	;# 
   249  0016                     	;# 
   250  0016                     	;# 
   251  0017                     	;# 
   252  0018                     	;# 
   253  0019                     	;# 
   254  001A                     	;# 
   255  001B                     	;# 
   256  001C                     	;# 
   257  001E                     	;# 
   258  001F                     	;# 
   259  008C                     	;# 
   260  008D                     	;# 
   261  008E                     	;# 
   262  0090                     	;# 
   263  0091                     	;# 
   264  0092                     	;# 
   265  0093                     	;# 
   266  0095                     	;# 
   267  0096                     	;# 
   268  0097                     	;# 
   269  0098                     	;# 
   270  0099                     	;# 
   271  009A                     	;# 
   272  009B                     	;# 
   273  009B                     	;# 
   274  009C                     	;# 
   275  009D                     	;# 
   276  009E                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  0110                     	;# 
   281  0111                     	;# 
   282  0112                     	;# 
   283  0113                     	;# 
   284  0114                     	;# 
   285  0115                     	;# 
   286  0116                     	;# 
   287  0117                     	;# 
   288  0118                     	;# 
   289  0119                     	;# 
   290  011A                     	;# 
   291  011B                     	;# 
   292  011D                     	;# 
   293  018C                     	;# 
   294  018D                     	;# 
   295  0191                     	;# 
   296  0191                     	;# 
   297  0192                     	;# 
   298  0193                     	;# 
   299  0193                     	;# 
   300  0193                     	;# 
   301  0194                     	;# 
   302  0195                     	;# 
   303  0196                     	;# 
   304  0199                     	;# 
   305  019A                     	;# 
   306  019B                     	;# 
   307  019B                     	;# 
   308  019B                     	;# 
   309  019B                     	;# 
   310  019C                     	;# 
   311  019C                     	;# 
   312  019D                     	;# 
   313  019E                     	;# 
   314  019F                     	;# 
   315  020D                     	;# 
   316  0210                     	;# 
   317  0211                     	;# 
   318  0212                     	;# 
   319  0213                     	;# 
   320  0214                     	;# 
   321  0215                     	;# 
   322  0215                     	;# 
   323  0216                     	;# 
   324  0217                     	;# 
   325  0291                     	;# 
   326  0291                     	;# 
   327  0292                     	;# 
   328  0293                     	;# 
   329  0294                     	;# 
   330  0295                     	;# 
   331  0295                     	;# 
   332  0296                     	;# 
   333  0298                     	;# 
   334  0298                     	;# 
   335  0299                     	;# 
   336  029A                     	;# 
   337  029B                     	;# 
   338  029C                     	;# 
   339  029C                     	;# 
   340  029D                     	;# 
   341  029E                     	;# 
   342  029F                     	;# 
   343  0311                     	;# 
   344  0311                     	;# 
   345  0312                     	;# 
   346  0313                     	;# 
   347  0314                     	;# 
   348  0315                     	;# 
   349  0315                     	;# 
   350  0316                     	;# 
   351  0318                     	;# 
   352  0318                     	;# 
   353  0319                     	;# 
   354  031A                     	;# 
   355  031C                     	;# 
   356  031C                     	;# 
   357  031D                     	;# 
   358  031E                     	;# 
   359  0394                     	;# 
   360  0395                     	;# 
   361  0396                     	;# 
   362  0415                     	;# 
   363  0416                     	;# 
   364  0417                     	;# 
   365  041C                     	;# 
   366  041D                     	;# 
   367  041E                     	;# 
   368  0791                     	;# 
   369  0792                     	;# 
   370  0793                     	;# 
   371  0794                     	;# 
   372  0795                     	;# 
   373  0798                     	;# 
   374  0799                     	;# 
   375  07A0                     	;# 
   376  07A1                     	;# 
   377  07A3                     	;# 
   378  07A4                     	;# 
   379  07A6                     	;# 
   380  07A7                     	;# 
   381  07A9                     	;# 
   382  07AA                     	;# 
   383  0FE4                     	;# 
   384  0FE5                     	;# 
   385  0FE6                     	;# 
   386  0FE7                     	;# 
   387  0FE8                     	;# 
   388  0FE9                     	;# 
   389  0FEA                     	;# 
   390  0FEB                     	;# 
   391  0FED                     	;# 
   392  0FEE                     	;# 
   393  0FEF                     	;# 
   394                           
   395                           	psect	idataBANK1
   396  015A                     __pidataBANK1:
   397                           
   398                           ;initializer for _samp
   399  015A  343F               	retlw	63
   400  015B  3400               	retlw	0
   401  015C  3406               	retlw	6
   402  015D  3400               	retlw	0
   403  015E  345B               	retlw	91
   404  015F  3400               	retlw	0
   405  0160  344F               	retlw	79
   406  0161  3400               	retlw	0
   407  0162  3466               	retlw	102
   408  0163  3400               	retlw	0
   409  0164  346D               	retlw	109
   410  0165  3400               	retlw	0
   411  0166  347D               	retlw	125
   412  0167  3400               	retlw	0
   413  0168  3427               	retlw	39
   414  0169  3400               	retlw	0
   415  016A  347F               	retlw	127
   416  016B  3400               	retlw	0
   417  016C  346F               	retlw	111
   418  016D  3400               	retlw	0
   419  016E  345F               	retlw	95
   420  016F  3400               	retlw	0
   421  0170  347C               	retlw	124
   422  0171  3400               	retlw	0
   423  0172  3458               	retlw	88
   424  0173  3400               	retlw	0
   425  0174  345E               	retlw	94
   426  0175  3400               	retlw	0
   427  0176  3479               	retlw	121
   428  0177  3400               	retlw	0
   429  0178  3471               	retlw	113
   430  0179  3400               	retlw	0
   431                           
   432                           ;initializer for _num0
   433  017A  343F               	retlw	63
   434  017B  3400               	retlw	0
   435  017C  3406               	retlw	6
   436  017D  3400               	retlw	0
   437  017E  345B               	retlw	91
   438  017F  3400               	retlw	0
   439  0180  344F               	retlw	79
   440  0181  3400               	retlw	0
   441  0182  3466               	retlw	102
   442  0183  3400               	retlw	0
   443  0184  346D               	retlw	109
   444  0185  3400               	retlw	0
   445  0186  347D               	retlw	125
   446  0187  3400               	retlw	0
   447  0188  3427               	retlw	39
   448  0189  3400               	retlw	0
   449  018A  347F               	retlw	127
   450  018B  3400               	retlw	0
   451  018C  346F               	retlw	111
   452  018D  3400               	retlw	0
   453                           
   454                           ;initializer for _kisu
   455  018E  3406               	retlw	6
   456  018F  3400               	retlw	0
   457  0190  344F               	retlw	79
   458  0191  3400               	retlw	0
   459  0192  346D               	retlw	109
   460  0193  3400               	retlw	0
   461  0194  3427               	retlw	39
   462  0195  3400               	retlw	0
   463  0196  346F               	retlw	111
   464  0197  3400               	retlw	0
   465                           
   466                           ;initializer for _gusu
   467  0198  343F               	retlw	63
   468  0199  3400               	retlw	0
   469  019A  345B               	retlw	91
   470  019B  3400               	retlw	0
   471  019C  3466               	retlw	102
   472  019D  3400               	retlw	0
   473  019E  347D               	retlw	125
   474  019F  3400               	retlw	0
   475  01A0  347F               	retlw	127
   476  01A1  3400               	retlw	0
   477                           
   478                           ;initializer for _mojn
   479  01A2  3454               	retlw	84
   480  01A3  3400               	retlw	0
   481  01A4  3473               	retlw	115
   482  01A5  3400               	retlw	0
   483                           
   484                           ;initializer for _mojh
   485  01A6  3476               	retlw	118
   486  01A7  3400               	retlw	0
   487  01A8  3438               	retlw	56
   488  01A9  3400               	retlw	0
   489                           
   490                           	psect	idataBANK2
   491  010E                     __pidataBANK2:
   492                           
   493                           ;initializer for _samf
   494  010E  3471               	retlw	113
   495  010F  3400               	retlw	0
   496  0110  3479               	retlw	121
   497  0111  3400               	retlw	0
   498  0112  345E               	retlw	94
   499  0113  3400               	retlw	0
   500  0114  3458               	retlw	88
   501  0115  3400               	retlw	0
   502  0116  347C               	retlw	124
   503  0117  3400               	retlw	0
   504  0118  345F               	retlw	95
   505  0119  3400               	retlw	0
   506  011A  346F               	retlw	111
   507  011B  3400               	retlw	0
   508  011C  347F               	retlw	127
   509  011D  3400               	retlw	0
   510  011E  3427               	retlw	39
   511  011F  3400               	retlw	0
   512  0120  347D               	retlw	125
   513  0121  3400               	retlw	0
   514  0122  346D               	retlw	109
   515  0123  3400               	retlw	0
   516  0124  3466               	retlw	102
   517  0125  3400               	retlw	0
   518  0126  344F               	retlw	79
   519  0127  3400               	retlw	0
   520  0128  345B               	retlw	91
   521  0129  3400               	retlw	0
   522  012A  3406               	retlw	6
   523  012B  3400               	retlw	0
   524  012C  343F               	retlw	63
   525  012D  3400               	retlw	0
   526                           
   527                           ;initializer for _moji
   528  012E  345F               	retlw	95
   529  012F  3400               	retlw	0
   530  0130  347C               	retlw	124
   531  0131  3400               	retlw	0
   532  0132  3458               	retlw	88
   533  0133  3400               	retlw	0
   534  0134  345E               	retlw	94
   535  0135  3400               	retlw	0
   536  0136  3479               	retlw	121
   537  0137  3400               	retlw	0
   538  0138  3471               	retlw	113
   539  0139  3400               	retlw	0
   540  013A  3476               	retlw	118
   541  013B  3400               	retlw	0
   542  013C  3438               	retlw	56
   543  013D  3400               	retlw	0
   544  013E  3454               	retlw	84
   545  013F  3400               	retlw	0
   546  0140  3473               	retlw	115
   547  0141  3400               	retlw	0
   548                           
   549                           ;initializer for _mojf
   550  0142  3471               	retlw	113
   551  0143  3400               	retlw	0
   552  0144  3479               	retlw	121
   553  0145  3400               	retlw	0
   554  0146  345E               	retlw	94
   555  0147  3400               	retlw	0
   556  0148  3458               	retlw	88
   557  0149  3400               	retlw	0
   558  014A  347C               	retlw	124
   559  014B  3400               	retlw	0
   560  014C  345F               	retlw	95
   561  014D  3400               	retlw	0
   562                           
   563                           ;initializer for _moja
   564  014E  345F               	retlw	95
   565  014F  3400               	retlw	0
   566  0150  347C               	retlw	124
   567  0151  3400               	retlw	0
   568  0152  3458               	retlw	88
   569  0153  3400               	retlw	0
   570  0154  345E               	retlw	94
   571  0155  3400               	retlw	0
   572  0156  3479               	retlw	121
   573  0157  3400               	retlw	0
   574  0158  3471               	retlw	113
   575  0159  3400               	retlw	0
   576  000E                     _PORTC	set	14
   577  000D                     _PORTB	set	13
   578  000C                     _PORTA	set	12
   579  0061                     _RA1	set	97
   580  0060                     _RA0	set	96
   581  0062                     _RA2	set	98
   582  0077                     _RC7	set	119
   583  0072                     _RC2	set	114
   584  0071                     _RC1	set	113
   585  0070                     _RC0	set	112
   586  0076                     _RC6	set	118
   587  0075                     _RC5	set	117
   588  0099                     _OSCCON	set	153
   589  008E                     _TRISC	set	142
   590  008D                     _TRISB	set	141
   591  008C                     _TRISA	set	140
   592  018D                     _ANSELB	set	397
   593  018C                     _ANSELA	set	396
   594                           
   595                           	psect	cinit
   596  07DB                     start_initialization:	
   597                           ; #config settings
   598                           
   599  07DB                     __initialization:
   600                           
   601                           ; Initialize objects allocated to BANK1
   602  07DB  305A               	movlw	low __pidataBANK1
   603  07DC  0084               	movwf	4
   604  07DD  3081               	movlw	(high __pidataBANK1)| (0+128)
   605  07DE  0085               	movwf	5
   606  07DF  30A0               	movlw	low __pdataBANK1
   607  07E0  0086               	movwf	6
   608  07E1  3000               	movlw	high __pdataBANK1
   609  07E2  0087               	movwf	7
   610  07E3  3050               	movlw	80
   611  07E4  318F  27FA  3187   	fcall	init_ram
   612                           
   613                           ; Initialize objects allocated to BANK2
   614  07E7  300E               	movlw	low __pidataBANK2
   615  07E8  0084               	movwf	4
   616  07E9  3081               	movlw	(high __pidataBANK2)| (0+128)
   617  07EA  0085               	movwf	5
   618  07EB  3020               	movlw	low __pdataBANK2
   619  07EC  0086               	movwf	6
   620  07ED  3001               	movlw	high __pdataBANK2
   621  07EE  0087               	movwf	7
   622  07EF  304C               	movlw	76
   623  07F0  318F  27FA  3187   	fcall	init_ram
   624                           
   625                           ; Clear objects allocated to COMMON
   626  07F3  01FC               	clrf	__pbssCOMMON& (0+127)
   627  07F4  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   628                           
   629                           ; Clear objects allocated to BANK0
   630  07F5  3050               	movlw	low __pbssBANK0
   631  07F6  0084               	movwf	4
   632  07F7  3000               	movlw	high __pbssBANK0
   633  07F8  0085               	movwf	5
   634  07F9  3020               	movlw	32
   635  07FA  318F  27F4  3187   	fcall	clear_ram0
   636  07FD                     end_of_initialization:	
   637                           ;End of C runtime variable initialization code
   638                           
   639  07FD                     __end_of__initialization:
   640  07FD  0020               	movlb	0
   641  07FE  3185  2D91         	ljmp	_main	;jump to C main() function
   642                           
   643                           	psect	bssCOMMON
   644  007C                     __pbssCOMMON:
   645  007C                     _flag_sw3:
   646  007C                     	ds	2
   647                           
   648                           	psect	bssBANK0
   649  0050                     __pbssBANK0:
   650  0050                     _fugou:
   651  0050                     	ds	2
   652  0052                     _code1:
   653  0052                     	ds	2
   654  0054                     _code10:
   655  0054                     	ds	2
   656  0056                     _code100:
   657  0056                     	ds	2
   658  0058                     _code1000:
   659  0058                     	ds	2
   660  005A                     _count:
   661  005A                     	ds	2
   662  005C                     _atai:
   663  005C                     	ds	2
   664  005E                     _atai1:
   665  005E                     	ds	2
   666  0060                     _atai10:
   667  0060                     	ds	2
   668  0062                     _ccw:
   669  0062                     	ds	2
   670  0064                     _cw:
   671  0064                     	ds	2
   672  0066                     _flg:
   673  0066                     	ds	2
   674  0068                     _flag_P:
   675  0068                     	ds	2
   676  006A                     _flag_R:
   677  006A                     	ds	2
   678  006C                     _flag_sw2:
   679  006C                     	ds	2
   680  006E                     _flag_sw1:
   681  006E                     	ds	2
   682                           
   683                           	psect	dataBANK1
   684  00A0                     __pdataBANK1:
   685  00A0                     _samp:
   686  00A0                     	ds	32
   687  00C0                     _num0:
   688  00C0                     	ds	20
   689  00D4                     _kisu:
   690  00D4                     	ds	10
   691  00DE                     _gusu:
   692  00DE                     	ds	10
   693  00E8                     _mojn:
   694  00E8                     	ds	4
   695  00EC                     _mojh:
   696  00EC                     	ds	4
   697                           
   698                           	psect	dataBANK2
   699  0120                     __pdataBANK2:
   700  0120                     _samf:
   701  0120                     	ds	32
   702  0140                     _moji:
   703  0140                     	ds	20
   704  0154                     _mojf:
   705  0154                     	ds	12
   706  0160                     _moja:
   707  0160                     	ds	12
   708                           
   709                           	psect	inittext
   710  0FFA                     init_ram:
   711  0FFA  00FE               	movwf	btemp
   712  0FFB                     initloop:
   713  0FFB  0012               	moviw fsr0++
   714  0FFC  001E               	movwi fsr1++
   715  0FFD  0BFE               	decfsz	btemp,f
   716  0FFE  2FFB               	goto	initloop
   717  0FFF  3400               	retlw	0
   718                           
   719                           	psect	clrtext
   720  0FF4                     clear_ram0:	
   721                           ;	Called with FSR0 containing the base address, and
   722                           ;	WREG with the size to clear
   723                           
   724  0FF4  0064               	clrwdt	;clear the watchdog before getting into this loop
   725  0FF5                     clrloop0:
   726  0FF5  0180               	clrf	0	;clear RAM location pointed to by FSR
   727  0FF6  3101               	addfsr 0,1
   728  0FF7  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   729  0FF8  2FF5               	goto	clrloop0	;have we reached the end yet?
   730  0FF9  3400               	retlw	0	;all done for this memory range, return
   731                           
   732                           	psect	cstackCOMMON
   733  0070                     __pcstackCOMMON:
   734  0070                     ?_portinit:
   735  0070                     ??_portinit:	
   736                           ; 1 bytes @ 0x0
   737                           
   738  0070                     ?_zenoff:	
   739                           ; 1 bytes @ 0x0
   740                           
   741  0070                     ??_zenoff:	
   742                           ; 1 bytes @ 0x0
   743                           
   744  0070                     ?_dynam:	
   745                           ; 1 bytes @ 0x0
   746                           
   747  0070                     ?_tactsw:	
   748                           ; 1 bytes @ 0x0
   749                           
   750  0070                     ??_tactsw:	
   751                           ; 1 bytes @ 0x0
   752                           
   753  0070                     ?_fclr:	
   754                           ; 1 bytes @ 0x0
   755                           
   756  0070                     ?_main:	
   757                           ; 1 bytes @ 0x0
   758                           
   759  0070                     ?___wmul:	
   760                           ; 1 bytes @ 0x0
   761                           
   762  0070                     ?___awmod:	
   763                           ; 2 bytes @ 0x0
   764                           
   765  0070                     dynam@dig1data:	
   766                           ; 2 bytes @ 0x0
   767                           
   768  0070                     fclr@flg:	
   769                           ; 2 bytes @ 0x0
   770                           
   771  0070                     ___wmul@multiplier:	
   772                           ; 2 bytes @ 0x0
   773                           
   774  0070                     ___awmod@divisor:	
   775                           ; 2 bytes @ 0x0
   776                           
   777                           
   778                           ; 2 bytes @ 0x0
   779  0070                     	ds	2
   780  0072                     ??_fclr:
   781  0072                     dynam@dig2data:	
   782                           ; 1 bytes @ 0x2
   783                           
   784  0072                     tactsw@b:	
   785                           ; 2 bytes @ 0x2
   786                           
   787  0072                     ___wmul@multiplicand:	
   788                           ; 2 bytes @ 0x2
   789                           
   790  0072                     ___awmod@dividend:	
   791                           ; 2 bytes @ 0x2
   792                           
   793                           
   794                           ; 2 bytes @ 0x2
   795  0072                     	ds	2
   796  0074                     ??___wmul:
   797  0074                     ??___awmod:	
   798                           ; 1 bytes @ 0x4
   799                           
   800  0074                     dynam@smdata:	
   801                           ; 1 bytes @ 0x4
   802                           
   803  0074                     tactsw@c:	
   804                           ; 2 bytes @ 0x4
   805                           
   806  0074                     ___wmul@product:	
   807                           ; 2 bytes @ 0x4
   808                           
   809                           
   810                           ; 2 bytes @ 0x4
   811  0074                     	ds	1
   812  0075                     ___awmod@counter:
   813                           
   814                           ; 1 bytes @ 0x5
   815  0075                     	ds	1
   816  0076                     ?___awdiv:
   817  0076                     ___awmod@sign:	
   818                           ; 2 bytes @ 0x6
   819                           
   820  0076                     dynam@tr:	
   821                           ; 1 bytes @ 0x6
   822                           
   823  0076                     tactsw@a:	
   824                           ; 2 bytes @ 0x6
   825                           
   826  0076                     ___awdiv@divisor:	
   827                           ; 2 bytes @ 0x6
   828                           
   829                           
   830                           ; 2 bytes @ 0x6
   831  0076                     	ds	2
   832  0078                     ??_dynam:
   833  0078                     ?_tact:	
   834                           ; 1 bytes @ 0x8
   835                           
   836  0078                     ??_motor:	
   837                           ; 1 bytes @ 0x8
   838                           
   839  0078                     tact@mode:	
   840                           ; 1 bytes @ 0x8
   841                           
   842  0078                     motor@i:	
   843                           ; 2 bytes @ 0x8
   844                           
   845  0078                     ___awdiv@dividend:	
   846                           ; 2 bytes @ 0x8
   847                           
   848                           
   849                           ; 2 bytes @ 0x8
   850  0078                     	ds	2
   851  007A                     ??_tact:
   852  007A                     ??___awdiv:	
   853                           ; 1 bytes @ 0xA
   854                           
   855                           
   856                           ; 1 bytes @ 0xA
   857  007A                     	ds	1
   858  007B                     ??_main:
   859                           
   860                           ; 1 bytes @ 0xB
   861  007B                     	ds	1
   862                           
   863                           	psect	cstackBANK0
   864  0020                     __pcstackBANK0:
   865  0020                     ___awdiv@counter:
   866  0020                     dynam@smd:	
   867                           ; 1 bytes @ 0x0
   868                           
   869                           
   870                           ; 2 bytes @ 0x0
   871  0020                     	ds	1
   872  0021                     ___awdiv@sign:
   873                           
   874                           ; 1 bytes @ 0x1
   875  0021                     	ds	1
   876  0022                     dynam@tm:
   877  0022                     ___awdiv@quotient:	
   878                           ; 2 bytes @ 0x2
   879                           
   880                           
   881                           ; 2 bytes @ 0x2
   882  0022                     	ds	2
   883  0024                     ?_hen7:
   884  0024                     dynam@j:	
   885                           ; 1 bytes @ 0x4
   886                           
   887  0024                     hen7@value:	
   888                           ; 2 bytes @ 0x4
   889                           
   890                           
   891                           ; 2 bytes @ 0x4
   892  0024                     	ds	2
   893  0026                     dynam@ext:
   894  0026                     hen7@ns1:	
   895                           ; 2 bytes @ 0x6
   896                           
   897                           
   898                           ; 2 bytes @ 0x6
   899  0026                     	ds	2
   900  0028                     ??_hen7:
   901  0028                     ?_motor:	
   902                           ; 1 bytes @ 0x8
   903                           
   904  0028                     motor@kakudo:	
   905                           ; 1 bytes @ 0x8
   906                           
   907                           
   908                           ; 2 bytes @ 0x8
   909  0028                     	ds	2
   910  002A                     motor@dig1data:
   911                           
   912                           ; 2 bytes @ 0xA
   913  002A                     	ds	2
   914  002C                     hen7@value1:
   915  002C                     motor@dig2data:	
   916                           ; 2 bytes @ 0xC
   917                           
   918                           
   919                           ; 2 bytes @ 0xC
   920  002C                     	ds	2
   921  002E                     hen7@value10:
   922  002E                     motor@smdata:	
   923                           ; 2 bytes @ 0xE
   924                           
   925                           
   926                           ; 2 bytes @ 0xE
   927  002E                     	ds	2
   928  0030                     hen7@value100:
   929  0030                     motor@tr:	
   930                           ; 2 bytes @ 0x10
   931                           
   932                           
   933                           ; 2 bytes @ 0x10
   934  0030                     	ds	2
   935  0032                     hen7@l:
   936                           
   937                           ; 2 bytes @ 0x12
   938  0032                     	ds	2
   939  0034                     hen7@m:
   940                           
   941                           ; 2 bytes @ 0x14
   942  0034                     	ds	2
   943  0036                     hen7@n:
   944                           
   945                           ; 2 bytes @ 0x16
   946  0036                     	ds	14
   947  0044                     main@ataiL:
   948                           
   949                           ; 2 bytes @ 0x24
   950  0044                     	ds	2
   951  0046                     main@ataiR:
   952                           
   953                           ; 2 bytes @ 0x26
   954  0046                     	ds	2
   955  0048                     main@ans:
   956                           
   957                           ; 2 bytes @ 0x28
   958  0048                     	ds	2
   959  004A                     main@zyoutai:
   960                           
   961                           ; 2 bytes @ 0x2A
   962  004A                     	ds	2
   963  004C                     main@segL:
   964                           
   965                           ; 2 bytes @ 0x2C
   966  004C                     	ds	2
   967  004E                     main@segR:
   968                           
   969                           ; 2 bytes @ 0x2E
   970  004E                     	ds	2
   971                           
   972                           	psect	maintext
   973  0591                     __pmaintext:	
   974 ;;
   975 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   976 ;;
   977 ;; *************** function _main *****************
   978 ;; Defined at:
   979 ;;		line 519 in file "Q5.c"
   980 ;; Parameters:    Size  Location     Type
   981 ;;		None
   982 ;; Auto vars:     Size  Location     Type
   983 ;;  segR            2   46[BANK0 ] unsigned short 
   984 ;;  segL            2   44[BANK0 ] unsigned short 
   985 ;;  zyoutai         2   42[BANK0 ] int 
   986 ;;  ans             2   40[BANK0 ] int 
   987 ;;  ataiR           2   38[BANK0 ] int 
   988 ;;  ataiL           2   36[BANK0 ] int 
   989 ;;  time            2    0        int 
   990 ;;  n               2    0        int 
   991 ;;  m               2    0        int 
   992 ;;  k               2    0        int 
   993 ;;  j               2    0        int 
   994 ;;  i               2    0        int 
   995 ;; Return value:  Size  Location     Type
   996 ;;                  1    wreg      void 
   997 ;; Registers used:
   998 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   999 ;; Tracked objects:
  1000 ;;		On entry : B1F/0
  1001 ;;		On exit  : 0/0
  1002 ;;		Unchanged: 0/0
  1003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1005 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1006 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1007 ;;      Totals:         1      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1008 ;;Total ram usage:       25 bytes
  1009 ;; Hardware stack levels required when called:    2
  1010 ;; This function calls:
  1011 ;;		___awdiv
  1012 ;;		___wmul
  1013 ;;		_dynam
  1014 ;;		_fclr
  1015 ;;		_hen7
  1016 ;;		_motor
  1017 ;;		_portinit
  1018 ;;		_tact
  1019 ;;		_zenoff
  1020 ;; This function is called by:
  1021 ;;		Startup code after reset
  1022 ;; This function uses a non-reentrant model
  1023 ;;
  1024                           
  1025                           
  1026                           ;psect for function _main
  1027  0591                     _main:
  1028  0591                     l2590:	
  1029                           ;incstack = 0
  1030                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1031                           
  1032                           
  1033                           ;Q5.c: 522:     OSCCON=0x7A;
  1034  0591  307A               	movlw	122
  1035  0592  0021               	movlb	1	; select bank1
  1036  0593  0099               	movwf	25	;volatile
  1037  0594                     l2592:
  1038                           
  1039                           ;Q5.c: 524:     portinit();
  1040  0594  3180  200F  3185   	fcall	_portinit
  1041                           
  1042                           ;Q5.c: 526:     zenoff();
  1043  0597  3180  2006  3185   	fcall	_zenoff
  1044  059A                     l2594:
  1045  059A                     l2596:
  1046  059A                     l2598:
  1047  059A                     l2600:
  1048  059A                     l2602:
  1049  059A                     l288:	
  1050                           ;Q5.c: 531:     while((RA0!=1)||(RA1!=1)||(RA2!=1));
  1051                           
  1052  059A  0020               	movlb	0	; select bank0
  1053  059B  1C0C               	btfss	12,0	;volatile
  1054  059C  2D9E               	goto	u2571
  1055  059D  2D9F               	goto	u2570
  1056  059E                     u2571:
  1057  059E  2D9A               	goto	l288
  1058  059F                     u2570:
  1059  059F                     l2604:
  1060  059F  1C8C               	btfss	12,1	;volatile
  1061  05A0  2DA2               	goto	u2581
  1062  05A1  2DA3               	goto	u2580
  1063  05A2                     u2581:
  1064  05A2  2D9A               	goto	l288
  1065  05A3                     u2580:
  1066  05A3                     l2606:
  1067  05A3  1D0C               	btfss	12,2	;volatile
  1068  05A4  2DA6               	goto	u2591
  1069  05A5  2DA7               	goto	u2590
  1070  05A6                     u2591:
  1071  05A6  2D9A               	goto	l288
  1072  05A7                     u2590:
  1073  05A7                     l290:
  1074                           
  1075                           ;Q5.c: 534:     RC0=RC2=RC1=1;
  1076  05A7  148E               	bsf	14,1	;volatile
  1077  05A8  188E               	btfsc	14,1	;volatile
  1078  05A9  2DAB               	goto	u2601
  1079  05AA  2DAE               	goto	u2600
  1080  05AB                     u2601:
  1081  05AB  0020               	movlb	0	; select bank0
  1082  05AC  150E               	bsf	14,2	;volatile
  1083  05AD  2DB0               	goto	u2614
  1084  05AE                     u2600:
  1085  05AE  0020               	movlb	0	; select bank0
  1086  05AF  110E               	bcf	14,2	;volatile
  1087  05B0                     u2614:
  1088  05B0  190E               	btfsc	14,2	;volatile
  1089  05B1  2DB3               	goto	u2611
  1090  05B2  2DB6               	goto	u2610
  1091  05B3                     u2611:
  1092  05B3  0020               	movlb	0	; select bank0
  1093  05B4  140E               	bsf	14,0	;volatile
  1094  05B5  2DB8               	goto	u2624
  1095  05B6                     u2610:
  1096  05B6  0020               	movlb	0	; select bank0
  1097  05B7  100E               	bcf	14,0	;volatile
  1098  05B8                     u2624:
  1099  05B8                     l2608:
  1100                           
  1101                           ;Q5.c: 537:     fclr(2);
  1102  05B8  3002               	movlw	2
  1103  05B9  00F0               	movwf	fclr@flg
  1104  05BA  3000               	movlw	0
  1105  05BB  00F1               	movwf	fclr@flg+1
  1106  05BC  3180  2041  3185   	fcall	_fclr
  1107  05BF                     l2610:
  1108  05BF                     l2612:
  1109                           
  1110                           ;Q5.c: 550:     unsigned short segL = 0;
  1111  05BF  0020               	movlb	0	; select bank0
  1112  05C0  01CC               	clrf	main@segL
  1113  05C1  01CD               	clrf	main@segL+1
  1114  05C2                     l2614:
  1115                           
  1116                           ;Q5.c: 551:     unsigned short segR = 0;
  1117  05C2  01CE               	clrf	main@segR
  1118  05C3  01CF               	clrf	main@segR+1
  1119  05C4                     l2616:
  1120                           
  1121                           ;Q5.c: 553:     int ataiL = 0;
  1122  05C4  01C4               	clrf	main@ataiL
  1123  05C5  01C5               	clrf	main@ataiL+1
  1124  05C6                     l2618:
  1125                           
  1126                           ;Q5.c: 554:     int ataiR = 0;
  1127  05C6  01C6               	clrf	main@ataiR
  1128  05C7  01C7               	clrf	main@ataiR+1
  1129  05C8                     l2620:
  1130                           
  1131                           ;Q5.c: 556:     int zyoutai = 0;
  1132  05C8  01CA               	clrf	main@zyoutai
  1133  05C9  01CB               	clrf	main@zyoutai+1
  1134  05CA                     l2622:
  1135  05CA                     l2624:
  1136                           
  1137                           ;Q5.c: 572:         dynam(segL,segR,0,0);
  1138  05CA  084D               	movf	main@segL+1,w
  1139  05CB  00F1               	movwf	dynam@dig1data+1
  1140  05CC  084C               	movf	main@segL,w
  1141  05CD  00F0               	movwf	dynam@dig1data
  1142  05CE  084F               	movf	main@segR+1,w
  1143  05CF  00F3               	movwf	dynam@dig2data+1
  1144  05D0  084E               	movf	main@segR,w
  1145  05D1  00F2               	movwf	dynam@dig2data
  1146  05D2  3000               	movlw	0
  1147  05D3  00F4               	movwf	dynam@smdata
  1148  05D4  00F5               	movwf	dynam@smdata+1
  1149  05D5  3000               	movlw	0
  1150  05D6  00F6               	movwf	dynam@tr
  1151  05D7  00F7               	movwf	dynam@tr+1
  1152  05D8  3182  225D  3185   	fcall	_dynam
  1153  05DB                     l2626:
  1154                           
  1155                           ;Q5.c: 575:         if(RA0 == 0 && RA1 == 1){
  1156  05DB  0020               	movlb	0	; select bank0
  1157  05DC  180C               	btfsc	12,0	;volatile
  1158  05DD  2DDF               	goto	u2631
  1159  05DE  2DE0               	goto	u2630
  1160  05DF                     u2631:
  1161  05DF  2E2A               	goto	l2650
  1162  05E0                     u2630:
  1163  05E0                     l2628:
  1164  05E0  1C8C               	btfss	12,1	;volatile
  1165  05E1  2DE3               	goto	u2641
  1166  05E2  2DE4               	goto	u2640
  1167  05E3                     u2641:
  1168  05E3  2E2A               	goto	l2650
  1169  05E4                     u2640:
  1170  05E4                     l2630:
  1171                           
  1172                           ;Q5.c: 577:             if(segL == 0 && segR == 0){
  1173  05E4  084C               	movf	main@segL,w
  1174  05E5  044D               	iorwf	main@segL+1,w
  1175  05E6  1D03               	btfss	3,2
  1176  05E7  2DE9               	goto	u2651
  1177  05E8  2DEA               	goto	u2650
  1178  05E9                     u2651:
  1179  05E9  2DF8               	goto	l2636
  1180  05EA                     u2650:
  1181  05EA                     l2632:
  1182  05EA  084E               	movf	main@segR,w
  1183  05EB  044F               	iorwf	main@segR+1,w
  1184  05EC  1D03               	btfss	3,2
  1185  05ED  2DEF               	goto	u2661
  1186  05EE  2DF0               	goto	u2660
  1187  05EF                     u2661:
  1188  05EF  2DF8               	goto	l2636
  1189  05F0                     u2660:
  1190  05F0                     l2634:
  1191                           
  1192                           ;Q5.c: 578:                 segL = 0x40;
  1193  05F0  3040               	movlw	64
  1194  05F1  00CC               	movwf	main@segL
  1195  05F2  3000               	movlw	0
  1196  05F3  00CD               	movwf	main@segL+1
  1197                           
  1198                           ;Q5.c: 579:                 segR = 0x40;
  1199  05F4  3040               	movlw	64
  1200  05F5  00CE               	movwf	main@segR
  1201  05F6  3000               	movlw	0
  1202  05F7  00CF               	movwf	main@segR+1
  1203  05F8                     l2636:
  1204                           
  1205                           ;Q5.c: 585:             tact(2);
  1206  05F8  3002               	movlw	2
  1207  05F9  00F8               	movwf	tact@mode
  1208  05FA  3000               	movlw	0
  1209  05FB  00F9               	movwf	tact@mode+1
  1210  05FC  3180  20C2  3185   	fcall	_tact
  1211  05FF                     l2638:
  1212                           
  1213                           ;Q5.c: 586:             if(((flag_sw3==0)&&(flag_P==1))){
  1214  05FF  087C               	movf	_flag_sw3,w
  1215  0600  047D               	iorwf	_flag_sw3+1,w
  1216  0601  1D03               	btfss	3,2
  1217  0602  2E04               	goto	u2671
  1218  0603  2E05               	goto	u2670
  1219  0604                     u2671:
  1220  0604  2E2A               	goto	l2650
  1221  0605                     u2670:
  1222  0605                     l2640:
  1223  0605  0020               	movlb	0	; select bank0
  1224  0606  0368               	decf	_flag_P,w
  1225  0607  0469               	iorwf	_flag_P+1,w
  1226  0608  1D03               	btfss	3,2
  1227  0609  2E0B               	goto	u2681
  1228  060A  2E0C               	goto	u2680
  1229  060B                     u2681:
  1230  060B  2E2A               	goto	l2650
  1231  060C                     u2680:
  1232  060C                     l2642:
  1233                           
  1234                           ;Q5.c: 587:                 fclr(2);
  1235  060C  3002               	movlw	2
  1236  060D  00F0               	movwf	fclr@flg
  1237  060E  3000               	movlw	0
  1238  060F  00F1               	movwf	fclr@flg+1
  1239  0610  3180  2041  3185   	fcall	_fclr
  1240  0613                     l2644:
  1241                           
  1242                           ;Q5.c: 589:                 if(ataiL == 0){
  1243  0613  0020               	movlb	0	; select bank0
  1244  0614  0844               	movf	main@ataiL,w
  1245  0615  0445               	iorwf	main@ataiL+1,w
  1246  0616  1D03               	btfss	3,2
  1247  0617  2E19               	goto	u2691
  1248  0618  2E1A               	goto	u2690
  1249  0619                     u2691:
  1250  0619  2E1E               	goto	l296
  1251  061A                     u2690:
  1252  061A                     l2646:
  1253                           
  1254                           ;Q5.c: 590:                     ataiL = 10;
  1255  061A  300A               	movlw	10
  1256  061B  00C4               	movwf	main@ataiL
  1257  061C  3000               	movlw	0
  1258  061D  00C5               	movwf	main@ataiL+1
  1259  061E                     l296:	
  1260                           ;Q5.c: 591:                 }
  1261                           
  1262                           
  1263                           ;Q5.c: 593:                 ataiL--;
  1264  061E  30FF               	movlw	255
  1265  061F  07C4               	addwf	main@ataiL,f
  1266  0620  30FF               	movlw	255
  1267  0621  3DC5               	addwfc	main@ataiL+1,f
  1268  0622                     l2648:
  1269                           
  1270                           ;Q5.c: 597:                 segL = num0[ataiL];
  1271  0622  3544               	lslf	main@ataiL,w
  1272  0623  3EC0               	addlw	(low (_num0| 0))& (0+255)
  1273  0624  0086               	movwf	6
  1274  0625  0187               	clrf	7
  1275  0626  3F40               	moviw [0]fsr1
  1276  0627  00CC               	movwf	main@segL
  1277  0628  3F41               	moviw [1]fsr1
  1278  0629  00CD               	movwf	main@segL+1
  1279  062A                     l2650:
  1280                           
  1281                           ;Q5.c: 603:         if(RA0 == 1 && RA1 == 1 && segL != 0x40 && zyoutai == 0){
  1282  062A  0020               	movlb	0	; select bank0
  1283  062B  1C0C               	btfss	12,0	;volatile
  1284  062C  2E2E               	goto	u2701
  1285  062D  2E2F               	goto	u2700
  1286  062E                     u2701:
  1287  062E  2E82               	goto	l2676
  1288  062F                     u2700:
  1289  062F                     l2652:
  1290  062F  1C8C               	btfss	12,1	;volatile
  1291  0630  2E32               	goto	u2711
  1292  0631  2E33               	goto	u2710
  1293  0632                     u2711:
  1294  0632  2E82               	goto	l2676
  1295  0633                     u2710:
  1296  0633                     l2654:
  1297  0633  3040               	movlw	64
  1298  0634  064C               	xorwf	main@segL,w
  1299  0635  044D               	iorwf	main@segL+1,w
  1300  0636  1903               	btfsc	3,2
  1301  0637  2E39               	goto	u2721
  1302  0638  2E3A               	goto	u2720
  1303  0639                     u2721:
  1304  0639  2E82               	goto	l2676
  1305  063A                     u2720:
  1306  063A                     l2656:
  1307  063A  084A               	movf	main@zyoutai,w
  1308  063B  044B               	iorwf	main@zyoutai+1,w
  1309  063C  1D03               	btfss	3,2
  1310  063D  2E3F               	goto	u2731
  1311  063E  2E40               	goto	u2730
  1312  063F                     u2731:
  1313  063F  2E82               	goto	l2676
  1314  0640                     u2730:
  1315  0640                     l2658:
  1316                           
  1317                           ;Q5.c: 605:             if(segR == 0x40){
  1318  0640  3040               	movlw	64
  1319  0641  064E               	xorwf	main@segR,w
  1320  0642  044F               	iorwf	main@segR+1,w
  1321  0643  1D03               	btfss	3,2
  1322  0644  2E46               	goto	u2741
  1323  0645  2E47               	goto	u2740
  1324  0646                     u2741:
  1325  0646  2E4F               	goto	l2662
  1326  0647                     u2740:
  1327  0647                     l2660:
  1328                           
  1329                           ;Q5.c: 606:                 segR = num0[0];
  1330  0647  0021               	movlb	1	; select bank1
  1331  0648  0841               	movf	(_num0+1)^(0+128),w
  1332  0649  0020               	movlb	0	; select bank0
  1333  064A  00CF               	movwf	main@segR+1
  1334  064B  0021               	movlb	1	; select bank1
  1335  064C  0840               	movf	_num0^(0+128),w
  1336  064D  0020               	movlb	0	; select bank0
  1337  064E  00CE               	movwf	main@segR
  1338  064F                     l2662:
  1339                           
  1340                           ;Q5.c: 609:             tact(2);
  1341  064F  3002               	movlw	2
  1342  0650  00F8               	movwf	tact@mode
  1343  0651  3000               	movlw	0
  1344  0652  00F9               	movwf	tact@mode+1
  1345  0653  3180  20C2  3185   	fcall	_tact
  1346  0656                     l2664:
  1347                           
  1348                           ;Q5.c: 610:             if(((flag_sw3==0)&&(flag_P==1))){
  1349  0656  087C               	movf	_flag_sw3,w
  1350  0657  047D               	iorwf	_flag_sw3+1,w
  1351  0658  1D03               	btfss	3,2
  1352  0659  2E5B               	goto	u2751
  1353  065A  2E5C               	goto	u2750
  1354  065B                     u2751:
  1355  065B  2E82               	goto	l2676
  1356  065C                     u2750:
  1357  065C                     l2666:
  1358  065C  0020               	movlb	0	; select bank0
  1359  065D  0368               	decf	_flag_P,w
  1360  065E  0469               	iorwf	_flag_P+1,w
  1361  065F  1D03               	btfss	3,2
  1362  0660  2E62               	goto	u2761
  1363  0661  2E63               	goto	u2760
  1364  0662                     u2761:
  1365  0662  2E82               	goto	l2676
  1366  0663                     u2760:
  1367  0663                     l2668:
  1368                           
  1369                           ;Q5.c: 611:                 fclr(2);
  1370  0663  3002               	movlw	2
  1371  0664  00F0               	movwf	fclr@flg
  1372  0665  3000               	movlw	0
  1373  0666  00F1               	movwf	fclr@flg+1
  1374  0667  3180  2041  3185   	fcall	_fclr
  1375  066A                     l2670:
  1376                           
  1377                           ;Q5.c: 613:                 if(ataiR == 9){
  1378  066A  3009               	movlw	9
  1379  066B  0020               	movlb	0	; select bank0
  1380  066C  0646               	xorwf	main@ataiR,w
  1381  066D  0447               	iorwf	main@ataiR+1,w
  1382  066E  1D03               	btfss	3,2
  1383  066F  2E71               	goto	u2771
  1384  0670  2E72               	goto	u2770
  1385  0671                     u2771:
  1386  0671  2E76               	goto	l300
  1387  0672                     u2770:
  1388  0672                     l2672:
  1389                           
  1390                           ;Q5.c: 614:                     ataiR = -1;
  1391  0672  30FF               	movlw	255
  1392  0673  00C6               	movwf	main@ataiR
  1393  0674  30FF               	movlw	255
  1394  0675  00C7               	movwf	main@ataiR+1
  1395  0676                     l300:	
  1396                           ;Q5.c: 615:                 }
  1397                           
  1398                           
  1399                           ;Q5.c: 617:                 ataiR++;
  1400  0676  3001               	movlw	1
  1401  0677  07C6               	addwf	main@ataiR,f
  1402  0678  3000               	movlw	0
  1403  0679  3DC7               	addwfc	main@ataiR+1,f
  1404  067A                     l2674:
  1405                           
  1406                           ;Q5.c: 621:                 segR = num0[ataiR];
  1407  067A  3546               	lslf	main@ataiR,w
  1408  067B  3EC0               	addlw	(low (_num0| 0))& (0+255)
  1409  067C  0086               	movwf	6
  1410  067D  0187               	clrf	7
  1411  067E  3F40               	moviw [0]fsr1
  1412  067F  00CE               	movwf	main@segR
  1413  0680  3F41               	moviw [1]fsr1
  1414  0681  00CF               	movwf	main@segR+1
  1415  0682                     l2676:
  1416                           
  1417                           ;Q5.c: 627:         if(RA0 ==1 && RA1 == 0 && segR != 0x40 && segL != 0x40 && segR != 0 
      +                          && segL != 0 && zyoutai == 0){
  1418  0682  0020               	movlb	0	; select bank0
  1419  0683  1C0C               	btfss	12,0	;volatile
  1420  0684  2E86               	goto	u2781
  1421  0685  2E87               	goto	u2780
  1422  0686                     u2781:
  1423  0686  2EAF               	goto	l2692
  1424  0687                     u2780:
  1425  0687                     l2678:
  1426  0687  188C               	btfsc	12,1	;volatile
  1427  0688  2E8A               	goto	u2791
  1428  0689  2E8B               	goto	u2790
  1429  068A                     u2791:
  1430  068A  2EAF               	goto	l2692
  1431  068B                     u2790:
  1432  068B                     l2680:
  1433  068B  3040               	movlw	64
  1434  068C  064E               	xorwf	main@segR,w
  1435  068D  044F               	iorwf	main@segR+1,w
  1436  068E  1903               	btfsc	3,2
  1437  068F  2E91               	goto	u2801
  1438  0690  2E92               	goto	u2800
  1439  0691                     u2801:
  1440  0691  2EAF               	goto	l2692
  1441  0692                     u2800:
  1442  0692                     l2682:
  1443  0692  3040               	movlw	64
  1444  0693  064C               	xorwf	main@segL,w
  1445  0694  044D               	iorwf	main@segL+1,w
  1446  0695  1903               	btfsc	3,2
  1447  0696  2E98               	goto	u2811
  1448  0697  2E99               	goto	u2810
  1449  0698                     u2811:
  1450  0698  2EAF               	goto	l2692
  1451  0699                     u2810:
  1452  0699                     l2684:
  1453  0699  084E               	movf	main@segR,w
  1454  069A  044F               	iorwf	main@segR+1,w
  1455  069B  1903               	btfsc	3,2
  1456  069C  2E9E               	goto	u2821
  1457  069D  2E9F               	goto	u2820
  1458  069E                     u2821:
  1459  069E  2EAF               	goto	l2692
  1460  069F                     u2820:
  1461  069F                     l2686:
  1462  069F  084C               	movf	main@segL,w
  1463  06A0  044D               	iorwf	main@segL+1,w
  1464  06A1  1903               	btfsc	3,2
  1465  06A2  2EA4               	goto	u2831
  1466  06A3  2EA5               	goto	u2830
  1467  06A4                     u2831:
  1468  06A4  2EAF               	goto	l2692
  1469  06A5                     u2830:
  1470  06A5                     l2688:
  1471  06A5  084A               	movf	main@zyoutai,w
  1472  06A6  044B               	iorwf	main@zyoutai+1,w
  1473  06A7  1D03               	btfss	3,2
  1474  06A8  2EAA               	goto	u2841
  1475  06A9  2EAB               	goto	u2840
  1476  06AA                     u2841:
  1477  06AA  2EAF               	goto	l2692
  1478  06AB                     u2840:
  1479  06AB                     l2690:
  1480                           
  1481                           ;Q5.c: 628:             zyoutai = 1;
  1482  06AB  3001               	movlw	1
  1483  06AC  00CA               	movwf	main@zyoutai
  1484  06AD  3000               	movlw	0
  1485  06AE  00CB               	movwf	main@zyoutai+1
  1486  06AF                     l2692:
  1487                           
  1488                           ;Q5.c: 631:         if(RA0 ==1 && RA1 == 1 && segR != 0x40 && segL != 0x40 && segR != 0 
      +                          && segL != 0 && zyoutai == 1){
  1489  06AF  1C0C               	btfss	12,0	;volatile
  1490  06B0  2EB2               	goto	u2851
  1491  06B1  2EB3               	goto	u2850
  1492  06B2                     u2851:
  1493  06B2  2FA3               	goto	l2750
  1494  06B3                     u2850:
  1495  06B3                     l2694:
  1496  06B3  1C8C               	btfss	12,1	;volatile
  1497  06B4  2EB6               	goto	u2861
  1498  06B5  2EB7               	goto	u2860
  1499  06B6                     u2861:
  1500  06B6  2FA3               	goto	l2750
  1501  06B7                     u2860:
  1502  06B7                     l2696:
  1503  06B7  3040               	movlw	64
  1504  06B8  064E               	xorwf	main@segR,w
  1505  06B9  044F               	iorwf	main@segR+1,w
  1506  06BA  1903               	btfsc	3,2
  1507  06BB  2EBD               	goto	u2871
  1508  06BC  2EBE               	goto	u2870
  1509  06BD                     u2871:
  1510  06BD  2FA3               	goto	l2750
  1511  06BE                     u2870:
  1512  06BE                     l2698:
  1513  06BE  3040               	movlw	64
  1514  06BF  064C               	xorwf	main@segL,w
  1515  06C0  044D               	iorwf	main@segL+1,w
  1516  06C1  1903               	btfsc	3,2
  1517  06C2  2EC4               	goto	u2881
  1518  06C3  2EC5               	goto	u2880
  1519  06C4                     u2881:
  1520  06C4  2FA3               	goto	l2750
  1521  06C5                     u2880:
  1522  06C5                     l2700:
  1523  06C5  084E               	movf	main@segR,w
  1524  06C6  044F               	iorwf	main@segR+1,w
  1525  06C7  1903               	btfsc	3,2
  1526  06C8  2ECA               	goto	u2891
  1527  06C9  2ECB               	goto	u2890
  1528  06CA                     u2891:
  1529  06CA  2FA3               	goto	l2750
  1530  06CB                     u2890:
  1531  06CB                     l2702:
  1532  06CB  084C               	movf	main@segL,w
  1533  06CC  044D               	iorwf	main@segL+1,w
  1534  06CD  1903               	btfsc	3,2
  1535  06CE  2ED0               	goto	u2901
  1536  06CF  2ED1               	goto	u2900
  1537  06D0                     u2901:
  1538  06D0  2FA3               	goto	l2750
  1539  06D1                     u2900:
  1540  06D1                     l2704:
  1541  06D1  034A               	decf	main@zyoutai,w
  1542  06D2  044B               	iorwf	main@zyoutai+1,w
  1543  06D3  1D03               	btfss	3,2
  1544  06D4  2ED6               	goto	u2911
  1545  06D5  2ED7               	goto	u2910
  1546  06D6                     u2911:
  1547  06D6  2FA3               	goto	l2750
  1548  06D7                     u2910:
  1549  06D7                     l2706:
  1550  06D7                     l2708:
  1551                           
  1552                           ;Q5.c: 635:             ans = ataiL*ataiR;
  1553  06D7  0845               	movf	main@ataiL+1,w
  1554  06D8  00F1               	movwf	___wmul@multiplier+1
  1555  06D9  0844               	movf	main@ataiL,w
  1556  06DA  00F0               	movwf	___wmul@multiplier
  1557  06DB  0847               	movf	main@ataiR+1,w
  1558  06DC  00F3               	movwf	___wmul@multiplicand+1
  1559  06DD  0846               	movf	main@ataiR,w
  1560  06DE  00F2               	movwf	___wmul@multiplicand
  1561  06DF  3180  2022  3185   	fcall	___wmul
  1562  06E2  0871               	movf	?___wmul+1,w
  1563  06E3  0020               	movlb	0	; select bank0
  1564  06E4  00C9               	movwf	main@ans+1
  1565  06E5  0870               	movf	?___wmul,w
  1566  06E6  00C8               	movwf	main@ans
  1567  06E7                     l2710:
  1568                           
  1569                           ;Q5.c: 637:             hen7(ans,10);
  1570  06E7  0849               	movf	main@ans+1,w
  1571  06E8  00A5               	movwf	hen7@value+1
  1572  06E9  0848               	movf	main@ans,w
  1573  06EA  00A4               	movwf	hen7@value
  1574  06EB  300A               	movlw	10
  1575  06EC  00A6               	movwf	hen7@ns1
  1576  06ED  3000               	movlw	0
  1577  06EE  00A7               	movwf	hen7@ns1+1
  1578  06EF  3183  23C7  3185   	fcall	_hen7
  1579  06F2                     l2712:
  1580                           
  1581                           ;Q5.c: 638:             if(ans/10 > 1){
  1582  06F2  300A               	movlw	10
  1583  06F3  00F6               	movwf	___awdiv@divisor
  1584  06F4  3000               	movlw	0
  1585  06F5  00F7               	movwf	___awdiv@divisor+1
  1586  06F6  0020               	movlb	0	; select bank0
  1587  06F7  0849               	movf	main@ans+1,w
  1588  06F8  00F9               	movwf	___awdiv@dividend+1
  1589  06F9  0848               	movf	main@ans,w
  1590  06FA  00F8               	movwf	___awdiv@dividend
  1591  06FB  3181  21FD  3185   	fcall	___awdiv
  1592  06FE  0877               	movf	?___awdiv+1,w
  1593  06FF  3A80               	xorlw	128
  1594  0700  00FB               	movwf	??_main
  1595  0701  3080               	movlw	128
  1596  0702  027B               	subwf	??_main,w
  1597  0703  1D03               	skipz
  1598  0704  2F07               	goto	u2925
  1599  0705  3002               	movlw	2
  1600  0706  0276               	subwf	?___awdiv,w
  1601  0707                     u2925:
  1602  0707  1C03               	skipc
  1603  0708  2F0A               	goto	u2921
  1604  0709  2F0B               	goto	u2920
  1605  070A                     u2921:
  1606  070A  2F11               	goto	l2716
  1607  070B                     u2920:
  1608  070B                     l2714:
  1609                           
  1610                           ;Q5.c: 639:                 segL = code10;
  1611  070B  0020               	movlb	0	; select bank0
  1612  070C  0855               	movf	_code10+1,w
  1613  070D  00CD               	movwf	main@segL+1
  1614  070E  0854               	movf	_code10,w
  1615  070F  00CC               	movwf	main@segL
  1616                           
  1617                           ;Q5.c: 640:             }else{
  1618  0710  2F14               	goto	l2718
  1619  0711                     l2716:
  1620                           
  1621                           ;Q5.c: 641:                 segL = 0;
  1622  0711  0020               	movlb	0	; select bank0
  1623  0712  01CC               	clrf	main@segL
  1624  0713  01CD               	clrf	main@segL+1
  1625  0714                     l2718:
  1626                           
  1627                           ;Q5.c: 644:             segR = code1;
  1628  0714  0853               	movf	_code1+1,w
  1629  0715  00CF               	movwf	main@segR+1
  1630  0716  0852               	movf	_code1,w
  1631  0717  00CE               	movwf	main@segR
  1632  0718                     l2720:
  1633  0718                     l2722:	
  1634                           ;Q5.c: 647:             if(zyoutai == 0){
  1635                           
  1636                           
  1637                           ;Q5.c: 648:                 zyoutai = 2;
  1638  0718  3002               	movlw	2
  1639  0719  00CA               	movwf	main@zyoutai
  1640  071A  3000               	movlw	0
  1641  071B  00CB               	movwf	main@zyoutai+1
  1642  071C                     l2724:
  1643                           
  1644                           ;Q5.c: 652:             if(ans%2 == 1 && zyoutai == 2){
  1645  071C  1C48               	btfss	main@ans,0
  1646  071D  2F1F               	goto	u2931
  1647  071E  2F20               	goto	u2930
  1648  071F                     u2931:
  1649  071F  2F3B               	goto	l2732
  1650  0720                     u2930:
  1651  0720                     l2726:
  1652  0720                     l2728:
  1653                           
  1654                           ;Q5.c: 653:                 zyoutai = 3;
  1655  0720  3003               	movlw	3
  1656  0721  00CA               	movwf	main@zyoutai
  1657  0722  3000               	movlw	0
  1658  0723  00CB               	movwf	main@zyoutai+1
  1659  0724                     l2730:
  1660                           
  1661                           ;Q5.c: 655:                 motor(360,segL,segR,1,1);
  1662  0724  3068               	movlw	104
  1663  0725  00A8               	movwf	motor@kakudo
  1664  0726  3001               	movlw	1
  1665  0727  00A9               	movwf	motor@kakudo+1
  1666  0728  084D               	movf	main@segL+1,w
  1667  0729  00AB               	movwf	motor@dig1data+1
  1668  072A  084C               	movf	main@segL,w
  1669  072B  00AA               	movwf	motor@dig1data
  1670  072C  084F               	movf	main@segR+1,w
  1671  072D  00AD               	movwf	motor@dig2data+1
  1672  072E  084E               	movf	main@segR,w
  1673  072F  00AC               	movwf	motor@dig2data
  1674  0730  3001               	movlw	1
  1675  0731  00AE               	movwf	motor@smdata
  1676  0732  3000               	movlw	0
  1677  0733  00AF               	movwf	motor@smdata+1
  1678  0734  3001               	movlw	1
  1679  0735  00B0               	movwf	motor@tr
  1680  0736  3000               	movlw	0
  1681  0737  00B1               	movwf	motor@tr+1
  1682  0738  3180  2061  3185   	fcall	_motor
  1683  073B                     l2732:
  1684                           
  1685                           ;Q5.c: 660:             if(ans == 0 && zyoutai == 2){
  1686  073B  0020               	movlb	0	; select bank0
  1687  073C  0848               	movf	main@ans,w
  1688  073D  0449               	iorwf	main@ans+1,w
  1689  073E  1D03               	btfss	3,2
  1690  073F  2F41               	goto	u2941
  1691  0740  2F42               	goto	u2940
  1692  0741                     u2941:
  1693  0741  2F7C               	goto	l2742
  1694  0742                     u2940:
  1695  0742                     l2734:
  1696  0742  3002               	movlw	2
  1697  0743  064A               	xorwf	main@zyoutai,w
  1698  0744  044B               	iorwf	main@zyoutai+1,w
  1699  0745  1D03               	btfss	3,2
  1700  0746  2F48               	goto	u2951
  1701  0747  2F49               	goto	u2950
  1702  0748                     u2951:
  1703  0748  2F7C               	goto	l2742
  1704  0749                     u2950:
  1705  0749                     l2736:
  1706                           
  1707                           ;Q5.c: 661:                 zyoutai = 3;
  1708  0749  3003               	movlw	3
  1709  074A  00CA               	movwf	main@zyoutai
  1710  074B  3000               	movlw	0
  1711  074C  00CB               	movwf	main@zyoutai+1
  1712  074D                     l2738:
  1713                           
  1714                           ;Q5.c: 663:                 motor(360,segL,segR,1,1);
  1715  074D  3068               	movlw	104
  1716  074E  00A8               	movwf	motor@kakudo
  1717  074F  3001               	movlw	1
  1718  0750  00A9               	movwf	motor@kakudo+1
  1719  0751  084D               	movf	main@segL+1,w
  1720  0752  00AB               	movwf	motor@dig1data+1
  1721  0753  084C               	movf	main@segL,w
  1722  0754  00AA               	movwf	motor@dig1data
  1723  0755  084F               	movf	main@segR+1,w
  1724  0756  00AD               	movwf	motor@dig2data+1
  1725  0757  084E               	movf	main@segR,w
  1726  0758  00AC               	movwf	motor@dig2data
  1727  0759  3001               	movlw	1
  1728  075A  00AE               	movwf	motor@smdata
  1729  075B  3000               	movlw	0
  1730  075C  00AF               	movwf	motor@smdata+1
  1731  075D  3001               	movlw	1
  1732  075E  00B0               	movwf	motor@tr
  1733  075F  3000               	movlw	0
  1734  0760  00B1               	movwf	motor@tr+1
  1735  0761  3180  2061  3185   	fcall	_motor
  1736  0764                     l2740:
  1737                           
  1738                           ;Q5.c: 664:                 motor(360,segL,segR,2,1);
  1739  0764  3068               	movlw	104
  1740  0765  0020               	movlb	0	; select bank0
  1741  0766  00A8               	movwf	motor@kakudo
  1742  0767  3001               	movlw	1
  1743  0768  00A9               	movwf	motor@kakudo+1
  1744  0769  084D               	movf	main@segL+1,w
  1745  076A  00AB               	movwf	motor@dig1data+1
  1746  076B  084C               	movf	main@segL,w
  1747  076C  00AA               	movwf	motor@dig1data
  1748  076D  084F               	movf	main@segR+1,w
  1749  076E  00AD               	movwf	motor@dig2data+1
  1750  076F  084E               	movf	main@segR,w
  1751  0770  00AC               	movwf	motor@dig2data
  1752  0771  3002               	movlw	2
  1753  0772  00AE               	movwf	motor@smdata
  1754  0773  3000               	movlw	0
  1755  0774  00AF               	movwf	motor@smdata+1
  1756  0775  3001               	movlw	1
  1757  0776  00B0               	movwf	motor@tr
  1758  0777  3000               	movlw	0
  1759  0778  00B1               	movwf	motor@tr+1
  1760  0779  3180  2061  3185   	fcall	_motor
  1761  077C                     l2742:
  1762                           
  1763                           ;Q5.c: 669:             if(ans%2 == 0 && zyoutai == 2){
  1764  077C  0020               	movlb	0	; select bank0
  1765  077D  1848               	btfsc	main@ans,0
  1766  077E  2F80               	goto	u2961
  1767  077F  2F81               	goto	u2960
  1768  0780                     u2961:
  1769  0780  2FA3               	goto	l2750
  1770  0781                     u2960:
  1771  0781                     l2744:
  1772  0781  3002               	movlw	2
  1773  0782  064A               	xorwf	main@zyoutai,w
  1774  0783  044B               	iorwf	main@zyoutai+1,w
  1775  0784  1D03               	btfss	3,2
  1776  0785  2F87               	goto	u2971
  1777  0786  2F88               	goto	u2970
  1778  0787                     u2971:
  1779  0787  2FA3               	goto	l2750
  1780  0788                     u2970:
  1781  0788                     l2746:
  1782                           
  1783                           ;Q5.c: 670:                 zyoutai = 3;
  1784  0788  3003               	movlw	3
  1785  0789  00CA               	movwf	main@zyoutai
  1786  078A  3000               	movlw	0
  1787  078B  00CB               	movwf	main@zyoutai+1
  1788  078C                     l2748:
  1789                           
  1790                           ;Q5.c: 672:                 motor(720,segL,segR,2,1);
  1791  078C  30D0               	movlw	208
  1792  078D  00A8               	movwf	motor@kakudo
  1793  078E  3002               	movlw	2
  1794  078F  00A9               	movwf	motor@kakudo+1
  1795  0790  084D               	movf	main@segL+1,w
  1796  0791  00AB               	movwf	motor@dig1data+1
  1797  0792  084C               	movf	main@segL,w
  1798  0793  00AA               	movwf	motor@dig1data
  1799  0794  084F               	movf	main@segR+1,w
  1800  0795  00AD               	movwf	motor@dig2data+1
  1801  0796  084E               	movf	main@segR,w
  1802  0797  00AC               	movwf	motor@dig2data
  1803  0798  3002               	movlw	2
  1804  0799  00AE               	movwf	motor@smdata
  1805  079A  3000               	movlw	0
  1806  079B  00AF               	movwf	motor@smdata+1
  1807  079C  3001               	movlw	1
  1808  079D  00B0               	movwf	motor@tr
  1809  079E  3000               	movlw	0
  1810  079F  00B1               	movwf	motor@tr+1
  1811  07A0  3180  2061  3185   	fcall	_motor
  1812  07A3                     l2750:
  1813                           
  1814                           ;Q5.c: 682:         tact(2);
  1815  07A3  3002               	movlw	2
  1816  07A4  00F8               	movwf	tact@mode
  1817  07A5  3000               	movlw	0
  1818  07A6  00F9               	movwf	tact@mode+1
  1819  07A7  3180  20C2  3185   	fcall	_tact
  1820  07AA                     l2752:
  1821                           
  1822                           ;Q5.c: 684:         if(RA0 ==1 && RA1 == 1 && ((flag_sw3==0)&&(flag_P==1)) && zyoutai ==
      +                           3){
  1823  07AA  0020               	movlb	0	; select bank0
  1824  07AB  1C0C               	btfss	12,0	;volatile
  1825  07AC  2FAE               	goto	u2981
  1826  07AD  2FAF               	goto	u2980
  1827  07AE                     u2981:
  1828  07AE  2DCA               	goto	l2624
  1829  07AF                     u2980:
  1830  07AF                     l2754:
  1831  07AF  1C8C               	btfss	12,1	;volatile
  1832  07B0  2FB2               	goto	u2991
  1833  07B1  2FB3               	goto	u2990
  1834  07B2                     u2991:
  1835  07B2  2DCA               	goto	l2624
  1836  07B3                     u2990:
  1837  07B3                     l2756:
  1838  07B3  087C               	movf	_flag_sw3,w
  1839  07B4  047D               	iorwf	_flag_sw3+1,w
  1840  07B5  1D03               	btfss	3,2
  1841  07B6  2FB8               	goto	u3001
  1842  07B7  2FB9               	goto	u3000
  1843  07B8                     u3001:
  1844  07B8  2DCA               	goto	l2624
  1845  07B9                     u3000:
  1846  07B9                     l2758:
  1847  07B9  0368               	decf	_flag_P,w
  1848  07BA  0469               	iorwf	_flag_P+1,w
  1849  07BB  1D03               	btfss	3,2
  1850  07BC  2FBE               	goto	u3011
  1851  07BD  2FBF               	goto	u3010
  1852  07BE                     u3011:
  1853  07BE  2DCA               	goto	l2624
  1854  07BF                     u3010:
  1855  07BF                     l2760:
  1856  07BF  3003               	movlw	3
  1857  07C0  064A               	xorwf	main@zyoutai,w
  1858  07C1  044B               	iorwf	main@zyoutai+1,w
  1859  07C2  1D03               	btfss	3,2
  1860  07C3  2FC5               	goto	u3021
  1861  07C4  2FC6               	goto	u3020
  1862  07C5                     u3021:
  1863  07C5  2DCA               	goto	l2624
  1864  07C6                     u3020:
  1865  07C6                     l2762:
  1866                           
  1867                           ;Q5.c: 685:             fclr(2);
  1868  07C6  3002               	movlw	2
  1869  07C7  00F0               	movwf	fclr@flg
  1870  07C8  3000               	movlw	0
  1871  07C9  00F1               	movwf	fclr@flg+1
  1872  07CA  3180  2041  3185   	fcall	_fclr
  1873  07CD                     l2764:
  1874                           
  1875                           ;Q5.c: 687:             zyoutai = 0;
  1876  07CD  0020               	movlb	0	; select bank0
  1877  07CE  01CA               	clrf	main@zyoutai
  1878  07CF  01CB               	clrf	main@zyoutai+1
  1879  07D0                     l2766:
  1880                           
  1881                           ;Q5.c: 689:             segR = 0;
  1882  07D0  01CE               	clrf	main@segR
  1883  07D1  01CF               	clrf	main@segR+1
  1884  07D2                     l2768:
  1885                           
  1886                           ;Q5.c: 690:             segL = 0;
  1887  07D2  01CC               	clrf	main@segL
  1888  07D3  01CD               	clrf	main@segL+1
  1889  07D4                     l2770:
  1890                           
  1891                           ;Q5.c: 692:             ataiR = 0;
  1892  07D4  01C6               	clrf	main@ataiR
  1893  07D5  01C7               	clrf	main@ataiR+1
  1894  07D6                     l2772:
  1895                           
  1896                           ;Q5.c: 693:             ataiL = 0;
  1897  07D6  01C4               	clrf	main@ataiL
  1898  07D7  01C5               	clrf	main@ataiL+1
  1899  07D8  2DCA               	goto	l2622
  1900  07D9  3180  2802         	ljmp	start
  1901  07DB                     __end_of_main:
  1902                           
  1903                           	psect	text1
  1904  0006                     __ptext1:	
  1905 ;; *************** function _zenoff *****************
  1906 ;; Defined at:
  1907 ;;		line 195 in file "Q5.c"
  1908 ;; Parameters:    Size  Location     Type
  1909 ;;		None
  1910 ;; Auto vars:     Size  Location     Type
  1911 ;;		None
  1912 ;; Return value:  Size  Location     Type
  1913 ;;                  1    wreg      void 
  1914 ;; Registers used:
  1915 ;;		status,2
  1916 ;; Tracked objects:
  1917 ;;		On entry : 0/0
  1918 ;;		On exit  : 0/0
  1919 ;;		Unchanged: 0/0
  1920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1925 ;;Total ram usage:        0 bytes
  1926 ;; Hardware stack levels used:    1
  1927 ;; This function calls:
  1928 ;;		Nothing
  1929 ;; This function is called by:
  1930 ;;		_main
  1931 ;; This function uses a non-reentrant model
  1932 ;;
  1933                           
  1934                           
  1935                           ;psect for function _zenoff
  1936  0006                     _zenoff:
  1937  0006                     l2220:	
  1938                           ;incstack = 0
  1939                           ; Regs used in _zenoff: [status,2]
  1940                           
  1941                           
  1942                           ;Q5.c: 197:     RC0=1;
  1943  0006  0020               	movlb	0	; select bank0
  1944  0007  140E               	bsf	14,0	;volatile
  1945                           
  1946                           ;Q5.c: 198:     RC1=1;
  1947  0008  148E               	bsf	14,1	;volatile
  1948                           
  1949                           ;Q5.c: 199:     RC2=1;
  1950  0009  150E               	bsf	14,2	;volatile
  1951  000A                     l2222:
  1952                           
  1953                           ;Q5.c: 200:     PORTB=0x00;
  1954  000A  018D               	clrf	13	;volatile
  1955  000B                     l2224:
  1956                           
  1957                           ;Q5.c: 201:     RC7=0;RC7=1;RC7=0;
  1958  000B  138E               	bcf	14,7	;volatile
  1959  000C                     l2226:
  1960  000C  178E               	bsf	14,7	;volatile
  1961  000D                     l2228:
  1962  000D  138E               	bcf	14,7	;volatile
  1963  000E                     l108:
  1964  000E  0008               	return
  1965  000F                     __end_of_zenoff:
  1966                           
  1967                           	psect	text2
  1968  00C2                     __ptext2:	
  1969 ;; *************** function _tact *****************
  1970 ;; Defined at:
  1971 ;;		line 346 in file "Q5.c"
  1972 ;; Parameters:    Size  Location     Type
  1973 ;;  mode            2    8[COMMON] unsigned short 
  1974 ;; Auto vars:     Size  Location     Type
  1975 ;;		None
  1976 ;; Return value:  Size  Location     Type
  1977 ;;                  1    wreg      void 
  1978 ;; Registers used:
  1979 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1980 ;; Tracked objects:
  1981 ;;		On entry : 0/0
  1982 ;;		On exit  : 0/0
  1983 ;;		Unchanged: 0/0
  1984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1985 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1988 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1989 ;;Total ram usage:        2 bytes
  1990 ;; Hardware stack levels used:    1
  1991 ;; Hardware stack levels required when called:    1
  1992 ;; This function calls:
  1993 ;;		_tactsw
  1994 ;; This function is called by:
  1995 ;;		_main
  1996 ;;		_kaisu
  1997 ;;		_waitSEGStop
  1998 ;;		_motorStop
  1999 ;; This function uses a non-reentrant model
  2000 ;;
  2001                           
  2002                           
  2003                           ;psect for function _tact
  2004  00C2                     _tact:
  2005  00C2                     l2376:	
  2006                           ;incstack = 0
  2007                           ; Regs used in _tact: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2008                           
  2009                           
  2010                           ;Q5.c: 346: void tact(unsigned short mode);Q5.c: 347: {;Q5.c: 348:     switch(mode){
  2011  00C2  28FD               	goto	l2404
  2012  00C3                     l2378:
  2013                           
  2014                           ;Q5.c: 350:                 tactsw();
  2015  00C3  3180  2085  3180   	fcall	_tactsw
  2016  00C6                     l2380:
  2017                           
  2018                           ;Q5.c: 351:                 if(flag_sw3==0)flag_R=1;
  2019  00C6  087C               	movf	_flag_sw3,w
  2020  00C7  047D               	iorwf	_flag_sw3+1,w
  2021  00C8  1D03               	btfss	3,2
  2022  00C9  28CB               	goto	u2231
  2023  00CA  28CC               	goto	u2230
  2024  00CB                     u2231:
  2025  00CB  290D               	goto	l208
  2026  00CC                     u2230:
  2027  00CC                     l2382:
  2028  00CC  3001               	movlw	1
  2029  00CD  0020               	movlb	0	; select bank0
  2030  00CE  00EA               	movwf	_flag_R
  2031  00CF  3000               	movlw	0
  2032  00D0  00EB               	movwf	_flag_R+1
  2033  00D1  290D               	goto	l208
  2034  00D2                     l2384:
  2035                           
  2036                           ;Q5.c: 354:                 tactsw();
  2037  00D2  3180  2085  3180   	fcall	_tactsw
  2038  00D5                     l2386:
  2039                           
  2040                           ;Q5.c: 355:                 if(flag_sw3==1)flag_P=1;
  2041  00D5  037C               	decf	_flag_sw3,w
  2042  00D6  047D               	iorwf	_flag_sw3+1,w
  2043  00D7  1D03               	btfss	3,2
  2044  00D8  28DA               	goto	u2241
  2045  00D9  28DB               	goto	u2240
  2046  00DA                     u2241:
  2047  00DA  290D               	goto	l208
  2048  00DB                     u2240:
  2049  00DB                     l2388:
  2050  00DB  3001               	movlw	1
  2051  00DC  0020               	movlb	0	; select bank0
  2052  00DD  00E8               	movwf	_flag_P
  2053  00DE  3000               	movlw	0
  2054  00DF  00E9               	movwf	_flag_P+1
  2055  00E0  290D               	goto	l208
  2056  00E1                     l2390:
  2057                           
  2058                           ;Q5.c: 358:                 tactsw();
  2059  00E1  3180  2085  3180   	fcall	_tactsw
  2060  00E4                     l2392:
  2061                           
  2062                           ;Q5.c: 359:                 if(flag_sw3==0)flag_R=1;
  2063  00E4  087C               	movf	_flag_sw3,w
  2064  00E5  047D               	iorwf	_flag_sw3+1,w
  2065  00E6  1D03               	btfss	3,2
  2066  00E7  28E9               	goto	u2251
  2067  00E8  28EA               	goto	u2250
  2068  00E9                     u2251:
  2069  00E9  28EF               	goto	l2396
  2070  00EA                     u2250:
  2071  00EA                     l2394:
  2072  00EA  3001               	movlw	1
  2073  00EB  0020               	movlb	0	; select bank0
  2074  00EC  00EA               	movwf	_flag_R
  2075  00ED  3000               	movlw	0
  2076  00EE  00EB               	movwf	_flag_R+1
  2077  00EF                     l2396:
  2078                           
  2079                           ;Q5.c: 360:                 if((flag_sw3==1)&&(flag_R==1))flag_P=1;
  2080  00EF  037C               	decf	_flag_sw3,w
  2081  00F0  047D               	iorwf	_flag_sw3+1,w
  2082  00F1  1D03               	btfss	3,2
  2083  00F2  28F4               	goto	u2261
  2084  00F3  28F5               	goto	u2260
  2085  00F4                     u2261:
  2086  00F4  290D               	goto	l208
  2087  00F5                     u2260:
  2088  00F5                     l2398:
  2089  00F5  0020               	movlb	0	; select bank0
  2090  00F6  036A               	decf	_flag_R,w
  2091  00F7  046B               	iorwf	_flag_R+1,w
  2092  00F8  1D03               	btfss	3,2
  2093  00F9  28FB               	goto	u2271
  2094  00FA  28FC               	goto	u2270
  2095  00FB                     u2271:
  2096  00FB  290D               	goto	l208
  2097  00FC                     u2270:
  2098  00FC  28DB               	goto	l2388
  2099  00FD                     l2404:
  2100                           
  2101                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2102                           ; Switch size 1, requested type "simple"
  2103                           ; Number of cases is 1, Range of values is 0 to 0
  2104                           ; switch strategies available:
  2105                           ; Name         Instructions Cycles
  2106                           ; simple_byte            4     3 (average)
  2107                           ; direct_byte            8     6 (fixed)
  2108                           ; jumptable            260     6 (fixed)
  2109                           ;	Chosen strategy is simple_byte
  2110  00FD  0879               	movf	tact@mode+1,w
  2111  00FE  3A00               	xorlw	0	; case 0
  2112  00FF  1903               	skipnz
  2113  0100  2902               	goto	l2882
  2114  0101  290D               	goto	l208
  2115  0102                     l2882:
  2116                           
  2117                           ; Switch size 1, requested type "simple"
  2118                           ; Number of cases is 3, Range of values is 0 to 2
  2119                           ; switch strategies available:
  2120                           ; Name         Instructions Cycles
  2121                           ; simple_byte           10     6 (average)
  2122                           ; direct_byte           12     6 (fixed)
  2123                           ; jumptable            260     6 (fixed)
  2124                           ;	Chosen strategy is simple_byte
  2125  0102  0878               	movf	tact@mode,w
  2126  0103  3A00               	xorlw	0	; case 0
  2127  0104  1903               	skipnz
  2128  0105  28C3               	goto	l2378
  2129  0106  3A01               	xorlw	1	; case 1
  2130  0107  1903               	skipnz
  2131  0108  28D2               	goto	l2384
  2132  0109  3A03               	xorlw	3	; case 2
  2133  010A  1903               	skipnz
  2134  010B  28E1               	goto	l2390
  2135  010C  290D               	goto	l208
  2136  010D                     l208:
  2137  010D  0008               	return
  2138  010E                     __end_of_tact:
  2139                           
  2140                           	psect	text3
  2141  0085                     __ptext3:	
  2142 ;; *************** function _tactsw *****************
  2143 ;; Defined at:
  2144 ;;		line 331 in file "Q5.c"
  2145 ;; Parameters:    Size  Location     Type
  2146 ;;		None
  2147 ;; Auto vars:     Size  Location     Type
  2148 ;;  a               2    6[COMMON] unsigned short 
  2149 ;;  c               2    4[COMMON] unsigned short 
  2150 ;;  b               2    2[COMMON] unsigned short 
  2151 ;; Return value:  Size  Location     Type
  2152 ;;                  1    wreg      void 
  2153 ;; Registers used:
  2154 ;;		wreg, status,2, status,0
  2155 ;; Tracked objects:
  2156 ;;		On entry : 0/0
  2157 ;;		On exit  : 0/0
  2158 ;;		Unchanged: 0/0
  2159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2161 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2162 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2163 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2164 ;;Total ram usage:        8 bytes
  2165 ;; Hardware stack levels used:    1
  2166 ;; This function calls:
  2167 ;;		Nothing
  2168 ;; This function is called by:
  2169 ;;		_tact
  2170 ;; This function uses a non-reentrant model
  2171 ;;
  2172                           
  2173                           
  2174                           ;psect for function _tactsw
  2175  0085                     _tactsw:
  2176  0085                     l2076:	
  2177                           ;incstack = 0
  2178                           ; Regs used in _tactsw: [wreg+status,2+status,0]
  2179                           
  2180                           
  2181                           ;Q5.c: 333:     unsigned short a,b,c;;Q5.c: 334:     b=c=0;
  2182  0085  01F4               	clrf	tactsw@c
  2183  0086  01F5               	clrf	tactsw@c+1
  2184  0087  01F2               	clrf	tactsw@b
  2185  0088  01F3               	clrf	tactsw@b+1
  2186  0089                     l2078:
  2187                           
  2188                           ;Q5.c: 336:             a=RA2;
  2189  0089  1003               	clrc
  2190  008A  0020               	movlb	0	; select bank0
  2191  008B  190C               	btfsc	12,2	;volatile
  2192  008C  1403               	setc
  2193  008D  3000               	movlw	0
  2194  008E  3D09               	addwfc	9,w
  2195  008F  00F0               	movwf	??_tactsw
  2196  0090  01F1               	clrf	??_tactsw+1
  2197  0091  0870               	movf	??_tactsw,w
  2198  0092  00F6               	movwf	tactsw@a
  2199  0093  0871               	movf	??_tactsw+1,w
  2200  0094  00F7               	movwf	tactsw@a+1
  2201  0095                     l2080:
  2202                           
  2203                           ;Q5.c: 337:             if(b==a)++c;
  2204  0095  0877               	movf	tactsw@a+1,w
  2205  0096  0673               	xorwf	tactsw@b+1,w
  2206  0097  1D03               	skipz
  2207  0098  289B               	goto	u1765
  2208  0099  0876               	movf	tactsw@a,w
  2209  009A  0672               	xorwf	tactsw@b,w
  2210  009B                     u1765:
  2211  009B  1D03               	skipz
  2212  009C  289E               	goto	u1761
  2213  009D  289F               	goto	u1760
  2214  009E                     u1761:
  2215  009E  28A4               	goto	l2084
  2216  009F                     u1760:
  2217  009F                     l2082:
  2218  009F  3001               	movlw	1
  2219  00A0  07F4               	addwf	tactsw@c,f
  2220  00A1  3000               	movlw	0
  2221  00A2  3DF5               	addwfc	tactsw@c+1,f
  2222  00A3  28A6               	goto	l2086
  2223  00A4                     l2084:
  2224  00A4  01F4               	clrf	tactsw@c
  2225  00A5  01F5               	clrf	tactsw@c+1
  2226  00A6                     l2086:
  2227                           
  2228                           ;Q5.c: 339:             if(c>10){flag_sw3=(~a)&0x01;return;}
  2229  00A6  3000               	movlw	0
  2230  00A7  0275               	subwf	tactsw@c+1,w
  2231  00A8  300B               	movlw	11
  2232  00A9  1903               	skipnz
  2233  00AA  0274               	subwf	tactsw@c,w
  2234  00AB  1C03               	skipc
  2235  00AC  28AE               	goto	u1771
  2236  00AD  28AF               	goto	u1770
  2237  00AE                     u1771:
  2238  00AE  28BC               	goto	l2092
  2239  00AF                     u1770:
  2240  00AF                     l2088:
  2241  00AF  0877               	movf	tactsw@a+1,w
  2242  00B0  00F1               	movwf	??_tactsw+1
  2243  00B1  0876               	movf	tactsw@a,w
  2244  00B2  00F0               	movwf	??_tactsw
  2245  00B3  09F0               	comf	??_tactsw,f
  2246  00B4  09F1               	comf	??_tactsw+1,f
  2247  00B5  3001               	movlw	1
  2248  00B6  0570               	andwf	??_tactsw,w
  2249  00B7  00FC               	movwf	_flag_sw3
  2250  00B8  3000               	movlw	0
  2251  00B9  0571               	andwf	??_tactsw+1,w
  2252  00BA  00FD               	movwf	_flag_sw3+1
  2253  00BB  28C1               	goto	l193
  2254  00BC                     l2092:
  2255                           
  2256                           ;Q5.c: 340:             b=a;
  2257  00BC  0877               	movf	tactsw@a+1,w
  2258  00BD  00F3               	movwf	tactsw@b+1
  2259  00BE  0876               	movf	tactsw@a,w
  2260  00BF  00F2               	movwf	tactsw@b
  2261  00C0  2889               	goto	l2078
  2262  00C1                     l193:
  2263  00C1  0008               	return
  2264  00C2                     __end_of_tactsw:
  2265                           
  2266                           	psect	text4
  2267  000F                     __ptext4:	
  2268 ;; *************** function _portinit *****************
  2269 ;; Defined at:
  2270 ;;		line 160 in file "Q5.c"
  2271 ;; Parameters:    Size  Location     Type
  2272 ;;		None
  2273 ;; Auto vars:     Size  Location     Type
  2274 ;;		None
  2275 ;; Return value:  Size  Location     Type
  2276 ;;                  1    wreg      void 
  2277 ;; Registers used:
  2278 ;;		wreg, status,2
  2279 ;; Tracked objects:
  2280 ;;		On entry : 0/0
  2281 ;;		On exit  : 0/0
  2282 ;;		Unchanged: 0/0
  2283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2288 ;;Total ram usage:        0 bytes
  2289 ;; Hardware stack levels used:    1
  2290 ;; This function calls:
  2291 ;;		Nothing
  2292 ;; This function is called by:
  2293 ;;		_main
  2294 ;; This function uses a non-reentrant model
  2295 ;;
  2296                           
  2297                           
  2298                           ;psect for function _portinit
  2299  000F                     _portinit:
  2300  000F                     l2190:	
  2301                           ;incstack = 0
  2302                           ; Regs used in _portinit: [wreg+status,2]
  2303                           
  2304                           
  2305                           ;Q5.c: 163:     ANSELA=0x00;
  2306  000F  0023               	movlb	3	; select bank3
  2307  0010  018C               	clrf	12	;volatile
  2308                           
  2309                           ;Q5.c: 164:     ANSELB=0x00;
  2310  0011  018D               	clrf	13	;volatile
  2311  0012                     l2192:
  2312                           
  2313                           ;Q5.c: 166:     PORTA=0x07;
  2314  0012  3007               	movlw	7
  2315  0013  0020               	movlb	0	; select bank0
  2316  0014  008C               	movwf	12	;volatile
  2317  0015                     l2194:
  2318                           
  2319                           ;Q5.c: 167:     TRISA=0x07;
  2320  0015  3007               	movlw	7
  2321  0016  0021               	movlb	1	; select bank1
  2322  0017  008C               	movwf	12	;volatile
  2323                           
  2324                           ;Q5.c: 168:     PORTB=0x00;
  2325  0018  0020               	movlb	0	; select bank0
  2326  0019  018D               	clrf	13	;volatile
  2327                           
  2328                           ;Q5.c: 169:     TRISB=0x00;
  2329  001A  0021               	movlb	1	; select bank1
  2330  001B  018D               	clrf	13	;volatile
  2331  001C                     l2196:
  2332                           
  2333                           ;Q5.c: 170:     PORTC=0x07;
  2334  001C  3007               	movlw	7
  2335  001D  0020               	movlb	0	; select bank0
  2336  001E  008E               	movwf	14	;volatile
  2337  001F                     l2198:
  2338                           
  2339                           ;Q5.c: 171:     TRISC=0x00;
  2340  001F  0021               	movlb	1	; select bank1
  2341  0020  018E               	clrf	14	;volatile
  2342  0021                     l95:
  2343  0021  0008               	return
  2344  0022                     __end_of_portinit:
  2345                           
  2346                           	psect	text5
  2347  0061                     __ptext5:	
  2348 ;; *************** function _motor *****************
  2349 ;; Defined at:
  2350 ;;		line 484 in file "Q5.c"
  2351 ;; Parameters:    Size  Location     Type
  2352 ;;  kakudo          2    8[BANK0 ] int 
  2353 ;;  dig1data        2   10[BANK0 ] unsigned short 
  2354 ;;  dig2data        2   12[BANK0 ] unsigned short 
  2355 ;;  smdata          2   14[BANK0 ] unsigned short 
  2356 ;;  tr              2   16[BANK0 ] unsigned int 
  2357 ;; Auto vars:     Size  Location     Type
  2358 ;;  i               2    8[COMMON] int 
  2359 ;; Return value:  Size  Location     Type
  2360 ;;                  1    wreg      void 
  2361 ;; Registers used:
  2362 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2363 ;; Tracked objects:
  2364 ;;		On entry : 0/0
  2365 ;;		On exit  : 0/0
  2366 ;;		Unchanged: 0/0
  2367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2368 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2369 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2371 ;;      Totals:         2      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2372 ;;Total ram usage:       12 bytes
  2373 ;; Hardware stack levels used:    1
  2374 ;; Hardware stack levels required when called:    1
  2375 ;; This function calls:
  2376 ;;		_dynam
  2377 ;; This function is called by:
  2378 ;;		_main
  2379 ;;		_henka
  2380 ;; This function uses a non-reentrant model
  2381 ;;
  2382                           
  2383                           
  2384                           ;psect for function _motor
  2385  0061                     _motor:
  2386  0061                     l2426:	
  2387                           ;incstack = 0
  2388                           ; Regs used in _motor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2389                           
  2390                           
  2391                           ;Q5.c: 486:     for(int i = kakudo;i>=0;i--){
  2392  0061  0020               	movlb	0	; select bank0
  2393  0062  0829               	movf	motor@kakudo+1,w
  2394  0063  00F9               	movwf	motor@i+1
  2395  0064  0828               	movf	motor@kakudo,w
  2396  0065  00F8               	movwf	motor@i
  2397  0066                     l2428:
  2398  0066  1FF9               	btfss	motor@i+1,7
  2399  0067  2869               	goto	u2281
  2400  0068  286A               	goto	u2280
  2401  0069                     u2281:
  2402  0069  286B               	goto	l2432
  2403  006A                     u2280:
  2404  006A  2884               	goto	l271
  2405  006B                     l2432:
  2406                           
  2407                           ;Q5.c: 487:         dynam(dig1data,dig2data,smdata,tr);
  2408  006B  0020               	movlb	0	; select bank0
  2409  006C  082B               	movf	motor@dig1data+1,w
  2410  006D  00F1               	movwf	dynam@dig1data+1
  2411  006E  082A               	movf	motor@dig1data,w
  2412  006F  00F0               	movwf	dynam@dig1data
  2413  0070  082D               	movf	motor@dig2data+1,w
  2414  0071  00F3               	movwf	dynam@dig2data+1
  2415  0072  082C               	movf	motor@dig2data,w
  2416  0073  00F2               	movwf	dynam@dig2data
  2417  0074  082F               	movf	motor@smdata+1,w
  2418  0075  00F5               	movwf	dynam@smdata+1
  2419  0076  082E               	movf	motor@smdata,w
  2420  0077  00F4               	movwf	dynam@smdata
  2421  0078  0831               	movf	motor@tr+1,w
  2422  0079  00F7               	movwf	dynam@tr+1
  2423  007A  0830               	movf	motor@tr,w
  2424  007B  00F6               	movwf	dynam@tr
  2425  007C  3182  225D  3180   	fcall	_dynam
  2426  007F                     l2434:
  2427                           
  2428                           ;Q5.c: 488:     }
  2429  007F  30FF               	movlw	255
  2430  0080  07F8               	addwf	motor@i,f
  2431  0081  30FF               	movlw	255
  2432  0082  3DF9               	addwfc	motor@i+1,f
  2433  0083  2866               	goto	l2428
  2434  0084                     l271:
  2435  0084  0008               	return
  2436  0085                     __end_of_motor:
  2437                           
  2438                           	psect	text6
  2439  025D                     __ptext6:	
  2440 ;; *************** function _dynam *****************
  2441 ;; Defined at:
  2442 ;;		line 206 in file "Q5.c"
  2443 ;; Parameters:    Size  Location     Type
  2444 ;;  dig1data        2    0[COMMON] unsigned short 
  2445 ;;  dig2data        2    2[COMMON] unsigned short 
  2446 ;;  smdata          2    4[COMMON] unsigned short 
  2447 ;;  tr              2    6[COMMON] unsigned int 
  2448 ;; Auto vars:     Size  Location     Type
  2449 ;;  ext             2    6[BANK0 ] unsigned short 
  2450 ;;  j               2    4[BANK0 ] unsigned int 
  2451 ;;  tm              2    2[BANK0 ] unsigned int 
  2452 ;;  smd             2    0[BANK0 ] unsigned short 
  2453 ;; Return value:  Size  Location     Type
  2454 ;;                  1    wreg      void 
  2455 ;; Registers used:
  2456 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2457 ;; Tracked objects:
  2458 ;;		On entry : 0/0
  2459 ;;		On exit  : 0/0
  2460 ;;		Unchanged: 0/0
  2461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2462 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2463 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2465 ;;      Totals:         8       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2466 ;;Total ram usage:       16 bytes
  2467 ;; Hardware stack levels used:    1
  2468 ;; This function calls:
  2469 ;;		Nothing
  2470 ;; This function is called by:
  2471 ;;		_motor
  2472 ;;		_main
  2473 ;;		_clear
  2474 ;;		_waitSEG
  2475 ;;		_waitSEGStop
  2476 ;;		_motorStop
  2477 ;; This function uses a non-reentrant model
  2478 ;;
  2479                           
  2480                           
  2481                           ;psect for function _dynam
  2482  025D                     _dynam:
  2483  025D                     l1920:	
  2484                           ;incstack = 0
  2485                           ; Regs used in _dynam: [wreg-fsr0h+status,2+status,0]
  2486                           
  2487  025D  0020               	movlb	0	; select bank0
  2488  025E  01A2               	clrf	dynam@tm
  2489  025F  01A3               	clrf	dynam@tm+1
  2490                           
  2491                           ;Q5.c: 209:     unsigned short ext=0,smd=0;
  2492  0260  01A6               	clrf	dynam@ext
  2493  0261  01A7               	clrf	dynam@ext+1
  2494  0262  01A0               	clrf	dynam@smd
  2495  0263  01A1               	clrf	dynam@smd+1
  2496  0264                     l1922:
  2497                           
  2498                           ;Q5.c: 210:     RC7=0;
  2499  0264  138E               	bcf	14,7	;volatile
  2500  0265                     l1924:
  2501                           
  2502                           ;Q5.c: 211:     PORTB=dig1data;
  2503  0265  0870               	movf	dynam@dig1data,w
  2504  0266  008D               	movwf	13	;volatile
  2505  0267                     l1926:
  2506                           
  2507                           ;Q5.c: 212:     RC5=0;RC6=1;
  2508  0267  128E               	bcf	14,5	;volatile
  2509  0268                     l1928:
  2510  0268  170E               	bsf	14,6	;volatile
  2511  0269                     l1930:
  2512                           
  2513                           ;Q5.c: 213:     if(tr==5){tm=4000;}
  2514  0269  3005               	movlw	5
  2515  026A  0676               	xorwf	dynam@tr,w
  2516  026B  0477               	iorwf	dynam@tr+1,w
  2517  026C  1D03               	btfss	3,2
  2518  026D  2A6F               	goto	u1541
  2519  026E  2A70               	goto	u1540
  2520  026F                     u1541:
  2521  026F  2A75               	goto	l1934
  2522  0270                     u1540:
  2523  0270                     l1932:
  2524  0270  30A0               	movlw	160
  2525  0271  00A2               	movwf	dynam@tm
  2526  0272  300F               	movlw	15
  2527  0273  00A3               	movwf	dynam@tm+1
  2528  0274  2A79               	goto	l112
  2529  0275                     l1934:
  2530  0275  30D0               	movlw	208
  2531  0276  00A2               	movwf	dynam@tm
  2532  0277  3007               	movlw	7
  2533  0278  00A3               	movwf	dynam@tm+1
  2534  0279                     l112:
  2535                           
  2536                           ;Q5.c: 215:     for(j=tm;j>0;--j);
  2537  0279  0823               	movf	dynam@tm+1,w
  2538  027A  00A5               	movwf	dynam@j+1
  2539  027B  0822               	movf	dynam@tm,w
  2540  027C  00A4               	movwf	dynam@j
  2541  027D                     l1936:
  2542  027D  0824               	movf	dynam@j,w
  2543  027E  0425               	iorwf	dynam@j+1,w
  2544  027F  1D03               	btfss	3,2
  2545  0280  2A82               	goto	u1551
  2546  0281  2A83               	goto	u1550
  2547  0282                     u1551:
  2548  0282  2A84               	goto	l1940
  2549  0283                     u1550:
  2550  0283  2A89               	goto	l114
  2551  0284                     l1940:
  2552  0284  3001               	movlw	1
  2553  0285  02A4               	subwf	dynam@j,f
  2554  0286  3000               	movlw	0
  2555  0287  3BA5               	subwfb	dynam@j+1,f
  2556  0288  2A7D               	goto	l1936
  2557  0289                     l114:
  2558                           
  2559                           ;Q5.c: 216:     RC5=0;RC6=0;
  2560  0289  128E               	bcf	14,5	;volatile
  2561  028A  130E               	bcf	14,6	;volatile
  2562  028B                     l1944:
  2563                           
  2564                           ;Q5.c: 217:     PORTB=dig2data;
  2565  028B  0872               	movf	dynam@dig2data,w
  2566  028C  008D               	movwf	13	;volatile
  2567  028D                     l1946:
  2568                           
  2569                           ;Q5.c: 218:     RC6=0;RC5=1;
  2570  028D  130E               	bcf	14,6	;volatile
  2571  028E                     l1948:
  2572  028E  168E               	bsf	14,5	;volatile
  2573  028F                     l1950:
  2574                           
  2575                           ;Q5.c: 219:     if(tr==5){tm=4000;}
  2576  028F  3005               	movlw	5
  2577  0290  0676               	xorwf	dynam@tr,w
  2578  0291  0477               	iorwf	dynam@tr+1,w
  2579  0292  1D03               	btfss	3,2
  2580  0293  2A95               	goto	u1561
  2581  0294  2A96               	goto	u1560
  2582  0295                     u1561:
  2583  0295  2A9B               	goto	l1954
  2584  0296                     u1560:
  2585  0296                     l1952:
  2586  0296  30A0               	movlw	160
  2587  0297  00A2               	movwf	dynam@tm
  2588  0298  300F               	movlw	15
  2589  0299  00A3               	movwf	dynam@tm+1
  2590  029A  2A9F               	goto	l116
  2591  029B                     l1954:
  2592  029B  30D0               	movlw	208
  2593  029C  00A2               	movwf	dynam@tm
  2594  029D  3007               	movlw	7
  2595  029E  00A3               	movwf	dynam@tm+1
  2596  029F                     l116:
  2597                           
  2598                           ;Q5.c: 221:     for(j=tm;j>0;--j);
  2599  029F  0823               	movf	dynam@tm+1,w
  2600  02A0  00A5               	movwf	dynam@j+1
  2601  02A1  0822               	movf	dynam@tm,w
  2602  02A2  00A4               	movwf	dynam@j
  2603  02A3                     l1956:
  2604  02A3  0824               	movf	dynam@j,w
  2605  02A4  0425               	iorwf	dynam@j+1,w
  2606  02A5  1D03               	btfss	3,2
  2607  02A6  2AA8               	goto	u1571
  2608  02A7  2AA9               	goto	u1570
  2609  02A8                     u1571:
  2610  02A8  2AAA               	goto	l1960
  2611  02A9                     u1570:
  2612  02A9  2AAF               	goto	l118
  2613  02AA                     l1960:
  2614  02AA  3001               	movlw	1
  2615  02AB  02A4               	subwf	dynam@j,f
  2616  02AC  3000               	movlw	0
  2617  02AD  3BA5               	subwfb	dynam@j+1,f
  2618  02AE  2AA3               	goto	l1956
  2619  02AF                     l118:
  2620                           
  2621                           ;Q5.c: 222:     RC5=0;RC6=0;
  2622  02AF  128E               	bcf	14,5	;volatile
  2623  02B0  130E               	bcf	14,6	;volatile
  2624                           
  2625                           ;Q5.c: 223:     switch(smdata){
  2626  02B1  2BB6               	goto	l2070
  2627  02B2                     l1964:
  2628                           
  2629                           ;Q5.c: 225:                 PORTB=0x00;smd=(0x01|0x02|0x04|0x08|0x10|0x20);
  2630  02B2  018D               	clrf	13	;volatile
  2631  02B3                     l1966:
  2632  02B3                     l1968:
  2633                           
  2634                           ;Q5.c: 226:                 RC7=0;RC7=1;RC7=0;
  2635  02B3  138E               	bcf	14,7	;volatile
  2636  02B4                     l1970:
  2637  02B4  178E               	bsf	14,7	;volatile
  2638  02B5                     l1972:
  2639  02B5  138E               	bcf	14,7	;volatile
  2640                           
  2641                           ;Q5.c: 227:                 break;
  2642  02B6  2BC6               	goto	l135
  2643  02B7                     l1974:
  2644                           
  2645                           ;Q5.c: 229:                 if(flg==1)cw=0;flg=0;
  2646  02B7  0366               	decf	_flg,w
  2647  02B8  0467               	iorwf	_flg+1,w
  2648  02B9  1D03               	btfss	3,2
  2649  02BA  2ABC               	goto	u1581
  2650  02BB  2ABD               	goto	u1580
  2651  02BC                     u1581:
  2652  02BC  2ABF               	goto	l123
  2653  02BD                     u1580:
  2654  02BD                     l1976:
  2655  02BD  01E4               	clrf	_cw
  2656  02BE  01E5               	clrf	_cw+1
  2657  02BF                     l123:
  2658  02BF  01E6               	clrf	_flg
  2659  02C0  01E7               	clrf	_flg+1
  2660  02C1                     l1978:
  2661                           
  2662                           ;Q5.c: 230:                 if((cw==0)&&(ext==0)){cw=1;ccw=0;ext=1;PORTB=smd=0x09;}
  2663  02C1  0864               	movf	_cw,w
  2664  02C2  0465               	iorwf	_cw+1,w
  2665  02C3  1D03               	btfss	3,2
  2666  02C4  2AC6               	goto	u1591
  2667  02C5  2AC7               	goto	u1590
  2668  02C6                     u1591:
  2669  02C6  2ADD               	goto	l1990
  2670  02C7                     u1590:
  2671  02C7                     l1980:
  2672  02C7  0826               	movf	dynam@ext,w
  2673  02C8  0427               	iorwf	dynam@ext+1,w
  2674  02C9  1D03               	btfss	3,2
  2675  02CA  2ACC               	goto	u1601
  2676  02CB  2ACD               	goto	u1600
  2677  02CC                     u1601:
  2678  02CC  2ADD               	goto	l1990
  2679  02CD                     u1600:
  2680  02CD                     l1982:
  2681  02CD  3001               	movlw	1
  2682  02CE  00E4               	movwf	_cw
  2683  02CF  3000               	movlw	0
  2684  02D0  00E5               	movwf	_cw+1
  2685  02D1                     l1984:
  2686  02D1  01E2               	clrf	_ccw
  2687  02D2  01E3               	clrf	_ccw+1
  2688  02D3                     l1986:
  2689  02D3  3001               	movlw	1
  2690  02D4  00A6               	movwf	dynam@ext
  2691  02D5  3000               	movlw	0
  2692  02D6  00A7               	movwf	dynam@ext+1
  2693  02D7                     l1988:
  2694  02D7  3009               	movlw	9
  2695  02D8  00A0               	movwf	dynam@smd
  2696  02D9  3000               	movlw	0
  2697  02DA  00A1               	movwf	dynam@smd+1
  2698  02DB  0820               	movf	dynam@smd,w
  2699  02DC  008D               	movwf	13	;volatile
  2700  02DD                     l1990:
  2701                           
  2702                           ;Q5.c: 231:                 if((cw==1)&&(ext==0)){cw=2;ccw=3;ext=1;PORTB=smd=0x0C;}
  2703  02DD  0364               	decf	_cw,w
  2704  02DE  0465               	iorwf	_cw+1,w
  2705  02DF  1D03               	btfss	3,2
  2706  02E0  2AE2               	goto	u1611
  2707  02E1  2AE3               	goto	u1610
  2708  02E2                     u1611:
  2709  02E2  2AFB               	goto	l1996
  2710  02E3                     u1610:
  2711  02E3                     l1992:
  2712  02E3  0826               	movf	dynam@ext,w
  2713  02E4  0427               	iorwf	dynam@ext+1,w
  2714  02E5  1D03               	btfss	3,2
  2715  02E6  2AE8               	goto	u1621
  2716  02E7  2AE9               	goto	u1620
  2717  02E8                     u1621:
  2718  02E8  2AFB               	goto	l1996
  2719  02E9                     u1620:
  2720  02E9                     l1994:
  2721  02E9  3002               	movlw	2
  2722  02EA  00E4               	movwf	_cw
  2723  02EB  3000               	movlw	0
  2724  02EC  00E5               	movwf	_cw+1
  2725  02ED  3003               	movlw	3
  2726  02EE  00E2               	movwf	_ccw
  2727  02EF  3000               	movlw	0
  2728  02F0  00E3               	movwf	_ccw+1
  2729  02F1  3001               	movlw	1
  2730  02F2  00A6               	movwf	dynam@ext
  2731  02F3  3000               	movlw	0
  2732  02F4  00A7               	movwf	dynam@ext+1
  2733  02F5  300C               	movlw	12
  2734  02F6  00A0               	movwf	dynam@smd
  2735  02F7  3000               	movlw	0
  2736  02F8  00A1               	movwf	dynam@smd+1
  2737  02F9  0820               	movf	dynam@smd,w
  2738  02FA  008D               	movwf	13	;volatile
  2739  02FB                     l1996:
  2740                           
  2741                           ;Q5.c: 232:                 if((cw==2)&&(ext==0)){cw=3;ccw=2;ext=1;PORTB=smd=0x06;}
  2742  02FB  3002               	movlw	2
  2743  02FC  0664               	xorwf	_cw,w
  2744  02FD  0465               	iorwf	_cw+1,w
  2745  02FE  1D03               	btfss	3,2
  2746  02FF  2B01               	goto	u1631
  2747  0300  2B02               	goto	u1630
  2748  0301                     u1631:
  2749  0301  2B1A               	goto	l2002
  2750  0302                     u1630:
  2751  0302                     l1998:
  2752  0302  0826               	movf	dynam@ext,w
  2753  0303  0427               	iorwf	dynam@ext+1,w
  2754  0304  1D03               	btfss	3,2
  2755  0305  2B07               	goto	u1641
  2756  0306  2B08               	goto	u1640
  2757  0307                     u1641:
  2758  0307  2B1A               	goto	l2002
  2759  0308                     u1640:
  2760  0308                     l2000:
  2761  0308  3003               	movlw	3
  2762  0309  00E4               	movwf	_cw
  2763  030A  3000               	movlw	0
  2764  030B  00E5               	movwf	_cw+1
  2765  030C  3002               	movlw	2
  2766  030D  00E2               	movwf	_ccw
  2767  030E  3000               	movlw	0
  2768  030F  00E3               	movwf	_ccw+1
  2769  0310  3001               	movlw	1
  2770  0311  00A6               	movwf	dynam@ext
  2771  0312  3000               	movlw	0
  2772  0313  00A7               	movwf	dynam@ext+1
  2773  0314  3006               	movlw	6
  2774  0315  00A0               	movwf	dynam@smd
  2775  0316  3000               	movlw	0
  2776  0317  00A1               	movwf	dynam@smd+1
  2777  0318  0820               	movf	dynam@smd,w
  2778  0319  008D               	movwf	13	;volatile
  2779  031A                     l2002:
  2780                           
  2781                           ;Q5.c: 233:                 if((cw==3)&&(ext==0)){cw=0;ccw=1;ext=1;PORTB=smd=0x03;}
  2782  031A  3003               	movlw	3
  2783  031B  0664               	xorwf	_cw,w
  2784  031C  0465               	iorwf	_cw+1,w
  2785  031D  1D03               	btfss	3,2
  2786  031E  2B20               	goto	u1651
  2787  031F  2B21               	goto	u1650
  2788  0320                     u1651:
  2789  0320  2AB3               	goto	l1968
  2790  0321                     u1650:
  2791  0321                     l2004:
  2792  0321  0826               	movf	dynam@ext,w
  2793  0322  0427               	iorwf	dynam@ext+1,w
  2794  0323  1D03               	btfss	3,2
  2795  0324  2B26               	goto	u1661
  2796  0325  2B27               	goto	u1660
  2797  0326                     u1661:
  2798  0326  2AB3               	goto	l1968
  2799  0327                     u1660:
  2800  0327                     l2006:
  2801  0327  01E4               	clrf	_cw
  2802  0328  01E5               	clrf	_cw+1
  2803  0329                     l2008:
  2804  0329  3001               	movlw	1
  2805  032A  00E2               	movwf	_ccw
  2806  032B  3000               	movlw	0
  2807  032C  00E3               	movwf	_ccw+1
  2808  032D                     l2010:
  2809  032D                     l2012:
  2810  032D  3003               	movlw	3
  2811  032E  00A0               	movwf	dynam@smd
  2812  032F  3000               	movlw	0
  2813  0330  00A1               	movwf	dynam@smd+1
  2814  0331  0820               	movf	dynam@smd,w
  2815  0332  008D               	movwf	13	;volatile
  2816  0333  2AB3               	goto	l1968
  2817  0334                     l2020:
  2818                           
  2819                           ;Q5.c: 237:                 if(flg==1)ccw=0;flg=0;
  2820  0334  0366               	decf	_flg,w
  2821  0335  0467               	iorwf	_flg+1,w
  2822  0336  1D03               	btfss	3,2
  2823  0337  2B39               	goto	u1671
  2824  0338  2B3A               	goto	u1670
  2825  0339                     u1671:
  2826  0339  2B3C               	goto	l129
  2827  033A                     u1670:
  2828  033A                     l2022:
  2829  033A  01E2               	clrf	_ccw
  2830  033B  01E3               	clrf	_ccw+1
  2831  033C                     l129:
  2832  033C  01E6               	clrf	_flg
  2833  033D  01E7               	clrf	_flg+1
  2834  033E                     l2024:
  2835                           
  2836                           ;Q5.c: 238:                 if((ccw==0)&&(ext==0)){ccw=1;cw=0;ext=1;PORTB=smd=0x03;}
  2837  033E  0862               	movf	_ccw,w
  2838  033F  0463               	iorwf	_ccw+1,w
  2839  0340  1D03               	btfss	3,2
  2840  0341  2B43               	goto	u1681
  2841  0342  2B44               	goto	u1680
  2842  0343                     u1681:
  2843  0343  2B5A               	goto	l2036
  2844  0344                     u1680:
  2845  0344                     l2026:
  2846  0344  0826               	movf	dynam@ext,w
  2847  0345  0427               	iorwf	dynam@ext+1,w
  2848  0346  1D03               	btfss	3,2
  2849  0347  2B49               	goto	u1691
  2850  0348  2B4A               	goto	u1690
  2851  0349                     u1691:
  2852  0349  2B5A               	goto	l2036
  2853  034A                     u1690:
  2854  034A                     l2028:
  2855  034A  3001               	movlw	1
  2856  034B  00E2               	movwf	_ccw
  2857  034C  3000               	movlw	0
  2858  034D  00E3               	movwf	_ccw+1
  2859  034E                     l2030:
  2860  034E  01E4               	clrf	_cw
  2861  034F  01E5               	clrf	_cw+1
  2862  0350                     l2032:
  2863  0350  3001               	movlw	1
  2864  0351  00A6               	movwf	dynam@ext
  2865  0352  3000               	movlw	0
  2866  0353  00A7               	movwf	dynam@ext+1
  2867  0354                     l2034:
  2868  0354  3003               	movlw	3
  2869  0355  00A0               	movwf	dynam@smd
  2870  0356  3000               	movlw	0
  2871  0357  00A1               	movwf	dynam@smd+1
  2872  0358  0820               	movf	dynam@smd,w
  2873  0359  008D               	movwf	13	;volatile
  2874  035A                     l2036:
  2875                           
  2876                           ;Q5.c: 239:                 if((ccw==1)&&(ext==0)){ccw=2;cw=3;ext=1;PORTB=smd=0x06;}
  2877  035A  0362               	decf	_ccw,w
  2878  035B  0463               	iorwf	_ccw+1,w
  2879  035C  1D03               	btfss	3,2
  2880  035D  2B5F               	goto	u1701
  2881  035E  2B60               	goto	u1700
  2882  035F                     u1701:
  2883  035F  2B78               	goto	l2042
  2884  0360                     u1700:
  2885  0360                     l2038:
  2886  0360  0826               	movf	dynam@ext,w
  2887  0361  0427               	iorwf	dynam@ext+1,w
  2888  0362  1D03               	btfss	3,2
  2889  0363  2B65               	goto	u1711
  2890  0364  2B66               	goto	u1710
  2891  0365                     u1711:
  2892  0365  2B78               	goto	l2042
  2893  0366                     u1710:
  2894  0366                     l2040:
  2895  0366  3002               	movlw	2
  2896  0367  00E2               	movwf	_ccw
  2897  0368  3000               	movlw	0
  2898  0369  00E3               	movwf	_ccw+1
  2899  036A  3003               	movlw	3
  2900  036B  00E4               	movwf	_cw
  2901  036C  3000               	movlw	0
  2902  036D  00E5               	movwf	_cw+1
  2903  036E  3001               	movlw	1
  2904  036F  00A6               	movwf	dynam@ext
  2905  0370  3000               	movlw	0
  2906  0371  00A7               	movwf	dynam@ext+1
  2907  0372  3006               	movlw	6
  2908  0373  00A0               	movwf	dynam@smd
  2909  0374  3000               	movlw	0
  2910  0375  00A1               	movwf	dynam@smd+1
  2911  0376  0820               	movf	dynam@smd,w
  2912  0377  008D               	movwf	13	;volatile
  2913  0378                     l2042:
  2914                           
  2915                           ;Q5.c: 240:                 if((ccw==2)&&(ext==0)){ccw=3;cw=2;ext=1;PORTB=smd=0x0C;}
  2916  0378  3002               	movlw	2
  2917  0379  0662               	xorwf	_ccw,w
  2918  037A  0463               	iorwf	_ccw+1,w
  2919  037B  1D03               	btfss	3,2
  2920  037C  2B7E               	goto	u1721
  2921  037D  2B7F               	goto	u1720
  2922  037E                     u1721:
  2923  037E  2B97               	goto	l2048
  2924  037F                     u1720:
  2925  037F                     l2044:
  2926  037F  0826               	movf	dynam@ext,w
  2927  0380  0427               	iorwf	dynam@ext+1,w
  2928  0381  1D03               	btfss	3,2
  2929  0382  2B84               	goto	u1731
  2930  0383  2B85               	goto	u1730
  2931  0384                     u1731:
  2932  0384  2B97               	goto	l2048
  2933  0385                     u1730:
  2934  0385                     l2046:
  2935  0385  3003               	movlw	3
  2936  0386  00E2               	movwf	_ccw
  2937  0387  3000               	movlw	0
  2938  0388  00E3               	movwf	_ccw+1
  2939  0389  3002               	movlw	2
  2940  038A  00E4               	movwf	_cw
  2941  038B  3000               	movlw	0
  2942  038C  00E5               	movwf	_cw+1
  2943  038D  3001               	movlw	1
  2944  038E  00A6               	movwf	dynam@ext
  2945  038F  3000               	movlw	0
  2946  0390  00A7               	movwf	dynam@ext+1
  2947  0391  300C               	movlw	12
  2948  0392  00A0               	movwf	dynam@smd
  2949  0393  3000               	movlw	0
  2950  0394  00A1               	movwf	dynam@smd+1
  2951  0395  0820               	movf	dynam@smd,w
  2952  0396  008D               	movwf	13	;volatile
  2953  0397                     l2048:
  2954                           
  2955                           ;Q5.c: 241:                 if((ccw==3)&&(ext==0)){ccw=0;cw=1;ext=1;PORTB=smd=0x09;}
  2956  0397  3003               	movlw	3
  2957  0398  0662               	xorwf	_ccw,w
  2958  0399  0463               	iorwf	_ccw+1,w
  2959  039A  1D03               	btfss	3,2
  2960  039B  2B9D               	goto	u1741
  2961  039C  2B9E               	goto	u1740
  2962  039D                     u1741:
  2963  039D  2AB3               	goto	l1968
  2964  039E                     u1740:
  2965  039E                     l2050:
  2966  039E  0826               	movf	dynam@ext,w
  2967  039F  0427               	iorwf	dynam@ext+1,w
  2968  03A0  1D03               	btfss	3,2
  2969  03A1  2BA3               	goto	u1751
  2970  03A2  2BA4               	goto	u1750
  2971  03A3                     u1751:
  2972  03A3  2AB3               	goto	l1968
  2973  03A4                     u1750:
  2974  03A4                     l2052:
  2975  03A4  01E2               	clrf	_ccw
  2976  03A5  01E3               	clrf	_ccw+1
  2977  03A6                     l2054:
  2978  03A6  3001               	movlw	1
  2979  03A7  00E4               	movwf	_cw
  2980  03A8  3000               	movlw	0
  2981  03A9  00E5               	movwf	_cw+1
  2982  03AA                     l2056:
  2983  03AA                     l2058:
  2984  03AA  3009               	movlw	9
  2985  03AB  00A0               	movwf	dynam@smd
  2986  03AC  3000               	movlw	0
  2987  03AD  00A1               	movwf	dynam@smd+1
  2988  03AE  0820               	movf	dynam@smd,w
  2989  03AF  008D               	movwf	13	;volatile
  2990  03B0  2AB3               	goto	l1968
  2991  03B1                     l2066:
  2992                           
  2993                           ;Q5.c: 245:                 cw=ccw=0;
  2994  03B1  01E2               	clrf	_ccw
  2995  03B2  01E3               	clrf	_ccw+1
  2996  03B3  01E4               	clrf	_cw
  2997  03B4  01E5               	clrf	_cw+1
  2998                           
  2999                           ;Q5.c: 246:                 break;
  3000  03B5  2BC6               	goto	l135
  3001  03B6                     l2070:
  3002                           
  3003                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3004                           ; Switch size 1, requested type "simple"
  3005                           ; Number of cases is 1, Range of values is 0 to 0
  3006                           ; switch strategies available:
  3007                           ; Name         Instructions Cycles
  3008                           ; simple_byte            4     3 (average)
  3009                           ; direct_byte            8     6 (fixed)
  3010                           ; jumptable            260     6 (fixed)
  3011                           ;	Chosen strategy is simple_byte
  3012  03B6  0875               	movf	dynam@smdata+1,w
  3013  03B7  3A00               	xorlw	0	; case 0
  3014  03B8  1903               	skipnz
  3015  03B9  2BBB               	goto	l2884
  3016  03BA  2BB1               	goto	l2066
  3017  03BB                     l2884:
  3018                           
  3019                           ; Switch size 1, requested type "simple"
  3020                           ; Number of cases is 3, Range of values is 0 to 2
  3021                           ; switch strategies available:
  3022                           ; Name         Instructions Cycles
  3023                           ; simple_byte           10     6 (average)
  3024                           ; direct_byte           12     6 (fixed)
  3025                           ; jumptable            260     6 (fixed)
  3026                           ;	Chosen strategy is simple_byte
  3027  03BB  0874               	movf	dynam@smdata,w
  3028  03BC  3A00               	xorlw	0	; case 0
  3029  03BD  1903               	skipnz
  3030  03BE  2AB2               	goto	l1964
  3031  03BF  3A01               	xorlw	1	; case 1
  3032  03C0  1903               	skipnz
  3033  03C1  2AB7               	goto	l1974
  3034  03C2  3A03               	xorlw	3	; case 2
  3035  03C3  1903               	skipnz
  3036  03C4  2B34               	goto	l2020
  3037  03C5  2BB1               	goto	l2066
  3038  03C6                     l135:
  3039  03C6  0008               	return
  3040  03C7                     __end_of_dynam:
  3041                           
  3042                           	psect	text7
  3043  03C7                     __ptext7:	
  3044 ;; *************** function _hen7 *****************
  3045 ;; Defined at:
  3046 ;;		line 252 in file "Q5.c"
  3047 ;; Parameters:    Size  Location     Type
  3048 ;;  value           2    4[BANK0 ] int 
  3049 ;;  ns1             2    6[BANK0 ] unsigned short 
  3050 ;; Auto vars:     Size  Location     Type
  3051 ;;  n               2   22[BANK0 ] unsigned int 
  3052 ;;  m               2   20[BANK0 ] unsigned int 
  3053 ;;  l               2   18[BANK0 ] unsigned int 
  3054 ;;  value100        2   16[BANK0 ] int 
  3055 ;;  value10         2   14[BANK0 ] int 
  3056 ;;  value1          2   12[BANK0 ] int 
  3057 ;; Return value:  Size  Location     Type
  3058 ;;                  1    wreg      void 
  3059 ;; Registers used:
  3060 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3061 ;; Tracked objects:
  3062 ;;		On entry : 0/0
  3063 ;;		On exit  : 0/0
  3064 ;;		Unchanged: 0/0
  3065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3066 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3067 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3068 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3069 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3070 ;;Total ram usage:       20 bytes
  3071 ;; Hardware stack levels used:    1
  3072 ;; Hardware stack levels required when called:    1
  3073 ;; This function calls:
  3074 ;;		___awdiv
  3075 ;;		___awmod
  3076 ;;		___wmul
  3077 ;; This function is called by:
  3078 ;;		_main
  3079 ;; This function uses a non-reentrant model
  3080 ;;
  3081                           
  3082                           
  3083                           ;psect for function _hen7
  3084  03C7                     _hen7:
  3085  03C7                     l2230:	
  3086                           ;incstack = 0
  3087                           ; Regs used in _hen7: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3088                           
  3089                           
  3090                           ;Q5.c: 252: void hen7(int value,unsigned short ns1);Q5.c: 253: {;Q5.c: 254:     int valu
      +                          e100,value10,value1;;Q5.c: 255:     unsigned int l,m,n;;Q5.c: 256:     fugou=0;
  3091  03C7  0020               	movlb	0	; select bank0
  3092  03C8  01D0               	clrf	_fugou
  3093  03C9  01D1               	clrf	_fugou+1
  3094  03CA                     l2232:
  3095                           
  3096                           ;Q5.c: 257:     if(value<0)fugou=1;
  3097  03CA  1FA5               	btfss	hen7@value+1,7
  3098  03CB  2BCD               	goto	u2031
  3099  03CC  2BCE               	goto	u2030
  3100  03CD                     u2031:
  3101  03CD  2BD2               	goto	l2236
  3102  03CE                     u2030:
  3103  03CE                     l2234:
  3104  03CE  3001               	movlw	1
  3105  03CF  00D0               	movwf	_fugou
  3106  03D0  3000               	movlw	0
  3107  03D1  00D1               	movwf	_fugou+1
  3108  03D2                     l2236:
  3109                           
  3110                           ;Q5.c: 258:     if(fugou==1){
  3111  03D2  0350               	decf	_fugou,w
  3112  03D3  0451               	iorwf	_fugou+1,w
  3113  03D4  1D03               	btfss	3,2
  3114  03D5  2BD7               	goto	u2041
  3115  03D6  2BD8               	goto	u2040
  3116  03D7                     u2041:
  3117  03D7  2D80               	goto	l2370
  3118  03D8                     u2040:
  3119  03D8                     l2238:
  3120                           
  3121                           ;Q5.c: 259:         value=(~(value-1));
  3122  03D8  0824               	movf	hen7@value,w
  3123  03D9  3EFF               	addlw	255
  3124  03DA  00A8               	movwf	??_hen7
  3125  03DB  30FF               	movlw	255
  3126  03DC  3D25               	addwfc	hen7@value+1,w
  3127  03DD  00A9               	movwf	??_hen7+1
  3128  03DE  0928               	comf	??_hen7,w
  3129  03DF  00A4               	movwf	hen7@value
  3130  03E0  0929               	comf	??_hen7+1,w
  3131  03E1  00A5               	movwf	hen7@value+1
  3132  03E2  2D80               	goto	l2370
  3133  03E3                     l2240:
  3134                           
  3135                           ;Q5.c: 263:                 value100=value/100;
  3136  03E3  3064               	movlw	100
  3137  03E4  00F6               	movwf	___awdiv@divisor
  3138  03E5  3000               	movlw	0
  3139  03E6  00F7               	movwf	___awdiv@divisor+1
  3140  03E7  0825               	movf	hen7@value+1,w
  3141  03E8  00F9               	movwf	___awdiv@dividend+1
  3142  03E9  0824               	movf	hen7@value,w
  3143  03EA  00F8               	movwf	___awdiv@dividend
  3144  03EB  3181  21FD  3183   	fcall	___awdiv
  3145  03EE  0877               	movf	?___awdiv+1,w
  3146  03EF  0020               	movlb	0	; select bank0
  3147  03F0  00B1               	movwf	hen7@value100+1
  3148  03F1  0876               	movf	?___awdiv,w
  3149  03F2  00B0               	movwf	hen7@value100
  3150                           
  3151                           ;Q5.c: 264:                 value10 =(value-(value100*100))/10;
  3152  03F3  300A               	movlw	10
  3153  03F4  00F6               	movwf	___awdiv@divisor
  3154  03F5  3000               	movlw	0
  3155  03F6  00F7               	movwf	___awdiv@divisor+1
  3156  03F7  0831               	movf	hen7@value100+1,w
  3157  03F8  00F1               	movwf	___wmul@multiplier+1
  3158  03F9  0830               	movf	hen7@value100,w
  3159  03FA  00F0               	movwf	___wmul@multiplier
  3160  03FB  309C               	movlw	156
  3161  03FC  00F2               	movwf	___wmul@multiplicand
  3162  03FD  30FF               	movlw	255
  3163  03FE  00F3               	movwf	___wmul@multiplicand+1
  3164  03FF  3180  2022  3183   	fcall	___wmul
  3165  0402  0020               	movlb	0	; select bank0
  3166  0403  0824               	movf	hen7@value,w
  3167  0404  0770               	addwf	?___wmul,w
  3168  0405  00F8               	movwf	___awdiv@dividend
  3169  0406  0825               	movf	hen7@value+1,w
  3170  0407  3D71               	addwfc	?___wmul+1,w
  3171  0408  00F9               	movwf	___awdiv@dividend+1
  3172  0409  3181  21FD  3183   	fcall	___awdiv
  3173  040C  0877               	movf	?___awdiv+1,w
  3174  040D  0020               	movlb	0	; select bank0
  3175  040E  00AF               	movwf	hen7@value10+1
  3176  040F  0876               	movf	?___awdiv,w
  3177  0410  00AE               	movwf	hen7@value10
  3178                           
  3179                           ;Q5.c: 265:                 value1 =value%10;
  3180  0411  300A               	movlw	10
  3181  0412  00F0               	movwf	___awmod@divisor
  3182  0413  3000               	movlw	0
  3183  0414  00F1               	movwf	___awmod@divisor+1
  3184  0415  0825               	movf	hen7@value+1,w
  3185  0416  00F3               	movwf	___awmod@dividend+1
  3186  0417  0824               	movf	hen7@value,w
  3187  0418  00F2               	movwf	___awmod@dividend
  3188  0419  3181  21AA  3183   	fcall	___awmod
  3189  041C  0871               	movf	?___awmod+1,w
  3190  041D  0020               	movlb	0	; select bank0
  3191  041E  00AD               	movwf	hen7@value1+1
  3192  041F  0870               	movf	?___awmod,w
  3193  0420  00AC               	movwf	hen7@value1
  3194  0421                     l2242:
  3195                           
  3196                           ;Q5.c: 266:                 code1000=(0x01|0x02|0x04|0x08|0x10|0x20);
  3197  0421  303F               	movlw	63
  3198  0422  00D8               	movwf	_code1000
  3199  0423  3000               	movlw	0
  3200  0424  00D9               	movwf	_code1000+1
  3201  0425                     l2244:
  3202                           
  3203                           ;Q5.c: 267:                 for(l=0;l<=2;++l){
  3204  0425  01B2               	clrf	hen7@l
  3205  0426  01B3               	clrf	hen7@l+1
  3206  0427                     l2250:
  3207                           
  3208                           ;Q5.c: 268:                     if(value100==l)code100=samp[l];
  3209  0427  0833               	movf	hen7@l+1,w
  3210  0428  0631               	xorwf	hen7@value100+1,w
  3211  0429  1D03               	skipz
  3212  042A  2C2D               	goto	u2055
  3213  042B  0832               	movf	hen7@l,w
  3214  042C  0630               	xorwf	hen7@value100,w
  3215  042D                     u2055:
  3216  042D  1D03               	skipz
  3217  042E  2C30               	goto	u2051
  3218  042F  2C31               	goto	u2050
  3219  0430                     u2051:
  3220  0430  2C39               	goto	l2254
  3221  0431                     u2050:
  3222  0431                     l2252:
  3223  0431  3532               	lslf	hen7@l,w
  3224  0432  3EA0               	addlw	(low (_samp| 0))& (0+255)
  3225  0433  0086               	movwf	6
  3226  0434  0187               	clrf	7
  3227  0435  3F40               	moviw [0]fsr1
  3228  0436  00D6               	movwf	_code100
  3229  0437  3F41               	moviw [1]fsr1
  3230  0438  00D7               	movwf	_code100+1
  3231  0439                     l2254:
  3232                           
  3233                           ;Q5.c: 269:                 }
  3234  0439  3001               	movlw	1
  3235  043A  07B2               	addwf	hen7@l,f
  3236  043B  3000               	movlw	0
  3237  043C  3DB3               	addwfc	hen7@l+1,f
  3238  043D                     l2256:
  3239  043D  3000               	movlw	0
  3240  043E  0233               	subwf	hen7@l+1,w
  3241  043F  3003               	movlw	3
  3242  0440  1903               	skipnz
  3243  0441  0232               	subwf	hen7@l,w
  3244  0442  1C03               	skipc
  3245  0443  2C45               	goto	u2061
  3246  0444  2C46               	goto	u2060
  3247  0445                     u2061:
  3248  0445  2C27               	goto	l2250
  3249  0446                     u2060:
  3250  0446                     l2258:
  3251                           
  3252                           ;Q5.c: 270:                 for(m=0;m<=9;++m){
  3253  0446  01B4               	clrf	hen7@m
  3254  0447  01B5               	clrf	hen7@m+1
  3255  0448                     l2264:
  3256                           
  3257                           ;Q5.c: 271:                     if(value10==m)code10=samp[m];
  3258  0448  0835               	movf	hen7@m+1,w
  3259  0449  062F               	xorwf	hen7@value10+1,w
  3260  044A  1D03               	skipz
  3261  044B  2C4E               	goto	u2075
  3262  044C  0834               	movf	hen7@m,w
  3263  044D  062E               	xorwf	hen7@value10,w
  3264  044E                     u2075:
  3265  044E  1D03               	skipz
  3266  044F  2C51               	goto	u2071
  3267  0450  2C52               	goto	u2070
  3268  0451                     u2071:
  3269  0451  2C5A               	goto	l2268
  3270  0452                     u2070:
  3271  0452                     l2266:
  3272  0452  3534               	lslf	hen7@m,w
  3273  0453  3EA0               	addlw	(low (_samp| 0))& (0+255)
  3274  0454  0086               	movwf	6
  3275  0455  0187               	clrf	7
  3276  0456  3F40               	moviw [0]fsr1
  3277  0457  00D4               	movwf	_code10
  3278  0458  3F41               	moviw [1]fsr1
  3279  0459  00D5               	movwf	_code10+1
  3280  045A                     l2268:
  3281                           
  3282                           ;Q5.c: 272:                 }
  3283  045A  3001               	movlw	1
  3284  045B  07B4               	addwf	hen7@m,f
  3285  045C  3000               	movlw	0
  3286  045D  3DB5               	addwfc	hen7@m+1,f
  3287  045E                     l2270:
  3288  045E  3000               	movlw	0
  3289  045F  0235               	subwf	hen7@m+1,w
  3290  0460  300A               	movlw	10
  3291  0461  1903               	skipnz
  3292  0462  0234               	subwf	hen7@m,w
  3293  0463  1C03               	skipc
  3294  0464  2C66               	goto	u2081
  3295  0465  2C67               	goto	u2080
  3296  0466                     u2081:
  3297  0466  2C48               	goto	l2264
  3298  0467                     u2080:
  3299  0467                     l2272:
  3300                           
  3301                           ;Q5.c: 273:                 for(n=0;n<=9;++n){
  3302  0467  01B6               	clrf	hen7@n
  3303  0468  01B7               	clrf	hen7@n+1
  3304  0469                     l2278:
  3305                           
  3306                           ;Q5.c: 274:                     if(value1==n)code1=samp[n];
  3307  0469  0837               	movf	hen7@n+1,w
  3308  046A  062D               	xorwf	hen7@value1+1,w
  3309  046B  1D03               	skipz
  3310  046C  2C6F               	goto	u2095
  3311  046D  0836               	movf	hen7@n,w
  3312  046E  062C               	xorwf	hen7@value1,w
  3313  046F                     u2095:
  3314  046F  1D03               	skipz
  3315  0470  2C72               	goto	u2091
  3316  0471  2C73               	goto	u2090
  3317  0472                     u2091:
  3318  0472  2C7B               	goto	l2282
  3319  0473                     u2090:
  3320  0473                     l2280:
  3321  0473  3536               	lslf	hen7@n,w
  3322  0474  3EA0               	addlw	(low (_samp| 0))& (0+255)
  3323  0475  0086               	movwf	6
  3324  0476  0187               	clrf	7
  3325  0477  3F40               	moviw [0]fsr1
  3326  0478  00D2               	movwf	_code1
  3327  0479  3F41               	moviw [1]fsr1
  3328  047A  00D3               	movwf	_code1+1
  3329  047B                     l2282:
  3330                           
  3331                           ;Q5.c: 275:                 }
  3332  047B  3001               	movlw	1
  3333  047C  07B6               	addwf	hen7@n,f
  3334  047D  3000               	movlw	0
  3335  047E  3DB7               	addwfc	hen7@n+1,f
  3336  047F                     l2284:
  3337  047F  3000               	movlw	0
  3338  0480  0237               	subwf	hen7@n+1,w
  3339  0481  300A               	movlw	10
  3340  0482  1903               	skipnz
  3341  0483  0236               	subwf	hen7@n,w
  3342  0484  1C03               	skipc
  3343  0485  2C87               	goto	u2101
  3344  0486  2C88               	goto	u2100
  3345  0487                     u2101:
  3346  0487  2C69               	goto	l2278
  3347  0488                     u2100:
  3348  0488  2D90               	goto	l170
  3349  0489                     l2286:
  3350                           
  3351                           ;Q5.c: 278:                 value100=value>>6;
  3352  0489  0825               	movf	hen7@value+1,w
  3353  048A  00A9               	movwf	??_hen7+1
  3354  048B  0824               	movf	hen7@value,w
  3355  048C  00A8               	movwf	??_hen7
  3356  048D  3006               	movlw	6
  3357  048E  00AA               	movwf	??_hen7+2
  3358  048F                     u2115:
  3359  048F  0D29               	rlf	??_hen7+1,w
  3360  0490  0CA9               	rrf	??_hen7+1,f
  3361  0491  0CA8               	rrf	??_hen7,f
  3362  0492  0BAA               	decfsz	??_hen7+2,f
  3363  0493  2C8F               	goto	u2115
  3364  0494  0828               	movf	??_hen7,w
  3365  0495  00B0               	movwf	hen7@value100
  3366  0496  0829               	movf	??_hen7+1,w
  3367  0497  00B1               	movwf	hen7@value100+1
  3368                           
  3369                           ;Q5.c: 279:                 value10 =(value-(value100<<6))>>3;
  3370  0498  0831               	movf	hen7@value100+1,w
  3371  0499  00A9               	movwf	??_hen7+1
  3372  049A  0830               	movf	hen7@value100,w
  3373  049B  00A8               	movwf	??_hen7
  3374  049C  3006               	movlw	6
  3375  049D                     u2125:
  3376  049D  35A8               	lslf	??_hen7,f
  3377  049E  0DA9               	rlf	??_hen7+1,f
  3378  049F  0B89               	decfsz	9,f
  3379  04A0  2C9D               	goto	u2125
  3380  04A1  0828               	movf	??_hen7,w
  3381  04A2  0224               	subwf	hen7@value,w
  3382  04A3  00AA               	movwf	??_hen7+2
  3383  04A4  0829               	movf	??_hen7+1,w
  3384  04A5  3B25               	subwfb	hen7@value+1,w
  3385  04A6  00AB               	movwf	??_hen7+3
  3386  04A7  0D2B               	rlf	??_hen7+3,w
  3387  04A8  0CAB               	rrf	??_hen7+3,f
  3388  04A9  0CAA               	rrf	??_hen7+2,f
  3389  04AA  0D2B               	rlf	??_hen7+3,w
  3390  04AB  0CAB               	rrf	??_hen7+3,f
  3391  04AC  0CAA               	rrf	??_hen7+2,f
  3392  04AD  0D2B               	rlf	??_hen7+3,w
  3393  04AE  0CAB               	rrf	??_hen7+3,f
  3394  04AF  0CAA               	rrf	??_hen7+2,f
  3395  04B0  082A               	movf	??_hen7+2,w
  3396  04B1  00AE               	movwf	hen7@value10
  3397  04B2  082B               	movf	??_hen7+3,w
  3398  04B3  00AF               	movwf	hen7@value10+1
  3399  04B4                     l2288:
  3400                           
  3401                           ;Q5.c: 280:                 value =value%8;
  3402  04B4  3007               	movlw	7
  3403  04B5  0524               	andwf	hen7@value,w
  3404  04B6  00A4               	movwf	hen7@value
  3405  04B7  3000               	movlw	0
  3406  04B8  0525               	andwf	hen7@value+1,w
  3407  04B9  00A5               	movwf	hen7@value+1
  3408  04BA                     l2290:
  3409                           
  3410                           ;Q5.c: 281:                 code1000=(0x01|0x02|0x04|0x08|0x10|0x20);
  3411  04BA  303F               	movlw	63
  3412  04BB  00D8               	movwf	_code1000
  3413  04BC  3000               	movlw	0
  3414  04BD  00D9               	movwf	_code1000+1
  3415  04BE                     l2292:
  3416                           
  3417                           ;Q5.c: 282:                 for(l=0;l<=3;++l){
  3418  04BE  01B2               	clrf	hen7@l
  3419  04BF  01B3               	clrf	hen7@l+1
  3420  04C0                     l2298:
  3421                           
  3422                           ;Q5.c: 283:                     if(value100==l)code100=samp[l];
  3423  04C0  0833               	movf	hen7@l+1,w
  3424  04C1  0631               	xorwf	hen7@value100+1,w
  3425  04C2  1D03               	skipz
  3426  04C3  2CC6               	goto	u2135
  3427  04C4  0832               	movf	hen7@l,w
  3428  04C5  0630               	xorwf	hen7@value100,w
  3429  04C6                     u2135:
  3430  04C6  1D03               	skipz
  3431  04C7  2CC9               	goto	u2131
  3432  04C8  2CCA               	goto	u2130
  3433  04C9                     u2131:
  3434  04C9  2CD2               	goto	l2302
  3435  04CA                     u2130:
  3436  04CA                     l2300:
  3437  04CA  3532               	lslf	hen7@l,w
  3438  04CB  3EA0               	addlw	(low (_samp| 0))& (0+255)
  3439  04CC  0086               	movwf	6
  3440  04CD  0187               	clrf	7
  3441  04CE  3F40               	moviw [0]fsr1
  3442  04CF  00D6               	movwf	_code100
  3443  04D0  3F41               	moviw [1]fsr1
  3444  04D1  00D7               	movwf	_code100+1
  3445  04D2                     l2302:
  3446                           
  3447                           ;Q5.c: 284:                 }
  3448  04D2  3001               	movlw	1
  3449  04D3  07B2               	addwf	hen7@l,f
  3450  04D4  3000               	movlw	0
  3451  04D5  3DB3               	addwfc	hen7@l+1,f
  3452  04D6                     l2304:
  3453  04D6  3000               	movlw	0
  3454  04D7  0233               	subwf	hen7@l+1,w
  3455  04D8  3004               	movlw	4
  3456  04D9  1903               	skipnz
  3457  04DA  0232               	subwf	hen7@l,w
  3458  04DB  1C03               	skipc
  3459  04DC  2CDE               	goto	u2141
  3460  04DD  2CDF               	goto	u2140
  3461  04DE                     u2141:
  3462  04DE  2CC0               	goto	l2298
  3463  04DF                     u2140:
  3464  04DF                     l2306:
  3465                           
  3466                           ;Q5.c: 285:                 for(m=0;m<=7;++m){
  3467  04DF  01B4               	clrf	hen7@m
  3468  04E0  01B5               	clrf	hen7@m+1
  3469  04E1                     l2312:
  3470                           
  3471                           ;Q5.c: 286:                     if(value10==m)code10=samp[m];
  3472  04E1  0835               	movf	hen7@m+1,w
  3473  04E2  062F               	xorwf	hen7@value10+1,w
  3474  04E3  1D03               	skipz
  3475  04E4  2CE7               	goto	u2155
  3476  04E5  0834               	movf	hen7@m,w
  3477  04E6  062E               	xorwf	hen7@value10,w
  3478  04E7                     u2155:
  3479  04E7  1D03               	skipz
  3480  04E8  2CEA               	goto	u2151
  3481  04E9  2CEB               	goto	u2150
  3482  04EA                     u2151:
  3483  04EA  2CF3               	goto	l2316
  3484  04EB                     u2150:
  3485  04EB                     l2314:
  3486  04EB  3534               	lslf	hen7@m,w
  3487  04EC  3EA0               	addlw	(low (_samp| 0))& (0+255)
  3488  04ED  0086               	movwf	6
  3489  04EE  0187               	clrf	7
  3490  04EF  3F40               	moviw [0]fsr1
  3491  04F0  00D4               	movwf	_code10
  3492  04F1  3F41               	moviw [1]fsr1
  3493  04F2  00D5               	movwf	_code10+1
  3494  04F3                     l2316:
  3495                           
  3496                           ;Q5.c: 287:                 }
  3497  04F3  3001               	movlw	1
  3498  04F4  07B4               	addwf	hen7@m,f
  3499  04F5  3000               	movlw	0
  3500  04F6  3DB5               	addwfc	hen7@m+1,f
  3501  04F7                     l2318:
  3502  04F7  3000               	movlw	0
  3503  04F8  0235               	subwf	hen7@m+1,w
  3504  04F9  3008               	movlw	8
  3505  04FA  1903               	skipnz
  3506  04FB  0234               	subwf	hen7@m,w
  3507  04FC  1C03               	skipc
  3508  04FD  2CFF               	goto	u2161
  3509  04FE  2D00               	goto	u2160
  3510  04FF                     u2161:
  3511  04FF  2CE1               	goto	l2312
  3512  0500                     u2160:
  3513  0500                     l2320:
  3514                           
  3515                           ;Q5.c: 288:                 for(n=0;n<=7;++n){
  3516  0500  01B6               	clrf	hen7@n
  3517  0501  01B7               	clrf	hen7@n+1
  3518  0502                     l2326:
  3519                           
  3520                           ;Q5.c: 289:                     if(value1==n)code1=samp[n];
  3521  0502  0837               	movf	hen7@n+1,w
  3522  0503  062D               	xorwf	hen7@value1+1,w
  3523  0504  1D03               	skipz
  3524  0505  2D08               	goto	u2175
  3525  0506  0836               	movf	hen7@n,w
  3526  0507  062C               	xorwf	hen7@value1,w
  3527  0508                     u2175:
  3528  0508  1D03               	skipz
  3529  0509  2D0B               	goto	u2171
  3530  050A  2D0C               	goto	u2170
  3531  050B                     u2171:
  3532  050B  2D14               	goto	l2330
  3533  050C                     u2170:
  3534  050C                     l2328:
  3535  050C  3536               	lslf	hen7@n,w
  3536  050D  3EA0               	addlw	(low (_samp| 0))& (0+255)
  3537  050E  0086               	movwf	6
  3538  050F  0187               	clrf	7
  3539  0510  3F40               	moviw [0]fsr1
  3540  0511  00D2               	movwf	_code1
  3541  0512  3F41               	moviw [1]fsr1
  3542  0513  00D3               	movwf	_code1+1
  3543  0514                     l2330:
  3544                           
  3545                           ;Q5.c: 290:                 }
  3546  0514  3001               	movlw	1
  3547  0515  07B6               	addwf	hen7@n,f
  3548  0516  3000               	movlw	0
  3549  0517  3DB7               	addwfc	hen7@n+1,f
  3550  0518                     l2332:
  3551  0518  3000               	movlw	0
  3552  0519  0237               	subwf	hen7@n+1,w
  3553  051A  3008               	movlw	8
  3554  051B  1903               	skipnz
  3555  051C  0236               	subwf	hen7@n,w
  3556  051D  1C03               	skipc
  3557  051E  2D20               	goto	u2181
  3558  051F  2D21               	goto	u2180
  3559  0520                     u2181:
  3560  0520  2D02               	goto	l2326
  3561  0521                     u2180:
  3562  0521  2D90               	goto	l170
  3563  0522                     l2334:
  3564                           
  3565                           ;Q5.c: 293:                 code1000=(0x01|0x02|0x04|0x08|0x10|0x20);
  3566  0522  303F               	movlw	63
  3567  0523  00D8               	movwf	_code1000
  3568  0524  3000               	movlw	0
  3569  0525  00D9               	movwf	_code1000+1
  3570                           
  3571                           ;Q5.c: 294:                 code100=(0x01|0x02|0x04|0x08|0x10|0x20);
  3572  0526  303F               	movlw	63
  3573  0527  00D6               	movwf	_code100
  3574  0528  3000               	movlw	0
  3575  0529  00D7               	movwf	_code100+1
  3576  052A                     l2336:
  3577                           
  3578                           ;Q5.c: 295:                 value10 =value>>4;
  3579  052A  0E24               	swapf	hen7@value,w
  3580  052B  390F               	andlw	15
  3581  052C  00AE               	movwf	hen7@value10
  3582  052D  0E25               	swapf	hen7@value+1,w
  3583  052E  39F0               	andlw	240
  3584  052F  04AE               	iorwf	hen7@value10,f
  3585  0530  0E25               	swapf	hen7@value+1,w
  3586  0531  390F               	andlw	15
  3587  0532  00AF               	movwf	hen7@value10+1
  3588  0533  30F0               	movlw	240
  3589  0534  1DAF               	btfss	hen7@value10+1,3
  3590  0535  3000               	movlw	0
  3591  0536  04AF               	iorwf	hen7@value10+1,f
  3592  0537                     l2338:
  3593                           
  3594                           ;Q5.c: 296:                 value1 =value%16;
  3595  0537  300F               	movlw	15
  3596  0538  0524               	andwf	hen7@value,w
  3597  0539  00AC               	movwf	hen7@value1
  3598  053A  3000               	movlw	0
  3599  053B  0525               	andwf	hen7@value+1,w
  3600  053C  00AD               	movwf	hen7@value1+1
  3601  053D                     l2340:
  3602                           
  3603                           ;Q5.c: 297:                 for(m=0;m<=15;++m){
  3604  053D  01B4               	clrf	hen7@m
  3605  053E  01B5               	clrf	hen7@m+1
  3606  053F                     l2346:
  3607                           
  3608                           ;Q5.c: 298:                     if(value10==m)code10=samp[m];
  3609  053F  0835               	movf	hen7@m+1,w
  3610  0540  062F               	xorwf	hen7@value10+1,w
  3611  0541  1D03               	skipz
  3612  0542  2D45               	goto	u2195
  3613  0543  0834               	movf	hen7@m,w
  3614  0544  062E               	xorwf	hen7@value10,w
  3615  0545                     u2195:
  3616  0545  1D03               	skipz
  3617  0546  2D48               	goto	u2191
  3618  0547  2D49               	goto	u2190
  3619  0548                     u2191:
  3620  0548  2D51               	goto	l2350
  3621  0549                     u2190:
  3622  0549                     l2348:
  3623  0549  3534               	lslf	hen7@m,w
  3624  054A  3EA0               	addlw	(low (_samp| 0))& (0+255)
  3625  054B  0086               	movwf	6
  3626  054C  0187               	clrf	7
  3627  054D  3F40               	moviw [0]fsr1
  3628  054E  00D4               	movwf	_code10
  3629  054F  3F41               	moviw [1]fsr1
  3630  0550  00D5               	movwf	_code10+1
  3631  0551                     l2350:
  3632                           
  3633                           ;Q5.c: 299:                 }
  3634  0551  3001               	movlw	1
  3635  0552  07B4               	addwf	hen7@m,f
  3636  0553  3000               	movlw	0
  3637  0554  3DB5               	addwfc	hen7@m+1,f
  3638  0555                     l2352:
  3639  0555  3000               	movlw	0
  3640  0556  0235               	subwf	hen7@m+1,w
  3641  0557  3010               	movlw	16
  3642  0558  1903               	skipnz
  3643  0559  0234               	subwf	hen7@m,w
  3644  055A  1C03               	skipc
  3645  055B  2D5D               	goto	u2201
  3646  055C  2D5E               	goto	u2200
  3647  055D                     u2201:
  3648  055D  2D3F               	goto	l2346
  3649  055E                     u2200:
  3650  055E                     l2354:
  3651                           
  3652                           ;Q5.c: 300:                 for(n=0;n<=15;++n){
  3653  055E  01B6               	clrf	hen7@n
  3654  055F  01B7               	clrf	hen7@n+1
  3655  0560                     l2360:
  3656                           
  3657                           ;Q5.c: 301:                     if(value1==n)code1=samp[n];
  3658  0560  0837               	movf	hen7@n+1,w
  3659  0561  062D               	xorwf	hen7@value1+1,w
  3660  0562  1D03               	skipz
  3661  0563  2D66               	goto	u2215
  3662  0564  0836               	movf	hen7@n,w
  3663  0565  062C               	xorwf	hen7@value1,w
  3664  0566                     u2215:
  3665  0566  1D03               	skipz
  3666  0567  2D69               	goto	u2211
  3667  0568  2D6A               	goto	u2210
  3668  0569                     u2211:
  3669  0569  2D72               	goto	l2364
  3670  056A                     u2210:
  3671  056A                     l2362:
  3672  056A  3536               	lslf	hen7@n,w
  3673  056B  3EA0               	addlw	(low (_samp| 0))& (0+255)
  3674  056C  0086               	movwf	6
  3675  056D  0187               	clrf	7
  3676  056E  3F40               	moviw [0]fsr1
  3677  056F  00D2               	movwf	_code1
  3678  0570  3F41               	moviw [1]fsr1
  3679  0571  00D3               	movwf	_code1+1
  3680  0572                     l2364:
  3681                           
  3682                           ;Q5.c: 302:                 }
  3683  0572  3001               	movlw	1
  3684  0573  07B6               	addwf	hen7@n,f
  3685  0574  3000               	movlw	0
  3686  0575  3DB7               	addwfc	hen7@n+1,f
  3687  0576                     l2366:
  3688  0576  3000               	movlw	0
  3689  0577  0237               	subwf	hen7@n+1,w
  3690  0578  3010               	movlw	16
  3691  0579  1903               	skipnz
  3692  057A  0236               	subwf	hen7@n,w
  3693  057B  1C03               	skipc
  3694  057C  2D7E               	goto	u2221
  3695  057D  2D7F               	goto	u2220
  3696  057E                     u2221:
  3697  057E  2D60               	goto	l2360
  3698  057F                     u2220:
  3699  057F  2D90               	goto	l170
  3700  0580                     l2370:
  3701                           
  3702                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3703                           ; Switch size 1, requested type "simple"
  3704                           ; Number of cases is 1, Range of values is 0 to 0
  3705                           ; switch strategies available:
  3706                           ; Name         Instructions Cycles
  3707                           ; simple_byte            4     3 (average)
  3708                           ; direct_byte            8     6 (fixed)
  3709                           ; jumptable            260     6 (fixed)
  3710                           ;	Chosen strategy is simple_byte
  3711  0580  0827               	movf	hen7@ns1+1,w
  3712  0581  3A00               	xorlw	0	; case 0
  3713  0582  1903               	skipnz
  3714  0583  2D85               	goto	l2886
  3715  0584  2D90               	goto	l170
  3716  0585                     l2886:
  3717                           
  3718                           ; Switch size 1, requested type "simple"
  3719                           ; Number of cases is 3, Range of values is 8 to 16
  3720                           ; switch strategies available:
  3721                           ; Name         Instructions Cycles
  3722                           ; simple_byte           10     6 (average)
  3723                           ; direct_byte           27     9 (fixed)
  3724                           ; jumptable            263     9 (fixed)
  3725                           ;	Chosen strategy is simple_byte
  3726  0585  0826               	movf	hen7@ns1,w
  3727  0586  3A08               	xorlw	8	; case 8
  3728  0587  1903               	skipnz
  3729  0588  2C89               	goto	l2286
  3730  0589  3A02               	xorlw	2	; case 10
  3731  058A  1903               	skipnz
  3732  058B  2BE3               	goto	l2240
  3733  058C  3A1A               	xorlw	26	; case 16
  3734  058D  1903               	skipnz
  3735  058E  2D22               	goto	l2334
  3736  058F  2D90               	goto	l170
  3737  0590                     l170:
  3738  0590  0008               	return
  3739  0591                     __end_of_hen7:
  3740                           
  3741                           	psect	text8
  3742  0022                     __ptext8:	
  3743 ;; *************** function ___wmul *****************
  3744 ;; Defined at:
  3745 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  3746 ;; Parameters:    Size  Location     Type
  3747 ;;  multiplier      2    0[COMMON] unsigned int 
  3748 ;;  multiplicand    2    2[COMMON] unsigned int 
  3749 ;; Auto vars:     Size  Location     Type
  3750 ;;  product         2    4[COMMON] unsigned int 
  3751 ;; Return value:  Size  Location     Type
  3752 ;;                  2    0[COMMON] unsigned int 
  3753 ;; Registers used:
  3754 ;;		wreg, status,2, status,0
  3755 ;; Tracked objects:
  3756 ;;		On entry : 0/0
  3757 ;;		On exit  : 0/0
  3758 ;;		Unchanged: 0/0
  3759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3760 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3761 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3763 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3764 ;;Total ram usage:        6 bytes
  3765 ;; Hardware stack levels used:    1
  3766 ;; This function calls:
  3767 ;;		Nothing
  3768 ;; This function is called by:
  3769 ;;		_hen7
  3770 ;;		_main
  3771 ;;		_wait
  3772 ;;		_hens
  3773 ;; This function uses a non-reentrant model
  3774 ;;
  3775                           
  3776                           
  3777                           ;psect for function ___wmul
  3778  0022                     ___wmul:
  3779  0022                     l2094:	
  3780                           ;incstack = 0
  3781                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3782                           
  3783  0022  01F4               	clrf	___wmul@product
  3784  0023  01F5               	clrf	___wmul@product+1
  3785  0024                     l2096:
  3786  0024  1C70               	btfss	___wmul@multiplier,0
  3787  0025  2827               	goto	u1781
  3788  0026  2828               	goto	u1780
  3789  0027                     u1781:
  3790  0027  282C               	goto	l462
  3791  0028                     u1780:
  3792  0028                     l2098:
  3793  0028  0872               	movf	___wmul@multiplicand,w
  3794  0029  07F4               	addwf	___wmul@product,f
  3795  002A  0873               	movf	___wmul@multiplicand+1,w
  3796  002B  3DF5               	addwfc	___wmul@product+1,f
  3797  002C                     l462:
  3798  002C  3001               	movlw	1
  3799  002D                     u1795:
  3800  002D  35F2               	lslf	___wmul@multiplicand,f
  3801  002E  0DF3               	rlf	___wmul@multiplicand+1,f
  3802  002F  0B89               	decfsz	9,f
  3803  0030  282D               	goto	u1795
  3804  0031                     l2100:
  3805  0031  3001               	movlw	1
  3806  0032                     u1805:
  3807  0032  36F1               	lsrf	___wmul@multiplier+1,f
  3808  0033  0CF0               	rrf	___wmul@multiplier,f
  3809  0034  0B89               	decfsz	9,f
  3810  0035  2832               	goto	u1805
  3811  0036                     l2102:
  3812  0036  0870               	movf	___wmul@multiplier,w
  3813  0037  0471               	iorwf	___wmul@multiplier+1,w
  3814  0038  1D03               	btfss	3,2
  3815  0039  283B               	goto	u1811
  3816  003A  283C               	goto	u1810
  3817  003B                     u1811:
  3818  003B  2824               	goto	l2096
  3819  003C                     u1810:
  3820  003C                     l2104:
  3821  003C  0875               	movf	___wmul@product+1,w
  3822  003D  00F1               	movwf	?___wmul+1
  3823  003E  0874               	movf	___wmul@product,w
  3824  003F  00F0               	movwf	?___wmul
  3825  0040                     l464:
  3826  0040  0008               	return
  3827  0041                     __end_of___wmul:
  3828                           
  3829                           	psect	text9
  3830  01AA                     __ptext9:	
  3831 ;; *************** function ___awmod *****************
  3832 ;; Defined at:
  3833 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awmod.c"
  3834 ;; Parameters:    Size  Location     Type
  3835 ;;  divisor         2    0[COMMON] int 
  3836 ;;  dividend        2    2[COMMON] int 
  3837 ;; Auto vars:     Size  Location     Type
  3838 ;;  sign            1    6[COMMON] unsigned char 
  3839 ;;  counter         1    5[COMMON] unsigned char 
  3840 ;; Return value:  Size  Location     Type
  3841 ;;                  2    0[COMMON] int 
  3842 ;; Registers used:
  3843 ;;		wreg, status,2, status,0
  3844 ;; Tracked objects:
  3845 ;;		On entry : 0/0
  3846 ;;		On exit  : 0/0
  3847 ;;		Unchanged: 0/0
  3848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3849 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3850 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3851 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3852 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3853 ;;Total ram usage:        7 bytes
  3854 ;; Hardware stack levels used:    1
  3855 ;; This function calls:
  3856 ;;		Nothing
  3857 ;; This function is called by:
  3858 ;;		_hen7
  3859 ;; This function uses a non-reentrant model
  3860 ;;
  3861                           
  3862                           
  3863                           ;psect for function ___awmod
  3864  01AA                     ___awmod:
  3865  01AA                     l2152:	
  3866                           ;incstack = 0
  3867                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3868                           
  3869  01AA  01F6               	clrf	___awmod@sign
  3870  01AB                     l2154:
  3871  01AB  1FF3               	btfss	___awmod@dividend+1,7
  3872  01AC  29AE               	goto	u1921
  3873  01AD  29AF               	goto	u1920
  3874  01AE                     u1921:
  3875  01AE  29B6               	goto	l2160
  3876  01AF                     u1920:
  3877  01AF                     l2156:
  3878  01AF  09F2               	comf	___awmod@dividend,f
  3879  01B0  09F3               	comf	___awmod@dividend+1,f
  3880  01B1  0AF2               	incf	___awmod@dividend,f
  3881  01B2  1903               	skipnz
  3882  01B3  0AF3               	incf	___awmod@dividend+1,f
  3883  01B4                     l2158:
  3884  01B4  01F6               	clrf	___awmod@sign
  3885  01B5  0AF6               	incf	___awmod@sign,f
  3886  01B6                     l2160:
  3887  01B6  1FF1               	btfss	___awmod@divisor+1,7
  3888  01B7  29B9               	goto	u1931
  3889  01B8  29BA               	goto	u1930
  3890  01B9                     u1931:
  3891  01B9  29BF               	goto	l2164
  3892  01BA                     u1930:
  3893  01BA                     l2162:
  3894  01BA  09F0               	comf	___awmod@divisor,f
  3895  01BB  09F1               	comf	___awmod@divisor+1,f
  3896  01BC  0AF0               	incf	___awmod@divisor,f
  3897  01BD  1903               	skipnz
  3898  01BE  0AF1               	incf	___awmod@divisor+1,f
  3899  01BF                     l2164:
  3900  01BF  0870               	movf	___awmod@divisor,w
  3901  01C0  0471               	iorwf	___awmod@divisor+1,w
  3902  01C1  1903               	btfsc	3,2
  3903  01C2  29C4               	goto	u1941
  3904  01C3  29C5               	goto	u1940
  3905  01C4                     u1941:
  3906  01C4  29EE               	goto	l2182
  3907  01C5                     u1940:
  3908  01C5                     l2166:
  3909  01C5  01F5               	clrf	___awmod@counter
  3910  01C6  0AF5               	incf	___awmod@counter,f
  3911  01C7  29D1               	goto	l2172
  3912  01C8                     l2168:
  3913  01C8  3001               	movlw	1
  3914  01C9                     u1955:
  3915  01C9  35F0               	lslf	___awmod@divisor,f
  3916  01CA  0DF1               	rlf	___awmod@divisor+1,f
  3917  01CB  0B89               	decfsz	9,f
  3918  01CC  29C9               	goto	u1955
  3919  01CD                     l2170:
  3920  01CD  3001               	movlw	1
  3921  01CE  00F4               	movwf	??___awmod
  3922  01CF  0874               	movf	??___awmod,w
  3923  01D0  07F5               	addwf	___awmod@counter,f
  3924  01D1                     l2172:
  3925  01D1  1FF1               	btfss	___awmod@divisor+1,7
  3926  01D2  29D4               	goto	u1961
  3927  01D3  29D5               	goto	u1960
  3928  01D4                     u1961:
  3929  01D4  29C8               	goto	l2168
  3930  01D5                     u1960:
  3931  01D5                     l2174:
  3932  01D5  0871               	movf	___awmod@divisor+1,w
  3933  01D6  0273               	subwf	___awmod@dividend+1,w
  3934  01D7  1D03               	skipz
  3935  01D8  29DB               	goto	u1975
  3936  01D9  0870               	movf	___awmod@divisor,w
  3937  01DA  0272               	subwf	___awmod@dividend,w
  3938  01DB                     u1975:
  3939  01DB  1C03               	skipc
  3940  01DC  29DE               	goto	u1971
  3941  01DD  29DF               	goto	u1970
  3942  01DE                     u1971:
  3943  01DE  29E3               	goto	l2178
  3944  01DF                     u1970:
  3945  01DF                     l2176:
  3946  01DF  0870               	movf	___awmod@divisor,w
  3947  01E0  02F2               	subwf	___awmod@dividend,f
  3948  01E1  0871               	movf	___awmod@divisor+1,w
  3949  01E2  3BF3               	subwfb	___awmod@dividend+1,f
  3950  01E3                     l2178:
  3951  01E3  3001               	movlw	1
  3952  01E4                     u1985:
  3953  01E4  36F1               	lsrf	___awmod@divisor+1,f
  3954  01E5  0CF0               	rrf	___awmod@divisor,f
  3955  01E6  0B89               	decfsz	9,f
  3956  01E7  29E4               	goto	u1985
  3957  01E8                     l2180:
  3958  01E8  3001               	movlw	1
  3959  01E9  02F5               	subwf	___awmod@counter,f
  3960  01EA  1D03               	btfss	3,2
  3961  01EB  29ED               	goto	u1991
  3962  01EC  29EE               	goto	u1990
  3963  01ED                     u1991:
  3964  01ED  29D5               	goto	l2174
  3965  01EE                     u1990:
  3966  01EE                     l2182:
  3967  01EE  0876               	movf	___awmod@sign,w
  3968  01EF  1903               	btfsc	3,2
  3969  01F0  29F2               	goto	u2001
  3970  01F1  29F3               	goto	u2000
  3971  01F2                     u2001:
  3972  01F2  29F8               	goto	l2186
  3973  01F3                     u2000:
  3974  01F3                     l2184:
  3975  01F3  09F2               	comf	___awmod@dividend,f
  3976  01F4  09F3               	comf	___awmod@dividend+1,f
  3977  01F5  0AF2               	incf	___awmod@dividend,f
  3978  01F6  1903               	skipnz
  3979  01F7  0AF3               	incf	___awmod@dividend+1,f
  3980  01F8                     l2186:
  3981  01F8  0873               	movf	___awmod@dividend+1,w
  3982  01F9  00F1               	movwf	?___awmod+1
  3983  01FA  0872               	movf	___awmod@dividend,w
  3984  01FB  00F0               	movwf	?___awmod
  3985  01FC                     l628:
  3986  01FC  0008               	return
  3987  01FD                     __end_of___awmod:
  3988                           
  3989                           	psect	text10
  3990  01FD                     __ptext10:	
  3991 ;; *************** function ___awdiv *****************
  3992 ;; Defined at:
  3993 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awdiv.c"
  3994 ;; Parameters:    Size  Location     Type
  3995 ;;  divisor         2    6[COMMON] int 
  3996 ;;  dividend        2    8[COMMON] int 
  3997 ;; Auto vars:     Size  Location     Type
  3998 ;;  quotient        2    2[BANK0 ] int 
  3999 ;;  sign            1    1[BANK0 ] unsigned char 
  4000 ;;  counter         1    0[BANK0 ] unsigned char 
  4001 ;; Return value:  Size  Location     Type
  4002 ;;                  2    6[COMMON] int 
  4003 ;; Registers used:
  4004 ;;		wreg, status,2, status,0
  4005 ;; Tracked objects:
  4006 ;;		On entry : 0/0
  4007 ;;		On exit  : 0/0
  4008 ;;		Unchanged: 0/0
  4009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4010 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4011 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4012 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4013 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4014 ;;Total ram usage:        9 bytes
  4015 ;; Hardware stack levels used:    1
  4016 ;; This function calls:
  4017 ;;		Nothing
  4018 ;; This function is called by:
  4019 ;;		_hen7
  4020 ;;		_main
  4021 ;; This function uses a non-reentrant model
  4022 ;;
  4023                           
  4024                           
  4025                           ;psect for function ___awdiv
  4026  01FD                     ___awdiv:
  4027  01FD                     l2108:	
  4028                           ;incstack = 0
  4029                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4030                           
  4031  01FD  0020               	movlb	0	; select bank0
  4032  01FE  01A1               	clrf	___awdiv@sign
  4033  01FF                     l2110:
  4034  01FF  1FF7               	btfss	___awdiv@divisor+1,7
  4035  0200  2A02               	goto	u1821
  4036  0201  2A03               	goto	u1820
  4037  0202                     u1821:
  4038  0202  2A0A               	goto	l2116
  4039  0203                     u1820:
  4040  0203                     l2112:
  4041  0203  09F6               	comf	___awdiv@divisor,f
  4042  0204  09F7               	comf	___awdiv@divisor+1,f
  4043  0205  0AF6               	incf	___awdiv@divisor,f
  4044  0206  1903               	skipnz
  4045  0207  0AF7               	incf	___awdiv@divisor+1,f
  4046  0208                     l2114:
  4047  0208  01A1               	clrf	___awdiv@sign
  4048  0209  0AA1               	incf	___awdiv@sign,f
  4049  020A                     l2116:
  4050  020A  1FF9               	btfss	___awdiv@dividend+1,7
  4051  020B  2A0D               	goto	u1831
  4052  020C  2A0E               	goto	u1830
  4053  020D                     u1831:
  4054  020D  2A17               	goto	l2122
  4055  020E                     u1830:
  4056  020E                     l2118:
  4057  020E  09F8               	comf	___awdiv@dividend,f
  4058  020F  09F9               	comf	___awdiv@dividend+1,f
  4059  0210  0AF8               	incf	___awdiv@dividend,f
  4060  0211  1903               	skipnz
  4061  0212  0AF9               	incf	___awdiv@dividend+1,f
  4062  0213                     l2120:
  4063  0213  3001               	movlw	1
  4064  0214  00FA               	movwf	??___awdiv
  4065  0215  087A               	movf	??___awdiv,w
  4066  0216  06A1               	xorwf	___awdiv@sign,f
  4067  0217                     l2122:
  4068  0217  01A2               	clrf	___awdiv@quotient
  4069  0218  01A3               	clrf	___awdiv@quotient+1
  4070  0219                     l2124:
  4071  0219  0876               	movf	___awdiv@divisor,w
  4072  021A  0477               	iorwf	___awdiv@divisor+1,w
  4073  021B  1903               	btfsc	3,2
  4074  021C  2A1E               	goto	u1841
  4075  021D  2A1F               	goto	u1840
  4076  021E                     u1841:
  4077  021E  2A4E               	goto	l2144
  4078  021F                     u1840:
  4079  021F                     l2126:
  4080  021F  01A0               	clrf	___awdiv@counter
  4081  0220  0AA0               	incf	___awdiv@counter,f
  4082  0221  2A2B               	goto	l2132
  4083  0222                     l2128:
  4084  0222  3001               	movlw	1
  4085  0223                     u1855:
  4086  0223  35F6               	lslf	___awdiv@divisor,f
  4087  0224  0DF7               	rlf	___awdiv@divisor+1,f
  4088  0225  0B89               	decfsz	9,f
  4089  0226  2A23               	goto	u1855
  4090  0227                     l2130:
  4091  0227  3001               	movlw	1
  4092  0228  00FA               	movwf	??___awdiv
  4093  0229  087A               	movf	??___awdiv,w
  4094  022A  07A0               	addwf	___awdiv@counter,f
  4095  022B                     l2132:
  4096  022B  1FF7               	btfss	___awdiv@divisor+1,7
  4097  022C  2A2E               	goto	u1861
  4098  022D  2A2F               	goto	u1860
  4099  022E                     u1861:
  4100  022E  2A22               	goto	l2128
  4101  022F                     u1860:
  4102  022F                     l2134:
  4103  022F  3001               	movlw	1
  4104  0230                     u1875:
  4105  0230  35A2               	lslf	___awdiv@quotient,f
  4106  0231  0DA3               	rlf	___awdiv@quotient+1,f
  4107  0232  0B89               	decfsz	9,f
  4108  0233  2A30               	goto	u1875
  4109  0234  0877               	movf	___awdiv@divisor+1,w
  4110  0235  0279               	subwf	___awdiv@dividend+1,w
  4111  0236  1D03               	skipz
  4112  0237  2A3A               	goto	u1885
  4113  0238  0876               	movf	___awdiv@divisor,w
  4114  0239  0278               	subwf	___awdiv@dividend,w
  4115  023A                     u1885:
  4116  023A  1C03               	skipc
  4117  023B  2A3D               	goto	u1881
  4118  023C  2A3E               	goto	u1880
  4119  023D                     u1881:
  4120  023D  2A43               	goto	l2140
  4121  023E                     u1880:
  4122  023E                     l2136:
  4123  023E  0876               	movf	___awdiv@divisor,w
  4124  023F  02F8               	subwf	___awdiv@dividend,f
  4125  0240  0877               	movf	___awdiv@divisor+1,w
  4126  0241  3BF9               	subwfb	___awdiv@dividend+1,f
  4127  0242                     l2138:
  4128  0242  1422               	bsf	___awdiv@quotient,0
  4129  0243                     l2140:
  4130  0243  3001               	movlw	1
  4131  0244                     u1895:
  4132  0244  36F7               	lsrf	___awdiv@divisor+1,f
  4133  0245  0CF6               	rrf	___awdiv@divisor,f
  4134  0246  0B89               	decfsz	9,f
  4135  0247  2A44               	goto	u1895
  4136  0248                     l2142:
  4137  0248  3001               	movlw	1
  4138  0249  02A0               	subwf	___awdiv@counter,f
  4139  024A  1D03               	btfss	3,2
  4140  024B  2A4D               	goto	u1901
  4141  024C  2A4E               	goto	u1900
  4142  024D                     u1901:
  4143  024D  2A2F               	goto	l2134
  4144  024E                     u1900:
  4145  024E                     l2144:
  4146  024E  0821               	movf	___awdiv@sign,w
  4147  024F  1903               	btfsc	3,2
  4148  0250  2A52               	goto	u1911
  4149  0251  2A53               	goto	u1910
  4150  0252                     u1911:
  4151  0252  2A58               	goto	l2148
  4152  0253                     u1910:
  4153  0253                     l2146:
  4154  0253  09A2               	comf	___awdiv@quotient,f
  4155  0254  09A3               	comf	___awdiv@quotient+1,f
  4156  0255  0AA2               	incf	___awdiv@quotient,f
  4157  0256  1903               	skipnz
  4158  0257  0AA3               	incf	___awdiv@quotient+1,f
  4159  0258                     l2148:
  4160  0258  0823               	movf	___awdiv@quotient+1,w
  4161  0259  00F7               	movwf	?___awdiv+1
  4162  025A  0822               	movf	___awdiv@quotient,w
  4163  025B  00F6               	movwf	?___awdiv
  4164  025C                     l615:
  4165  025C  0008               	return
  4166  025D                     __end_of___awdiv:
  4167                           
  4168                           	psect	text11
  4169  0041                     __ptext11:	
  4170 ;; *************** function _fclr *****************
  4171 ;; Defined at:
  4172 ;;		line 369 in file "Q5.c"
  4173 ;; Parameters:    Size  Location     Type
  4174 ;;  flg             2    0[COMMON] unsigned short 
  4175 ;; Auto vars:     Size  Location     Type
  4176 ;;		None
  4177 ;; Return value:  Size  Location     Type
  4178 ;;                  1    wreg      void 
  4179 ;; Registers used:
  4180 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4181 ;; Tracked objects:
  4182 ;;		On entry : 0/0
  4183 ;;		On exit  : 0/0
  4184 ;;		Unchanged: 0/0
  4185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4186 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4189 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4190 ;;Total ram usage:        2 bytes
  4191 ;; Hardware stack levels used:    1
  4192 ;; This function calls:
  4193 ;;		Nothing
  4194 ;; This function is called by:
  4195 ;;		_main
  4196 ;;		_kaisu
  4197 ;; This function uses a non-reentrant model
  4198 ;;
  4199                           
  4200                           
  4201                           ;psect for function _fclr
  4202  0041                     _fclr:
  4203  0041                     l2410:	
  4204                           ;incstack = 0
  4205                           ; Regs used in _fclr: [wreg-fsr0h+status,2+status,0]
  4206                           
  4207                           
  4208                           ;Q5.c: 369: void fclr(unsigned short flg);Q5.c: 370: {;Q5.c: 371:     switch(flg){
  4209  0041  2850               	goto	l2420
  4210  0042                     l2412:
  4211                           
  4212                           ;Q5.c: 373:                     flag_R=0;
  4213  0042  0020               	movlb	0	; select bank0
  4214  0043  01EA               	clrf	_flag_R
  4215  0044  01EB               	clrf	_flag_R+1
  4216                           
  4217                           ;Q5.c: 374:                     break;
  4218  0045  2860               	goto	l217
  4219  0046                     l2414:
  4220                           
  4221                           ;Q5.c: 376:                     flag_P=0;
  4222  0046  0020               	movlb	0	; select bank0
  4223  0047  01E8               	clrf	_flag_P
  4224  0048  01E9               	clrf	_flag_P+1
  4225                           
  4226                           ;Q5.c: 377:                     break;
  4227  0049  2860               	goto	l217
  4228  004A                     l2416:
  4229                           
  4230                           ;Q5.c: 379:                     flag_P=flag_R=0;
  4231  004A  0020               	movlb	0	; select bank0
  4232  004B  01EA               	clrf	_flag_R
  4233  004C  01EB               	clrf	_flag_R+1
  4234  004D  01E8               	clrf	_flag_P
  4235  004E  01E9               	clrf	_flag_P+1
  4236                           
  4237                           ;Q5.c: 380:                     break;
  4238  004F  2860               	goto	l217
  4239  0050                     l2420:
  4240                           
  4241                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4242                           ; Switch size 1, requested type "simple"
  4243                           ; Number of cases is 1, Range of values is 0 to 0
  4244                           ; switch strategies available:
  4245                           ; Name         Instructions Cycles
  4246                           ; simple_byte            4     3 (average)
  4247                           ; direct_byte            8     6 (fixed)
  4248                           ; jumptable            260     6 (fixed)
  4249                           ;	Chosen strategy is simple_byte
  4250  0050  0871               	movf	fclr@flg+1,w
  4251  0051  3A00               	xorlw	0	; case 0
  4252  0052  1903               	skipnz
  4253  0053  2855               	goto	l2888
  4254  0054  2860               	goto	l217
  4255  0055                     l2888:
  4256                           
  4257                           ; Switch size 1, requested type "simple"
  4258                           ; Number of cases is 3, Range of values is 0 to 2
  4259                           ; switch strategies available:
  4260                           ; Name         Instructions Cycles
  4261                           ; simple_byte           10     6 (average)
  4262                           ; direct_byte           12     6 (fixed)
  4263                           ; jumptable            260     6 (fixed)
  4264                           ;	Chosen strategy is simple_byte
  4265  0055  0870               	movf	fclr@flg,w
  4266  0056  3A00               	xorlw	0	; case 0
  4267  0057  1903               	skipnz
  4268  0058  2842               	goto	l2412
  4269  0059  3A01               	xorlw	1	; case 1
  4270  005A  1903               	skipnz
  4271  005B  2846               	goto	l2414
  4272  005C  3A03               	xorlw	3	; case 2
  4273  005D  1903               	skipnz
  4274  005E  284A               	goto	l2416
  4275  005F  2860               	goto	l217
  4276  0060                     l217:
  4277  0060  0008               	return
  4278  0061                     __end_of_fclr:
  4279  007E                     btemp	set	126	;btemp
  4280  007E                     wtemp0	set	126
  4281                           
  4282                           	psect	config
  4283                           
  4284                           ;Config register CONFIG1 @ 0x8007
  4285                           ;	Oscillator Selection
  4286                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  4287                           ;	Watchdog Timer Enable
  4288                           ;	WDTE = OFF, WDT disabled
  4289                           ;	Power-up Timer Enable
  4290                           ;	PWRTE = OFF, PWRT disabled
  4291                           ;	MCLR Pin Function Select
  4292                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  4293                           ;	Flash Program Memory Code Protection
  4294                           ;	CP = OFF, Program memory code protection is disabled
  4295                           ;	Data Memory Code Protection
  4296                           ;	CPD = OFF, Data memory code protection is disabled
  4297                           ;	Brown-out Reset Enable
  4298                           ;	BOREN = OFF, Brown-out Reset disabled
  4299                           ;	Clock Out Enable
  4300                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  4301                           ;	Internal/External Switchover
  4302                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4303                           ;	Fail-Safe Clock Monitor Enable
  4304                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4305  8007                     	org	32775
  4306  8007  09E4               	dw	2532
  4307                           
  4308                           ;Config register CONFIG2 @ 0x8008
  4309                           ;	Flash Memory Self-Write Protection
  4310                           ;	WRT = OFF, Write protection off
  4311                           ;	Voltage Regulator Capacitor Enable
  4312                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
  4313                           ;	PLL Enable
  4314                           ;	PLLEN = OFF, 4x PLL disabled
  4315                           ;	Stack Overflow/Underflow Reset Enable
  4316                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  4317                           ;	Brown-out Reset Voltage Selection
  4318                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  4319                           ;	Low-Voltage Programming Enable
  4320                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  4321  8008                     	org	32776
  4322  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    0
    Data        156
    BSS         34
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     48      80
    BANK1            80      0      80
    BANK2            80      0      76
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___awdiv
    _tact->_tactsw
    _motor->_dynam
    _hen7->___awdiv
    ___awdiv->___wmul

Critical Paths under _main in BANK0

    _main->_hen7
    _motor->_dynam
    _hen7->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                25    25      0   13388
                                             11 COMMON     1     1      0
                                             24 BANK0     24    24      0
                            ___awdiv
                             ___wmul
                              _dynam
                               _fclr
                               _hen7
                              _motor
                           _portinit
                               _tact
                             _zenoff
 ---------------------------------------------------------------------------------
 (1) _zenoff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _tact                                                 2     0      2     670
                                              8 COMMON     2     0      2
                             _tactsw
 ---------------------------------------------------------------------------------
 (2) _tactsw                                               8     8      0     116
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 (1) _portinit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motor                                               12     2     10    4327
                                              8 COMMON     2     2      0
                                              8 BANK0     10     0     10
                              _dynam
 ---------------------------------------------------------------------------------
 (2) _dynam                                               16     8      8    2271
                                              0 COMMON     8     0      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (1) _hen7                                                20    16      4    3247
                                              4 BANK0     20    16      4
                            ___awdiv
                            ___awmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     700
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     756
                                              6 COMMON     5     1      4
                                              0 BANK0      4     4      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _fclr                                                 2     0      2     478
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
     ___wmul (ARG)
   ___wmul
   _dynam
   _fclr
   _hen7
     ___awdiv
       ___wmul (ARG)
     ___awmod
     ___wmul
   _motor
     _dynam
   _portinit
   _tact
     _tactsw
   _zenoff

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     30      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      4C       9       95.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      FA      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      FA      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Mar 04 14:18:12 2021

                     l95 0021             ___awdiv@sign 0021                       _cw 0064  
    ___wmul@multiplicand 0072                      l112 0279                      l114 0289  
                    l123 02BF                      l116 029F                      l108 000E  
                    l300 0676                      l118 02AF                      l135 03C6  
                    l208 010D                      l217 0060                      l129 033C  
                    l170 0590                      l271 0084                      l193 00C1  
                    l290 05A7                      l462 002C                      l615 025C  
                    l464 0040                      l296 061E                      l288 059A  
                    l628 01FC                      _RA0 0060                      _RA1 0061  
                    _RA2 0062                      _RC0 0070                      _RC1 0071  
                    _RC2 0072                      _RC5 0075                      _RC6 0076  
                    _RC7 0077                      _ccw 0062                      _flg 0066  
           ___awmod@sign 0076                      wreg 0009                     l2000 0308  
                   l2010 032D                     l2002 031A                     l2100 0031  
                   l2020 0334                     l2012 032D                     l2004 0321  
                   l2110 01FF                     l2102 0036                     l2030 034E  
                   l2022 033A                     l2006 0327                     l2120 0213  
                   l2112 0203                     l2104 003C                     l2040 0366  
                   l2032 0350                     l2024 033E                     l2008 0329  
                   l2130 0227                     l2122 0217                     l2114 0208  
                   l2050 039E                     l2042 0378                     l2034 0354  
                   l2026 0344                     l2140 0243                     l2132 022B  
                   l2124 0219                     l2116 020A                     l2108 01FD  
                   l2300 04CA                     l2052 03A4                     l2044 037F  
                   l2028 034A                     l2036 035A                     l2220 0006  
                   l2142 0248                     l2134 022F                     l2126 021F  
                   l2118 020E                     l2302 04D2                     l2230 03C7  
                   l2054 03A6                     l2046 0385                     l2038 0360  
                   l2070 03B6                     l2222 000A                     l2136 023E  
                   l2128 0222                     l2144 024E                     l2160 01B6  
                   l2152 01AA                     l2320 0500                     l2312 04E1  
                   l2304 04D6                     l2240 03E3                     l2232 03CA  
                   l2056 03AA                     l2048 0397                     l2080 0095  
                   l2224 000B                     l2410 0041                     l2146 0253  
                   l2138 0242                     l2170 01CD                     l2162 01BA  
                   l2154 01AB                     l2330 0514                     l2314 04EB  
                   l2306 04DF                     l2250 0427                     l2242 0421  
                   l2234 03CE                     l2066 03B1                     l2058 03AA  
                   l2082 009F                     l2226 000C                     l2412 0042  
                   l2420 0050                     l2148 0258                     l2180 01E8  
                   l2172 01D1                     l2164 01BF                     l2156 01AF  
                   l2340 053D                     l2332 0518                     l2316 04F3  
                   l2252 0431                     l2244 0425                     l2236 03D2  
                   l2092 00BC                     l2084 00A4                     l2076 0085  
                   l2404 00FD                     l2228 000D                     l2414 0046  
                   l2174 01D5                     l2166 01C5                     l2182 01EE  
                   l2158 01B4                     l2094 0022                     l2350 0551  
                   l2334 0522                     l2326 0502                     l2318 04F7  
                   l2270 045E                     l2254 0439                     l2238 03D8  
                   l2190 000F                     l2086 00A6                     l2078 0089  
                   l2416 004A                     l2184 01F3                     l2176 01DF  
                   l2168 01C8                     l2096 0024                     l2360 0560  
                   l2352 0555                     l2336 052A                     l2328 050C  
                   l2280 0473                     l2272 0467                     l2264 0448  
                   l2256 043D                     l2432 006B                     l2192 0012  
                   l2088 00AF                     l2600 059A                     l2186 01F8  
                   l2178 01E3                     l2098 0028                     l2362 056A  
                   l2354 055E                     l2346 053F                     l2338 0537  
                   l2290 04BA                     l2282 047B                     l2266 0452  
                   l2258 0446                     l2370 0580                     l2434 007F  
                   l2426 0061                     l2194 0015                     l2610 05BF  
                   l2602 059A                     l2364 0572                     l2348 0549  
                   l2292 04BE                     l2284 047F                     l2268 045A  
                   l2428 0066                     l2196 001C                     l2380 00C6  
                   l2700 06C5                     l2620 05C8                     l2612 05BF  
                   l2604 059F                     l2366 0576                     l2286 0489  
                   l2278 0469                     l2198 001F                     l2390 00E1  
                   l2382 00CC                     l2710 06E7                     l2702 06CB  
                   l2630 05E4                     l2622 05CA                     l2614 05C2  
                   l2606 05A3                     l2288 04B4                     l1920 025D  
                   l2392 00E4                     l2384 00D2                     l2376 00C2  
                   l2720 0718                     l2712 06F2                     l2704 06D1  
                   l2640 0605                     l2632 05EA                     l2624 05CA  
                   l2616 05C4                     l2608 05B8                     l2298 04C0  
                   l1930 0269                     l1922 0264                     l2394 00EA  
                   l2386 00D5                     l2378 00C3                     l2730 0724  
                   l2722 0718                     l2714 070B                     l2706 06D7  
                   l2642 060C                     l2634 05F0                     l2650 062A  
                   l2626 05DB                     l2618 05C6                     l1940 0284  
                   l1932 0270                     l1924 0265                     l2396 00EF  
                   l2388 00DB                     l2740 0764                     l2732 073B  
                   l2724 071C                     l2716 0711                     l2708 06D7  
                   l2660 0647                     l2652 062F                     l2644 0613  
                   l2636 05F8                     l2628 05E0                     l1950 028F  
                   l1934 0275                     l1926 0267                     l2398 00F5  
                   l2734 0742                     l2742 077C                     l2726 0720  
                   l2718 0714                     l2750 07A3                     l2670 066A  
                   l2662 064F                     l2654 0633                     l2646 061A  
                   l2638 05FF                     l2590 0591                     l1960 02AA  
                   l1952 0296                     l1944 028B                     l1936 027D  
                   l1928 0268                     l2760 07BF                     l2752 07AA  
                   l2744 0781                     l2736 0749                     l2728 0720  
                   l2680 068B                     l2672 0672                     l2664 0656  
                   l2656 063A                     l2648 0622                     l2592 0594  
                   l1970 02B4                     l1954 029B                     l1946 028D  
                   l2770 07D4                     l2762 07C6                     l2754 07AF  
                   l2746 0788                     l2738 074D                     l2690 06AB  
                   l2682 0692                     l2674 067A                     l2666 065C  
                   l2658 0640                     l2594 059A                     l1980 02C7  
                   l1972 02B5                     l1964 02B2                     l1956 02A3  
                   l1948 028E                     l2772 07D6                     l2764 07CD  
                   l2756 07B3                     l2748 078C                     l2684 0699  
                   l2692 06AF                     l2668 0663                     l2676 0682  
                   l2596 059A                     l1982 02CD                     l1990 02DD  
                   l1974 02B7                     l1966 02B3                     l2766 07D0  
                   l2758 07B9                     l2694 06B3                     l2686 069F  
                   l2678 0687                     l2598 059A                     l1992 02E3  
                   l1984 02D1                     l1976 02BD                     l1968 02B3  
                   l2768 07D2                     l2696 06B7                     l2688 06A5  
                   l1994 02E9                     l1986 02D3                     l1978 02C1  
                   l2882 0102                     l2698 06BE                     l2884 03BB  
                   l1996 02FB                     l1988 02D7                     l2886 0585  
                   l1998 0302                     l2888 0055                     u2000 01F3  
                   u2001 01F2                     u2100 0488                     u2101 0487  
                   u2030 03CE                     u2031 03CD                     u2200 055E  
                   u2040 03D8                     u3000 07B9                     u2201 055D  
                   u2041 03D7                     u3001 07B8                     u2210 056A  
                   u2130 04CA                     u2050 0431                     u3010 07BF  
                   u2211 0569                     u2131 04C9                     u2115 048F  
                   u2051 0430                     u3011 07BE                     u2220 057F  
                   u2140 04DF                     u2060 0446                     u3020 07C6  
                   u2221 057E                     u2141 04DE                     u2125 049D  
                   u2061 0445                     u3021 07C5                     u2150 04EB  
                   u2070 0452                     u2230 00CC                     u2215 0566  
                   u2151 04EA                     u2135 04C6                     u2071 0451  
                   u2055 042D                     u2231 00CB                     u2160 0500  
                   u2080 0467                     u1600 02CD                     u2240 00DB  
                   u2161 04FF                     u2081 0466                     u1601 02CC  
                   u2241 00DA                     u2170 050C                     u2090 0473  
                   u1610 02E3                     u2250 00EA                     u2171 050B  
                   u2155 04E7                     u2091 0472                     u2075 044E  
                   u1611 02E2                     u2251 00E9                     u2180 0521  
                   u1700 0360                     u1620 02E9                     u1540 0270  
                   u2260 00F5                     u2181 0520                     u1701 035F  
                   u1621 02E8                     u1541 026F                     u2261 00F4  
                   u2190 0549                     u1710 0366                     u1630 0302  
                   u1550 0283                     u2270 00FC                     u2191 0548  
                   u2175 0508                     u2095 046F                     u1711 0365  
                   u1631 0301                     u1551 0282                     u2271 00FB  
                   u1720 037F                     u1640 0308                     u1560 0296  
                   u2280 006A                     u2600 05AE                     u1721 037E  
                   u1641 0307                     u1561 0295                     u2281 0069  
                   u2601 05AB                     u1810 003C                     u1730 0385  
                   u1650 0321                     u1570 02A9                     u2610 05B6  
                   u1811 003B                     u2195 0545                     u1731 0384  
                   u1651 0320                     u1571 02A8                     u2611 05B3  
                   u1900 024E                     u1820 0203                     u1740 039E  
                   u1660 0327                     u1580 02BD                     u2700 062F  
                   u1901 024D                     u1821 0202                     u1805 0032  
                   u1741 039D                     u1661 0326                     u1581 02BC  
                   u2701 062E                     u1910 0253                     u1830 020E  
                   u1750 03A4                     u1670 033A                     u1590 02C7  
                   u2710 0633                     u2630 05E0                     u2614 05B0  
                   u1911 0252                     u1831 020D                     u1751 03A3  
                   u1671 0339                     u1591 02C6                     u2711 0632  
                   u2631 05DF                     u1840 021F                     u1920 01AF  
                   u1680 0344                     u1760 009F                     u2800 0692  
                   u2720 063A                     u2640 05E4                     u2624 05B8  
                   u1841 021E                     u1921 01AE                     u1681 0343  
                   u1761 009E                     u2801 0691                     u2721 0639  
                   u2641 05E3                     u1930 01BA                     u1690 034A  
                   u1770 00AF                     u2810 0699                     u2730 0640  
                   u2650 05EA                     u2570 059F                     u1931 01B9  
                   u1691 0349                     u1771 00AE                     u2811 0698  
                   u2731 063F                     u2651 05E9                     u2571 059E  
                   u1860 022F                     u1940 01C5                     u1780 0028  
                   u2900 06D1                     u2820 069F                     u2740 0647  
                   u2660 05F0                     u2580 05A3                     u1861 022E  
                   u1941 01C4                     u1781 0027                     u1765 009B  
                   u2901 06D0                     u2821 069E                     u2741 0646  
                   u2661 05EF                     u2581 05A2                     u2910 06D7  
                   u2830 06A5                     u2750 065C                     u2670 0605  
                   u2590 05A7                     u1855 0223                     u2911 06D6  
                   u2831 06A4                     u2751 065B                     u2671 0604  
                   u2591 05A6                     u1880 023E                     u1960 01D5  
                   u2920 070B                     u2840 06AB                     u2760 0663  
                   u2680 060C                     u1881 023D                     u1961 01D4  
                   u2921 070A                     u2841 06AA                     u2761 0662  
                   u2681 060B                     u1970 01DF                     u2930 0720  
                   u2850 06B3                     u2770 0672                     u2690 061A  
                   u1875 0230                     u1971 01DE                     u1955 01C9  
                   u1795 002D                     u2931 071F                     u2851 06B2  
                   u2771 0671                     u2691 0619                     u2940 0742  
                   u2860 06B7                     u2780 0687                     u1885 023A  
                   u2941 0741                     u2925 0707                     u2861 06B6  
                   u2781 0686                     u1990 01EE                     u2950 0749  
                   u2870 06BE                     u2790 068B                     u1895 0244  
                   u1991 01ED                     u1975 01DB                     u2951 0748  
                   u2871 06BD                     u2791 068A                     u2960 0781  
                   u2880 06C5                     u1985 01E4                     u2961 0780  
                   u2881 06C4                     u2970 0788                     u2890 06CB  
                   u2971 0787                     u2891 06CA                     u2980 07AF  
                   u2981 07AE                     u2990 07B3                     u2991 07B2  
                   _hen7 03C7                     _atai 005C                     _fclr 0041  
                   _main 0591                     _num0 00C0                     _kisu 00D4  
                   _moja 0160                     _samf 0120                     _mojf 0154  
                   _tact 00C2                     _mojh 00EC                     _moji 0140  
                   _mojn 00E8                     _samp 00A0                     _gusu 00DE  
                   fsr0h 0005                     fsr1h 0007                     indf0 0000  
                   fsr0l 0004                     fsr1l 0006                     btemp 007E  
                   start 0002              main@zyoutai 004A                    ?_hen7 0024  
                  ?_fclr 0070                    ?_main 0070          __end_of___awdiv 025D  
                  ?_tact 0078          __end_of___awmod 01FD          ___awdiv@divisor 0076  
        ___awdiv@counter 0020                    _PORTA 000C                    _PORTB 000D  
                  _PORTC 000E                    _TRISA 008C                    _TRISB 008D  
                  _TRISC 008E                    _code1 0052                    _atai1 005E  
                  hen7@l 0032                    hen7@m 0034                    hen7@n 0036  
                  _count 005A                    _dynam 025D                    _fugou 0050  
                  _motor 0061                    status 0003                    wtemp0 007E  
        __initialization 07DB             __end_of_hen7 0591             __end_of_fclr 0061  
           __end_of_main 07DB             __end_of_tact 010E                   ??_hen7 0028  
                 ??_fclr 0072                   ??_main 007B                   ??_tact 007A  
                 ?_dynam 0070         ___awdiv@dividend 0078                   ?_motor 0028  
                 _ANSELA 018C                   _ANSELB 018D                   _OSCCON 0099  
            dynam@smdata 0074                   ___wmul 0022                   _code10 0054  
                 _atai10 0060                ??___awdiv 007A                ??___awmod 0074  
                 _flag_P 0068                   _flag_R 006A         ___awdiv@quotient 0022  
                 _tactsw 0085          ___awmod@divisor 0070          ___awmod@counter 0075  
                 _zenoff 0006                   dynam@j 0024                   motor@i 0078  
       __end_of_portinit 0022  __end_of__initialization 07FD           __pcstackCOMMON 0070  
           __pidataBANK1 015A             __pidataBANK2 010E            __end_of_dynam 03C7  
          __end_of_motor 0085                  ??_dynam 0078                  ??_motor 0078  
             __pbssBANK0 0050               __pmaintext 0591                  ?___wmul 0070  
                ?_tactsw 0070                  ?_zenoff 0070               hen7@value1 002C  
                ___awdiv 01FD                  ___awmod 01AA          __size_of___wmul 001F  
              ?_portinit 0070                  _code100 0056          __size_of_tactsw 003D  
                __ptext1 0006                  __ptext2 00C2                  __ptext3 0085  
                __ptext4 000F                  __ptext5 0061                  __ptext6 025D  
                __ptext7 03C7                  __ptext8 0022                  __ptext9 01AA  
                hen7@ns1 0026          __size_of_zenoff 0009         ___awmod@dividend 0072  
                fclr@flg 0070                  main@ans 0048              motor@kakudo 0028  
                clrloop0 0FF5     end_of_initialization 07FD              motor@smdata 002E  
                dynam@tm 0022                  dynam@tr 0076                  init_ram 0FFA  
                initloop 0FFB                  tactsw@a 0076                  tactsw@b 0072  
                tactsw@c 0074                  motor@tr 0030               ??_portinit 0070  
           hen7@value100 0030           __end_of___wmul 0041           __end_of_tactsw 00C2  
         __end_of_zenoff 000F      start_initialization 07DB                 ??___wmul 0074  
            __pdataBANK1 00A0              __pdataBANK2 0120                 ??_tactsw 0070  
               ??_zenoff 0070              __pbssCOMMON 007C                ___latbits 0003  
          __pcstackBANK0 0020                 ?___awdiv 0076                 ?___awmod 0070  
      __size_of_portinit 0013                hen7@value 0024           __size_of_dynam 016A  
         __size_of_motor 0024            dynam@dig1data 0070            dynam@dig2data 0072  
         ___wmul@product 0074                clear_ram0 0FF4            motor@dig1data 002A  
          motor@dig2data 002C        ___wmul@multiplier 0070                main@ataiL 0044  
              main@ataiR 0046              hen7@value10 002E         __size_of___awdiv 0060  
       __size_of___awmod 0053                 _code1000 0058                 __ptext10 01FD  
               __ptext11 0041                 _flag_sw1 006E                 _flag_sw2 006C  
               _flag_sw3 007C            __size_of_hen7 01CA            __size_of_fclr 0020  
          __size_of_main 024A            __size_of_tact 004C                 _portinit 000F  
               main@segL 004C                 main@segR 004E                 dynam@ext 0026  
               dynam@smd 0020                 tact@mode 0078  
