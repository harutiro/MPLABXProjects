

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 26 15:02:53 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F1938
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.20
    31                           ; Generated 12/02/2020 GMT
    32                           ; 
    33                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F1938 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  0010                     	;# 
    80  0011                     	;# 
    81  0012                     	;# 
    82  0013                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  010C                     	;# 
   113  010D                     	;# 
   114  010E                     	;# 
   115  0110                     	;# 
   116  0111                     	;# 
   117  0112                     	;# 
   118  0113                     	;# 
   119  0114                     	;# 
   120  0115                     	;# 
   121  0116                     	;# 
   122  0117                     	;# 
   123  0118                     	;# 
   124  0119                     	;# 
   125  011A                     	;# 
   126  011B                     	;# 
   127  011D                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0191                     	;# 
   131  0191                     	;# 
   132  0192                     	;# 
   133  0193                     	;# 
   134  0193                     	;# 
   135  0193                     	;# 
   136  0194                     	;# 
   137  0195                     	;# 
   138  0196                     	;# 
   139  0199                     	;# 
   140  019A                     	;# 
   141  019B                     	;# 
   142  019B                     	;# 
   143  019B                     	;# 
   144  019B                     	;# 
   145  019C                     	;# 
   146  019C                     	;# 
   147  019D                     	;# 
   148  019E                     	;# 
   149  019F                     	;# 
   150  020D                     	;# 
   151  0210                     	;# 
   152  0211                     	;# 
   153  0212                     	;# 
   154  0213                     	;# 
   155  0214                     	;# 
   156  0215                     	;# 
   157  0215                     	;# 
   158  0216                     	;# 
   159  0217                     	;# 
   160  0291                     	;# 
   161  0291                     	;# 
   162  0292                     	;# 
   163  0293                     	;# 
   164  0294                     	;# 
   165  0295                     	;# 
   166  0295                     	;# 
   167  0296                     	;# 
   168  0298                     	;# 
   169  0298                     	;# 
   170  0299                     	;# 
   171  029A                     	;# 
   172  029B                     	;# 
   173  029C                     	;# 
   174  029C                     	;# 
   175  029D                     	;# 
   176  029E                     	;# 
   177  029F                     	;# 
   178  0311                     	;# 
   179  0311                     	;# 
   180  0312                     	;# 
   181  0313                     	;# 
   182  0314                     	;# 
   183  0315                     	;# 
   184  0315                     	;# 
   185  0316                     	;# 
   186  0318                     	;# 
   187  0318                     	;# 
   188  0319                     	;# 
   189  031A                     	;# 
   190  031C                     	;# 
   191  031C                     	;# 
   192  031D                     	;# 
   193  031E                     	;# 
   194  0394                     	;# 
   195  0395                     	;# 
   196  0396                     	;# 
   197  0415                     	;# 
   198  0416                     	;# 
   199  0417                     	;# 
   200  041C                     	;# 
   201  041D                     	;# 
   202  041E                     	;# 
   203  0791                     	;# 
   204  0792                     	;# 
   205  0793                     	;# 
   206  0794                     	;# 
   207  0795                     	;# 
   208  0798                     	;# 
   209  0799                     	;# 
   210  07A0                     	;# 
   211  07A1                     	;# 
   212  07A3                     	;# 
   213  07A4                     	;# 
   214  07A6                     	;# 
   215  07A7                     	;# 
   216  07A9                     	;# 
   217  07AA                     	;# 
   218  0FE4                     	;# 
   219  0FE5                     	;# 
   220  0FE6                     	;# 
   221  0FE7                     	;# 
   222  0FE8                     	;# 
   223  0FE9                     	;# 
   224  0FEA                     	;# 
   225  0FEB                     	;# 
   226  0FED                     	;# 
   227  0FEE                     	;# 
   228  0FEF                     	;# 
   229  0000                     	;# 
   230  0001                     	;# 
   231  0002                     	;# 
   232  0003                     	;# 
   233  0004                     	;# 
   234  0005                     	;# 
   235  0006                     	;# 
   236  0007                     	;# 
   237  0008                     	;# 
   238  0009                     	;# 
   239  000A                     	;# 
   240  000B                     	;# 
   241  000C                     	;# 
   242  000D                     	;# 
   243  000E                     	;# 
   244  0010                     	;# 
   245  0011                     	;# 
   246  0012                     	;# 
   247  0013                     	;# 
   248  0015                     	;# 
   249  0016                     	;# 
   250  0016                     	;# 
   251  0017                     	;# 
   252  0018                     	;# 
   253  0019                     	;# 
   254  001A                     	;# 
   255  001B                     	;# 
   256  001C                     	;# 
   257  001E                     	;# 
   258  001F                     	;# 
   259  008C                     	;# 
   260  008D                     	;# 
   261  008E                     	;# 
   262  0090                     	;# 
   263  0091                     	;# 
   264  0092                     	;# 
   265  0093                     	;# 
   266  0095                     	;# 
   267  0096                     	;# 
   268  0097                     	;# 
   269  0098                     	;# 
   270  0099                     	;# 
   271  009A                     	;# 
   272  009B                     	;# 
   273  009B                     	;# 
   274  009C                     	;# 
   275  009D                     	;# 
   276  009E                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  0110                     	;# 
   281  0111                     	;# 
   282  0112                     	;# 
   283  0113                     	;# 
   284  0114                     	;# 
   285  0115                     	;# 
   286  0116                     	;# 
   287  0117                     	;# 
   288  0118                     	;# 
   289  0119                     	;# 
   290  011A                     	;# 
   291  011B                     	;# 
   292  011D                     	;# 
   293  018C                     	;# 
   294  018D                     	;# 
   295  0191                     	;# 
   296  0191                     	;# 
   297  0192                     	;# 
   298  0193                     	;# 
   299  0193                     	;# 
   300  0193                     	;# 
   301  0194                     	;# 
   302  0195                     	;# 
   303  0196                     	;# 
   304  0199                     	;# 
   305  019A                     	;# 
   306  019B                     	;# 
   307  019B                     	;# 
   308  019B                     	;# 
   309  019B                     	;# 
   310  019C                     	;# 
   311  019C                     	;# 
   312  019D                     	;# 
   313  019E                     	;# 
   314  019F                     	;# 
   315  020D                     	;# 
   316  0210                     	;# 
   317  0211                     	;# 
   318  0212                     	;# 
   319  0213                     	;# 
   320  0214                     	;# 
   321  0215                     	;# 
   322  0215                     	;# 
   323  0216                     	;# 
   324  0217                     	;# 
   325  0291                     	;# 
   326  0291                     	;# 
   327  0292                     	;# 
   328  0293                     	;# 
   329  0294                     	;# 
   330  0295                     	;# 
   331  0295                     	;# 
   332  0296                     	;# 
   333  0298                     	;# 
   334  0298                     	;# 
   335  0299                     	;# 
   336  029A                     	;# 
   337  029B                     	;# 
   338  029C                     	;# 
   339  029C                     	;# 
   340  029D                     	;# 
   341  029E                     	;# 
   342  029F                     	;# 
   343  0311                     	;# 
   344  0311                     	;# 
   345  0312                     	;# 
   346  0313                     	;# 
   347  0314                     	;# 
   348  0315                     	;# 
   349  0315                     	;# 
   350  0316                     	;# 
   351  0318                     	;# 
   352  0318                     	;# 
   353  0319                     	;# 
   354  031A                     	;# 
   355  031C                     	;# 
   356  031C                     	;# 
   357  031D                     	;# 
   358  031E                     	;# 
   359  0394                     	;# 
   360  0395                     	;# 
   361  0396                     	;# 
   362  0415                     	;# 
   363  0416                     	;# 
   364  0417                     	;# 
   365  041C                     	;# 
   366  041D                     	;# 
   367  041E                     	;# 
   368  0791                     	;# 
   369  0792                     	;# 
   370  0793                     	;# 
   371  0794                     	;# 
   372  0795                     	;# 
   373  0798                     	;# 
   374  0799                     	;# 
   375  07A0                     	;# 
   376  07A1                     	;# 
   377  07A3                     	;# 
   378  07A4                     	;# 
   379  07A6                     	;# 
   380  07A7                     	;# 
   381  07A9                     	;# 
   382  07AA                     	;# 
   383  0FE4                     	;# 
   384  0FE5                     	;# 
   385  0FE6                     	;# 
   386  0FE7                     	;# 
   387  0FE8                     	;# 
   388  0FE9                     	;# 
   389  0FEA                     	;# 
   390  0FEB                     	;# 
   391  0FED                     	;# 
   392  0FEE                     	;# 
   393  0FEF                     	;# 
   394                           
   395                           	psect	idataBANK0
   396  0343                     __pidataBANK0:
   397                           
   398                           ;initializer for _mojn
   399  0343  3454               	retlw	84
   400  0344  3400               	retlw	0
   401  0345  3473               	retlw	115
   402  0346  3400               	retlw	0
   403                           
   404                           ;initializer for _mojh
   405  0347  3476               	retlw	118
   406  0348  3400               	retlw	0
   407  0349  3438               	retlw	56
   408  034A  3400               	retlw	0
   409                           
   410                           	psect	idataBANK1
   411  0471                     __pidataBANK1:
   412                           
   413                           ;initializer for _samp
   414  0471  343F               	retlw	63
   415  0472  3400               	retlw	0
   416  0473  3406               	retlw	6
   417  0474  3400               	retlw	0
   418  0475  345B               	retlw	91
   419  0476  3400               	retlw	0
   420  0477  344F               	retlw	79
   421  0478  3400               	retlw	0
   422  0479  3466               	retlw	102
   423  047A  3400               	retlw	0
   424  047B  346D               	retlw	109
   425  047C  3400               	retlw	0
   426  047D  347D               	retlw	125
   427  047E  3400               	retlw	0
   428  047F  3427               	retlw	39
   429  0480  3400               	retlw	0
   430  0481  347F               	retlw	127
   431  0482  3400               	retlw	0
   432  0483  346F               	retlw	111
   433  0484  3400               	retlw	0
   434  0485  345F               	retlw	95
   435  0486  3400               	retlw	0
   436  0487  347C               	retlw	124
   437  0488  3400               	retlw	0
   438  0489  3458               	retlw	88
   439  048A  3400               	retlw	0
   440  048B  345E               	retlw	94
   441  048C  3400               	retlw	0
   442  048D  3479               	retlw	121
   443  048E  3400               	retlw	0
   444  048F  3471               	retlw	113
   445  0490  3400               	retlw	0
   446                           
   447                           ;initializer for _num0
   448  0491  343F               	retlw	63
   449  0492  3400               	retlw	0
   450  0493  3406               	retlw	6
   451  0494  3400               	retlw	0
   452  0495  345B               	retlw	91
   453  0496  3400               	retlw	0
   454  0497  344F               	retlw	79
   455  0498  3400               	retlw	0
   456  0499  3466               	retlw	102
   457  049A  3400               	retlw	0
   458  049B  346D               	retlw	109
   459  049C  3400               	retlw	0
   460  049D  347D               	retlw	125
   461  049E  3400               	retlw	0
   462  049F  3427               	retlw	39
   463  04A0  3400               	retlw	0
   464  04A1  347F               	retlw	127
   465  04A2  3400               	retlw	0
   466  04A3  346F               	retlw	111
   467  04A4  3400               	retlw	0
   468                           
   469                           ;initializer for _kisu
   470  04A5  3406               	retlw	6
   471  04A6  3400               	retlw	0
   472  04A7  344F               	retlw	79
   473  04A8  3400               	retlw	0
   474  04A9  346D               	retlw	109
   475  04AA  3400               	retlw	0
   476  04AB  3427               	retlw	39
   477  04AC  3400               	retlw	0
   478  04AD  346F               	retlw	111
   479  04AE  3400               	retlw	0
   480                           
   481                           ;initializer for _gusu
   482  04AF  343F               	retlw	63
   483  04B0  3400               	retlw	0
   484  04B1  345B               	retlw	91
   485  04B2  3400               	retlw	0
   486  04B3  3466               	retlw	102
   487  04B4  3400               	retlw	0
   488  04B5  347D               	retlw	125
   489  04B6  3400               	retlw	0
   490  04B7  347F               	retlw	127
   491  04B8  3400               	retlw	0
   492                           
   493                           	psect	idataBANK2
   494  04B9                     __pidataBANK2:
   495                           
   496                           ;initializer for _samf
   497  04B9  3471               	retlw	113
   498  04BA  3400               	retlw	0
   499  04BB  3479               	retlw	121
   500  04BC  3400               	retlw	0
   501  04BD  345E               	retlw	94
   502  04BE  3400               	retlw	0
   503  04BF  3458               	retlw	88
   504  04C0  3400               	retlw	0
   505  04C1  347C               	retlw	124
   506  04C2  3400               	retlw	0
   507  04C3  345F               	retlw	95
   508  04C4  3400               	retlw	0
   509  04C5  346F               	retlw	111
   510  04C6  3400               	retlw	0
   511  04C7  347F               	retlw	127
   512  04C8  3400               	retlw	0
   513  04C9  3427               	retlw	39
   514  04CA  3400               	retlw	0
   515  04CB  347D               	retlw	125
   516  04CC  3400               	retlw	0
   517  04CD  346D               	retlw	109
   518  04CE  3400               	retlw	0
   519  04CF  3466               	retlw	102
   520  04D0  3400               	retlw	0
   521  04D1  344F               	retlw	79
   522  04D2  3400               	retlw	0
   523  04D3  345B               	retlw	91
   524  04D4  3400               	retlw	0
   525  04D5  3406               	retlw	6
   526  04D6  3400               	retlw	0
   527  04D7  343F               	retlw	63
   528  04D8  3400               	retlw	0
   529                           
   530                           ;initializer for _moji
   531  04D9  345F               	retlw	95
   532  04DA  3400               	retlw	0
   533  04DB  347C               	retlw	124
   534  04DC  3400               	retlw	0
   535  04DD  3458               	retlw	88
   536  04DE  3400               	retlw	0
   537  04DF  345E               	retlw	94
   538  04E0  3400               	retlw	0
   539  04E1  3479               	retlw	121
   540  04E2  3400               	retlw	0
   541  04E3  3471               	retlw	113
   542  04E4  3400               	retlw	0
   543  04E5  3476               	retlw	118
   544  04E6  3400               	retlw	0
   545  04E7  3438               	retlw	56
   546  04E8  3400               	retlw	0
   547  04E9  3454               	retlw	84
   548  04EA  3400               	retlw	0
   549  04EB  3473               	retlw	115
   550  04EC  3400               	retlw	0
   551                           
   552                           ;initializer for _mojf
   553  04ED  3471               	retlw	113
   554  04EE  3400               	retlw	0
   555  04EF  3479               	retlw	121
   556  04F0  3400               	retlw	0
   557  04F1  345E               	retlw	94
   558  04F2  3400               	retlw	0
   559  04F3  3458               	retlw	88
   560  04F4  3400               	retlw	0
   561  04F5  347C               	retlw	124
   562  04F6  3400               	retlw	0
   563  04F7  345F               	retlw	95
   564  04F8  3400               	retlw	0
   565                           
   566                           ;initializer for _moja
   567  04F9  345F               	retlw	95
   568  04FA  3400               	retlw	0
   569  04FB  347C               	retlw	124
   570  04FC  3400               	retlw	0
   571  04FD  3458               	retlw	88
   572  04FE  3400               	retlw	0
   573  04FF  345E               	retlw	94
   574  0500  3400               	retlw	0
   575  0501  3479               	retlw	121
   576  0502  3400               	retlw	0
   577  0503  3471               	retlw	113
   578  0504  3400               	retlw	0
   579  000E                     _PORTC	set	14
   580  000D                     _PORTB	set	13
   581  000C                     _PORTA	set	12
   582  0061                     _RA1	set	97
   583  0060                     _RA0	set	96
   584  0062                     _RA2	set	98
   585  0077                     _RC7	set	119
   586  0072                     _RC2	set	114
   587  0071                     _RC1	set	113
   588  0070                     _RC0	set	112
   589  0076                     _RC6	set	118
   590  0075                     _RC5	set	117
   591  0099                     _OSCCON	set	153
   592  008E                     _TRISC	set	142
   593  008D                     _TRISB	set	141
   594  008C                     _TRISA	set	140
   595  018D                     _ANSELB	set	397
   596  018C                     _ANSELA	set	396
   597                           
   598                           	psect	cinit
   599  07D1                     start_initialization:	
   600                           ; #config settings
   601                           
   602  07D1                     __initialization:
   603                           
   604                           ; Initialize objects allocated to BANK0
   605  07D1  3043               	movlw	low __pidataBANK0
   606  07D2  0084               	movwf	4
   607  07D3  3083               	movlw	(high __pidataBANK0)| (0+128)
   608  07D4  0085               	movwf	5
   609  07D5  3060               	movlw	low __pdataBANK0
   610  07D6  0086               	movwf	6
   611  07D7  3000               	movlw	high __pdataBANK0
   612  07D8  0087               	movwf	7
   613  07D9  3008               	movlw	8
   614  07DA  3183  233D  3187   	fcall	init_ram
   615                           
   616                           ; Initialize objects allocated to BANK1
   617  07DD  3071               	movlw	low __pidataBANK1
   618  07DE  0084               	movwf	4
   619  07DF  3084               	movlw	(high __pidataBANK1)| (0+128)
   620  07E0  0085               	movwf	5
   621  07E1  30A0               	movlw	low __pdataBANK1
   622  07E2  0086               	movwf	6
   623  07E3  3000               	movlw	high __pdataBANK1
   624  07E4  0087               	movwf	7
   625  07E5  3048               	movlw	72
   626  07E6  3183  233D  3187   	fcall	init_ram
   627                           
   628                           ; Initialize objects allocated to BANK2
   629  07E9  30B9               	movlw	low __pidataBANK2
   630  07EA  0084               	movwf	4
   631  07EB  3084               	movlw	(high __pidataBANK2)| (0+128)
   632  07EC  0085               	movwf	5
   633  07ED  3020               	movlw	low __pdataBANK2
   634  07EE  0086               	movwf	6
   635  07EF  3001               	movlw	high __pdataBANK2
   636  07F0  0087               	movwf	7
   637  07F1  304C               	movlw	76
   638  07F2  3183  233D  3187   	fcall	init_ram
   639                           
   640                           ; Clear objects allocated to BANK0
   641  07F5  3020               	movlw	low __pbssBANK0
   642  07F6  0084               	movwf	4
   643  07F7  3000               	movlw	high __pbssBANK0
   644  07F8  0085               	movwf	5
   645  07F9  3022               	movlw	34
   646  07FA  3183  2337  3187   	fcall	clear_ram0
   647  07FD                     end_of_initialization:	
   648                           ;End of C runtime variable initialization code
   649                           
   650  07FD                     __end_of__initialization:
   651  07FD  0020               	movlb	0
   652  07FE  3185  2D05         	ljmp	_main	;jump to C main() function
   653                           
   654                           	psect	bssBANK0
   655  0020                     __pbssBANK0:
   656  0020                     _fugou:
   657  0020                     	ds	2
   658  0022                     _code1:
   659  0022                     	ds	2
   660  0024                     _code10:
   661  0024                     	ds	2
   662  0026                     _code100:
   663  0026                     	ds	2
   664  0028                     _code1000:
   665  0028                     	ds	2
   666  002A                     _count:
   667  002A                     	ds	2
   668  002C                     _atai:
   669  002C                     	ds	2
   670  002E                     _atai1:
   671  002E                     	ds	2
   672  0030                     _atai10:
   673  0030                     	ds	2
   674  0032                     _ccw:
   675  0032                     	ds	2
   676  0034                     _cw:
   677  0034                     	ds	2
   678  0036                     _flg:
   679  0036                     	ds	2
   680  0038                     _flag_P:
   681  0038                     	ds	2
   682  003A                     _flag_R:
   683  003A                     	ds	2
   684  003C                     _flag_sw3:
   685  003C                     	ds	2
   686  003E                     _flag_sw2:
   687  003E                     	ds	2
   688  0040                     _flag_sw1:
   689  0040                     	ds	2
   690                           
   691                           	psect	dataBANK0
   692  0060                     __pdataBANK0:
   693  0060                     _mojn:
   694  0060                     	ds	4
   695  0064                     _mojh:
   696  0064                     	ds	4
   697                           
   698                           	psect	dataBANK1
   699  00A0                     __pdataBANK1:
   700  00A0                     _samp:
   701  00A0                     	ds	32
   702  00C0                     _num0:
   703  00C0                     	ds	20
   704  00D4                     _kisu:
   705  00D4                     	ds	10
   706  00DE                     _gusu:
   707  00DE                     	ds	10
   708                           
   709                           	psect	dataBANK2
   710  0120                     __pdataBANK2:
   711  0120                     _samf:
   712  0120                     	ds	32
   713  0140                     _moji:
   714  0140                     	ds	20
   715  0154                     _mojf:
   716  0154                     	ds	12
   717  0160                     _moja:
   718  0160                     	ds	12
   719                           
   720                           	psect	inittext
   721  033D                     init_ram:
   722  033D  00FE               	movwf	btemp
   723  033E                     initloop:
   724  033E  0012               	moviw fsr0++
   725  033F  001E               	movwi fsr1++
   726  0340  0BFE               	decfsz	btemp,f
   727  0341  2B3E               	goto	initloop
   728  0342  3400               	retlw	0
   729                           
   730                           	psect	clrtext
   731  0337                     clear_ram0:	
   732                           ;	Called with FSR0 containing the base address, and
   733                           ;	WREG with the size to clear
   734                           
   735  0337  0064               	clrwdt	;clear the watchdog before getting into this loop
   736  0338                     clrloop0:
   737  0338  0180               	clrf	0	;clear RAM location pointed to by FSR
   738  0339  3101               	addfsr 0,1
   739  033A  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   740  033B  2B38               	goto	clrloop0	;have we reached the end yet?
   741  033C  3400               	retlw	0	;all done for this memory range, return
   742                           
   743                           	psect	cstackCOMMON
   744  0070                     __pcstackCOMMON:
   745  0070                     ?_portinit:
   746  0070                     ??_portinit:	
   747                           ; 1 bytes @ 0x0
   748                           
   749  0070                     ?_zenoff:	
   750                           ; 1 bytes @ 0x0
   751                           
   752  0070                     ??_zenoff:	
   753                           ; 1 bytes @ 0x0
   754                           
   755  0070                     ?_dynam:	
   756                           ; 1 bytes @ 0x0
   757                           
   758  0070                     ?_fclr:	
   759                           ; 1 bytes @ 0x0
   760                           
   761  0070                     ?_jikan:	
   762                           ; 1 bytes @ 0x0
   763                           
   764  0070                     ??_jikan:	
   765                           ; 1 bytes @ 0x0
   766                           
   767  0070                     ?_main:	
   768                           ; 1 bytes @ 0x0
   769                           
   770  0070                     ?___wmul:	
   771                           ; 1 bytes @ 0x0
   772                           
   773  0070                     ?___lwdiv:	
   774                           ; 2 bytes @ 0x0
   775                           
   776  0070                     dynam@dig1data:	
   777                           ; 2 bytes @ 0x0
   778                           
   779  0070                     fclr@flg:	
   780                           ; 2 bytes @ 0x0
   781                           
   782  0070                     ___wmul@multiplier:	
   783                           ; 2 bytes @ 0x0
   784                           
   785  0070                     ___lwdiv@divisor:	
   786                           ; 2 bytes @ 0x0
   787                           
   788                           
   789                           ; 2 bytes @ 0x0
   790  0070                     	ds	2
   791  0072                     ??_fclr:
   792  0072                     dynam@dig2data:	
   793                           ; 1 bytes @ 0x2
   794                           
   795  0072                     ___wmul@multiplicand:	
   796                           ; 2 bytes @ 0x2
   797                           
   798  0072                     ___lwdiv@dividend:	
   799                           ; 2 bytes @ 0x2
   800                           
   801                           
   802                           ; 2 bytes @ 0x2
   803  0072                     	ds	2
   804  0074                     ??___wmul:
   805  0074                     ??___lwdiv:	
   806                           ; 1 bytes @ 0x4
   807                           
   808  0074                     dynam@smdata:	
   809                           ; 1 bytes @ 0x4
   810                           
   811  0074                     ___wmul@product:	
   812                           ; 2 bytes @ 0x4
   813                           
   814                           
   815                           ; 2 bytes @ 0x4
   816  0074                     	ds	1
   817  0075                     ___lwdiv@quotient:
   818                           
   819                           ; 2 bytes @ 0x5
   820  0075                     	ds	1
   821  0076                     ?_wait:
   822  0076                     wait@wt:	
   823                           ; 1 bytes @ 0x6
   824                           
   825  0076                     dynam@tr:	
   826                           ; 2 bytes @ 0x6
   827                           
   828                           
   829                           ; 2 bytes @ 0x6
   830  0076                     	ds	1
   831  0077                     ___lwdiv@counter:
   832                           
   833                           ; 1 bytes @ 0x7
   834  0077                     	ds	1
   835  0078                     ??_wait:
   836  0078                     ??_dynam:	
   837                           ; 1 bytes @ 0x8
   838                           
   839  0078                     ??_waitSEG:	
   840                           ; 1 bytes @ 0x8
   841                           
   842  0078                     ??_motor:	
   843                           ; 1 bytes @ 0x8
   844                           
   845  0078                     wait@i:	
   846                           ; 1 bytes @ 0x8
   847                           
   848  0078                     waitSEG@i:	
   849                           ; 2 bytes @ 0x8
   850                           
   851  0078                     motor@i:	
   852                           ; 2 bytes @ 0x8
   853                           
   854                           
   855                           ; 2 bytes @ 0x8
   856  0078                     	ds	2
   857  007A                     wait@j:
   858                           
   859                           ; 2 bytes @ 0xA
   860  007A                     	ds	2
   861  007C                     ??_main:
   862                           
   863                           ; 1 bytes @ 0xC
   864  007C                     	ds	1
   865                           
   866                           	psect	cstackBANK0
   867  0042                     __pcstackBANK0:
   868  0042                     dynam@smd:
   869                           
   870                           ; 2 bytes @ 0x0
   871  0042                     	ds	2
   872  0044                     dynam@tm:
   873                           
   874                           ; 2 bytes @ 0x2
   875  0044                     	ds	2
   876  0046                     dynam@j:
   877                           
   878                           ; 2 bytes @ 0x4
   879  0046                     	ds	2
   880  0048                     dynam@ext:
   881                           
   882                           ; 2 bytes @ 0x6
   883  0048                     	ds	2
   884  004A                     ?_waitSEG:
   885  004A                     ?_motor:	
   886                           ; 1 bytes @ 0x8
   887                           
   888  004A                     waitSEG@seg1:	
   889                           ; 1 bytes @ 0x8
   890                           
   891  004A                     motor@kakudo:	
   892                           ; 2 bytes @ 0x8
   893                           
   894                           
   895                           ; 2 bytes @ 0x8
   896  004A                     	ds	2
   897  004C                     waitSEG@seg2:
   898  004C                     motor@dig1data:	
   899                           ; 2 bytes @ 0xA
   900                           
   901                           
   902                           ; 2 bytes @ 0xA
   903  004C                     	ds	2
   904  004E                     waitSEG@wt:
   905  004E                     motor@dig2data:	
   906                           ; 2 bytes @ 0xC
   907                           
   908                           
   909                           ; 2 bytes @ 0xC
   910  004E                     	ds	2
   911  0050                     motor@smdata:
   912                           
   913                           ; 2 bytes @ 0xE
   914  0050                     	ds	2
   915  0052                     motor@tr:
   916                           
   917                           ; 2 bytes @ 0x10
   918  0052                     	ds	8
   919  005A                     main@time:
   920                           
   921                           ; 2 bytes @ 0x18
   922  005A                     	ds	2
   923  005C                     main@j:
   924                           
   925                           ; 2 bytes @ 0x1A
   926  005C                     	ds	2
   927  005E                     main@i:
   928                           
   929                           ; 2 bytes @ 0x1C
   930  005E                     	ds	2
   931                           
   932                           	psect	maintext
   933  0505                     __pmaintext:	
   934 ;;
   935 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   936 ;;
   937 ;; *************** function _main *****************
   938 ;; Defined at:
   939 ;;		line 483 in file "Q3.c"
   940 ;; Parameters:    Size  Location     Type
   941 ;;		None
   942 ;; Auto vars:     Size  Location     Type
   943 ;;  i               2   28[BANK0 ] int 
   944 ;;  j               2   26[BANK0 ] int 
   945 ;;  time            2   24[BANK0 ] int 
   946 ;;  n               2    0        int 
   947 ;;  m               2    0        int 
   948 ;;  k               2    0        int 
   949 ;; Return value:  Size  Location     Type
   950 ;;                  1    wreg      void 
   951 ;; Registers used:
   952 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   953 ;; Tracked objects:
   954 ;;		On entry : B1F/0
   955 ;;		On exit  : 0/0
   956 ;;		Unchanged: 0/0
   957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   959 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
   960 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   961 ;;      Totals:         1      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
   962 ;;Total ram usage:       13 bytes
   963 ;; Hardware stack levels required when called:    2
   964 ;; This function calls:
   965 ;;		_dynam
   966 ;;		_fclr
   967 ;;		_jikan
   968 ;;		_motor
   969 ;;		_portinit
   970 ;;		_wait
   971 ;;		_waitSEG
   972 ;;		_zenoff
   973 ;; This function is called by:
   974 ;;		Startup code after reset
   975 ;; This function uses a non-reentrant model
   976 ;;
   977                           
   978                           
   979                           ;psect for function _main
   980  0505                     _main:
   981  0505                     l2266:	
   982                           ;incstack = 0
   983                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   984                           
   985                           
   986                           ;Q3.c: 486:     OSCCON=0x7A;
   987  0505  307A               	movlw	122
   988  0506  0021               	movlb	1	; select bank1
   989  0507  0099               	movwf	25	;volatile
   990  0508                     l2268:
   991                           
   992                           ;Q3.c: 488:     portinit();
   993  0508  3183  2361  3185   	fcall	_portinit
   994                           
   995                           ;Q3.c: 490:     zenoff();
   996  050B  3183  234B  3185   	fcall	_zenoff
   997  050E                     l2270:
   998  050E                     l2272:
   999  050E                     l2274:
  1000  050E                     l2276:
  1001  050E                     l2278:
  1002  050E                     l276:	
  1003                           ;Q3.c: 495:     while((RA0!=1)||(RA1!=1)||(RA2!=1));
  1004                           
  1005  050E  0020               	movlb	0	; select bank0
  1006  050F  1C0C               	btfss	12,0	;volatile
  1007  0510  2D12               	goto	u1941
  1008  0511  2D13               	goto	u1940
  1009  0512                     u1941:
  1010  0512  2D0E               	goto	l276
  1011  0513                     u1940:
  1012  0513                     l2280:
  1013  0513  1C8C               	btfss	12,1	;volatile
  1014  0514  2D16               	goto	u1951
  1015  0515  2D17               	goto	u1950
  1016  0516                     u1951:
  1017  0516  2D0E               	goto	l276
  1018  0517                     u1950:
  1019  0517                     l2282:
  1020  0517  1D0C               	btfss	12,2	;volatile
  1021  0518  2D1A               	goto	u1961
  1022  0519  2D1B               	goto	u1960
  1023  051A                     u1961:
  1024  051A  2D0E               	goto	l276
  1025  051B                     u1960:
  1026  051B                     l278:
  1027                           
  1028                           ;Q3.c: 498:     RC0=RC2=RC1=1;
  1029  051B  148E               	bsf	14,1	;volatile
  1030  051C  188E               	btfsc	14,1	;volatile
  1031  051D  2D1F               	goto	u1971
  1032  051E  2D22               	goto	u1970
  1033  051F                     u1971:
  1034  051F  0020               	movlb	0	; select bank0
  1035  0520  150E               	bsf	14,2	;volatile
  1036  0521  2D24               	goto	u1984
  1037  0522                     u1970:
  1038  0522  0020               	movlb	0	; select bank0
  1039  0523  110E               	bcf	14,2	;volatile
  1040  0524                     u1984:
  1041  0524  190E               	btfsc	14,2	;volatile
  1042  0525  2D27               	goto	u1981
  1043  0526  2D2A               	goto	u1980
  1044  0527                     u1981:
  1045  0527  0020               	movlb	0	; select bank0
  1046  0528  140E               	bsf	14,0	;volatile
  1047  0529  2D2C               	goto	u1994
  1048  052A                     u1980:
  1049  052A  0020               	movlb	0	; select bank0
  1050  052B  100E               	bcf	14,0	;volatile
  1051  052C                     u1994:
  1052  052C                     l2284:
  1053                           
  1054                           ;Q3.c: 501:     fclr(2);
  1055  052C  3002               	movlw	2
  1056  052D  00F0               	movwf	fclr@flg
  1057  052E  3000               	movlw	0
  1058  052F  00F1               	movwf	fclr@flg+1
  1059  0530  3183  2393  3185   	fcall	_fclr
  1060  0533                     l2286:
  1061                           
  1062                           ;Q3.c: 506:         if(RA0 == 0){
  1063  0533  0020               	movlb	0	; select bank0
  1064  0534  180C               	btfsc	12,0	;volatile
  1065  0535  2D37               	goto	u2001
  1066  0536  2D38               	goto	u2000
  1067  0537                     u2001:
  1068  0537  2D33               	goto	l2286
  1069  0538                     u2000:
  1070  0538                     l2290:
  1071                           
  1072                           ;Q3.c: 511:     int time = 0;
  1073  0538  01DA               	clrf	main@time
  1074  0539  01DB               	clrf	main@time+1
  1075  053A                     l2292:
  1076                           
  1077                           ;Q3.c: 517:        if(RA0 == 0){
  1078  053A  180C               	btfsc	12,0	;volatile
  1079  053B  2D3D               	goto	u2011
  1080  053C  2D3E               	goto	u2010
  1081  053D                     u2011:
  1082  053D  2D3A               	goto	l2292
  1083  053E                     u2010:
  1084  053E                     l2294:
  1085                           
  1086                           ;Q3.c: 518:            for(i = 9; i>=0 ; i--){
  1087  053E  3009               	movlw	9
  1088  053F  00DE               	movwf	main@i
  1089  0540  3000               	movlw	0
  1090  0541  00DF               	movwf	main@i+1
  1091  0542                     l2300:
  1092                           
  1093                           ;Q3.c: 519:                waitSEG(num0[i],0,500);
  1094  0542  355E               	lslf	main@i,w
  1095  0543  3EC0               	addlw	(low (_num0| 0))& (0+255)
  1096  0544  0086               	movwf	6
  1097  0545  0187               	clrf	7
  1098  0546  3F40               	moviw [0]fsr1
  1099  0547  00CA               	movwf	waitSEG@seg1
  1100  0548  3F41               	moviw [1]fsr1
  1101  0549  00CB               	movwf	waitSEG@seg1+1
  1102  054A  3000               	movlw	0
  1103  054B  00CC               	movwf	waitSEG@seg2
  1104  054C  00CD               	movwf	waitSEG@seg2+1
  1105  054D  30F4               	movlw	244
  1106  054E  00CE               	movwf	waitSEG@wt
  1107  054F  3001               	movlw	1
  1108  0550  00CF               	movwf	waitSEG@wt+1
  1109  0551  3184  2401  3185   	fcall	_waitSEG
  1110                           
  1111                           ;Q3.c: 521:                 while(RA1 == 0 ){
  1112  0554  2E57               	goto	l2354
  1113  0555                     l2302:
  1114                           
  1115                           ;Q3.c: 522:                     dynam(num0[i],(0x01|0x02|0x04|0x08|0x10|0x20),0,0);
  1116  0555  355E               	lslf	main@i,w
  1117  0556  3EC0               	addlw	(low (_num0| 0))& (0+255)
  1118  0557  0086               	movwf	6
  1119  0558  0187               	clrf	7
  1120  0559  3F40               	moviw [0]fsr1
  1121  055A  00F0               	movwf	dynam@dig1data
  1122  055B  3F41               	moviw [1]fsr1
  1123  055C  00F1               	movwf	dynam@dig1data+1
  1124  055D  303F               	movlw	63
  1125  055E  00F2               	movwf	dynam@dig2data
  1126  055F  3000               	movlw	0
  1127  0560  00F3               	movwf	dynam@dig2data+1
  1128  0561  3000               	movlw	0
  1129  0562  00F4               	movwf	dynam@smdata
  1130  0563  00F5               	movwf	dynam@smdata+1
  1131  0564  3000               	movlw	0
  1132  0565  00F6               	movwf	dynam@tr
  1133  0566  00F7               	movwf	dynam@tr+1
  1134  0567  3186  2667  3185   	fcall	_dynam
  1135  056A                     l2304:
  1136                           
  1137                           ;Q3.c: 524:                     jikan();
  1138  056A  3183  2354  3185   	fcall	_jikan
  1139  056D                     l2306:
  1140                           
  1141                           ;Q3.c: 526:                     if(time != 0 && time < 100 && count == 0){
  1142  056D  0020               	movlb	0	; select bank0
  1143  056E  085A               	movf	main@time,w
  1144  056F  045B               	iorwf	main@time+1,w
  1145  0570  1903               	btfsc	3,2
  1146  0571  2D73               	goto	u2021
  1147  0572  2D74               	goto	u2020
  1148  0573                     u2021:
  1149  0573  2DE7               	goto	l2330
  1150  0574                     u2020:
  1151  0574                     l2308:
  1152  0574  085B               	movf	main@time+1,w
  1153  0575  3A80               	xorlw	128
  1154  0576  00FC               	movwf	??_main
  1155  0577  3080               	movlw	128
  1156  0578  027C               	subwf	??_main,w
  1157  0579  1D03               	skipz
  1158  057A  2D7D               	goto	u2035
  1159  057B  3064               	movlw	100
  1160  057C  025A               	subwf	main@time,w
  1161  057D                     u2035:
  1162  057D  1803               	skipnc
  1163  057E  2D80               	goto	u2031
  1164  057F  2D81               	goto	u2030
  1165  0580                     u2031:
  1166  0580  2DE7               	goto	l2330
  1167  0581                     u2030:
  1168  0581                     l2310:
  1169  0581  0020               	movlb	0	; select bank0
  1170  0582  082A               	movf	_count,w
  1171  0583  042B               	iorwf	_count+1,w
  1172  0584  1D03               	btfss	3,2
  1173  0585  2D87               	goto	u2041
  1174  0586  2D88               	goto	u2040
  1175  0587                     u2041:
  1176  0587  2DE7               	goto	l2330
  1177  0588                     u2040:
  1178  0588                     l2312:
  1179                           
  1180                           ;Q3.c: 528:                         for(j=0; j<i ; j++ ){
  1181  0588  01DC               	clrf	main@j
  1182  0589  01DD               	clrf	main@j+1
  1183  058A  2DB0               	goto	l2318
  1184  058B                     l2314:
  1185                           
  1186                           ;Q3.c: 529:                             motor(360,num0[i],num0[j],1,1);
  1187  058B  3068               	movlw	104
  1188  058C  0020               	movlb	0	; select bank0
  1189  058D  00CA               	movwf	motor@kakudo
  1190  058E  3001               	movlw	1
  1191  058F  00CB               	movwf	motor@kakudo+1
  1192  0590  355E               	lslf	main@i,w
  1193  0591  3EC0               	addlw	(low (_num0| 0))& (0+255)
  1194  0592  0086               	movwf	6
  1195  0593  0187               	clrf	7
  1196  0594  3F40               	moviw [0]fsr1
  1197  0595  00CC               	movwf	motor@dig1data
  1198  0596  3F41               	moviw [1]fsr1
  1199  0597  00CD               	movwf	motor@dig1data+1
  1200  0598  355C               	lslf	main@j,w
  1201  0599  3EC0               	addlw	(low (_num0| 0))& (0+255)
  1202  059A  0086               	movwf	6
  1203  059B  0187               	clrf	7
  1204  059C  3F40               	moviw [0]fsr1
  1205  059D  00CE               	movwf	motor@dig2data
  1206  059E  3F41               	moviw [1]fsr1
  1207  059F  00CF               	movwf	motor@dig2data+1
  1208  05A0  3001               	movlw	1
  1209  05A1  00D0               	movwf	motor@smdata
  1210  05A2  3000               	movlw	0
  1211  05A3  00D1               	movwf	motor@smdata+1
  1212  05A4  3001               	movlw	1
  1213  05A5  00D2               	movwf	motor@tr
  1214  05A6  3000               	movlw	0
  1215  05A7  00D3               	movwf	motor@tr+1
  1216  05A8  3183  23B3  3185   	fcall	_motor
  1217  05AB                     l2316:
  1218                           
  1219                           ;Q3.c: 530:                         }
  1220  05AB  3001               	movlw	1
  1221  05AC  0020               	movlb	0	; select bank0
  1222  05AD  07DC               	addwf	main@j,f
  1223  05AE  3000               	movlw	0
  1224  05AF  3DDD               	addwfc	main@j+1,f
  1225  05B0                     l2318:
  1226  05B0  085D               	movf	main@j+1,w
  1227  05B1  3A80               	xorlw	128
  1228  05B2  00FC               	movwf	??_main
  1229  05B3  085F               	movf	main@i+1,w
  1230  05B4  3A80               	xorlw	128
  1231  05B5  027C               	subwf	??_main,w
  1232  05B6  1D03               	skipz
  1233  05B7  2DBA               	goto	u2055
  1234  05B8  085E               	movf	main@i,w
  1235  05B9  025C               	subwf	main@j,w
  1236  05BA                     u2055:
  1237  05BA  1C03               	skipc
  1238  05BB  2DBD               	goto	u2051
  1239  05BC  2DBE               	goto	u2050
  1240  05BD                     u2051:
  1241  05BD  2D8B               	goto	l2314
  1242  05BE                     u2050:
  1243  05BE                     l2320:
  1244                           
  1245                           ;Q3.c: 532:                             waitSEG(num0[i],num0[j],500);
  1246  05BE  0020               	movlb	0	; select bank0
  1247  05BF  355E               	lslf	main@i,w
  1248  05C0  3EC0               	addlw	(low (_num0| 0))& (0+255)
  1249  05C1  0086               	movwf	6
  1250  05C2  0187               	clrf	7
  1251  05C3  3F40               	moviw [0]fsr1
  1252  05C4  00CA               	movwf	waitSEG@seg1
  1253  05C5  3F41               	moviw [1]fsr1
  1254  05C6  00CB               	movwf	waitSEG@seg1+1
  1255  05C7  355C               	lslf	main@j,w
  1256  05C8  3EC0               	addlw	(low (_num0| 0))& (0+255)
  1257  05C9  0086               	movwf	6
  1258  05CA  0187               	clrf	7
  1259  05CB  3F40               	moviw [0]fsr1
  1260  05CC  00CC               	movwf	waitSEG@seg2
  1261  05CD  3F41               	moviw [1]fsr1
  1262  05CE  00CD               	movwf	waitSEG@seg2+1
  1263  05CF  30F4               	movlw	244
  1264  05D0  00CE               	movwf	waitSEG@wt
  1265  05D1  3001               	movlw	1
  1266  05D2  00CF               	movwf	waitSEG@wt+1
  1267  05D3  3184  2401  3185   	fcall	_waitSEG
  1268  05D6                     l2322:
  1269                           
  1270                           ;Q3.c: 533:                             wait(500);
  1271  05D6  30F4               	movlw	244
  1272  05D7  00F6               	movwf	wait@wt
  1273  05D8  3001               	movlw	1
  1274  05D9  00F7               	movwf	wait@wt+1
  1275  05DA  3183  23D7  3185   	fcall	_wait
  1276  05DD                     l2324:
  1277                           
  1278                           ;Q3.c: 534:                             if(RA0 == 1 && RA1 == 1){
  1279  05DD  0020               	movlb	0	; select bank0
  1280  05DE  1C0C               	btfss	12,0	;volatile
  1281  05DF  2DE1               	goto	u2061
  1282  05E0  2DE2               	goto	u2060
  1283  05E1                     u2061:
  1284  05E1  2DBE               	goto	l2320
  1285  05E2                     u2060:
  1286  05E2                     l2326:
  1287  05E2  1C8C               	btfss	12,1	;volatile
  1288  05E3  2DE5               	goto	u2071
  1289  05E4  2DE6               	goto	u2070
  1290  05E5                     u2071:
  1291  05E5  2DBE               	goto	l2320
  1292  05E6                     u2070:
  1293  05E6  2D38               	goto	l2290
  1294  05E7                     l2330:
  1295  05E7  0020               	movlb	0	; select bank0
  1296  05E8  085A               	movf	main@time,w
  1297  05E9  045B               	iorwf	main@time+1,w
  1298  05EA  1903               	btfsc	3,2
  1299  05EB  2DED               	goto	u2081
  1300  05EC  2DEE               	goto	u2080
  1301  05ED                     u2081:
  1302  05ED  2E53               	goto	l2352
  1303  05EE                     u2080:
  1304  05EE                     l2332:
  1305  05EE  082A               	movf	_count,w
  1306  05EF  042B               	iorwf	_count+1,w
  1307  05F0  1D03               	btfss	3,2
  1308  05F1  2DF3               	goto	u2091
  1309  05F2  2DF4               	goto	u2090
  1310  05F3                     u2091:
  1311  05F3  2E53               	goto	l2352
  1312  05F4                     u2090:
  1313  05F4                     l2334:
  1314                           
  1315                           ;Q3.c: 545:                         for(j=0; j<i ; j++ ){
  1316  05F4  01DC               	clrf	main@j
  1317  05F5  01DD               	clrf	main@j+1
  1318  05F6  2E1C               	goto	l2340
  1319  05F7                     l2336:
  1320                           
  1321                           ;Q3.c: 546:                             motor(360,num0[i],num0[j],2,5);
  1322  05F7  3068               	movlw	104
  1323  05F8  0020               	movlb	0	; select bank0
  1324  05F9  00CA               	movwf	motor@kakudo
  1325  05FA  3001               	movlw	1
  1326  05FB  00CB               	movwf	motor@kakudo+1
  1327  05FC  355E               	lslf	main@i,w
  1328  05FD  3EC0               	addlw	(low (_num0| 0))& (0+255)
  1329  05FE  0086               	movwf	6
  1330  05FF  0187               	clrf	7
  1331  0600  3F40               	moviw [0]fsr1
  1332  0601  00CC               	movwf	motor@dig1data
  1333  0602  3F41               	moviw [1]fsr1
  1334  0603  00CD               	movwf	motor@dig1data+1
  1335  0604  355C               	lslf	main@j,w
  1336  0605  3EC0               	addlw	(low (_num0| 0))& (0+255)
  1337  0606  0086               	movwf	6
  1338  0607  0187               	clrf	7
  1339  0608  3F40               	moviw [0]fsr1
  1340  0609  00CE               	movwf	motor@dig2data
  1341  060A  3F41               	moviw [1]fsr1
  1342  060B  00CF               	movwf	motor@dig2data+1
  1343  060C  3002               	movlw	2
  1344  060D  00D0               	movwf	motor@smdata
  1345  060E  3000               	movlw	0
  1346  060F  00D1               	movwf	motor@smdata+1
  1347  0610  3005               	movlw	5
  1348  0611  00D2               	movwf	motor@tr
  1349  0612  3000               	movlw	0
  1350  0613  00D3               	movwf	motor@tr+1
  1351  0614  3183  23B3  3185   	fcall	_motor
  1352  0617                     l2338:
  1353                           
  1354                           ;Q3.c: 547:                         }
  1355  0617  3001               	movlw	1
  1356  0618  0020               	movlb	0	; select bank0
  1357  0619  07DC               	addwf	main@j,f
  1358  061A  3000               	movlw	0
  1359  061B  3DDD               	addwfc	main@j+1,f
  1360  061C                     l2340:
  1361  061C  085D               	movf	main@j+1,w
  1362  061D  3A80               	xorlw	128
  1363  061E  00FC               	movwf	??_main
  1364  061F  085F               	movf	main@i+1,w
  1365  0620  3A80               	xorlw	128
  1366  0621  027C               	subwf	??_main,w
  1367  0622  1D03               	skipz
  1368  0623  2E26               	goto	u2105
  1369  0624  085E               	movf	main@i,w
  1370  0625  025C               	subwf	main@j,w
  1371  0626                     u2105:
  1372  0626  1C03               	skipc
  1373  0627  2E29               	goto	u2101
  1374  0628  2E2A               	goto	u2100
  1375  0629                     u2101:
  1376  0629  2DF7               	goto	l2336
  1377  062A                     u2100:
  1378  062A                     l2342:
  1379                           
  1380                           ;Q3.c: 549:                             waitSEG(num0[i],num0[j],1000);
  1381  062A  0020               	movlb	0	; select bank0
  1382  062B  355E               	lslf	main@i,w
  1383  062C  3EC0               	addlw	(low (_num0| 0))& (0+255)
  1384  062D  0086               	movwf	6
  1385  062E  0187               	clrf	7
  1386  062F  3F40               	moviw [0]fsr1
  1387  0630  00CA               	movwf	waitSEG@seg1
  1388  0631  3F41               	moviw [1]fsr1
  1389  0632  00CB               	movwf	waitSEG@seg1+1
  1390  0633  355C               	lslf	main@j,w
  1391  0634  3EC0               	addlw	(low (_num0| 0))& (0+255)
  1392  0635  0086               	movwf	6
  1393  0636  0187               	clrf	7
  1394  0637  3F40               	moviw [0]fsr1
  1395  0638  00CC               	movwf	waitSEG@seg2
  1396  0639  3F41               	moviw [1]fsr1
  1397  063A  00CD               	movwf	waitSEG@seg2+1
  1398  063B  30E8               	movlw	232
  1399  063C  00CE               	movwf	waitSEG@wt
  1400  063D  3003               	movlw	3
  1401  063E  00CF               	movwf	waitSEG@wt+1
  1402  063F  3184  2401  3185   	fcall	_waitSEG
  1403  0642                     l2344:
  1404                           
  1405                           ;Q3.c: 550:                             wait(1000);
  1406  0642  30E8               	movlw	232
  1407  0643  00F6               	movwf	wait@wt
  1408  0644  3003               	movlw	3
  1409  0645  00F7               	movwf	wait@wt+1
  1410  0646  3183  23D7  3185   	fcall	_wait
  1411  0649                     l2346:
  1412                           
  1413                           ;Q3.c: 551:                             if(RA0 == 1 && RA1 == 1){
  1414  0649  0020               	movlb	0	; select bank0
  1415  064A  1C0C               	btfss	12,0	;volatile
  1416  064B  2E4D               	goto	u2111
  1417  064C  2E4E               	goto	u2110
  1418  064D                     u2111:
  1419  064D  2E2A               	goto	l2342
  1420  064E                     u2110:
  1421  064E                     l2348:
  1422  064E  1C8C               	btfss	12,1	;volatile
  1423  064F  2E51               	goto	u2121
  1424  0650  2E52               	goto	u2120
  1425  0651                     u2121:
  1426  0651  2E2A               	goto	l2342
  1427  0652                     u2120:
  1428  0652  2D38               	goto	l2290
  1429  0653                     l2352:
  1430                           
  1431                           ;Q3.c: 562:                     time = count;
  1432  0653  082B               	movf	_count+1,w
  1433  0654  00DB               	movwf	main@time+1
  1434  0655  082A               	movf	_count,w
  1435  0656  00DA               	movwf	main@time
  1436  0657                     l2354:
  1437                           
  1438                           ;Q3.c: 521:                 while(RA1 == 0 ){
  1439  0657  0020               	movlb	0	; select bank0
  1440  0658  1C8C               	btfss	12,1	;volatile
  1441  0659  2E5B               	goto	u2131
  1442  065A  2E5C               	goto	u2130
  1443  065B                     u2131:
  1444  065B  2D55               	goto	l2302
  1445  065C                     u2130:
  1446  065C                     l2356:
  1447                           
  1448                           ;Q3.c: 567:            }
  1449  065C  30FF               	movlw	255
  1450  065D  07DE               	addwf	main@i,f
  1451  065E  30FF               	movlw	255
  1452  065F  3DDF               	addwfc	main@i+1,f
  1453  0660                     l2358:
  1454  0660  1FDF               	btfss	main@i+1,7
  1455  0661  2E63               	goto	u2141
  1456  0662  2E64               	goto	u2140
  1457  0663                     u2141:
  1458  0663  2D42               	goto	l2300
  1459  0664                     u2140:
  1460  0664  2D3A               	goto	l2292
  1461  0665  3180  2802         	ljmp	start
  1462  0667                     __end_of_main:
  1463                           
  1464                           	psect	text1
  1465  034B                     __ptext1:	
  1466 ;; *************** function _zenoff *****************
  1467 ;; Defined at:
  1468 ;;		line 195 in file "Q3.c"
  1469 ;; Parameters:    Size  Location     Type
  1470 ;;		None
  1471 ;; Auto vars:     Size  Location     Type
  1472 ;;		None
  1473 ;; Return value:  Size  Location     Type
  1474 ;;                  1    wreg      void 
  1475 ;; Registers used:
  1476 ;;		status,2
  1477 ;; Tracked objects:
  1478 ;;		On entry : 0/0
  1479 ;;		On exit  : 0/0
  1480 ;;		Unchanged: 0/0
  1481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1486 ;;Total ram usage:        0 bytes
  1487 ;; Hardware stack levels used:    1
  1488 ;; This function calls:
  1489 ;;		Nothing
  1490 ;; This function is called by:
  1491 ;;		_main
  1492 ;; This function uses a non-reentrant model
  1493 ;;
  1494                           
  1495                           
  1496                           ;psect for function _zenoff
  1497  034B                     _zenoff:
  1498  034B                     l1928:	
  1499                           ;incstack = 0
  1500                           ; Regs used in _zenoff: [status,2]
  1501                           
  1502                           
  1503                           ;Q3.c: 197:     RC0=1;
  1504  034B  0020               	movlb	0	; select bank0
  1505  034C  140E               	bsf	14,0	;volatile
  1506                           
  1507                           ;Q3.c: 198:     RC1=1;
  1508  034D  148E               	bsf	14,1	;volatile
  1509                           
  1510                           ;Q3.c: 199:     RC2=1;
  1511  034E  150E               	bsf	14,2	;volatile
  1512  034F                     l1930:
  1513                           
  1514                           ;Q3.c: 200:     PORTB=0x00;
  1515  034F  018D               	clrf	13	;volatile
  1516  0350                     l1932:
  1517                           
  1518                           ;Q3.c: 201:     RC7=0;RC7=1;RC7=0;
  1519  0350  138E               	bcf	14,7	;volatile
  1520  0351                     l1934:
  1521  0351  178E               	bsf	14,7	;volatile
  1522  0352                     l1936:
  1523  0352  138E               	bcf	14,7	;volatile
  1524  0353                     l108:
  1525  0353  0008               	return
  1526  0354                     __end_of_zenoff:
  1527                           
  1528                           	psect	text2
  1529  0401                     __ptext2:	
  1530 ;; *************** function _waitSEG *****************
  1531 ;; Defined at:
  1532 ;;		line 451 in file "Q3.c"
  1533 ;; Parameters:    Size  Location     Type
  1534 ;;  seg1            2    8[BANK0 ] unsigned short 
  1535 ;;  seg2            2   10[BANK0 ] unsigned short 
  1536 ;;  wt              2   12[BANK0 ] unsigned short 
  1537 ;; Auto vars:     Size  Location     Type
  1538 ;;  i               2    8[COMMON] unsigned int 
  1539 ;; Return value:  Size  Location     Type
  1540 ;;                  1    wreg      void 
  1541 ;; Registers used:
  1542 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1543 ;; Tracked objects:
  1544 ;;		On entry : 0/0
  1545 ;;		On exit  : 0/0
  1546 ;;		Unchanged: 0/0
  1547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1548 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1549 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1551 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1552 ;;Total ram usage:        8 bytes
  1553 ;; Hardware stack levels used:    1
  1554 ;; Hardware stack levels required when called:    1
  1555 ;; This function calls:
  1556 ;;		___lwdiv
  1557 ;;		_dynam
  1558 ;; This function is called by:
  1559 ;;		_main
  1560 ;; This function uses a non-reentrant model
  1561 ;;
  1562                           
  1563                           
  1564                           ;psect for function _waitSEG
  1565  0401                     _waitSEG:
  1566  0401                     l1994:	
  1567                           ;incstack = 0
  1568                           ; Regs used in _waitSEG: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1569                           
  1570                           
  1571                           ;Q3.c: 451: void waitSEG(unsigned short seg1,unsigned short seg2,unsigned short wt);Q3.c
      +                          : 452: {;Q3.c: 453:     wt = wt / 10;
  1572  0401  300A               	movlw	10
  1573  0402  00F0               	movwf	___lwdiv@divisor
  1574  0403  3000               	movlw	0
  1575  0404  00F1               	movwf	___lwdiv@divisor+1
  1576  0405  0020               	movlb	0	; select bank0
  1577  0406  084F               	movf	waitSEG@wt+1,w
  1578  0407  00F3               	movwf	___lwdiv@dividend+1
  1579  0408  084E               	movf	waitSEG@wt,w
  1580  0409  00F2               	movwf	___lwdiv@dividend
  1581  040A  3184  2435  3184   	fcall	___lwdiv
  1582  040D  0871               	movf	?___lwdiv+1,w
  1583  040E  0020               	movlb	0	; select bank0
  1584  040F  00CF               	movwf	waitSEG@wt+1
  1585  0410  0870               	movf	?___lwdiv,w
  1586  0411  00CE               	movwf	waitSEG@wt
  1587  0412                     l1996:
  1588                           
  1589                           ;Q3.c: 454:     unsigned int i;;Q3.c: 455:     for(i=wt;i>0;--i){
  1590  0412  084F               	movf	waitSEG@wt+1,w
  1591  0413  00F9               	movwf	waitSEG@i+1
  1592  0414  084E               	movf	waitSEG@wt,w
  1593  0415  00F8               	movwf	waitSEG@i
  1594  0416                     l1998:
  1595  0416  0878               	movf	waitSEG@i,w
  1596  0417  0479               	iorwf	waitSEG@i+1,w
  1597  0418  1D03               	btfss	3,2
  1598  0419  2C1B               	goto	u1531
  1599  041A  2C1C               	goto	u1530
  1600  041B                     u1531:
  1601  041B  2C1D               	goto	l2002
  1602  041C                     u1530:
  1603  041C  2C34               	goto	l258
  1604  041D                     l2002:
  1605                           
  1606                           ;Q3.c: 456:         dynam(seg1,seg2,0,0);
  1607  041D  0020               	movlb	0	; select bank0
  1608  041E  084B               	movf	waitSEG@seg1+1,w
  1609  041F  00F1               	movwf	dynam@dig1data+1
  1610  0420  084A               	movf	waitSEG@seg1,w
  1611  0421  00F0               	movwf	dynam@dig1data
  1612  0422  084D               	movf	waitSEG@seg2+1,w
  1613  0423  00F3               	movwf	dynam@dig2data+1
  1614  0424  084C               	movf	waitSEG@seg2,w
  1615  0425  00F2               	movwf	dynam@dig2data
  1616  0426  3000               	movlw	0
  1617  0427  00F4               	movwf	dynam@smdata
  1618  0428  00F5               	movwf	dynam@smdata+1
  1619  0429  3000               	movlw	0
  1620  042A  00F6               	movwf	dynam@tr
  1621  042B  00F7               	movwf	dynam@tr+1
  1622  042C  3186  2667  3184   	fcall	_dynam
  1623  042F                     l2004:
  1624                           
  1625                           ;Q3.c: 457:     }
  1626  042F  3001               	movlw	1
  1627  0430  02F8               	subwf	waitSEG@i,f
  1628  0431  3000               	movlw	0
  1629  0432  3BF9               	subwfb	waitSEG@i+1,f
  1630  0433  2C16               	goto	l1998
  1631  0434                     l258:
  1632  0434  0008               	return
  1633  0435                     __end_of_waitSEG:
  1634                           
  1635                           	psect	text3
  1636  0435                     __ptext3:	
  1637 ;; *************** function ___lwdiv *****************
  1638 ;; Defined at:
  1639 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\lwdiv.c"
  1640 ;; Parameters:    Size  Location     Type
  1641 ;;  divisor         2    0[COMMON] unsigned int 
  1642 ;;  dividend        2    2[COMMON] unsigned int 
  1643 ;; Auto vars:     Size  Location     Type
  1644 ;;  quotient        2    5[COMMON] unsigned int 
  1645 ;;  counter         1    7[COMMON] unsigned char 
  1646 ;; Return value:  Size  Location     Type
  1647 ;;                  2    0[COMMON] unsigned int 
  1648 ;; Registers used:
  1649 ;;		wreg, status,2, status,0
  1650 ;; Tracked objects:
  1651 ;;		On entry : 0/0
  1652 ;;		On exit  : 0/0
  1653 ;;		Unchanged: 0/0
  1654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1655 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1656 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1657 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1658 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1659 ;;Total ram usage:        8 bytes
  1660 ;; Hardware stack levels used:    1
  1661 ;; This function calls:
  1662 ;;		Nothing
  1663 ;; This function is called by:
  1664 ;;		_waitSEG
  1665 ;; This function uses a non-reentrant model
  1666 ;;
  1667                           
  1668                           
  1669                           ;psect for function ___lwdiv
  1670  0435                     ___lwdiv:
  1671  0435                     l1872:	
  1672                           ;incstack = 0
  1673                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1674                           
  1675  0435  01F5               	clrf	___lwdiv@quotient
  1676  0436  01F6               	clrf	___lwdiv@quotient+1
  1677  0437                     l1874:
  1678  0437  0870               	movf	___lwdiv@divisor,w
  1679  0438  0471               	iorwf	___lwdiv@divisor+1,w
  1680  0439  1903               	btfsc	3,2
  1681  043A  2C3C               	goto	u1381
  1682  043B  2C3D               	goto	u1380
  1683  043C                     u1381:
  1684  043C  2C6C               	goto	l1894
  1685  043D                     u1380:
  1686  043D                     l1876:
  1687  043D  01F7               	clrf	___lwdiv@counter
  1688  043E  0AF7               	incf	___lwdiv@counter,f
  1689  043F  2C49               	goto	l1882
  1690  0440                     l1878:
  1691  0440  3001               	movlw	1
  1692  0441                     u1395:
  1693  0441  35F0               	lslf	___lwdiv@divisor,f
  1694  0442  0DF1               	rlf	___lwdiv@divisor+1,f
  1695  0443  0B89               	decfsz	9,f
  1696  0444  2C41               	goto	u1395
  1697  0445                     l1880:
  1698  0445  3001               	movlw	1
  1699  0446  00F4               	movwf	??___lwdiv
  1700  0447  0874               	movf	??___lwdiv,w
  1701  0448  07F7               	addwf	___lwdiv@counter,f
  1702  0449                     l1882:
  1703  0449  1FF1               	btfss	___lwdiv@divisor+1,7
  1704  044A  2C4C               	goto	u1401
  1705  044B  2C4D               	goto	u1400
  1706  044C                     u1401:
  1707  044C  2C40               	goto	l1878
  1708  044D                     u1400:
  1709  044D                     l1884:
  1710  044D  3001               	movlw	1
  1711  044E                     u1415:
  1712  044E  35F5               	lslf	___lwdiv@quotient,f
  1713  044F  0DF6               	rlf	___lwdiv@quotient+1,f
  1714  0450  0B89               	decfsz	9,f
  1715  0451  2C4E               	goto	u1415
  1716  0452  0871               	movf	___lwdiv@divisor+1,w
  1717  0453  0273               	subwf	___lwdiv@dividend+1,w
  1718  0454  1D03               	skipz
  1719  0455  2C58               	goto	u1425
  1720  0456  0870               	movf	___lwdiv@divisor,w
  1721  0457  0272               	subwf	___lwdiv@dividend,w
  1722  0458                     u1425:
  1723  0458  1C03               	skipc
  1724  0459  2C5B               	goto	u1421
  1725  045A  2C5C               	goto	u1420
  1726  045B                     u1421:
  1727  045B  2C61               	goto	l1890
  1728  045C                     u1420:
  1729  045C                     l1886:
  1730  045C  0870               	movf	___lwdiv@divisor,w
  1731  045D  02F2               	subwf	___lwdiv@dividend,f
  1732  045E  0871               	movf	___lwdiv@divisor+1,w
  1733  045F  3BF3               	subwfb	___lwdiv@dividend+1,f
  1734  0460                     l1888:
  1735  0460  1475               	bsf	___lwdiv@quotient,0
  1736  0461                     l1890:
  1737  0461  3001               	movlw	1
  1738  0462                     u1435:
  1739  0462  36F1               	lsrf	___lwdiv@divisor+1,f
  1740  0463  0CF0               	rrf	___lwdiv@divisor,f
  1741  0464  0B89               	decfsz	9,f
  1742  0465  2C62               	goto	u1435
  1743  0466                     l1892:
  1744  0466  3001               	movlw	1
  1745  0467  02F7               	subwf	___lwdiv@counter,f
  1746  0468  1D03               	btfss	3,2
  1747  0469  2C6B               	goto	u1441
  1748  046A  2C6C               	goto	u1440
  1749  046B                     u1441:
  1750  046B  2C4D               	goto	l1884
  1751  046C                     u1440:
  1752  046C                     l1894:
  1753  046C  0876               	movf	___lwdiv@quotient+1,w
  1754  046D  00F1               	movwf	?___lwdiv+1
  1755  046E  0875               	movf	___lwdiv@quotient,w
  1756  046F  00F0               	movwf	?___lwdiv
  1757  0470                     l740:
  1758  0470  0008               	return
  1759  0471                     __end_of___lwdiv:
  1760                           
  1761                           	psect	text4
  1762  03D7                     __ptext4:	
  1763 ;; *************** function _wait *****************
  1764 ;; Defined at:
  1765 ;;		line 176 in file "Q3.c"
  1766 ;; Parameters:    Size  Location     Type
  1767 ;;  wt              2    6[COMMON] unsigned short 
  1768 ;; Auto vars:     Size  Location     Type
  1769 ;;  j               2   10[COMMON] unsigned int 
  1770 ;;  i               2    8[COMMON] unsigned int 
  1771 ;; Return value:  Size  Location     Type
  1772 ;;                  1    wreg      void 
  1773 ;; Registers used:
  1774 ;;		wreg, status,2, status,0, pclath, cstack
  1775 ;; Tracked objects:
  1776 ;;		On entry : 0/0
  1777 ;;		On exit  : 0/0
  1778 ;;		Unchanged: 0/0
  1779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1780 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1781 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1783 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1784 ;;Total ram usage:        6 bytes
  1785 ;; Hardware stack levels used:    1
  1786 ;; Hardware stack levels required when called:    1
  1787 ;; This function calls:
  1788 ;;		___wmul
  1789 ;; This function is called by:
  1790 ;;		_main
  1791 ;;		_hyouji
  1792 ;; This function uses a non-reentrant model
  1793 ;;
  1794                           
  1795                           
  1796                           ;psect for function _wait
  1797  03D7                     _wait:
  1798  03D7                     l1908:	
  1799                           ;incstack = 0
  1800                           ; Regs used in _wait: [wreg+status,2+status,0+pclath+cstack]
  1801                           
  1802                           
  1803                           ;Q3.c: 176: void wait(unsigned short wt);Q3.c: 177: {;Q3.c: 178:     unsigned int i,j;;Q
      +                          3.c: 179:     for(i=10*wt;i>0;--i){
  1804  03D7  0877               	movf	wait@wt+1,w
  1805  03D8  00F1               	movwf	___wmul@multiplier+1
  1806  03D9  0876               	movf	wait@wt,w
  1807  03DA  00F0               	movwf	___wmul@multiplier
  1808  03DB  300A               	movlw	10
  1809  03DC  00F2               	movwf	___wmul@multiplicand
  1810  03DD  3000               	movlw	0
  1811  03DE  00F3               	movwf	___wmul@multiplicand+1
  1812  03DF  3183  2374  3183   	fcall	___wmul
  1813  03E2  0871               	movf	?___wmul+1,w
  1814  03E3  00F9               	movwf	wait@i+1
  1815  03E4  0870               	movf	?___wmul,w
  1816  03E5  00F8               	movwf	wait@i
  1817  03E6                     l1910:
  1818  03E6  0878               	movf	wait@i,w
  1819  03E7  0479               	iorwf	wait@i+1,w
  1820  03E8  1D03               	btfss	3,2
  1821  03E9  2BEB               	goto	u1451
  1822  03EA  2BEC               	goto	u1450
  1823  03EB                     u1451:
  1824  03EB  2BED               	goto	l1914
  1825  03EC                     u1450:
  1826  03EC  2C00               	goto	l102
  1827  03ED                     l1914:
  1828                           
  1829                           ;Q3.c: 180:         for(j=10;j>0;--j);
  1830  03ED  300A               	movlw	10
  1831  03EE  00FA               	movwf	wait@j
  1832  03EF  3000               	movlw	0
  1833  03F0  00FB               	movwf	wait@j+1
  1834  03F1                     l1920:
  1835  03F1  3001               	movlw	1
  1836  03F2  02FA               	subwf	wait@j,f
  1837  03F3  3000               	movlw	0
  1838  03F4  3BFB               	subwfb	wait@j+1,f
  1839  03F5                     l1922:
  1840  03F5  087A               	movf	wait@j,w
  1841  03F6  047B               	iorwf	wait@j+1,w
  1842  03F7  1D03               	btfss	3,2
  1843  03F8  2BFA               	goto	u1461
  1844  03F9  2BFB               	goto	u1460
  1845  03FA                     u1461:
  1846  03FA  2BF1               	goto	l1920
  1847  03FB                     u1460:
  1848  03FB                     l1924:
  1849                           
  1850                           ;Q3.c: 181:     }
  1851  03FB  3001               	movlw	1
  1852  03FC  02F8               	subwf	wait@i,f
  1853  03FD  3000               	movlw	0
  1854  03FE  3BF9               	subwfb	wait@i+1,f
  1855  03FF  2BE6               	goto	l1910
  1856  0400                     l102:
  1857  0400  0008               	return
  1858  0401                     __end_of_wait:
  1859                           
  1860                           	psect	text5
  1861  0374                     __ptext5:	
  1862 ;; *************** function ___wmul *****************
  1863 ;; Defined at:
  1864 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  1865 ;; Parameters:    Size  Location     Type
  1866 ;;  multiplier      2    0[COMMON] unsigned int 
  1867 ;;  multiplicand    2    2[COMMON] unsigned int 
  1868 ;; Auto vars:     Size  Location     Type
  1869 ;;  product         2    4[COMMON] unsigned int 
  1870 ;; Return value:  Size  Location     Type
  1871 ;;                  2    0[COMMON] unsigned int 
  1872 ;; Registers used:
  1873 ;;		wreg, status,2, status,0
  1874 ;; Tracked objects:
  1875 ;;		On entry : 0/0
  1876 ;;		On exit  : 0/0
  1877 ;;		Unchanged: 0/0
  1878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1879 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1880 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1882 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1883 ;;Total ram usage:        6 bytes
  1884 ;; Hardware stack levels used:    1
  1885 ;; This function calls:
  1886 ;;		Nothing
  1887 ;; This function is called by:
  1888 ;;		_wait
  1889 ;;		_hen7
  1890 ;;		_hens
  1891 ;; This function uses a non-reentrant model
  1892 ;;
  1893                           
  1894                           
  1895                           ;psect for function ___wmul
  1896  0374                     ___wmul:
  1897  0374                     l1858:	
  1898                           ;incstack = 0
  1899                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1900                           
  1901  0374  01F4               	clrf	___wmul@product
  1902  0375  01F5               	clrf	___wmul@product+1
  1903  0376                     l1860:
  1904  0376  1C70               	btfss	___wmul@multiplier,0
  1905  0377  2B79               	goto	u1341
  1906  0378  2B7A               	goto	u1340
  1907  0379                     u1341:
  1908  0379  2B7E               	goto	l460
  1909  037A                     u1340:
  1910  037A                     l1862:
  1911  037A  0872               	movf	___wmul@multiplicand,w
  1912  037B  07F4               	addwf	___wmul@product,f
  1913  037C  0873               	movf	___wmul@multiplicand+1,w
  1914  037D  3DF5               	addwfc	___wmul@product+1,f
  1915  037E                     l460:
  1916  037E  3001               	movlw	1
  1917  037F                     u1355:
  1918  037F  35F2               	lslf	___wmul@multiplicand,f
  1919  0380  0DF3               	rlf	___wmul@multiplicand+1,f
  1920  0381  0B89               	decfsz	9,f
  1921  0382  2B7F               	goto	u1355
  1922  0383                     l1864:
  1923  0383  3001               	movlw	1
  1924  0384                     u1365:
  1925  0384  36F1               	lsrf	___wmul@multiplier+1,f
  1926  0385  0CF0               	rrf	___wmul@multiplier,f
  1927  0386  0B89               	decfsz	9,f
  1928  0387  2B84               	goto	u1365
  1929  0388                     l1866:
  1930  0388  0870               	movf	___wmul@multiplier,w
  1931  0389  0471               	iorwf	___wmul@multiplier+1,w
  1932  038A  1D03               	btfss	3,2
  1933  038B  2B8D               	goto	u1371
  1934  038C  2B8E               	goto	u1370
  1935  038D                     u1371:
  1936  038D  2B76               	goto	l1860
  1937  038E                     u1370:
  1938  038E                     l1868:
  1939  038E  0875               	movf	___wmul@product+1,w
  1940  038F  00F1               	movwf	?___wmul+1
  1941  0390  0874               	movf	___wmul@product,w
  1942  0391  00F0               	movwf	?___wmul
  1943  0392                     l462:
  1944  0392  0008               	return
  1945  0393                     __end_of___wmul:
  1946                           
  1947                           	psect	text6
  1948  0361                     __ptext6:	
  1949 ;; *************** function _portinit *****************
  1950 ;; Defined at:
  1951 ;;		line 160 in file "Q3.c"
  1952 ;; Parameters:    Size  Location     Type
  1953 ;;		None
  1954 ;; Auto vars:     Size  Location     Type
  1955 ;;		None
  1956 ;; Return value:  Size  Location     Type
  1957 ;;                  1    wreg      void 
  1958 ;; Registers used:
  1959 ;;		wreg, status,2
  1960 ;; Tracked objects:
  1961 ;;		On entry : 0/0
  1962 ;;		On exit  : 0/0
  1963 ;;		Unchanged: 0/0
  1964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1969 ;;Total ram usage:        0 bytes
  1970 ;; Hardware stack levels used:    1
  1971 ;; This function calls:
  1972 ;;		Nothing
  1973 ;; This function is called by:
  1974 ;;		_main
  1975 ;; This function uses a non-reentrant model
  1976 ;;
  1977                           
  1978                           
  1979                           ;psect for function _portinit
  1980  0361                     _portinit:
  1981  0361                     l1898:	
  1982                           ;incstack = 0
  1983                           ; Regs used in _portinit: [wreg+status,2]
  1984                           
  1985                           
  1986                           ;Q3.c: 163:     ANSELA=0x00;
  1987  0361  0023               	movlb	3	; select bank3
  1988  0362  018C               	clrf	12	;volatile
  1989                           
  1990                           ;Q3.c: 164:     ANSELB=0x00;
  1991  0363  018D               	clrf	13	;volatile
  1992  0364                     l1900:
  1993                           
  1994                           ;Q3.c: 166:     PORTA=0x07;
  1995  0364  3007               	movlw	7
  1996  0365  0020               	movlb	0	; select bank0
  1997  0366  008C               	movwf	12	;volatile
  1998  0367                     l1902:
  1999                           
  2000                           ;Q3.c: 167:     TRISA=0x07;
  2001  0367  3007               	movlw	7
  2002  0368  0021               	movlb	1	; select bank1
  2003  0369  008C               	movwf	12	;volatile
  2004                           
  2005                           ;Q3.c: 168:     PORTB=0x00;
  2006  036A  0020               	movlb	0	; select bank0
  2007  036B  018D               	clrf	13	;volatile
  2008                           
  2009                           ;Q3.c: 169:     TRISB=0x00;
  2010  036C  0021               	movlb	1	; select bank1
  2011  036D  018D               	clrf	13	;volatile
  2012  036E                     l1904:
  2013                           
  2014                           ;Q3.c: 170:     PORTC=0x07;
  2015  036E  3007               	movlw	7
  2016  036F  0020               	movlb	0	; select bank0
  2017  0370  008E               	movwf	14	;volatile
  2018  0371                     l1906:
  2019                           
  2020                           ;Q3.c: 171:     TRISC=0x00;
  2021  0371  0021               	movlb	1	; select bank1
  2022  0372  018E               	clrf	14	;volatile
  2023  0373                     l95:
  2024  0373  0008               	return
  2025  0374                     __end_of_portinit:
  2026                           
  2027                           	psect	text7
  2028  03B3                     __ptext7:	
  2029 ;; *************** function _motor *****************
  2030 ;; Defined at:
  2031 ;;		line 460 in file "Q3.c"
  2032 ;; Parameters:    Size  Location     Type
  2033 ;;  kakudo          2    8[BANK0 ] int 
  2034 ;;  dig1data        2   10[BANK0 ] unsigned short 
  2035 ;;  dig2data        2   12[BANK0 ] unsigned short 
  2036 ;;  smdata          2   14[BANK0 ] unsigned short 
  2037 ;;  tr              2   16[BANK0 ] unsigned int 
  2038 ;; Auto vars:     Size  Location     Type
  2039 ;;  i               2    8[COMMON] int 
  2040 ;; Return value:  Size  Location     Type
  2041 ;;                  1    wreg      void 
  2042 ;; Registers used:
  2043 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2044 ;; Tracked objects:
  2045 ;;		On entry : 0/0
  2046 ;;		On exit  : 0/0
  2047 ;;		Unchanged: 0/0
  2048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2049 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2050 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2052 ;;      Totals:         2      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2053 ;;Total ram usage:       12 bytes
  2054 ;; Hardware stack levels used:    1
  2055 ;; Hardware stack levels required when called:    1
  2056 ;; This function calls:
  2057 ;;		_dynam
  2058 ;; This function is called by:
  2059 ;;		_main
  2060 ;; This function uses a non-reentrant model
  2061 ;;
  2062                           
  2063                           
  2064                           ;psect for function _motor
  2065  03B3                     _motor:
  2066  03B3                     l2008:	
  2067                           ;incstack = 0
  2068                           ; Regs used in _motor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2069                           
  2070                           
  2071                           ;Q3.c: 462:     for(int i = kakudo;i>=0;i--){
  2072  03B3  0020               	movlb	0	; select bank0
  2073  03B4  084B               	movf	motor@kakudo+1,w
  2074  03B5  00F9               	movwf	motor@i+1
  2075  03B6  084A               	movf	motor@kakudo,w
  2076  03B7  00F8               	movwf	motor@i
  2077  03B8                     l2010:
  2078  03B8  1FF9               	btfss	motor@i+1,7
  2079  03B9  2BBB               	goto	u1541
  2080  03BA  2BBC               	goto	u1540
  2081  03BB                     u1541:
  2082  03BB  2BBD               	goto	l2014
  2083  03BC                     u1540:
  2084  03BC  2BD6               	goto	l263
  2085  03BD                     l2014:
  2086                           
  2087                           ;Q3.c: 463:         dynam(dig1data,dig2data,smdata,tr);
  2088  03BD  0020               	movlb	0	; select bank0
  2089  03BE  084D               	movf	motor@dig1data+1,w
  2090  03BF  00F1               	movwf	dynam@dig1data+1
  2091  03C0  084C               	movf	motor@dig1data,w
  2092  03C1  00F0               	movwf	dynam@dig1data
  2093  03C2  084F               	movf	motor@dig2data+1,w
  2094  03C3  00F3               	movwf	dynam@dig2data+1
  2095  03C4  084E               	movf	motor@dig2data,w
  2096  03C5  00F2               	movwf	dynam@dig2data
  2097  03C6  0851               	movf	motor@smdata+1,w
  2098  03C7  00F5               	movwf	dynam@smdata+1
  2099  03C8  0850               	movf	motor@smdata,w
  2100  03C9  00F4               	movwf	dynam@smdata
  2101  03CA  0853               	movf	motor@tr+1,w
  2102  03CB  00F7               	movwf	dynam@tr+1
  2103  03CC  0852               	movf	motor@tr,w
  2104  03CD  00F6               	movwf	dynam@tr
  2105  03CE  3186  2667  3183   	fcall	_dynam
  2106  03D1                     l2016:
  2107                           
  2108                           ;Q3.c: 464:     }
  2109  03D1  30FF               	movlw	255
  2110  03D2  07F8               	addwf	motor@i,f
  2111  03D3  30FF               	movlw	255
  2112  03D4  3DF9               	addwfc	motor@i+1,f
  2113  03D5  2BB8               	goto	l2010
  2114  03D6                     l263:
  2115  03D6  0008               	return
  2116  03D7                     __end_of_motor:
  2117                           
  2118                           	psect	text8
  2119  0667                     __ptext8:	
  2120 ;; *************** function _dynam *****************
  2121 ;; Defined at:
  2122 ;;		line 206 in file "Q3.c"
  2123 ;; Parameters:    Size  Location     Type
  2124 ;;  dig1data        2    0[COMMON] unsigned short 
  2125 ;;  dig2data        2    2[COMMON] unsigned short 
  2126 ;;  smdata          2    4[COMMON] unsigned short 
  2127 ;;  tr              2    6[COMMON] unsigned int 
  2128 ;; Auto vars:     Size  Location     Type
  2129 ;;  ext             2    6[BANK0 ] unsigned short 
  2130 ;;  j               2    4[BANK0 ] unsigned int 
  2131 ;;  tm              2    2[BANK0 ] unsigned int 
  2132 ;;  smd             2    0[BANK0 ] unsigned short 
  2133 ;; Return value:  Size  Location     Type
  2134 ;;                  1    wreg      void 
  2135 ;; Registers used:
  2136 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2137 ;; Tracked objects:
  2138 ;;		On entry : 0/0
  2139 ;;		On exit  : 0/0
  2140 ;;		Unchanged: 0/0
  2141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2142 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2143 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2145 ;;      Totals:         8       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2146 ;;Total ram usage:       16 bytes
  2147 ;; Hardware stack levels used:    1
  2148 ;; This function calls:
  2149 ;;		Nothing
  2150 ;; This function is called by:
  2151 ;;		_waitSEG
  2152 ;;		_motor
  2153 ;;		_main
  2154 ;;		_clear
  2155 ;; This function uses a non-reentrant model
  2156 ;;
  2157                           
  2158                           
  2159                           ;psect for function _dynam
  2160  0667                     _dynam:
  2161  0667                     l1684:	
  2162                           ;incstack = 0
  2163                           ; Regs used in _dynam: [wreg-fsr0h+status,2+status,0]
  2164                           
  2165  0667  0020               	movlb	0	; select bank0
  2166  0668  01C4               	clrf	dynam@tm
  2167  0669  01C5               	clrf	dynam@tm+1
  2168                           
  2169                           ;Q3.c: 209:     unsigned short ext=0,smd=0;
  2170  066A  01C8               	clrf	dynam@ext
  2171  066B  01C9               	clrf	dynam@ext+1
  2172  066C  01C2               	clrf	dynam@smd
  2173  066D  01C3               	clrf	dynam@smd+1
  2174  066E                     l1686:
  2175                           
  2176                           ;Q3.c: 210:     RC7=0;
  2177  066E  138E               	bcf	14,7	;volatile
  2178  066F                     l1688:
  2179                           
  2180                           ;Q3.c: 211:     PORTB=dig1data;
  2181  066F  0870               	movf	dynam@dig1data,w
  2182  0670  008D               	movwf	13	;volatile
  2183  0671                     l1690:
  2184                           
  2185                           ;Q3.c: 212:     RC5=0;RC6=1;
  2186  0671  128E               	bcf	14,5	;volatile
  2187  0672                     l1692:
  2188  0672  170E               	bsf	14,6	;volatile
  2189  0673                     l1694:
  2190                           
  2191                           ;Q3.c: 213:     if(tr==5){tm=4000;}
  2192  0673  3005               	movlw	5
  2193  0674  0676               	xorwf	dynam@tr,w
  2194  0675  0477               	iorwf	dynam@tr+1,w
  2195  0676  1D03               	btfss	3,2
  2196  0677  2E79               	goto	u1101
  2197  0678  2E7A               	goto	u1100
  2198  0679                     u1101:
  2199  0679  2E7F               	goto	l1698
  2200  067A                     u1100:
  2201  067A                     l1696:
  2202  067A  30A0               	movlw	160
  2203  067B  00C4               	movwf	dynam@tm
  2204  067C  300F               	movlw	15
  2205  067D  00C5               	movwf	dynam@tm+1
  2206  067E  2E83               	goto	l112
  2207  067F                     l1698:
  2208  067F  30D0               	movlw	208
  2209  0680  00C4               	movwf	dynam@tm
  2210  0681  3007               	movlw	7
  2211  0682  00C5               	movwf	dynam@tm+1
  2212  0683                     l112:
  2213                           
  2214                           ;Q3.c: 215:     for(j=tm;j>0;--j);
  2215  0683  0845               	movf	dynam@tm+1,w
  2216  0684  00C7               	movwf	dynam@j+1
  2217  0685  0844               	movf	dynam@tm,w
  2218  0686  00C6               	movwf	dynam@j
  2219  0687                     l1700:
  2220  0687  0846               	movf	dynam@j,w
  2221  0688  0447               	iorwf	dynam@j+1,w
  2222  0689  1D03               	btfss	3,2
  2223  068A  2E8C               	goto	u1111
  2224  068B  2E8D               	goto	u1110
  2225  068C                     u1111:
  2226  068C  2E8E               	goto	l1704
  2227  068D                     u1110:
  2228  068D  2E93               	goto	l114
  2229  068E                     l1704:
  2230  068E  3001               	movlw	1
  2231  068F  02C6               	subwf	dynam@j,f
  2232  0690  3000               	movlw	0
  2233  0691  3BC7               	subwfb	dynam@j+1,f
  2234  0692  2E87               	goto	l1700
  2235  0693                     l114:
  2236                           
  2237                           ;Q3.c: 216:     RC5=0;RC6=0;
  2238  0693  128E               	bcf	14,5	;volatile
  2239  0694  130E               	bcf	14,6	;volatile
  2240  0695                     l1708:
  2241                           
  2242                           ;Q3.c: 217:     PORTB=dig2data;
  2243  0695  0872               	movf	dynam@dig2data,w
  2244  0696  008D               	movwf	13	;volatile
  2245  0697                     l1710:
  2246                           
  2247                           ;Q3.c: 218:     RC6=0;RC5=1;
  2248  0697  130E               	bcf	14,6	;volatile
  2249  0698                     l1712:
  2250  0698  168E               	bsf	14,5	;volatile
  2251  0699                     l1714:
  2252                           
  2253                           ;Q3.c: 219:     if(tr==5){tm=4000;}
  2254  0699  3005               	movlw	5
  2255  069A  0676               	xorwf	dynam@tr,w
  2256  069B  0477               	iorwf	dynam@tr+1,w
  2257  069C  1D03               	btfss	3,2
  2258  069D  2E9F               	goto	u1121
  2259  069E  2EA0               	goto	u1120
  2260  069F                     u1121:
  2261  069F  2EA5               	goto	l1718
  2262  06A0                     u1120:
  2263  06A0                     l1716:
  2264  06A0  30A0               	movlw	160
  2265  06A1  00C4               	movwf	dynam@tm
  2266  06A2  300F               	movlw	15
  2267  06A3  00C5               	movwf	dynam@tm+1
  2268  06A4  2EA9               	goto	l116
  2269  06A5                     l1718:
  2270  06A5  30D0               	movlw	208
  2271  06A6  00C4               	movwf	dynam@tm
  2272  06A7  3007               	movlw	7
  2273  06A8  00C5               	movwf	dynam@tm+1
  2274  06A9                     l116:
  2275                           
  2276                           ;Q3.c: 221:     for(j=tm;j>0;--j);
  2277  06A9  0845               	movf	dynam@tm+1,w
  2278  06AA  00C7               	movwf	dynam@j+1
  2279  06AB  0844               	movf	dynam@tm,w
  2280  06AC  00C6               	movwf	dynam@j
  2281  06AD                     l1720:
  2282  06AD  0846               	movf	dynam@j,w
  2283  06AE  0447               	iorwf	dynam@j+1,w
  2284  06AF  1D03               	btfss	3,2
  2285  06B0  2EB2               	goto	u1131
  2286  06B1  2EB3               	goto	u1130
  2287  06B2                     u1131:
  2288  06B2  2EB4               	goto	l1724
  2289  06B3                     u1130:
  2290  06B3  2EB9               	goto	l118
  2291  06B4                     l1724:
  2292  06B4  3001               	movlw	1
  2293  06B5  02C6               	subwf	dynam@j,f
  2294  06B6  3000               	movlw	0
  2295  06B7  3BC7               	subwfb	dynam@j+1,f
  2296  06B8  2EAD               	goto	l1720
  2297  06B9                     l118:
  2298                           
  2299                           ;Q3.c: 222:     RC5=0;RC6=0;
  2300  06B9  128E               	bcf	14,5	;volatile
  2301  06BA  130E               	bcf	14,6	;volatile
  2302                           
  2303                           ;Q3.c: 223:     switch(smdata){
  2304  06BB  2FC0               	goto	l1834
  2305  06BC                     l1728:
  2306                           
  2307                           ;Q3.c: 225:                 PORTB=0x00;smd=(0x01|0x02|0x04|0x08|0x10|0x20);
  2308  06BC  018D               	clrf	13	;volatile
  2309  06BD                     l1730:
  2310  06BD                     l1732:
  2311                           
  2312                           ;Q3.c: 226:                 RC7=0;RC7=1;RC7=0;
  2313  06BD  138E               	bcf	14,7	;volatile
  2314  06BE                     l1734:
  2315  06BE  178E               	bsf	14,7	;volatile
  2316  06BF                     l1736:
  2317  06BF  138E               	bcf	14,7	;volatile
  2318                           
  2319                           ;Q3.c: 227:                 break;
  2320  06C0  2FD0               	goto	l135
  2321  06C1                     l1738:
  2322                           
  2323                           ;Q3.c: 229:                 if(flg==1)cw=0;flg=0;
  2324  06C1  0336               	decf	_flg,w
  2325  06C2  0437               	iorwf	_flg+1,w
  2326  06C3  1D03               	btfss	3,2
  2327  06C4  2EC6               	goto	u1141
  2328  06C5  2EC7               	goto	u1140
  2329  06C6                     u1141:
  2330  06C6  2EC9               	goto	l123
  2331  06C7                     u1140:
  2332  06C7                     l1740:
  2333  06C7  01B4               	clrf	_cw
  2334  06C8  01B5               	clrf	_cw+1
  2335  06C9                     l123:
  2336  06C9  01B6               	clrf	_flg
  2337  06CA  01B7               	clrf	_flg+1
  2338  06CB                     l1742:
  2339                           
  2340                           ;Q3.c: 230:                 if((cw==0)&&(ext==0)){cw=1;ccw=0;ext=1;PORTB=smd=0x09;}
  2341  06CB  0834               	movf	_cw,w
  2342  06CC  0435               	iorwf	_cw+1,w
  2343  06CD  1D03               	btfss	3,2
  2344  06CE  2ED0               	goto	u1151
  2345  06CF  2ED1               	goto	u1150
  2346  06D0                     u1151:
  2347  06D0  2EE7               	goto	l1754
  2348  06D1                     u1150:
  2349  06D1                     l1744:
  2350  06D1  0848               	movf	dynam@ext,w
  2351  06D2  0449               	iorwf	dynam@ext+1,w
  2352  06D3  1D03               	btfss	3,2
  2353  06D4  2ED6               	goto	u1161
  2354  06D5  2ED7               	goto	u1160
  2355  06D6                     u1161:
  2356  06D6  2EE7               	goto	l1754
  2357  06D7                     u1160:
  2358  06D7                     l1746:
  2359  06D7  3001               	movlw	1
  2360  06D8  00B4               	movwf	_cw
  2361  06D9  3000               	movlw	0
  2362  06DA  00B5               	movwf	_cw+1
  2363  06DB                     l1748:
  2364  06DB  01B2               	clrf	_ccw
  2365  06DC  01B3               	clrf	_ccw+1
  2366  06DD                     l1750:
  2367  06DD  3001               	movlw	1
  2368  06DE  00C8               	movwf	dynam@ext
  2369  06DF  3000               	movlw	0
  2370  06E0  00C9               	movwf	dynam@ext+1
  2371  06E1                     l1752:
  2372  06E1  3009               	movlw	9
  2373  06E2  00C2               	movwf	dynam@smd
  2374  06E3  3000               	movlw	0
  2375  06E4  00C3               	movwf	dynam@smd+1
  2376  06E5  0842               	movf	dynam@smd,w
  2377  06E6  008D               	movwf	13	;volatile
  2378  06E7                     l1754:
  2379                           
  2380                           ;Q3.c: 231:                 if((cw==1)&&(ext==0)){cw=2;ccw=3;ext=1;PORTB=smd=0x0C;}
  2381  06E7  0334               	decf	_cw,w
  2382  06E8  0435               	iorwf	_cw+1,w
  2383  06E9  1D03               	btfss	3,2
  2384  06EA  2EEC               	goto	u1171
  2385  06EB  2EED               	goto	u1170
  2386  06EC                     u1171:
  2387  06EC  2F05               	goto	l1760
  2388  06ED                     u1170:
  2389  06ED                     l1756:
  2390  06ED  0848               	movf	dynam@ext,w
  2391  06EE  0449               	iorwf	dynam@ext+1,w
  2392  06EF  1D03               	btfss	3,2
  2393  06F0  2EF2               	goto	u1181
  2394  06F1  2EF3               	goto	u1180
  2395  06F2                     u1181:
  2396  06F2  2F05               	goto	l1760
  2397  06F3                     u1180:
  2398  06F3                     l1758:
  2399  06F3  3002               	movlw	2
  2400  06F4  00B4               	movwf	_cw
  2401  06F5  3000               	movlw	0
  2402  06F6  00B5               	movwf	_cw+1
  2403  06F7  3003               	movlw	3
  2404  06F8  00B2               	movwf	_ccw
  2405  06F9  3000               	movlw	0
  2406  06FA  00B3               	movwf	_ccw+1
  2407  06FB  3001               	movlw	1
  2408  06FC  00C8               	movwf	dynam@ext
  2409  06FD  3000               	movlw	0
  2410  06FE  00C9               	movwf	dynam@ext+1
  2411  06FF  300C               	movlw	12
  2412  0700  00C2               	movwf	dynam@smd
  2413  0701  3000               	movlw	0
  2414  0702  00C3               	movwf	dynam@smd+1
  2415  0703  0842               	movf	dynam@smd,w
  2416  0704  008D               	movwf	13	;volatile
  2417  0705                     l1760:
  2418                           
  2419                           ;Q3.c: 232:                 if((cw==2)&&(ext==0)){cw=3;ccw=2;ext=1;PORTB=smd=0x06;}
  2420  0705  3002               	movlw	2
  2421  0706  0634               	xorwf	_cw,w
  2422  0707  0435               	iorwf	_cw+1,w
  2423  0708  1D03               	btfss	3,2
  2424  0709  2F0B               	goto	u1191
  2425  070A  2F0C               	goto	u1190
  2426  070B                     u1191:
  2427  070B  2F24               	goto	l1766
  2428  070C                     u1190:
  2429  070C                     l1762:
  2430  070C  0848               	movf	dynam@ext,w
  2431  070D  0449               	iorwf	dynam@ext+1,w
  2432  070E  1D03               	btfss	3,2
  2433  070F  2F11               	goto	u1201
  2434  0710  2F12               	goto	u1200
  2435  0711                     u1201:
  2436  0711  2F24               	goto	l1766
  2437  0712                     u1200:
  2438  0712                     l1764:
  2439  0712  3003               	movlw	3
  2440  0713  00B4               	movwf	_cw
  2441  0714  3000               	movlw	0
  2442  0715  00B5               	movwf	_cw+1
  2443  0716  3002               	movlw	2
  2444  0717  00B2               	movwf	_ccw
  2445  0718  3000               	movlw	0
  2446  0719  00B3               	movwf	_ccw+1
  2447  071A  3001               	movlw	1
  2448  071B  00C8               	movwf	dynam@ext
  2449  071C  3000               	movlw	0
  2450  071D  00C9               	movwf	dynam@ext+1
  2451  071E  3006               	movlw	6
  2452  071F  00C2               	movwf	dynam@smd
  2453  0720  3000               	movlw	0
  2454  0721  00C3               	movwf	dynam@smd+1
  2455  0722  0842               	movf	dynam@smd,w
  2456  0723  008D               	movwf	13	;volatile
  2457  0724                     l1766:
  2458                           
  2459                           ;Q3.c: 233:                 if((cw==3)&&(ext==0)){cw=0;ccw=1;ext=1;PORTB=smd=0x03;}
  2460  0724  3003               	movlw	3
  2461  0725  0634               	xorwf	_cw,w
  2462  0726  0435               	iorwf	_cw+1,w
  2463  0727  1D03               	btfss	3,2
  2464  0728  2F2A               	goto	u1211
  2465  0729  2F2B               	goto	u1210
  2466  072A                     u1211:
  2467  072A  2EBD               	goto	l1732
  2468  072B                     u1210:
  2469  072B                     l1768:
  2470  072B  0848               	movf	dynam@ext,w
  2471  072C  0449               	iorwf	dynam@ext+1,w
  2472  072D  1D03               	btfss	3,2
  2473  072E  2F30               	goto	u1221
  2474  072F  2F31               	goto	u1220
  2475  0730                     u1221:
  2476  0730  2EBD               	goto	l1732
  2477  0731                     u1220:
  2478  0731                     l1770:
  2479  0731  01B4               	clrf	_cw
  2480  0732  01B5               	clrf	_cw+1
  2481  0733                     l1772:
  2482  0733  3001               	movlw	1
  2483  0734  00B2               	movwf	_ccw
  2484  0735  3000               	movlw	0
  2485  0736  00B3               	movwf	_ccw+1
  2486  0737                     l1774:
  2487  0737                     l1776:
  2488  0737  3003               	movlw	3
  2489  0738  00C2               	movwf	dynam@smd
  2490  0739  3000               	movlw	0
  2491  073A  00C3               	movwf	dynam@smd+1
  2492  073B  0842               	movf	dynam@smd,w
  2493  073C  008D               	movwf	13	;volatile
  2494  073D  2EBD               	goto	l1732
  2495  073E                     l1784:
  2496                           
  2497                           ;Q3.c: 237:                 if(flg==1)ccw=0;flg=0;
  2498  073E  0336               	decf	_flg,w
  2499  073F  0437               	iorwf	_flg+1,w
  2500  0740  1D03               	btfss	3,2
  2501  0741  2F43               	goto	u1231
  2502  0742  2F44               	goto	u1230
  2503  0743                     u1231:
  2504  0743  2F46               	goto	l129
  2505  0744                     u1230:
  2506  0744                     l1786:
  2507  0744  01B2               	clrf	_ccw
  2508  0745  01B3               	clrf	_ccw+1
  2509  0746                     l129:
  2510  0746  01B6               	clrf	_flg
  2511  0747  01B7               	clrf	_flg+1
  2512  0748                     l1788:
  2513                           
  2514                           ;Q3.c: 238:                 if((ccw==0)&&(ext==0)){ccw=1;cw=0;ext=1;PORTB=smd=0x03;}
  2515  0748  0832               	movf	_ccw,w
  2516  0749  0433               	iorwf	_ccw+1,w
  2517  074A  1D03               	btfss	3,2
  2518  074B  2F4D               	goto	u1241
  2519  074C  2F4E               	goto	u1240
  2520  074D                     u1241:
  2521  074D  2F64               	goto	l1800
  2522  074E                     u1240:
  2523  074E                     l1790:
  2524  074E  0848               	movf	dynam@ext,w
  2525  074F  0449               	iorwf	dynam@ext+1,w
  2526  0750  1D03               	btfss	3,2
  2527  0751  2F53               	goto	u1251
  2528  0752  2F54               	goto	u1250
  2529  0753                     u1251:
  2530  0753  2F64               	goto	l1800
  2531  0754                     u1250:
  2532  0754                     l1792:
  2533  0754  3001               	movlw	1
  2534  0755  00B2               	movwf	_ccw
  2535  0756  3000               	movlw	0
  2536  0757  00B3               	movwf	_ccw+1
  2537  0758                     l1794:
  2538  0758  01B4               	clrf	_cw
  2539  0759  01B5               	clrf	_cw+1
  2540  075A                     l1796:
  2541  075A  3001               	movlw	1
  2542  075B  00C8               	movwf	dynam@ext
  2543  075C  3000               	movlw	0
  2544  075D  00C9               	movwf	dynam@ext+1
  2545  075E                     l1798:
  2546  075E  3003               	movlw	3
  2547  075F  00C2               	movwf	dynam@smd
  2548  0760  3000               	movlw	0
  2549  0761  00C3               	movwf	dynam@smd+1
  2550  0762  0842               	movf	dynam@smd,w
  2551  0763  008D               	movwf	13	;volatile
  2552  0764                     l1800:
  2553                           
  2554                           ;Q3.c: 239:                 if((ccw==1)&&(ext==0)){ccw=2;cw=3;ext=1;PORTB=smd=0x06;}
  2555  0764  0332               	decf	_ccw,w
  2556  0765  0433               	iorwf	_ccw+1,w
  2557  0766  1D03               	btfss	3,2
  2558  0767  2F69               	goto	u1261
  2559  0768  2F6A               	goto	u1260
  2560  0769                     u1261:
  2561  0769  2F82               	goto	l1806
  2562  076A                     u1260:
  2563  076A                     l1802:
  2564  076A  0848               	movf	dynam@ext,w
  2565  076B  0449               	iorwf	dynam@ext+1,w
  2566  076C  1D03               	btfss	3,2
  2567  076D  2F6F               	goto	u1271
  2568  076E  2F70               	goto	u1270
  2569  076F                     u1271:
  2570  076F  2F82               	goto	l1806
  2571  0770                     u1270:
  2572  0770                     l1804:
  2573  0770  3002               	movlw	2
  2574  0771  00B2               	movwf	_ccw
  2575  0772  3000               	movlw	0
  2576  0773  00B3               	movwf	_ccw+1
  2577  0774  3003               	movlw	3
  2578  0775  00B4               	movwf	_cw
  2579  0776  3000               	movlw	0
  2580  0777  00B5               	movwf	_cw+1
  2581  0778  3001               	movlw	1
  2582  0779  00C8               	movwf	dynam@ext
  2583  077A  3000               	movlw	0
  2584  077B  00C9               	movwf	dynam@ext+1
  2585  077C  3006               	movlw	6
  2586  077D  00C2               	movwf	dynam@smd
  2587  077E  3000               	movlw	0
  2588  077F  00C3               	movwf	dynam@smd+1
  2589  0780  0842               	movf	dynam@smd,w
  2590  0781  008D               	movwf	13	;volatile
  2591  0782                     l1806:
  2592                           
  2593                           ;Q3.c: 240:                 if((ccw==2)&&(ext==0)){ccw=3;cw=2;ext=1;PORTB=smd=0x0C;}
  2594  0782  3002               	movlw	2
  2595  0783  0632               	xorwf	_ccw,w
  2596  0784  0433               	iorwf	_ccw+1,w
  2597  0785  1D03               	btfss	3,2
  2598  0786  2F88               	goto	u1281
  2599  0787  2F89               	goto	u1280
  2600  0788                     u1281:
  2601  0788  2FA1               	goto	l1812
  2602  0789                     u1280:
  2603  0789                     l1808:
  2604  0789  0848               	movf	dynam@ext,w
  2605  078A  0449               	iorwf	dynam@ext+1,w
  2606  078B  1D03               	btfss	3,2
  2607  078C  2F8E               	goto	u1291
  2608  078D  2F8F               	goto	u1290
  2609  078E                     u1291:
  2610  078E  2FA1               	goto	l1812
  2611  078F                     u1290:
  2612  078F                     l1810:
  2613  078F  3003               	movlw	3
  2614  0790  00B2               	movwf	_ccw
  2615  0791  3000               	movlw	0
  2616  0792  00B3               	movwf	_ccw+1
  2617  0793  3002               	movlw	2
  2618  0794  00B4               	movwf	_cw
  2619  0795  3000               	movlw	0
  2620  0796  00B5               	movwf	_cw+1
  2621  0797  3001               	movlw	1
  2622  0798  00C8               	movwf	dynam@ext
  2623  0799  3000               	movlw	0
  2624  079A  00C9               	movwf	dynam@ext+1
  2625  079B  300C               	movlw	12
  2626  079C  00C2               	movwf	dynam@smd
  2627  079D  3000               	movlw	0
  2628  079E  00C3               	movwf	dynam@smd+1
  2629  079F  0842               	movf	dynam@smd,w
  2630  07A0  008D               	movwf	13	;volatile
  2631  07A1                     l1812:
  2632                           
  2633                           ;Q3.c: 241:                 if((ccw==3)&&(ext==0)){ccw=0;cw=1;ext=1;PORTB=smd=0x09;}
  2634  07A1  3003               	movlw	3
  2635  07A2  0632               	xorwf	_ccw,w
  2636  07A3  0433               	iorwf	_ccw+1,w
  2637  07A4  1D03               	btfss	3,2
  2638  07A5  2FA7               	goto	u1301
  2639  07A6  2FA8               	goto	u1300
  2640  07A7                     u1301:
  2641  07A7  2EBD               	goto	l1732
  2642  07A8                     u1300:
  2643  07A8                     l1814:
  2644  07A8  0848               	movf	dynam@ext,w
  2645  07A9  0449               	iorwf	dynam@ext+1,w
  2646  07AA  1D03               	btfss	3,2
  2647  07AB  2FAD               	goto	u1311
  2648  07AC  2FAE               	goto	u1310
  2649  07AD                     u1311:
  2650  07AD  2EBD               	goto	l1732
  2651  07AE                     u1310:
  2652  07AE                     l1816:
  2653  07AE  01B2               	clrf	_ccw
  2654  07AF  01B3               	clrf	_ccw+1
  2655  07B0                     l1818:
  2656  07B0  3001               	movlw	1
  2657  07B1  00B4               	movwf	_cw
  2658  07B2  3000               	movlw	0
  2659  07B3  00B5               	movwf	_cw+1
  2660  07B4                     l1820:
  2661  07B4                     l1822:
  2662  07B4  3009               	movlw	9
  2663  07B5  00C2               	movwf	dynam@smd
  2664  07B6  3000               	movlw	0
  2665  07B7  00C3               	movwf	dynam@smd+1
  2666  07B8  0842               	movf	dynam@smd,w
  2667  07B9  008D               	movwf	13	;volatile
  2668  07BA  2EBD               	goto	l1732
  2669  07BB                     l1830:
  2670                           
  2671                           ;Q3.c: 245:                 cw=ccw=0;
  2672  07BB  01B2               	clrf	_ccw
  2673  07BC  01B3               	clrf	_ccw+1
  2674  07BD  01B4               	clrf	_cw
  2675  07BE  01B5               	clrf	_cw+1
  2676                           
  2677                           ;Q3.c: 246:                 break;
  2678  07BF  2FD0               	goto	l135
  2679  07C0                     l1834:
  2680                           
  2681                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2682                           ; Switch size 1, requested type "simple"
  2683                           ; Number of cases is 1, Range of values is 0 to 0
  2684                           ; switch strategies available:
  2685                           ; Name         Instructions Cycles
  2686                           ; simple_byte            4     3 (average)
  2687                           ; direct_byte            8     6 (fixed)
  2688                           ; jumptable            260     6 (fixed)
  2689                           ;	Chosen strategy is simple_byte
  2690  07C0  0875               	movf	dynam@smdata+1,w
  2691  07C1  3A00               	xorlw	0	; case 0
  2692  07C2  1903               	skipnz
  2693  07C3  2FC5               	goto	l2482
  2694  07C4  2FBB               	goto	l1830
  2695  07C5                     l2482:
  2696                           
  2697                           ; Switch size 1, requested type "simple"
  2698                           ; Number of cases is 3, Range of values is 0 to 2
  2699                           ; switch strategies available:
  2700                           ; Name         Instructions Cycles
  2701                           ; simple_byte           10     6 (average)
  2702                           ; direct_byte           12     6 (fixed)
  2703                           ; jumptable            260     6 (fixed)
  2704                           ;	Chosen strategy is simple_byte
  2705  07C5  0874               	movf	dynam@smdata,w
  2706  07C6  3A00               	xorlw	0	; case 0
  2707  07C7  1903               	skipnz
  2708  07C8  2EBC               	goto	l1728
  2709  07C9  3A01               	xorlw	1	; case 1
  2710  07CA  1903               	skipnz
  2711  07CB  2EC1               	goto	l1738
  2712  07CC  3A03               	xorlw	3	; case 2
  2713  07CD  1903               	skipnz
  2714  07CE  2F3E               	goto	l1784
  2715  07CF  2FBB               	goto	l1830
  2716  07D0                     l135:
  2717  07D0  0008               	return
  2718  07D1                     __end_of_dynam:
  2719                           
  2720                           	psect	text9
  2721  0354                     __ptext9:	
  2722 ;; *************** function _jikan *****************
  2723 ;; Defined at:
  2724 ;;		line 406 in file "Q3.c"
  2725 ;; Parameters:    Size  Location     Type
  2726 ;;		None
  2727 ;; Auto vars:     Size  Location     Type
  2728 ;;		None
  2729 ;; Return value:  Size  Location     Type
  2730 ;;                  1    wreg      void 
  2731 ;; Registers used:
  2732 ;;		wreg, status,2
  2733 ;; Tracked objects:
  2734 ;;		On entry : 0/0
  2735 ;;		On exit  : 0/0
  2736 ;;		Unchanged: 0/0
  2737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2742 ;;Total ram usage:        0 bytes
  2743 ;; Hardware stack levels used:    1
  2744 ;; This function calls:
  2745 ;;		Nothing
  2746 ;; This function is called by:
  2747 ;;		_main
  2748 ;;		_bottomTime
  2749 ;; This function uses a non-reentrant model
  2750 ;;
  2751                           
  2752                           
  2753                           ;psect for function _jikan
  2754  0354                     _jikan:
  2755  0354                     l1988:	
  2756                           ;incstack = 0
  2757                           ; Regs used in _jikan: [wreg+status,2]
  2758                           
  2759                           
  2760                           ;Q3.c: 408:     if(RA2==0){++count;}
  2761  0354  0020               	movlb	0	; select bank0
  2762  0355  190C               	btfsc	12,2	;volatile
  2763  0356  2B58               	goto	u1521
  2764  0357  2B59               	goto	u1520
  2765  0358                     u1521:
  2766  0358  2B5E               	goto	l1992
  2767  0359                     u1520:
  2768  0359                     l1990:
  2769  0359  3001               	movlw	1
  2770  035A  07AA               	addwf	_count,f
  2771  035B  3000               	movlw	0
  2772  035C  3DAB               	addwfc	_count+1,f
  2773  035D  2B60               	goto	l232
  2774  035E                     l1992:
  2775  035E  01AA               	clrf	_count
  2776  035F  01AB               	clrf	_count+1
  2777  0360                     l232:
  2778  0360  0008               	return
  2779  0361                     __end_of_jikan:
  2780                           
  2781                           	psect	text10
  2782  0393                     __ptext10:	
  2783 ;; *************** function _fclr *****************
  2784 ;; Defined at:
  2785 ;;		line 369 in file "Q3.c"
  2786 ;; Parameters:    Size  Location     Type
  2787 ;;  flg             2    0[COMMON] unsigned short 
  2788 ;; Auto vars:     Size  Location     Type
  2789 ;;		None
  2790 ;; Return value:  Size  Location     Type
  2791 ;;                  1    wreg      void 
  2792 ;; Registers used:
  2793 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2794 ;; Tracked objects:
  2795 ;;		On entry : 0/0
  2796 ;;		On exit  : 0/0
  2797 ;;		Unchanged: 0/0
  2798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2799 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2802 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2803 ;;Total ram usage:        2 bytes
  2804 ;; Hardware stack levels used:    1
  2805 ;; This function calls:
  2806 ;;		Nothing
  2807 ;; This function is called by:
  2808 ;;		_main
  2809 ;;		_kaisu
  2810 ;; This function uses a non-reentrant model
  2811 ;;
  2812                           
  2813                           
  2814                           ;psect for function _fclr
  2815  0393                     _fclr:
  2816  0393                     l1972:	
  2817                           ;incstack = 0
  2818                           ; Regs used in _fclr: [wreg-fsr0h+status,2+status,0]
  2819                           
  2820                           
  2821                           ;Q3.c: 369: void fclr(unsigned short flg);Q3.c: 370: {;Q3.c: 371:     switch(flg){
  2822  0393  2BA2               	goto	l1982
  2823  0394                     l1974:
  2824                           
  2825                           ;Q3.c: 373:                     flag_R=0;
  2826  0394  0020               	movlb	0	; select bank0
  2827  0395  01BA               	clrf	_flag_R
  2828  0396  01BB               	clrf	_flag_R+1
  2829                           
  2830                           ;Q3.c: 374:                     break;
  2831  0397  2BB2               	goto	l217
  2832  0398                     l1976:
  2833                           
  2834                           ;Q3.c: 376:                     flag_P=0;
  2835  0398  0020               	movlb	0	; select bank0
  2836  0399  01B8               	clrf	_flag_P
  2837  039A  01B9               	clrf	_flag_P+1
  2838                           
  2839                           ;Q3.c: 377:                     break;
  2840  039B  2BB2               	goto	l217
  2841  039C                     l1978:
  2842                           
  2843                           ;Q3.c: 379:                     flag_P=flag_R=0;
  2844  039C  0020               	movlb	0	; select bank0
  2845  039D  01BA               	clrf	_flag_R
  2846  039E  01BB               	clrf	_flag_R+1
  2847  039F  01B8               	clrf	_flag_P
  2848  03A0  01B9               	clrf	_flag_P+1
  2849                           
  2850                           ;Q3.c: 380:                     break;
  2851  03A1  2BB2               	goto	l217
  2852  03A2                     l1982:
  2853                           
  2854                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2855                           ; Switch size 1, requested type "simple"
  2856                           ; Number of cases is 1, Range of values is 0 to 0
  2857                           ; switch strategies available:
  2858                           ; Name         Instructions Cycles
  2859                           ; simple_byte            4     3 (average)
  2860                           ; direct_byte            8     6 (fixed)
  2861                           ; jumptable            260     6 (fixed)
  2862                           ;	Chosen strategy is simple_byte
  2863  03A2  0871               	movf	fclr@flg+1,w
  2864  03A3  3A00               	xorlw	0	; case 0
  2865  03A4  1903               	skipnz
  2866  03A5  2BA7               	goto	l2484
  2867  03A6  2BB2               	goto	l217
  2868  03A7                     l2484:
  2869                           
  2870                           ; Switch size 1, requested type "simple"
  2871                           ; Number of cases is 3, Range of values is 0 to 2
  2872                           ; switch strategies available:
  2873                           ; Name         Instructions Cycles
  2874                           ; simple_byte           10     6 (average)
  2875                           ; direct_byte           12     6 (fixed)
  2876                           ; jumptable            260     6 (fixed)
  2877                           ;	Chosen strategy is simple_byte
  2878  03A7  0870               	movf	fclr@flg,w
  2879  03A8  3A00               	xorlw	0	; case 0
  2880  03A9  1903               	skipnz
  2881  03AA  2B94               	goto	l1974
  2882  03AB  3A01               	xorlw	1	; case 1
  2883  03AC  1903               	skipnz
  2884  03AD  2B98               	goto	l1976
  2885  03AE  3A03               	xorlw	3	; case 2
  2886  03AF  1903               	skipnz
  2887  03B0  2B9C               	goto	l1978
  2888  03B1  2BB2               	goto	l217
  2889  03B2                     l217:
  2890  03B2  0008               	return
  2891  03B3                     __end_of_fclr:
  2892  007E                     btemp	set	126	;btemp
  2893  007E                     wtemp0	set	126
  2894                           
  2895                           	psect	config
  2896                           
  2897                           ;Config register CONFIG1 @ 0x8007
  2898                           ;	Oscillator Selection
  2899                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  2900                           ;	Watchdog Timer Enable
  2901                           ;	WDTE = OFF, WDT disabled
  2902                           ;	Power-up Timer Enable
  2903                           ;	PWRTE = OFF, PWRT disabled
  2904                           ;	MCLR Pin Function Select
  2905                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  2906                           ;	Flash Program Memory Code Protection
  2907                           ;	CP = OFF, Program memory code protection is disabled
  2908                           ;	Data Memory Code Protection
  2909                           ;	CPD = OFF, Data memory code protection is disabled
  2910                           ;	Brown-out Reset Enable
  2911                           ;	BOREN = OFF, Brown-out Reset disabled
  2912                           ;	Clock Out Enable
  2913                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  2914                           ;	Internal/External Switchover
  2915                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2916                           ;	Fail-Safe Clock Monitor Enable
  2917                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2918  8007                     	org	32775
  2919  8007  09E4               	dw	2532
  2920                           
  2921                           ;Config register CONFIG2 @ 0x8008
  2922                           ;	Flash Memory Self-Write Protection
  2923                           ;	WRT = OFF, Write protection off
  2924                           ;	Voltage Regulator Capacitor Enable
  2925                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
  2926                           ;	PLL Enable
  2927                           ;	PLLEN = OFF, 4x PLL disabled
  2928                           ;	Stack Overflow/Underflow Reset Enable
  2929                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  2930                           ;	Brown-out Reset Voltage Selection
  2931                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  2932                           ;	Low-Voltage Programming Enable
  2933                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  2934  8008                     	org	32776
  2935  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    0
    Data        156
    BSS         34
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     30      72
    BANK1            80      0      72
    BANK2            80      0      76
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_wait
    _waitSEG->___lwdiv
    _waitSEG->_dynam
    _wait->___wmul
    _motor->_dynam

Critical Paths under _main in BANK0

    _main->_motor
    _waitSEG->_dynam
    _motor->_dynam

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0    8611
                                             12 COMMON     1     1      0
                                             18 BANK0     12    12      0
                              _dynam
                               _fclr
                              _jikan
                              _motor
                           _portinit
                               _wait
                            _waitSEG
                             _zenoff
 ---------------------------------------------------------------------------------
 (1) _zenoff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _waitSEG                                              8     2      6    2796
                                              8 COMMON     2     2      0
                                              8 BANK0      6     0      6
                            ___lwdiv
                              _dynam
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _wait                                                 6     4      2     890
                                              6 COMMON     6     4      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _portinit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motor                                               12     2     10    2579
                                              8 COMMON     2     2      0
                                              8 BANK0     10     0     10
                              _dynam
 ---------------------------------------------------------------------------------
 (2) _dynam                                               16     8      8    1663
                                              0 COMMON     8     0      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (1) _jikan                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _fclr                                                 2     0      2     250
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _dynam
   _fclr
   _jikan
   _motor
     _dynam
   _portinit
   _wait
     ___wmul
   _waitSEG
     ___lwdiv
     _dynam
   _zenoff

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1E      48       5       90.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      48       7       90.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      4C       9       95.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      E9      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      E9      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 26 15:02:53 2021

                     l95 0373                       _cw 0034      ___wmul@multiplicand 0072  
                    l102 0400                      l112 0683                      l114 0693  
                    l123 06C9                      l116 06A9                      l108 0353  
                    l118 06B9                      l135 07D0                      l232 0360  
                    l217 03B2                      l129 0746                      l263 03D6  
                    l258 0434                      l460 037E                      l276 050E  
                    l462 0392                      l278 051B                      l740 0470  
                    _RA0 0060                      _RA1 0061                      _RA2 0062  
                    _RC0 0070                      _RC1 0071                      _RC2 0072  
                    _RC5 0075                      _RC6 0076                      _RC7 0077  
                    _ccw 0032                      _flg 0036                      wreg 0009  
                   l2010 03B8                     l2002 041D                     l2004 042F  
                   l2014 03BD                     l2016 03D1                     l2008 03B3  
                   l2300 0542                     l2310 0581                     l2302 0555  
                   l2320 05BE                     l2312 0588                     l2304 056A  
                   l2322 05D6                     l2314 058B                     l2330 05E7  
                   l2306 056D                     l1700 0687                     l2340 061C  
                   l2332 05EE                     l2324 05DD                     l2316 05AB  
                   l2308 0574                     l1710 0697                     l2342 062A  
                   l2334 05F4                     l2326 05E2                     l2318 05B0  
                   l2270 050E                     l1800 0764                     l1720 06AD  
                   l1712 0698                     l1704 068E                     l2344 0642  
                   l2336 05F7                     l2352 0653                     l2280 0513  
                   l2272 050E                     l1810 078F                     l1802 076A  
                   l1730 06BD                     l1714 0699                     l2346 0649  
                   l2338 0617                     l2354 0657                     l2290 0538  
                   l2282 0517                     l2274 050E                     l2266 0505  
                   l1820 07B4                     l1812 07A1                     l1804 0770  
                   l1740 06C7                     l1732 06BD                     l1724 06B4  
                   l1716 06A0                     l1708 0695                     l1900 0364  
                   l2356 065C                     l2348 064E                     l2292 053A  
                   l2284 052C                     l2276 050E                     l2268 0508  
                   l1830 07BB                     l1822 07B4                     l1814 07A8  
                   l1806 0782                     l1750 06DD                     l1742 06CB  
                   l1734 06BE                     l1718 06A5                     l1902 0367  
                   l1910 03E6                     l2358 0660                     l2294 053E  
                   l2286 0533                     l2278 050E                     l1816 07AE  
                   l1808 0789                     l1760 0705                     l1752 06E1  
                   l1744 06D1                     l1736 06BF                     l1728 06BC  
                   l1904 036E                     l1920 03F1                     l2482 07C5  
                   l1818 07B0                     l1770 0731                     l1762 070C  
                   l1746 06D7                     l1754 06E7                     l1738 06C1  
                   l1834 07C0                     l1690 0671                     l1906 0371  
                   l1922 03F5                     l1914 03ED                     l1930 034F  
                   l2484 03A7                     l1772 0733                     l1764 0712  
                   l1756 06ED                     l1748 06DB                     l1692 0672  
                   l1684 0667                     l1860 0376                     l1924 03FB  
                   l1908 03D7                     l1932 0350                     l1790 074E  
                   l1774 0737                     l1766 0724                     l1758 06F3  
                   l1694 0673                     l1686 066E                     l1862 037A  
                   l1934 0351                     l1792 0754                     l1784 073E  
                   l1776 0737                     l1768 072B                     l1696 067A  
                   l1688 066F                     l1864 0383                     l1880 0445  
                   l1872 0435                     l1936 0352                     l1928 034B  
                   l1794 0758                     l1786 0744                     l1698 067F  
                   l1866 0388                     l1858 0374                     l1890 0461  
                   l1882 0449                     l1874 0437                     l1972 0393  
                   l1796 075A                     l1788 0748                     l1868 038E  
                   l1892 0466                     l1884 044D                     l1876 043D  
                   l1974 0394                     l1982 03A2                     l1990 0359  
                   l1798 075E                     l1886 045C                     l1878 0440  
                   l1894 046C                     l1976 0398                     l1992 035E  
                   l1888 0460                     l1978 039C                     l1898 0361  
                   l1994 0401                     l1988 0354                     l1996 0412  
                   l1998 0416                     u1100 067A                     u1101 0679  
                   u1110 068D                     u1111 068C                     u1200 0712  
                   u1120 06A0                     u2000 0538                     u1201 0711  
                   u1121 069F                     u2001 0537                     u1210 072B  
                   u1130 06B3                     u2010 053E                     u1211 072A  
                   u1131 06B2                     u2011 053D                     u1300 07A8  
                   u1220 0731                     u1140 06C7                     u2100 062A  
                   u2020 0574                     u1301 07A7                     u1221 0730  
                   u1141 06C6                     u2101 0629                     u2021 0573  
                   u1310 07AE                     u1230 0744                     u1150 06D1  
                   u2110 064E                     u2030 0581                     u1311 07AD  
                   u1231 0743                     u1151 06D0                     u2111 064D  
                   u2031 0580                     u1240 074E                     u1160 06D7  
                   u1400 044D                     u2120 0652                     u2040 0588  
                   u1241 074D                     u1161 06D6                     u1401 044C  
                   u2121 0651                     u2105 0626                     u2041 0587  
                   u1250 0754                     u1170 06ED                     u2130 065C  
                   u2050 05BE                     u1251 0753                     u1171 06EC  
                   u2131 065B                     u2051 05BD                     u2035 057D  
                   u1260 076A                     u1180 06F3                     u1340 037A  
                   u1420 045C                     u2140 0664                     u2060 05E2  
                   u1261 0769                     u1181 06F2                     u1341 0379  
                   u1421 045B                     u2141 0663                     u2061 05E1  
                   u1270 0770                     u1190 070C                     u2070 05E6  
                   u1271 076F                     u1191 070B                     u1415 044E  
                   u2071 05E5                     u2055 05BA                     u1520 0359  
                   u1280 0789                     u1440 046C                     u2080 05EE  
                   u1521 0358                     u1281 0788                     u1441 046B  
                   u1425 0458                     u2081 05ED                     u1290 078F  
                   u1370 038E                     u1450 03EC                     u1530 041C  
                   u2090 05F4                     u1291 078E                     u1371 038D  
                   u1355 037F                     u1451 03EB                     u1435 0462  
                   u1531 041B                     u2091 05F3                     u1540 03BC  
                   u1460 03FB                     u1380 043D                     u1541 03BB  
                   u1365 0384                     u1461 03FA                     u1381 043C  
                   u1395 0441                     u1940 0513                     u1941 0512  
                   u1950 0517                     u1951 0516                     u1960 051B  
                   u1961 051A                     u1970 0522                     u1971 051F  
                   u1980 052A                     u1981 0527                     u1984 0524  
                   u1994 052C                     _atai 002C                     _fclr 0393  
                   _main 0505                     _num0 00C0                     _kisu 00D4  
                   _moja 0160                     _samf 0120                     _mojf 0154  
                   _mojh 0064                     _moji 0140                     _mojn 0060  
                   _samp 00A0                     _gusu 00DE                     _wait 03D7  
                   fsr0h 0005                     fsr1h 0007                     indf0 0000  
                   fsr0l 0004                     fsr1l 0006                     btemp 007E  
                   start 0002                    ?_fclr 0070                    ?_main 0070  
                  ?_wait 0076          __end_of___lwdiv 0471                    _PORTA 000C  
                  _PORTB 000D                    _PORTC 000E                    _TRISA 008C  
                  _TRISB 008D                    _TRISC 008E                    _code1 0022  
                  _atai1 002E                    _jikan 0354                    _count 002A  
                  _dynam 0667                    _fugou 0020                    _motor 03B3  
                  main@i 005E                    main@j 005C          __end_of_waitSEG 0435  
                  wait@i 0078                    wait@j 007A                    status 0003  
                  wtemp0 007E          __initialization 07D1             __end_of_fclr 03B3  
           __end_of_main 0667             __end_of_wait 0401                   ??_fclr 0072  
                 ??_main 007C                   ??_wait 0078                   ?_jikan 0070  
                 ?_dynam 0070                   ?_motor 004A                   _ANSELA 018C  
                 _ANSELB 018D                   _OSCCON 0099              dynam@smdata 0074  
                 ___wmul 0374                   _code10 0024                   _atai10 0030  
                 _flag_P 0038                   _flag_R 003A                ??___lwdiv 0074  
                 _zenoff 034B                   dynam@j 0046                ??_waitSEG 0078  
                 wait@wt 0076                   motor@i 0078         __end_of_portinit 0374  
__end_of__initialization 07FD           __pcstackCOMMON 0070             __pidataBANK0 0343  
           __pidataBANK1 0471             __pidataBANK2 04B9            __end_of_jikan 0361  
          __end_of_dynam 07D1            __end_of_motor 03D7                  ??_jikan 0070  
                ??_dynam 0078                  ??_motor 0078               __pbssBANK0 0020  
             __pmaintext 0505                  ?___wmul 0070                  ?_zenoff 0070  
            waitSEG@seg1 004A              waitSEG@seg2 004C          __size_of___wmul 001F  
              ?_portinit 0070                  ___lwdiv 0435                  _code100 0026  
                __ptext1 034B                  __ptext2 0401                  __ptext3 0435  
                __ptext4 03D7                  __ptext5 0374                  __ptext6 0361  
                __ptext7 03B3                  __ptext8 0667                  __ptext9 0354  
        __size_of_zenoff 0009                  fclr@flg 0070                  _waitSEG 0401  
            motor@kakudo 004A                  clrloop0 0338     end_of_initialization 07FD  
            motor@smdata 0050                  dynam@tm 0044                  dynam@tr 0076  
                init_ram 033D                  initloop 033E                  motor@tr 0052  
             ??_portinit 0070           __end_of___wmul 0393           __end_of_zenoff 0354  
    start_initialization 07D1                 ??___wmul 0074              __pdataBANK0 0060  
            __pdataBANK1 00A0              __pdataBANK2 0120                 ??_zenoff 0070  
              ___latbits 0003            __pcstackBANK0 0042         ___lwdiv@dividend 0072  
               ?___lwdiv 0070        __size_of_portinit 0013                 ?_waitSEG 004A  
       ___lwdiv@quotient 0075           __size_of_jikan 000D           __size_of_dynam 016A  
         __size_of_motor 0024            dynam@dig1data 0070            dynam@dig2data 0072  
         ___wmul@product 0074                clear_ram0 0337            motor@dig1data 004C  
          motor@dig2data 004E        ___wmul@multiplier 0070         __size_of___lwdiv 003C  
               _code1000 0028          ___lwdiv@divisor 0070          ___lwdiv@counter 0077  
       __size_of_waitSEG 0034                 __ptext10 0393                 _flag_sw1 0040  
               _flag_sw2 003E                 _flag_sw3 003C                waitSEG@wt 004E  
          __size_of_fclr 0020            __size_of_main 0162            __size_of_wait 002A  
               _portinit 0361                 main@time 005A                 dynam@ext 0048  
               dynam@smd 0042                 waitSEG@i 0078  
