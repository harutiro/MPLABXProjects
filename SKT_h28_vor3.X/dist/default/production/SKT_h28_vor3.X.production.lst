

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Mar 03 07:43:01 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F1938
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 2.20
    30                           ; Generated 12/02/2020 GMT
    31                           ; 
    32                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F1938 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000D                     	;# 
    77  000E                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  010C                     	;# 
   112  010D                     	;# 
   113  010E                     	;# 
   114  0110                     	;# 
   115  0111                     	;# 
   116  0112                     	;# 
   117  0113                     	;# 
   118  0114                     	;# 
   119  0115                     	;# 
   120  0116                     	;# 
   121  0117                     	;# 
   122  0118                     	;# 
   123  0119                     	;# 
   124  011A                     	;# 
   125  011B                     	;# 
   126  011D                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0191                     	;# 
   130  0191                     	;# 
   131  0192                     	;# 
   132  0193                     	;# 
   133  0193                     	;# 
   134  0193                     	;# 
   135  0194                     	;# 
   136  0195                     	;# 
   137  0196                     	;# 
   138  0199                     	;# 
   139  019A                     	;# 
   140  019B                     	;# 
   141  019B                     	;# 
   142  019B                     	;# 
   143  019B                     	;# 
   144  019C                     	;# 
   145  019C                     	;# 
   146  019D                     	;# 
   147  019E                     	;# 
   148  019F                     	;# 
   149  020D                     	;# 
   150  0210                     	;# 
   151  0211                     	;# 
   152  0212                     	;# 
   153  0213                     	;# 
   154  0214                     	;# 
   155  0215                     	;# 
   156  0215                     	;# 
   157  0216                     	;# 
   158  0217                     	;# 
   159  0291                     	;# 
   160  0291                     	;# 
   161  0292                     	;# 
   162  0293                     	;# 
   163  0294                     	;# 
   164  0295                     	;# 
   165  0295                     	;# 
   166  0296                     	;# 
   167  0298                     	;# 
   168  0298                     	;# 
   169  0299                     	;# 
   170  029A                     	;# 
   171  029B                     	;# 
   172  029C                     	;# 
   173  029C                     	;# 
   174  029D                     	;# 
   175  029E                     	;# 
   176  029F                     	;# 
   177  0311                     	;# 
   178  0311                     	;# 
   179  0312                     	;# 
   180  0313                     	;# 
   181  0314                     	;# 
   182  0315                     	;# 
   183  0315                     	;# 
   184  0316                     	;# 
   185  0318                     	;# 
   186  0318                     	;# 
   187  0319                     	;# 
   188  031A                     	;# 
   189  031C                     	;# 
   190  031C                     	;# 
   191  031D                     	;# 
   192  031E                     	;# 
   193  0394                     	;# 
   194  0395                     	;# 
   195  0396                     	;# 
   196  0415                     	;# 
   197  0416                     	;# 
   198  0417                     	;# 
   199  041C                     	;# 
   200  041D                     	;# 
   201  041E                     	;# 
   202  0791                     	;# 
   203  0792                     	;# 
   204  0793                     	;# 
   205  0794                     	;# 
   206  0795                     	;# 
   207  0798                     	;# 
   208  0799                     	;# 
   209  07A0                     	;# 
   210  07A1                     	;# 
   211  07A3                     	;# 
   212  07A4                     	;# 
   213  07A6                     	;# 
   214  07A7                     	;# 
   215  07A9                     	;# 
   216  07AA                     	;# 
   217  0FE4                     	;# 
   218  0FE5                     	;# 
   219  0FE6                     	;# 
   220  0FE7                     	;# 
   221  0FE8                     	;# 
   222  0FE9                     	;# 
   223  0FEA                     	;# 
   224  0FEB                     	;# 
   225  0FED                     	;# 
   226  0FEE                     	;# 
   227  0FEF                     	;# 
   228  0000                     	;# 
   229  0001                     	;# 
   230  0002                     	;# 
   231  0003                     	;# 
   232  0004                     	;# 
   233  0005                     	;# 
   234  0006                     	;# 
   235  0007                     	;# 
   236  0008                     	;# 
   237  0009                     	;# 
   238  000A                     	;# 
   239  000B                     	;# 
   240  000C                     	;# 
   241  000D                     	;# 
   242  000E                     	;# 
   243  0010                     	;# 
   244  0011                     	;# 
   245  0012                     	;# 
   246  0013                     	;# 
   247  0015                     	;# 
   248  0016                     	;# 
   249  0016                     	;# 
   250  0017                     	;# 
   251  0018                     	;# 
   252  0019                     	;# 
   253  001A                     	;# 
   254  001B                     	;# 
   255  001C                     	;# 
   256  001E                     	;# 
   257  001F                     	;# 
   258  008C                     	;# 
   259  008D                     	;# 
   260  008E                     	;# 
   261  0090                     	;# 
   262  0091                     	;# 
   263  0092                     	;# 
   264  0093                     	;# 
   265  0095                     	;# 
   266  0096                     	;# 
   267  0097                     	;# 
   268  0098                     	;# 
   269  0099                     	;# 
   270  009A                     	;# 
   271  009B                     	;# 
   272  009B                     	;# 
   273  009C                     	;# 
   274  009D                     	;# 
   275  009E                     	;# 
   276  010C                     	;# 
   277  010D                     	;# 
   278  010E                     	;# 
   279  0110                     	;# 
   280  0111                     	;# 
   281  0112                     	;# 
   282  0113                     	;# 
   283  0114                     	;# 
   284  0115                     	;# 
   285  0116                     	;# 
   286  0117                     	;# 
   287  0118                     	;# 
   288  0119                     	;# 
   289  011A                     	;# 
   290  011B                     	;# 
   291  011D                     	;# 
   292  018C                     	;# 
   293  018D                     	;# 
   294  0191                     	;# 
   295  0191                     	;# 
   296  0192                     	;# 
   297  0193                     	;# 
   298  0193                     	;# 
   299  0193                     	;# 
   300  0194                     	;# 
   301  0195                     	;# 
   302  0196                     	;# 
   303  0199                     	;# 
   304  019A                     	;# 
   305  019B                     	;# 
   306  019B                     	;# 
   307  019B                     	;# 
   308  019B                     	;# 
   309  019C                     	;# 
   310  019C                     	;# 
   311  019D                     	;# 
   312  019E                     	;# 
   313  019F                     	;# 
   314  020D                     	;# 
   315  0210                     	;# 
   316  0211                     	;# 
   317  0212                     	;# 
   318  0213                     	;# 
   319  0214                     	;# 
   320  0215                     	;# 
   321  0215                     	;# 
   322  0216                     	;# 
   323  0217                     	;# 
   324  0291                     	;# 
   325  0291                     	;# 
   326  0292                     	;# 
   327  0293                     	;# 
   328  0294                     	;# 
   329  0295                     	;# 
   330  0295                     	;# 
   331  0296                     	;# 
   332  0298                     	;# 
   333  0298                     	;# 
   334  0299                     	;# 
   335  029A                     	;# 
   336  029B                     	;# 
   337  029C                     	;# 
   338  029C                     	;# 
   339  029D                     	;# 
   340  029E                     	;# 
   341  029F                     	;# 
   342  0311                     	;# 
   343  0311                     	;# 
   344  0312                     	;# 
   345  0313                     	;# 
   346  0314                     	;# 
   347  0315                     	;# 
   348  0315                     	;# 
   349  0316                     	;# 
   350  0318                     	;# 
   351  0318                     	;# 
   352  0319                     	;# 
   353  031A                     	;# 
   354  031C                     	;# 
   355  031C                     	;# 
   356  031D                     	;# 
   357  031E                     	;# 
   358  0394                     	;# 
   359  0395                     	;# 
   360  0396                     	;# 
   361  0415                     	;# 
   362  0416                     	;# 
   363  0417                     	;# 
   364  041C                     	;# 
   365  041D                     	;# 
   366  041E                     	;# 
   367  0791                     	;# 
   368  0792                     	;# 
   369  0793                     	;# 
   370  0794                     	;# 
   371  0795                     	;# 
   372  0798                     	;# 
   373  0799                     	;# 
   374  07A0                     	;# 
   375  07A1                     	;# 
   376  07A3                     	;# 
   377  07A4                     	;# 
   378  07A6                     	;# 
   379  07A7                     	;# 
   380  07A9                     	;# 
   381  07AA                     	;# 
   382  0FE4                     	;# 
   383  0FE5                     	;# 
   384  0FE6                     	;# 
   385  0FE7                     	;# 
   386  0FE8                     	;# 
   387  0FE9                     	;# 
   388  0FEA                     	;# 
   389  0FEB                     	;# 
   390  0FED                     	;# 
   391  0FEE                     	;# 
   392  0FEF                     	;# 
   393                           
   394                           	psect	idataBANK1
   395  0295                     __pidataBANK1:
   396                           
   397                           ;initializer for _samp
   398  0295  343F               	retlw	63
   399  0296  3400               	retlw	0
   400  0297  3406               	retlw	6
   401  0298  3400               	retlw	0
   402  0299  345B               	retlw	91
   403  029A  3400               	retlw	0
   404  029B  344F               	retlw	79
   405  029C  3400               	retlw	0
   406  029D  3466               	retlw	102
   407  029E  3400               	retlw	0
   408  029F  346D               	retlw	109
   409  02A0  3400               	retlw	0
   410  02A1  347D               	retlw	125
   411  02A2  3400               	retlw	0
   412  02A3  3427               	retlw	39
   413  02A4  3400               	retlw	0
   414  02A5  347F               	retlw	127
   415  02A6  3400               	retlw	0
   416  02A7  346F               	retlw	111
   417  02A8  3400               	retlw	0
   418  02A9  345F               	retlw	95
   419  02AA  3400               	retlw	0
   420  02AB  347C               	retlw	124
   421  02AC  3400               	retlw	0
   422  02AD  3458               	retlw	88
   423  02AE  3400               	retlw	0
   424  02AF  345E               	retlw	94
   425  02B0  3400               	retlw	0
   426  02B1  3479               	retlw	121
   427  02B2  3400               	retlw	0
   428  02B3  3471               	retlw	113
   429  02B4  3400               	retlw	0
   430                           
   431                           ;initializer for _num0
   432  02B5  343F               	retlw	63
   433  02B6  3400               	retlw	0
   434  02B7  3406               	retlw	6
   435  02B8  3400               	retlw	0
   436  02B9  345B               	retlw	91
   437  02BA  3400               	retlw	0
   438  02BB  344F               	retlw	79
   439  02BC  3400               	retlw	0
   440  02BD  3466               	retlw	102
   441  02BE  3400               	retlw	0
   442  02BF  346D               	retlw	109
   443  02C0  3400               	retlw	0
   444  02C1  347D               	retlw	125
   445  02C2  3400               	retlw	0
   446  02C3  3427               	retlw	39
   447  02C4  3400               	retlw	0
   448  02C5  347F               	retlw	127
   449  02C6  3400               	retlw	0
   450  02C7  346F               	retlw	111
   451  02C8  3400               	retlw	0
   452                           
   453                           ;initializer for _kisu
   454  02C9  3406               	retlw	6
   455  02CA  3400               	retlw	0
   456  02CB  344F               	retlw	79
   457  02CC  3400               	retlw	0
   458  02CD  346D               	retlw	109
   459  02CE  3400               	retlw	0
   460  02CF  3427               	retlw	39
   461  02D0  3400               	retlw	0
   462  02D1  346F               	retlw	111
   463  02D2  3400               	retlw	0
   464                           
   465                           ;initializer for _gusu
   466  02D3  343F               	retlw	63
   467  02D4  3400               	retlw	0
   468  02D5  345B               	retlw	91
   469  02D6  3400               	retlw	0
   470  02D7  3466               	retlw	102
   471  02D8  3400               	retlw	0
   472  02D9  347D               	retlw	125
   473  02DA  3400               	retlw	0
   474  02DB  347F               	retlw	127
   475  02DC  3400               	retlw	0
   476                           
   477                           ;initializer for _mojn
   478  02DD  3454               	retlw	84
   479  02DE  3400               	retlw	0
   480  02DF  3473               	retlw	115
   481  02E0  3400               	retlw	0
   482                           
   483                           ;initializer for _mojh
   484  02E1  3476               	retlw	118
   485  02E2  3400               	retlw	0
   486  02E3  3438               	retlw	56
   487  02E4  3400               	retlw	0
   488                           
   489                           	psect	idataBANK2
   490  0249                     __pidataBANK2:
   491                           
   492                           ;initializer for _samf
   493  0249  3471               	retlw	113
   494  024A  3400               	retlw	0
   495  024B  3479               	retlw	121
   496  024C  3400               	retlw	0
   497  024D  345E               	retlw	94
   498  024E  3400               	retlw	0
   499  024F  3458               	retlw	88
   500  0250  3400               	retlw	0
   501  0251  347C               	retlw	124
   502  0252  3400               	retlw	0
   503  0253  345F               	retlw	95
   504  0254  3400               	retlw	0
   505  0255  346F               	retlw	111
   506  0256  3400               	retlw	0
   507  0257  347F               	retlw	127
   508  0258  3400               	retlw	0
   509  0259  3427               	retlw	39
   510  025A  3400               	retlw	0
   511  025B  347D               	retlw	125
   512  025C  3400               	retlw	0
   513  025D  346D               	retlw	109
   514  025E  3400               	retlw	0
   515  025F  3466               	retlw	102
   516  0260  3400               	retlw	0
   517  0261  344F               	retlw	79
   518  0262  3400               	retlw	0
   519  0263  345B               	retlw	91
   520  0264  3400               	retlw	0
   521  0265  3406               	retlw	6
   522  0266  3400               	retlw	0
   523  0267  343F               	retlw	63
   524  0268  3400               	retlw	0
   525                           
   526                           ;initializer for _moji
   527  0269  345F               	retlw	95
   528  026A  3400               	retlw	0
   529  026B  347C               	retlw	124
   530  026C  3400               	retlw	0
   531  026D  3458               	retlw	88
   532  026E  3400               	retlw	0
   533  026F  345E               	retlw	94
   534  0270  3400               	retlw	0
   535  0271  3479               	retlw	121
   536  0272  3400               	retlw	0
   537  0273  3471               	retlw	113
   538  0274  3400               	retlw	0
   539  0275  3476               	retlw	118
   540  0276  3400               	retlw	0
   541  0277  3438               	retlw	56
   542  0278  3400               	retlw	0
   543  0279  3454               	retlw	84
   544  027A  3400               	retlw	0
   545  027B  3473               	retlw	115
   546  027C  3400               	retlw	0
   547                           
   548                           ;initializer for _mojf
   549  027D  3471               	retlw	113
   550  027E  3400               	retlw	0
   551  027F  3479               	retlw	121
   552  0280  3400               	retlw	0
   553  0281  345E               	retlw	94
   554  0282  3400               	retlw	0
   555  0283  3458               	retlw	88
   556  0284  3400               	retlw	0
   557  0285  347C               	retlw	124
   558  0286  3400               	retlw	0
   559  0287  345F               	retlw	95
   560  0288  3400               	retlw	0
   561                           
   562                           ;initializer for _moja
   563  0289  345F               	retlw	95
   564  028A  3400               	retlw	0
   565  028B  347C               	retlw	124
   566  028C  3400               	retlw	0
   567  028D  3458               	retlw	88
   568  028E  3400               	retlw	0
   569  028F  345E               	retlw	94
   570  0290  3400               	retlw	0
   571  0291  3479               	retlw	121
   572  0292  3400               	retlw	0
   573  0293  3471               	retlw	113
   574  0294  3400               	retlw	0
   575  000E                     _PORTC	set	14
   576  000D                     _PORTB	set	13
   577  000C                     _PORTA	set	12
   578  0061                     _RA1	set	97
   579  0060                     _RA0	set	96
   580  0062                     _RA2	set	98
   581  0077                     _RC7	set	119
   582  0072                     _RC2	set	114
   583  0071                     _RC1	set	113
   584  0070                     _RC0	set	112
   585  0076                     _RC6	set	118
   586  0075                     _RC5	set	117
   587  0099                     _OSCCON	set	153
   588  008E                     _TRISC	set	142
   589  008D                     _TRISB	set	141
   590  008C                     _TRISA	set	140
   591  018D                     _ANSELB	set	397
   592  018C                     _ANSELA	set	396
   593                           
   594                           	psect	cinit
   595  07DB                     start_initialization:	
   596                           ; #config settings
   597                           
   598  07DB                     __initialization:
   599                           
   600                           ; Initialize objects allocated to BANK1
   601  07DB  3095               	movlw	low __pidataBANK1
   602  07DC  0084               	movwf	4
   603  07DD  3082               	movlw	(high __pidataBANK1)| (0+128)
   604  07DE  0085               	movwf	5
   605  07DF  30A0               	movlw	low __pdataBANK1
   606  07E0  0086               	movwf	6
   607  07E1  3000               	movlw	high __pdataBANK1
   608  07E2  0087               	movwf	7
   609  07E3  3050               	movlw	80
   610  07E4  3181  215F  3187   	fcall	init_ram
   611                           
   612                           ; Initialize objects allocated to BANK2
   613  07E7  3049               	movlw	low __pidataBANK2
   614  07E8  0084               	movwf	4
   615  07E9  3082               	movlw	(high __pidataBANK2)| (0+128)
   616  07EA  0085               	movwf	5
   617  07EB  3020               	movlw	low __pdataBANK2
   618  07EC  0086               	movwf	6
   619  07ED  3001               	movlw	high __pdataBANK2
   620  07EE  0087               	movwf	7
   621  07EF  304C               	movlw	76
   622  07F0  3181  215F  3187   	fcall	init_ram
   623                           
   624                           ; Clear objects allocated to COMMON
   625  07F3  01FB               	clrf	__pbssCOMMON& (0+127)
   626  07F4  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   627                           
   628                           ; Clear objects allocated to BANK0
   629  07F5  3050               	movlw	low __pbssBANK0
   630  07F6  0084               	movwf	4
   631  07F7  3000               	movlw	high __pbssBANK0
   632  07F8  0085               	movwf	5
   633  07F9  3020               	movlw	32
   634  07FA  3181  2159  3187   	fcall	clear_ram0
   635  07FD                     end_of_initialization:	
   636                           ;End of C runtime variable initialization code
   637                           
   638  07FD                     __end_of__initialization:
   639  07FD  0020               	movlb	0
   640  07FE  3183  2B98         	ljmp	_main	;jump to C main() function
   641                           
   642                           	psect	bssCOMMON
   643  007B                     __pbssCOMMON:
   644  007B                     _flag_sw3:
   645  007B                     	ds	2
   646                           
   647                           	psect	bssBANK0
   648  0050                     __pbssBANK0:
   649  0050                     _fugou:
   650  0050                     	ds	2
   651  0052                     _code1:
   652  0052                     	ds	2
   653  0054                     _code10:
   654  0054                     	ds	2
   655  0056                     _code100:
   656  0056                     	ds	2
   657  0058                     _code1000:
   658  0058                     	ds	2
   659  005A                     _count:
   660  005A                     	ds	2
   661  005C                     _atai:
   662  005C                     	ds	2
   663  005E                     _atai1:
   664  005E                     	ds	2
   665  0060                     _atai10:
   666  0060                     	ds	2
   667  0062                     _ccw:
   668  0062                     	ds	2
   669  0064                     _cw:
   670  0064                     	ds	2
   671  0066                     _flg:
   672  0066                     	ds	2
   673  0068                     _flag_P:
   674  0068                     	ds	2
   675  006A                     _flag_R:
   676  006A                     	ds	2
   677  006C                     _flag_sw2:
   678  006C                     	ds	2
   679  006E                     _flag_sw1:
   680  006E                     	ds	2
   681                           
   682                           	psect	dataBANK1
   683  00A0                     __pdataBANK1:
   684  00A0                     _samp:
   685  00A0                     	ds	32
   686  00C0                     _num0:
   687  00C0                     	ds	20
   688  00D4                     _kisu:
   689  00D4                     	ds	10
   690  00DE                     _gusu:
   691  00DE                     	ds	10
   692  00E8                     _mojn:
   693  00E8                     	ds	4
   694  00EC                     _mojh:
   695  00EC                     	ds	4
   696                           
   697                           	psect	dataBANK2
   698  0120                     __pdataBANK2:
   699  0120                     _samf:
   700  0120                     	ds	32
   701  0140                     _moji:
   702  0140                     	ds	20
   703  0154                     _mojf:
   704  0154                     	ds	12
   705  0160                     _moja:
   706  0160                     	ds	12
   707                           
   708                           	psect	inittext
   709  015F                     init_ram:
   710  015F  00FE               	movwf	btemp
   711  0160                     initloop:
   712  0160  0012               	moviw fsr0++
   713  0161  001E               	movwi fsr1++
   714  0162  0BFE               	decfsz	btemp,f
   715  0163  2960               	goto	initloop
   716  0164  3400               	retlw	0
   717                           
   718                           	psect	clrtext
   719  0159                     clear_ram0:	
   720                           ;	Called with FSR0 containing the base address, and
   721                           ;	WREG with the size to clear
   722                           
   723  0159  0064               	clrwdt	;clear the watchdog before getting into this loop
   724  015A                     clrloop0:
   725  015A  0180               	clrf	0	;clear RAM location pointed to by FSR
   726  015B  3101               	addfsr 0,1
   727  015C  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   728  015D  295A               	goto	clrloop0	;have we reached the end yet?
   729  015E  3400               	retlw	0	;all done for this memory range, return
   730                           
   731                           	psect	cstackCOMMON
   732  0070                     __pcstackCOMMON:
   733  0070                     ?_portinit:
   734  0070                     ??_portinit:	
   735                           ; 1 bytes @ 0x0
   736                           
   737  0070                     ?_zenoff:	
   738                           ; 1 bytes @ 0x0
   739                           
   740  0070                     ??_zenoff:	
   741                           ; 1 bytes @ 0x0
   742                           
   743  0070                     ?_dynam:	
   744                           ; 1 bytes @ 0x0
   745                           
   746  0070                     ?_tactsw:	
   747                           ; 1 bytes @ 0x0
   748                           
   749  0070                     ??_tactsw:	
   750                           ; 1 bytes @ 0x0
   751                           
   752  0070                     ?_fclr:	
   753                           ; 1 bytes @ 0x0
   754                           
   755  0070                     ?_main:	
   756                           ; 1 bytes @ 0x0
   757                           
   758  0070                     ?___wmul:	
   759                           ; 1 bytes @ 0x0
   760                           
   761  0070                     ?___awmod:	
   762                           ; 2 bytes @ 0x0
   763                           
   764  0070                     dynam@dig1data:	
   765                           ; 2 bytes @ 0x0
   766                           
   767  0070                     fclr@flg:	
   768                           ; 2 bytes @ 0x0
   769                           
   770  0070                     ___wmul@multiplier:	
   771                           ; 2 bytes @ 0x0
   772                           
   773  0070                     ___awmod@divisor:	
   774                           ; 2 bytes @ 0x0
   775                           
   776                           
   777                           ; 2 bytes @ 0x0
   778  0070                     	ds	2
   779  0072                     ??_fclr:
   780  0072                     dynam@dig2data:	
   781                           ; 1 bytes @ 0x2
   782                           
   783  0072                     tactsw@b:	
   784                           ; 2 bytes @ 0x2
   785                           
   786  0072                     ___wmul@multiplicand:	
   787                           ; 2 bytes @ 0x2
   788                           
   789  0072                     ___awmod@dividend:	
   790                           ; 2 bytes @ 0x2
   791                           
   792                           
   793                           ; 2 bytes @ 0x2
   794  0072                     	ds	2
   795  0074                     ??___wmul:
   796  0074                     ??___awmod:	
   797                           ; 1 bytes @ 0x4
   798                           
   799  0074                     dynam@smdata:	
   800                           ; 1 bytes @ 0x4
   801                           
   802  0074                     tactsw@c:	
   803                           ; 2 bytes @ 0x4
   804                           
   805  0074                     ___wmul@product:	
   806                           ; 2 bytes @ 0x4
   807                           
   808                           
   809                           ; 2 bytes @ 0x4
   810  0074                     	ds	1
   811  0075                     ___awmod@counter:
   812                           
   813                           ; 1 bytes @ 0x5
   814  0075                     	ds	1
   815  0076                     ?___awdiv:
   816  0076                     ___awmod@sign:	
   817                           ; 2 bytes @ 0x6
   818                           
   819  0076                     dynam@tr:	
   820                           ; 1 bytes @ 0x6
   821                           
   822  0076                     tactsw@a:	
   823                           ; 2 bytes @ 0x6
   824                           
   825  0076                     ___awdiv@divisor:	
   826                           ; 2 bytes @ 0x6
   827                           
   828                           
   829                           ; 2 bytes @ 0x6
   830  0076                     	ds	2
   831  0078                     ??_dynam:
   832  0078                     ?_tact:	
   833                           ; 1 bytes @ 0x8
   834                           
   835  0078                     tact@mode:	
   836                           ; 1 bytes @ 0x8
   837                           
   838  0078                     ___awdiv@dividend:	
   839                           ; 2 bytes @ 0x8
   840                           
   841                           
   842                           ; 2 bytes @ 0x8
   843  0078                     	ds	2
   844  007A                     ??_tact:
   845  007A                     ??___awdiv:	
   846                           ; 1 bytes @ 0xA
   847                           
   848                           
   849                           ; 1 bytes @ 0xA
   850  007A                     	ds	1
   851  007B                     ??_main:
   852                           
   853                           	psect	cstackBANK0
   854  0020                     __pcstackBANK0:	
   855                           ; 1 bytes @ 0xB
   856                           
   857  0020                     ___awdiv@counter:
   858  0020                     dynam@smd:	
   859                           ; 1 bytes @ 0x0
   860                           
   861                           
   862                           ; 2 bytes @ 0x0
   863  0020                     	ds	1
   864  0021                     ___awdiv@sign:
   865                           
   866                           ; 1 bytes @ 0x1
   867  0021                     	ds	1
   868  0022                     dynam@tm:
   869  0022                     ___awdiv@quotient:	
   870                           ; 2 bytes @ 0x2
   871                           
   872                           
   873                           ; 2 bytes @ 0x2
   874  0022                     	ds	2
   875  0024                     ?_hen7:
   876  0024                     dynam@j:	
   877                           ; 1 bytes @ 0x4
   878                           
   879  0024                     hen7@value:	
   880                           ; 2 bytes @ 0x4
   881                           
   882                           
   883                           ; 2 bytes @ 0x4
   884  0024                     	ds	2
   885  0026                     dynam@ext:
   886  0026                     hen7@ns1:	
   887                           ; 2 bytes @ 0x6
   888                           
   889                           
   890                           ; 2 bytes @ 0x6
   891  0026                     	ds	2
   892  0028                     ??_hen7:
   893                           
   894                           ; 1 bytes @ 0x8
   895  0028                     	ds	4
   896  002C                     hen7@value1:
   897                           
   898                           ; 2 bytes @ 0xC
   899  002C                     	ds	2
   900  002E                     hen7@value10:
   901                           
   902                           ; 2 bytes @ 0xE
   903  002E                     	ds	2
   904  0030                     hen7@value100:
   905                           
   906                           ; 2 bytes @ 0x10
   907  0030                     	ds	2
   908  0032                     hen7@l:
   909                           
   910                           ; 2 bytes @ 0x12
   911  0032                     	ds	2
   912  0034                     hen7@m:
   913                           
   914                           ; 2 bytes @ 0x14
   915  0034                     	ds	2
   916  0036                     hen7@n:
   917                           
   918                           ; 2 bytes @ 0x16
   919  0036                     	ds	12
   920  0042                     main@k:
   921                           
   922                           ; 2 bytes @ 0x22
   923  0042                     	ds	2
   924  0044                     main@m:
   925                           
   926                           ; 2 bytes @ 0x24
   927  0044                     	ds	2
   928  0046                     _main$853:
   929                           
   930                           ; 2 bytes @ 0x26
   931  0046                     	ds	2
   932  0048                     main@segL:
   933                           
   934                           ; 2 bytes @ 0x28
   935  0048                     	ds	2
   936  004A                     main@ataiL:
   937                           
   938                           ; 2 bytes @ 0x2A
   939  004A                     	ds	2
   940  004C                     main@ataiR:
   941                           
   942                           ; 2 bytes @ 0x2C
   943  004C                     	ds	2
   944  004E                     main@segR:
   945                           
   946                           ; 2 bytes @ 0x2E
   947  004E                     	ds	2
   948                           
   949                           	psect	maintext
   950  0398                     __pmaintext:	
   951 ;;
   952 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   953 ;;
   954 ;; *************** function _main *****************
   955 ;; Defined at:
   956 ;;		line 519 in file "Q5.c"
   957 ;; Parameters:    Size  Location     Type
   958 ;;		None
   959 ;; Auto vars:     Size  Location     Type
   960 ;;  segR            2   46[BANK0 ] unsigned short 
   961 ;;  ataiR           2   44[BANK0 ] int 
   962 ;;  ataiL           2   42[BANK0 ] int 
   963 ;;  segL            2   40[BANK0 ] unsigned short 
   964 ;;  m               2   36[BANK0 ] int 
   965 ;;  k               2   34[BANK0 ] int 
   966 ;;  zyoutai         2    0        int 
   967 ;;  time            2    0        int 
   968 ;;  n               2    0        int 
   969 ;;  j               2    0        int 
   970 ;;  i               2    0        int 
   971 ;; Return value:  Size  Location     Type
   972 ;;                  1    wreg      void 
   973 ;; Registers used:
   974 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   975 ;; Tracked objects:
   976 ;;		On entry : B1F/0
   977 ;;		On exit  : 0/0
   978 ;;		Unchanged: 0/0
   979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   981 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
   982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   983 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
   984 ;;Total ram usage:       24 bytes
   985 ;; Hardware stack levels required when called:    2
   986 ;; This function calls:
   987 ;;		___wmul
   988 ;;		_dynam
   989 ;;		_fclr
   990 ;;		_hen7
   991 ;;		_portinit
   992 ;;		_tact
   993 ;;		_zenoff
   994 ;; This function is called by:
   995 ;;		Startup code after reset
   996 ;; This function uses a non-reentrant model
   997 ;;
   998                           
   999                           
  1000                           ;psect for function _main
  1001  0398                     _main:
  1002  0398                     l2481:	
  1003                           ;incstack = 0
  1004                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1005                           
  1006                           
  1007                           ;Q5.c: 522:     OSCCON=0x7A;
  1008  0398  307A               	movlw	122
  1009  0399  0021               	movlb	1	; select bank1
  1010  039A  0099               	movwf	25	;volatile
  1011  039B                     l2483:
  1012                           
  1013                           ;Q5.c: 524:     portinit();
  1014  039B  3181  216E  3183   	fcall	_portinit
  1015                           
  1016                           ;Q5.c: 526:     zenoff();
  1017  039E  3181  2165  3183   	fcall	_zenoff
  1018  03A1                     l2485:
  1019  03A1                     l2487:
  1020  03A1                     l2489:
  1021  03A1  0020               	movlb	0	; select bank0
  1022  03A2  01C2               	clrf	main@k
  1023  03A3  01C3               	clrf	main@k+1
  1024  03A4                     l2491:
  1025  03A4  01C4               	clrf	main@m
  1026  03A5  01C5               	clrf	main@m+1
  1027  03A6                     l2493:
  1028  03A6                     l288:	
  1029                           ;Q5.c: 531:     while((RA0!=1)||(RA1!=1)||(RA2!=1));
  1030                           
  1031  03A6  1C0C               	btfss	12,0	;volatile
  1032  03A7  2BA9               	goto	u2311
  1033  03A8  2BAA               	goto	u2310
  1034  03A9                     u2311:
  1035  03A9  2BA6               	goto	l288
  1036  03AA                     u2310:
  1037  03AA                     l2495:
  1038  03AA  1C8C               	btfss	12,1	;volatile
  1039  03AB  2BAD               	goto	u2321
  1040  03AC  2BAE               	goto	u2320
  1041  03AD                     u2321:
  1042  03AD  2BA6               	goto	l288
  1043  03AE                     u2320:
  1044  03AE                     l2497:
  1045  03AE  1D0C               	btfss	12,2	;volatile
  1046  03AF  2BB1               	goto	u2331
  1047  03B0  2BB2               	goto	u2330
  1048  03B1                     u2331:
  1049  03B1  2BA6               	goto	l288
  1050  03B2                     u2330:
  1051  03B2                     l290:
  1052                           
  1053                           ;Q5.c: 534:     RC0=RC2=RC1=1;
  1054  03B2  148E               	bsf	14,1	;volatile
  1055  03B3  188E               	btfsc	14,1	;volatile
  1056  03B4  2BB6               	goto	u2341
  1057  03B5  2BB9               	goto	u2340
  1058  03B6                     u2341:
  1059  03B6  0020               	movlb	0	; select bank0
  1060  03B7  150E               	bsf	14,2	;volatile
  1061  03B8  2BBB               	goto	u2354
  1062  03B9                     u2340:
  1063  03B9  0020               	movlb	0	; select bank0
  1064  03BA  110E               	bcf	14,2	;volatile
  1065  03BB                     u2354:
  1066  03BB  190E               	btfsc	14,2	;volatile
  1067  03BC  2BBE               	goto	u2351
  1068  03BD  2BC1               	goto	u2350
  1069  03BE                     u2351:
  1070  03BE  0020               	movlb	0	; select bank0
  1071  03BF  140E               	bsf	14,0	;volatile
  1072  03C0  2BC3               	goto	u2364
  1073  03C1                     u2350:
  1074  03C1  0020               	movlb	0	; select bank0
  1075  03C2  100E               	bcf	14,0	;volatile
  1076  03C3                     u2364:
  1077  03C3                     l2499:
  1078                           
  1079                           ;Q5.c: 537:     fclr(2);
  1080  03C3  3002               	movlw	2
  1081  03C4  00F0               	movwf	fclr@flg
  1082  03C5  3000               	movlw	0
  1083  03C6  00F1               	movwf	fclr@flg+1
  1084  03C7  3181  21A0  3183   	fcall	_fclr
  1085  03CA                     l2501:
  1086  03CA                     l2503:
  1087  03CA                     l2505:
  1088                           
  1089                           ;Q5.c: 551:     unsigned short segL = 0x40;
  1090  03CA  3040               	movlw	64
  1091  03CB  0020               	movlb	0	; select bank0
  1092  03CC  00C8               	movwf	main@segL
  1093  03CD  3000               	movlw	0
  1094  03CE  00C9               	movwf	main@segL+1
  1095  03CF                     l2507:
  1096                           
  1097                           ;Q5.c: 552:     unsigned short segR = 0x40;
  1098  03CF  3040               	movlw	64
  1099  03D0  00CE               	movwf	main@segR
  1100  03D1  3000               	movlw	0
  1101  03D2  00CF               	movwf	main@segR+1
  1102  03D3                     l2509:
  1103                           
  1104                           ;Q5.c: 554:     int ataiL = 0;
  1105  03D3  01CA               	clrf	main@ataiL
  1106  03D4  01CB               	clrf	main@ataiL+1
  1107  03D5                     l2511:
  1108                           
  1109                           ;Q5.c: 555:     int ataiR = 0;
  1110  03D5  01CC               	clrf	main@ataiR
  1111  03D6  01CD               	clrf	main@ataiR+1
  1112  03D7                     l292:	
  1113                           ;Q5.c: 558:     while(1){
  1114                           
  1115                           
  1116                           ;Q5.c: 561:         dynam(segL,segR,0,0);
  1117  03D7  0849               	movf	main@segL+1,w
  1118  03D8  00F1               	movwf	dynam@dig1data+1
  1119  03D9  0848               	movf	main@segL,w
  1120  03DA  00F0               	movwf	dynam@dig1data
  1121  03DB  084F               	movf	main@segR+1,w
  1122  03DC  00F3               	movwf	dynam@dig2data+1
  1123  03DD  084E               	movf	main@segR,w
  1124  03DE  00F2               	movwf	dynam@dig2data
  1125  03DF  3000               	movlw	0
  1126  03E0  00F4               	movwf	dynam@smdata
  1127  03E1  00F5               	movwf	dynam@smdata+1
  1128  03E2  3000               	movlw	0
  1129  03E3  00F6               	movwf	dynam@tr
  1130  03E4  00F7               	movwf	dynam@tr+1
  1131  03E5  3184  24A7  3183   	fcall	_dynam
  1132  03E8                     l2513:
  1133                           
  1134                           ;Q5.c: 564:         if(RA0 == 0 && RA1 == 1){
  1135  03E8  0020               	movlb	0	; select bank0
  1136  03E9  180C               	btfsc	12,0	;volatile
  1137  03EA  2BEC               	goto	u2371
  1138  03EB  2BED               	goto	u2370
  1139  03EC                     u2371:
  1140  03EC  2C23               	goto	l2531
  1141  03ED                     u2370:
  1142  03ED                     l2515:
  1143  03ED  1C8C               	btfss	12,1	;volatile
  1144  03EE  2BF0               	goto	u2381
  1145  03EF  2BF1               	goto	u2380
  1146  03F0                     u2381:
  1147  03F0  2C23               	goto	l2531
  1148  03F1                     u2380:
  1149  03F1                     l2517:
  1150                           
  1151                           ;Q5.c: 566:             tact(2);
  1152  03F1  3002               	movlw	2
  1153  03F2  00F8               	movwf	tact@mode
  1154  03F3  3000               	movlw	0
  1155  03F4  00F9               	movwf	tact@mode+1
  1156  03F5  3181  21FD  3183   	fcall	_tact
  1157  03F8                     l2519:
  1158                           
  1159                           ;Q5.c: 567:             if(((flag_sw3==0)&&(flag_P==1))){
  1160  03F8  087B               	movf	_flag_sw3,w
  1161  03F9  047C               	iorwf	_flag_sw3+1,w
  1162  03FA  1D03               	btfss	3,2
  1163  03FB  2BFD               	goto	u2391
  1164  03FC  2BFE               	goto	u2390
  1165  03FD                     u2391:
  1166  03FD  2C23               	goto	l2531
  1167  03FE                     u2390:
  1168  03FE                     l2521:
  1169  03FE  0020               	movlb	0	; select bank0
  1170  03FF  0368               	decf	_flag_P,w
  1171  0400  0469               	iorwf	_flag_P+1,w
  1172  0401  1D03               	btfss	3,2
  1173  0402  2C04               	goto	u2401
  1174  0403  2C05               	goto	u2400
  1175  0404                     u2401:
  1176  0404  2C23               	goto	l2531
  1177  0405                     u2400:
  1178  0405                     l2523:
  1179                           
  1180                           ;Q5.c: 569:                 if(ataiL == 0){
  1181  0405  084A               	movf	main@ataiL,w
  1182  0406  044B               	iorwf	main@ataiL+1,w
  1183  0407  1D03               	btfss	3,2
  1184  0408  2C0A               	goto	u2411
  1185  0409  2C0B               	goto	u2410
  1186  040A                     u2411:
  1187  040A  2C0F               	goto	l295
  1188  040B                     u2410:
  1189  040B                     l2525:
  1190                           
  1191                           ;Q5.c: 570:                     ataiL = 10;
  1192  040B  300A               	movlw	10
  1193  040C  00CA               	movwf	main@ataiL
  1194  040D  3000               	movlw	0
  1195  040E  00CB               	movwf	main@ataiL+1
  1196  040F                     l295:	
  1197                           ;Q5.c: 571:                 }
  1198                           
  1199                           
  1200                           ;Q5.c: 573:                 ataiL--;
  1201  040F  30FF               	movlw	255
  1202  0410  07CA               	addwf	main@ataiL,f
  1203  0411  30FF               	movlw	255
  1204  0412  3DCB               	addwfc	main@ataiL+1,f
  1205  0413                     l2527:
  1206                           
  1207                           ;Q5.c: 575:                 fclr(2);
  1208  0413  3002               	movlw	2
  1209  0414  00F0               	movwf	fclr@flg
  1210  0415  3000               	movlw	0
  1211  0416  00F1               	movwf	fclr@flg+1
  1212  0417  3181  21A0  3183   	fcall	_fclr
  1213  041A                     l2529:
  1214                           
  1215                           ;Q5.c: 577:                 segL = num0[k];
  1216  041A  0020               	movlb	0	; select bank0
  1217  041B  3542               	lslf	main@k,w
  1218  041C  3EC0               	addlw	(low (_num0| 0))& (0+255)
  1219  041D  0086               	movwf	6
  1220  041E  0187               	clrf	7
  1221  041F  3F40               	moviw [0]fsr1
  1222  0420  00C8               	movwf	main@segL
  1223  0421  3F41               	moviw [1]fsr1
  1224  0422  00C9               	movwf	main@segL+1
  1225  0423                     l2531:
  1226                           
  1227                           ;Q5.c: 583:         if(RA0 == 1 && RA1 == 1 && segR != 0x40){
  1228  0423  0020               	movlb	0	; select bank0
  1229  0424  1C0C               	btfss	12,0	;volatile
  1230  0425  2C27               	goto	u2421
  1231  0426  2C28               	goto	u2420
  1232  0427                     u2421:
  1233  0427  2C75               	goto	l2555
  1234  0428                     u2420:
  1235  0428                     l2533:
  1236  0428  1C8C               	btfss	12,1	;volatile
  1237  0429  2C2B               	goto	u2431
  1238  042A  2C2C               	goto	u2430
  1239  042B                     u2431:
  1240  042B  2C75               	goto	l2555
  1241  042C                     u2430:
  1242  042C                     l2535:
  1243  042C  3040               	movlw	64
  1244  042D  064E               	xorwf	main@segR,w
  1245  042E  044F               	iorwf	main@segR+1,w
  1246  042F  1903               	btfsc	3,2
  1247  0430  2C32               	goto	u2441
  1248  0431  2C33               	goto	u2440
  1249  0432                     u2441:
  1250  0432  2C75               	goto	l2555
  1251  0433                     u2440:
  1252  0433                     l2537:
  1253                           
  1254                           ;Q5.c: 585:             if(segR == 0x40){
  1255  0433  3040               	movlw	64
  1256  0434  064E               	xorwf	main@segR,w
  1257  0435  044F               	iorwf	main@segR+1,w
  1258  0436  1D03               	btfss	3,2
  1259  0437  2C39               	goto	u2451
  1260  0438  2C3A               	goto	u2450
  1261  0439                     u2451:
  1262  0439  2C42               	goto	l2541
  1263  043A                     u2450:
  1264  043A                     l2539:
  1265                           
  1266                           ;Q5.c: 586:                 segR = num0[0];
  1267  043A  0021               	movlb	1	; select bank1
  1268  043B  0841               	movf	(_num0+1)^(0+128),w
  1269  043C  0020               	movlb	0	; select bank0
  1270  043D  00CF               	movwf	main@segR+1
  1271  043E  0021               	movlb	1	; select bank1
  1272  043F  0840               	movf	_num0^(0+128),w
  1273  0440  0020               	movlb	0	; select bank0
  1274  0441  00CE               	movwf	main@segR
  1275  0442                     l2541:
  1276                           
  1277                           ;Q5.c: 589:             tact(2);
  1278  0442  3002               	movlw	2
  1279  0443  00F8               	movwf	tact@mode
  1280  0444  3000               	movlw	0
  1281  0445  00F9               	movwf	tact@mode+1
  1282  0446  3181  21FD  3183   	fcall	_tact
  1283  0449                     l2543:
  1284                           
  1285                           ;Q5.c: 590:             if(((flag_sw3==0)&&(flag_P==1))){
  1286  0449  087B               	movf	_flag_sw3,w
  1287  044A  047C               	iorwf	_flag_sw3+1,w
  1288  044B  1D03               	btfss	3,2
  1289  044C  2C4E               	goto	u2461
  1290  044D  2C4F               	goto	u2460
  1291  044E                     u2461:
  1292  044E  2C75               	goto	l2555
  1293  044F                     u2460:
  1294  044F                     l2545:
  1295  044F  0020               	movlb	0	; select bank0
  1296  0450  0368               	decf	_flag_P,w
  1297  0451  0469               	iorwf	_flag_P+1,w
  1298  0452  1D03               	btfss	3,2
  1299  0453  2C55               	goto	u2471
  1300  0454  2C56               	goto	u2470
  1301  0455                     u2471:
  1302  0455  2C75               	goto	l2555
  1303  0456                     u2470:
  1304  0456                     l2547:
  1305                           
  1306                           ;Q5.c: 592:                 if(ataiR == 9){
  1307  0456  3009               	movlw	9
  1308  0457  064C               	xorwf	main@ataiR,w
  1309  0458  044D               	iorwf	main@ataiR+1,w
  1310  0459  1D03               	btfss	3,2
  1311  045A  2C5C               	goto	u2481
  1312  045B  2C5D               	goto	u2480
  1313  045C                     u2481:
  1314  045C  2C61               	goto	l299
  1315  045D                     u2480:
  1316  045D                     l2549:
  1317                           
  1318                           ;Q5.c: 593:                     ataiR = -1;
  1319  045D  30FF               	movlw	255
  1320  045E  00CC               	movwf	main@ataiR
  1321  045F  30FF               	movlw	255
  1322  0460  00CD               	movwf	main@ataiR+1
  1323  0461                     l299:	
  1324                           ;Q5.c: 594:                 }
  1325                           
  1326                           
  1327                           ;Q5.c: 596:                 ataiR++;
  1328  0461  3001               	movlw	1
  1329  0462  07CC               	addwf	main@ataiR,f
  1330  0463  3000               	movlw	0
  1331  0464  3DCD               	addwfc	main@ataiR+1,f
  1332  0465                     l2551:
  1333                           
  1334                           ;Q5.c: 598:                 fclr(2);
  1335  0465  3002               	movlw	2
  1336  0466  00F0               	movwf	fclr@flg
  1337  0467  3000               	movlw	0
  1338  0468  00F1               	movwf	fclr@flg+1
  1339  0469  3181  21A0  3183   	fcall	_fclr
  1340  046C                     l2553:
  1341                           
  1342                           ;Q5.c: 600:                 ataiR = num0[m];
  1343  046C  0020               	movlb	0	; select bank0
  1344  046D  3544               	lslf	main@m,w
  1345  046E  3EC0               	addlw	(low (_num0| 0))& (0+255)
  1346  046F  0086               	movwf	6
  1347  0470  0187               	clrf	7
  1348  0471  3F40               	moviw [0]fsr1
  1349  0472  00CC               	movwf	main@ataiR
  1350  0473  3F41               	moviw [1]fsr1
  1351  0474  00CD               	movwf	main@ataiR+1
  1352  0475                     l2555:
  1353                           
  1354                           ;Q5.c: 606:         if(RA0 ==1 && RA1 ==1){
  1355  0475  0020               	movlb	0	; select bank0
  1356  0476  1C0C               	btfss	12,0	;volatile
  1357  0477  2C79               	goto	u2491
  1358  0478  2C7A               	goto	u2490
  1359  0479                     u2491:
  1360  0479  2BD7               	goto	l292
  1361  047A                     u2490:
  1362  047A                     l2557:
  1363  047A  1C8C               	btfss	12,1	;volatile
  1364  047B  2C7D               	goto	u2501
  1365  047C  2C7E               	goto	u2500
  1366  047D                     u2501:
  1367  047D  2BD7               	goto	l292
  1368  047E                     u2500:
  1369  047E                     l2559:
  1370                           
  1371                           ;Q5.c: 608:             hen7(ataiL*10+ataiR,10);
  1372  047E  084B               	movf	main@ataiL+1,w
  1373  047F  00F1               	movwf	___wmul@multiplier+1
  1374  0480  084A               	movf	main@ataiL,w
  1375  0481  00F0               	movwf	___wmul@multiplier
  1376  0482  300A               	movlw	10
  1377  0483  00F2               	movwf	___wmul@multiplicand
  1378  0484  3000               	movlw	0
  1379  0485  00F3               	movwf	___wmul@multiplicand+1
  1380  0486  3181  2181  3183   	fcall	___wmul
  1381  0489  0020               	movlb	0	; select bank0
  1382  048A  084C               	movf	main@ataiR,w
  1383  048B  0770               	addwf	?___wmul,w
  1384  048C  00C6               	movwf	_main$853
  1385  048D  084D               	movf	main@ataiR+1,w
  1386  048E  3D71               	addwfc	?___wmul+1,w
  1387  048F  00C7               	movwf	_main$853+1
  1388  0490                     l2561:
  1389                           
  1390                           ;Q5.c: 608:             hen7(ataiL*10+ataiR,10);
  1391  0490  0847               	movf	_main$853+1,w
  1392  0491  00A5               	movwf	hen7@value+1
  1393  0492  0846               	movf	_main$853,w
  1394  0493  00A4               	movwf	hen7@value
  1395  0494  300A               	movlw	10
  1396  0495  00A6               	movwf	hen7@ns1
  1397  0496  3000               	movlw	0
  1398  0497  00A7               	movwf	hen7@ns1+1
  1399  0498  3186  2611  3183   	fcall	_hen7
  1400  049B                     l2563:
  1401                           
  1402                           ;Q5.c: 609:             segL = code10;
  1403  049B  0020               	movlb	0	; select bank0
  1404  049C  0855               	movf	_code10+1,w
  1405  049D  00C9               	movwf	main@segL+1
  1406  049E  0854               	movf	_code10,w
  1407  049F  00C8               	movwf	main@segL
  1408  04A0                     l2565:
  1409                           
  1410                           ;Q5.c: 610:             segR = code1;
  1411  04A0  0853               	movf	_code1+1,w
  1412  04A1  00CF               	movwf	main@segR+1
  1413  04A2  0852               	movf	_code1,w
  1414  04A3  00CE               	movwf	main@segR
  1415  04A4  2BD7               	goto	l292
  1416  04A5  3180  2802         	ljmp	start
  1417  04A7                     __end_of_main:
  1418                           
  1419                           	psect	text1
  1420  0165                     __ptext1:	
  1421 ;; *************** function _zenoff *****************
  1422 ;; Defined at:
  1423 ;;		line 195 in file "Q5.c"
  1424 ;; Parameters:    Size  Location     Type
  1425 ;;		None
  1426 ;; Auto vars:     Size  Location     Type
  1427 ;;		None
  1428 ;; Return value:  Size  Location     Type
  1429 ;;                  1    wreg      void 
  1430 ;; Registers used:
  1431 ;;		status,2
  1432 ;; Tracked objects:
  1433 ;;		On entry : 0/0
  1434 ;;		On exit  : 0/0
  1435 ;;		Unchanged: 0/0
  1436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1441 ;;Total ram usage:        0 bytes
  1442 ;; Hardware stack levels used:    1
  1443 ;; This function calls:
  1444 ;;		Nothing
  1445 ;; This function is called by:
  1446 ;;		_main
  1447 ;; This function uses a non-reentrant model
  1448 ;;
  1449                           
  1450                           
  1451                           ;psect for function _zenoff
  1452  0165                     _zenoff:
  1453  0165                     l1955:	
  1454                           ;incstack = 0
  1455                           ; Regs used in _zenoff: [status,2]
  1456                           
  1457                           
  1458                           ;Q5.c: 197:     RC0=1;
  1459  0165  0020               	movlb	0	; select bank0
  1460  0166  140E               	bsf	14,0	;volatile
  1461                           
  1462                           ;Q5.c: 198:     RC1=1;
  1463  0167  148E               	bsf	14,1	;volatile
  1464                           
  1465                           ;Q5.c: 199:     RC2=1;
  1466  0168  150E               	bsf	14,2	;volatile
  1467  0169                     l1957:
  1468                           
  1469                           ;Q5.c: 200:     PORTB=0x00;
  1470  0169  018D               	clrf	13	;volatile
  1471  016A                     l1959:
  1472                           
  1473                           ;Q5.c: 201:     RC7=0;RC7=1;RC7=0;
  1474  016A  138E               	bcf	14,7	;volatile
  1475  016B                     l1961:
  1476  016B  178E               	bsf	14,7	;volatile
  1477  016C                     l1963:
  1478  016C  138E               	bcf	14,7	;volatile
  1479  016D                     l108:
  1480  016D  0008               	return
  1481  016E                     __end_of_zenoff:
  1482                           
  1483                           	psect	text2
  1484  01FD                     __ptext2:	
  1485 ;; *************** function _tact *****************
  1486 ;; Defined at:
  1487 ;;		line 346 in file "Q5.c"
  1488 ;; Parameters:    Size  Location     Type
  1489 ;;  mode            2    8[COMMON] unsigned short 
  1490 ;; Auto vars:     Size  Location     Type
  1491 ;;		None
  1492 ;; Return value:  Size  Location     Type
  1493 ;;                  1    wreg      void 
  1494 ;; Registers used:
  1495 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1496 ;; Tracked objects:
  1497 ;;		On entry : 0/0
  1498 ;;		On exit  : 0/0
  1499 ;;		Unchanged: 0/0
  1500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1501 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1504 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1505 ;;Total ram usage:        2 bytes
  1506 ;; Hardware stack levels used:    1
  1507 ;; Hardware stack levels required when called:    1
  1508 ;; This function calls:
  1509 ;;		_tactsw
  1510 ;; This function is called by:
  1511 ;;		_main
  1512 ;;		_kaisu
  1513 ;;		_waitSEGStop
  1514 ;;		_motorStop
  1515 ;; This function uses a non-reentrant model
  1516 ;;
  1517                           
  1518                           
  1519                           ;psect for function _tact
  1520  01FD                     _tact:
  1521  01FD                     l2267:	
  1522                           ;incstack = 0
  1523                           ; Regs used in _tact: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1524                           
  1525                           
  1526                           ;Q5.c: 346: void tact(unsigned short mode);Q5.c: 347: {;Q5.c: 348:     switch(mode){
  1527  01FD  2A38               	goto	l2295
  1528  01FE                     l2269:
  1529                           
  1530                           ;Q5.c: 350:                 tactsw();
  1531  01FE  3181  21C0  3181   	fcall	_tactsw
  1532  0201                     l2271:
  1533                           
  1534                           ;Q5.c: 351:                 if(flag_sw3==0)flag_R=1;
  1535  0201  087B               	movf	_flag_sw3,w
  1536  0202  047C               	iorwf	_flag_sw3+1,w
  1537  0203  1D03               	btfss	3,2
  1538  0204  2A06               	goto	u1971
  1539  0205  2A07               	goto	u1970
  1540  0206                     u1971:
  1541  0206  2A48               	goto	l208
  1542  0207                     u1970:
  1543  0207                     l2273:
  1544  0207  3001               	movlw	1
  1545  0208  0020               	movlb	0	; select bank0
  1546  0209  00EA               	movwf	_flag_R
  1547  020A  3000               	movlw	0
  1548  020B  00EB               	movwf	_flag_R+1
  1549  020C  2A48               	goto	l208
  1550  020D                     l2275:
  1551                           
  1552                           ;Q5.c: 354:                 tactsw();
  1553  020D  3181  21C0  3181   	fcall	_tactsw
  1554  0210                     l2277:
  1555                           
  1556                           ;Q5.c: 355:                 if(flag_sw3==1)flag_P=1;
  1557  0210  037B               	decf	_flag_sw3,w
  1558  0211  047C               	iorwf	_flag_sw3+1,w
  1559  0212  1D03               	btfss	3,2
  1560  0213  2A15               	goto	u1981
  1561  0214  2A16               	goto	u1980
  1562  0215                     u1981:
  1563  0215  2A48               	goto	l208
  1564  0216                     u1980:
  1565  0216                     l2279:
  1566  0216  3001               	movlw	1
  1567  0217  0020               	movlb	0	; select bank0
  1568  0218  00E8               	movwf	_flag_P
  1569  0219  3000               	movlw	0
  1570  021A  00E9               	movwf	_flag_P+1
  1571  021B  2A48               	goto	l208
  1572  021C                     l2281:
  1573                           
  1574                           ;Q5.c: 358:                 tactsw();
  1575  021C  3181  21C0  3181   	fcall	_tactsw
  1576  021F                     l2283:
  1577                           
  1578                           ;Q5.c: 359:                 if(flag_sw3==0)flag_R=1;
  1579  021F  087B               	movf	_flag_sw3,w
  1580  0220  047C               	iorwf	_flag_sw3+1,w
  1581  0221  1D03               	btfss	3,2
  1582  0222  2A24               	goto	u1991
  1583  0223  2A25               	goto	u1990
  1584  0224                     u1991:
  1585  0224  2A2A               	goto	l2287
  1586  0225                     u1990:
  1587  0225                     l2285:
  1588  0225  3001               	movlw	1
  1589  0226  0020               	movlb	0	; select bank0
  1590  0227  00EA               	movwf	_flag_R
  1591  0228  3000               	movlw	0
  1592  0229  00EB               	movwf	_flag_R+1
  1593  022A                     l2287:
  1594                           
  1595                           ;Q5.c: 360:                 if((flag_sw3==1)&&(flag_R==1))flag_P=1;
  1596  022A  037B               	decf	_flag_sw3,w
  1597  022B  047C               	iorwf	_flag_sw3+1,w
  1598  022C  1D03               	btfss	3,2
  1599  022D  2A2F               	goto	u2001
  1600  022E  2A30               	goto	u2000
  1601  022F                     u2001:
  1602  022F  2A48               	goto	l208
  1603  0230                     u2000:
  1604  0230                     l2289:
  1605  0230  0020               	movlb	0	; select bank0
  1606  0231  036A               	decf	_flag_R,w
  1607  0232  046B               	iorwf	_flag_R+1,w
  1608  0233  1D03               	btfss	3,2
  1609  0234  2A36               	goto	u2011
  1610  0235  2A37               	goto	u2010
  1611  0236                     u2011:
  1612  0236  2A48               	goto	l208
  1613  0237                     u2010:
  1614  0237  2A16               	goto	l2279
  1615  0238                     l2295:
  1616                           
  1617                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1618                           ; Switch size 1, requested type "simple"
  1619                           ; Number of cases is 1, Range of values is 0 to 0
  1620                           ; switch strategies available:
  1621                           ; Name         Instructions Cycles
  1622                           ; simple_byte            4     3 (average)
  1623                           ; direct_byte            8     6 (fixed)
  1624                           ; jumptable            260     6 (fixed)
  1625                           ;	Chosen strategy is simple_byte
  1626  0238  0879               	movf	tact@mode+1,w
  1627  0239  3A00               	xorlw	0	; case 0
  1628  023A  1903               	skipnz
  1629  023B  2A3D               	goto	l2673
  1630  023C  2A48               	goto	l208
  1631  023D                     l2673:
  1632                           
  1633                           ; Switch size 1, requested type "simple"
  1634                           ; Number of cases is 3, Range of values is 0 to 2
  1635                           ; switch strategies available:
  1636                           ; Name         Instructions Cycles
  1637                           ; simple_byte           10     6 (average)
  1638                           ; direct_byte           12     6 (fixed)
  1639                           ; jumptable            260     6 (fixed)
  1640                           ;	Chosen strategy is simple_byte
  1641  023D  0878               	movf	tact@mode,w
  1642  023E  3A00               	xorlw	0	; case 0
  1643  023F  1903               	skipnz
  1644  0240  29FE               	goto	l2269
  1645  0241  3A01               	xorlw	1	; case 1
  1646  0242  1903               	skipnz
  1647  0243  2A0D               	goto	l2275
  1648  0244  3A03               	xorlw	3	; case 2
  1649  0245  1903               	skipnz
  1650  0246  2A1C               	goto	l2281
  1651  0247  2A48               	goto	l208
  1652  0248                     l208:
  1653  0248  0008               	return
  1654  0249                     __end_of_tact:
  1655                           
  1656                           	psect	text3
  1657  01C0                     __ptext3:	
  1658 ;; *************** function _tactsw *****************
  1659 ;; Defined at:
  1660 ;;		line 331 in file "Q5.c"
  1661 ;; Parameters:    Size  Location     Type
  1662 ;;		None
  1663 ;; Auto vars:     Size  Location     Type
  1664 ;;  a               2    6[COMMON] unsigned short 
  1665 ;;  c               2    4[COMMON] unsigned short 
  1666 ;;  b               2    2[COMMON] unsigned short 
  1667 ;; Return value:  Size  Location     Type
  1668 ;;                  1    wreg      void 
  1669 ;; Registers used:
  1670 ;;		wreg, status,2, status,0
  1671 ;; Tracked objects:
  1672 ;;		On entry : 0/0
  1673 ;;		On exit  : 0/0
  1674 ;;		Unchanged: 0/0
  1675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1677 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1678 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1679 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1680 ;;Total ram usage:        8 bytes
  1681 ;; Hardware stack levels used:    1
  1682 ;; This function calls:
  1683 ;;		Nothing
  1684 ;; This function is called by:
  1685 ;;		_tact
  1686 ;; This function uses a non-reentrant model
  1687 ;;
  1688                           
  1689                           
  1690                           ;psect for function _tactsw
  1691  01C0                     _tactsw:
  1692  01C0                     l1811:	
  1693                           ;incstack = 0
  1694                           ; Regs used in _tactsw: [wreg+status,2+status,0]
  1695                           
  1696                           
  1697                           ;Q5.c: 333:     unsigned short a,b,c;;Q5.c: 334:     b=c=0;
  1698  01C0  01F4               	clrf	tactsw@c
  1699  01C1  01F5               	clrf	tactsw@c+1
  1700  01C2  01F2               	clrf	tactsw@b
  1701  01C3  01F3               	clrf	tactsw@b+1
  1702  01C4                     l1813:
  1703                           
  1704                           ;Q5.c: 336:             a=RA2;
  1705  01C4  1003               	clrc
  1706  01C5  0020               	movlb	0	; select bank0
  1707  01C6  190C               	btfsc	12,2	;volatile
  1708  01C7  1403               	setc
  1709  01C8  3000               	movlw	0
  1710  01C9  3D09               	addwfc	9,w
  1711  01CA  00F0               	movwf	??_tactsw
  1712  01CB  01F1               	clrf	??_tactsw+1
  1713  01CC  0870               	movf	??_tactsw,w
  1714  01CD  00F6               	movwf	tactsw@a
  1715  01CE  0871               	movf	??_tactsw+1,w
  1716  01CF  00F7               	movwf	tactsw@a+1
  1717  01D0                     l1815:
  1718                           
  1719                           ;Q5.c: 337:             if(b==a)++c;
  1720  01D0  0877               	movf	tactsw@a+1,w
  1721  01D1  0673               	xorwf	tactsw@b+1,w
  1722  01D2  1D03               	skipz
  1723  01D3  29D6               	goto	u1285
  1724  01D4  0876               	movf	tactsw@a,w
  1725  01D5  0672               	xorwf	tactsw@b,w
  1726  01D6                     u1285:
  1727  01D6  1D03               	skipz
  1728  01D7  29D9               	goto	u1281
  1729  01D8  29DA               	goto	u1280
  1730  01D9                     u1281:
  1731  01D9  29DF               	goto	l1819
  1732  01DA                     u1280:
  1733  01DA                     l1817:
  1734  01DA  3001               	movlw	1
  1735  01DB  07F4               	addwf	tactsw@c,f
  1736  01DC  3000               	movlw	0
  1737  01DD  3DF5               	addwfc	tactsw@c+1,f
  1738  01DE  29E1               	goto	l1821
  1739  01DF                     l1819:
  1740  01DF  01F4               	clrf	tactsw@c
  1741  01E0  01F5               	clrf	tactsw@c+1
  1742  01E1                     l1821:
  1743                           
  1744                           ;Q5.c: 339:             if(c>10){flag_sw3=(~a)&0x01;return;}
  1745  01E1  3000               	movlw	0
  1746  01E2  0275               	subwf	tactsw@c+1,w
  1747  01E3  300B               	movlw	11
  1748  01E4  1903               	skipnz
  1749  01E5  0274               	subwf	tactsw@c,w
  1750  01E6  1C03               	skipc
  1751  01E7  29E9               	goto	u1291
  1752  01E8  29EA               	goto	u1290
  1753  01E9                     u1291:
  1754  01E9  29F7               	goto	l1827
  1755  01EA                     u1290:
  1756  01EA                     l1823:
  1757  01EA  0877               	movf	tactsw@a+1,w
  1758  01EB  00F1               	movwf	??_tactsw+1
  1759  01EC  0876               	movf	tactsw@a,w
  1760  01ED  00F0               	movwf	??_tactsw
  1761  01EE  09F0               	comf	??_tactsw,f
  1762  01EF  09F1               	comf	??_tactsw+1,f
  1763  01F0  3001               	movlw	1
  1764  01F1  0570               	andwf	??_tactsw,w
  1765  01F2  00FB               	movwf	_flag_sw3
  1766  01F3  3000               	movlw	0
  1767  01F4  0571               	andwf	??_tactsw+1,w
  1768  01F5  00FC               	movwf	_flag_sw3+1
  1769  01F6  29FC               	goto	l193
  1770  01F7                     l1827:
  1771                           
  1772                           ;Q5.c: 340:             b=a;
  1773  01F7  0877               	movf	tactsw@a+1,w
  1774  01F8  00F3               	movwf	tactsw@b+1
  1775  01F9  0876               	movf	tactsw@a,w
  1776  01FA  00F2               	movwf	tactsw@b
  1777  01FB  29C4               	goto	l1813
  1778  01FC                     l193:
  1779  01FC  0008               	return
  1780  01FD                     __end_of_tactsw:
  1781                           
  1782                           	psect	text4
  1783  016E                     __ptext4:	
  1784 ;; *************** function _portinit *****************
  1785 ;; Defined at:
  1786 ;;		line 160 in file "Q5.c"
  1787 ;; Parameters:    Size  Location     Type
  1788 ;;		None
  1789 ;; Auto vars:     Size  Location     Type
  1790 ;;		None
  1791 ;; Return value:  Size  Location     Type
  1792 ;;                  1    wreg      void 
  1793 ;; Registers used:
  1794 ;;		wreg, status,2
  1795 ;; Tracked objects:
  1796 ;;		On entry : 0/0
  1797 ;;		On exit  : 0/0
  1798 ;;		Unchanged: 0/0
  1799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1804 ;;Total ram usage:        0 bytes
  1805 ;; Hardware stack levels used:    1
  1806 ;; This function calls:
  1807 ;;		Nothing
  1808 ;; This function is called by:
  1809 ;;		_main
  1810 ;; This function uses a non-reentrant model
  1811 ;;
  1812                           
  1813                           
  1814                           ;psect for function _portinit
  1815  016E                     _portinit:
  1816  016E                     l1925:	
  1817                           ;incstack = 0
  1818                           ; Regs used in _portinit: [wreg+status,2]
  1819                           
  1820                           
  1821                           ;Q5.c: 163:     ANSELA=0x00;
  1822  016E  0023               	movlb	3	; select bank3
  1823  016F  018C               	clrf	12	;volatile
  1824                           
  1825                           ;Q5.c: 164:     ANSELB=0x00;
  1826  0170  018D               	clrf	13	;volatile
  1827  0171                     l1927:
  1828                           
  1829                           ;Q5.c: 166:     PORTA=0x07;
  1830  0171  3007               	movlw	7
  1831  0172  0020               	movlb	0	; select bank0
  1832  0173  008C               	movwf	12	;volatile
  1833  0174                     l1929:
  1834                           
  1835                           ;Q5.c: 167:     TRISA=0x07;
  1836  0174  3007               	movlw	7
  1837  0175  0021               	movlb	1	; select bank1
  1838  0176  008C               	movwf	12	;volatile
  1839                           
  1840                           ;Q5.c: 168:     PORTB=0x00;
  1841  0177  0020               	movlb	0	; select bank0
  1842  0178  018D               	clrf	13	;volatile
  1843                           
  1844                           ;Q5.c: 169:     TRISB=0x00;
  1845  0179  0021               	movlb	1	; select bank1
  1846  017A  018D               	clrf	13	;volatile
  1847  017B                     l1931:
  1848                           
  1849                           ;Q5.c: 170:     PORTC=0x07;
  1850  017B  3007               	movlw	7
  1851  017C  0020               	movlb	0	; select bank0
  1852  017D  008E               	movwf	14	;volatile
  1853  017E                     l1933:
  1854                           
  1855                           ;Q5.c: 171:     TRISC=0x00;
  1856  017E  0021               	movlb	1	; select bank1
  1857  017F  018E               	clrf	14	;volatile
  1858  0180                     l95:
  1859  0180  0008               	return
  1860  0181                     __end_of_portinit:
  1861                           
  1862                           	psect	text5
  1863  0611                     __ptext5:	
  1864 ;; *************** function _hen7 *****************
  1865 ;; Defined at:
  1866 ;;		line 252 in file "Q5.c"
  1867 ;; Parameters:    Size  Location     Type
  1868 ;;  value           2    4[BANK0 ] int 
  1869 ;;  ns1             2    6[BANK0 ] unsigned short 
  1870 ;; Auto vars:     Size  Location     Type
  1871 ;;  n               2   22[BANK0 ] unsigned int 
  1872 ;;  m               2   20[BANK0 ] unsigned int 
  1873 ;;  l               2   18[BANK0 ] unsigned int 
  1874 ;;  value100        2   16[BANK0 ] int 
  1875 ;;  value10         2   14[BANK0 ] int 
  1876 ;;  value1          2   12[BANK0 ] int 
  1877 ;; Return value:  Size  Location     Type
  1878 ;;                  1    wreg      void 
  1879 ;; Registers used:
  1880 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1881 ;; Tracked objects:
  1882 ;;		On entry : 0/0
  1883 ;;		On exit  : 0/0
  1884 ;;		Unchanged: 0/0
  1885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1886 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1887 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1888 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1889 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1890 ;;Total ram usage:       20 bytes
  1891 ;; Hardware stack levels used:    1
  1892 ;; Hardware stack levels required when called:    1
  1893 ;; This function calls:
  1894 ;;		___awdiv
  1895 ;;		___awmod
  1896 ;;		___wmul
  1897 ;; This function is called by:
  1898 ;;		_main
  1899 ;; This function uses a non-reentrant model
  1900 ;;
  1901                           
  1902                           
  1903                           ;psect for function _hen7
  1904  0611                     _hen7:
  1905  0611                     l2121:	
  1906                           ;incstack = 0
  1907                           ; Regs used in _hen7: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1908                           
  1909                           
  1910                           ;Q5.c: 252: void hen7(int value,unsigned short ns1);Q5.c: 253: {;Q5.c: 254:     int valu
      +                          e100,value10,value1;;Q5.c: 255:     unsigned int l,m,n;;Q5.c: 256:     fugou=0;
  1911  0611  0020               	movlb	0	; select bank0
  1912  0612  01D0               	clrf	_fugou
  1913  0613  01D1               	clrf	_fugou+1
  1914  0614                     l2123:
  1915                           
  1916                           ;Q5.c: 257:     if(value<0)fugou=1;
  1917  0614  1FA5               	btfss	hen7@value+1,7
  1918  0615  2E17               	goto	u1771
  1919  0616  2E18               	goto	u1770
  1920  0617                     u1771:
  1921  0617  2E1C               	goto	l2127
  1922  0618                     u1770:
  1923  0618                     l2125:
  1924  0618  3001               	movlw	1
  1925  0619  00D0               	movwf	_fugou
  1926  061A  3000               	movlw	0
  1927  061B  00D1               	movwf	_fugou+1
  1928  061C                     l2127:
  1929                           
  1930                           ;Q5.c: 258:     if(fugou==1){
  1931  061C  0350               	decf	_fugou,w
  1932  061D  0451               	iorwf	_fugou+1,w
  1933  061E  1D03               	btfss	3,2
  1934  061F  2E21               	goto	u1781
  1935  0620  2E22               	goto	u1780
  1936  0621                     u1781:
  1937  0621  2FCA               	goto	l2261
  1938  0622                     u1780:
  1939  0622                     l2129:
  1940                           
  1941                           ;Q5.c: 259:         value=(~(value-1));
  1942  0622  0824               	movf	hen7@value,w
  1943  0623  3EFF               	addlw	255
  1944  0624  00A8               	movwf	??_hen7
  1945  0625  30FF               	movlw	255
  1946  0626  3D25               	addwfc	hen7@value+1,w
  1947  0627  00A9               	movwf	??_hen7+1
  1948  0628  0928               	comf	??_hen7,w
  1949  0629  00A4               	movwf	hen7@value
  1950  062A  0929               	comf	??_hen7+1,w
  1951  062B  00A5               	movwf	hen7@value+1
  1952  062C  2FCA               	goto	l2261
  1953  062D                     l2131:
  1954                           
  1955                           ;Q5.c: 263:                 value100=value/100;
  1956  062D  3064               	movlw	100
  1957  062E  00F6               	movwf	___awdiv@divisor
  1958  062F  3000               	movlw	0
  1959  0630  00F7               	movwf	___awdiv@divisor+1
  1960  0631  0825               	movf	hen7@value+1,w
  1961  0632  00F9               	movwf	___awdiv@dividend+1
  1962  0633  0824               	movf	hen7@value,w
  1963  0634  00F8               	movwf	___awdiv@dividend
  1964  0635  3183  2338  3186   	fcall	___awdiv
  1965  0638  0877               	movf	?___awdiv+1,w
  1966  0639  0020               	movlb	0	; select bank0
  1967  063A  00B1               	movwf	hen7@value100+1
  1968  063B  0876               	movf	?___awdiv,w
  1969  063C  00B0               	movwf	hen7@value100
  1970                           
  1971                           ;Q5.c: 264:                 value10 =(value-(value100*100))/10;
  1972  063D  300A               	movlw	10
  1973  063E  00F6               	movwf	___awdiv@divisor
  1974  063F  3000               	movlw	0
  1975  0640  00F7               	movwf	___awdiv@divisor+1
  1976  0641  0831               	movf	hen7@value100+1,w
  1977  0642  00F1               	movwf	___wmul@multiplier+1
  1978  0643  0830               	movf	hen7@value100,w
  1979  0644  00F0               	movwf	___wmul@multiplier
  1980  0645  309C               	movlw	156
  1981  0646  00F2               	movwf	___wmul@multiplicand
  1982  0647  30FF               	movlw	255
  1983  0648  00F3               	movwf	___wmul@multiplicand+1
  1984  0649  3181  2181  3186   	fcall	___wmul
  1985  064C  0020               	movlb	0	; select bank0
  1986  064D  0824               	movf	hen7@value,w
  1987  064E  0770               	addwf	?___wmul,w
  1988  064F  00F8               	movwf	___awdiv@dividend
  1989  0650  0825               	movf	hen7@value+1,w
  1990  0651  3D71               	addwfc	?___wmul+1,w
  1991  0652  00F9               	movwf	___awdiv@dividend+1
  1992  0653  3183  2338  3186   	fcall	___awdiv
  1993  0656  0877               	movf	?___awdiv+1,w
  1994  0657  0020               	movlb	0	; select bank0
  1995  0658  00AF               	movwf	hen7@value10+1
  1996  0659  0876               	movf	?___awdiv,w
  1997  065A  00AE               	movwf	hen7@value10
  1998                           
  1999                           ;Q5.c: 265:                 value1 =value%10;
  2000  065B  300A               	movlw	10
  2001  065C  00F0               	movwf	___awmod@divisor
  2002  065D  3000               	movlw	0
  2003  065E  00F1               	movwf	___awmod@divisor+1
  2004  065F  0825               	movf	hen7@value+1,w
  2005  0660  00F3               	movwf	___awmod@dividend+1
  2006  0661  0824               	movf	hen7@value,w
  2007  0662  00F2               	movwf	___awmod@dividend
  2008  0663  3182  22E5  3186   	fcall	___awmod
  2009  0666  0871               	movf	?___awmod+1,w
  2010  0667  0020               	movlb	0	; select bank0
  2011  0668  00AD               	movwf	hen7@value1+1
  2012  0669  0870               	movf	?___awmod,w
  2013  066A  00AC               	movwf	hen7@value1
  2014  066B                     l2133:
  2015                           
  2016                           ;Q5.c: 266:                 code1000=(0x01|0x02|0x04|0x08|0x10|0x20);
  2017  066B  303F               	movlw	63
  2018  066C  00D8               	movwf	_code1000
  2019  066D  3000               	movlw	0
  2020  066E  00D9               	movwf	_code1000+1
  2021  066F                     l2135:
  2022                           
  2023                           ;Q5.c: 267:                 for(l=0;l<=2;++l){
  2024  066F  01B2               	clrf	hen7@l
  2025  0670  01B3               	clrf	hen7@l+1
  2026  0671                     l2141:
  2027                           
  2028                           ;Q5.c: 268:                     if(value100==l)code100=samp[l];
  2029  0671  0833               	movf	hen7@l+1,w
  2030  0672  0631               	xorwf	hen7@value100+1,w
  2031  0673  1D03               	skipz
  2032  0674  2E77               	goto	u1795
  2033  0675  0832               	movf	hen7@l,w
  2034  0676  0630               	xorwf	hen7@value100,w
  2035  0677                     u1795:
  2036  0677  1D03               	skipz
  2037  0678  2E7A               	goto	u1791
  2038  0679  2E7B               	goto	u1790
  2039  067A                     u1791:
  2040  067A  2E83               	goto	l2145
  2041  067B                     u1790:
  2042  067B                     l2143:
  2043  067B  3532               	lslf	hen7@l,w
  2044  067C  3EA0               	addlw	(low (_samp| 0))& (0+255)
  2045  067D  0086               	movwf	6
  2046  067E  0187               	clrf	7
  2047  067F  3F40               	moviw [0]fsr1
  2048  0680  00D6               	movwf	_code100
  2049  0681  3F41               	moviw [1]fsr1
  2050  0682  00D7               	movwf	_code100+1
  2051  0683                     l2145:
  2052                           
  2053                           ;Q5.c: 269:                 }
  2054  0683  3001               	movlw	1
  2055  0684  07B2               	addwf	hen7@l,f
  2056  0685  3000               	movlw	0
  2057  0686  3DB3               	addwfc	hen7@l+1,f
  2058  0687                     l2147:
  2059  0687  3000               	movlw	0
  2060  0688  0233               	subwf	hen7@l+1,w
  2061  0689  3003               	movlw	3
  2062  068A  1903               	skipnz
  2063  068B  0232               	subwf	hen7@l,w
  2064  068C  1C03               	skipc
  2065  068D  2E8F               	goto	u1801
  2066  068E  2E90               	goto	u1800
  2067  068F                     u1801:
  2068  068F  2E71               	goto	l2141
  2069  0690                     u1800:
  2070  0690                     l2149:
  2071                           
  2072                           ;Q5.c: 270:                 for(m=0;m<=9;++m){
  2073  0690  01B4               	clrf	hen7@m
  2074  0691  01B5               	clrf	hen7@m+1
  2075  0692                     l2155:
  2076                           
  2077                           ;Q5.c: 271:                     if(value10==m)code10=samp[m];
  2078  0692  0835               	movf	hen7@m+1,w
  2079  0693  062F               	xorwf	hen7@value10+1,w
  2080  0694  1D03               	skipz
  2081  0695  2E98               	goto	u1815
  2082  0696  0834               	movf	hen7@m,w
  2083  0697  062E               	xorwf	hen7@value10,w
  2084  0698                     u1815:
  2085  0698  1D03               	skipz
  2086  0699  2E9B               	goto	u1811
  2087  069A  2E9C               	goto	u1810
  2088  069B                     u1811:
  2089  069B  2EA4               	goto	l2159
  2090  069C                     u1810:
  2091  069C                     l2157:
  2092  069C  3534               	lslf	hen7@m,w
  2093  069D  3EA0               	addlw	(low (_samp| 0))& (0+255)
  2094  069E  0086               	movwf	6
  2095  069F  0187               	clrf	7
  2096  06A0  3F40               	moviw [0]fsr1
  2097  06A1  00D4               	movwf	_code10
  2098  06A2  3F41               	moviw [1]fsr1
  2099  06A3  00D5               	movwf	_code10+1
  2100  06A4                     l2159:
  2101                           
  2102                           ;Q5.c: 272:                 }
  2103  06A4  3001               	movlw	1
  2104  06A5  07B4               	addwf	hen7@m,f
  2105  06A6  3000               	movlw	0
  2106  06A7  3DB5               	addwfc	hen7@m+1,f
  2107  06A8                     l2161:
  2108  06A8  3000               	movlw	0
  2109  06A9  0235               	subwf	hen7@m+1,w
  2110  06AA  300A               	movlw	10
  2111  06AB  1903               	skipnz
  2112  06AC  0234               	subwf	hen7@m,w
  2113  06AD  1C03               	skipc
  2114  06AE  2EB0               	goto	u1821
  2115  06AF  2EB1               	goto	u1820
  2116  06B0                     u1821:
  2117  06B0  2E92               	goto	l2155
  2118  06B1                     u1820:
  2119  06B1                     l2163:
  2120                           
  2121                           ;Q5.c: 273:                 for(n=0;n<=9;++n){
  2122  06B1  01B6               	clrf	hen7@n
  2123  06B2  01B7               	clrf	hen7@n+1
  2124  06B3                     l2169:
  2125                           
  2126                           ;Q5.c: 274:                     if(value1==n)code1=samp[n];
  2127  06B3  0837               	movf	hen7@n+1,w
  2128  06B4  062D               	xorwf	hen7@value1+1,w
  2129  06B5  1D03               	skipz
  2130  06B6  2EB9               	goto	u1835
  2131  06B7  0836               	movf	hen7@n,w
  2132  06B8  062C               	xorwf	hen7@value1,w
  2133  06B9                     u1835:
  2134  06B9  1D03               	skipz
  2135  06BA  2EBC               	goto	u1831
  2136  06BB  2EBD               	goto	u1830
  2137  06BC                     u1831:
  2138  06BC  2EC5               	goto	l2173
  2139  06BD                     u1830:
  2140  06BD                     l2171:
  2141  06BD  3536               	lslf	hen7@n,w
  2142  06BE  3EA0               	addlw	(low (_samp| 0))& (0+255)
  2143  06BF  0086               	movwf	6
  2144  06C0  0187               	clrf	7
  2145  06C1  3F40               	moviw [0]fsr1
  2146  06C2  00D2               	movwf	_code1
  2147  06C3  3F41               	moviw [1]fsr1
  2148  06C4  00D3               	movwf	_code1+1
  2149  06C5                     l2173:
  2150                           
  2151                           ;Q5.c: 275:                 }
  2152  06C5  3001               	movlw	1
  2153  06C6  07B6               	addwf	hen7@n,f
  2154  06C7  3000               	movlw	0
  2155  06C8  3DB7               	addwfc	hen7@n+1,f
  2156  06C9                     l2175:
  2157  06C9  3000               	movlw	0
  2158  06CA  0237               	subwf	hen7@n+1,w
  2159  06CB  300A               	movlw	10
  2160  06CC  1903               	skipnz
  2161  06CD  0236               	subwf	hen7@n,w
  2162  06CE  1C03               	skipc
  2163  06CF  2ED1               	goto	u1841
  2164  06D0  2ED2               	goto	u1840
  2165  06D1                     u1841:
  2166  06D1  2EB3               	goto	l2169
  2167  06D2                     u1840:
  2168  06D2  2FDA               	goto	l170
  2169  06D3                     l2177:
  2170                           
  2171                           ;Q5.c: 278:                 value100=value>>6;
  2172  06D3  0825               	movf	hen7@value+1,w
  2173  06D4  00A9               	movwf	??_hen7+1
  2174  06D5  0824               	movf	hen7@value,w
  2175  06D6  00A8               	movwf	??_hen7
  2176  06D7  3006               	movlw	6
  2177  06D8  00AA               	movwf	??_hen7+2
  2178  06D9                     u1855:
  2179  06D9  0D29               	rlf	??_hen7+1,w
  2180  06DA  0CA9               	rrf	??_hen7+1,f
  2181  06DB  0CA8               	rrf	??_hen7,f
  2182  06DC  0BAA               	decfsz	??_hen7+2,f
  2183  06DD  2ED9               	goto	u1855
  2184  06DE  0828               	movf	??_hen7,w
  2185  06DF  00B0               	movwf	hen7@value100
  2186  06E0  0829               	movf	??_hen7+1,w
  2187  06E1  00B1               	movwf	hen7@value100+1
  2188                           
  2189                           ;Q5.c: 279:                 value10 =(value-(value100<<6))>>3;
  2190  06E2  0831               	movf	hen7@value100+1,w
  2191  06E3  00A9               	movwf	??_hen7+1
  2192  06E4  0830               	movf	hen7@value100,w
  2193  06E5  00A8               	movwf	??_hen7
  2194  06E6  3006               	movlw	6
  2195  06E7                     u1865:
  2196  06E7  35A8               	lslf	??_hen7,f
  2197  06E8  0DA9               	rlf	??_hen7+1,f
  2198  06E9  0B89               	decfsz	9,f
  2199  06EA  2EE7               	goto	u1865
  2200  06EB  0828               	movf	??_hen7,w
  2201  06EC  0224               	subwf	hen7@value,w
  2202  06ED  00AA               	movwf	??_hen7+2
  2203  06EE  0829               	movf	??_hen7+1,w
  2204  06EF  3B25               	subwfb	hen7@value+1,w
  2205  06F0  00AB               	movwf	??_hen7+3
  2206  06F1  0D2B               	rlf	??_hen7+3,w
  2207  06F2  0CAB               	rrf	??_hen7+3,f
  2208  06F3  0CAA               	rrf	??_hen7+2,f
  2209  06F4  0D2B               	rlf	??_hen7+3,w
  2210  06F5  0CAB               	rrf	??_hen7+3,f
  2211  06F6  0CAA               	rrf	??_hen7+2,f
  2212  06F7  0D2B               	rlf	??_hen7+3,w
  2213  06F8  0CAB               	rrf	??_hen7+3,f
  2214  06F9  0CAA               	rrf	??_hen7+2,f
  2215  06FA  082A               	movf	??_hen7+2,w
  2216  06FB  00AE               	movwf	hen7@value10
  2217  06FC  082B               	movf	??_hen7+3,w
  2218  06FD  00AF               	movwf	hen7@value10+1
  2219  06FE                     l2179:
  2220                           
  2221                           ;Q5.c: 280:                 value =value%8;
  2222  06FE  3007               	movlw	7
  2223  06FF  0524               	andwf	hen7@value,w
  2224  0700  00A4               	movwf	hen7@value
  2225  0701  3000               	movlw	0
  2226  0702  0525               	andwf	hen7@value+1,w
  2227  0703  00A5               	movwf	hen7@value+1
  2228  0704                     l2181:
  2229                           
  2230                           ;Q5.c: 281:                 code1000=(0x01|0x02|0x04|0x08|0x10|0x20);
  2231  0704  303F               	movlw	63
  2232  0705  00D8               	movwf	_code1000
  2233  0706  3000               	movlw	0
  2234  0707  00D9               	movwf	_code1000+1
  2235  0708                     l2183:
  2236                           
  2237                           ;Q5.c: 282:                 for(l=0;l<=3;++l){
  2238  0708  01B2               	clrf	hen7@l
  2239  0709  01B3               	clrf	hen7@l+1
  2240  070A                     l2189:
  2241                           
  2242                           ;Q5.c: 283:                     if(value100==l)code100=samp[l];
  2243  070A  0833               	movf	hen7@l+1,w
  2244  070B  0631               	xorwf	hen7@value100+1,w
  2245  070C  1D03               	skipz
  2246  070D  2F10               	goto	u1875
  2247  070E  0832               	movf	hen7@l,w
  2248  070F  0630               	xorwf	hen7@value100,w
  2249  0710                     u1875:
  2250  0710  1D03               	skipz
  2251  0711  2F13               	goto	u1871
  2252  0712  2F14               	goto	u1870
  2253  0713                     u1871:
  2254  0713  2F1C               	goto	l2193
  2255  0714                     u1870:
  2256  0714                     l2191:
  2257  0714  3532               	lslf	hen7@l,w
  2258  0715  3EA0               	addlw	(low (_samp| 0))& (0+255)
  2259  0716  0086               	movwf	6
  2260  0717  0187               	clrf	7
  2261  0718  3F40               	moviw [0]fsr1
  2262  0719  00D6               	movwf	_code100
  2263  071A  3F41               	moviw [1]fsr1
  2264  071B  00D7               	movwf	_code100+1
  2265  071C                     l2193:
  2266                           
  2267                           ;Q5.c: 284:                 }
  2268  071C  3001               	movlw	1
  2269  071D  07B2               	addwf	hen7@l,f
  2270  071E  3000               	movlw	0
  2271  071F  3DB3               	addwfc	hen7@l+1,f
  2272  0720                     l2195:
  2273  0720  3000               	movlw	0
  2274  0721  0233               	subwf	hen7@l+1,w
  2275  0722  3004               	movlw	4
  2276  0723  1903               	skipnz
  2277  0724  0232               	subwf	hen7@l,w
  2278  0725  1C03               	skipc
  2279  0726  2F28               	goto	u1881
  2280  0727  2F29               	goto	u1880
  2281  0728                     u1881:
  2282  0728  2F0A               	goto	l2189
  2283  0729                     u1880:
  2284  0729                     l2197:
  2285                           
  2286                           ;Q5.c: 285:                 for(m=0;m<=7;++m){
  2287  0729  01B4               	clrf	hen7@m
  2288  072A  01B5               	clrf	hen7@m+1
  2289  072B                     l2203:
  2290                           
  2291                           ;Q5.c: 286:                     if(value10==m)code10=samp[m];
  2292  072B  0835               	movf	hen7@m+1,w
  2293  072C  062F               	xorwf	hen7@value10+1,w
  2294  072D  1D03               	skipz
  2295  072E  2F31               	goto	u1895
  2296  072F  0834               	movf	hen7@m,w
  2297  0730  062E               	xorwf	hen7@value10,w
  2298  0731                     u1895:
  2299  0731  1D03               	skipz
  2300  0732  2F34               	goto	u1891
  2301  0733  2F35               	goto	u1890
  2302  0734                     u1891:
  2303  0734  2F3D               	goto	l2207
  2304  0735                     u1890:
  2305  0735                     l2205:
  2306  0735  3534               	lslf	hen7@m,w
  2307  0736  3EA0               	addlw	(low (_samp| 0))& (0+255)
  2308  0737  0086               	movwf	6
  2309  0738  0187               	clrf	7
  2310  0739  3F40               	moviw [0]fsr1
  2311  073A  00D4               	movwf	_code10
  2312  073B  3F41               	moviw [1]fsr1
  2313  073C  00D5               	movwf	_code10+1
  2314  073D                     l2207:
  2315                           
  2316                           ;Q5.c: 287:                 }
  2317  073D  3001               	movlw	1
  2318  073E  07B4               	addwf	hen7@m,f
  2319  073F  3000               	movlw	0
  2320  0740  3DB5               	addwfc	hen7@m+1,f
  2321  0741                     l2209:
  2322  0741  3000               	movlw	0
  2323  0742  0235               	subwf	hen7@m+1,w
  2324  0743  3008               	movlw	8
  2325  0744  1903               	skipnz
  2326  0745  0234               	subwf	hen7@m,w
  2327  0746  1C03               	skipc
  2328  0747  2F49               	goto	u1901
  2329  0748  2F4A               	goto	u1900
  2330  0749                     u1901:
  2331  0749  2F2B               	goto	l2203
  2332  074A                     u1900:
  2333  074A                     l2211:
  2334                           
  2335                           ;Q5.c: 288:                 for(n=0;n<=7;++n){
  2336  074A  01B6               	clrf	hen7@n
  2337  074B  01B7               	clrf	hen7@n+1
  2338  074C                     l2217:
  2339                           
  2340                           ;Q5.c: 289:                     if(value1==n)code1=samp[n];
  2341  074C  0837               	movf	hen7@n+1,w
  2342  074D  062D               	xorwf	hen7@value1+1,w
  2343  074E  1D03               	skipz
  2344  074F  2F52               	goto	u1915
  2345  0750  0836               	movf	hen7@n,w
  2346  0751  062C               	xorwf	hen7@value1,w
  2347  0752                     u1915:
  2348  0752  1D03               	skipz
  2349  0753  2F55               	goto	u1911
  2350  0754  2F56               	goto	u1910
  2351  0755                     u1911:
  2352  0755  2F5E               	goto	l2221
  2353  0756                     u1910:
  2354  0756                     l2219:
  2355  0756  3536               	lslf	hen7@n,w
  2356  0757  3EA0               	addlw	(low (_samp| 0))& (0+255)
  2357  0758  0086               	movwf	6
  2358  0759  0187               	clrf	7
  2359  075A  3F40               	moviw [0]fsr1
  2360  075B  00D2               	movwf	_code1
  2361  075C  3F41               	moviw [1]fsr1
  2362  075D  00D3               	movwf	_code1+1
  2363  075E                     l2221:
  2364                           
  2365                           ;Q5.c: 290:                 }
  2366  075E  3001               	movlw	1
  2367  075F  07B6               	addwf	hen7@n,f
  2368  0760  3000               	movlw	0
  2369  0761  3DB7               	addwfc	hen7@n+1,f
  2370  0762                     l2223:
  2371  0762  3000               	movlw	0
  2372  0763  0237               	subwf	hen7@n+1,w
  2373  0764  3008               	movlw	8
  2374  0765  1903               	skipnz
  2375  0766  0236               	subwf	hen7@n,w
  2376  0767  1C03               	skipc
  2377  0768  2F6A               	goto	u1921
  2378  0769  2F6B               	goto	u1920
  2379  076A                     u1921:
  2380  076A  2F4C               	goto	l2217
  2381  076B                     u1920:
  2382  076B  2FDA               	goto	l170
  2383  076C                     l2225:
  2384                           
  2385                           ;Q5.c: 293:                 code1000=(0x01|0x02|0x04|0x08|0x10|0x20);
  2386  076C  303F               	movlw	63
  2387  076D  00D8               	movwf	_code1000
  2388  076E  3000               	movlw	0
  2389  076F  00D9               	movwf	_code1000+1
  2390                           
  2391                           ;Q5.c: 294:                 code100=(0x01|0x02|0x04|0x08|0x10|0x20);
  2392  0770  303F               	movlw	63
  2393  0771  00D6               	movwf	_code100
  2394  0772  3000               	movlw	0
  2395  0773  00D7               	movwf	_code100+1
  2396  0774                     l2227:
  2397                           
  2398                           ;Q5.c: 295:                 value10 =value>>4;
  2399  0774  0E24               	swapf	hen7@value,w
  2400  0775  390F               	andlw	15
  2401  0776  00AE               	movwf	hen7@value10
  2402  0777  0E25               	swapf	hen7@value+1,w
  2403  0778  39F0               	andlw	240
  2404  0779  04AE               	iorwf	hen7@value10,f
  2405  077A  0E25               	swapf	hen7@value+1,w
  2406  077B  390F               	andlw	15
  2407  077C  00AF               	movwf	hen7@value10+1
  2408  077D  30F0               	movlw	240
  2409  077E  1DAF               	btfss	hen7@value10+1,3
  2410  077F  3000               	movlw	0
  2411  0780  04AF               	iorwf	hen7@value10+1,f
  2412  0781                     l2229:
  2413                           
  2414                           ;Q5.c: 296:                 value1 =value%16;
  2415  0781  300F               	movlw	15
  2416  0782  0524               	andwf	hen7@value,w
  2417  0783  00AC               	movwf	hen7@value1
  2418  0784  3000               	movlw	0
  2419  0785  0525               	andwf	hen7@value+1,w
  2420  0786  00AD               	movwf	hen7@value1+1
  2421  0787                     l2231:
  2422                           
  2423                           ;Q5.c: 297:                 for(m=0;m<=15;++m){
  2424  0787  01B4               	clrf	hen7@m
  2425  0788  01B5               	clrf	hen7@m+1
  2426  0789                     l2237:
  2427                           
  2428                           ;Q5.c: 298:                     if(value10==m)code10=samp[m];
  2429  0789  0835               	movf	hen7@m+1,w
  2430  078A  062F               	xorwf	hen7@value10+1,w
  2431  078B  1D03               	skipz
  2432  078C  2F8F               	goto	u1935
  2433  078D  0834               	movf	hen7@m,w
  2434  078E  062E               	xorwf	hen7@value10,w
  2435  078F                     u1935:
  2436  078F  1D03               	skipz
  2437  0790  2F92               	goto	u1931
  2438  0791  2F93               	goto	u1930
  2439  0792                     u1931:
  2440  0792  2F9B               	goto	l2241
  2441  0793                     u1930:
  2442  0793                     l2239:
  2443  0793  3534               	lslf	hen7@m,w
  2444  0794  3EA0               	addlw	(low (_samp| 0))& (0+255)
  2445  0795  0086               	movwf	6
  2446  0796  0187               	clrf	7
  2447  0797  3F40               	moviw [0]fsr1
  2448  0798  00D4               	movwf	_code10
  2449  0799  3F41               	moviw [1]fsr1
  2450  079A  00D5               	movwf	_code10+1
  2451  079B                     l2241:
  2452                           
  2453                           ;Q5.c: 299:                 }
  2454  079B  3001               	movlw	1
  2455  079C  07B4               	addwf	hen7@m,f
  2456  079D  3000               	movlw	0
  2457  079E  3DB5               	addwfc	hen7@m+1,f
  2458  079F                     l2243:
  2459  079F  3000               	movlw	0
  2460  07A0  0235               	subwf	hen7@m+1,w
  2461  07A1  3010               	movlw	16
  2462  07A2  1903               	skipnz
  2463  07A3  0234               	subwf	hen7@m,w
  2464  07A4  1C03               	skipc
  2465  07A5  2FA7               	goto	u1941
  2466  07A6  2FA8               	goto	u1940
  2467  07A7                     u1941:
  2468  07A7  2F89               	goto	l2237
  2469  07A8                     u1940:
  2470  07A8                     l2245:
  2471                           
  2472                           ;Q5.c: 300:                 for(n=0;n<=15;++n){
  2473  07A8  01B6               	clrf	hen7@n
  2474  07A9  01B7               	clrf	hen7@n+1
  2475  07AA                     l2251:
  2476                           
  2477                           ;Q5.c: 301:                     if(value1==n)code1=samp[n];
  2478  07AA  0837               	movf	hen7@n+1,w
  2479  07AB  062D               	xorwf	hen7@value1+1,w
  2480  07AC  1D03               	skipz
  2481  07AD  2FB0               	goto	u1955
  2482  07AE  0836               	movf	hen7@n,w
  2483  07AF  062C               	xorwf	hen7@value1,w
  2484  07B0                     u1955:
  2485  07B0  1D03               	skipz
  2486  07B1  2FB3               	goto	u1951
  2487  07B2  2FB4               	goto	u1950
  2488  07B3                     u1951:
  2489  07B3  2FBC               	goto	l2255
  2490  07B4                     u1950:
  2491  07B4                     l2253:
  2492  07B4  3536               	lslf	hen7@n,w
  2493  07B5  3EA0               	addlw	(low (_samp| 0))& (0+255)
  2494  07B6  0086               	movwf	6
  2495  07B7  0187               	clrf	7
  2496  07B8  3F40               	moviw [0]fsr1
  2497  07B9  00D2               	movwf	_code1
  2498  07BA  3F41               	moviw [1]fsr1
  2499  07BB  00D3               	movwf	_code1+1
  2500  07BC                     l2255:
  2501                           
  2502                           ;Q5.c: 302:                 }
  2503  07BC  3001               	movlw	1
  2504  07BD  07B6               	addwf	hen7@n,f
  2505  07BE  3000               	movlw	0
  2506  07BF  3DB7               	addwfc	hen7@n+1,f
  2507  07C0                     l2257:
  2508  07C0  3000               	movlw	0
  2509  07C1  0237               	subwf	hen7@n+1,w
  2510  07C2  3010               	movlw	16
  2511  07C3  1903               	skipnz
  2512  07C4  0236               	subwf	hen7@n,w
  2513  07C5  1C03               	skipc
  2514  07C6  2FC8               	goto	u1961
  2515  07C7  2FC9               	goto	u1960
  2516  07C8                     u1961:
  2517  07C8  2FAA               	goto	l2251
  2518  07C9                     u1960:
  2519  07C9  2FDA               	goto	l170
  2520  07CA                     l2261:
  2521                           
  2522                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2523                           ; Switch size 1, requested type "simple"
  2524                           ; Number of cases is 1, Range of values is 0 to 0
  2525                           ; switch strategies available:
  2526                           ; Name         Instructions Cycles
  2527                           ; simple_byte            4     3 (average)
  2528                           ; direct_byte            8     6 (fixed)
  2529                           ; jumptable            260     6 (fixed)
  2530                           ;	Chosen strategy is simple_byte
  2531  07CA  0827               	movf	hen7@ns1+1,w
  2532  07CB  3A00               	xorlw	0	; case 0
  2533  07CC  1903               	skipnz
  2534  07CD  2FCF               	goto	l2675
  2535  07CE  2FDA               	goto	l170
  2536  07CF                     l2675:
  2537                           
  2538                           ; Switch size 1, requested type "simple"
  2539                           ; Number of cases is 3, Range of values is 8 to 16
  2540                           ; switch strategies available:
  2541                           ; Name         Instructions Cycles
  2542                           ; simple_byte           10     6 (average)
  2543                           ; direct_byte           27     9 (fixed)
  2544                           ; jumptable            263     9 (fixed)
  2545                           ;	Chosen strategy is simple_byte
  2546  07CF  0826               	movf	hen7@ns1,w
  2547  07D0  3A08               	xorlw	8	; case 8
  2548  07D1  1903               	skipnz
  2549  07D2  2ED3               	goto	l2177
  2550  07D3  3A02               	xorlw	2	; case 10
  2551  07D4  1903               	skipnz
  2552  07D5  2E2D               	goto	l2131
  2553  07D6  3A1A               	xorlw	26	; case 16
  2554  07D7  1903               	skipnz
  2555  07D8  2F6C               	goto	l2225
  2556  07D9  2FDA               	goto	l170
  2557  07DA                     l170:
  2558  07DA  0008               	return
  2559  07DB                     __end_of_hen7:
  2560                           
  2561                           	psect	text6
  2562  0181                     __ptext6:	
  2563 ;; *************** function ___wmul *****************
  2564 ;; Defined at:
  2565 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  2566 ;; Parameters:    Size  Location     Type
  2567 ;;  multiplier      2    0[COMMON] unsigned int 
  2568 ;;  multiplicand    2    2[COMMON] unsigned int 
  2569 ;; Auto vars:     Size  Location     Type
  2570 ;;  product         2    4[COMMON] unsigned int 
  2571 ;; Return value:  Size  Location     Type
  2572 ;;                  2    0[COMMON] unsigned int 
  2573 ;; Registers used:
  2574 ;;		wreg, status,2, status,0
  2575 ;; Tracked objects:
  2576 ;;		On entry : 0/0
  2577 ;;		On exit  : 0/0
  2578 ;;		Unchanged: 0/0
  2579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2580 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2581 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2583 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2584 ;;Total ram usage:        6 bytes
  2585 ;; Hardware stack levels used:    1
  2586 ;; This function calls:
  2587 ;;		Nothing
  2588 ;; This function is called by:
  2589 ;;		_hen7
  2590 ;;		_main
  2591 ;;		_wait
  2592 ;;		_hens
  2593 ;; This function uses a non-reentrant model
  2594 ;;
  2595                           
  2596                           
  2597                           ;psect for function ___wmul
  2598  0181                     ___wmul:
  2599  0181                     l1829:	
  2600                           ;incstack = 0
  2601                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2602                           
  2603  0181  01F4               	clrf	___wmul@product
  2604  0182  01F5               	clrf	___wmul@product+1
  2605  0183                     l1831:
  2606  0183  1C70               	btfss	___wmul@multiplier,0
  2607  0184  2986               	goto	u1301
  2608  0185  2987               	goto	u1300
  2609  0186                     u1301:
  2610  0186  298B               	goto	l453
  2611  0187                     u1300:
  2612  0187                     l1833:
  2613  0187  0872               	movf	___wmul@multiplicand,w
  2614  0188  07F4               	addwf	___wmul@product,f
  2615  0189  0873               	movf	___wmul@multiplicand+1,w
  2616  018A  3DF5               	addwfc	___wmul@product+1,f
  2617  018B                     l453:
  2618  018B  3001               	movlw	1
  2619  018C                     u1315:
  2620  018C  35F2               	lslf	___wmul@multiplicand,f
  2621  018D  0DF3               	rlf	___wmul@multiplicand+1,f
  2622  018E  0B89               	decfsz	9,f
  2623  018F  298C               	goto	u1315
  2624  0190                     l1835:
  2625  0190  3001               	movlw	1
  2626  0191                     u1325:
  2627  0191  36F1               	lsrf	___wmul@multiplier+1,f
  2628  0192  0CF0               	rrf	___wmul@multiplier,f
  2629  0193  0B89               	decfsz	9,f
  2630  0194  2991               	goto	u1325
  2631  0195                     l1837:
  2632  0195  0870               	movf	___wmul@multiplier,w
  2633  0196  0471               	iorwf	___wmul@multiplier+1,w
  2634  0197  1D03               	btfss	3,2
  2635  0198  299A               	goto	u1331
  2636  0199  299B               	goto	u1330
  2637  019A                     u1331:
  2638  019A  2983               	goto	l1831
  2639  019B                     u1330:
  2640  019B                     l1839:
  2641  019B  0875               	movf	___wmul@product+1,w
  2642  019C  00F1               	movwf	?___wmul+1
  2643  019D  0874               	movf	___wmul@product,w
  2644  019E  00F0               	movwf	?___wmul
  2645  019F                     l455:
  2646  019F  0008               	return
  2647  01A0                     __end_of___wmul:
  2648                           
  2649                           	psect	text7
  2650  02E5                     __ptext7:	
  2651 ;; *************** function ___awmod *****************
  2652 ;; Defined at:
  2653 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awmod.c"
  2654 ;; Parameters:    Size  Location     Type
  2655 ;;  divisor         2    0[COMMON] int 
  2656 ;;  dividend        2    2[COMMON] int 
  2657 ;; Auto vars:     Size  Location     Type
  2658 ;;  sign            1    6[COMMON] unsigned char 
  2659 ;;  counter         1    5[COMMON] unsigned char 
  2660 ;; Return value:  Size  Location     Type
  2661 ;;                  2    0[COMMON] int 
  2662 ;; Registers used:
  2663 ;;		wreg, status,2, status,0
  2664 ;; Tracked objects:
  2665 ;;		On entry : 0/0
  2666 ;;		On exit  : 0/0
  2667 ;;		Unchanged: 0/0
  2668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2669 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2670 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2671 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2672 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2673 ;;Total ram usage:        7 bytes
  2674 ;; Hardware stack levels used:    1
  2675 ;; This function calls:
  2676 ;;		Nothing
  2677 ;; This function is called by:
  2678 ;;		_hen7
  2679 ;; This function uses a non-reentrant model
  2680 ;;
  2681                           
  2682                           
  2683                           ;psect for function ___awmod
  2684  02E5                     ___awmod:
  2685  02E5                     l1887:	
  2686                           ;incstack = 0
  2687                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2688                           
  2689  02E5  01F6               	clrf	___awmod@sign
  2690  02E6                     l1889:
  2691  02E6  1FF3               	btfss	___awmod@dividend+1,7
  2692  02E7  2AE9               	goto	u1441
  2693  02E8  2AEA               	goto	u1440
  2694  02E9                     u1441:
  2695  02E9  2AF1               	goto	l1895
  2696  02EA                     u1440:
  2697  02EA                     l1891:
  2698  02EA  09F2               	comf	___awmod@dividend,f
  2699  02EB  09F3               	comf	___awmod@dividend+1,f
  2700  02EC  0AF2               	incf	___awmod@dividend,f
  2701  02ED  1903               	skipnz
  2702  02EE  0AF3               	incf	___awmod@dividend+1,f
  2703  02EF                     l1893:
  2704  02EF  01F6               	clrf	___awmod@sign
  2705  02F0  0AF6               	incf	___awmod@sign,f
  2706  02F1                     l1895:
  2707  02F1  1FF1               	btfss	___awmod@divisor+1,7
  2708  02F2  2AF4               	goto	u1451
  2709  02F3  2AF5               	goto	u1450
  2710  02F4                     u1451:
  2711  02F4  2AFA               	goto	l1899
  2712  02F5                     u1450:
  2713  02F5                     l1897:
  2714  02F5  09F0               	comf	___awmod@divisor,f
  2715  02F6  09F1               	comf	___awmod@divisor+1,f
  2716  02F7  0AF0               	incf	___awmod@divisor,f
  2717  02F8  1903               	skipnz
  2718  02F9  0AF1               	incf	___awmod@divisor+1,f
  2719  02FA                     l1899:
  2720  02FA  0870               	movf	___awmod@divisor,w
  2721  02FB  0471               	iorwf	___awmod@divisor+1,w
  2722  02FC  1903               	btfsc	3,2
  2723  02FD  2AFF               	goto	u1461
  2724  02FE  2B00               	goto	u1460
  2725  02FF                     u1461:
  2726  02FF  2B29               	goto	l1917
  2727  0300                     u1460:
  2728  0300                     l1901:
  2729  0300  01F5               	clrf	___awmod@counter
  2730  0301  0AF5               	incf	___awmod@counter,f
  2731  0302  2B0C               	goto	l1907
  2732  0303                     l1903:
  2733  0303  3001               	movlw	1
  2734  0304                     u1475:
  2735  0304  35F0               	lslf	___awmod@divisor,f
  2736  0305  0DF1               	rlf	___awmod@divisor+1,f
  2737  0306  0B89               	decfsz	9,f
  2738  0307  2B04               	goto	u1475
  2739  0308                     l1905:
  2740  0308  3001               	movlw	1
  2741  0309  00F4               	movwf	??___awmod
  2742  030A  0874               	movf	??___awmod,w
  2743  030B  07F5               	addwf	___awmod@counter,f
  2744  030C                     l1907:
  2745  030C  1FF1               	btfss	___awmod@divisor+1,7
  2746  030D  2B0F               	goto	u1481
  2747  030E  2B10               	goto	u1480
  2748  030F                     u1481:
  2749  030F  2B03               	goto	l1903
  2750  0310                     u1480:
  2751  0310                     l1909:
  2752  0310  0871               	movf	___awmod@divisor+1,w
  2753  0311  0273               	subwf	___awmod@dividend+1,w
  2754  0312  1D03               	skipz
  2755  0313  2B16               	goto	u1495
  2756  0314  0870               	movf	___awmod@divisor,w
  2757  0315  0272               	subwf	___awmod@dividend,w
  2758  0316                     u1495:
  2759  0316  1C03               	skipc
  2760  0317  2B19               	goto	u1491
  2761  0318  2B1A               	goto	u1490
  2762  0319                     u1491:
  2763  0319  2B1E               	goto	l1913
  2764  031A                     u1490:
  2765  031A                     l1911:
  2766  031A  0870               	movf	___awmod@divisor,w
  2767  031B  02F2               	subwf	___awmod@dividend,f
  2768  031C  0871               	movf	___awmod@divisor+1,w
  2769  031D  3BF3               	subwfb	___awmod@dividend+1,f
  2770  031E                     l1913:
  2771  031E  3001               	movlw	1
  2772  031F                     u1505:
  2773  031F  36F1               	lsrf	___awmod@divisor+1,f
  2774  0320  0CF0               	rrf	___awmod@divisor,f
  2775  0321  0B89               	decfsz	9,f
  2776  0322  2B1F               	goto	u1505
  2777  0323                     l1915:
  2778  0323  3001               	movlw	1
  2779  0324  02F5               	subwf	___awmod@counter,f
  2780  0325  1D03               	btfss	3,2
  2781  0326  2B28               	goto	u1511
  2782  0327  2B29               	goto	u1510
  2783  0328                     u1511:
  2784  0328  2B10               	goto	l1909
  2785  0329                     u1510:
  2786  0329                     l1917:
  2787  0329  0876               	movf	___awmod@sign,w
  2788  032A  1903               	btfsc	3,2
  2789  032B  2B2D               	goto	u1521
  2790  032C  2B2E               	goto	u1520
  2791  032D                     u1521:
  2792  032D  2B33               	goto	l1921
  2793  032E                     u1520:
  2794  032E                     l1919:
  2795  032E  09F2               	comf	___awmod@dividend,f
  2796  032F  09F3               	comf	___awmod@dividend+1,f
  2797  0330  0AF2               	incf	___awmod@dividend,f
  2798  0331  1903               	skipnz
  2799  0332  0AF3               	incf	___awmod@dividend+1,f
  2800  0333                     l1921:
  2801  0333  0873               	movf	___awmod@dividend+1,w
  2802  0334  00F1               	movwf	?___awmod+1
  2803  0335  0872               	movf	___awmod@dividend,w
  2804  0336  00F0               	movwf	?___awmod
  2805  0337                     l619:
  2806  0337  0008               	return
  2807  0338                     __end_of___awmod:
  2808                           
  2809                           	psect	text8
  2810  0338                     __ptext8:	
  2811 ;; *************** function ___awdiv *****************
  2812 ;; Defined at:
  2813 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awdiv.c"
  2814 ;; Parameters:    Size  Location     Type
  2815 ;;  divisor         2    6[COMMON] int 
  2816 ;;  dividend        2    8[COMMON] int 
  2817 ;; Auto vars:     Size  Location     Type
  2818 ;;  quotient        2    2[BANK0 ] int 
  2819 ;;  sign            1    1[BANK0 ] unsigned char 
  2820 ;;  counter         1    0[BANK0 ] unsigned char 
  2821 ;; Return value:  Size  Location     Type
  2822 ;;                  2    6[COMMON] int 
  2823 ;; Registers used:
  2824 ;;		wreg, status,2, status,0
  2825 ;; Tracked objects:
  2826 ;;		On entry : 0/0
  2827 ;;		On exit  : 0/0
  2828 ;;		Unchanged: 0/0
  2829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2830 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2831 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2832 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2833 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2834 ;;Total ram usage:        9 bytes
  2835 ;; Hardware stack levels used:    1
  2836 ;; This function calls:
  2837 ;;		Nothing
  2838 ;; This function is called by:
  2839 ;;		_hen7
  2840 ;; This function uses a non-reentrant model
  2841 ;;
  2842                           
  2843                           
  2844                           ;psect for function ___awdiv
  2845  0338                     ___awdiv:
  2846  0338                     l1843:	
  2847                           ;incstack = 0
  2848                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2849                           
  2850  0338  0020               	movlb	0	; select bank0
  2851  0339  01A1               	clrf	___awdiv@sign
  2852  033A                     l1845:
  2853  033A  1FF7               	btfss	___awdiv@divisor+1,7
  2854  033B  2B3D               	goto	u1341
  2855  033C  2B3E               	goto	u1340
  2856  033D                     u1341:
  2857  033D  2B45               	goto	l1851
  2858  033E                     u1340:
  2859  033E                     l1847:
  2860  033E  09F6               	comf	___awdiv@divisor,f
  2861  033F  09F7               	comf	___awdiv@divisor+1,f
  2862  0340  0AF6               	incf	___awdiv@divisor,f
  2863  0341  1903               	skipnz
  2864  0342  0AF7               	incf	___awdiv@divisor+1,f
  2865  0343                     l1849:
  2866  0343  01A1               	clrf	___awdiv@sign
  2867  0344  0AA1               	incf	___awdiv@sign,f
  2868  0345                     l1851:
  2869  0345  1FF9               	btfss	___awdiv@dividend+1,7
  2870  0346  2B48               	goto	u1351
  2871  0347  2B49               	goto	u1350
  2872  0348                     u1351:
  2873  0348  2B52               	goto	l1857
  2874  0349                     u1350:
  2875  0349                     l1853:
  2876  0349  09F8               	comf	___awdiv@dividend,f
  2877  034A  09F9               	comf	___awdiv@dividend+1,f
  2878  034B  0AF8               	incf	___awdiv@dividend,f
  2879  034C  1903               	skipnz
  2880  034D  0AF9               	incf	___awdiv@dividend+1,f
  2881  034E                     l1855:
  2882  034E  3001               	movlw	1
  2883  034F  00FA               	movwf	??___awdiv
  2884  0350  087A               	movf	??___awdiv,w
  2885  0351  06A1               	xorwf	___awdiv@sign,f
  2886  0352                     l1857:
  2887  0352  01A2               	clrf	___awdiv@quotient
  2888  0353  01A3               	clrf	___awdiv@quotient+1
  2889  0354                     l1859:
  2890  0354  0876               	movf	___awdiv@divisor,w
  2891  0355  0477               	iorwf	___awdiv@divisor+1,w
  2892  0356  1903               	btfsc	3,2
  2893  0357  2B59               	goto	u1361
  2894  0358  2B5A               	goto	u1360
  2895  0359                     u1361:
  2896  0359  2B89               	goto	l1879
  2897  035A                     u1360:
  2898  035A                     l1861:
  2899  035A  01A0               	clrf	___awdiv@counter
  2900  035B  0AA0               	incf	___awdiv@counter,f
  2901  035C  2B66               	goto	l1867
  2902  035D                     l1863:
  2903  035D  3001               	movlw	1
  2904  035E                     u1375:
  2905  035E  35F6               	lslf	___awdiv@divisor,f
  2906  035F  0DF7               	rlf	___awdiv@divisor+1,f
  2907  0360  0B89               	decfsz	9,f
  2908  0361  2B5E               	goto	u1375
  2909  0362                     l1865:
  2910  0362  3001               	movlw	1
  2911  0363  00FA               	movwf	??___awdiv
  2912  0364  087A               	movf	??___awdiv,w
  2913  0365  07A0               	addwf	___awdiv@counter,f
  2914  0366                     l1867:
  2915  0366  1FF7               	btfss	___awdiv@divisor+1,7
  2916  0367  2B69               	goto	u1381
  2917  0368  2B6A               	goto	u1380
  2918  0369                     u1381:
  2919  0369  2B5D               	goto	l1863
  2920  036A                     u1380:
  2921  036A                     l1869:
  2922  036A  3001               	movlw	1
  2923  036B                     u1395:
  2924  036B  35A2               	lslf	___awdiv@quotient,f
  2925  036C  0DA3               	rlf	___awdiv@quotient+1,f
  2926  036D  0B89               	decfsz	9,f
  2927  036E  2B6B               	goto	u1395
  2928  036F  0877               	movf	___awdiv@divisor+1,w
  2929  0370  0279               	subwf	___awdiv@dividend+1,w
  2930  0371  1D03               	skipz
  2931  0372  2B75               	goto	u1405
  2932  0373  0876               	movf	___awdiv@divisor,w
  2933  0374  0278               	subwf	___awdiv@dividend,w
  2934  0375                     u1405:
  2935  0375  1C03               	skipc
  2936  0376  2B78               	goto	u1401
  2937  0377  2B79               	goto	u1400
  2938  0378                     u1401:
  2939  0378  2B7E               	goto	l1875
  2940  0379                     u1400:
  2941  0379                     l1871:
  2942  0379  0876               	movf	___awdiv@divisor,w
  2943  037A  02F8               	subwf	___awdiv@dividend,f
  2944  037B  0877               	movf	___awdiv@divisor+1,w
  2945  037C  3BF9               	subwfb	___awdiv@dividend+1,f
  2946  037D                     l1873:
  2947  037D  1422               	bsf	___awdiv@quotient,0
  2948  037E                     l1875:
  2949  037E  3001               	movlw	1
  2950  037F                     u1415:
  2951  037F  36F7               	lsrf	___awdiv@divisor+1,f
  2952  0380  0CF6               	rrf	___awdiv@divisor,f
  2953  0381  0B89               	decfsz	9,f
  2954  0382  2B7F               	goto	u1415
  2955  0383                     l1877:
  2956  0383  3001               	movlw	1
  2957  0384  02A0               	subwf	___awdiv@counter,f
  2958  0385  1D03               	btfss	3,2
  2959  0386  2B88               	goto	u1421
  2960  0387  2B89               	goto	u1420
  2961  0388                     u1421:
  2962  0388  2B6A               	goto	l1869
  2963  0389                     u1420:
  2964  0389                     l1879:
  2965  0389  0821               	movf	___awdiv@sign,w
  2966  038A  1903               	btfsc	3,2
  2967  038B  2B8D               	goto	u1431
  2968  038C  2B8E               	goto	u1430
  2969  038D                     u1431:
  2970  038D  2B93               	goto	l1883
  2971  038E                     u1430:
  2972  038E                     l1881:
  2973  038E  09A2               	comf	___awdiv@quotient,f
  2974  038F  09A3               	comf	___awdiv@quotient+1,f
  2975  0390  0AA2               	incf	___awdiv@quotient,f
  2976  0391  1903               	skipnz
  2977  0392  0AA3               	incf	___awdiv@quotient+1,f
  2978  0393                     l1883:
  2979  0393  0823               	movf	___awdiv@quotient+1,w
  2980  0394  00F7               	movwf	?___awdiv+1
  2981  0395  0822               	movf	___awdiv@quotient,w
  2982  0396  00F6               	movwf	?___awdiv
  2983  0397                     l606:
  2984  0397  0008               	return
  2985  0398                     __end_of___awdiv:
  2986                           
  2987                           	psect	text9
  2988  01A0                     __ptext9:	
  2989 ;; *************** function _fclr *****************
  2990 ;; Defined at:
  2991 ;;		line 369 in file "Q5.c"
  2992 ;; Parameters:    Size  Location     Type
  2993 ;;  flg             2    0[COMMON] unsigned short 
  2994 ;; Auto vars:     Size  Location     Type
  2995 ;;		None
  2996 ;; Return value:  Size  Location     Type
  2997 ;;                  1    wreg      void 
  2998 ;; Registers used:
  2999 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3000 ;; Tracked objects:
  3001 ;;		On entry : 0/0
  3002 ;;		On exit  : 0/0
  3003 ;;		Unchanged: 0/0
  3004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3005 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3008 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3009 ;;Total ram usage:        2 bytes
  3010 ;; Hardware stack levels used:    1
  3011 ;; This function calls:
  3012 ;;		Nothing
  3013 ;; This function is called by:
  3014 ;;		_main
  3015 ;;		_kaisu
  3016 ;; This function uses a non-reentrant model
  3017 ;;
  3018                           
  3019                           
  3020                           ;psect for function _fclr
  3021  01A0                     _fclr:
  3022  01A0                     l2301:	
  3023                           ;incstack = 0
  3024                           ; Regs used in _fclr: [wreg-fsr0h+status,2+status,0]
  3025                           
  3026                           
  3027                           ;Q5.c: 369: void fclr(unsigned short flg);Q5.c: 370: {;Q5.c: 371:     switch(flg){
  3028  01A0  29AF               	goto	l2311
  3029  01A1                     l2303:
  3030                           
  3031                           ;Q5.c: 373:                     flag_R=0;
  3032  01A1  0020               	movlb	0	; select bank0
  3033  01A2  01EA               	clrf	_flag_R
  3034  01A3  01EB               	clrf	_flag_R+1
  3035                           
  3036                           ;Q5.c: 374:                     break;
  3037  01A4  29BF               	goto	l217
  3038  01A5                     l2305:
  3039                           
  3040                           ;Q5.c: 376:                     flag_P=0;
  3041  01A5  0020               	movlb	0	; select bank0
  3042  01A6  01E8               	clrf	_flag_P
  3043  01A7  01E9               	clrf	_flag_P+1
  3044                           
  3045                           ;Q5.c: 377:                     break;
  3046  01A8  29BF               	goto	l217
  3047  01A9                     l2307:
  3048                           
  3049                           ;Q5.c: 379:                     flag_P=flag_R=0;
  3050  01A9  0020               	movlb	0	; select bank0
  3051  01AA  01EA               	clrf	_flag_R
  3052  01AB  01EB               	clrf	_flag_R+1
  3053  01AC  01E8               	clrf	_flag_P
  3054  01AD  01E9               	clrf	_flag_P+1
  3055                           
  3056                           ;Q5.c: 380:                     break;
  3057  01AE  29BF               	goto	l217
  3058  01AF                     l2311:
  3059                           
  3060                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3061                           ; Switch size 1, requested type "simple"
  3062                           ; Number of cases is 1, Range of values is 0 to 0
  3063                           ; switch strategies available:
  3064                           ; Name         Instructions Cycles
  3065                           ; simple_byte            4     3 (average)
  3066                           ; direct_byte            8     6 (fixed)
  3067                           ; jumptable            260     6 (fixed)
  3068                           ;	Chosen strategy is simple_byte
  3069  01AF  0871               	movf	fclr@flg+1,w
  3070  01B0  3A00               	xorlw	0	; case 0
  3071  01B1  1903               	skipnz
  3072  01B2  29B4               	goto	l2677
  3073  01B3  29BF               	goto	l217
  3074  01B4                     l2677:
  3075                           
  3076                           ; Switch size 1, requested type "simple"
  3077                           ; Number of cases is 3, Range of values is 0 to 2
  3078                           ; switch strategies available:
  3079                           ; Name         Instructions Cycles
  3080                           ; simple_byte           10     6 (average)
  3081                           ; direct_byte           12     6 (fixed)
  3082                           ; jumptable            260     6 (fixed)
  3083                           ;	Chosen strategy is simple_byte
  3084  01B4  0870               	movf	fclr@flg,w
  3085  01B5  3A00               	xorlw	0	; case 0
  3086  01B6  1903               	skipnz
  3087  01B7  29A1               	goto	l2303
  3088  01B8  3A01               	xorlw	1	; case 1
  3089  01B9  1903               	skipnz
  3090  01BA  29A5               	goto	l2305
  3091  01BB  3A03               	xorlw	3	; case 2
  3092  01BC  1903               	skipnz
  3093  01BD  29A9               	goto	l2307
  3094  01BE  29BF               	goto	l217
  3095  01BF                     l217:
  3096  01BF  0008               	return
  3097  01C0                     __end_of_fclr:
  3098                           
  3099                           	psect	text10
  3100  04A7                     __ptext10:	
  3101 ;; *************** function _dynam *****************
  3102 ;; Defined at:
  3103 ;;		line 206 in file "Q5.c"
  3104 ;; Parameters:    Size  Location     Type
  3105 ;;  dig1data        2    0[COMMON] unsigned short 
  3106 ;;  dig2data        2    2[COMMON] unsigned short 
  3107 ;;  smdata          2    4[COMMON] unsigned short 
  3108 ;;  tr              2    6[COMMON] unsigned int 
  3109 ;; Auto vars:     Size  Location     Type
  3110 ;;  ext             2    6[BANK0 ] unsigned short 
  3111 ;;  j               2    4[BANK0 ] unsigned int 
  3112 ;;  tm              2    2[BANK0 ] unsigned int 
  3113 ;;  smd             2    0[BANK0 ] unsigned short 
  3114 ;; Return value:  Size  Location     Type
  3115 ;;                  1    wreg      void 
  3116 ;; Registers used:
  3117 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3118 ;; Tracked objects:
  3119 ;;		On entry : 0/0
  3120 ;;		On exit  : 0/0
  3121 ;;		Unchanged: 0/0
  3122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3123 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3124 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3126 ;;      Totals:         8       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3127 ;;Total ram usage:       16 bytes
  3128 ;; Hardware stack levels used:    1
  3129 ;; This function calls:
  3130 ;;		Nothing
  3131 ;; This function is called by:
  3132 ;;		_main
  3133 ;;		_clear
  3134 ;;		_waitSEG
  3135 ;;		_waitSEGStop
  3136 ;;		_motor
  3137 ;;		_motorStop
  3138 ;; This function uses a non-reentrant model
  3139 ;;
  3140                           
  3141                           
  3142                           ;psect for function _dynam
  3143  04A7                     _dynam:
  3144  04A7                     l1965:	
  3145                           ;incstack = 0
  3146                           ; Regs used in _dynam: [wreg-fsr0h+status,2+status,0]
  3147                           
  3148  04A7  0020               	movlb	0	; select bank0
  3149  04A8  01A2               	clrf	dynam@tm
  3150  04A9  01A3               	clrf	dynam@tm+1
  3151                           
  3152                           ;Q5.c: 209:     unsigned short ext=0,smd=0;
  3153  04AA  01A6               	clrf	dynam@ext
  3154  04AB  01A7               	clrf	dynam@ext+1
  3155  04AC  01A0               	clrf	dynam@smd
  3156  04AD  01A1               	clrf	dynam@smd+1
  3157  04AE                     l1967:
  3158                           
  3159                           ;Q5.c: 210:     RC7=0;
  3160  04AE  138E               	bcf	14,7	;volatile
  3161  04AF                     l1969:
  3162                           
  3163                           ;Q5.c: 211:     PORTB=dig1data;
  3164  04AF  0870               	movf	dynam@dig1data,w
  3165  04B0  008D               	movwf	13	;volatile
  3166  04B1                     l1971:
  3167                           
  3168                           ;Q5.c: 212:     RC5=0;RC6=1;
  3169  04B1  128E               	bcf	14,5	;volatile
  3170  04B2                     l1973:
  3171  04B2  170E               	bsf	14,6	;volatile
  3172  04B3                     l1975:
  3173                           
  3174                           ;Q5.c: 213:     if(tr==5){tm=4000;}
  3175  04B3  3005               	movlw	5
  3176  04B4  0676               	xorwf	dynam@tr,w
  3177  04B5  0477               	iorwf	dynam@tr+1,w
  3178  04B6  1D03               	btfss	3,2
  3179  04B7  2CB9               	goto	u1551
  3180  04B8  2CBA               	goto	u1550
  3181  04B9                     u1551:
  3182  04B9  2CBF               	goto	l1979
  3183  04BA                     u1550:
  3184  04BA                     l1977:
  3185  04BA  30A0               	movlw	160
  3186  04BB  00A2               	movwf	dynam@tm
  3187  04BC  300F               	movlw	15
  3188  04BD  00A3               	movwf	dynam@tm+1
  3189  04BE  2CC3               	goto	l112
  3190  04BF                     l1979:
  3191  04BF  30D0               	movlw	208
  3192  04C0  00A2               	movwf	dynam@tm
  3193  04C1  3007               	movlw	7
  3194  04C2  00A3               	movwf	dynam@tm+1
  3195  04C3                     l112:
  3196                           
  3197                           ;Q5.c: 215:     for(j=tm;j>0;--j);
  3198  04C3  0823               	movf	dynam@tm+1,w
  3199  04C4  00A5               	movwf	dynam@j+1
  3200  04C5  0822               	movf	dynam@tm,w
  3201  04C6  00A4               	movwf	dynam@j
  3202  04C7                     l1981:
  3203  04C7  0824               	movf	dynam@j,w
  3204  04C8  0425               	iorwf	dynam@j+1,w
  3205  04C9  1D03               	btfss	3,2
  3206  04CA  2CCC               	goto	u1561
  3207  04CB  2CCD               	goto	u1560
  3208  04CC                     u1561:
  3209  04CC  2CCE               	goto	l1985
  3210  04CD                     u1560:
  3211  04CD  2CD3               	goto	l114
  3212  04CE                     l1985:
  3213  04CE  3001               	movlw	1
  3214  04CF  02A4               	subwf	dynam@j,f
  3215  04D0  3000               	movlw	0
  3216  04D1  3BA5               	subwfb	dynam@j+1,f
  3217  04D2  2CC7               	goto	l1981
  3218  04D3                     l114:
  3219                           
  3220                           ;Q5.c: 216:     RC5=0;RC6=0;
  3221  04D3  128E               	bcf	14,5	;volatile
  3222  04D4  130E               	bcf	14,6	;volatile
  3223  04D5                     l1989:
  3224                           
  3225                           ;Q5.c: 217:     PORTB=dig2data;
  3226  04D5  0872               	movf	dynam@dig2data,w
  3227  04D6  008D               	movwf	13	;volatile
  3228  04D7                     l1991:
  3229                           
  3230                           ;Q5.c: 218:     RC6=0;RC5=1;
  3231  04D7  130E               	bcf	14,6	;volatile
  3232  04D8                     l1993:
  3233  04D8  168E               	bsf	14,5	;volatile
  3234  04D9                     l1995:
  3235                           
  3236                           ;Q5.c: 219:     if(tr==5){tm=4000;}
  3237  04D9  3005               	movlw	5
  3238  04DA  0676               	xorwf	dynam@tr,w
  3239  04DB  0477               	iorwf	dynam@tr+1,w
  3240  04DC  1D03               	btfss	3,2
  3241  04DD  2CDF               	goto	u1571
  3242  04DE  2CE0               	goto	u1570
  3243  04DF                     u1571:
  3244  04DF  2CE5               	goto	l1999
  3245  04E0                     u1570:
  3246  04E0                     l1997:
  3247  04E0  30A0               	movlw	160
  3248  04E1  00A2               	movwf	dynam@tm
  3249  04E2  300F               	movlw	15
  3250  04E3  00A3               	movwf	dynam@tm+1
  3251  04E4  2CE9               	goto	l116
  3252  04E5                     l1999:
  3253  04E5  30D0               	movlw	208
  3254  04E6  00A2               	movwf	dynam@tm
  3255  04E7  3007               	movlw	7
  3256  04E8  00A3               	movwf	dynam@tm+1
  3257  04E9                     l116:
  3258                           
  3259                           ;Q5.c: 221:     for(j=tm;j>0;--j);
  3260  04E9  0823               	movf	dynam@tm+1,w
  3261  04EA  00A5               	movwf	dynam@j+1
  3262  04EB  0822               	movf	dynam@tm,w
  3263  04EC  00A4               	movwf	dynam@j
  3264  04ED                     l2001:
  3265  04ED  0824               	movf	dynam@j,w
  3266  04EE  0425               	iorwf	dynam@j+1,w
  3267  04EF  1D03               	btfss	3,2
  3268  04F0  2CF2               	goto	u1581
  3269  04F1  2CF3               	goto	u1580
  3270  04F2                     u1581:
  3271  04F2  2CF4               	goto	l2005
  3272  04F3                     u1580:
  3273  04F3  2CF9               	goto	l118
  3274  04F4                     l2005:
  3275  04F4  3001               	movlw	1
  3276  04F5  02A4               	subwf	dynam@j,f
  3277  04F6  3000               	movlw	0
  3278  04F7  3BA5               	subwfb	dynam@j+1,f
  3279  04F8  2CED               	goto	l2001
  3280  04F9                     l118:
  3281                           
  3282                           ;Q5.c: 222:     RC5=0;RC6=0;
  3283  04F9  128E               	bcf	14,5	;volatile
  3284  04FA  130E               	bcf	14,6	;volatile
  3285                           
  3286                           ;Q5.c: 223:     switch(smdata){
  3287  04FB  2E00               	goto	l2115
  3288  04FC                     l2009:
  3289                           
  3290                           ;Q5.c: 225:                 PORTB=0x00;smd=(0x01|0x02|0x04|0x08|0x10|0x20);
  3291  04FC  018D               	clrf	13	;volatile
  3292  04FD                     l2011:
  3293  04FD                     l2013:
  3294                           
  3295                           ;Q5.c: 226:                 RC7=0;RC7=1;RC7=0;
  3296  04FD  138E               	bcf	14,7	;volatile
  3297  04FE                     l2015:
  3298  04FE  178E               	bsf	14,7	;volatile
  3299  04FF                     l2017:
  3300  04FF  138E               	bcf	14,7	;volatile
  3301                           
  3302                           ;Q5.c: 227:                 break;
  3303  0500  2E10               	goto	l135
  3304  0501                     l2019:
  3305                           
  3306                           ;Q5.c: 229:                 if(flg==1)cw=0;flg=0;
  3307  0501  0366               	decf	_flg,w
  3308  0502  0467               	iorwf	_flg+1,w
  3309  0503  1D03               	btfss	3,2
  3310  0504  2D06               	goto	u1591
  3311  0505  2D07               	goto	u1590
  3312  0506                     u1591:
  3313  0506  2D09               	goto	l123
  3314  0507                     u1590:
  3315  0507                     l2021:
  3316  0507  01E4               	clrf	_cw
  3317  0508  01E5               	clrf	_cw+1
  3318  0509                     l123:
  3319  0509  01E6               	clrf	_flg
  3320  050A  01E7               	clrf	_flg+1
  3321  050B                     l2023:
  3322                           
  3323                           ;Q5.c: 230:                 if((cw==0)&&(ext==0)){cw=1;ccw=0;ext=1;PORTB=smd=0x09;}
  3324  050B  0864               	movf	_cw,w
  3325  050C  0465               	iorwf	_cw+1,w
  3326  050D  1D03               	btfss	3,2
  3327  050E  2D10               	goto	u1601
  3328  050F  2D11               	goto	u1600
  3329  0510                     u1601:
  3330  0510  2D27               	goto	l2035
  3331  0511                     u1600:
  3332  0511                     l2025:
  3333  0511  0826               	movf	dynam@ext,w
  3334  0512  0427               	iorwf	dynam@ext+1,w
  3335  0513  1D03               	btfss	3,2
  3336  0514  2D16               	goto	u1611
  3337  0515  2D17               	goto	u1610
  3338  0516                     u1611:
  3339  0516  2D27               	goto	l2035
  3340  0517                     u1610:
  3341  0517                     l2027:
  3342  0517  3001               	movlw	1
  3343  0518  00E4               	movwf	_cw
  3344  0519  3000               	movlw	0
  3345  051A  00E5               	movwf	_cw+1
  3346  051B                     l2029:
  3347  051B  01E2               	clrf	_ccw
  3348  051C  01E3               	clrf	_ccw+1
  3349  051D                     l2031:
  3350  051D  3001               	movlw	1
  3351  051E  00A6               	movwf	dynam@ext
  3352  051F  3000               	movlw	0
  3353  0520  00A7               	movwf	dynam@ext+1
  3354  0521                     l2033:
  3355  0521  3009               	movlw	9
  3356  0522  00A0               	movwf	dynam@smd
  3357  0523  3000               	movlw	0
  3358  0524  00A1               	movwf	dynam@smd+1
  3359  0525  0820               	movf	dynam@smd,w
  3360  0526  008D               	movwf	13	;volatile
  3361  0527                     l2035:
  3362                           
  3363                           ;Q5.c: 231:                 if((cw==1)&&(ext==0)){cw=2;ccw=3;ext=1;PORTB=smd=0x0C;}
  3364  0527  0364               	decf	_cw,w
  3365  0528  0465               	iorwf	_cw+1,w
  3366  0529  1D03               	btfss	3,2
  3367  052A  2D2C               	goto	u1621
  3368  052B  2D2D               	goto	u1620
  3369  052C                     u1621:
  3370  052C  2D45               	goto	l2041
  3371  052D                     u1620:
  3372  052D                     l2037:
  3373  052D  0826               	movf	dynam@ext,w
  3374  052E  0427               	iorwf	dynam@ext+1,w
  3375  052F  1D03               	btfss	3,2
  3376  0530  2D32               	goto	u1631
  3377  0531  2D33               	goto	u1630
  3378  0532                     u1631:
  3379  0532  2D45               	goto	l2041
  3380  0533                     u1630:
  3381  0533                     l2039:
  3382  0533  3002               	movlw	2
  3383  0534  00E4               	movwf	_cw
  3384  0535  3000               	movlw	0
  3385  0536  00E5               	movwf	_cw+1
  3386  0537  3003               	movlw	3
  3387  0538  00E2               	movwf	_ccw
  3388  0539  3000               	movlw	0
  3389  053A  00E3               	movwf	_ccw+1
  3390  053B  3001               	movlw	1
  3391  053C  00A6               	movwf	dynam@ext
  3392  053D  3000               	movlw	0
  3393  053E  00A7               	movwf	dynam@ext+1
  3394  053F  300C               	movlw	12
  3395  0540  00A0               	movwf	dynam@smd
  3396  0541  3000               	movlw	0
  3397  0542  00A1               	movwf	dynam@smd+1
  3398  0543  0820               	movf	dynam@smd,w
  3399  0544  008D               	movwf	13	;volatile
  3400  0545                     l2041:
  3401                           
  3402                           ;Q5.c: 232:                 if((cw==2)&&(ext==0)){cw=3;ccw=2;ext=1;PORTB=smd=0x06;}
  3403  0545  3002               	movlw	2
  3404  0546  0664               	xorwf	_cw,w
  3405  0547  0465               	iorwf	_cw+1,w
  3406  0548  1D03               	btfss	3,2
  3407  0549  2D4B               	goto	u1641
  3408  054A  2D4C               	goto	u1640
  3409  054B                     u1641:
  3410  054B  2D64               	goto	l2047
  3411  054C                     u1640:
  3412  054C                     l2043:
  3413  054C  0826               	movf	dynam@ext,w
  3414  054D  0427               	iorwf	dynam@ext+1,w
  3415  054E  1D03               	btfss	3,2
  3416  054F  2D51               	goto	u1651
  3417  0550  2D52               	goto	u1650
  3418  0551                     u1651:
  3419  0551  2D64               	goto	l2047
  3420  0552                     u1650:
  3421  0552                     l2045:
  3422  0552  3003               	movlw	3
  3423  0553  00E4               	movwf	_cw
  3424  0554  3000               	movlw	0
  3425  0555  00E5               	movwf	_cw+1
  3426  0556  3002               	movlw	2
  3427  0557  00E2               	movwf	_ccw
  3428  0558  3000               	movlw	0
  3429  0559  00E3               	movwf	_ccw+1
  3430  055A  3001               	movlw	1
  3431  055B  00A6               	movwf	dynam@ext
  3432  055C  3000               	movlw	0
  3433  055D  00A7               	movwf	dynam@ext+1
  3434  055E  3006               	movlw	6
  3435  055F  00A0               	movwf	dynam@smd
  3436  0560  3000               	movlw	0
  3437  0561  00A1               	movwf	dynam@smd+1
  3438  0562  0820               	movf	dynam@smd,w
  3439  0563  008D               	movwf	13	;volatile
  3440  0564                     l2047:
  3441                           
  3442                           ;Q5.c: 233:                 if((cw==3)&&(ext==0)){cw=0;ccw=1;ext=1;PORTB=smd=0x03;}
  3443  0564  3003               	movlw	3
  3444  0565  0664               	xorwf	_cw,w
  3445  0566  0465               	iorwf	_cw+1,w
  3446  0567  1D03               	btfss	3,2
  3447  0568  2D6A               	goto	u1661
  3448  0569  2D6B               	goto	u1660
  3449  056A                     u1661:
  3450  056A  2CFD               	goto	l2013
  3451  056B                     u1660:
  3452  056B                     l2049:
  3453  056B  0826               	movf	dynam@ext,w
  3454  056C  0427               	iorwf	dynam@ext+1,w
  3455  056D  1D03               	btfss	3,2
  3456  056E  2D70               	goto	u1671
  3457  056F  2D71               	goto	u1670
  3458  0570                     u1671:
  3459  0570  2CFD               	goto	l2013
  3460  0571                     u1670:
  3461  0571                     l2051:
  3462  0571  01E4               	clrf	_cw
  3463  0572  01E5               	clrf	_cw+1
  3464  0573                     l2053:
  3465  0573  3001               	movlw	1
  3466  0574  00E2               	movwf	_ccw
  3467  0575  3000               	movlw	0
  3468  0576  00E3               	movwf	_ccw+1
  3469  0577                     l2055:
  3470  0577                     l2057:
  3471  0577  3003               	movlw	3
  3472  0578  00A0               	movwf	dynam@smd
  3473  0579  3000               	movlw	0
  3474  057A  00A1               	movwf	dynam@smd+1
  3475  057B  0820               	movf	dynam@smd,w
  3476  057C  008D               	movwf	13	;volatile
  3477  057D  2CFD               	goto	l2013
  3478  057E                     l2065:
  3479                           
  3480                           ;Q5.c: 237:                 if(flg==1)ccw=0;flg=0;
  3481  057E  0366               	decf	_flg,w
  3482  057F  0467               	iorwf	_flg+1,w
  3483  0580  1D03               	btfss	3,2
  3484  0581  2D83               	goto	u1681
  3485  0582  2D84               	goto	u1680
  3486  0583                     u1681:
  3487  0583  2D86               	goto	l129
  3488  0584                     u1680:
  3489  0584                     l2067:
  3490  0584  01E2               	clrf	_ccw
  3491  0585  01E3               	clrf	_ccw+1
  3492  0586                     l129:
  3493  0586  01E6               	clrf	_flg
  3494  0587  01E7               	clrf	_flg+1
  3495  0588                     l2069:
  3496                           
  3497                           ;Q5.c: 238:                 if((ccw==0)&&(ext==0)){ccw=1;cw=0;ext=1;PORTB=smd=0x03;}
  3498  0588  0862               	movf	_ccw,w
  3499  0589  0463               	iorwf	_ccw+1,w
  3500  058A  1D03               	btfss	3,2
  3501  058B  2D8D               	goto	u1691
  3502  058C  2D8E               	goto	u1690
  3503  058D                     u1691:
  3504  058D  2DA4               	goto	l2081
  3505  058E                     u1690:
  3506  058E                     l2071:
  3507  058E  0826               	movf	dynam@ext,w
  3508  058F  0427               	iorwf	dynam@ext+1,w
  3509  0590  1D03               	btfss	3,2
  3510  0591  2D93               	goto	u1701
  3511  0592  2D94               	goto	u1700
  3512  0593                     u1701:
  3513  0593  2DA4               	goto	l2081
  3514  0594                     u1700:
  3515  0594                     l2073:
  3516  0594  3001               	movlw	1
  3517  0595  00E2               	movwf	_ccw
  3518  0596  3000               	movlw	0
  3519  0597  00E3               	movwf	_ccw+1
  3520  0598                     l2075:
  3521  0598  01E4               	clrf	_cw
  3522  0599  01E5               	clrf	_cw+1
  3523  059A                     l2077:
  3524  059A  3001               	movlw	1
  3525  059B  00A6               	movwf	dynam@ext
  3526  059C  3000               	movlw	0
  3527  059D  00A7               	movwf	dynam@ext+1
  3528  059E                     l2079:
  3529  059E  3003               	movlw	3
  3530  059F  00A0               	movwf	dynam@smd
  3531  05A0  3000               	movlw	0
  3532  05A1  00A1               	movwf	dynam@smd+1
  3533  05A2  0820               	movf	dynam@smd,w
  3534  05A3  008D               	movwf	13	;volatile
  3535  05A4                     l2081:
  3536                           
  3537                           ;Q5.c: 239:                 if((ccw==1)&&(ext==0)){ccw=2;cw=3;ext=1;PORTB=smd=0x06;}
  3538  05A4  0362               	decf	_ccw,w
  3539  05A5  0463               	iorwf	_ccw+1,w
  3540  05A6  1D03               	btfss	3,2
  3541  05A7  2DA9               	goto	u1711
  3542  05A8  2DAA               	goto	u1710
  3543  05A9                     u1711:
  3544  05A9  2DC2               	goto	l2087
  3545  05AA                     u1710:
  3546  05AA                     l2083:
  3547  05AA  0826               	movf	dynam@ext,w
  3548  05AB  0427               	iorwf	dynam@ext+1,w
  3549  05AC  1D03               	btfss	3,2
  3550  05AD  2DAF               	goto	u1721
  3551  05AE  2DB0               	goto	u1720
  3552  05AF                     u1721:
  3553  05AF  2DC2               	goto	l2087
  3554  05B0                     u1720:
  3555  05B0                     l2085:
  3556  05B0  3002               	movlw	2
  3557  05B1  00E2               	movwf	_ccw
  3558  05B2  3000               	movlw	0
  3559  05B3  00E3               	movwf	_ccw+1
  3560  05B4  3003               	movlw	3
  3561  05B5  00E4               	movwf	_cw
  3562  05B6  3000               	movlw	0
  3563  05B7  00E5               	movwf	_cw+1
  3564  05B8  3001               	movlw	1
  3565  05B9  00A6               	movwf	dynam@ext
  3566  05BA  3000               	movlw	0
  3567  05BB  00A7               	movwf	dynam@ext+1
  3568  05BC  3006               	movlw	6
  3569  05BD  00A0               	movwf	dynam@smd
  3570  05BE  3000               	movlw	0
  3571  05BF  00A1               	movwf	dynam@smd+1
  3572  05C0  0820               	movf	dynam@smd,w
  3573  05C1  008D               	movwf	13	;volatile
  3574  05C2                     l2087:
  3575                           
  3576                           ;Q5.c: 240:                 if((ccw==2)&&(ext==0)){ccw=3;cw=2;ext=1;PORTB=smd=0x0C;}
  3577  05C2  3002               	movlw	2
  3578  05C3  0662               	xorwf	_ccw,w
  3579  05C4  0463               	iorwf	_ccw+1,w
  3580  05C5  1D03               	btfss	3,2
  3581  05C6  2DC8               	goto	u1731
  3582  05C7  2DC9               	goto	u1730
  3583  05C8                     u1731:
  3584  05C8  2DE1               	goto	l2093
  3585  05C9                     u1730:
  3586  05C9                     l2089:
  3587  05C9  0826               	movf	dynam@ext,w
  3588  05CA  0427               	iorwf	dynam@ext+1,w
  3589  05CB  1D03               	btfss	3,2
  3590  05CC  2DCE               	goto	u1741
  3591  05CD  2DCF               	goto	u1740
  3592  05CE                     u1741:
  3593  05CE  2DE1               	goto	l2093
  3594  05CF                     u1740:
  3595  05CF                     l2091:
  3596  05CF  3003               	movlw	3
  3597  05D0  00E2               	movwf	_ccw
  3598  05D1  3000               	movlw	0
  3599  05D2  00E3               	movwf	_ccw+1
  3600  05D3  3002               	movlw	2
  3601  05D4  00E4               	movwf	_cw
  3602  05D5  3000               	movlw	0
  3603  05D6  00E5               	movwf	_cw+1
  3604  05D7  3001               	movlw	1
  3605  05D8  00A6               	movwf	dynam@ext
  3606  05D9  3000               	movlw	0
  3607  05DA  00A7               	movwf	dynam@ext+1
  3608  05DB  300C               	movlw	12
  3609  05DC  00A0               	movwf	dynam@smd
  3610  05DD  3000               	movlw	0
  3611  05DE  00A1               	movwf	dynam@smd+1
  3612  05DF  0820               	movf	dynam@smd,w
  3613  05E0  008D               	movwf	13	;volatile
  3614  05E1                     l2093:
  3615                           
  3616                           ;Q5.c: 241:                 if((ccw==3)&&(ext==0)){ccw=0;cw=1;ext=1;PORTB=smd=0x09;}
  3617  05E1  3003               	movlw	3
  3618  05E2  0662               	xorwf	_ccw,w
  3619  05E3  0463               	iorwf	_ccw+1,w
  3620  05E4  1D03               	btfss	3,2
  3621  05E5  2DE7               	goto	u1751
  3622  05E6  2DE8               	goto	u1750
  3623  05E7                     u1751:
  3624  05E7  2CFD               	goto	l2013
  3625  05E8                     u1750:
  3626  05E8                     l2095:
  3627  05E8  0826               	movf	dynam@ext,w
  3628  05E9  0427               	iorwf	dynam@ext+1,w
  3629  05EA  1D03               	btfss	3,2
  3630  05EB  2DED               	goto	u1761
  3631  05EC  2DEE               	goto	u1760
  3632  05ED                     u1761:
  3633  05ED  2CFD               	goto	l2013
  3634  05EE                     u1760:
  3635  05EE                     l2097:
  3636  05EE  01E2               	clrf	_ccw
  3637  05EF  01E3               	clrf	_ccw+1
  3638  05F0                     l2099:
  3639  05F0  3001               	movlw	1
  3640  05F1  00E4               	movwf	_cw
  3641  05F2  3000               	movlw	0
  3642  05F3  00E5               	movwf	_cw+1
  3643  05F4                     l2101:
  3644  05F4                     l2103:
  3645  05F4  3009               	movlw	9
  3646  05F5  00A0               	movwf	dynam@smd
  3647  05F6  3000               	movlw	0
  3648  05F7  00A1               	movwf	dynam@smd+1
  3649  05F8  0820               	movf	dynam@smd,w
  3650  05F9  008D               	movwf	13	;volatile
  3651  05FA  2CFD               	goto	l2013
  3652  05FB                     l2111:
  3653                           
  3654                           ;Q5.c: 245:                 cw=ccw=0;
  3655  05FB  01E2               	clrf	_ccw
  3656  05FC  01E3               	clrf	_ccw+1
  3657  05FD  01E4               	clrf	_cw
  3658  05FE  01E5               	clrf	_cw+1
  3659                           
  3660                           ;Q5.c: 246:                 break;
  3661  05FF  2E10               	goto	l135
  3662  0600                     l2115:
  3663                           
  3664                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3665                           ; Switch size 1, requested type "simple"
  3666                           ; Number of cases is 1, Range of values is 0 to 0
  3667                           ; switch strategies available:
  3668                           ; Name         Instructions Cycles
  3669                           ; simple_byte            4     3 (average)
  3670                           ; direct_byte            8     6 (fixed)
  3671                           ; jumptable            260     6 (fixed)
  3672                           ;	Chosen strategy is simple_byte
  3673  0600  0875               	movf	dynam@smdata+1,w
  3674  0601  3A00               	xorlw	0	; case 0
  3675  0602  1903               	skipnz
  3676  0603  2E05               	goto	l2679
  3677  0604  2DFB               	goto	l2111
  3678  0605                     l2679:
  3679                           
  3680                           ; Switch size 1, requested type "simple"
  3681                           ; Number of cases is 3, Range of values is 0 to 2
  3682                           ; switch strategies available:
  3683                           ; Name         Instructions Cycles
  3684                           ; simple_byte           10     6 (average)
  3685                           ; direct_byte           12     6 (fixed)
  3686                           ; jumptable            260     6 (fixed)
  3687                           ;	Chosen strategy is simple_byte
  3688  0605  0874               	movf	dynam@smdata,w
  3689  0606  3A00               	xorlw	0	; case 0
  3690  0607  1903               	skipnz
  3691  0608  2CFC               	goto	l2009
  3692  0609  3A01               	xorlw	1	; case 1
  3693  060A  1903               	skipnz
  3694  060B  2D01               	goto	l2019
  3695  060C  3A03               	xorlw	3	; case 2
  3696  060D  1903               	skipnz
  3697  060E  2D7E               	goto	l2065
  3698  060F  2DFB               	goto	l2111
  3699  0610                     l135:
  3700  0610  0008               	return
  3701  0611                     __end_of_dynam:
  3702  007E                     btemp	set	126	;btemp
  3703  007E                     wtemp0	set	126
  3704                           
  3705                           	psect	config
  3706                           
  3707                           ;Config register CONFIG1 @ 0x8007
  3708                           ;	Oscillator Selection
  3709                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  3710                           ;	Watchdog Timer Enable
  3711                           ;	WDTE = OFF, WDT disabled
  3712                           ;	Power-up Timer Enable
  3713                           ;	PWRTE = OFF, PWRT disabled
  3714                           ;	MCLR Pin Function Select
  3715                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  3716                           ;	Flash Program Memory Code Protection
  3717                           ;	CP = OFF, Program memory code protection is disabled
  3718                           ;	Data Memory Code Protection
  3719                           ;	CPD = OFF, Data memory code protection is disabled
  3720                           ;	Brown-out Reset Enable
  3721                           ;	BOREN = OFF, Brown-out Reset disabled
  3722                           ;	Clock Out Enable
  3723                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  3724                           ;	Internal/External Switchover
  3725                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3726                           ;	Fail-Safe Clock Monitor Enable
  3727                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3728  8007                     	org	32775
  3729  8007  09E4               	dw	2532
  3730                           
  3731                           ;Config register CONFIG2 @ 0x8008
  3732                           ;	Flash Memory Self-Write Protection
  3733                           ;	WRT = OFF, Write protection off
  3734                           ;	Voltage Regulator Capacitor Enable
  3735                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
  3736                           ;	PLL Enable
  3737                           ;	PLLEN = OFF, 4x PLL disabled
  3738                           ;	Stack Overflow/Underflow Reset Enable
  3739                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  3740                           ;	Brown-out Reset Voltage Selection
  3741                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  3742                           ;	Low-Voltage Programming Enable
  3743                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  3744  8008                     	org	32776
  3745  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    0
    Data        156
    BSS         34
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      13
    BANK0            80     48      80
    BANK1            80      0      80
    BANK2            80      0      76
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _tact->_tactsw
    _hen7->___awdiv
    ___awdiv->___wmul

Critical Paths under _main in BANK0

    _main->_hen7
    _hen7->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                24    24      0    7325
                                             24 BANK0     24    24      0
                             ___wmul
                              _dynam
                               _fclr
                               _hen7
                           _portinit
                               _tact
                             _zenoff
 ---------------------------------------------------------------------------------
 (1) _zenoff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _tact                                                 2     0      2     594
                                              8 COMMON     2     0      2
                             _tactsw
 ---------------------------------------------------------------------------------
 (2) _tactsw                                               8     8      0     116
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 (1) _portinit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _hen7                                                20    16      4    3095
                                              4 BANK0     20    16      4
                            ___awdiv
                            ___awmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     700
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              6 COMMON     5     1      4
                                              0 BANK0      4     4      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _fclr                                                 2     0      2     402
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _dynam                                               16     8      8    2271
                                              0 COMMON     8     0      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___wmul
   _dynam
   _fclr
   _hen7
     ___awdiv
       ___wmul (ARG)
     ___awmod
     ___wmul
   _portinit
   _tact
     _tactsw
   _zenoff

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      B       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     30      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      4C       9       95.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      F9      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      F9      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Mar 03 07:43:01 2021

                     l95 0180             ___awdiv@sign 0021                       _cw 0064  
    ___wmul@multiplicand 0072                      l112 04C3                      l114 04D3  
                    l123 0509                      l116 04E9                      l108 016D  
                    l118 04F9                      l135 0610                      l208 0248  
                    l129 0586                      l217 01BF                      l170 07DA  
                    l193 01FC                      l290 03B2                      l292 03D7  
                    l453 018B                      l606 0397                      l455 019F  
                    l295 040F                      l288 03A6                      l619 0337  
                    l299 0461                      _RA0 0060                      _RA1 0061  
                    _RA2 0062                      _RC0 0070                      _RC1 0071  
                    _RC2 0072                      _RC5 0075                      _RC6 0076  
                    _RC7 0077                      _ccw 0062                      _flg 0066  
           ___awmod@sign 0076                      wreg 0009                     l2001 04ED  
                   l2011 04FD                     l2101 05F4                     l2021 0507  
                   l2013 04FD                     l2005 04F4                     l2111 05FB  
                   l2103 05F4                     l2031 051D                     l2023 050B  
                   l2015 04FE                     l2041 0545                     l2033 0521  
                   l2025 0511                     l2017 04FF                     l2009 04FC  
                   l2121 0611                     l2051 0571                     l2043 054C  
                   l2027 0517                     l2035 0527                     l2019 0501  
                   l2115 0600                     l2211 074A                     l2203 072B  
                   l2131 062D                     l2123 0614                     l2053 0573  
                   l2045 0552                     l2037 052D                     l2029 051B  
                   l2301 01A0                     l2221 075E                     l2205 0735  
                   l2141 0671                     l2133 066B                     l2125 0618  
                   l2071 058E                     l2055 0577                     l2047 0564  
                   l2039 0533                     l2303 01A1                     l2311 01AF  
                   l2231 0787                     l2223 0762                     l2207 073D  
                   l2143 067B                     l2135 066F                     l2127 061C  
                   l2073 0594                     l2081 05A4                     l2065 057E  
                   l2057 0577                     l2049 056B                     l2305 01A5  
                   l2241 079B                     l2225 076C                     l2217 074C  
                   l2209 0741                     l2161 06A8                     l2145 0683  
                   l2129 0622                     l2091 05CF                     l2083 05AA  
                   l2075 0598                     l2067 0584                     l2307 01A9  
                   l2251 07AA                     l2243 079F                     l2227 0774  
                   l2219 0756                     l2171 06BD                     l2163 06B1  
                   l2155 0692                     l2147 0687                     l2093 05E1  
                   l2085 05B0                     l2077 059A                     l2069 0588  
                   l2253 07B4                     l2245 07A8                     l2237 0789  
                   l2229 0781                     l2181 0704                     l2173 06C5  
                   l2157 069C                     l2149 0690                     l2261 07CA  
                   l2501 03CA                     l2095 05E8                     l2087 05C2  
                   l2079 059E                     l2255 07BC                     l2239 0793  
                   l2191 0714                     l2183 0708                     l2175 06C9  
                   l2159 06A4                     l2271 0201                     l2511 03D5  
                   l2503 03CA                     l2097 05EE                     l2089 05C9  
                   l2257 07C0                     l2193 071C                     l2177 06D3  
                   l2169 06B3                     l2281 021C                     l2273 0207  
                   l2521 03FE                     l2513 03E8                     l2505 03CA  
                   l2099 05F0                     l2195 0720                     l2179 06FE  
                   l1811 01C0                     l2283 021F                     l2275 020D  
                   l2267 01FD                     l2523 0405                     l2515 03ED  
                   l2531 0423                     l2507 03CF                     l1901 0300  
                   l2197 0729                     l2189 070A                     l1821 01E1  
                   l1813 01C4                     l2285 0225                     l2277 0210  
                   l2269 01FE                     l2541 0442                     l2533 0428  
                   l2525 040B                     l2517 03F1                     l2509 03D3  
                   l1911 031A                     l1903 0303                     l1831 0183  
                   l1823 01EA                     l1815 01D0                     l2287 022A  
                   l2279 0216                     l2295 0238                     l2551 0465  
                   l2543 0449                     l2535 042C                     l2527 0413  
                   l2519 03F8                     l1921 0333                     l1913 031E  
                   l1905 0308                     l1833 0187                     l1817 01DA  
                   l2289 0230                     l2561 0490                     l2553 046C  
                   l2545 044F                     l2537 0433                     l2529 041A  
                   l2481 0398                     l1851 0345                     l1843 0338  
                   l1915 0323                     l1907 030C                     l1835 0190  
                   l1931 017B                     l1827 01F7                     l1819 01DF  
                   l2563 049B                     l2547 0456                     l2539 043A  
                   l2555 0475                     l2491 03A4                     l2483 039B  
                   l1861 035A                     l1853 0349                     l1845 033A  
                   l1909 0310                     l1917 0329                     l1837 0195  
                   l1829 0181                     l1933 017E                     l1925 016E  
                   l2565 04A0                     l2557 047A                     l2549 045D  
                   l2493 03A6                     l2485 03A1                     l1871 0379  
                   l1863 035D                     l1855 034E                     l1847 033E  
                   l1919 032E                     l1839 019B                     l1927 0171  
                   l2559 047E                     l2495 03AA                     l2487 03A1  
                   l1881 038E                     l1873 037D                     l1865 0362  
                   l1857 0352                     l1849 0343                     l1929 0174  
                   l2673 023D                     l1961 016B                     l2497 03AE  
                   l2489 03A1                     l1971 04B1                     l1883 0393  
                   l1875 037E                     l1867 0366                     l1859 0354  
                   l1891 02EA                     l2675 07CF                     l1963 016C  
                   l1955 0165                     l2499 03C3                     l1981 04C7  
                   l1973 04B2                     l1965 04A7                     l2677 01B4  
                   l1877 0383                     l1869 036A                     l1893 02EF  
                   l1957 0169                     l2679 0605                     l1991 04D7  
                   l1975 04B3                     l1967 04AE                     l1879 0389  
                   l1895 02F1                     l1887 02E5                     l1959 016A  
                   l1993 04D8                     l1985 04CE                     l1977 04BA  
                   l1969 04AF                     l1897 02F5                     l1889 02E6  
                   l1995 04D9                     l1979 04BF                     l1899 02FA  
                   l1997 04E0                     l1989 04D5                     l1999 04E5  
                   u2000 0230                     u2001 022F                     u2010 0237  
                   u2011 0236                     u1300 0187                     u1301 0186  
                   u1400 0379                     u1401 0378                     u1330 019B  
                   u1331 019A                     u1315 018C                     u1420 0389  
                   u1340 033E                     u1421 0388                     u1405 0375  
                   u1341 033D                     u1325 0191                     u1430 038E  
                   u1350 0349                     u1510 0329                     u2310 03AA  
                   u1431 038D                     u1415 037F                     u1351 0348  
                   u1511 0328                     u2311 03A9                     u1600 0511  
                   u1360 035A                     u1520 032E                     u1440 02EA  
                   u1280 01DA                     u2400 0405                     u2320 03AE  
                   u1601 0510                     u1361 0359                     u1521 032D  
                   u1505 031F                     u1441 02E9                     u1281 01D9  
                   u2401 0404                     u2321 03AD                     u1610 0517  
                   u1450 02F5                     u1290 01EA                     u2410 040B  
                   u2330 03B2                     u1611 0516                     u1451 02F4  
                   u1291 01E9                     u2411 040A                     u2331 03B1  
                   u1700 0594                     u1620 052D                     u1380 036A  
                   u1460 0300                     u2500 047E                     u2420 0428  
                   u2340 03B9                     u1701 0593                     u1621 052C  
                   u1381 0369                     u1461 02FF                     u1285 01D6  
                   u2501 047D                     u2421 0427                     u2341 03B6  
                   u1710 05AA                     u1630 0533                     u1550 04BA  
                   u2430 042C                     u2350 03C1                     u1711 05A9  
                   u1631 0532                     u1551 04B9                     u1375 035E  
                   u2431 042B                     u2351 03BE                     u1720 05B0  
                   u1640 054C                     u1560 04CD                     u1480 0310  
                   u1800 0690                     u2440 0433                     u1721 05AF  
                   u1641 054B                     u1561 04CC                     u1481 030F  
                   u1801 068F                     u2441 0432                     u1730 05C9  
                   u1650 0552                     u1570 04E0                     u1490 031A  
                   u1810 069C                     u2450 043A                     u2370 03ED  
                   u2354 03BB                     u1731 05C8                     u1651 0551  
                   u1571 04DF                     u1395 036B                     u1491 0319  
                   u1475 0304                     u1811 069B                     u2451 0439  
                   u2371 03EC                     u1740 05CF                     u1660 056B  
                   u1580 04F3                     u1900 074A                     u1820 06B1  
                   u2460 044F                     u2380 03F1                     u2364 03C3  
                   u1741 05CE                     u1661 056A                     u1581 04F2  
                   u1901 0749                     u1821 06B0                     u2461 044E  
                   u2381 03F0                     u1750 05E8                     u1670 0571  
                   u1590 0507                     u1910 0756                     u1830 06BD  
                   u2470 0456                     u2390 03FE                     u1751 05E7  
                   u1671 0570                     u1591 0506                     u1495 0316  
                   u1911 0755                     u1831 06BC                     u1815 0698  
                   u2471 0455                     u2391 03FD                     u1760 05EE  
                   u1680 0584                     u1920 076B                     u1840 06D2  
                   u2480 045D                     u1761 05ED                     u1681 0583  
                   u1921 076A                     u1841 06D1                     u2481 045C  
                   u1690 058E                     u1930 0793                     u1770 0618  
                   u2490 047A                     u1691 058D                     u1931 0792  
                   u1915 0752                     u1835 06B9                     u1771 0617  
                   u2491 0479                     u1940 07A8                     u1780 0622  
                   u1941 07A7                     u1781 0621                     u1950 07B4  
                   u1870 0714                     u1790 067B                     u1951 07B3  
                   u1935 078F                     u1871 0713                     u1855 06D9  
                   u1791 067A                     u1960 07C9                     u1880 0729  
                   u1961 07C8                     u1881 0728                     u1865 06E7  
                   u1890 0735                     u1970 0207                     u1955 07B0  
                   u1891 0734                     u1875 0710                     u1795 0677  
                   u1971 0206                     u1980 0216                     u1981 0215  
                   u1990 0225                     u1895 0731                     u1991 0224  
                   _hen7 0611                     _atai 005C                     _fclr 01A0  
                   _main 0398                     _num0 00C0                     _kisu 00D4  
                   _moja 0160                     _samf 0120                     _mojf 0154  
                   _tact 01FD                     _mojh 00EC                     _moji 0140  
                   _mojn 00E8                     _samp 00A0                     _gusu 00DE  
                   fsr0h 0005                     fsr1h 0007                     indf0 0000  
                   fsr0l 0004                     fsr1l 0006                     btemp 007E  
                   start 0002                    ?_hen7 0024                    ?_fclr 0070  
                  ?_main 0070          __end_of___awdiv 0398                    ?_tact 0078  
        __end_of___awmod 0338          ___awdiv@divisor 0076          ___awdiv@counter 0020  
                  _PORTA 000C                    _PORTB 000D                    _PORTC 000E  
                  _TRISA 008C                    _TRISB 008D                    _TRISC 008E  
                  _code1 0052                    _atai1 005E                    hen7@l 0032  
                  hen7@m 0034                    hen7@n 0036                    _count 005A  
                  _dynam 04A7                    _fugou 0050                    main@k 0042  
                  main@m 0044                    status 0003                    wtemp0 007E  
        __initialization 07DB             __end_of_hen7 07DB             __end_of_fclr 01C0  
           __end_of_main 04A7             __end_of_tact 0249                   ??_hen7 0028  
                 ??_fclr 0072                   ??_main 007B                   ??_tact 007A  
                 ?_dynam 0070         ___awdiv@dividend 0078                   _ANSELA 018C  
                 _ANSELB 018D                   _OSCCON 0099              dynam@smdata 0074  
                 ___wmul 0181                   _code10 0054                   _atai10 0060  
              ??___awdiv 007A                ??___awmod 0074                   _flag_P 0068  
                 _flag_R 006A         ___awdiv@quotient 0022                   _tactsw 01C0  
        ___awmod@divisor 0070          ___awmod@counter 0075                   _zenoff 0165  
                 dynam@j 0024         __end_of_portinit 0181  __end_of__initialization 07FD  
         __pcstackCOMMON 0070             __pidataBANK1 0295             __pidataBANK2 0249  
          __end_of_dynam 0611                  ??_dynam 0078               __pbssBANK0 0050  
             __pmaintext 0398                  ?___wmul 0070                  ?_tactsw 0070  
                ?_zenoff 0070               hen7@value1 002C                  ___awdiv 0338  
                ___awmod 02E5          __size_of___wmul 001F                ?_portinit 0070  
                _code100 0056          __size_of_tactsw 003D                  __ptext1 0165  
                __ptext2 01FD                  __ptext3 01C0                  __ptext4 016E  
                __ptext5 0611                  __ptext6 0181                  __ptext7 02E5  
                __ptext8 0338                  __ptext9 01A0                  hen7@ns1 0026  
        __size_of_zenoff 0009         ___awmod@dividend 0072                  fclr@flg 0070  
                clrloop0 015A     end_of_initialization 07FD                  dynam@tm 0022  
                dynam@tr 0076                  init_ram 015F                  initloop 0160  
                tactsw@a 0076                  tactsw@b 0072                  tactsw@c 0074  
             ??_portinit 0070             hen7@value100 0030           __end_of___wmul 01A0  
         __end_of_tactsw 01FD           __end_of_zenoff 016E      start_initialization 07DB  
               ??___wmul 0074              __pdataBANK1 00A0              __pdataBANK2 0120  
               ??_tactsw 0070                 ??_zenoff 0070              __pbssCOMMON 007B  
              ___latbits 0003            __pcstackBANK0 0020                 ?___awdiv 0076  
               ?___awmod 0070        __size_of_portinit 0013                hen7@value 0024  
         __size_of_dynam 016A            dynam@dig1data 0070            dynam@dig2data 0072  
         ___wmul@product 0074                clear_ram0 0159        ___wmul@multiplier 0070  
              main@ataiL 004A                main@ataiR 004C              hen7@value10 002E  
       __size_of___awdiv 0060         __size_of___awmod 0053                 _code1000 0058  
               _main$853 0046                 __ptext10 04A7                 _flag_sw1 006E  
               _flag_sw2 006C                 _flag_sw3 007B            __size_of_hen7 01CA  
          __size_of_fclr 0020            __size_of_main 010F            __size_of_tact 004C  
               _portinit 016E                 main@segL 0048                 main@segR 004E  
               dynam@ext 0026                 dynam@smd 0020                 tact@mode 0078  
