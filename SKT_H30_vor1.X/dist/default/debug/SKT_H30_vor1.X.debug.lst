

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu May 27 16:58:12 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F1938
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.20
    31                           ; Generated 12/02/2020 GMT
    32                           ; 
    33                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F1938 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  0010                     	;# 
    80  0011                     	;# 
    81  0012                     	;# 
    82  0013                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  010C                     	;# 
   113  010D                     	;# 
   114  010E                     	;# 
   115  0110                     	;# 
   116  0111                     	;# 
   117  0112                     	;# 
   118  0113                     	;# 
   119  0114                     	;# 
   120  0115                     	;# 
   121  0116                     	;# 
   122  0117                     	;# 
   123  0118                     	;# 
   124  0119                     	;# 
   125  011A                     	;# 
   126  011B                     	;# 
   127  011D                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0191                     	;# 
   131  0191                     	;# 
   132  0192                     	;# 
   133  0193                     	;# 
   134  0193                     	;# 
   135  0193                     	;# 
   136  0194                     	;# 
   137  0195                     	;# 
   138  0196                     	;# 
   139  0199                     	;# 
   140  019A                     	;# 
   141  019B                     	;# 
   142  019B                     	;# 
   143  019B                     	;# 
   144  019B                     	;# 
   145  019C                     	;# 
   146  019C                     	;# 
   147  019D                     	;# 
   148  019E                     	;# 
   149  019F                     	;# 
   150  020D                     	;# 
   151  0210                     	;# 
   152  0211                     	;# 
   153  0212                     	;# 
   154  0213                     	;# 
   155  0214                     	;# 
   156  0215                     	;# 
   157  0215                     	;# 
   158  0216                     	;# 
   159  0217                     	;# 
   160  0291                     	;# 
   161  0291                     	;# 
   162  0292                     	;# 
   163  0293                     	;# 
   164  0294                     	;# 
   165  0295                     	;# 
   166  0295                     	;# 
   167  0296                     	;# 
   168  0298                     	;# 
   169  0298                     	;# 
   170  0299                     	;# 
   171  029A                     	;# 
   172  029B                     	;# 
   173  029C                     	;# 
   174  029C                     	;# 
   175  029D                     	;# 
   176  029E                     	;# 
   177  029F                     	;# 
   178  0311                     	;# 
   179  0311                     	;# 
   180  0312                     	;# 
   181  0313                     	;# 
   182  0314                     	;# 
   183  0315                     	;# 
   184  0315                     	;# 
   185  0316                     	;# 
   186  0318                     	;# 
   187  0318                     	;# 
   188  0319                     	;# 
   189  031A                     	;# 
   190  031C                     	;# 
   191  031C                     	;# 
   192  031D                     	;# 
   193  031E                     	;# 
   194  0394                     	;# 
   195  0395                     	;# 
   196  0396                     	;# 
   197  0415                     	;# 
   198  0416                     	;# 
   199  0417                     	;# 
   200  041C                     	;# 
   201  041D                     	;# 
   202  041E                     	;# 
   203  0791                     	;# 
   204  0792                     	;# 
   205  0793                     	;# 
   206  0794                     	;# 
   207  0795                     	;# 
   208  0798                     	;# 
   209  0799                     	;# 
   210  07A0                     	;# 
   211  07A1                     	;# 
   212  07A3                     	;# 
   213  07A4                     	;# 
   214  07A6                     	;# 
   215  07A7                     	;# 
   216  07A9                     	;# 
   217  07AA                     	;# 
   218  0FE4                     	;# 
   219  0FE5                     	;# 
   220  0FE6                     	;# 
   221  0FE7                     	;# 
   222  0FE8                     	;# 
   223  0FE9                     	;# 
   224  0FEA                     	;# 
   225  0FEB                     	;# 
   226  0FED                     	;# 
   227  0FEE                     	;# 
   228  0FEF                     	;# 
   229  0000                     	;# 
   230  0001                     	;# 
   231  0002                     	;# 
   232  0003                     	;# 
   233  0004                     	;# 
   234  0005                     	;# 
   235  0006                     	;# 
   236  0007                     	;# 
   237  0008                     	;# 
   238  0009                     	;# 
   239  000A                     	;# 
   240  000B                     	;# 
   241  000C                     	;# 
   242  000D                     	;# 
   243  000E                     	;# 
   244  0010                     	;# 
   245  0011                     	;# 
   246  0012                     	;# 
   247  0013                     	;# 
   248  0015                     	;# 
   249  0016                     	;# 
   250  0016                     	;# 
   251  0017                     	;# 
   252  0018                     	;# 
   253  0019                     	;# 
   254  001A                     	;# 
   255  001B                     	;# 
   256  001C                     	;# 
   257  001E                     	;# 
   258  001F                     	;# 
   259  008C                     	;# 
   260  008D                     	;# 
   261  008E                     	;# 
   262  0090                     	;# 
   263  0091                     	;# 
   264  0092                     	;# 
   265  0093                     	;# 
   266  0095                     	;# 
   267  0096                     	;# 
   268  0097                     	;# 
   269  0098                     	;# 
   270  0099                     	;# 
   271  009A                     	;# 
   272  009B                     	;# 
   273  009B                     	;# 
   274  009C                     	;# 
   275  009D                     	;# 
   276  009E                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  0110                     	;# 
   281  0111                     	;# 
   282  0112                     	;# 
   283  0113                     	;# 
   284  0114                     	;# 
   285  0115                     	;# 
   286  0116                     	;# 
   287  0117                     	;# 
   288  0118                     	;# 
   289  0119                     	;# 
   290  011A                     	;# 
   291  011B                     	;# 
   292  011D                     	;# 
   293  018C                     	;# 
   294  018D                     	;# 
   295  0191                     	;# 
   296  0191                     	;# 
   297  0192                     	;# 
   298  0193                     	;# 
   299  0193                     	;# 
   300  0193                     	;# 
   301  0194                     	;# 
   302  0195                     	;# 
   303  0196                     	;# 
   304  0199                     	;# 
   305  019A                     	;# 
   306  019B                     	;# 
   307  019B                     	;# 
   308  019B                     	;# 
   309  019B                     	;# 
   310  019C                     	;# 
   311  019C                     	;# 
   312  019D                     	;# 
   313  019E                     	;# 
   314  019F                     	;# 
   315  020D                     	;# 
   316  0210                     	;# 
   317  0211                     	;# 
   318  0212                     	;# 
   319  0213                     	;# 
   320  0214                     	;# 
   321  0215                     	;# 
   322  0215                     	;# 
   323  0216                     	;# 
   324  0217                     	;# 
   325  0291                     	;# 
   326  0291                     	;# 
   327  0292                     	;# 
   328  0293                     	;# 
   329  0294                     	;# 
   330  0295                     	;# 
   331  0295                     	;# 
   332  0296                     	;# 
   333  0298                     	;# 
   334  0298                     	;# 
   335  0299                     	;# 
   336  029A                     	;# 
   337  029B                     	;# 
   338  029C                     	;# 
   339  029C                     	;# 
   340  029D                     	;# 
   341  029E                     	;# 
   342  029F                     	;# 
   343  0311                     	;# 
   344  0311                     	;# 
   345  0312                     	;# 
   346  0313                     	;# 
   347  0314                     	;# 
   348  0315                     	;# 
   349  0315                     	;# 
   350  0316                     	;# 
   351  0318                     	;# 
   352  0318                     	;# 
   353  0319                     	;# 
   354  031A                     	;# 
   355  031C                     	;# 
   356  031C                     	;# 
   357  031D                     	;# 
   358  031E                     	;# 
   359  0394                     	;# 
   360  0395                     	;# 
   361  0396                     	;# 
   362  0415                     	;# 
   363  0416                     	;# 
   364  0417                     	;# 
   365  041C                     	;# 
   366  041D                     	;# 
   367  041E                     	;# 
   368  0791                     	;# 
   369  0792                     	;# 
   370  0793                     	;# 
   371  0794                     	;# 
   372  0795                     	;# 
   373  0798                     	;# 
   374  0799                     	;# 
   375  07A0                     	;# 
   376  07A1                     	;# 
   377  07A3                     	;# 
   378  07A4                     	;# 
   379  07A6                     	;# 
   380  07A7                     	;# 
   381  07A9                     	;# 
   382  07AA                     	;# 
   383  0FE4                     	;# 
   384  0FE5                     	;# 
   385  0FE6                     	;# 
   386  0FE7                     	;# 
   387  0FE8                     	;# 
   388  0FE9                     	;# 
   389  0FEA                     	;# 
   390  0FEB                     	;# 
   391  0FED                     	;# 
   392  0FEE                     	;# 
   393  0FEF                     	;# 
   394                           
   395                           	psect	idataBANK1
   396  0532                     __pidataBANK1:
   397                           
   398                           ;initializer for _samp
   399  0532  343F               	retlw	63
   400  0533  3400               	retlw	0
   401  0534  3406               	retlw	6
   402  0535  3400               	retlw	0
   403  0536  345B               	retlw	91
   404  0537  3400               	retlw	0
   405  0538  344F               	retlw	79
   406  0539  3400               	retlw	0
   407  053A  3466               	retlw	102
   408  053B  3400               	retlw	0
   409  053C  346D               	retlw	109
   410  053D  3400               	retlw	0
   411  053E  347D               	retlw	125
   412  053F  3400               	retlw	0
   413  0540  3427               	retlw	39
   414  0541  3400               	retlw	0
   415  0542  347F               	retlw	127
   416  0543  3400               	retlw	0
   417  0544  346F               	retlw	111
   418  0545  3400               	retlw	0
   419  0546  345F               	retlw	95
   420  0547  3400               	retlw	0
   421  0548  347C               	retlw	124
   422  0549  3400               	retlw	0
   423  054A  3458               	retlw	88
   424  054B  3400               	retlw	0
   425  054C  345E               	retlw	94
   426  054D  3400               	retlw	0
   427  054E  3479               	retlw	121
   428  054F  3400               	retlw	0
   429  0550  3471               	retlw	113
   430  0551  3400               	retlw	0
   431                           
   432                           ;initializer for _num0
   433  0552  343F               	retlw	63
   434  0553  3400               	retlw	0
   435  0554  3406               	retlw	6
   436  0555  3400               	retlw	0
   437  0556  345B               	retlw	91
   438  0557  3400               	retlw	0
   439  0558  344F               	retlw	79
   440  0559  3400               	retlw	0
   441  055A  3466               	retlw	102
   442  055B  3400               	retlw	0
   443  055C  346D               	retlw	109
   444  055D  3400               	retlw	0
   445  055E  347D               	retlw	125
   446  055F  3400               	retlw	0
   447  0560  3427               	retlw	39
   448  0561  3400               	retlw	0
   449  0562  347F               	retlw	127
   450  0563  3400               	retlw	0
   451  0564  346F               	retlw	111
   452  0565  3400               	retlw	0
   453                           
   454                           ;initializer for _kisu
   455  0566  3406               	retlw	6
   456  0567  3400               	retlw	0
   457  0568  344F               	retlw	79
   458  0569  3400               	retlw	0
   459  056A  346D               	retlw	109
   460  056B  3400               	retlw	0
   461  056C  3427               	retlw	39
   462  056D  3400               	retlw	0
   463  056E  346F               	retlw	111
   464  056F  3400               	retlw	0
   465                           
   466                           ;initializer for _gusu
   467  0570  343F               	retlw	63
   468  0571  3400               	retlw	0
   469  0572  345B               	retlw	91
   470  0573  3400               	retlw	0
   471  0574  3466               	retlw	102
   472  0575  3400               	retlw	0
   473  0576  347D               	retlw	125
   474  0577  3400               	retlw	0
   475  0578  347F               	retlw	127
   476  0579  3400               	retlw	0
   477                           
   478                           ;initializer for _mojn
   479  057A  3454               	retlw	84
   480  057B  3400               	retlw	0
   481  057C  3473               	retlw	115
   482  057D  3400               	retlw	0
   483                           
   484                           ;initializer for _mojh
   485  057E  3476               	retlw	118
   486  057F  3400               	retlw	0
   487  0580  3438               	retlw	56
   488  0581  3400               	retlw	0
   489                           
   490                           	psect	idataBANK2
   491  04E6                     __pidataBANK2:
   492                           
   493                           ;initializer for _samf
   494  04E6  3471               	retlw	113
   495  04E7  3400               	retlw	0
   496  04E8  3479               	retlw	121
   497  04E9  3400               	retlw	0
   498  04EA  345E               	retlw	94
   499  04EB  3400               	retlw	0
   500  04EC  3458               	retlw	88
   501  04ED  3400               	retlw	0
   502  04EE  347C               	retlw	124
   503  04EF  3400               	retlw	0
   504  04F0  345F               	retlw	95
   505  04F1  3400               	retlw	0
   506  04F2  346F               	retlw	111
   507  04F3  3400               	retlw	0
   508  04F4  347F               	retlw	127
   509  04F5  3400               	retlw	0
   510  04F6  3427               	retlw	39
   511  04F7  3400               	retlw	0
   512  04F8  347D               	retlw	125
   513  04F9  3400               	retlw	0
   514  04FA  346D               	retlw	109
   515  04FB  3400               	retlw	0
   516  04FC  3466               	retlw	102
   517  04FD  3400               	retlw	0
   518  04FE  344F               	retlw	79
   519  04FF  3400               	retlw	0
   520  0500  345B               	retlw	91
   521  0501  3400               	retlw	0
   522  0502  3406               	retlw	6
   523  0503  3400               	retlw	0
   524  0504  343F               	retlw	63
   525  0505  3400               	retlw	0
   526                           
   527                           ;initializer for _moji
   528  0506  345F               	retlw	95
   529  0507  3400               	retlw	0
   530  0508  347C               	retlw	124
   531  0509  3400               	retlw	0
   532  050A  3458               	retlw	88
   533  050B  3400               	retlw	0
   534  050C  345E               	retlw	94
   535  050D  3400               	retlw	0
   536  050E  3479               	retlw	121
   537  050F  3400               	retlw	0
   538  0510  3471               	retlw	113
   539  0511  3400               	retlw	0
   540  0512  3476               	retlw	118
   541  0513  3400               	retlw	0
   542  0514  3438               	retlw	56
   543  0515  3400               	retlw	0
   544  0516  3454               	retlw	84
   545  0517  3400               	retlw	0
   546  0518  3473               	retlw	115
   547  0519  3400               	retlw	0
   548                           
   549                           ;initializer for _mojf
   550  051A  3471               	retlw	113
   551  051B  3400               	retlw	0
   552  051C  3479               	retlw	121
   553  051D  3400               	retlw	0
   554  051E  345E               	retlw	94
   555  051F  3400               	retlw	0
   556  0520  3458               	retlw	88
   557  0521  3400               	retlw	0
   558  0522  347C               	retlw	124
   559  0523  3400               	retlw	0
   560  0524  345F               	retlw	95
   561  0525  3400               	retlw	0
   562                           
   563                           ;initializer for _moja
   564  0526  345F               	retlw	95
   565  0527  3400               	retlw	0
   566  0528  347C               	retlw	124
   567  0529  3400               	retlw	0
   568  052A  3458               	retlw	88
   569  052B  3400               	retlw	0
   570  052C  345E               	retlw	94
   571  052D  3400               	retlw	0
   572  052E  3479               	retlw	121
   573  052F  3400               	retlw	0
   574  0530  3471               	retlw	113
   575  0531  3400               	retlw	0
   576  000E                     _PORTC	set	14
   577  000D                     _PORTB	set	13
   578  000C                     _PORTA	set	12
   579  0061                     _RA1	set	97
   580  0060                     _RA0	set	96
   581  0062                     _RA2	set	98
   582  0077                     _RC7	set	119
   583  0070                     _RC0	set	112
   584  0071                     _RC1	set	113
   585  0072                     _RC2	set	114
   586  0076                     _RC6	set	118
   587  0075                     _RC5	set	117
   588  0099                     _OSCCON	set	153
   589  008E                     _TRISC	set	142
   590  008D                     _TRISB	set	141
   591  008C                     _TRISA	set	140
   592  018D                     _ANSELB	set	397
   593  018C                     _ANSELA	set	396
   594                           
   595                           	psect	cinit
   596  07DB                     start_initialization:	
   597                           ; #config settings
   598                           
   599  07DB                     __initialization:
   600                           
   601                           ; Initialize objects allocated to BANK1
   602  07DB  3032               	movlw	low __pidataBANK1
   603  07DC  0084               	movwf	4
   604  07DD  3085               	movlw	(high __pidataBANK1)| (0+128)
   605  07DE  0085               	movwf	5
   606  07DF  30A0               	movlw	low __pdataBANK1
   607  07E0  0086               	movwf	6
   608  07E1  3000               	movlw	high __pdataBANK1
   609  07E2  0087               	movwf	7
   610  07E3  3050               	movlw	80
   611  07E4  3183  2368  3187   	fcall	init_ram
   612                           
   613                           ; Initialize objects allocated to BANK2
   614  07E7  30E6               	movlw	low __pidataBANK2
   615  07E8  0084               	movwf	4
   616  07E9  3084               	movlw	(high __pidataBANK2)| (0+128)
   617  07EA  0085               	movwf	5
   618  07EB  3020               	movlw	low __pdataBANK2
   619  07EC  0086               	movwf	6
   620  07ED  3001               	movlw	high __pdataBANK2
   621  07EE  0087               	movwf	7
   622  07EF  304C               	movlw	76
   623  07F0  3183  2368  3187   	fcall	init_ram
   624                           
   625                           ; Clear objects allocated to COMMON
   626  07F3  01FC               	clrf	__pbssCOMMON& (0+127)
   627  07F4  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   628                           
   629                           ; Clear objects allocated to BANK0
   630  07F5  3020               	movlw	low __pbssBANK0
   631  07F6  0084               	movwf	4
   632  07F7  3000               	movlw	high __pbssBANK0
   633  07F8  0085               	movwf	5
   634  07F9  3020               	movlw	32
   635  07FA  3183  2362  3187   	fcall	clear_ram0
   636  07FD                     end_of_initialization:	
   637                           ;End of C runtime variable initialization code
   638                           
   639  07FD                     __end_of__initialization:
   640  07FD  0020               	movlb	0
   641  07FE  3185  2D82         	ljmp	_main	;jump to C main() function
   642                           
   643                           	psect	bssCOMMON
   644  007C                     __pbssCOMMON:
   645  007C                     _flag_sw3:
   646  007C                     	ds	2
   647                           
   648                           	psect	bssBANK0
   649  0020                     __pbssBANK0:
   650  0020                     _fugou:
   651  0020                     	ds	2
   652  0022                     _code1:
   653  0022                     	ds	2
   654  0024                     _code10:
   655  0024                     	ds	2
   656  0026                     _code100:
   657  0026                     	ds	2
   658  0028                     _code1000:
   659  0028                     	ds	2
   660  002A                     _count:
   661  002A                     	ds	2
   662  002C                     _atai:
   663  002C                     	ds	2
   664  002E                     _atai1:
   665  002E                     	ds	2
   666  0030                     _atai10:
   667  0030                     	ds	2
   668  0032                     _ccw:
   669  0032                     	ds	2
   670  0034                     _cw:
   671  0034                     	ds	2
   672  0036                     _flg:
   673  0036                     	ds	2
   674  0038                     _flag_P:
   675  0038                     	ds	2
   676  003A                     _flag_R:
   677  003A                     	ds	2
   678  003C                     _flag_sw2:
   679  003C                     	ds	2
   680  003E                     _flag_sw1:
   681  003E                     	ds	2
   682                           
   683                           	psect	dataBANK1
   684  00A0                     __pdataBANK1:
   685  00A0                     _samp:
   686  00A0                     	ds	32
   687  00C0                     _num0:
   688  00C0                     	ds	20
   689  00D4                     _kisu:
   690  00D4                     	ds	10
   691  00DE                     _gusu:
   692  00DE                     	ds	10
   693  00E8                     _mojn:
   694  00E8                     	ds	4
   695  00EC                     _mojh:
   696  00EC                     	ds	4
   697                           
   698                           	psect	dataBANK2
   699  0120                     __pdataBANK2:
   700  0120                     _samf:
   701  0120                     	ds	32
   702  0140                     _moji:
   703  0140                     	ds	20
   704  0154                     _mojf:
   705  0154                     	ds	12
   706  0160                     _moja:
   707  0160                     	ds	12
   708                           
   709                           	psect	inittext
   710  0368                     init_ram:
   711  0368  00FE               	movwf	btemp
   712  0369                     initloop:
   713  0369  0012               	moviw fsr0++
   714  036A  001E               	movwi fsr1++
   715  036B  0BFE               	decfsz	btemp,f
   716  036C  2B69               	goto	initloop
   717  036D  3400               	retlw	0
   718                           
   719                           	psect	clrtext
   720  0362                     clear_ram0:	
   721                           ;	Called with FSR0 containing the base address, and
   722                           ;	WREG with the size to clear
   723                           
   724  0362  0064               	clrwdt	;clear the watchdog before getting into this loop
   725  0363                     clrloop0:
   726  0363  0180               	clrf	0	;clear RAM location pointed to by FSR
   727  0364  3101               	addfsr 0,1
   728  0365  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   729  0366  2B63               	goto	clrloop0	;have we reached the end yet?
   730  0367  3400               	retlw	0	;all done for this memory range, return
   731                           
   732                           	psect	cstackCOMMON
   733  0070                     __pcstackCOMMON:
   734  0070                     ?_portinit:
   735  0070                     ??_portinit:	
   736                           ; 1 bytes @ 0x0
   737                           
   738  0070                     ?_zenoff:	
   739                           ; 1 bytes @ 0x0
   740                           
   741  0070                     ??_zenoff:	
   742                           ; 1 bytes @ 0x0
   743                           
   744  0070                     ?_dynam:	
   745                           ; 1 bytes @ 0x0
   746                           
   747  0070                     ?_tactsw:	
   748                           ; 1 bytes @ 0x0
   749                           
   750  0070                     ??_tactsw:	
   751                           ; 1 bytes @ 0x0
   752                           
   753  0070                     ?_fclr:	
   754                           ; 1 bytes @ 0x0
   755                           
   756  0070                     ?_main:	
   757                           ; 1 bytes @ 0x0
   758                           
   759  0070                     ?___wmul:	
   760                           ; 1 bytes @ 0x0
   761                           
   762  0070                     ?___lwdiv:	
   763                           ; 2 bytes @ 0x0
   764                           
   765  0070                     dynam@dig1data:	
   766                           ; 2 bytes @ 0x0
   767                           
   768  0070                     fclr@flg:	
   769                           ; 2 bytes @ 0x0
   770                           
   771  0070                     ___wmul@multiplier:	
   772                           ; 2 bytes @ 0x0
   773                           
   774  0070                     ___lwdiv@divisor:	
   775                           ; 2 bytes @ 0x0
   776                           
   777                           
   778                           ; 2 bytes @ 0x0
   779  0070                     	ds	2
   780  0072                     ??_fclr:
   781  0072                     dynam@dig2data:	
   782                           ; 1 bytes @ 0x2
   783                           
   784  0072                     tactsw@b:	
   785                           ; 2 bytes @ 0x2
   786                           
   787  0072                     ___wmul@multiplicand:	
   788                           ; 2 bytes @ 0x2
   789                           
   790  0072                     ___lwdiv@dividend:	
   791                           ; 2 bytes @ 0x2
   792                           
   793                           
   794                           ; 2 bytes @ 0x2
   795  0072                     	ds	2
   796  0074                     ??___wmul:
   797  0074                     ??___lwdiv:	
   798                           ; 1 bytes @ 0x4
   799                           
   800  0074                     dynam@smdata:	
   801                           ; 1 bytes @ 0x4
   802                           
   803  0074                     tactsw@c:	
   804                           ; 2 bytes @ 0x4
   805                           
   806  0074                     ___wmul@product:	
   807                           ; 2 bytes @ 0x4
   808                           
   809                           
   810                           ; 2 bytes @ 0x4
   811  0074                     	ds	1
   812  0075                     ___lwdiv@quotient:
   813                           
   814                           ; 2 bytes @ 0x5
   815  0075                     	ds	1
   816  0076                     dynam@tr:
   817  0076                     tactsw@a:	
   818                           ; 2 bytes @ 0x6
   819                           
   820                           
   821                           ; 2 bytes @ 0x6
   822  0076                     	ds	1
   823  0077                     ___lwdiv@counter:
   824                           
   825                           ; 1 bytes @ 0x7
   826  0077                     	ds	1
   827  0078                     ??_dynam:
   828  0078                     ?_tact:	
   829                           ; 1 bytes @ 0x8
   830                           
   831  0078                     ??_waitSEG:	
   832                           ; 1 bytes @ 0x8
   833                           
   834  0078                     ??_motor:	
   835                           ; 1 bytes @ 0x8
   836                           
   837  0078                     tact@mode:	
   838                           ; 1 bytes @ 0x8
   839                           
   840  0078                     waitSEG@i:	
   841                           ; 2 bytes @ 0x8
   842                           
   843  0078                     motor@i:	
   844                           ; 2 bytes @ 0x8
   845                           
   846                           
   847                           ; 2 bytes @ 0x8
   848  0078                     	ds	2
   849  007A                     ??_tact:
   850  007A                     ??_waitSEGStop:	
   851                           ; 1 bytes @ 0xA
   852                           
   853                           
   854                           ; 1 bytes @ 0xA
   855  007A                     	ds	2
   856  007C                     ??_main:
   857                           
   858                           	psect	cstackBANK0
   859  0040                     __pcstackBANK0:	
   860                           ; 1 bytes @ 0xC
   861                           
   862  0040                     dynam@smd:
   863                           
   864                           ; 2 bytes @ 0x0
   865  0040                     	ds	2
   866  0042                     dynam@tm:
   867                           
   868                           ; 2 bytes @ 0x2
   869  0042                     	ds	2
   870  0044                     dynam@j:
   871                           
   872                           ; 2 bytes @ 0x4
   873  0044                     	ds	2
   874  0046                     dynam@ext:
   875                           
   876                           ; 2 bytes @ 0x6
   877  0046                     	ds	2
   878  0048                     ?_waitSEG:
   879  0048                     ?_motor:	
   880                           ; 1 bytes @ 0x8
   881                           
   882  0048                     ?_waitSEGStop:	
   883                           ; 1 bytes @ 0x8
   884                           
   885  0048                     waitSEG@seg1:	
   886                           ; 2 bytes @ 0x8
   887                           
   888  0048                     waitSEGStop@seg1:	
   889                           ; 2 bytes @ 0x8
   890                           
   891  0048                     motor@kakudo:	
   892                           ; 2 bytes @ 0x8
   893                           
   894                           
   895                           ; 2 bytes @ 0x8
   896  0048                     	ds	2
   897  004A                     waitSEG@seg2:
   898  004A                     waitSEGStop@seg2:	
   899                           ; 2 bytes @ 0xA
   900                           
   901  004A                     motor@dig1data:	
   902                           ; 2 bytes @ 0xA
   903                           
   904                           
   905                           ; 2 bytes @ 0xA
   906  004A                     	ds	2
   907  004C                     waitSEG@wt:
   908  004C                     waitSEGStop@wt:	
   909                           ; 2 bytes @ 0xC
   910                           
   911  004C                     motor@dig2data:	
   912                           ; 2 bytes @ 0xC
   913                           
   914                           
   915                           ; 2 bytes @ 0xC
   916  004C                     	ds	2
   917  004E                     waitSEGStop@dousa:
   918  004E                     motor@smdata:	
   919                           ; 2 bytes @ 0xE
   920                           
   921                           
   922                           ; 2 bytes @ 0xE
   923  004E                     	ds	2
   924  0050                     waitSEGStop@cpSW1:
   925  0050                     motor@tr:	
   926                           ; 2 bytes @ 0x10
   927                           
   928                           
   929                           ; 2 bytes @ 0x10
   930  0050                     	ds	2
   931  0052                     waitSEGStop@cpSW2:
   932                           
   933                           ; 2 bytes @ 0x12
   934  0052                     	ds	2
   935  0054                     waitSEGStop@i:
   936                           
   937                           ; 2 bytes @ 0x14
   938  0054                     	ds	2
   939                           
   940                           	psect	maintext
   941  0582                     __pmaintext:	
   942 ;;
   943 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   944 ;;
   945 ;; *************** function _main *****************
   946 ;; Defined at:
   947 ;;		line 551 in file "Q3.c"
   948 ;; Parameters:    Size  Location     Type
   949 ;;		None
   950 ;; Auto vars:     Size  Location     Type
   951 ;;  i               2    0        int 
   952 ;;  zyoutai         2    0        int 
   953 ;;  ataiR           2    0        int 
   954 ;;  ataiL           2    0        int 
   955 ;;  segR            2    0        unsigned short 
   956 ;;  segL            2    0        unsigned short 
   957 ;;  ans             2    0        int 
   958 ;;  time            2    0        int 
   959 ;;  n               2    0        int 
   960 ;;  m               2    0        int 
   961 ;;  k               2    0        int 
   962 ;;  j               2    0        int 
   963 ;; Return value:  Size  Location     Type
   964 ;;                  1    wreg      void 
   965 ;; Registers used:
   966 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   967 ;; Tracked objects:
   968 ;;		On entry : B1F/0
   969 ;;		On exit  : 0/0
   970 ;;		Unchanged: 0/0
   971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   973 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
   974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   975 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
   976 ;;Total ram usage:       24 bytes
   977 ;; Hardware stack levels required when called:    3
   978 ;; This function calls:
   979 ;;		___wmul
   980 ;;		_dynam
   981 ;;		_fclr
   982 ;;		_motor
   983 ;;		_portinit
   984 ;;		_tact
   985 ;;		_waitSEG
   986 ;;		_waitSEGStop
   987 ;;		_zenoff
   988 ;; This function is called by:
   989 ;;		Startup code after reset
   990 ;; This function uses a non-reentrant model
   991 ;;
   992                           
   993                           
   994                           ;psect for function _main
   995  0582                     _main:
   996  0582                     l2482:	
   997                           ;incstack = 0
   998                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   999                           
  1000                           
  1001                           ;Q3.c: 554:     OSCCON=0x7A;
  1002  0582  307A               	movlw	122
  1003  0583  0021               	movlb	1	; select bank1
  1004  0584  0099               	movwf	25	;volatile
  1005  0585                     l2484:
  1006                           
  1007                           ;Q3.c: 556:     portinit();
  1008  0585  3183  2377  3185   	fcall	_portinit
  1009                           
  1010                           ;Q3.c: 558:     zenoff();
  1011  0588  3183  236E  3185   	fcall	_zenoff
  1012  058B                     l2486:
  1013  058B                     l2488:
  1014  058B                     l2490:
  1015  058B                     l2492:
  1016  058B                     l2494:
  1017  058B                     l290:	
  1018                           ;Q3.c: 563:     while((RA0!=1)||(RA1!=1)||(RA2!=1));
  1019                           
  1020  058B  0020               	movlb	0	; select bank0
  1021  058C  1C0C               	btfss	12,0	;volatile
  1022  058D  2D8F               	goto	u2071
  1023  058E  2D90               	goto	u2070
  1024  058F                     u2071:
  1025  058F  2D8B               	goto	l290
  1026  0590                     u2070:
  1027  0590                     l2496:
  1028  0590  1C8C               	btfss	12,1	;volatile
  1029  0591  2D93               	goto	u2081
  1030  0592  2D94               	goto	u2080
  1031  0593                     u2081:
  1032  0593  2D8B               	goto	l290
  1033  0594                     u2080:
  1034  0594                     l2498:
  1035  0594  1D0C               	btfss	12,2	;volatile
  1036  0595  2D97               	goto	u2091
  1037  0596  2D98               	goto	u2090
  1038  0597                     u2091:
  1039  0597  2D8B               	goto	l290
  1040  0598                     u2090:
  1041  0598                     l292:
  1042                           
  1043                           ;Q3.c: 566:     RC2=RC0=RC1=1;
  1044  0598  148E               	bsf	14,1	;volatile
  1045  0599  188E               	btfsc	14,1	;volatile
  1046  059A  2D9C               	goto	u2101
  1047  059B  2D9F               	goto	u2100
  1048  059C                     u2101:
  1049  059C  0020               	movlb	0	; select bank0
  1050  059D  140E               	bsf	14,0	;volatile
  1051  059E  2DA1               	goto	u2114
  1052  059F                     u2100:
  1053  059F  0020               	movlb	0	; select bank0
  1054  05A0  100E               	bcf	14,0	;volatile
  1055  05A1                     u2114:
  1056  05A1  180E               	btfsc	14,0	;volatile
  1057  05A2  2DA4               	goto	u2111
  1058  05A3  2DA7               	goto	u2110
  1059  05A4                     u2111:
  1060  05A4  0020               	movlb	0	; select bank0
  1061  05A5  150E               	bsf	14,2	;volatile
  1062  05A6  2DA9               	goto	u2124
  1063  05A7                     u2110:
  1064  05A7  0020               	movlb	0	; select bank0
  1065  05A8  110E               	bcf	14,2	;volatile
  1066  05A9                     u2124:
  1067  05A9                     l2500:
  1068                           
  1069                           ;Q3.c: 569:     fclr(2);
  1070  05A9  3002               	movlw	2
  1071  05AA  00F0               	movwf	fclr@flg
  1072  05AB  3000               	movlw	0
  1073  05AC  00F1               	movwf	fclr@flg+1
  1074  05AD  3183  23A9  3185   	fcall	_fclr
  1075  05B0                     l2502:
  1076  05B0                     l2504:
  1077  05B0                     l2506:
  1078  05B0                     l2508:
  1079  05B0                     l2510:
  1080  05B0                     l2512:
  1081  05B0                     l2514:
  1082  05B0                     l2516:
  1083                           
  1084                           ;Q3.c: 595:         if(RA0 == 0 && RA1 ==1){
  1085  05B0  0020               	movlb	0	; select bank0
  1086  05B1  180C               	btfsc	12,0	;volatile
  1087  05B2  2DB4               	goto	u2131
  1088  05B3  2DB5               	goto	u2130
  1089  05B4                     u2131:
  1090  05B4  2DB0               	goto	l2516
  1091  05B5                     u2130:
  1092  05B5                     l2518:
  1093  05B5  1C8C               	btfss	12,1	;volatile
  1094  05B6  2DB8               	goto	u2141
  1095  05B7  2DB9               	goto	u2140
  1096  05B8                     u2141:
  1097  05B8  2DB0               	goto	l2516
  1098  05B9                     u2140:
  1099  05B9                     l2520:
  1100                           
  1101                           ;Q3.c: 596:             dynam((0x02|0x04|0x08|0x10|0x20),(0x01|0x02|0x10|0x20|0x40),0,0)
      +                          ;
  1102  05B9  303E               	movlw	62
  1103  05BA  00F0               	movwf	dynam@dig1data
  1104  05BB  3000               	movlw	0
  1105  05BC  00F1               	movwf	dynam@dig1data+1
  1106  05BD  3073               	movlw	115
  1107  05BE  00F2               	movwf	dynam@dig2data
  1108  05BF  3000               	movlw	0
  1109  05C0  00F3               	movwf	dynam@dig2data+1
  1110  05C1  3000               	movlw	0
  1111  05C2  00F4               	movwf	dynam@smdata
  1112  05C3  00F5               	movwf	dynam@smdata+1
  1113  05C4  3000               	movlw	0
  1114  05C5  00F6               	movwf	dynam@tr
  1115  05C6  00F7               	movwf	dynam@tr+1
  1116  05C7  3186  2671  3185   	fcall	_dynam
  1117  05CA                     l2522:
  1118                           
  1119                           ;Q3.c: 598:             if(RA0 ==1 &&RA1 ==1){
  1120  05CA  0020               	movlb	0	; select bank0
  1121  05CB  1C0C               	btfss	12,0	;volatile
  1122  05CC  2DCE               	goto	u2151
  1123  05CD  2DCF               	goto	u2150
  1124  05CE                     u2151:
  1125  05CE  2DB0               	goto	l2516
  1126  05CF                     u2150:
  1127  05CF                     l2524:
  1128  05CF  1C8C               	btfss	12,1	;volatile
  1129  05D0  2DD2               	goto	u2161
  1130  05D1  2DD3               	goto	u2160
  1131  05D2                     u2161:
  1132  05D2  2DB0               	goto	l2516
  1133  05D3                     u2160:
  1134  05D3                     l2526:
  1135  05D3  2DD3               	goto	l2526
  1136  05D4  3180  2802         	ljmp	start
  1137  05D6                     __end_of_main:
  1138                           
  1139                           	psect	text1
  1140  036E                     __ptext1:	
  1141 ;; *************** function _zenoff *****************
  1142 ;; Defined at:
  1143 ;;		line 195 in file "Q3.c"
  1144 ;; Parameters:    Size  Location     Type
  1145 ;;		None
  1146 ;; Auto vars:     Size  Location     Type
  1147 ;;		None
  1148 ;; Return value:  Size  Location     Type
  1149 ;;                  1    wreg      void 
  1150 ;; Registers used:
  1151 ;;		status,2
  1152 ;; Tracked objects:
  1153 ;;		On entry : 0/0
  1154 ;;		On exit  : 0/0
  1155 ;;		Unchanged: 0/0
  1156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1161 ;;Total ram usage:        0 bytes
  1162 ;; Hardware stack levels used:    1
  1163 ;; This function calls:
  1164 ;;		Nothing
  1165 ;; This function is called by:
  1166 ;;		_main
  1167 ;; This function uses a non-reentrant model
  1168 ;;
  1169                           
  1170                           
  1171                           ;psect for function _zenoff
  1172  036E                     _zenoff:
  1173  036E                     l2104:	
  1174                           ;incstack = 0
  1175                           ; Regs used in _zenoff: [status,2]
  1176                           
  1177                           
  1178                           ;Q3.c: 197:     RC2=1;
  1179  036E  0020               	movlb	0	; select bank0
  1180  036F  150E               	bsf	14,2	;volatile
  1181                           
  1182                           ;Q3.c: 198:     RC1=1;
  1183  0370  148E               	bsf	14,1	;volatile
  1184                           
  1185                           ;Q3.c: 199:     RC0=1;
  1186  0371  140E               	bsf	14,0	;volatile
  1187  0372                     l2106:
  1188                           
  1189                           ;Q3.c: 200:     PORTB=0x00;
  1190  0372  018D               	clrf	13	;volatile
  1191  0373                     l2108:
  1192                           
  1193                           ;Q3.c: 201:     RC7=0;RC7=1;RC7=0;
  1194  0373  138E               	bcf	14,7	;volatile
  1195  0374                     l2110:
  1196  0374  178E               	bsf	14,7	;volatile
  1197  0375                     l2112:
  1198  0375  138E               	bcf	14,7	;volatile
  1199  0376                     l108:
  1200  0376  0008               	return
  1201  0377                     __end_of_zenoff:
  1202                           
  1203                           	psect	text2
  1204  05D6                     __ptext2:	
  1205 ;; *************** function _waitSEGStop *****************
  1206 ;; Defined at:
  1207 ;;		line 464 in file "Q3.c"
  1208 ;; Parameters:    Size  Location     Type
  1209 ;;  seg1            2    8[BANK0 ] unsigned short 
  1210 ;;  seg2            2   10[BANK0 ] unsigned short 
  1211 ;;  wt              2   12[BANK0 ] unsigned short 
  1212 ;;  dousa           2   14[BANK0 ] int 
  1213 ;; Auto vars:     Size  Location     Type
  1214 ;;  i               2   20[BANK0 ] unsigned int 
  1215 ;;  cpSW2           2   18[BANK0 ] int 
  1216 ;;  cpSW1           2   16[BANK0 ] int 
  1217 ;; Return value:  Size  Location     Type
  1218 ;;                  2    8[BANK0 ] int 
  1219 ;; Registers used:
  1220 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1221 ;; Tracked objects:
  1222 ;;		On entry : 0/0
  1223 ;;		On exit  : 0/0
  1224 ;;		Unchanged: 0/0
  1225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1226 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1227 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1228 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1229 ;;      Totals:         2      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1230 ;;Total ram usage:       16 bytes
  1231 ;; Hardware stack levels used:    1
  1232 ;; Hardware stack levels required when called:    2
  1233 ;; This function calls:
  1234 ;;		___lwdiv
  1235 ;;		_dynam
  1236 ;;		_fclr
  1237 ;;		_tact
  1238 ;; This function is called by:
  1239 ;;		_main
  1240 ;; This function uses a non-reentrant model
  1241 ;;
  1242                           
  1243                           
  1244                           ;psect for function _waitSEGStop
  1245  05D6                     _waitSEGStop:
  1246  05D6                     l2128:	
  1247                           ;incstack = 0
  1248                           ; Regs used in _waitSEGStop: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1249                           
  1250                           
  1251                           ;Q3.c: 464: int waitSEGStop(unsigned short seg1,unsigned short seg2,unsigned short wt,in
      +                          t dousa);Q3.c: 465: {;Q3.c: 467:     int cpSW1 = RA0;
  1252  05D6  1003               	clrc
  1253  05D7  0020               	movlb	0	; select bank0
  1254  05D8  180C               	btfsc	12,0	;volatile
  1255  05D9  1403               	setc
  1256  05DA  3000               	movlw	0
  1257  05DB  3D09               	addwfc	9,w
  1258  05DC  00FA               	movwf	??_waitSEGStop
  1259  05DD  01FB               	clrf	??_waitSEGStop+1
  1260  05DE  087A               	movf	??_waitSEGStop,w
  1261  05DF  00D0               	movwf	waitSEGStop@cpSW1
  1262  05E0  087B               	movf	??_waitSEGStop+1,w
  1263  05E1  00D1               	movwf	waitSEGStop@cpSW1+1
  1264                           
  1265                           ;Q3.c: 468:     int cpSW2 = RA1;
  1266  05E2  1003               	clrc
  1267  05E3  188C               	btfsc	12,1	;volatile
  1268  05E4  1403               	setc
  1269  05E5  3000               	movlw	0
  1270  05E6  3D09               	addwfc	9,w
  1271  05E7  00FA               	movwf	??_waitSEGStop
  1272  05E8  01FB               	clrf	??_waitSEGStop+1
  1273  05E9  087A               	movf	??_waitSEGStop,w
  1274  05EA  00D2               	movwf	waitSEGStop@cpSW2
  1275  05EB  087B               	movf	??_waitSEGStop+1,w
  1276  05EC  00D3               	movwf	waitSEGStop@cpSW2+1
  1277  05ED                     l2130:
  1278                           
  1279                           ;Q3.c: 472:     wt = wt / 10;
  1280  05ED  300A               	movlw	10
  1281  05EE  00F0               	movwf	___lwdiv@divisor
  1282  05EF  3000               	movlw	0
  1283  05F0  00F1               	movwf	___lwdiv@divisor+1
  1284  05F1  084D               	movf	waitSEGStop@wt+1,w
  1285  05F2  00F3               	movwf	___lwdiv@dividend+1
  1286  05F3  084C               	movf	waitSEGStop@wt,w
  1287  05F4  00F2               	movwf	___lwdiv@dividend
  1288  05F5  3184  2421  3185   	fcall	___lwdiv
  1289  05F8  0871               	movf	?___lwdiv+1,w
  1290  05F9  0020               	movlb	0	; select bank0
  1291  05FA  00CD               	movwf	waitSEGStop@wt+1
  1292  05FB  0870               	movf	?___lwdiv,w
  1293  05FC  00CC               	movwf	waitSEGStop@wt
  1294  05FD                     l2132:
  1295                           
  1296                           ;Q3.c: 473:     unsigned int i;;Q3.c: 475:     for(i=wt;i>0;--i){
  1297  05FD  084D               	movf	waitSEGStop@wt+1,w
  1298  05FE  00D5               	movwf	waitSEGStop@i+1
  1299  05FF  084C               	movf	waitSEGStop@wt,w
  1300  0600  00D4               	movwf	waitSEGStop@i
  1301  0601                     l2134:
  1302  0601  0854               	movf	waitSEGStop@i,w
  1303  0602  0455               	iorwf	waitSEGStop@i+1,w
  1304  0603  1D03               	btfss	3,2
  1305  0604  2E06               	goto	u1501
  1306  0605  2E07               	goto	u1500
  1307  0606                     u1501:
  1308  0606  2E08               	goto	l2138
  1309  0607                     u1500:
  1310  0607  2E6E               	goto	l2176
  1311  0608                     l2138:
  1312                           
  1313                           ;Q3.c: 476:         dynam(seg1,seg2,0,0);
  1314  0608  0849               	movf	waitSEGStop@seg1+1,w
  1315  0609  00F1               	movwf	dynam@dig1data+1
  1316  060A  0848               	movf	waitSEGStop@seg1,w
  1317  060B  00F0               	movwf	dynam@dig1data
  1318  060C  084B               	movf	waitSEGStop@seg2+1,w
  1319  060D  00F3               	movwf	dynam@dig2data+1
  1320  060E  084A               	movf	waitSEGStop@seg2,w
  1321  060F  00F2               	movwf	dynam@dig2data
  1322  0610  3000               	movlw	0
  1323  0611  00F4               	movwf	dynam@smdata
  1324  0612  00F5               	movwf	dynam@smdata+1
  1325  0613  3000               	movlw	0
  1326  0614  00F6               	movwf	dynam@tr
  1327  0615  00F7               	movwf	dynam@tr+1
  1328  0616  3186  2671  3185   	fcall	_dynam
  1329                           
  1330                           ;Q3.c: 478:         tact(0);
  1331  0619  3000               	movlw	0
  1332  061A  00F8               	movwf	tact@mode
  1333  061B  00F9               	movwf	tact@mode+1
  1334  061C  3184  249A  3185   	fcall	_tact
  1335  061F                     l2140:
  1336                           
  1337                           ;Q3.c: 480:         if(cpSW1 != RA0){
  1338  061F  1003               	clrc
  1339  0620  0020               	movlb	0	; select bank0
  1340  0621  180C               	btfsc	12,0	;volatile
  1341  0622  1403               	setc
  1342  0623  3000               	movlw	0
  1343  0624  3D09               	addwfc	9,w
  1344  0625  00FA               	movwf	??_waitSEGStop
  1345  0626  01FB               	clrf	??_waitSEGStop+1
  1346  0627  0851               	movf	waitSEGStop@cpSW1+1,w
  1347  0628  067B               	xorwf	??_waitSEGStop+1,w
  1348  0629  1D03               	skipz
  1349  062A  2E2D               	goto	u1515
  1350  062B  0850               	movf	waitSEGStop@cpSW1,w
  1351  062C  067A               	xorwf	??_waitSEGStop,w
  1352  062D                     u1515:
  1353  062D  1903               	skipnz
  1354  062E  2E30               	goto	u1511
  1355  062F  2E31               	goto	u1510
  1356  0630                     u1511:
  1357  0630  2E42               	goto	l2150
  1358  0631                     u1510:
  1359  0631                     l2142:
  1360                           
  1361                           ;Q3.c: 481:             if((0b100 & dousa) == 0b100){
  1362  0631  1D4E               	btfss	waitSEGStop@dousa,2
  1363  0632  2E34               	goto	u1521
  1364  0633  2E35               	goto	u1520
  1365  0634                     u1521:
  1366  0634  2E42               	goto	l2150
  1367  0635                     u1520:
  1368  0635                     l2144:
  1369                           
  1370                           ;Q3.c: 483:                 fclr(2);
  1371  0635  3002               	movlw	2
  1372  0636  00F0               	movwf	fclr@flg
  1373  0637  3000               	movlw	0
  1374  0638  00F1               	movwf	fclr@flg+1
  1375  0639  3183  23A9  3185   	fcall	_fclr
  1376  063C                     l2146:
  1377                           
  1378                           ;Q3.c: 484:                 return 1;
  1379  063C  3001               	movlw	1
  1380  063D  0020               	movlb	0	; select bank0
  1381  063E  00C8               	movwf	?_waitSEGStop
  1382  063F  3000               	movlw	0
  1383  0640  00C9               	movwf	?_waitSEGStop+1
  1384  0641  2E70               	goto	l265
  1385  0642                     l2150:
  1386                           
  1387                           ;Q3.c: 487:         if(cpSW2 != RA1){
  1388  0642  1003               	clrc
  1389  0643  188C               	btfsc	12,1	;volatile
  1390  0644  1403               	setc
  1391  0645  3000               	movlw	0
  1392  0646  3D09               	addwfc	9,w
  1393  0647  00FA               	movwf	??_waitSEGStop
  1394  0648  01FB               	clrf	??_waitSEGStop+1
  1395  0649  0853               	movf	waitSEGStop@cpSW2+1,w
  1396  064A  067B               	xorwf	??_waitSEGStop+1,w
  1397  064B  1D03               	skipz
  1398  064C  2E4F               	goto	u1535
  1399  064D  0852               	movf	waitSEGStop@cpSW2,w
  1400  064E  067A               	xorwf	??_waitSEGStop,w
  1401  064F                     u1535:
  1402  064F  1903               	skipnz
  1403  0650  2E52               	goto	u1531
  1404  0651  2E53               	goto	u1530
  1405  0652                     u1531:
  1406  0652  2E58               	goto	l2160
  1407  0653                     u1530:
  1408  0653                     l2152:
  1409                           
  1410                           ;Q3.c: 488:             if((0b010 & dousa) == 0b010){
  1411  0653  1CCE               	btfss	waitSEGStop@dousa,1
  1412  0654  2E56               	goto	u1541
  1413  0655  2E57               	goto	u1540
  1414  0656                     u1541:
  1415  0656  2E58               	goto	l2160
  1416  0657                     u1540:
  1417  0657  2E35               	goto	l2144
  1418  0658                     l2160:
  1419                           
  1420                           ;Q3.c: 494:         if(((flag_sw3==1)&&(flag_R==1))){
  1421  0658  037C               	decf	_flag_sw3,w
  1422  0659  047D               	iorwf	_flag_sw3+1,w
  1423  065A  1D03               	btfss	3,2
  1424  065B  2E5D               	goto	u1551
  1425  065C  2E5E               	goto	u1550
  1426  065D                     u1551:
  1427  065D  2E69               	goto	l2172
  1428  065E                     u1550:
  1429  065E                     l2162:
  1430  065E  033A               	decf	_flag_R,w
  1431  065F  043B               	iorwf	_flag_R+1,w
  1432  0660  1D03               	btfss	3,2
  1433  0661  2E63               	goto	u1561
  1434  0662  2E64               	goto	u1560
  1435  0663                     u1561:
  1436  0663  2E69               	goto	l2172
  1437  0664                     u1560:
  1438  0664                     l2164:
  1439                           
  1440                           ;Q3.c: 495:             if((0b001 & dousa) == 0b001){
  1441  0664  1C4E               	btfss	waitSEGStop@dousa,0
  1442  0665  2E67               	goto	u1571
  1443  0666  2E68               	goto	u1570
  1444  0667                     u1571:
  1445  0667  2E69               	goto	l2172
  1446  0668                     u1570:
  1447  0668  2E35               	goto	l2144
  1448  0669                     l2172:
  1449                           
  1450                           ;Q3.c: 501:     }
  1451  0669  3001               	movlw	1
  1452  066A  02D4               	subwf	waitSEGStop@i,f
  1453  066B  3000               	movlw	0
  1454  066C  3BD5               	subwfb	waitSEGStop@i+1,f
  1455  066D  2E01               	goto	l2134
  1456  066E                     l2176:
  1457                           
  1458                           ;Q3.c: 503:     return 0;
  1459  066E  01C8               	clrf	?_waitSEGStop
  1460  066F  01C9               	clrf	?_waitSEGStop+1
  1461  0670                     l265:
  1462  0670  0008               	return
  1463  0671                     __end_of_waitSEGStop:
  1464                           
  1465                           	psect	text3
  1466  049A                     __ptext3:	
  1467 ;; *************** function _tact *****************
  1468 ;; Defined at:
  1469 ;;		line 346 in file "Q3.c"
  1470 ;; Parameters:    Size  Location     Type
  1471 ;;  mode            2    8[COMMON] unsigned short 
  1472 ;; Auto vars:     Size  Location     Type
  1473 ;;		None
  1474 ;; Return value:  Size  Location     Type
  1475 ;;                  1    wreg      void 
  1476 ;; Registers used:
  1477 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1478 ;; Tracked objects:
  1479 ;;		On entry : 0/0
  1480 ;;		On exit  : 0/0
  1481 ;;		Unchanged: 0/0
  1482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1483 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1486 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1487 ;;Total ram usage:        2 bytes
  1488 ;; Hardware stack levels used:    1
  1489 ;; Hardware stack levels required when called:    1
  1490 ;; This function calls:
  1491 ;;		_tactsw
  1492 ;; This function is called by:
  1493 ;;		_waitSEGStop
  1494 ;;		_main
  1495 ;;		_kaisu
  1496 ;;		_motorStop
  1497 ;; This function uses a non-reentrant model
  1498 ;;
  1499                           
  1500                           
  1501                           ;psect for function _tact
  1502  049A                     _tact:
  1503  049A                     l1998:	
  1504                           ;incstack = 0
  1505                           ; Regs used in _tact: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1506                           
  1507                           
  1508                           ;Q3.c: 346: void tact(unsigned short mode);Q3.c: 347: {;Q3.c: 348:     switch(mode){
  1509  049A  2CD5               	goto	l2026
  1510  049B                     l2000:
  1511                           
  1512                           ;Q3.c: 350:                 tactsw();
  1513  049B  3184  245D  3184   	fcall	_tactsw
  1514  049E                     l2002:
  1515                           
  1516                           ;Q3.c: 351:                 if(flag_sw3==0)flag_R=1;
  1517  049E  087C               	movf	_flag_sw3,w
  1518  049F  047D               	iorwf	_flag_sw3+1,w
  1519  04A0  1D03               	btfss	3,2
  1520  04A1  2CA3               	goto	u1351
  1521  04A2  2CA4               	goto	u1350
  1522  04A3                     u1351:
  1523  04A3  2CE5               	goto	l208
  1524  04A4                     u1350:
  1525  04A4                     l2004:
  1526  04A4  3001               	movlw	1
  1527  04A5  0020               	movlb	0	; select bank0
  1528  04A6  00BA               	movwf	_flag_R
  1529  04A7  3000               	movlw	0
  1530  04A8  00BB               	movwf	_flag_R+1
  1531  04A9  2CE5               	goto	l208
  1532  04AA                     l2006:
  1533                           
  1534                           ;Q3.c: 354:                 tactsw();
  1535  04AA  3184  245D  3184   	fcall	_tactsw
  1536  04AD                     l2008:
  1537                           
  1538                           ;Q3.c: 355:                 if(flag_sw3==1)flag_P=1;
  1539  04AD  037C               	decf	_flag_sw3,w
  1540  04AE  047D               	iorwf	_flag_sw3+1,w
  1541  04AF  1D03               	btfss	3,2
  1542  04B0  2CB2               	goto	u1361
  1543  04B1  2CB3               	goto	u1360
  1544  04B2                     u1361:
  1545  04B2  2CE5               	goto	l208
  1546  04B3                     u1360:
  1547  04B3                     l2010:
  1548  04B3  3001               	movlw	1
  1549  04B4  0020               	movlb	0	; select bank0
  1550  04B5  00B8               	movwf	_flag_P
  1551  04B6  3000               	movlw	0
  1552  04B7  00B9               	movwf	_flag_P+1
  1553  04B8  2CE5               	goto	l208
  1554  04B9                     l2012:
  1555                           
  1556                           ;Q3.c: 358:                 tactsw();
  1557  04B9  3184  245D  3184   	fcall	_tactsw
  1558  04BC                     l2014:
  1559                           
  1560                           ;Q3.c: 359:                 if(flag_sw3==0)flag_R=1;
  1561  04BC  087C               	movf	_flag_sw3,w
  1562  04BD  047D               	iorwf	_flag_sw3+1,w
  1563  04BE  1D03               	btfss	3,2
  1564  04BF  2CC1               	goto	u1371
  1565  04C0  2CC2               	goto	u1370
  1566  04C1                     u1371:
  1567  04C1  2CC7               	goto	l2018
  1568  04C2                     u1370:
  1569  04C2                     l2016:
  1570  04C2  3001               	movlw	1
  1571  04C3  0020               	movlb	0	; select bank0
  1572  04C4  00BA               	movwf	_flag_R
  1573  04C5  3000               	movlw	0
  1574  04C6  00BB               	movwf	_flag_R+1
  1575  04C7                     l2018:
  1576                           
  1577                           ;Q3.c: 360:                 if((flag_sw3==1)&&(flag_R==1))flag_P=1;
  1578  04C7  037C               	decf	_flag_sw3,w
  1579  04C8  047D               	iorwf	_flag_sw3+1,w
  1580  04C9  1D03               	btfss	3,2
  1581  04CA  2CCC               	goto	u1381
  1582  04CB  2CCD               	goto	u1380
  1583  04CC                     u1381:
  1584  04CC  2CE5               	goto	l208
  1585  04CD                     u1380:
  1586  04CD                     l2020:
  1587  04CD  0020               	movlb	0	; select bank0
  1588  04CE  033A               	decf	_flag_R,w
  1589  04CF  043B               	iorwf	_flag_R+1,w
  1590  04D0  1D03               	btfss	3,2
  1591  04D1  2CD3               	goto	u1391
  1592  04D2  2CD4               	goto	u1390
  1593  04D3                     u1391:
  1594  04D3  2CE5               	goto	l208
  1595  04D4                     u1390:
  1596  04D4  2CB3               	goto	l2010
  1597  04D5                     l2026:
  1598                           
  1599                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1600                           ; Switch size 1, requested type "simple"
  1601                           ; Number of cases is 1, Range of values is 0 to 0
  1602                           ; switch strategies available:
  1603                           ; Name         Instructions Cycles
  1604                           ; simple_byte            4     3 (average)
  1605                           ; direct_byte            8     6 (fixed)
  1606                           ; jumptable            260     6 (fixed)
  1607                           ;	Chosen strategy is simple_byte
  1608  04D5  0879               	movf	tact@mode+1,w
  1609  04D6  3A00               	xorlw	0	; case 0
  1610  04D7  1903               	skipnz
  1611  04D8  2CDA               	goto	l2744
  1612  04D9  2CE5               	goto	l208
  1613  04DA                     l2744:
  1614                           
  1615                           ; Switch size 1, requested type "simple"
  1616                           ; Number of cases is 3, Range of values is 0 to 2
  1617                           ; switch strategies available:
  1618                           ; Name         Instructions Cycles
  1619                           ; simple_byte           10     6 (average)
  1620                           ; direct_byte           12     6 (fixed)
  1621                           ; jumptable            260     6 (fixed)
  1622                           ;	Chosen strategy is simple_byte
  1623  04DA  0878               	movf	tact@mode,w
  1624  04DB  3A00               	xorlw	0	; case 0
  1625  04DC  1903               	skipnz
  1626  04DD  2C9B               	goto	l2000
  1627  04DE  3A01               	xorlw	1	; case 1
  1628  04DF  1903               	skipnz
  1629  04E0  2CAA               	goto	l2006
  1630  04E1  3A03               	xorlw	3	; case 2
  1631  04E2  1903               	skipnz
  1632  04E3  2CB9               	goto	l2012
  1633  04E4  2CE5               	goto	l208
  1634  04E5                     l208:
  1635  04E5  0008               	return
  1636  04E6                     __end_of_tact:
  1637                           
  1638                           	psect	text4
  1639  045D                     __ptext4:	
  1640 ;; *************** function _tactsw *****************
  1641 ;; Defined at:
  1642 ;;		line 331 in file "Q3.c"
  1643 ;; Parameters:    Size  Location     Type
  1644 ;;		None
  1645 ;; Auto vars:     Size  Location     Type
  1646 ;;  a               2    6[COMMON] unsigned short 
  1647 ;;  c               2    4[COMMON] unsigned short 
  1648 ;;  b               2    2[COMMON] unsigned short 
  1649 ;; Return value:  Size  Location     Type
  1650 ;;                  1    wreg      void 
  1651 ;; Registers used:
  1652 ;;		wreg, status,2, status,0
  1653 ;; Tracked objects:
  1654 ;;		On entry : 0/0
  1655 ;;		On exit  : 0/0
  1656 ;;		Unchanged: 0/0
  1657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1659 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1660 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1661 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1662 ;;Total ram usage:        8 bytes
  1663 ;; Hardware stack levels used:    1
  1664 ;; This function calls:
  1665 ;;		Nothing
  1666 ;; This function is called by:
  1667 ;;		_tact
  1668 ;; This function uses a non-reentrant model
  1669 ;;
  1670                           
  1671                           
  1672                           ;psect for function _tactsw
  1673  045D                     _tactsw:
  1674  045D                     l1824:	
  1675                           ;incstack = 0
  1676                           ; Regs used in _tactsw: [wreg+status,2+status,0]
  1677                           
  1678                           
  1679                           ;Q3.c: 333:     unsigned short a,b,c;;Q3.c: 334:     b=c=0;
  1680  045D  01F4               	clrf	tactsw@c
  1681  045E  01F5               	clrf	tactsw@c+1
  1682  045F  01F2               	clrf	tactsw@b
  1683  0460  01F3               	clrf	tactsw@b+1
  1684  0461                     l1826:
  1685                           
  1686                           ;Q3.c: 336:             a=RA2;
  1687  0461  1003               	clrc
  1688  0462  0020               	movlb	0	; select bank0
  1689  0463  190C               	btfsc	12,2	;volatile
  1690  0464  1403               	setc
  1691  0465  3000               	movlw	0
  1692  0466  3D09               	addwfc	9,w
  1693  0467  00F0               	movwf	??_tactsw
  1694  0468  01F1               	clrf	??_tactsw+1
  1695  0469  0870               	movf	??_tactsw,w
  1696  046A  00F6               	movwf	tactsw@a
  1697  046B  0871               	movf	??_tactsw+1,w
  1698  046C  00F7               	movwf	tactsw@a+1
  1699  046D                     l1828:
  1700                           
  1701                           ;Q3.c: 337:             if(b==a)++c;
  1702  046D  0877               	movf	tactsw@a+1,w
  1703  046E  0673               	xorwf	tactsw@b+1,w
  1704  046F  1D03               	skipz
  1705  0470  2C73               	goto	u1115
  1706  0471  0876               	movf	tactsw@a,w
  1707  0472  0672               	xorwf	tactsw@b,w
  1708  0473                     u1115:
  1709  0473  1D03               	skipz
  1710  0474  2C76               	goto	u1111
  1711  0475  2C77               	goto	u1110
  1712  0476                     u1111:
  1713  0476  2C7C               	goto	l1832
  1714  0477                     u1110:
  1715  0477                     l1830:
  1716  0477  3001               	movlw	1
  1717  0478  07F4               	addwf	tactsw@c,f
  1718  0479  3000               	movlw	0
  1719  047A  3DF5               	addwfc	tactsw@c+1,f
  1720  047B  2C7E               	goto	l1834
  1721  047C                     l1832:
  1722  047C  01F4               	clrf	tactsw@c
  1723  047D  01F5               	clrf	tactsw@c+1
  1724  047E                     l1834:
  1725                           
  1726                           ;Q3.c: 339:             if(c>10){flag_sw3=(~a)&0x01;return;}
  1727  047E  3000               	movlw	0
  1728  047F  0275               	subwf	tactsw@c+1,w
  1729  0480  300B               	movlw	11
  1730  0481  1903               	skipnz
  1731  0482  0274               	subwf	tactsw@c,w
  1732  0483  1C03               	skipc
  1733  0484  2C86               	goto	u1121
  1734  0485  2C87               	goto	u1120
  1735  0486                     u1121:
  1736  0486  2C94               	goto	l1840
  1737  0487                     u1120:
  1738  0487                     l1836:
  1739  0487  0877               	movf	tactsw@a+1,w
  1740  0488  00F1               	movwf	??_tactsw+1
  1741  0489  0876               	movf	tactsw@a,w
  1742  048A  00F0               	movwf	??_tactsw
  1743  048B  09F0               	comf	??_tactsw,f
  1744  048C  09F1               	comf	??_tactsw+1,f
  1745  048D  3001               	movlw	1
  1746  048E  0570               	andwf	??_tactsw,w
  1747  048F  00FC               	movwf	_flag_sw3
  1748  0490  3000               	movlw	0
  1749  0491  0571               	andwf	??_tactsw+1,w
  1750  0492  00FD               	movwf	_flag_sw3+1
  1751  0493  2C99               	goto	l193
  1752  0494                     l1840:
  1753                           
  1754                           ;Q3.c: 340:             b=a;
  1755  0494  0877               	movf	tactsw@a+1,w
  1756  0495  00F3               	movwf	tactsw@b+1
  1757  0496  0876               	movf	tactsw@a,w
  1758  0497  00F2               	movwf	tactsw@b
  1759  0498  2C61               	goto	l1826
  1760  0499                     l193:
  1761  0499  0008               	return
  1762  049A                     __end_of_tactsw:
  1763                           
  1764                           	psect	text5
  1765  03A9                     __ptext5:	
  1766 ;; *************** function _fclr *****************
  1767 ;; Defined at:
  1768 ;;		line 369 in file "Q3.c"
  1769 ;; Parameters:    Size  Location     Type
  1770 ;;  flg             2    0[COMMON] unsigned short 
  1771 ;; Auto vars:     Size  Location     Type
  1772 ;;		None
  1773 ;; Return value:  Size  Location     Type
  1774 ;;                  1    wreg      void 
  1775 ;; Registers used:
  1776 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1777 ;; Tracked objects:
  1778 ;;		On entry : 0/0
  1779 ;;		On exit  : 0/0
  1780 ;;		Unchanged: 0/0
  1781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1782 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1785 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1786 ;;Total ram usage:        2 bytes
  1787 ;; Hardware stack levels used:    1
  1788 ;; This function calls:
  1789 ;;		Nothing
  1790 ;; This function is called by:
  1791 ;;		_waitSEGStop
  1792 ;;		_main
  1793 ;;		_kaisu
  1794 ;;		_motorStop
  1795 ;; This function uses a non-reentrant model
  1796 ;;
  1797                           
  1798                           
  1799                           ;psect for function _fclr
  1800  03A9                     _fclr:
  1801  03A9                     l2032:	
  1802                           ;incstack = 0
  1803                           ; Regs used in _fclr: [wreg-fsr0h+status,2+status,0]
  1804                           
  1805                           
  1806                           ;Q3.c: 369: void fclr(unsigned short flg);Q3.c: 370: {;Q3.c: 371:     switch(flg){
  1807  03A9  2BB8               	goto	l2042
  1808  03AA                     l2034:
  1809                           
  1810                           ;Q3.c: 373:                     flag_R=0;
  1811  03AA  0020               	movlb	0	; select bank0
  1812  03AB  01BA               	clrf	_flag_R
  1813  03AC  01BB               	clrf	_flag_R+1
  1814                           
  1815                           ;Q3.c: 374:                     break;
  1816  03AD  2BC8               	goto	l217
  1817  03AE                     l2036:
  1818                           
  1819                           ;Q3.c: 376:                     flag_P=0;
  1820  03AE  0020               	movlb	0	; select bank0
  1821  03AF  01B8               	clrf	_flag_P
  1822  03B0  01B9               	clrf	_flag_P+1
  1823                           
  1824                           ;Q3.c: 377:                     break;
  1825  03B1  2BC8               	goto	l217
  1826  03B2                     l2038:
  1827                           
  1828                           ;Q3.c: 379:                     flag_P=flag_R=0;
  1829  03B2  0020               	movlb	0	; select bank0
  1830  03B3  01BA               	clrf	_flag_R
  1831  03B4  01BB               	clrf	_flag_R+1
  1832  03B5  01B8               	clrf	_flag_P
  1833  03B6  01B9               	clrf	_flag_P+1
  1834                           
  1835                           ;Q3.c: 380:                     break;
  1836  03B7  2BC8               	goto	l217
  1837  03B8                     l2042:
  1838                           
  1839                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1840                           ; Switch size 1, requested type "simple"
  1841                           ; Number of cases is 1, Range of values is 0 to 0
  1842                           ; switch strategies available:
  1843                           ; Name         Instructions Cycles
  1844                           ; simple_byte            4     3 (average)
  1845                           ; direct_byte            8     6 (fixed)
  1846                           ; jumptable            260     6 (fixed)
  1847                           ;	Chosen strategy is simple_byte
  1848  03B8  0871               	movf	fclr@flg+1,w
  1849  03B9  3A00               	xorlw	0	; case 0
  1850  03BA  1903               	skipnz
  1851  03BB  2BBD               	goto	l2746
  1852  03BC  2BC8               	goto	l217
  1853  03BD                     l2746:
  1854                           
  1855                           ; Switch size 1, requested type "simple"
  1856                           ; Number of cases is 3, Range of values is 0 to 2
  1857                           ; switch strategies available:
  1858                           ; Name         Instructions Cycles
  1859                           ; simple_byte           10     6 (average)
  1860                           ; direct_byte           12     6 (fixed)
  1861                           ; jumptable            260     6 (fixed)
  1862                           ;	Chosen strategy is simple_byte
  1863  03BD  0870               	movf	fclr@flg,w
  1864  03BE  3A00               	xorlw	0	; case 0
  1865  03BF  1903               	skipnz
  1866  03C0  2BAA               	goto	l2034
  1867  03C1  3A01               	xorlw	1	; case 1
  1868  03C2  1903               	skipnz
  1869  03C3  2BAE               	goto	l2036
  1870  03C4  3A03               	xorlw	3	; case 2
  1871  03C5  1903               	skipnz
  1872  03C6  2BB2               	goto	l2038
  1873  03C7  2BC8               	goto	l217
  1874  03C8                     l217:
  1875  03C8  0008               	return
  1876  03C9                     __end_of_fclr:
  1877                           
  1878                           	psect	text6
  1879  03ED                     __ptext6:	
  1880 ;; *************** function _waitSEG *****************
  1881 ;; Defined at:
  1882 ;;		line 451 in file "Q3.c"
  1883 ;; Parameters:    Size  Location     Type
  1884 ;;  seg1            2    8[BANK0 ] unsigned short 
  1885 ;;  seg2            2   10[BANK0 ] unsigned short 
  1886 ;;  wt              2   12[BANK0 ] unsigned short 
  1887 ;; Auto vars:     Size  Location     Type
  1888 ;;  i               2    8[COMMON] unsigned int 
  1889 ;; Return value:  Size  Location     Type
  1890 ;;                  1    wreg      void 
  1891 ;; Registers used:
  1892 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1893 ;; Tracked objects:
  1894 ;;		On entry : 0/0
  1895 ;;		On exit  : 0/0
  1896 ;;		Unchanged: 0/0
  1897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1898 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1899 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1901 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1902 ;;Total ram usage:        8 bytes
  1903 ;; Hardware stack levels used:    1
  1904 ;; Hardware stack levels required when called:    1
  1905 ;; This function calls:
  1906 ;;		___lwdiv
  1907 ;;		_dynam
  1908 ;; This function is called by:
  1909 ;;		_main
  1910 ;; This function uses a non-reentrant model
  1911 ;;
  1912                           
  1913                           
  1914                           ;psect for function _waitSEG
  1915  03ED                     _waitSEG:
  1916  03ED                     l2114:	
  1917                           ;incstack = 0
  1918                           ; Regs used in _waitSEG: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1919                           
  1920                           
  1921                           ;Q3.c: 451: void waitSEG(unsigned short seg1,unsigned short seg2,unsigned short wt);Q3.c
      +                          : 452: {;Q3.c: 454:     wt = wt / 10;
  1922  03ED  300A               	movlw	10
  1923  03EE  00F0               	movwf	___lwdiv@divisor
  1924  03EF  3000               	movlw	0
  1925  03F0  00F1               	movwf	___lwdiv@divisor+1
  1926  03F1  0020               	movlb	0	; select bank0
  1927  03F2  084D               	movf	waitSEG@wt+1,w
  1928  03F3  00F3               	movwf	___lwdiv@dividend+1
  1929  03F4  084C               	movf	waitSEG@wt,w
  1930  03F5  00F2               	movwf	___lwdiv@dividend
  1931  03F6  3184  2421  3183   	fcall	___lwdiv
  1932  03F9  0871               	movf	?___lwdiv+1,w
  1933  03FA  0020               	movlb	0	; select bank0
  1934  03FB  00CD               	movwf	waitSEG@wt+1
  1935  03FC  0870               	movf	?___lwdiv,w
  1936  03FD  00CC               	movwf	waitSEG@wt
  1937  03FE                     l2116:
  1938                           
  1939                           ;Q3.c: 455:     unsigned int i;;Q3.c: 457:     for(i=wt;i>0;--i){
  1940  03FE  084D               	movf	waitSEG@wt+1,w
  1941  03FF  00F9               	movwf	waitSEG@i+1
  1942  0400  084C               	movf	waitSEG@wt,w
  1943  0401  00F8               	movwf	waitSEG@i
  1944  0402                     l2118:
  1945  0402  0878               	movf	waitSEG@i,w
  1946  0403  0479               	iorwf	waitSEG@i+1,w
  1947  0404  1D03               	btfss	3,2
  1948  0405  2C07               	goto	u1491
  1949  0406  2C08               	goto	u1490
  1950  0407                     u1491:
  1951  0407  2C09               	goto	l2122
  1952  0408                     u1490:
  1953  0408  2C20               	goto	l258
  1954  0409                     l2122:
  1955                           
  1956                           ;Q3.c: 458:         dynam(seg1,seg2,0,0);
  1957  0409  0020               	movlb	0	; select bank0
  1958  040A  0849               	movf	waitSEG@seg1+1,w
  1959  040B  00F1               	movwf	dynam@dig1data+1
  1960  040C  0848               	movf	waitSEG@seg1,w
  1961  040D  00F0               	movwf	dynam@dig1data
  1962  040E  084B               	movf	waitSEG@seg2+1,w
  1963  040F  00F3               	movwf	dynam@dig2data+1
  1964  0410  084A               	movf	waitSEG@seg2,w
  1965  0411  00F2               	movwf	dynam@dig2data
  1966  0412  3000               	movlw	0
  1967  0413  00F4               	movwf	dynam@smdata
  1968  0414  00F5               	movwf	dynam@smdata+1
  1969  0415  3000               	movlw	0
  1970  0416  00F6               	movwf	dynam@tr
  1971  0417  00F7               	movwf	dynam@tr+1
  1972  0418  3186  2671  3183   	fcall	_dynam
  1973  041B                     l2124:
  1974                           
  1975                           ;Q3.c: 459:     }
  1976  041B  3001               	movlw	1
  1977  041C  02F8               	subwf	waitSEG@i,f
  1978  041D  3000               	movlw	0
  1979  041E  3BF9               	subwfb	waitSEG@i+1,f
  1980  041F  2C02               	goto	l2118
  1981  0420                     l258:
  1982  0420  0008               	return
  1983  0421                     __end_of_waitSEG:
  1984                           
  1985                           	psect	text7
  1986  0421                     __ptext7:	
  1987 ;; *************** function ___lwdiv *****************
  1988 ;; Defined at:
  1989 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\lwdiv.c"
  1990 ;; Parameters:    Size  Location     Type
  1991 ;;  divisor         2    0[COMMON] unsigned int 
  1992 ;;  dividend        2    2[COMMON] unsigned int 
  1993 ;; Auto vars:     Size  Location     Type
  1994 ;;  quotient        2    5[COMMON] unsigned int 
  1995 ;;  counter         1    7[COMMON] unsigned char 
  1996 ;; Return value:  Size  Location     Type
  1997 ;;                  2    0[COMMON] unsigned int 
  1998 ;; Registers used:
  1999 ;;		wreg, status,2, status,0
  2000 ;; Tracked objects:
  2001 ;;		On entry : 0/0
  2002 ;;		On exit  : 0/0
  2003 ;;		Unchanged: 0/0
  2004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2005 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2006 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2007 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2008 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2009 ;;Total ram usage:        8 bytes
  2010 ;; Hardware stack levels used:    1
  2011 ;; This function calls:
  2012 ;;		Nothing
  2013 ;; This function is called by:
  2014 ;;		_waitSEG
  2015 ;;		_waitSEGStop
  2016 ;; This function uses a non-reentrant model
  2017 ;;
  2018                           
  2019                           
  2020                           ;psect for function ___lwdiv
  2021  0421                     ___lwdiv:
  2022  0421                     l2048:	
  2023                           ;incstack = 0
  2024                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2025                           
  2026  0421  01F5               	clrf	___lwdiv@quotient
  2027  0422  01F6               	clrf	___lwdiv@quotient+1
  2028  0423                     l2050:
  2029  0423  0870               	movf	___lwdiv@divisor,w
  2030  0424  0471               	iorwf	___lwdiv@divisor+1,w
  2031  0425  1903               	btfsc	3,2
  2032  0426  2C28               	goto	u1401
  2033  0427  2C29               	goto	u1400
  2034  0428                     u1401:
  2035  0428  2C58               	goto	l2070
  2036  0429                     u1400:
  2037  0429                     l2052:
  2038  0429  01F7               	clrf	___lwdiv@counter
  2039  042A  0AF7               	incf	___lwdiv@counter,f
  2040  042B  2C35               	goto	l2058
  2041  042C                     l2054:
  2042  042C  3001               	movlw	1
  2043  042D                     u1415:
  2044  042D  35F0               	lslf	___lwdiv@divisor,f
  2045  042E  0DF1               	rlf	___lwdiv@divisor+1,f
  2046  042F  0B89               	decfsz	9,f
  2047  0430  2C2D               	goto	u1415
  2048  0431                     l2056:
  2049  0431  3001               	movlw	1
  2050  0432  00F4               	movwf	??___lwdiv
  2051  0433  0874               	movf	??___lwdiv,w
  2052  0434  07F7               	addwf	___lwdiv@counter,f
  2053  0435                     l2058:
  2054  0435  1FF1               	btfss	___lwdiv@divisor+1,7
  2055  0436  2C38               	goto	u1421
  2056  0437  2C39               	goto	u1420
  2057  0438                     u1421:
  2058  0438  2C2C               	goto	l2054
  2059  0439                     u1420:
  2060  0439                     l2060:
  2061  0439  3001               	movlw	1
  2062  043A                     u1435:
  2063  043A  35F5               	lslf	___lwdiv@quotient,f
  2064  043B  0DF6               	rlf	___lwdiv@quotient+1,f
  2065  043C  0B89               	decfsz	9,f
  2066  043D  2C3A               	goto	u1435
  2067  043E  0871               	movf	___lwdiv@divisor+1,w
  2068  043F  0273               	subwf	___lwdiv@dividend+1,w
  2069  0440  1D03               	skipz
  2070  0441  2C44               	goto	u1445
  2071  0442  0870               	movf	___lwdiv@divisor,w
  2072  0443  0272               	subwf	___lwdiv@dividend,w
  2073  0444                     u1445:
  2074  0444  1C03               	skipc
  2075  0445  2C47               	goto	u1441
  2076  0446  2C48               	goto	u1440
  2077  0447                     u1441:
  2078  0447  2C4D               	goto	l2066
  2079  0448                     u1440:
  2080  0448                     l2062:
  2081  0448  0870               	movf	___lwdiv@divisor,w
  2082  0449  02F2               	subwf	___lwdiv@dividend,f
  2083  044A  0871               	movf	___lwdiv@divisor+1,w
  2084  044B  3BF3               	subwfb	___lwdiv@dividend+1,f
  2085  044C                     l2064:
  2086  044C  1475               	bsf	___lwdiv@quotient,0
  2087  044D                     l2066:
  2088  044D  3001               	movlw	1
  2089  044E                     u1455:
  2090  044E  36F1               	lsrf	___lwdiv@divisor+1,f
  2091  044F  0CF0               	rrf	___lwdiv@divisor,f
  2092  0450  0B89               	decfsz	9,f
  2093  0451  2C4E               	goto	u1455
  2094  0452                     l2068:
  2095  0452  3001               	movlw	1
  2096  0453  02F7               	subwf	___lwdiv@counter,f
  2097  0454  1D03               	btfss	3,2
  2098  0455  2C57               	goto	u1461
  2099  0456  2C58               	goto	u1460
  2100  0457                     u1461:
  2101  0457  2C39               	goto	l2060
  2102  0458                     u1460:
  2103  0458                     l2070:
  2104  0458  0876               	movf	___lwdiv@quotient+1,w
  2105  0459  00F1               	movwf	?___lwdiv+1
  2106  045A  0875               	movf	___lwdiv@quotient,w
  2107  045B  00F0               	movwf	?___lwdiv
  2108  045C                     l758:
  2109  045C  0008               	return
  2110  045D                     __end_of___lwdiv:
  2111                           
  2112                           	psect	text8
  2113  0377                     __ptext8:	
  2114 ;; *************** function _portinit *****************
  2115 ;; Defined at:
  2116 ;;		line 160 in file "Q3.c"
  2117 ;; Parameters:    Size  Location     Type
  2118 ;;		None
  2119 ;; Auto vars:     Size  Location     Type
  2120 ;;		None
  2121 ;; Return value:  Size  Location     Type
  2122 ;;                  1    wreg      void 
  2123 ;; Registers used:
  2124 ;;		wreg, status,2
  2125 ;; Tracked objects:
  2126 ;;		On entry : 0/0
  2127 ;;		On exit  : 0/0
  2128 ;;		Unchanged: 0/0
  2129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2134 ;;Total ram usage:        0 bytes
  2135 ;; Hardware stack levels used:    1
  2136 ;; This function calls:
  2137 ;;		Nothing
  2138 ;; This function is called by:
  2139 ;;		_main
  2140 ;; This function uses a non-reentrant model
  2141 ;;
  2142                           
  2143                           
  2144                           ;psect for function _portinit
  2145  0377                     _portinit:
  2146  0377                     l2074:	
  2147                           ;incstack = 0
  2148                           ; Regs used in _portinit: [wreg+status,2]
  2149                           
  2150                           
  2151                           ;Q3.c: 163:     ANSELA=0x00;
  2152  0377  0023               	movlb	3	; select bank3
  2153  0378  018C               	clrf	12	;volatile
  2154                           
  2155                           ;Q3.c: 164:     ANSELB=0x00;
  2156  0379  018D               	clrf	13	;volatile
  2157  037A                     l2076:
  2158                           
  2159                           ;Q3.c: 166:     PORTA=0x07;
  2160  037A  3007               	movlw	7
  2161  037B  0020               	movlb	0	; select bank0
  2162  037C  008C               	movwf	12	;volatile
  2163  037D                     l2078:
  2164                           
  2165                           ;Q3.c: 167:     TRISA=0x07;
  2166  037D  3007               	movlw	7
  2167  037E  0021               	movlb	1	; select bank1
  2168  037F  008C               	movwf	12	;volatile
  2169                           
  2170                           ;Q3.c: 168:     PORTB=0x00;
  2171  0380  0020               	movlb	0	; select bank0
  2172  0381  018D               	clrf	13	;volatile
  2173                           
  2174                           ;Q3.c: 169:     TRISB=0x00;
  2175  0382  0021               	movlb	1	; select bank1
  2176  0383  018D               	clrf	13	;volatile
  2177  0384                     l2080:
  2178                           
  2179                           ;Q3.c: 170:     PORTC=0x07;
  2180  0384  3007               	movlw	7
  2181  0385  0020               	movlb	0	; select bank0
  2182  0386  008E               	movwf	14	;volatile
  2183  0387                     l2082:
  2184                           
  2185                           ;Q3.c: 171:     TRISC=0x00;
  2186  0387  0021               	movlb	1	; select bank1
  2187  0388  018E               	clrf	14	;volatile
  2188  0389                     l95:
  2189  0389  0008               	return
  2190  038A                     __end_of_portinit:
  2191                           
  2192                           	psect	text9
  2193  03C9                     __ptext9:	
  2194 ;; *************** function _motor *****************
  2195 ;; Defined at:
  2196 ;;		line 506 in file "Q3.c"
  2197 ;; Parameters:    Size  Location     Type
  2198 ;;  kakudo          2    8[BANK0 ] int 
  2199 ;;  dig1data        2   10[BANK0 ] unsigned short 
  2200 ;;  dig2data        2   12[BANK0 ] unsigned short 
  2201 ;;  smdata          2   14[BANK0 ] unsigned short 
  2202 ;;  tr              2   16[BANK0 ] unsigned int 
  2203 ;; Auto vars:     Size  Location     Type
  2204 ;;  i               2    8[COMMON] int 
  2205 ;; Return value:  Size  Location     Type
  2206 ;;                  1    wreg      void 
  2207 ;; Registers used:
  2208 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2209 ;; Tracked objects:
  2210 ;;		On entry : 0/0
  2211 ;;		On exit  : 0/0
  2212 ;;		Unchanged: 0/0
  2213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2214 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2215 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2217 ;;      Totals:         2      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2218 ;;Total ram usage:       12 bytes
  2219 ;; Hardware stack levels used:    1
  2220 ;; Hardware stack levels required when called:    1
  2221 ;; This function calls:
  2222 ;;		_dynam
  2223 ;; This function is called by:
  2224 ;;		_main
  2225 ;; This function uses a non-reentrant model
  2226 ;;
  2227                           
  2228                           
  2229                           ;psect for function _motor
  2230  03C9                     _motor:
  2231  03C9                     l2180:	
  2232                           ;incstack = 0
  2233                           ; Regs used in _motor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2234                           
  2235                           
  2236                           ;Q3.c: 508:     for(int i = kakudo;i>=0;i--){
  2237  03C9  0020               	movlb	0	; select bank0
  2238  03CA  0849               	movf	motor@kakudo+1,w
  2239  03CB  00F9               	movwf	motor@i+1
  2240  03CC  0848               	movf	motor@kakudo,w
  2241  03CD  00F8               	movwf	motor@i
  2242  03CE                     l2182:
  2243  03CE  1FF9               	btfss	motor@i+1,7
  2244  03CF  2BD1               	goto	u1581
  2245  03D0  2BD2               	goto	u1580
  2246  03D1                     u1581:
  2247  03D1  2BD3               	goto	l2186
  2248  03D2                     u1580:
  2249  03D2  2BEC               	goto	l274
  2250  03D3                     l2186:
  2251                           
  2252                           ;Q3.c: 509:         dynam(dig1data,dig2data,smdata,tr);
  2253  03D3  0020               	movlb	0	; select bank0
  2254  03D4  084B               	movf	motor@dig1data+1,w
  2255  03D5  00F1               	movwf	dynam@dig1data+1
  2256  03D6  084A               	movf	motor@dig1data,w
  2257  03D7  00F0               	movwf	dynam@dig1data
  2258  03D8  084D               	movf	motor@dig2data+1,w
  2259  03D9  00F3               	movwf	dynam@dig2data+1
  2260  03DA  084C               	movf	motor@dig2data,w
  2261  03DB  00F2               	movwf	dynam@dig2data
  2262  03DC  084F               	movf	motor@smdata+1,w
  2263  03DD  00F5               	movwf	dynam@smdata+1
  2264  03DE  084E               	movf	motor@smdata,w
  2265  03DF  00F4               	movwf	dynam@smdata
  2266  03E0  0851               	movf	motor@tr+1,w
  2267  03E1  00F7               	movwf	dynam@tr+1
  2268  03E2  0850               	movf	motor@tr,w
  2269  03E3  00F6               	movwf	dynam@tr
  2270  03E4  3186  2671  3183   	fcall	_dynam
  2271  03E7                     l2188:
  2272                           
  2273                           ;Q3.c: 510:     }
  2274  03E7  30FF               	movlw	255
  2275  03E8  07F8               	addwf	motor@i,f
  2276  03E9  30FF               	movlw	255
  2277  03EA  3DF9               	addwfc	motor@i+1,f
  2278  03EB  2BCE               	goto	l2182
  2279  03EC                     l274:
  2280  03EC  0008               	return
  2281  03ED                     __end_of_motor:
  2282                           
  2283                           	psect	text10
  2284  0671                     __ptext10:	
  2285 ;; *************** function _dynam *****************
  2286 ;; Defined at:
  2287 ;;		line 206 in file "Q3.c"
  2288 ;; Parameters:    Size  Location     Type
  2289 ;;  dig1data        2    0[COMMON] unsigned short 
  2290 ;;  dig2data        2    2[COMMON] unsigned short 
  2291 ;;  smdata          2    4[COMMON] unsigned short 
  2292 ;;  tr              2    6[COMMON] unsigned int 
  2293 ;; Auto vars:     Size  Location     Type
  2294 ;;  ext             2    6[BANK0 ] unsigned short 
  2295 ;;  j               2    4[BANK0 ] unsigned int 
  2296 ;;  tm              2    2[BANK0 ] unsigned int 
  2297 ;;  smd             2    0[BANK0 ] unsigned short 
  2298 ;; Return value:  Size  Location     Type
  2299 ;;                  1    wreg      void 
  2300 ;; Registers used:
  2301 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2302 ;; Tracked objects:
  2303 ;;		On entry : 0/0
  2304 ;;		On exit  : 0/0
  2305 ;;		Unchanged: 0/0
  2306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2307 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2308 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2310 ;;      Totals:         8       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2311 ;;Total ram usage:       16 bytes
  2312 ;; Hardware stack levels used:    1
  2313 ;; This function calls:
  2314 ;;		Nothing
  2315 ;; This function is called by:
  2316 ;;		_waitSEG
  2317 ;;		_waitSEGStop
  2318 ;;		_motor
  2319 ;;		_main
  2320 ;;		_clear
  2321 ;;		_motorStop
  2322 ;; This function uses a non-reentrant model
  2323 ;;
  2324                           
  2325                           
  2326                           ;psect for function _dynam
  2327  0671                     _dynam:
  2328  0671                     l1842:	
  2329                           ;incstack = 0
  2330                           ; Regs used in _dynam: [wreg-fsr0h+status,2+status,0]
  2331                           
  2332  0671  0020               	movlb	0	; select bank0
  2333  0672  01C2               	clrf	dynam@tm
  2334  0673  01C3               	clrf	dynam@tm+1
  2335                           
  2336                           ;Q3.c: 209:     unsigned short ext=0,smd=0;
  2337  0674  01C6               	clrf	dynam@ext
  2338  0675  01C7               	clrf	dynam@ext+1
  2339  0676  01C0               	clrf	dynam@smd
  2340  0677  01C1               	clrf	dynam@smd+1
  2341  0678                     l1844:
  2342                           
  2343                           ;Q3.c: 210:     RC7=0;
  2344  0678  138E               	bcf	14,7	;volatile
  2345  0679                     l1846:
  2346                           
  2347                           ;Q3.c: 211:     PORTB=dig1data;
  2348  0679  0870               	movf	dynam@dig1data,w
  2349  067A  008D               	movwf	13	;volatile
  2350  067B                     l1848:
  2351                           
  2352                           ;Q3.c: 212:     RC5=0;RC6=1;
  2353  067B  128E               	bcf	14,5	;volatile
  2354  067C                     l1850:
  2355  067C  170E               	bsf	14,6	;volatile
  2356  067D                     l1852:
  2357                           
  2358                           ;Q3.c: 213:     if(tr==5){tm=4000;}
  2359  067D  3005               	movlw	5
  2360  067E  0676               	xorwf	dynam@tr,w
  2361  067F  0477               	iorwf	dynam@tr+1,w
  2362  0680  1D03               	btfss	3,2
  2363  0681  2E83               	goto	u1131
  2364  0682  2E84               	goto	u1130
  2365  0683                     u1131:
  2366  0683  2E89               	goto	l1856
  2367  0684                     u1130:
  2368  0684                     l1854:
  2369  0684  30A0               	movlw	160
  2370  0685  00C2               	movwf	dynam@tm
  2371  0686  300F               	movlw	15
  2372  0687  00C3               	movwf	dynam@tm+1
  2373  0688  2E8D               	goto	l112
  2374  0689                     l1856:
  2375  0689  30D0               	movlw	208
  2376  068A  00C2               	movwf	dynam@tm
  2377  068B  3007               	movlw	7
  2378  068C  00C3               	movwf	dynam@tm+1
  2379  068D                     l112:
  2380                           
  2381                           ;Q3.c: 215:     for(j=tm;j>0;--j);
  2382  068D  0843               	movf	dynam@tm+1,w
  2383  068E  00C5               	movwf	dynam@j+1
  2384  068F  0842               	movf	dynam@tm,w
  2385  0690  00C4               	movwf	dynam@j
  2386  0691                     l1858:
  2387  0691  0844               	movf	dynam@j,w
  2388  0692  0445               	iorwf	dynam@j+1,w
  2389  0693  1D03               	btfss	3,2
  2390  0694  2E96               	goto	u1141
  2391  0695  2E97               	goto	u1140
  2392  0696                     u1141:
  2393  0696  2E98               	goto	l1862
  2394  0697                     u1140:
  2395  0697  2E9D               	goto	l114
  2396  0698                     l1862:
  2397  0698  3001               	movlw	1
  2398  0699  02C4               	subwf	dynam@j,f
  2399  069A  3000               	movlw	0
  2400  069B  3BC5               	subwfb	dynam@j+1,f
  2401  069C  2E91               	goto	l1858
  2402  069D                     l114:
  2403                           
  2404                           ;Q3.c: 216:     RC5=0;RC6=0;
  2405  069D  128E               	bcf	14,5	;volatile
  2406  069E  130E               	bcf	14,6	;volatile
  2407  069F                     l1866:
  2408                           
  2409                           ;Q3.c: 217:     PORTB=dig2data;
  2410  069F  0872               	movf	dynam@dig2data,w
  2411  06A0  008D               	movwf	13	;volatile
  2412  06A1                     l1868:
  2413                           
  2414                           ;Q3.c: 218:     RC6=0;RC5=1;
  2415  06A1  130E               	bcf	14,6	;volatile
  2416  06A2                     l1870:
  2417  06A2  168E               	bsf	14,5	;volatile
  2418  06A3                     l1872:
  2419                           
  2420                           ;Q3.c: 219:     if(tr==5){tm=4000;}
  2421  06A3  3005               	movlw	5
  2422  06A4  0676               	xorwf	dynam@tr,w
  2423  06A5  0477               	iorwf	dynam@tr+1,w
  2424  06A6  1D03               	btfss	3,2
  2425  06A7  2EA9               	goto	u1151
  2426  06A8  2EAA               	goto	u1150
  2427  06A9                     u1151:
  2428  06A9  2EAF               	goto	l1876
  2429  06AA                     u1150:
  2430  06AA                     l1874:
  2431  06AA  30A0               	movlw	160
  2432  06AB  00C2               	movwf	dynam@tm
  2433  06AC  300F               	movlw	15
  2434  06AD  00C3               	movwf	dynam@tm+1
  2435  06AE  2EB3               	goto	l116
  2436  06AF                     l1876:
  2437  06AF  30D0               	movlw	208
  2438  06B0  00C2               	movwf	dynam@tm
  2439  06B1  3007               	movlw	7
  2440  06B2  00C3               	movwf	dynam@tm+1
  2441  06B3                     l116:
  2442                           
  2443                           ;Q3.c: 221:     for(j=tm;j>0;--j);
  2444  06B3  0843               	movf	dynam@tm+1,w
  2445  06B4  00C5               	movwf	dynam@j+1
  2446  06B5  0842               	movf	dynam@tm,w
  2447  06B6  00C4               	movwf	dynam@j
  2448  06B7                     l1878:
  2449  06B7  0844               	movf	dynam@j,w
  2450  06B8  0445               	iorwf	dynam@j+1,w
  2451  06B9  1D03               	btfss	3,2
  2452  06BA  2EBC               	goto	u1161
  2453  06BB  2EBD               	goto	u1160
  2454  06BC                     u1161:
  2455  06BC  2EBE               	goto	l1882
  2456  06BD                     u1160:
  2457  06BD  2EC3               	goto	l118
  2458  06BE                     l1882:
  2459  06BE  3001               	movlw	1
  2460  06BF  02C4               	subwf	dynam@j,f
  2461  06C0  3000               	movlw	0
  2462  06C1  3BC5               	subwfb	dynam@j+1,f
  2463  06C2  2EB7               	goto	l1878
  2464  06C3                     l118:
  2465                           
  2466                           ;Q3.c: 222:     RC5=0;RC6=0;
  2467  06C3  128E               	bcf	14,5	;volatile
  2468  06C4  130E               	bcf	14,6	;volatile
  2469                           
  2470                           ;Q3.c: 223:     switch(smdata){
  2471  06C5  2FCA               	goto	l1992
  2472  06C6                     l1886:
  2473                           
  2474                           ;Q3.c: 225:                 PORTB=0x00;smd=(0x01|0x02|0x04|0x08|0x10|0x20);
  2475  06C6  018D               	clrf	13	;volatile
  2476  06C7                     l1888:
  2477  06C7                     l1890:
  2478                           
  2479                           ;Q3.c: 226:                 RC7=0;RC7=1;RC7=0;
  2480  06C7  138E               	bcf	14,7	;volatile
  2481  06C8                     l1892:
  2482  06C8  178E               	bsf	14,7	;volatile
  2483  06C9                     l1894:
  2484  06C9  138E               	bcf	14,7	;volatile
  2485                           
  2486                           ;Q3.c: 227:                 break;
  2487  06CA  2FDA               	goto	l135
  2488  06CB                     l1896:
  2489                           
  2490                           ;Q3.c: 229:                 if(flg==1)cw=0;flg=0;
  2491  06CB  0336               	decf	_flg,w
  2492  06CC  0437               	iorwf	_flg+1,w
  2493  06CD  1D03               	btfss	3,2
  2494  06CE  2ED0               	goto	u1171
  2495  06CF  2ED1               	goto	u1170
  2496  06D0                     u1171:
  2497  06D0  2ED3               	goto	l123
  2498  06D1                     u1170:
  2499  06D1                     l1898:
  2500  06D1  01B4               	clrf	_cw
  2501  06D2  01B5               	clrf	_cw+1
  2502  06D3                     l123:
  2503  06D3  01B6               	clrf	_flg
  2504  06D4  01B7               	clrf	_flg+1
  2505  06D5                     l1900:
  2506                           
  2507                           ;Q3.c: 230:                 if((cw==0)&&(ext==0)){cw=1;ccw=0;ext=1;PORTB=smd=0x09;}
  2508  06D5  0834               	movf	_cw,w
  2509  06D6  0435               	iorwf	_cw+1,w
  2510  06D7  1D03               	btfss	3,2
  2511  06D8  2EDA               	goto	u1181
  2512  06D9  2EDB               	goto	u1180
  2513  06DA                     u1181:
  2514  06DA  2EF1               	goto	l1912
  2515  06DB                     u1180:
  2516  06DB                     l1902:
  2517  06DB  0846               	movf	dynam@ext,w
  2518  06DC  0447               	iorwf	dynam@ext+1,w
  2519  06DD  1D03               	btfss	3,2
  2520  06DE  2EE0               	goto	u1191
  2521  06DF  2EE1               	goto	u1190
  2522  06E0                     u1191:
  2523  06E0  2EF1               	goto	l1912
  2524  06E1                     u1190:
  2525  06E1                     l1904:
  2526  06E1  3001               	movlw	1
  2527  06E2  00B4               	movwf	_cw
  2528  06E3  3000               	movlw	0
  2529  06E4  00B5               	movwf	_cw+1
  2530  06E5                     l1906:
  2531  06E5  01B2               	clrf	_ccw
  2532  06E6  01B3               	clrf	_ccw+1
  2533  06E7                     l1908:
  2534  06E7  3001               	movlw	1
  2535  06E8  00C6               	movwf	dynam@ext
  2536  06E9  3000               	movlw	0
  2537  06EA  00C7               	movwf	dynam@ext+1
  2538  06EB                     l1910:
  2539  06EB  3009               	movlw	9
  2540  06EC  00C0               	movwf	dynam@smd
  2541  06ED  3000               	movlw	0
  2542  06EE  00C1               	movwf	dynam@smd+1
  2543  06EF  0840               	movf	dynam@smd,w
  2544  06F0  008D               	movwf	13	;volatile
  2545  06F1                     l1912:
  2546                           
  2547                           ;Q3.c: 231:                 if((cw==1)&&(ext==0)){cw=2;ccw=3;ext=1;PORTB=smd=0x0C;}
  2548  06F1  0334               	decf	_cw,w
  2549  06F2  0435               	iorwf	_cw+1,w
  2550  06F3  1D03               	btfss	3,2
  2551  06F4  2EF6               	goto	u1201
  2552  06F5  2EF7               	goto	u1200
  2553  06F6                     u1201:
  2554  06F6  2F0F               	goto	l1918
  2555  06F7                     u1200:
  2556  06F7                     l1914:
  2557  06F7  0846               	movf	dynam@ext,w
  2558  06F8  0447               	iorwf	dynam@ext+1,w
  2559  06F9  1D03               	btfss	3,2
  2560  06FA  2EFC               	goto	u1211
  2561  06FB  2EFD               	goto	u1210
  2562  06FC                     u1211:
  2563  06FC  2F0F               	goto	l1918
  2564  06FD                     u1210:
  2565  06FD                     l1916:
  2566  06FD  3002               	movlw	2
  2567  06FE  00B4               	movwf	_cw
  2568  06FF  3000               	movlw	0
  2569  0700  00B5               	movwf	_cw+1
  2570  0701  3003               	movlw	3
  2571  0702  00B2               	movwf	_ccw
  2572  0703  3000               	movlw	0
  2573  0704  00B3               	movwf	_ccw+1
  2574  0705  3001               	movlw	1
  2575  0706  00C6               	movwf	dynam@ext
  2576  0707  3000               	movlw	0
  2577  0708  00C7               	movwf	dynam@ext+1
  2578  0709  300C               	movlw	12
  2579  070A  00C0               	movwf	dynam@smd
  2580  070B  3000               	movlw	0
  2581  070C  00C1               	movwf	dynam@smd+1
  2582  070D  0840               	movf	dynam@smd,w
  2583  070E  008D               	movwf	13	;volatile
  2584  070F                     l1918:
  2585                           
  2586                           ;Q3.c: 232:                 if((cw==2)&&(ext==0)){cw=3;ccw=2;ext=1;PORTB=smd=0x06;}
  2587  070F  3002               	movlw	2
  2588  0710  0634               	xorwf	_cw,w
  2589  0711  0435               	iorwf	_cw+1,w
  2590  0712  1D03               	btfss	3,2
  2591  0713  2F15               	goto	u1221
  2592  0714  2F16               	goto	u1220
  2593  0715                     u1221:
  2594  0715  2F2E               	goto	l1924
  2595  0716                     u1220:
  2596  0716                     l1920:
  2597  0716  0846               	movf	dynam@ext,w
  2598  0717  0447               	iorwf	dynam@ext+1,w
  2599  0718  1D03               	btfss	3,2
  2600  0719  2F1B               	goto	u1231
  2601  071A  2F1C               	goto	u1230
  2602  071B                     u1231:
  2603  071B  2F2E               	goto	l1924
  2604  071C                     u1230:
  2605  071C                     l1922:
  2606  071C  3003               	movlw	3
  2607  071D  00B4               	movwf	_cw
  2608  071E  3000               	movlw	0
  2609  071F  00B5               	movwf	_cw+1
  2610  0720  3002               	movlw	2
  2611  0721  00B2               	movwf	_ccw
  2612  0722  3000               	movlw	0
  2613  0723  00B3               	movwf	_ccw+1
  2614  0724  3001               	movlw	1
  2615  0725  00C6               	movwf	dynam@ext
  2616  0726  3000               	movlw	0
  2617  0727  00C7               	movwf	dynam@ext+1
  2618  0728  3006               	movlw	6
  2619  0729  00C0               	movwf	dynam@smd
  2620  072A  3000               	movlw	0
  2621  072B  00C1               	movwf	dynam@smd+1
  2622  072C  0840               	movf	dynam@smd,w
  2623  072D  008D               	movwf	13	;volatile
  2624  072E                     l1924:
  2625                           
  2626                           ;Q3.c: 233:                 if((cw==3)&&(ext==0)){cw=0;ccw=1;ext=1;PORTB=smd=0x03;}
  2627  072E  3003               	movlw	3
  2628  072F  0634               	xorwf	_cw,w
  2629  0730  0435               	iorwf	_cw+1,w
  2630  0731  1D03               	btfss	3,2
  2631  0732  2F34               	goto	u1241
  2632  0733  2F35               	goto	u1240
  2633  0734                     u1241:
  2634  0734  2EC7               	goto	l1890
  2635  0735                     u1240:
  2636  0735                     l1926:
  2637  0735  0846               	movf	dynam@ext,w
  2638  0736  0447               	iorwf	dynam@ext+1,w
  2639  0737  1D03               	btfss	3,2
  2640  0738  2F3A               	goto	u1251
  2641  0739  2F3B               	goto	u1250
  2642  073A                     u1251:
  2643  073A  2EC7               	goto	l1890
  2644  073B                     u1250:
  2645  073B                     l1928:
  2646  073B  01B4               	clrf	_cw
  2647  073C  01B5               	clrf	_cw+1
  2648  073D                     l1930:
  2649  073D  3001               	movlw	1
  2650  073E  00B2               	movwf	_ccw
  2651  073F  3000               	movlw	0
  2652  0740  00B3               	movwf	_ccw+1
  2653  0741                     l1932:
  2654  0741                     l1934:
  2655  0741  3003               	movlw	3
  2656  0742  00C0               	movwf	dynam@smd
  2657  0743  3000               	movlw	0
  2658  0744  00C1               	movwf	dynam@smd+1
  2659  0745  0840               	movf	dynam@smd,w
  2660  0746  008D               	movwf	13	;volatile
  2661  0747  2EC7               	goto	l1890
  2662  0748                     l1942:
  2663                           
  2664                           ;Q3.c: 237:                 if(flg==1)ccw=0;flg=0;
  2665  0748  0336               	decf	_flg,w
  2666  0749  0437               	iorwf	_flg+1,w
  2667  074A  1D03               	btfss	3,2
  2668  074B  2F4D               	goto	u1261
  2669  074C  2F4E               	goto	u1260
  2670  074D                     u1261:
  2671  074D  2F50               	goto	l129
  2672  074E                     u1260:
  2673  074E                     l1944:
  2674  074E  01B2               	clrf	_ccw
  2675  074F  01B3               	clrf	_ccw+1
  2676  0750                     l129:
  2677  0750  01B6               	clrf	_flg
  2678  0751  01B7               	clrf	_flg+1
  2679  0752                     l1946:
  2680                           
  2681                           ;Q3.c: 238:                 if((ccw==0)&&(ext==0)){ccw=1;cw=0;ext=1;PORTB=smd=0x03;}
  2682  0752  0832               	movf	_ccw,w
  2683  0753  0433               	iorwf	_ccw+1,w
  2684  0754  1D03               	btfss	3,2
  2685  0755  2F57               	goto	u1271
  2686  0756  2F58               	goto	u1270
  2687  0757                     u1271:
  2688  0757  2F6E               	goto	l1958
  2689  0758                     u1270:
  2690  0758                     l1948:
  2691  0758  0846               	movf	dynam@ext,w
  2692  0759  0447               	iorwf	dynam@ext+1,w
  2693  075A  1D03               	btfss	3,2
  2694  075B  2F5D               	goto	u1281
  2695  075C  2F5E               	goto	u1280
  2696  075D                     u1281:
  2697  075D  2F6E               	goto	l1958
  2698  075E                     u1280:
  2699  075E                     l1950:
  2700  075E  3001               	movlw	1
  2701  075F  00B2               	movwf	_ccw
  2702  0760  3000               	movlw	0
  2703  0761  00B3               	movwf	_ccw+1
  2704  0762                     l1952:
  2705  0762  01B4               	clrf	_cw
  2706  0763  01B5               	clrf	_cw+1
  2707  0764                     l1954:
  2708  0764  3001               	movlw	1
  2709  0765  00C6               	movwf	dynam@ext
  2710  0766  3000               	movlw	0
  2711  0767  00C7               	movwf	dynam@ext+1
  2712  0768                     l1956:
  2713  0768  3003               	movlw	3
  2714  0769  00C0               	movwf	dynam@smd
  2715  076A  3000               	movlw	0
  2716  076B  00C1               	movwf	dynam@smd+1
  2717  076C  0840               	movf	dynam@smd,w
  2718  076D  008D               	movwf	13	;volatile
  2719  076E                     l1958:
  2720                           
  2721                           ;Q3.c: 239:                 if((ccw==1)&&(ext==0)){ccw=2;cw=3;ext=1;PORTB=smd=0x06;}
  2722  076E  0332               	decf	_ccw,w
  2723  076F  0433               	iorwf	_ccw+1,w
  2724  0770  1D03               	btfss	3,2
  2725  0771  2F73               	goto	u1291
  2726  0772  2F74               	goto	u1290
  2727  0773                     u1291:
  2728  0773  2F8C               	goto	l1964
  2729  0774                     u1290:
  2730  0774                     l1960:
  2731  0774  0846               	movf	dynam@ext,w
  2732  0775  0447               	iorwf	dynam@ext+1,w
  2733  0776  1D03               	btfss	3,2
  2734  0777  2F79               	goto	u1301
  2735  0778  2F7A               	goto	u1300
  2736  0779                     u1301:
  2737  0779  2F8C               	goto	l1964
  2738  077A                     u1300:
  2739  077A                     l1962:
  2740  077A  3002               	movlw	2
  2741  077B  00B2               	movwf	_ccw
  2742  077C  3000               	movlw	0
  2743  077D  00B3               	movwf	_ccw+1
  2744  077E  3003               	movlw	3
  2745  077F  00B4               	movwf	_cw
  2746  0780  3000               	movlw	0
  2747  0781  00B5               	movwf	_cw+1
  2748  0782  3001               	movlw	1
  2749  0783  00C6               	movwf	dynam@ext
  2750  0784  3000               	movlw	0
  2751  0785  00C7               	movwf	dynam@ext+1
  2752  0786  3006               	movlw	6
  2753  0787  00C0               	movwf	dynam@smd
  2754  0788  3000               	movlw	0
  2755  0789  00C1               	movwf	dynam@smd+1
  2756  078A  0840               	movf	dynam@smd,w
  2757  078B  008D               	movwf	13	;volatile
  2758  078C                     l1964:
  2759                           
  2760                           ;Q3.c: 240:                 if((ccw==2)&&(ext==0)){ccw=3;cw=2;ext=1;PORTB=smd=0x0C;}
  2761  078C  3002               	movlw	2
  2762  078D  0632               	xorwf	_ccw,w
  2763  078E  0433               	iorwf	_ccw+1,w
  2764  078F  1D03               	btfss	3,2
  2765  0790  2F92               	goto	u1311
  2766  0791  2F93               	goto	u1310
  2767  0792                     u1311:
  2768  0792  2FAB               	goto	l1970
  2769  0793                     u1310:
  2770  0793                     l1966:
  2771  0793  0846               	movf	dynam@ext,w
  2772  0794  0447               	iorwf	dynam@ext+1,w
  2773  0795  1D03               	btfss	3,2
  2774  0796  2F98               	goto	u1321
  2775  0797  2F99               	goto	u1320
  2776  0798                     u1321:
  2777  0798  2FAB               	goto	l1970
  2778  0799                     u1320:
  2779  0799                     l1968:
  2780  0799  3003               	movlw	3
  2781  079A  00B2               	movwf	_ccw
  2782  079B  3000               	movlw	0
  2783  079C  00B3               	movwf	_ccw+1
  2784  079D  3002               	movlw	2
  2785  079E  00B4               	movwf	_cw
  2786  079F  3000               	movlw	0
  2787  07A0  00B5               	movwf	_cw+1
  2788  07A1  3001               	movlw	1
  2789  07A2  00C6               	movwf	dynam@ext
  2790  07A3  3000               	movlw	0
  2791  07A4  00C7               	movwf	dynam@ext+1
  2792  07A5  300C               	movlw	12
  2793  07A6  00C0               	movwf	dynam@smd
  2794  07A7  3000               	movlw	0
  2795  07A8  00C1               	movwf	dynam@smd+1
  2796  07A9  0840               	movf	dynam@smd,w
  2797  07AA  008D               	movwf	13	;volatile
  2798  07AB                     l1970:
  2799                           
  2800                           ;Q3.c: 241:                 if((ccw==3)&&(ext==0)){ccw=0;cw=1;ext=1;PORTB=smd=0x09;}
  2801  07AB  3003               	movlw	3
  2802  07AC  0632               	xorwf	_ccw,w
  2803  07AD  0433               	iorwf	_ccw+1,w
  2804  07AE  1D03               	btfss	3,2
  2805  07AF  2FB1               	goto	u1331
  2806  07B0  2FB2               	goto	u1330
  2807  07B1                     u1331:
  2808  07B1  2EC7               	goto	l1890
  2809  07B2                     u1330:
  2810  07B2                     l1972:
  2811  07B2  0846               	movf	dynam@ext,w
  2812  07B3  0447               	iorwf	dynam@ext+1,w
  2813  07B4  1D03               	btfss	3,2
  2814  07B5  2FB7               	goto	u1341
  2815  07B6  2FB8               	goto	u1340
  2816  07B7                     u1341:
  2817  07B7  2EC7               	goto	l1890
  2818  07B8                     u1340:
  2819  07B8                     l1974:
  2820  07B8  01B2               	clrf	_ccw
  2821  07B9  01B3               	clrf	_ccw+1
  2822  07BA                     l1976:
  2823  07BA  3001               	movlw	1
  2824  07BB  00B4               	movwf	_cw
  2825  07BC  3000               	movlw	0
  2826  07BD  00B5               	movwf	_cw+1
  2827  07BE                     l1978:
  2828  07BE                     l1980:
  2829  07BE  3009               	movlw	9
  2830  07BF  00C0               	movwf	dynam@smd
  2831  07C0  3000               	movlw	0
  2832  07C1  00C1               	movwf	dynam@smd+1
  2833  07C2  0840               	movf	dynam@smd,w
  2834  07C3  008D               	movwf	13	;volatile
  2835  07C4  2EC7               	goto	l1890
  2836  07C5                     l1988:
  2837                           
  2838                           ;Q3.c: 245:                 cw=ccw=0;
  2839  07C5  01B2               	clrf	_ccw
  2840  07C6  01B3               	clrf	_ccw+1
  2841  07C7  01B4               	clrf	_cw
  2842  07C8  01B5               	clrf	_cw+1
  2843                           
  2844                           ;Q3.c: 246:                 break;
  2845  07C9  2FDA               	goto	l135
  2846  07CA                     l1992:
  2847                           
  2848                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2849                           ; Switch size 1, requested type "simple"
  2850                           ; Number of cases is 1, Range of values is 0 to 0
  2851                           ; switch strategies available:
  2852                           ; Name         Instructions Cycles
  2853                           ; simple_byte            4     3 (average)
  2854                           ; direct_byte            8     6 (fixed)
  2855                           ; jumptable            260     6 (fixed)
  2856                           ;	Chosen strategy is simple_byte
  2857  07CA  0875               	movf	dynam@smdata+1,w
  2858  07CB  3A00               	xorlw	0	; case 0
  2859  07CC  1903               	skipnz
  2860  07CD  2FCF               	goto	l2748
  2861  07CE  2FC5               	goto	l1988
  2862  07CF                     l2748:
  2863                           
  2864                           ; Switch size 1, requested type "simple"
  2865                           ; Number of cases is 3, Range of values is 0 to 2
  2866                           ; switch strategies available:
  2867                           ; Name         Instructions Cycles
  2868                           ; simple_byte           10     6 (average)
  2869                           ; direct_byte           12     6 (fixed)
  2870                           ; jumptable            260     6 (fixed)
  2871                           ;	Chosen strategy is simple_byte
  2872  07CF  0874               	movf	dynam@smdata,w
  2873  07D0  3A00               	xorlw	0	; case 0
  2874  07D1  1903               	skipnz
  2875  07D2  2EC6               	goto	l1886
  2876  07D3  3A01               	xorlw	1	; case 1
  2877  07D4  1903               	skipnz
  2878  07D5  2ECB               	goto	l1896
  2879  07D6  3A03               	xorlw	3	; case 2
  2880  07D7  1903               	skipnz
  2881  07D8  2F48               	goto	l1942
  2882  07D9  2FC5               	goto	l1988
  2883  07DA                     l135:
  2884  07DA  0008               	return
  2885  07DB                     __end_of_dynam:
  2886                           
  2887                           	psect	text11
  2888  038A                     __ptext11:	
  2889 ;; *************** function ___wmul *****************
  2890 ;; Defined at:
  2891 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  2892 ;; Parameters:    Size  Location     Type
  2893 ;;  multiplier      2    0[COMMON] unsigned int 
  2894 ;;  multiplicand    2    2[COMMON] unsigned int 
  2895 ;; Auto vars:     Size  Location     Type
  2896 ;;  product         2    4[COMMON] unsigned int 
  2897 ;; Return value:  Size  Location     Type
  2898 ;;                  2    0[COMMON] unsigned int 
  2899 ;; Registers used:
  2900 ;;		wreg, status,2, status,0
  2901 ;; Tracked objects:
  2902 ;;		On entry : 0/0
  2903 ;;		On exit  : 0/0
  2904 ;;		Unchanged: 0/0
  2905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2906 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2907 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2909 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2910 ;;Total ram usage:        6 bytes
  2911 ;; Hardware stack levels used:    1
  2912 ;; This function calls:
  2913 ;;		Nothing
  2914 ;; This function is called by:
  2915 ;;		_main
  2916 ;;		_wait
  2917 ;;		_hen7
  2918 ;;		_hens
  2919 ;; This function uses a non-reentrant model
  2920 ;;
  2921                           
  2922                           
  2923                           ;psect for function ___wmul
  2924  038A                     ___wmul:
  2925  038A                     l2192:	
  2926                           ;incstack = 0
  2927                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2928                           
  2929  038A  01F4               	clrf	___wmul@product
  2930  038B  01F5               	clrf	___wmul@product+1
  2931  038C                     l2194:
  2932  038C  1C70               	btfss	___wmul@multiplier,0
  2933  038D  2B8F               	goto	u1591
  2934  038E  2B90               	goto	u1590
  2935  038F                     u1591:
  2936  038F  2B94               	goto	l478
  2937  0390                     u1590:
  2938  0390                     l2196:
  2939  0390  0872               	movf	___wmul@multiplicand,w
  2940  0391  07F4               	addwf	___wmul@product,f
  2941  0392  0873               	movf	___wmul@multiplicand+1,w
  2942  0393  3DF5               	addwfc	___wmul@product+1,f
  2943  0394                     l478:
  2944  0394  3001               	movlw	1
  2945  0395                     u1605:
  2946  0395  35F2               	lslf	___wmul@multiplicand,f
  2947  0396  0DF3               	rlf	___wmul@multiplicand+1,f
  2948  0397  0B89               	decfsz	9,f
  2949  0398  2B95               	goto	u1605
  2950  0399                     l2198:
  2951  0399  3001               	movlw	1
  2952  039A                     u1615:
  2953  039A  36F1               	lsrf	___wmul@multiplier+1,f
  2954  039B  0CF0               	rrf	___wmul@multiplier,f
  2955  039C  0B89               	decfsz	9,f
  2956  039D  2B9A               	goto	u1615
  2957  039E                     l2200:
  2958  039E  0870               	movf	___wmul@multiplier,w
  2959  039F  0471               	iorwf	___wmul@multiplier+1,w
  2960  03A0  1D03               	btfss	3,2
  2961  03A1  2BA3               	goto	u1621
  2962  03A2  2BA4               	goto	u1620
  2963  03A3                     u1621:
  2964  03A3  2B8C               	goto	l2194
  2965  03A4                     u1620:
  2966  03A4                     l2202:
  2967  03A4  0875               	movf	___wmul@product+1,w
  2968  03A5  00F1               	movwf	?___wmul+1
  2969  03A6  0874               	movf	___wmul@product,w
  2970  03A7  00F0               	movwf	?___wmul
  2971  03A8                     l480:
  2972  03A8  0008               	return
  2973  03A9                     __end_of___wmul:
  2974  007E                     btemp	set	126	;btemp
  2975  007E                     wtemp0	set	126
  2976                           
  2977                           	psect	config
  2978                           
  2979                           ;Config register CONFIG1 @ 0x8007
  2980                           ;	Oscillator Selection
  2981                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  2982                           ;	Watchdog Timer Enable
  2983                           ;	WDTE = OFF, WDT disabled
  2984                           ;	Power-up Timer Enable
  2985                           ;	PWRTE = OFF, PWRT disabled
  2986                           ;	MCLR Pin Function Select
  2987                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  2988                           ;	Flash Program Memory Code Protection
  2989                           ;	CP = OFF, Program memory code protection is disabled
  2990                           ;	Data Memory Code Protection
  2991                           ;	CPD = OFF, Data memory code protection is disabled
  2992                           ;	Brown-out Reset Enable
  2993                           ;	BOREN = OFF, Brown-out Reset disabled
  2994                           ;	Clock Out Enable
  2995                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  2996                           ;	Internal/External Switchover
  2997                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2998                           ;	Fail-Safe Clock Monitor Enable
  2999                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3000  8007                     	org	32775
  3001  8007  09E4               	dw	2532
  3002                           
  3003                           ;Config register CONFIG2 @ 0x8008
  3004                           ;	Flash Memory Self-Write Protection
  3005                           ;	WRT = OFF, Write protection off
  3006                           ;	Voltage Regulator Capacitor Enable
  3007                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
  3008                           ;	PLL Enable
  3009                           ;	PLLEN = OFF, 4x PLL disabled
  3010                           ;	Stack Overflow/Underflow Reset Enable
  3011                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  3012                           ;	Brown-out Reset Voltage Selection
  3013                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  3014                           ;	Low-Voltage Programming Enable
  3015                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  3016  8008                     	org	32776
  3017  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    0
    Data        156
    BSS         34
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     46      78
    BANK1            80      0      80
    BANK2            80      0      76
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_waitSEGStop
    _waitSEGStop->_tact
    _tact->_tactsw
    _waitSEG->___lwdiv
    _waitSEG->_dynam
    _motor->_dynam

Critical Paths under _main in BANK0

    _main->_waitSEGStop
    _waitSEGStop->_dynam
    _waitSEG->_dynam
    _motor->_dynam

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                24    24      0   21492
                                             22 BANK0     24    24      0
                             ___wmul
                              _dynam
                               _fclr
                              _motor
                           _portinit
                               _tact
                            _waitSEG
                        _waitSEGStop
                             _zenoff
 ---------------------------------------------------------------------------------
 (1) _zenoff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _waitSEGStop                                         16     8      8    6108
                                             10 COMMON     2     2      0
                                              8 BANK0     14     6      8
                            ___lwdiv
                              _dynam
                               _fclr
                               _tact
 ---------------------------------------------------------------------------------
 (2) _tact                                                 2     0      2     518
                                              8 COMMON     2     0      2
                             _tactsw
 ---------------------------------------------------------------------------------
 (3) _tactsw                                               8     8      0     116
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 (2) _fclr                                                 2     0      2     782
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _waitSEG                                              8     2      6    3708
                                              8 COMMON     2     2      0
                                              8 BANK0      6     0      6
                            ___lwdiv
                              _dynam
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     466
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _portinit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motor                                               12     2     10    5315
                                              8 COMMON     2     2      0
                                              8 BANK0     10     0     10
                             ___wmul (ARG)
                              _dynam
 ---------------------------------------------------------------------------------
 (2) _dynam                                               16     8      8    2879
                                              0 COMMON     8     0      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4    1460
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___wmul
   _dynam
   _fclr
   _motor
     ___wmul (ARG)
     _dynam (ARG)
   _portinit
   _tact
     _tactsw
   _waitSEG
     ___lwdiv
     _dynam
   _waitSEGStop
     ___lwdiv
     _dynam
     _fclr
     _tact
       _tactsw
   _zenoff

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2E      4E       5       97.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      4C       9       95.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      F8      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      F8      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu May 27 16:58:12 2021

                     l95 0389                       _cw 0034      ___wmul@multiplicand 0072  
                    l112 068D                      l114 069D                      l123 06D3  
                    l116 06B3                      l108 0376                      l118 06C3  
                    l135 07DA                      l208 04E5                      l129 0750  
                    l217 03C8                      l193 0499                      l265 0670  
                    l274 03EC                      l258 0420                      l290 058B  
                    l292 0598                      l480 03A8                      l478 0394  
                    l758 045C                      _RA0 0060                      _RA1 0061  
                    _RA2 0062                      _RC0 0070                      _RC1 0071  
                    _RC2 0072                      _RC5 0075                      _RC6 0076  
                    _RC7 0077                      _ccw 0032                      _flg 0036  
                    wreg 0009                     l2000 049B                     l2010 04B3  
                   l2002 049E                     l2020 04CD                     l2012 04B9  
                   l2004 04A4                     l2014 04BC                     l2006 04AA  
                   l2110 0374                     l2200 039E                     l2032 03A9  
                   l2016 04C2                     l2008 04AD                     l2112 0375  
                   l2104 036E                     l2202 03A4                     l2050 0423  
                   l2122 0409                     l2114 03ED                     l2034 03AA  
                   l2042 03B8                     l2018 04C7                     l2026 04D5  
                   l2130 05ED                     l2106 0372                     l2060 0439  
                   l2052 0429                     l2124 041B                     l2116 03FE  
                   l2036 03AE                     l2140 061F                     l2132 05FD  
                   l2108 0373                     l2062 0448                     l2054 042C  
                   l2070 0458                     l2118 0402                     l2038 03B2  
                   l2142 0631                     l2150 0642                     l2134 0601  
                   l2080 0384                     l2064 044C                     l2056 0431  
                   l2048 0421                     l2152 0653                     l2160 0658  
                   l2144 0635                     l2128 05D6                     l2082 0387  
                   l2074 0377                     l2066 044D                     l2058 0435  
                   l2162 065E                     l2146 063C                     l2138 0608  
                   l2180 03C9                     l2076 037A                     l2068 0452  
                   l2164 0664                     l2172 0669                     l2500 05A9  
                   l2182 03CE                     l2078 037D                     l2510 05B0  
                   l2502 05B0                     l2192 038A                     l2176 066E  
                   l2520 05B9                     l2512 05B0                     l2504 05B0  
                   l2194 038C                     l2186 03D3                     l2522 05CA  
                   l2514 05B0                     l2506 05B0                     l2196 0390  
                   l1900 06D5                     l2188 03E7                     l2524 05CF  
                   l2516 05B0                     l2508 05B0                     l2198 0399  
                   l1910 06EB                     l1902 06DB                     l1830 0477  
                   l2526 05D3                     l2518 05B5                     l1920 0716  
                   l1904 06E1                     l1912 06F1                     l1840 0494  
                   l1832 047C                     l1824 045D                     l1930 073D  
                   l1922 071C                     l1914 06F7                     l1906 06E5  
                   l1850 067C                     l1842 0671                     l1834 047E  
                   l1826 0461                     l2490 058B                     l2482 0582  
                   l1932 0741                     l1924 072E                     l1916 06FD  
                   l1908 06E7                     l1852 067D                     l1844 0678  
                   l1836 0487                     l1828 046D                     l2492 058B  
                   l2484 0585                     l1950 075E                     l1942 0748  
                   l1934 0741                     l1926 0735                     l1918 070F  
                   l1870 06A2                     l1862 0698                     l1854 0684  
                   l1846 0679                     l2494 058B                     l2486 058B  
                   l1960 0774                     l1952 0762                     l1944 074E  
                   l1928 073B                     l1872 06A3                     l1856 0689  
                   l1848 067B                     l2744 04DA                     l2496 0590  
                   l2488 058B                     l1970 07AB                     l1962 077A  
                   l1954 0764                     l1946 0752                     l1890 06C7  
                   l1882 06BE                     l1874 06AA                     l1866 069F  
                   l1858 0691                     l2746 03BD                     l2498 0594  
                   l2748 07CF                     l1980 07BE                     l1972 07B2  
                   l1964 078C                     l1956 0768                     l1948 0758  
                   l1892 06C8                     l1876 06AF                     l1868 06A1  
                   l1974 07B8                     l1966 0793                     l1958 076E  
                   l1894 06C9                     l1886 06C6                     l1878 06B7  
                   l1976 07BA                     l1968 0799                     l1896 06CB  
                   l1888 06C7                     l1992 07CA                     l1978 07BE  
                   l1898 06D1                     l1988 07C5                     l1998 049A  
                   u1110 0477                     u1111 0476                     u1200 06F7  
                   u1120 0487                     u1201 06F6                     u1121 0486  
                   u1210 06FD                     u1130 0684                     u1211 06FC  
                   u1131 0683                     u1115 0473                     u1300 077A  
                   u1220 0716                     u1140 0697                     u2100 059F  
                   u1301 0779                     u1221 0715                     u1141 0696  
                   u2101 059C                     u1310 0793                     u1230 071C  
                   u1150 06AA                     u2110 05A7                     u1311 0792  
                   u1231 071B                     u1151 06A9                     u2111 05A4  
                   u1320 0799                     u1240 0735                     u1160 06BD  
                   u1400 0429                     u1321 0798                     u1241 0734  
                   u1161 06BC                     u1401 0428                     u1330 07B2  
                   u1250 073B                     u1170 06D1                     u2130 05B5  
                   u2114 05A1                     u1331 07B1                     u1251 073A  
                   u1171 06D0                     u2131 05B4                     u1340 07B8  
                   u1260 074E                     u1180 06DB                     u1420 0439  
                   u1500 0607                     u2140 05B9                     u2124 05A9  
                   u1341 07B7                     u1261 074D                     u1181 06DA  
                   u1421 0438                     u1501 0606                     u2141 05B8  
                   u1270 0758                     u1190 06E1                     u1350 04A4  
                   u1510 0631                     u2150 05CF                     u2070 0590  
                   u1271 0757                     u1191 06E0                     u1415 042D  
                   u1351 04A3                     u1511 0630                     u2151 05CE  
                   u2071 058F                     u1280 075E                     u1440 0448  
                   u1360 04B3                     u1520 0635                     u2160 05D3  
                   u2080 0594                     u1281 075D                     u1441 0447  
                   u1361 04B2                     u1521 0634                     u2161 05D2  
                   u2081 0593                     u1290 0774                     u1370 04C2  
                   u1530 0653                     u2090 0598                     u1291 0773  
                   u1435 043A                     u1371 04C1                     u1531 0652  
                   u1515 062D                     u2091 0597                     u1620 03A4  
                   u1460 0458                     u1380 04CD                     u1540 0657  
                   u1621 03A3                     u1605 0395                     u1461 0457  
                   u1445 0444                     u1381 04CC                     u1541 0656  
                   u1390 04D4                     u1550 065E                     u1615 039A  
                   u1455 044E                     u1391 04D3                     u1551 065D  
                   u1535 064F                     u1560 0664                     u1561 0663  
                   u1490 0408                     u1570 0668                     u1491 0407  
                   u1571 0667                     u1580 03D2                     u1581 03D1  
                   u1590 0390                     u1591 038F                     _atai 002C  
                   _fclr 03A9                     _main 0582                     _num0 00C0  
                   _kisu 00D4                     _moja 0160                     _samf 0120  
                   _mojf 0154                     _tact 049A                     _mojh 00EC  
                   _moji 0140                     _mojn 00E8                     _samp 00A0  
                   _gusu 00DE                     fsr0h 0005                     fsr1h 0007  
                   indf0 0000                     fsr0l 0004                     fsr1l 0006  
                   btemp 007E                     start 0002                    ?_fclr 0070  
                  ?_main 0070                    ?_tact 0078          __end_of___lwdiv 045D  
                  _PORTA 000C                    _PORTB 000D                    _PORTC 000E  
                  _TRISA 008C                    _TRISB 008D                    _TRISC 008E  
                  _code1 0022                    _atai1 002E                    _count 002A  
                  _dynam 0671                    _fugou 0020                    _motor 03C9  
        __end_of_waitSEG 0421                    status 0003                    wtemp0 007E  
        __initialization 07DB             __end_of_fclr 03C9             __end_of_main 05D6  
           __end_of_tact 04E6                   ??_fclr 0072                   ??_main 007C  
                 ??_tact 007A                   ?_dynam 0070                   ?_motor 0048  
           ?_waitSEGStop 0048                   _ANSELA 018C                   _ANSELB 018D  
                 _OSCCON 0099              dynam@smdata 0074          waitSEGStop@seg1 0048  
        waitSEGStop@seg2 004A                   ___wmul 038A                   _code10 0024  
                 _atai10 0030                   _flag_P 0038                   _flag_R 003A  
              ??___lwdiv 0074                   _tactsw 045D                   _zenoff 036E  
                 dynam@j 0044                ??_waitSEG 0078                   motor@i 0078  
       __end_of_portinit 038A  __end_of__initialization 07FD           __pcstackCOMMON 0070  
           __pidataBANK1 0532             __pidataBANK2 04E6            __end_of_dynam 07DB  
          __end_of_motor 03ED                  ??_dynam 0078                  ??_motor 0078  
             __pbssBANK0 0020               __pmaintext 0582                  ?___wmul 0070  
                ?_tactsw 0070                  ?_zenoff 0070              waitSEG@seg1 0048  
            waitSEG@seg2 004A     __size_of_waitSEGStop 009B         waitSEGStop@cpSW1 0050  
       waitSEGStop@cpSW2 0052         waitSEGStop@dousa 004E          __size_of___wmul 001F  
              ?_portinit 0070                  ___lwdiv 0421                  _code100 0026  
        __size_of_tactsw 003D                  __ptext1 036E                  __ptext2 05D6  
                __ptext3 049A                  __ptext4 045D                  __ptext5 03A9  
                __ptext6 03ED                  __ptext7 0421                  __ptext8 0377  
                __ptext9 03C9          __size_of_zenoff 0009                  fclr@flg 0070  
                _waitSEG 03ED              motor@kakudo 0048                  clrloop0 0363  
   end_of_initialization 07FD              motor@smdata 004E                  dynam@tm 0042  
                dynam@tr 0076                  init_ram 0368                  initloop 0369  
                tactsw@a 0076                  tactsw@b 0072                  tactsw@c 0074  
                motor@tr 0050               ??_portinit 0070           __end_of___wmul 03A9  
          waitSEGStop@wt 004C           __end_of_tactsw 049A           __end_of_zenoff 0377  
    start_initialization 07DB                 ??___wmul 0074              __pdataBANK1 00A0  
            __pdataBANK2 0120                 ??_tactsw 0070                 ??_zenoff 0070  
            __pbssCOMMON 007C                ___latbits 0003            __pcstackBANK0 0040  
       ___lwdiv@dividend 0072                 ?___lwdiv 0070        __size_of_portinit 0013  
               ?_waitSEG 0048         ___lwdiv@quotient 0075            ??_waitSEGStop 007A  
         __size_of_dynam 016A           __size_of_motor 0024            dynam@dig1data 0070  
          dynam@dig2data 0072           ___wmul@product 0074                clear_ram0 0362  
          motor@dig1data 004A            motor@dig2data 004C        ___wmul@multiplier 0070  
           waitSEGStop@i 0054      __end_of_waitSEGStop 0671         __size_of___lwdiv 003C  
               _code1000 0028          ___lwdiv@divisor 0070          ___lwdiv@counter 0077  
       __size_of_waitSEG 0034                 __ptext10 0671                 __ptext11 038A  
               _flag_sw1 003E                 _flag_sw2 003C                 _flag_sw3 007C  
              waitSEG@wt 004C            __size_of_fclr 0020            __size_of_main 0054  
          __size_of_tact 004C                 _portinit 0377                 dynam@ext 0046  
               dynam@smd 0040                 tact@mode 0078              _waitSEGStop 05D6  
               waitSEG@i 0078  
