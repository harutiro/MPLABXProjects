

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Jun 03 17:48:22 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F1938
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    12                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 2.20
    34                           ; Generated 12/02/2020 GMT
    35                           ; 
    36                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F1938 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000D                     	;# 
    81  000E                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  001E                     	;# 
    96  001F                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  0110                     	;# 
   119  0111                     	;# 
   120  0112                     	;# 
   121  0113                     	;# 
   122  0114                     	;# 
   123  0115                     	;# 
   124  0116                     	;# 
   125  0117                     	;# 
   126  0118                     	;# 
   127  0119                     	;# 
   128  011A                     	;# 
   129  011B                     	;# 
   130  011D                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0191                     	;# 
   134  0191                     	;# 
   135  0192                     	;# 
   136  0193                     	;# 
   137  0193                     	;# 
   138  0193                     	;# 
   139  0194                     	;# 
   140  0195                     	;# 
   141  0196                     	;# 
   142  0199                     	;# 
   143  019A                     	;# 
   144  019B                     	;# 
   145  019B                     	;# 
   146  019B                     	;# 
   147  019B                     	;# 
   148  019C                     	;# 
   149  019C                     	;# 
   150  019D                     	;# 
   151  019E                     	;# 
   152  019F                     	;# 
   153  020D                     	;# 
   154  0210                     	;# 
   155  0211                     	;# 
   156  0212                     	;# 
   157  0213                     	;# 
   158  0214                     	;# 
   159  0215                     	;# 
   160  0215                     	;# 
   161  0216                     	;# 
   162  0217                     	;# 
   163  0291                     	;# 
   164  0291                     	;# 
   165  0292                     	;# 
   166  0293                     	;# 
   167  0294                     	;# 
   168  0295                     	;# 
   169  0295                     	;# 
   170  0296                     	;# 
   171  0298                     	;# 
   172  0298                     	;# 
   173  0299                     	;# 
   174  029A                     	;# 
   175  029B                     	;# 
   176  029C                     	;# 
   177  029C                     	;# 
   178  029D                     	;# 
   179  029E                     	;# 
   180  029F                     	;# 
   181  0311                     	;# 
   182  0311                     	;# 
   183  0312                     	;# 
   184  0313                     	;# 
   185  0314                     	;# 
   186  0315                     	;# 
   187  0315                     	;# 
   188  0316                     	;# 
   189  0318                     	;# 
   190  0318                     	;# 
   191  0319                     	;# 
   192  031A                     	;# 
   193  031C                     	;# 
   194  031C                     	;# 
   195  031D                     	;# 
   196  031E                     	;# 
   197  0394                     	;# 
   198  0395                     	;# 
   199  0396                     	;# 
   200  0415                     	;# 
   201  0416                     	;# 
   202  0417                     	;# 
   203  041C                     	;# 
   204  041D                     	;# 
   205  041E                     	;# 
   206  0791                     	;# 
   207  0792                     	;# 
   208  0793                     	;# 
   209  0794                     	;# 
   210  0795                     	;# 
   211  0798                     	;# 
   212  0799                     	;# 
   213  07A0                     	;# 
   214  07A1                     	;# 
   215  07A3                     	;# 
   216  07A4                     	;# 
   217  07A6                     	;# 
   218  07A7                     	;# 
   219  07A9                     	;# 
   220  07AA                     	;# 
   221  0FE4                     	;# 
   222  0FE5                     	;# 
   223  0FE6                     	;# 
   224  0FE7                     	;# 
   225  0FE8                     	;# 
   226  0FE9                     	;# 
   227  0FEA                     	;# 
   228  0FEB                     	;# 
   229  0FED                     	;# 
   230  0FEE                     	;# 
   231  0FEF                     	;# 
   232  0000                     	;# 
   233  0001                     	;# 
   234  0002                     	;# 
   235  0003                     	;# 
   236  0004                     	;# 
   237  0005                     	;# 
   238  0006                     	;# 
   239  0007                     	;# 
   240  0008                     	;# 
   241  0009                     	;# 
   242  000A                     	;# 
   243  000B                     	;# 
   244  000C                     	;# 
   245  000D                     	;# 
   246  000E                     	;# 
   247  0010                     	;# 
   248  0011                     	;# 
   249  0012                     	;# 
   250  0013                     	;# 
   251  0015                     	;# 
   252  0016                     	;# 
   253  0016                     	;# 
   254  0017                     	;# 
   255  0018                     	;# 
   256  0019                     	;# 
   257  001A                     	;# 
   258  001B                     	;# 
   259  001C                     	;# 
   260  001E                     	;# 
   261  001F                     	;# 
   262  008C                     	;# 
   263  008D                     	;# 
   264  008E                     	;# 
   265  0090                     	;# 
   266  0091                     	;# 
   267  0092                     	;# 
   268  0093                     	;# 
   269  0095                     	;# 
   270  0096                     	;# 
   271  0097                     	;# 
   272  0098                     	;# 
   273  0099                     	;# 
   274  009A                     	;# 
   275  009B                     	;# 
   276  009B                     	;# 
   277  009C                     	;# 
   278  009D                     	;# 
   279  009E                     	;# 
   280  010C                     	;# 
   281  010D                     	;# 
   282  010E                     	;# 
   283  0110                     	;# 
   284  0111                     	;# 
   285  0112                     	;# 
   286  0113                     	;# 
   287  0114                     	;# 
   288  0115                     	;# 
   289  0116                     	;# 
   290  0117                     	;# 
   291  0118                     	;# 
   292  0119                     	;# 
   293  011A                     	;# 
   294  011B                     	;# 
   295  011D                     	;# 
   296  018C                     	;# 
   297  018D                     	;# 
   298  0191                     	;# 
   299  0191                     	;# 
   300  0192                     	;# 
   301  0193                     	;# 
   302  0193                     	;# 
   303  0193                     	;# 
   304  0194                     	;# 
   305  0195                     	;# 
   306  0196                     	;# 
   307  0199                     	;# 
   308  019A                     	;# 
   309  019B                     	;# 
   310  019B                     	;# 
   311  019B                     	;# 
   312  019B                     	;# 
   313  019C                     	;# 
   314  019C                     	;# 
   315  019D                     	;# 
   316  019E                     	;# 
   317  019F                     	;# 
   318  020D                     	;# 
   319  0210                     	;# 
   320  0211                     	;# 
   321  0212                     	;# 
   322  0213                     	;# 
   323  0214                     	;# 
   324  0215                     	;# 
   325  0215                     	;# 
   326  0216                     	;# 
   327  0217                     	;# 
   328  0291                     	;# 
   329  0291                     	;# 
   330  0292                     	;# 
   331  0293                     	;# 
   332  0294                     	;# 
   333  0295                     	;# 
   334  0295                     	;# 
   335  0296                     	;# 
   336  0298                     	;# 
   337  0298                     	;# 
   338  0299                     	;# 
   339  029A                     	;# 
   340  029B                     	;# 
   341  029C                     	;# 
   342  029C                     	;# 
   343  029D                     	;# 
   344  029E                     	;# 
   345  029F                     	;# 
   346  0311                     	;# 
   347  0311                     	;# 
   348  0312                     	;# 
   349  0313                     	;# 
   350  0314                     	;# 
   351  0315                     	;# 
   352  0315                     	;# 
   353  0316                     	;# 
   354  0318                     	;# 
   355  0318                     	;# 
   356  0319                     	;# 
   357  031A                     	;# 
   358  031C                     	;# 
   359  031C                     	;# 
   360  031D                     	;# 
   361  031E                     	;# 
   362  0394                     	;# 
   363  0395                     	;# 
   364  0396                     	;# 
   365  0415                     	;# 
   366  0416                     	;# 
   367  0417                     	;# 
   368  041C                     	;# 
   369  041D                     	;# 
   370  041E                     	;# 
   371  0791                     	;# 
   372  0792                     	;# 
   373  0793                     	;# 
   374  0794                     	;# 
   375  0795                     	;# 
   376  0798                     	;# 
   377  0799                     	;# 
   378  07A0                     	;# 
   379  07A1                     	;# 
   380  07A3                     	;# 
   381  07A4                     	;# 
   382  07A6                     	;# 
   383  07A7                     	;# 
   384  07A9                     	;# 
   385  07AA                     	;# 
   386  0FE4                     	;# 
   387  0FE5                     	;# 
   388  0FE6                     	;# 
   389  0FE7                     	;# 
   390  0FE8                     	;# 
   391  0FE9                     	;# 
   392  0FEA                     	;# 
   393  0FEB                     	;# 
   394  0FED                     	;# 
   395  0FEE                     	;# 
   396  0FEF                     	;# 
   397                           
   398                           	psect	idataBANK1
   399  024F                     __pidataBANK1:
   400                           
   401                           ;initializer for _samp
   402  024F  343F               	retlw	63
   403  0250  3400               	retlw	0
   404  0251  3406               	retlw	6
   405  0252  3400               	retlw	0
   406  0253  345B               	retlw	91
   407  0254  3400               	retlw	0
   408  0255  344F               	retlw	79
   409  0256  3400               	retlw	0
   410  0257  3466               	retlw	102
   411  0258  3400               	retlw	0
   412  0259  346D               	retlw	109
   413  025A  3400               	retlw	0
   414  025B  347D               	retlw	125
   415  025C  3400               	retlw	0
   416  025D  3427               	retlw	39
   417  025E  3400               	retlw	0
   418  025F  347F               	retlw	127
   419  0260  3400               	retlw	0
   420  0261  346F               	retlw	111
   421  0262  3400               	retlw	0
   422  0263  345F               	retlw	95
   423  0264  3400               	retlw	0
   424  0265  347C               	retlw	124
   425  0266  3400               	retlw	0
   426  0267  3458               	retlw	88
   427  0268  3400               	retlw	0
   428  0269  345E               	retlw	94
   429  026A  3400               	retlw	0
   430  026B  3479               	retlw	121
   431  026C  3400               	retlw	0
   432  026D  3471               	retlw	113
   433  026E  3400               	retlw	0
   434                           
   435                           ;initializer for _moja
   436  026F  345F               	retlw	95
   437  0270  3400               	retlw	0
   438  0271  347C               	retlw	124
   439  0272  3400               	retlw	0
   440  0273  3458               	retlw	88
   441  0274  3400               	retlw	0
   442  0275  345E               	retlw	94
   443  0276  3400               	retlw	0
   444  0277  3479               	retlw	121
   445  0278  3400               	retlw	0
   446  0279  3471               	retlw	113
   447  027A  3400               	retlw	0
   448                           
   449                           ;initializer for _kisu
   450  027B  3406               	retlw	6
   451  027C  3400               	retlw	0
   452  027D  344F               	retlw	79
   453  027E  3400               	retlw	0
   454  027F  346D               	retlw	109
   455  0280  3400               	retlw	0
   456  0281  3427               	retlw	39
   457  0282  3400               	retlw	0
   458  0283  346F               	retlw	111
   459  0284  3400               	retlw	0
   460                           
   461                           ;initializer for _gusu
   462  0285  343F               	retlw	63
   463  0286  3400               	retlw	0
   464  0287  345B               	retlw	91
   465  0288  3400               	retlw	0
   466  0289  3466               	retlw	102
   467  028A  3400               	retlw	0
   468  028B  347D               	retlw	125
   469  028C  3400               	retlw	0
   470  028D  347F               	retlw	127
   471  028E  3400               	retlw	0
   472                           
   473                           ;initializer for _mojn
   474  028F  3454               	retlw	84
   475  0290  3400               	retlw	0
   476  0291  3473               	retlw	115
   477  0292  3400               	retlw	0
   478                           
   479                           ;initializer for _mojh
   480  0293  3476               	retlw	118
   481  0294  3400               	retlw	0
   482  0295  3438               	retlw	56
   483  0296  3400               	retlw	0
   484                           
   485                           	psect	idataBANK2
   486  01A2                     __pidataBANK2:
   487                           
   488                           ;initializer for _moji
   489  01A2  345F               	retlw	95
   490  01A3  3400               	retlw	0
   491  01A4  347C               	retlw	124
   492  01A5  3400               	retlw	0
   493  01A6  3458               	retlw	88
   494  01A7  3400               	retlw	0
   495  01A8  345E               	retlw	94
   496  01A9  3400               	retlw	0
   497  01AA  3479               	retlw	121
   498  01AB  3400               	retlw	0
   499  01AC  3471               	retlw	113
   500  01AD  3400               	retlw	0
   501  01AE  3476               	retlw	118
   502  01AF  3400               	retlw	0
   503  01B0  3438               	retlw	56
   504  01B1  3400               	retlw	0
   505  01B2  3454               	retlw	84
   506  01B3  3400               	retlw	0
   507  01B4  3473               	retlw	115
   508  01B5  3400               	retlw	0
   509                           
   510                           ;initializer for _num0
   511  01B6  343F               	retlw	63
   512  01B7  3400               	retlw	0
   513  01B8  3406               	retlw	6
   514  01B9  3400               	retlw	0
   515  01BA  345B               	retlw	91
   516  01BB  3400               	retlw	0
   517  01BC  344F               	retlw	79
   518  01BD  3400               	retlw	0
   519  01BE  3466               	retlw	102
   520  01BF  3400               	retlw	0
   521  01C0  346D               	retlw	109
   522  01C1  3400               	retlw	0
   523  01C2  347D               	retlw	125
   524  01C3  3400               	retlw	0
   525  01C4  3427               	retlw	39
   526  01C5  3400               	retlw	0
   527  01C6  347F               	retlw	127
   528  01C7  3400               	retlw	0
   529  01C8  346F               	retlw	111
   530  01C9  3400               	retlw	0
   531                           
   532                           ;initializer for _mojf
   533  01CA  3471               	retlw	113
   534  01CB  3400               	retlw	0
   535  01CC  3479               	retlw	121
   536  01CD  3400               	retlw	0
   537  01CE  345E               	retlw	94
   538  01CF  3400               	retlw	0
   539  01D0  3458               	retlw	88
   540  01D1  3400               	retlw	0
   541  01D2  347C               	retlw	124
   542  01D3  3400               	retlw	0
   543  01D4  345F               	retlw	95
   544  01D5  3400               	retlw	0
   545                           
   546                           	psect	idataBANK3
   547  0182                     __pidataBANK3:
   548                           
   549                           ;initializer for _samf
   550  0182  3471               	retlw	113
   551  0183  3400               	retlw	0
   552  0184  3479               	retlw	121
   553  0185  3400               	retlw	0
   554  0186  345E               	retlw	94
   555  0187  3400               	retlw	0
   556  0188  3458               	retlw	88
   557  0189  3400               	retlw	0
   558  018A  347C               	retlw	124
   559  018B  3400               	retlw	0
   560  018C  345F               	retlw	95
   561  018D  3400               	retlw	0
   562  018E  346F               	retlw	111
   563  018F  3400               	retlw	0
   564  0190  347F               	retlw	127
   565  0191  3400               	retlw	0
   566  0192  3427               	retlw	39
   567  0193  3400               	retlw	0
   568  0194  347D               	retlw	125
   569  0195  3400               	retlw	0
   570  0196  346D               	retlw	109
   571  0197  3400               	retlw	0
   572  0198  3466               	retlw	102
   573  0199  3400               	retlw	0
   574  019A  344F               	retlw	79
   575  019B  3400               	retlw	0
   576  019C  345B               	retlw	91
   577  019D  3400               	retlw	0
   578  019E  3406               	retlw	6
   579  019F  3400               	retlw	0
   580  01A0  343F               	retlw	63
   581  01A1  3400               	retlw	0
   582  000E                     _PORTC	set	14
   583  000D                     _PORTB	set	13
   584  000C                     _PORTA	set	12
   585  0061                     _RA1	set	97
   586  0060                     _RA0	set	96
   587  0062                     _RA2	set	98
   588  0077                     _RC7	set	119
   589  0070                     _RC0	set	112
   590  0071                     _RC1	set	113
   591  0072                     _RC2	set	114
   592  0076                     _RC6	set	118
   593  0075                     _RC5	set	117
   594  0099                     _OSCCON	set	153
   595  008E                     _TRISC	set	142
   596  008D                     _TRISB	set	141
   597  008C                     _TRISA	set	140
   598  018D                     _ANSELB	set	397
   599  018C                     _ANSELA	set	396
   600                           
   601                           	psect	cinit
   602  07CC                     start_initialization:	
   603                           ; #config settings
   604                           
   605  07CC                     __initialization:
   606                           
   607                           ; Initialize objects allocated to BANK1
   608  07CC  304F               	movlw	low __pidataBANK1
   609  07CD  0084               	movwf	4
   610  07CE  3082               	movlw	(high __pidataBANK1)| (0+128)
   611  07CF  0085               	movwf	5
   612  07D0  30A0               	movlw	low __pdataBANK1
   613  07D1  0086               	movwf	6
   614  07D2  3000               	movlw	high __pdataBANK1
   615  07D3  0087               	movwf	7
   616  07D4  3048               	movlw	72
   617  07D5  3180  20E1  3187   	fcall	init_ram
   618                           
   619                           ; Initialize objects allocated to BANK2
   620  07D8  30A2               	movlw	low __pidataBANK2
   621  07D9  0084               	movwf	4
   622  07DA  3081               	movlw	(high __pidataBANK2)| (0+128)
   623  07DB  0085               	movwf	5
   624  07DC  3020               	movlw	low __pdataBANK2
   625  07DD  0086               	movwf	6
   626  07DE  3001               	movlw	high __pdataBANK2
   627  07DF  0087               	movwf	7
   628  07E0  3034               	movlw	52
   629  07E1  3180  20E1  3187   	fcall	init_ram
   630                           
   631                           ; Initialize objects allocated to BANK3
   632  07E4  3082               	movlw	low __pidataBANK3
   633  07E5  0084               	movwf	4
   634  07E6  3081               	movlw	(high __pidataBANK3)| (0+128)
   635  07E7  0085               	movwf	5
   636  07E8  30A0               	movlw	low __pdataBANK3
   637  07E9  0086               	movwf	6
   638  07EA  3001               	movlw	high __pdataBANK3
   639  07EB  0087               	movwf	7
   640  07EC  3020               	movlw	32
   641  07ED  3180  20E1  3187   	fcall	init_ram
   642                           
   643                           ; Clear objects allocated to BANK0
   644  07F0  3020               	movlw	low __pbssBANK0
   645  07F1  0084               	movwf	4
   646  07F2  3000               	movlw	high __pbssBANK0
   647  07F3  0085               	movwf	5
   648  07F4  301E               	movlw	30
   649  07F5  3180  20DB  3187   	fcall	clear_ram0
   650                           
   651                           ; Clear objects allocated to BANK1
   652  07F8  0021               	movlb	1	; select bank1
   653  07F9  01E8               	clrf	__pbssBANK1& (0+127)
   654  07FA  01E9               	clrf	(__pbssBANK1+1)& (0+127)
   655  07FB  01EA               	clrf	(__pbssBANK1+2)& (0+127)
   656  07FC  01EB               	clrf	(__pbssBANK1+3)& (0+127)
   657  07FD                     end_of_initialization:	
   658                           ;End of C runtime variable initialization code
   659                           
   660  07FD                     __end_of__initialization:
   661  07FD  0020               	movlb	0
   662  07FE  3182  2AE2         	ljmp	_main	;jump to C main() function
   663                           
   664                           	psect	bssBANK0
   665  0020                     __pbssBANK0:
   666  0020                     _fugou:
   667  0020                     	ds	2
   668  0022                     _code100:
   669  0022                     	ds	2
   670  0024                     _code1000:
   671  0024                     	ds	2
   672  0026                     _count:
   673  0026                     	ds	2
   674  0028                     _atai:
   675  0028                     	ds	2
   676  002A                     _atai1:
   677  002A                     	ds	2
   678  002C                     _atai10:
   679  002C                     	ds	2
   680  002E                     _ccw:
   681  002E                     	ds	2
   682  0030                     _cw:
   683  0030                     	ds	2
   684  0032                     _flg:
   685  0032                     	ds	2
   686  0034                     _flag_P:
   687  0034                     	ds	2
   688  0036                     _flag_R:
   689  0036                     	ds	2
   690  0038                     _flag_sw3:
   691  0038                     	ds	2
   692  003A                     _flag_sw2:
   693  003A                     	ds	2
   694  003C                     _flag_sw1:
   695  003C                     	ds	2
   696                           
   697                           	psect	bssBANK1
   698  00E8                     __pbssBANK1:
   699  00E8                     _code1:
   700  00E8                     	ds	2
   701  00EA                     _code10:
   702  00EA                     	ds	2
   703                           
   704                           	psect	dataBANK1
   705  00A0                     __pdataBANK1:
   706  00A0                     _samp:
   707  00A0                     	ds	32
   708  00C0                     _moja:
   709  00C0                     	ds	12
   710  00CC                     _kisu:
   711  00CC                     	ds	10
   712  00D6                     _gusu:
   713  00D6                     	ds	10
   714  00E0                     _mojn:
   715  00E0                     	ds	4
   716  00E4                     _mojh:
   717  00E4                     	ds	4
   718                           
   719                           	psect	dataBANK2
   720  0120                     __pdataBANK2:
   721  0120                     _moji:
   722  0120                     	ds	20
   723  0134                     _num0:
   724  0134                     	ds	20
   725  0148                     _mojf:
   726  0148                     	ds	12
   727                           
   728                           	psect	dataBANK3
   729  01A0                     __pdataBANK3:
   730  01A0                     _samf:
   731  01A0                     	ds	32
   732                           
   733                           	psect	inittext
   734  00E1                     init_ram:
   735  00E1  00FE               	movwf	btemp
   736  00E2                     initloop:
   737  00E2  0012               	moviw fsr0++
   738  00E3  001E               	movwi fsr1++
   739  00E4  0BFE               	decfsz	btemp,f
   740  00E5  28E2               	goto	initloop
   741  00E6  3400               	retlw	0
   742                           
   743                           	psect	clrtext
   744  00DB                     clear_ram0:	
   745                           ;	Called with FSR0 containing the base address, and
   746                           ;	WREG with the size to clear
   747                           
   748  00DB  0064               	clrwdt	;clear the watchdog before getting into this loop
   749  00DC                     clrloop0:
   750  00DC  0180               	clrf	0	;clear RAM location pointed to by FSR
   751  00DD  3101               	addfsr 0,1
   752  00DE  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   753  00DF  28DC               	goto	clrloop0	;have we reached the end yet?
   754  00E0  3400               	retlw	0	;all done for this memory range, return
   755                           
   756                           	psect	cstackCOMMON
   757  0070                     __pcstackCOMMON:
   758  0070                     ?_portinit:
   759  0070                     ??_portinit:	
   760                           ; 1 bytes @ 0x0
   761                           
   762  0070                     ?_zenoff:	
   763                           ; 1 bytes @ 0x0
   764                           
   765  0070                     ??_zenoff:	
   766                           ; 1 bytes @ 0x0
   767                           
   768  0070                     ?_dynam:	
   769                           ; 1 bytes @ 0x0
   770                           
   771  0070                     ?_tactsw:	
   772                           ; 1 bytes @ 0x0
   773                           
   774  0070                     ??_tactsw:	
   775                           ; 1 bytes @ 0x0
   776                           
   777  0070                     ?_fclr:	
   778                           ; 1 bytes @ 0x0
   779                           
   780  0070                     ?_buzzon:	
   781                           ; 1 bytes @ 0x0
   782                           
   783  0070                     ??_buzzon:	
   784                           ; 1 bytes @ 0x0
   785                           
   786  0070                     ?_buzzof:	
   787                           ; 1 bytes @ 0x0
   788                           
   789  0070                     ??_buzzof:	
   790                           ; 1 bytes @ 0x0
   791                           
   792  0070                     ?_main:	
   793                           ; 1 bytes @ 0x0
   794                           
   795  0070                     ?___lwdiv:	
   796                           ; 1 bytes @ 0x0
   797                           
   798  0070                     dynam@dig1data:	
   799                           ; 2 bytes @ 0x0
   800                           
   801  0070                     fclr@flg:	
   802                           ; 2 bytes @ 0x0
   803                           
   804  0070                     buzzon@t:	
   805                           ; 2 bytes @ 0x0
   806                           
   807  0070                     buzzof@t:	
   808                           ; 2 bytes @ 0x0
   809                           
   810  0070                     ___lwdiv@divisor:	
   811                           ; 2 bytes @ 0x0
   812                           
   813                           
   814                           ; 2 bytes @ 0x0
   815  0070                     	ds	2
   816  0072                     ??_fclr:
   817  0072                     dynam@dig2data:	
   818                           ; 1 bytes @ 0x2
   819                           
   820  0072                     tactsw@b:	
   821                           ; 2 bytes @ 0x2
   822                           
   823  0072                     ___lwdiv@dividend:	
   824                           ; 2 bytes @ 0x2
   825                           
   826                           
   827                           ; 2 bytes @ 0x2
   828  0072                     	ds	2
   829  0074                     ??___lwdiv:
   830  0074                     dynam@smdata:	
   831                           ; 1 bytes @ 0x4
   832                           
   833  0074                     tactsw@c:	
   834                           ; 2 bytes @ 0x4
   835                           
   836                           
   837                           ; 2 bytes @ 0x4
   838  0074                     	ds	1
   839  0075                     ___lwdiv@quotient:
   840                           
   841                           ; 2 bytes @ 0x5
   842  0075                     	ds	1
   843  0076                     dynam@tr:
   844  0076                     tactsw@a:	
   845                           ; 2 bytes @ 0x6
   846                           
   847                           
   848                           ; 2 bytes @ 0x6
   849  0076                     	ds	1
   850  0077                     ___lwdiv@counter:
   851                           
   852                           ; 1 bytes @ 0x7
   853  0077                     	ds	1
   854  0078                     ??_dynam:
   855  0078                     ?_tact:	
   856                           ; 1 bytes @ 0x8
   857                           
   858  0078                     ?___wmul:	
   859                           ; 1 bytes @ 0x8
   860                           
   861  0078                     tact@mode:	
   862                           ; 2 bytes @ 0x8
   863                           
   864  0078                     ___wmul@multiplier:	
   865                           ; 2 bytes @ 0x8
   866                           
   867                           
   868                           ; 2 bytes @ 0x8
   869  0078                     	ds	2
   870  007A                     ??_tact:
   871  007A                     ??_buzzStop:	
   872                           ; 1 bytes @ 0xA
   873                           
   874  007A                     ___wmul@multiplicand:	
   875                           ; 1 bytes @ 0xA
   876                           
   877                           
   878                           ; 2 bytes @ 0xA
   879  007A                     	ds	2
   880  007C                     ??___wmul:
   881  007C                     ___wmul@product:	
   882                           ; 1 bytes @ 0xC
   883                           
   884                           
   885                           ; 2 bytes @ 0xC
   886  007C                     	ds	2
   887  007E                     ??_main:
   888                           
   889                           	psect	cstackBANK0
   890  003E                     __pcstackBANK0:	
   891                           ; 1 bytes @ 0xE
   892                           
   893  003E                     ?_buzzStop:
   894  003E                     dynam@smd:	
   895                           ; 2 bytes @ 0x0
   896                           
   897  003E                     buzzStop@dousa:	
   898                           ; 2 bytes @ 0x0
   899                           
   900                           
   901                           ; 2 bytes @ 0x0
   902  003E                     	ds	2
   903  0040                     dynam@tm:
   904  0040                     buzzStop@time:	
   905                           ; 2 bytes @ 0x2
   906                           
   907                           
   908                           ; 2 bytes @ 0x2
   909  0040                     	ds	2
   910  0042                     dynam@j:
   911  0042                     buzzStop@rokku:	
   912                           ; 2 bytes @ 0x4
   913                           
   914                           
   915                           ; 2 bytes @ 0x4
   916  0042                     	ds	2
   917  0044                     dynam@ext:
   918  0044                     buzzStop@cpSW1:	
   919                           ; 2 bytes @ 0x6
   920                           
   921                           
   922                           ; 2 bytes @ 0x6
   923  0044                     	ds	2
   924  0046                     ?_waitSEGStop:
   925  0046                     waitSEGStop@seg1:	
   926                           ; 2 bytes @ 0x8
   927                           
   928  0046                     buzzStop@cpSW2:	
   929                           ; 2 bytes @ 0x8
   930                           
   931                           
   932                           ; 2 bytes @ 0x8
   933  0046                     	ds	2
   934  0048                     waitSEGStop@seg2:
   935  0048                     buzzStop@cpSW3:	
   936                           ; 2 bytes @ 0xA
   937                           
   938                           
   939                           ; 2 bytes @ 0xA
   940  0048                     	ds	2
   941  004A                     waitSEGStop@wt:
   942  004A                     buzzStop@j:	
   943                           ; 2 bytes @ 0xC
   944                           
   945                           
   946                           ; 2 bytes @ 0xC
   947  004A                     	ds	2
   948  004C                     waitSEGStop@dousa:
   949  004C                     buzzStop@i:	
   950                           ; 2 bytes @ 0xE
   951                           
   952                           
   953                           ; 2 bytes @ 0xE
   954  004C                     	ds	2
   955  004E                     ??_waitSEGStop:
   956                           
   957                           ; 1 bytes @ 0x10
   958  004E                     	ds	2
   959  0050                     waitSEGStop@cpSW1:
   960                           
   961                           ; 2 bytes @ 0x12
   962  0050                     	ds	2
   963  0052                     waitSEGStop@cpSW2:
   964                           
   965                           ; 2 bytes @ 0x14
   966  0052                     	ds	2
   967  0054                     waitSEGStop@cpSW3:
   968                           
   969                           ; 2 bytes @ 0x16
   970  0054                     	ds	2
   971  0056                     waitSEGStop@i:
   972                           
   973                           ; 2 bytes @ 0x18
   974  0056                     	ds	2
   975                           
   976                           	psect	maintext
   977  02E2                     __pmaintext:	
   978 ;;
   979 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   980 ;;
   981 ;; *************** function _main *****************
   982 ;; Defined at:
   983 ;;		line 768 in file "Q1.c"
   984 ;; Parameters:    Size  Location     Type
   985 ;;		None
   986 ;; Auto vars:     Size  Location     Type
   987 ;;  zyoutai         2    0        int 
   988 ;;  ataiR           2    0        int 
   989 ;;  ataiL           2    0        int 
   990 ;;  segR            2    0        unsigned short 
   991 ;;  segL            2    0        unsigned short 
   992 ;;  ans             2    0        int 
   993 ;;  time            2    0        int 
   994 ;;  n               2    0        int 
   995 ;;  m               2    0        int 
   996 ;;  k               2    0        int 
   997 ;;  j               2    0        int 
   998 ;;  i               2    0        int 
   999 ;; Return value:  Size  Location     Type
  1000 ;;                  1    wreg      void 
  1001 ;; Registers used:
  1002 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1003 ;; Tracked objects:
  1004 ;;		On entry : B1F/0
  1005 ;;		On exit  : 0/0
  1006 ;;		Unchanged: 0/0
  1007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1009 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1011 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1012 ;;Total ram usage:       24 bytes
  1013 ;; Hardware stack levels required when called:    3
  1014 ;; This function calls:
  1015 ;;		_buzzStop
  1016 ;;		_buzzof
  1017 ;;		_buzzon
  1018 ;;		_fclr
  1019 ;;		_portinit
  1020 ;;		_waitSEGStop
  1021 ;;		_zenoff
  1022 ;; This function is called by:
  1023 ;;		Startup code after reset
  1024 ;; This function uses a non-reentrant model
  1025 ;;
  1026                           
  1027                           
  1028                           ;psect for function _main
  1029  02E2                     _main:
  1030  02E2                     l3088:	
  1031                           ;incstack = 0
  1032                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1033                           
  1034                           
  1035                           ;Q1.c: 771:     OSCCON=0x7A;
  1036  02E2  307A               	movlw	122
  1037  02E3  0021               	movlb	1	; select bank1
  1038  02E4  0099               	movwf	25	;volatile
  1039  02E5                     l3090:
  1040                           
  1041                           ;Q1.c: 773:     portinit();
  1042  02E5  3180  20F0  3182   	fcall	_portinit
  1043                           
  1044                           ;Q1.c: 775:     zenoff();
  1045  02E8  3180  20E7  3182   	fcall	_zenoff
  1046  02EB                     l3092:
  1047  02EB                     l3094:
  1048  02EB                     l3096:
  1049  02EB                     l3098:
  1050  02EB                     l3100:
  1051  02EB                     l356:	
  1052                           ;Q1.c: 780:     while((RA0!=1)||(RA1!=1)||(RA2!=1));
  1053                           
  1054  02EB  0020               	movlb	0	; select bank0
  1055  02EC  1C0C               	btfss	12,0	;volatile
  1056  02ED  2AEF               	goto	u3251
  1057  02EE  2AF0               	goto	u3250
  1058  02EF                     u3251:
  1059  02EF  2AEB               	goto	l356
  1060  02F0                     u3250:
  1061  02F0                     l3102:
  1062  02F0  1C8C               	btfss	12,1	;volatile
  1063  02F1  2AF3               	goto	u3261
  1064  02F2  2AF4               	goto	u3260
  1065  02F3                     u3261:
  1066  02F3  2AEB               	goto	l356
  1067  02F4                     u3260:
  1068  02F4                     l3104:
  1069  02F4  1D0C               	btfss	12,2	;volatile
  1070  02F5  2AF7               	goto	u3271
  1071  02F6  2AF8               	goto	u3270
  1072  02F7                     u3271:
  1073  02F7  2AEB               	goto	l356
  1074  02F8                     u3270:
  1075  02F8                     l358:
  1076                           
  1077                           ;Q1.c: 783:     RC2=RC0=RC1=1;
  1078  02F8  148E               	bsf	14,1	;volatile
  1079  02F9  188E               	btfsc	14,1	;volatile
  1080  02FA  2AFC               	goto	u3281
  1081  02FB  2AFF               	goto	u3280
  1082  02FC                     u3281:
  1083  02FC  0020               	movlb	0	; select bank0
  1084  02FD  140E               	bsf	14,0	;volatile
  1085  02FE  2B01               	goto	u3294
  1086  02FF                     u3280:
  1087  02FF  0020               	movlb	0	; select bank0
  1088  0300  100E               	bcf	14,0	;volatile
  1089  0301                     u3294:
  1090  0301  180E               	btfsc	14,0	;volatile
  1091  0302  2B04               	goto	u3291
  1092  0303  2B07               	goto	u3290
  1093  0304                     u3291:
  1094  0304  0020               	movlb	0	; select bank0
  1095  0305  150E               	bsf	14,2	;volatile
  1096  0306  2B09               	goto	u3304
  1097  0307                     u3290:
  1098  0307  0020               	movlb	0	; select bank0
  1099  0308  110E               	bcf	14,2	;volatile
  1100  0309                     u3304:
  1101  0309                     l3106:
  1102                           
  1103                           ;Q1.c: 786:     fclr(2);
  1104  0309  3002               	movlw	2
  1105  030A  00F0               	movwf	fclr@flg
  1106  030B  3000               	movlw	0
  1107  030C  00F1               	movwf	fclr@flg+1
  1108  030D  3181  2162  3182   	fcall	_fclr
  1109  0310                     l3108:
  1110  0310                     l3110:
  1111  0310                     l3112:
  1112  0310                     l3114:
  1113  0310                     l3116:
  1114  0310                     l3118:
  1115  0310                     l3120:
  1116  0310                     l3122:
  1117                           
  1118                           ;Q1.c: 813:         if(RA2 == 0){
  1119  0310  0020               	movlb	0	; select bank0
  1120  0311  190C               	btfsc	12,2	;volatile
  1121  0312  2B14               	goto	u3311
  1122  0313  2B15               	goto	u3310
  1123  0314                     u3311:
  1124  0314  2B18               	goto	l3126
  1125  0315                     u3310:
  1126  0315                     l3124:
  1127                           
  1128                           ;Q1.c: 814:             buzzon();
  1129  0315  3181  2142  3182   	fcall	_buzzon
  1130  0318                     l3126:
  1131                           
  1132                           ;Q1.c: 816:         if(RA2 == 1){
  1133  0318  0020               	movlb	0	; select bank0
  1134  0319  1D0C               	btfss	12,2	;volatile
  1135  031A  2B1C               	goto	u3321
  1136  031B  2B1D               	goto	u3320
  1137  031C                     u3321:
  1138  031C  2B20               	goto	l3130
  1139  031D                     u3320:
  1140  031D                     l3128:
  1141                           
  1142                           ;Q1.c: 817:             buzzof();
  1143  031D  3181  2122  3182   	fcall	_buzzof
  1144  0320                     l3130:
  1145                           
  1146                           ;Q1.c: 820:         if(RA0 == 1 && RA1 == 0){
  1147  0320  0020               	movlb	0	; select bank0
  1148  0321  1C0C               	btfss	12,0	;volatile
  1149  0322  2B24               	goto	u3331
  1150  0323  2B25               	goto	u3330
  1151  0324                     u3331:
  1152  0324  2B3C               	goto	l3138
  1153  0325                     u3330:
  1154  0325                     l3132:
  1155  0325  188C               	btfsc	12,1	;volatile
  1156  0326  2B28               	goto	u3341
  1157  0327  2B29               	goto	u3340
  1158  0328                     u3341:
  1159  0328  2B3C               	goto	l3138
  1160  0329                     u3340:
  1161  0329                     l3134:
  1162                           
  1163                           ;Q1.c: 821:             if(RA2 == 0){
  1164  0329  190C               	btfsc	12,2	;volatile
  1165  032A  2B2C               	goto	u3351
  1166  032B  2B2D               	goto	u3350
  1167  032C                     u3351:
  1168  032C  2B3C               	goto	l3138
  1169  032D                     u3350:
  1170  032D                     l3136:
  1171                           
  1172                           ;Q1.c: 822:                 buzzStop(1,1,0b111);
  1173  032D  3001               	movlw	1
  1174  032E  00BE               	movwf	buzzStop@dousa
  1175  032F  3000               	movlw	0
  1176  0330  00BF               	movwf	buzzStop@dousa+1
  1177  0331  3001               	movlw	1
  1178  0332  00C0               	movwf	buzzStop@time
  1179  0333  3000               	movlw	0
  1180  0334  00C1               	movwf	buzzStop@time+1
  1181  0335  3007               	movlw	7
  1182  0336  00C2               	movwf	buzzStop@rokku
  1183  0337  3000               	movlw	0
  1184  0338  00C3               	movwf	buzzStop@rokku+1
  1185  0339  3185  25A7  3182   	fcall	_buzzStop
  1186  033C                     l3138:
  1187                           
  1188                           ;Q1.c: 826:         if(RA0 == 0){
  1189  033C  0020               	movlb	0	; select bank0
  1190  033D  180C               	btfsc	12,0	;volatile
  1191  033E  2B40               	goto	u3361
  1192  033F  2B41               	goto	u3360
  1193  0340                     u3361:
  1194  0340  2B10               	goto	l3122
  1195  0341                     u3360:
  1196  0341                     l3140:
  1197                           
  1198                           ;Q1.c: 827:             waitSEGStop((0x02|0x04|0x08|0x10|0x40),(0x04|0x10|0x40),1000,0b1
      +                          11);
  1199  0341  305E               	movlw	94
  1200  0342  00C6               	movwf	waitSEGStop@seg1
  1201  0343  3000               	movlw	0
  1202  0344  00C7               	movwf	waitSEGStop@seg1+1
  1203  0345  3054               	movlw	84
  1204  0346  00C8               	movwf	waitSEGStop@seg2
  1205  0347  3000               	movlw	0
  1206  0348  00C9               	movwf	waitSEGStop@seg2+1
  1207  0349  30E8               	movlw	232
  1208  034A  00CA               	movwf	waitSEGStop@wt
  1209  034B  3003               	movlw	3
  1210  034C  00CB               	movwf	waitSEGStop@wt+1
  1211  034D  3007               	movlw	7
  1212  034E  00CC               	movwf	waitSEGStop@dousa
  1213  034F  3000               	movlw	0
  1214  0350  00CD               	movwf	waitSEGStop@dousa+1
  1215  0351  3183  236B  3182   	fcall	_waitSEGStop
  1216                           
  1217                           ;Q1.c: 828:             waitSEGStop((0x02|0x04|0x08|0x10|0x20),(0x01|0x02|0x10|0x20|0x40
      +                          ),1000,0b111);
  1218  0354  303E               	movlw	62
  1219  0355  0020               	movlb	0	; select bank0
  1220  0356  00C6               	movwf	waitSEGStop@seg1
  1221  0357  3000               	movlw	0
  1222  0358  00C7               	movwf	waitSEGStop@seg1+1
  1223  0359  3073               	movlw	115
  1224  035A  00C8               	movwf	waitSEGStop@seg2
  1225  035B  3000               	movlw	0
  1226  035C  00C9               	movwf	waitSEGStop@seg2+1
  1227  035D  30E8               	movlw	232
  1228  035E  00CA               	movwf	waitSEGStop@wt
  1229  035F  3003               	movlw	3
  1230  0360  00CB               	movwf	waitSEGStop@wt+1
  1231  0361  3007               	movlw	7
  1232  0362  00CC               	movwf	waitSEGStop@dousa
  1233  0363  3000               	movlw	0
  1234  0364  00CD               	movwf	waitSEGStop@dousa+1
  1235  0365  3183  236B  3182   	fcall	_waitSEGStop
  1236  0368  2B10               	goto	l3122
  1237  0369  3180  2802         	ljmp	start
  1238  036B                     __end_of_main:
  1239                           
  1240                           	psect	text1
  1241  00E7                     __ptext1:	
  1242 ;; *************** function _zenoff *****************
  1243 ;; Defined at:
  1244 ;;		line 195 in file "Q1.c"
  1245 ;; Parameters:    Size  Location     Type
  1246 ;;		None
  1247 ;; Auto vars:     Size  Location     Type
  1248 ;;		None
  1249 ;; Return value:  Size  Location     Type
  1250 ;;                  1    wreg      void 
  1251 ;; Registers used:
  1252 ;;		status,2
  1253 ;; Tracked objects:
  1254 ;;		On entry : 0/0
  1255 ;;		On exit  : 0/0
  1256 ;;		Unchanged: 0/0
  1257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1262 ;;Total ram usage:        0 bytes
  1263 ;; Hardware stack levels used:    1
  1264 ;; This function calls:
  1265 ;;		Nothing
  1266 ;; This function is called by:
  1267 ;;		_main
  1268 ;; This function uses a non-reentrant model
  1269 ;;
  1270                           
  1271                           
  1272                           ;psect for function _zenoff
  1273  00E7                     _zenoff:
  1274  00E7                     l2428:	
  1275                           ;incstack = 0
  1276                           ; Regs used in _zenoff: [status,2]
  1277                           
  1278                           
  1279                           ;Q1.c: 197:     RC2=1;
  1280  00E7  0020               	movlb	0	; select bank0
  1281  00E8  150E               	bsf	14,2	;volatile
  1282                           
  1283                           ;Q1.c: 198:     RC1=1;
  1284  00E9  148E               	bsf	14,1	;volatile
  1285                           
  1286                           ;Q1.c: 199:     RC0=1;
  1287  00EA  140E               	bsf	14,0	;volatile
  1288  00EB                     l2430:
  1289                           
  1290                           ;Q1.c: 200:     PORTB=0x00;
  1291  00EB  018D               	clrf	13	;volatile
  1292  00EC                     l2432:
  1293                           
  1294                           ;Q1.c: 201:     RC7=0;RC7=1;RC7=0;
  1295  00EC  138E               	bcf	14,7	;volatile
  1296  00ED                     l2434:
  1297  00ED  178E               	bsf	14,7	;volatile
  1298  00EE                     l2436:
  1299  00EE  138E               	bcf	14,7	;volatile
  1300  00EF                     l108:
  1301  00EF  0008               	return
  1302  00F0                     __end_of_zenoff:
  1303                           
  1304                           	psect	text2
  1305  036B                     __ptext2:	
  1306 ;; *************** function _waitSEGStop *****************
  1307 ;; Defined at:
  1308 ;;		line 464 in file "Q1.c"
  1309 ;; Parameters:    Size  Location     Type
  1310 ;;  seg1            2    8[BANK0 ] unsigned short 
  1311 ;;  seg2            2   10[BANK0 ] unsigned short 
  1312 ;;  wt              2   12[BANK0 ] unsigned short 
  1313 ;;  dousa           2   14[BANK0 ] int 
  1314 ;; Auto vars:     Size  Location     Type
  1315 ;;  i               2   24[BANK0 ] unsigned int 
  1316 ;;  cpSW3           2   22[BANK0 ] int 
  1317 ;;  cpSW2           2   20[BANK0 ] int 
  1318 ;;  cpSW1           2   18[BANK0 ] int 
  1319 ;; Return value:  Size  Location     Type
  1320 ;;                  2    8[BANK0 ] int 
  1321 ;; Registers used:
  1322 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1323 ;; Tracked objects:
  1324 ;;		On entry : 0/0
  1325 ;;		On exit  : 0/0
  1326 ;;		Unchanged: 0/0
  1327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1328 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1329 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1330 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1331 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1332 ;;Total ram usage:       18 bytes
  1333 ;; Hardware stack levels used:    1
  1334 ;; Hardware stack levels required when called:    2
  1335 ;; This function calls:
  1336 ;;		___lwdiv
  1337 ;;		___wmul
  1338 ;;		_dynam
  1339 ;;		_fclr
  1340 ;;		_tact
  1341 ;; This function is called by:
  1342 ;;		_main
  1343 ;; This function uses a non-reentrant model
  1344 ;;
  1345                           
  1346                           
  1347                           ;psect for function _waitSEGStop
  1348  036B                     _waitSEGStop:
  1349  036B                     l2438:	
  1350                           ;incstack = 0
  1351                           ; Regs used in _waitSEGStop: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1352                           
  1353                           
  1354                           ;Q1.c: 464: int waitSEGStop(unsigned short seg1,unsigned short seg2,unsigned short wt,in
      +                          t dousa);Q1.c: 465: {;Q1.c: 467:     int cpSW1 = RA0;
  1355  036B  1003               	clrc
  1356  036C  0020               	movlb	0	; select bank0
  1357  036D  180C               	btfsc	12,0	;volatile
  1358  036E  1403               	setc
  1359  036F  3000               	movlw	0
  1360  0370  3D09               	addwfc	9,w
  1361  0371  00CE               	movwf	??_waitSEGStop
  1362  0372  01CF               	clrf	??_waitSEGStop+1
  1363  0373  084E               	movf	??_waitSEGStop,w
  1364  0374  00D0               	movwf	waitSEGStop@cpSW1
  1365  0375  084F               	movf	??_waitSEGStop+1,w
  1366  0376  00D1               	movwf	waitSEGStop@cpSW1+1
  1367                           
  1368                           ;Q1.c: 468:     int cpSW2 = RA1;
  1369  0377  1003               	clrc
  1370  0378  188C               	btfsc	12,1	;volatile
  1371  0379  1403               	setc
  1372  037A  3000               	movlw	0
  1373  037B  3D09               	addwfc	9,w
  1374  037C  00CE               	movwf	??_waitSEGStop
  1375  037D  01CF               	clrf	??_waitSEGStop+1
  1376  037E  084E               	movf	??_waitSEGStop,w
  1377  037F  00D2               	movwf	waitSEGStop@cpSW2
  1378  0380  084F               	movf	??_waitSEGStop+1,w
  1379  0381  00D3               	movwf	waitSEGStop@cpSW2+1
  1380                           
  1381                           ;Q1.c: 469:     int cpSW3 = RA2;
  1382  0382  1003               	clrc
  1383  0383  190C               	btfsc	12,2	;volatile
  1384  0384  1403               	setc
  1385  0385  3000               	movlw	0
  1386  0386  3D09               	addwfc	9,w
  1387  0387  00CE               	movwf	??_waitSEGStop
  1388  0388  01CF               	clrf	??_waitSEGStop+1
  1389  0389  084E               	movf	??_waitSEGStop,w
  1390  038A  00D4               	movwf	waitSEGStop@cpSW3
  1391  038B  084F               	movf	??_waitSEGStop+1,w
  1392  038C  00D5               	movwf	waitSEGStop@cpSW3+1
  1393  038D                     l2440:
  1394                           
  1395                           ;Q1.c: 473:     wt = wt / 10 + wt/1000*60;
  1396  038D  30E8               	movlw	232
  1397  038E  00F0               	movwf	___lwdiv@divisor
  1398  038F  3003               	movlw	3
  1399  0390  00F1               	movwf	___lwdiv@divisor+1
  1400  0391  084B               	movf	waitSEGStop@wt+1,w
  1401  0392  00F3               	movwf	___lwdiv@dividend+1
  1402  0393  084A               	movf	waitSEGStop@wt,w
  1403  0394  00F2               	movwf	___lwdiv@dividend
  1404  0395  3181  21D6  3183   	fcall	___lwdiv
  1405  0398  0871               	movf	?___lwdiv+1,w
  1406  0399  00F9               	movwf	___wmul@multiplier+1
  1407  039A  0870               	movf	?___lwdiv,w
  1408  039B  00F8               	movwf	___wmul@multiplier
  1409  039C  303C               	movlw	60
  1410  039D  00FA               	movwf	___wmul@multiplicand
  1411  039E  3000               	movlw	0
  1412  039F  00FB               	movwf	___wmul@multiplicand+1
  1413  03A0  3181  2103  3183   	fcall	___wmul
  1414  03A3  0878               	movf	?___wmul,w
  1415  03A4  0020               	movlb	0	; select bank0
  1416  03A5  00CE               	movwf	??_waitSEGStop
  1417  03A6  0879               	movf	?___wmul+1,w
  1418  03A7  00CF               	movwf	??_waitSEGStop+1
  1419  03A8  300A               	movlw	10
  1420  03A9  00F0               	movwf	___lwdiv@divisor
  1421  03AA  3000               	movlw	0
  1422  03AB  00F1               	movwf	___lwdiv@divisor+1
  1423  03AC  084B               	movf	waitSEGStop@wt+1,w
  1424  03AD  00F3               	movwf	___lwdiv@dividend+1
  1425  03AE  084A               	movf	waitSEGStop@wt,w
  1426  03AF  00F2               	movwf	___lwdiv@dividend
  1427  03B0  3181  21D6  3183   	fcall	___lwdiv
  1428  03B3  0870               	movf	?___lwdiv,w
  1429  03B4  0020               	movlb	0	; select bank0
  1430  03B5  074E               	addwf	??_waitSEGStop,w
  1431  03B6  00CA               	movwf	waitSEGStop@wt
  1432  03B7  0871               	movf	?___lwdiv+1,w
  1433  03B8  3D4F               	addwfc	??_waitSEGStop+1,w
  1434  03B9  00CB               	movwf	waitSEGStop@wt+1
  1435  03BA                     l2442:
  1436                           
  1437                           ;Q1.c: 474:     unsigned int i;;Q1.c: 476:     for(i=wt;i>0;--i){
  1438  03BA  084B               	movf	waitSEGStop@wt+1,w
  1439  03BB  00D7               	movwf	waitSEGStop@i+1
  1440  03BC  084A               	movf	waitSEGStop@wt,w
  1441  03BD  00D6               	movwf	waitSEGStop@i
  1442  03BE                     l2444:
  1443  03BE  0856               	movf	waitSEGStop@i,w
  1444  03BF  0457               	iorwf	waitSEGStop@i+1,w
  1445  03C0  1D03               	btfss	3,2
  1446  03C1  2BC3               	goto	u2151
  1447  03C2  2BC4               	goto	u2150
  1448  03C3                     u2151:
  1449  03C3  2BC5               	goto	l2448
  1450  03C4                     u2150:
  1451  03C4  2C3C               	goto	l265
  1452  03C5                     l2448:
  1453                           
  1454                           ;Q1.c: 477:         dynam(seg1,seg2,0,0);
  1455  03C5  0847               	movf	waitSEGStop@seg1+1,w
  1456  03C6  00F1               	movwf	dynam@dig1data+1
  1457  03C7  0846               	movf	waitSEGStop@seg1,w
  1458  03C8  00F0               	movwf	dynam@dig1data
  1459  03C9  0849               	movf	waitSEGStop@seg2+1,w
  1460  03CA  00F3               	movwf	dynam@dig2data+1
  1461  03CB  0848               	movf	waitSEGStop@seg2,w
  1462  03CC  00F2               	movwf	dynam@dig2data
  1463  03CD  3000               	movlw	0
  1464  03CE  00F4               	movwf	dynam@smdata
  1465  03CF  00F5               	movwf	dynam@smdata+1
  1466  03D0  3000               	movlw	0
  1467  03D1  00F6               	movwf	dynam@tr
  1468  03D2  00F7               	movwf	dynam@tr+1
  1469  03D3  3184  243D  3183   	fcall	_dynam
  1470                           
  1471                           ;Q1.c: 479:         tact(0);
  1472  03D6  3000               	movlw	0
  1473  03D7  00F8               	movwf	tact@mode
  1474  03D8  00F9               	movwf	tact@mode+1
  1475  03D9  3182  2297  3183   	fcall	_tact
  1476  03DC                     l2450:
  1477                           
  1478                           ;Q1.c: 481:         if(cpSW1 != RA0){
  1479  03DC  1003               	clrc
  1480  03DD  0020               	movlb	0	; select bank0
  1481  03DE  180C               	btfsc	12,0	;volatile
  1482  03DF  1403               	setc
  1483  03E0  3000               	movlw	0
  1484  03E1  3D09               	addwfc	9,w
  1485  03E2  00CE               	movwf	??_waitSEGStop
  1486  03E3  01CF               	clrf	??_waitSEGStop+1
  1487  03E4  0851               	movf	waitSEGStop@cpSW1+1,w
  1488  03E5  064F               	xorwf	??_waitSEGStop+1,w
  1489  03E6  1D03               	skipz
  1490  03E7  2BEA               	goto	u2165
  1491  03E8  0850               	movf	waitSEGStop@cpSW1,w
  1492  03E9  064E               	xorwf	??_waitSEGStop,w
  1493  03EA                     u2165:
  1494  03EA  1903               	skipnz
  1495  03EB  2BED               	goto	u2161
  1496  03EC  2BEE               	goto	u2160
  1497  03ED                     u2161:
  1498  03ED  2BFA               	goto	l2458
  1499  03EE                     u2160:
  1500  03EE                     l2452:
  1501                           
  1502                           ;Q1.c: 482:             if((0b100 & dousa) == 0b100){
  1503  03EE  1D4C               	btfss	waitSEGStop@dousa,2
  1504  03EF  2BF1               	goto	u2171
  1505  03F0  2BF2               	goto	u2170
  1506  03F1                     u2171:
  1507  03F1  2BFA               	goto	l2458
  1508  03F2                     u2170:
  1509  03F2                     l2454:
  1510                           
  1511                           ;Q1.c: 484:                 fclr(2);
  1512  03F2  3002               	movlw	2
  1513  03F3  00F0               	movwf	fclr@flg
  1514  03F4  3000               	movlw	0
  1515  03F5  00F1               	movwf	fclr@flg+1
  1516  03F6  3181  2162  3183   	fcall	_fclr
  1517  03F9  2C3C               	goto	l265
  1518  03FA                     l2458:
  1519                           
  1520                           ;Q1.c: 488:         if(cpSW2 != RA1){
  1521  03FA  1003               	clrc
  1522  03FB  188C               	btfsc	12,1	;volatile
  1523  03FC  1403               	setc
  1524  03FD  3000               	movlw	0
  1525  03FE  3D09               	addwfc	9,w
  1526  03FF  00CE               	movwf	??_waitSEGStop
  1527  0400  01CF               	clrf	??_waitSEGStop+1
  1528  0401  0853               	movf	waitSEGStop@cpSW2+1,w
  1529  0402  064F               	xorwf	??_waitSEGStop+1,w
  1530  0403  1D03               	skipz
  1531  0404  2C07               	goto	u2185
  1532  0405  0852               	movf	waitSEGStop@cpSW2,w
  1533  0406  064E               	xorwf	??_waitSEGStop,w
  1534  0407                     u2185:
  1535  0407  1903               	skipnz
  1536  0408  2C0A               	goto	u2181
  1537  0409  2C0B               	goto	u2180
  1538  040A                     u2181:
  1539  040A  2C10               	goto	l2466
  1540  040B                     u2180:
  1541  040B                     l2460:
  1542                           
  1543                           ;Q1.c: 489:             if((0b010 & dousa) == 0b010){
  1544  040B  1CCC               	btfss	waitSEGStop@dousa,1
  1545  040C  2C0E               	goto	u2191
  1546  040D  2C0F               	goto	u2190
  1547  040E                     u2191:
  1548  040E  2C10               	goto	l2466
  1549  040F                     u2190:
  1550  040F  2BF2               	goto	l2454
  1551  0410                     l2466:
  1552                           
  1553                           ;Q1.c: 495:         if(((flag_sw3==1)&&(flag_R==1))){
  1554  0410  0338               	decf	_flag_sw3,w
  1555  0411  0439               	iorwf	_flag_sw3+1,w
  1556  0412  1D03               	btfss	3,2
  1557  0413  2C15               	goto	u2201
  1558  0414  2C16               	goto	u2200
  1559  0415                     u2201:
  1560  0415  2C21               	goto	l2476
  1561  0416                     u2200:
  1562  0416                     l2468:
  1563  0416  0336               	decf	_flag_R,w
  1564  0417  0437               	iorwf	_flag_R+1,w
  1565  0418  1D03               	btfss	3,2
  1566  0419  2C1B               	goto	u2211
  1567  041A  2C1C               	goto	u2210
  1568  041B                     u2211:
  1569  041B  2C21               	goto	l2476
  1570  041C                     u2210:
  1571  041C                     l2470:
  1572                           
  1573                           ;Q1.c: 496:             if((0b001 & dousa) == 0b001){
  1574  041C  1C4C               	btfss	waitSEGStop@dousa,0
  1575  041D  2C1F               	goto	u2221
  1576  041E  2C20               	goto	u2220
  1577  041F                     u2221:
  1578  041F  2C21               	goto	l2476
  1579  0420                     u2220:
  1580  0420  2BF2               	goto	l2454
  1581  0421                     l2476:
  1582                           
  1583                           ;Q1.c: 502:         if(cpSW3 != RA2){
  1584  0421  1003               	clrc
  1585  0422  190C               	btfsc	12,2	;volatile
  1586  0423  1403               	setc
  1587  0424  3000               	movlw	0
  1588  0425  3D09               	addwfc	9,w
  1589  0426  00CE               	movwf	??_waitSEGStop
  1590  0427  01CF               	clrf	??_waitSEGStop+1
  1591  0428  0855               	movf	waitSEGStop@cpSW3+1,w
  1592  0429  064F               	xorwf	??_waitSEGStop+1,w
  1593  042A  1D03               	skipz
  1594  042B  2C2E               	goto	u2235
  1595  042C  0854               	movf	waitSEGStop@cpSW3,w
  1596  042D  064E               	xorwf	??_waitSEGStop,w
  1597  042E                     u2235:
  1598  042E  1903               	skipnz
  1599  042F  2C31               	goto	u2231
  1600  0430  2C32               	goto	u2230
  1601  0431                     u2231:
  1602  0431  2C37               	goto	l2482
  1603  0432                     u2230:
  1604  0432                     l2478:
  1605                           
  1606                           ;Q1.c: 503:             if((0b001 & dousa) == 0b001){
  1607  0432  1C4C               	btfss	waitSEGStop@dousa,0
  1608  0433  2C35               	goto	u2241
  1609  0434  2C36               	goto	u2240
  1610  0435                     u2241:
  1611  0435  2C37               	goto	l2482
  1612  0436                     u2240:
  1613  0436  2C3C               	goto	l265
  1614  0437                     l2482:
  1615                           
  1616                           ;Q1.c: 508:     }
  1617  0437  3001               	movlw	1
  1618  0438  02D6               	subwf	waitSEGStop@i,f
  1619  0439  3000               	movlw	0
  1620  043A  3BD7               	subwfb	waitSEGStop@i+1,f
  1621  043B  2BBE               	goto	l2444
  1622  043C                     l265:
  1623  043C  0008               	return
  1624  043D                     __end_of_waitSEGStop:
  1625                           
  1626                           	psect	text3
  1627  043D                     __ptext3:	
  1628 ;; *************** function _dynam *****************
  1629 ;; Defined at:
  1630 ;;		line 206 in file "Q1.c"
  1631 ;; Parameters:    Size  Location     Type
  1632 ;;  dig1data        2    0[COMMON] unsigned short 
  1633 ;;  dig2data        2    2[COMMON] unsigned short 
  1634 ;;  smdata          2    4[COMMON] unsigned short 
  1635 ;;  tr              2    6[COMMON] unsigned int 
  1636 ;; Auto vars:     Size  Location     Type
  1637 ;;  ext             2    6[BANK0 ] unsigned short 
  1638 ;;  j               2    4[BANK0 ] unsigned int 
  1639 ;;  tm              2    2[BANK0 ] unsigned int 
  1640 ;;  smd             2    0[BANK0 ] unsigned short 
  1641 ;; Return value:  Size  Location     Type
  1642 ;;                  1    wreg      void 
  1643 ;; Registers used:
  1644 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1645 ;; Tracked objects:
  1646 ;;		On entry : 0/0
  1647 ;;		On exit  : 0/0
  1648 ;;		Unchanged: 0/0
  1649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1650 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1651 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1653 ;;      Totals:         8       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1654 ;;Total ram usage:       16 bytes
  1655 ;; Hardware stack levels used:    1
  1656 ;; This function calls:
  1657 ;;		Nothing
  1658 ;; This function is called by:
  1659 ;;		_waitSEGStop
  1660 ;;		_clear
  1661 ;;		_waitSEG
  1662 ;;		_motor
  1663 ;;		_motorStop
  1664 ;; This function uses a non-reentrant model
  1665 ;;
  1666                           
  1667                           
  1668                           ;psect for function _dynam
  1669  043D                     _dynam:
  1670  043D                     l2112:	
  1671                           ;incstack = 0
  1672                           ; Regs used in _dynam: [wreg-fsr0h+status,2+status,0]
  1673                           
  1674  043D  0020               	movlb	0	; select bank0
  1675  043E  01C0               	clrf	dynam@tm
  1676  043F  01C1               	clrf	dynam@tm+1
  1677                           
  1678                           ;Q1.c: 209:     unsigned short ext=0,smd=0;
  1679  0440  01C4               	clrf	dynam@ext
  1680  0441  01C5               	clrf	dynam@ext+1
  1681  0442  01BE               	clrf	dynam@smd
  1682  0443  01BF               	clrf	dynam@smd+1
  1683  0444                     l2114:
  1684                           
  1685                           ;Q1.c: 210:     RC7=0;
  1686  0444  138E               	bcf	14,7	;volatile
  1687  0445                     l2116:
  1688                           
  1689                           ;Q1.c: 211:     PORTB=dig1data;
  1690  0445  0870               	movf	dynam@dig1data,w
  1691  0446  008D               	movwf	13	;volatile
  1692  0447                     l2118:
  1693                           
  1694                           ;Q1.c: 212:     RC5=0;RC6=1;
  1695  0447  128E               	bcf	14,5	;volatile
  1696  0448                     l2120:
  1697  0448  170E               	bsf	14,6	;volatile
  1698  0449                     l2122:
  1699                           
  1700                           ;Q1.c: 213:     if(tr==5){tm=3000;}
  1701  0449  3005               	movlw	5
  1702  044A  0676               	xorwf	dynam@tr,w
  1703  044B  0477               	iorwf	dynam@tr+1,w
  1704  044C  1D03               	btfss	3,2
  1705  044D  2C4F               	goto	u1711
  1706  044E  2C50               	goto	u1710
  1707  044F                     u1711:
  1708  044F  2C55               	goto	l2126
  1709  0450                     u1710:
  1710  0450                     l2124:
  1711  0450  30B8               	movlw	184
  1712  0451  00C0               	movwf	dynam@tm
  1713  0452  300B               	movlw	11
  1714  0453  00C1               	movwf	dynam@tm+1
  1715  0454  2C59               	goto	l112
  1716  0455                     l2126:
  1717  0455  30E8               	movlw	232
  1718  0456  00C0               	movwf	dynam@tm
  1719  0457  3003               	movlw	3
  1720  0458  00C1               	movwf	dynam@tm+1
  1721  0459                     l112:
  1722                           
  1723                           ;Q1.c: 215:     for(j=tm;j>0;--j);
  1724  0459  0841               	movf	dynam@tm+1,w
  1725  045A  00C3               	movwf	dynam@j+1
  1726  045B  0840               	movf	dynam@tm,w
  1727  045C  00C2               	movwf	dynam@j
  1728  045D                     l2128:
  1729  045D  0842               	movf	dynam@j,w
  1730  045E  0443               	iorwf	dynam@j+1,w
  1731  045F  1D03               	btfss	3,2
  1732  0460  2C62               	goto	u1721
  1733  0461  2C63               	goto	u1720
  1734  0462                     u1721:
  1735  0462  2C64               	goto	l2132
  1736  0463                     u1720:
  1737  0463  2C69               	goto	l114
  1738  0464                     l2132:
  1739  0464  3001               	movlw	1
  1740  0465  02C2               	subwf	dynam@j,f
  1741  0466  3000               	movlw	0
  1742  0467  3BC3               	subwfb	dynam@j+1,f
  1743  0468  2C5D               	goto	l2128
  1744  0469                     l114:
  1745                           
  1746                           ;Q1.c: 216:     RC5=0;RC6=0;
  1747  0469  128E               	bcf	14,5	;volatile
  1748  046A  130E               	bcf	14,6	;volatile
  1749  046B                     l2136:
  1750                           
  1751                           ;Q1.c: 217:     PORTB=dig2data;
  1752  046B  0872               	movf	dynam@dig2data,w
  1753  046C  008D               	movwf	13	;volatile
  1754  046D                     l2138:
  1755                           
  1756                           ;Q1.c: 218:     RC6=0;RC5=1;
  1757  046D  130E               	bcf	14,6	;volatile
  1758  046E                     l2140:
  1759  046E  168E               	bsf	14,5	;volatile
  1760  046F                     l2142:
  1761                           
  1762                           ;Q1.c: 219:     if(tr==5){tm=3000;}
  1763  046F  3005               	movlw	5
  1764  0470  0676               	xorwf	dynam@tr,w
  1765  0471  0477               	iorwf	dynam@tr+1,w
  1766  0472  1D03               	btfss	3,2
  1767  0473  2C75               	goto	u1731
  1768  0474  2C76               	goto	u1730
  1769  0475                     u1731:
  1770  0475  2C7B               	goto	l2146
  1771  0476                     u1730:
  1772  0476                     l2144:
  1773  0476  30B8               	movlw	184
  1774  0477  00C0               	movwf	dynam@tm
  1775  0478  300B               	movlw	11
  1776  0479  00C1               	movwf	dynam@tm+1
  1777  047A  2C7F               	goto	l116
  1778  047B                     l2146:
  1779  047B  30E8               	movlw	232
  1780  047C  00C0               	movwf	dynam@tm
  1781  047D  3003               	movlw	3
  1782  047E  00C1               	movwf	dynam@tm+1
  1783  047F                     l116:
  1784                           
  1785                           ;Q1.c: 221:     for(j=tm;j>0;--j);
  1786  047F  0841               	movf	dynam@tm+1,w
  1787  0480  00C3               	movwf	dynam@j+1
  1788  0481  0840               	movf	dynam@tm,w
  1789  0482  00C2               	movwf	dynam@j
  1790  0483                     l2148:
  1791  0483  0842               	movf	dynam@j,w
  1792  0484  0443               	iorwf	dynam@j+1,w
  1793  0485  1D03               	btfss	3,2
  1794  0486  2C88               	goto	u1741
  1795  0487  2C89               	goto	u1740
  1796  0488                     u1741:
  1797  0488  2C8A               	goto	l2152
  1798  0489                     u1740:
  1799  0489  2C8F               	goto	l118
  1800  048A                     l2152:
  1801  048A  3001               	movlw	1
  1802  048B  02C2               	subwf	dynam@j,f
  1803  048C  3000               	movlw	0
  1804  048D  3BC3               	subwfb	dynam@j+1,f
  1805  048E  2C83               	goto	l2148
  1806  048F                     l118:
  1807                           
  1808                           ;Q1.c: 222:     RC5=0;RC6=0;
  1809  048F  128E               	bcf	14,5	;volatile
  1810  0490  130E               	bcf	14,6	;volatile
  1811                           
  1812                           ;Q1.c: 223:     switch(smdata){
  1813  0491  2D96               	goto	l2262
  1814  0492                     l2156:
  1815                           
  1816                           ;Q1.c: 225:                 PORTB=0x00;smd=(0x01|0x02|0x04|0x08|0x10|0x20);
  1817  0492  018D               	clrf	13	;volatile
  1818  0493                     l2158:
  1819  0493                     l2160:
  1820                           
  1821                           ;Q1.c: 226:                 RC7=0;RC7=1;RC7=0;
  1822  0493  138E               	bcf	14,7	;volatile
  1823  0494                     l2162:
  1824  0494  178E               	bsf	14,7	;volatile
  1825  0495                     l2164:
  1826  0495  138E               	bcf	14,7	;volatile
  1827                           
  1828                           ;Q1.c: 227:                 break;
  1829  0496  2DA6               	goto	l135
  1830  0497                     l2166:
  1831                           
  1832                           ;Q1.c: 229:                 if(flg==1)cw=0;flg=0;
  1833  0497  0332               	decf	_flg,w
  1834  0498  0433               	iorwf	_flg+1,w
  1835  0499  1D03               	btfss	3,2
  1836  049A  2C9C               	goto	u1751
  1837  049B  2C9D               	goto	u1750
  1838  049C                     u1751:
  1839  049C  2C9F               	goto	l123
  1840  049D                     u1750:
  1841  049D                     l2168:
  1842  049D  01B0               	clrf	_cw
  1843  049E  01B1               	clrf	_cw+1
  1844  049F                     l123:
  1845  049F  01B2               	clrf	_flg
  1846  04A0  01B3               	clrf	_flg+1
  1847  04A1                     l2170:
  1848                           
  1849                           ;Q1.c: 230:                 if((cw==0)&&(ext==0)){cw=1;ccw=0;ext=1;PORTB=smd=0x09;}
  1850  04A1  0830               	movf	_cw,w
  1851  04A2  0431               	iorwf	_cw+1,w
  1852  04A3  1D03               	btfss	3,2
  1853  04A4  2CA6               	goto	u1761
  1854  04A5  2CA7               	goto	u1760
  1855  04A6                     u1761:
  1856  04A6  2CBD               	goto	l2182
  1857  04A7                     u1760:
  1858  04A7                     l2172:
  1859  04A7  0844               	movf	dynam@ext,w
  1860  04A8  0445               	iorwf	dynam@ext+1,w
  1861  04A9  1D03               	btfss	3,2
  1862  04AA  2CAC               	goto	u1771
  1863  04AB  2CAD               	goto	u1770
  1864  04AC                     u1771:
  1865  04AC  2CBD               	goto	l2182
  1866  04AD                     u1770:
  1867  04AD                     l2174:
  1868  04AD  3001               	movlw	1
  1869  04AE  00B0               	movwf	_cw
  1870  04AF  3000               	movlw	0
  1871  04B0  00B1               	movwf	_cw+1
  1872  04B1                     l2176:
  1873  04B1  01AE               	clrf	_ccw
  1874  04B2  01AF               	clrf	_ccw+1
  1875  04B3                     l2178:
  1876  04B3  3001               	movlw	1
  1877  04B4  00C4               	movwf	dynam@ext
  1878  04B5  3000               	movlw	0
  1879  04B6  00C5               	movwf	dynam@ext+1
  1880  04B7                     l2180:
  1881  04B7  3009               	movlw	9
  1882  04B8  00BE               	movwf	dynam@smd
  1883  04B9  3000               	movlw	0
  1884  04BA  00BF               	movwf	dynam@smd+1
  1885  04BB  083E               	movf	dynam@smd,w
  1886  04BC  008D               	movwf	13	;volatile
  1887  04BD                     l2182:
  1888                           
  1889                           ;Q1.c: 231:                 if((cw==1)&&(ext==0)){cw=2;ccw=3;ext=1;PORTB=smd=0x0C;}
  1890  04BD  0330               	decf	_cw,w
  1891  04BE  0431               	iorwf	_cw+1,w
  1892  04BF  1D03               	btfss	3,2
  1893  04C0  2CC2               	goto	u1781
  1894  04C1  2CC3               	goto	u1780
  1895  04C2                     u1781:
  1896  04C2  2CDB               	goto	l2188
  1897  04C3                     u1780:
  1898  04C3                     l2184:
  1899  04C3  0844               	movf	dynam@ext,w
  1900  04C4  0445               	iorwf	dynam@ext+1,w
  1901  04C5  1D03               	btfss	3,2
  1902  04C6  2CC8               	goto	u1791
  1903  04C7  2CC9               	goto	u1790
  1904  04C8                     u1791:
  1905  04C8  2CDB               	goto	l2188
  1906  04C9                     u1790:
  1907  04C9                     l2186:
  1908  04C9  3002               	movlw	2
  1909  04CA  00B0               	movwf	_cw
  1910  04CB  3000               	movlw	0
  1911  04CC  00B1               	movwf	_cw+1
  1912  04CD  3003               	movlw	3
  1913  04CE  00AE               	movwf	_ccw
  1914  04CF  3000               	movlw	0
  1915  04D0  00AF               	movwf	_ccw+1
  1916  04D1  3001               	movlw	1
  1917  04D2  00C4               	movwf	dynam@ext
  1918  04D3  3000               	movlw	0
  1919  04D4  00C5               	movwf	dynam@ext+1
  1920  04D5  300C               	movlw	12
  1921  04D6  00BE               	movwf	dynam@smd
  1922  04D7  3000               	movlw	0
  1923  04D8  00BF               	movwf	dynam@smd+1
  1924  04D9  083E               	movf	dynam@smd,w
  1925  04DA  008D               	movwf	13	;volatile
  1926  04DB                     l2188:
  1927                           
  1928                           ;Q1.c: 232:                 if((cw==2)&&(ext==0)){cw=3;ccw=2;ext=1;PORTB=smd=0x06;}
  1929  04DB  3002               	movlw	2
  1930  04DC  0630               	xorwf	_cw,w
  1931  04DD  0431               	iorwf	_cw+1,w
  1932  04DE  1D03               	btfss	3,2
  1933  04DF  2CE1               	goto	u1801
  1934  04E0  2CE2               	goto	u1800
  1935  04E1                     u1801:
  1936  04E1  2CFA               	goto	l2194
  1937  04E2                     u1800:
  1938  04E2                     l2190:
  1939  04E2  0844               	movf	dynam@ext,w
  1940  04E3  0445               	iorwf	dynam@ext+1,w
  1941  04E4  1D03               	btfss	3,2
  1942  04E5  2CE7               	goto	u1811
  1943  04E6  2CE8               	goto	u1810
  1944  04E7                     u1811:
  1945  04E7  2CFA               	goto	l2194
  1946  04E8                     u1810:
  1947  04E8                     l2192:
  1948  04E8  3003               	movlw	3
  1949  04E9  00B0               	movwf	_cw
  1950  04EA  3000               	movlw	0
  1951  04EB  00B1               	movwf	_cw+1
  1952  04EC  3002               	movlw	2
  1953  04ED  00AE               	movwf	_ccw
  1954  04EE  3000               	movlw	0
  1955  04EF  00AF               	movwf	_ccw+1
  1956  04F0  3001               	movlw	1
  1957  04F1  00C4               	movwf	dynam@ext
  1958  04F2  3000               	movlw	0
  1959  04F3  00C5               	movwf	dynam@ext+1
  1960  04F4  3006               	movlw	6
  1961  04F5  00BE               	movwf	dynam@smd
  1962  04F6  3000               	movlw	0
  1963  04F7  00BF               	movwf	dynam@smd+1
  1964  04F8  083E               	movf	dynam@smd,w
  1965  04F9  008D               	movwf	13	;volatile
  1966  04FA                     l2194:
  1967                           
  1968                           ;Q1.c: 233:                 if((cw==3)&&(ext==0)){cw=0;ccw=1;ext=1;PORTB=smd=0x03;}
  1969  04FA  3003               	movlw	3
  1970  04FB  0630               	xorwf	_cw,w
  1971  04FC  0431               	iorwf	_cw+1,w
  1972  04FD  1D03               	btfss	3,2
  1973  04FE  2D00               	goto	u1821
  1974  04FF  2D01               	goto	u1820
  1975  0500                     u1821:
  1976  0500  2C93               	goto	l2160
  1977  0501                     u1820:
  1978  0501                     l2196:
  1979  0501  0844               	movf	dynam@ext,w
  1980  0502  0445               	iorwf	dynam@ext+1,w
  1981  0503  1D03               	btfss	3,2
  1982  0504  2D06               	goto	u1831
  1983  0505  2D07               	goto	u1830
  1984  0506                     u1831:
  1985  0506  2C93               	goto	l2160
  1986  0507                     u1830:
  1987  0507                     l2198:
  1988  0507  01B0               	clrf	_cw
  1989  0508  01B1               	clrf	_cw+1
  1990  0509                     l2200:
  1991  0509  3001               	movlw	1
  1992  050A  00AE               	movwf	_ccw
  1993  050B  3000               	movlw	0
  1994  050C  00AF               	movwf	_ccw+1
  1995  050D                     l2202:
  1996  050D                     l2204:
  1997  050D  3003               	movlw	3
  1998  050E  00BE               	movwf	dynam@smd
  1999  050F  3000               	movlw	0
  2000  0510  00BF               	movwf	dynam@smd+1
  2001  0511  083E               	movf	dynam@smd,w
  2002  0512  008D               	movwf	13	;volatile
  2003  0513  2C93               	goto	l2160
  2004  0514                     l2212:
  2005                           
  2006                           ;Q1.c: 237:                 if(flg==1)ccw=0;flg=0;
  2007  0514  0332               	decf	_flg,w
  2008  0515  0433               	iorwf	_flg+1,w
  2009  0516  1D03               	btfss	3,2
  2010  0517  2D19               	goto	u1841
  2011  0518  2D1A               	goto	u1840
  2012  0519                     u1841:
  2013  0519  2D1C               	goto	l129
  2014  051A                     u1840:
  2015  051A                     l2214:
  2016  051A  01AE               	clrf	_ccw
  2017  051B  01AF               	clrf	_ccw+1
  2018  051C                     l129:
  2019  051C  01B2               	clrf	_flg
  2020  051D  01B3               	clrf	_flg+1
  2021  051E                     l2216:
  2022                           
  2023                           ;Q1.c: 238:                 if((ccw==0)&&(ext==0)){ccw=1;cw=0;ext=1;PORTB=smd=0x03;}
  2024  051E  082E               	movf	_ccw,w
  2025  051F  042F               	iorwf	_ccw+1,w
  2026  0520  1D03               	btfss	3,2
  2027  0521  2D23               	goto	u1851
  2028  0522  2D24               	goto	u1850
  2029  0523                     u1851:
  2030  0523  2D3A               	goto	l2228
  2031  0524                     u1850:
  2032  0524                     l2218:
  2033  0524  0844               	movf	dynam@ext,w
  2034  0525  0445               	iorwf	dynam@ext+1,w
  2035  0526  1D03               	btfss	3,2
  2036  0527  2D29               	goto	u1861
  2037  0528  2D2A               	goto	u1860
  2038  0529                     u1861:
  2039  0529  2D3A               	goto	l2228
  2040  052A                     u1860:
  2041  052A                     l2220:
  2042  052A  3001               	movlw	1
  2043  052B  00AE               	movwf	_ccw
  2044  052C  3000               	movlw	0
  2045  052D  00AF               	movwf	_ccw+1
  2046  052E                     l2222:
  2047  052E  01B0               	clrf	_cw
  2048  052F  01B1               	clrf	_cw+1
  2049  0530                     l2224:
  2050  0530  3001               	movlw	1
  2051  0531  00C4               	movwf	dynam@ext
  2052  0532  3000               	movlw	0
  2053  0533  00C5               	movwf	dynam@ext+1
  2054  0534                     l2226:
  2055  0534  3003               	movlw	3
  2056  0535  00BE               	movwf	dynam@smd
  2057  0536  3000               	movlw	0
  2058  0537  00BF               	movwf	dynam@smd+1
  2059  0538  083E               	movf	dynam@smd,w
  2060  0539  008D               	movwf	13	;volatile
  2061  053A                     l2228:
  2062                           
  2063                           ;Q1.c: 239:                 if((ccw==1)&&(ext==0)){ccw=2;cw=3;ext=1;PORTB=smd=0x06;}
  2064  053A  032E               	decf	_ccw,w
  2065  053B  042F               	iorwf	_ccw+1,w
  2066  053C  1D03               	btfss	3,2
  2067  053D  2D3F               	goto	u1871
  2068  053E  2D40               	goto	u1870
  2069  053F                     u1871:
  2070  053F  2D58               	goto	l2234
  2071  0540                     u1870:
  2072  0540                     l2230:
  2073  0540  0844               	movf	dynam@ext,w
  2074  0541  0445               	iorwf	dynam@ext+1,w
  2075  0542  1D03               	btfss	3,2
  2076  0543  2D45               	goto	u1881
  2077  0544  2D46               	goto	u1880
  2078  0545                     u1881:
  2079  0545  2D58               	goto	l2234
  2080  0546                     u1880:
  2081  0546                     l2232:
  2082  0546  3002               	movlw	2
  2083  0547  00AE               	movwf	_ccw
  2084  0548  3000               	movlw	0
  2085  0549  00AF               	movwf	_ccw+1
  2086  054A  3003               	movlw	3
  2087  054B  00B0               	movwf	_cw
  2088  054C  3000               	movlw	0
  2089  054D  00B1               	movwf	_cw+1
  2090  054E  3001               	movlw	1
  2091  054F  00C4               	movwf	dynam@ext
  2092  0550  3000               	movlw	0
  2093  0551  00C5               	movwf	dynam@ext+1
  2094  0552  3006               	movlw	6
  2095  0553  00BE               	movwf	dynam@smd
  2096  0554  3000               	movlw	0
  2097  0555  00BF               	movwf	dynam@smd+1
  2098  0556  083E               	movf	dynam@smd,w
  2099  0557  008D               	movwf	13	;volatile
  2100  0558                     l2234:
  2101                           
  2102                           ;Q1.c: 240:                 if((ccw==2)&&(ext==0)){ccw=3;cw=2;ext=1;PORTB=smd=0x0C;}
  2103  0558  3002               	movlw	2
  2104  0559  062E               	xorwf	_ccw,w
  2105  055A  042F               	iorwf	_ccw+1,w
  2106  055B  1D03               	btfss	3,2
  2107  055C  2D5E               	goto	u1891
  2108  055D  2D5F               	goto	u1890
  2109  055E                     u1891:
  2110  055E  2D77               	goto	l2240
  2111  055F                     u1890:
  2112  055F                     l2236:
  2113  055F  0844               	movf	dynam@ext,w
  2114  0560  0445               	iorwf	dynam@ext+1,w
  2115  0561  1D03               	btfss	3,2
  2116  0562  2D64               	goto	u1901
  2117  0563  2D65               	goto	u1900
  2118  0564                     u1901:
  2119  0564  2D77               	goto	l2240
  2120  0565                     u1900:
  2121  0565                     l2238:
  2122  0565  3003               	movlw	3
  2123  0566  00AE               	movwf	_ccw
  2124  0567  3000               	movlw	0
  2125  0568  00AF               	movwf	_ccw+1
  2126  0569  3002               	movlw	2
  2127  056A  00B0               	movwf	_cw
  2128  056B  3000               	movlw	0
  2129  056C  00B1               	movwf	_cw+1
  2130  056D  3001               	movlw	1
  2131  056E  00C4               	movwf	dynam@ext
  2132  056F  3000               	movlw	0
  2133  0570  00C5               	movwf	dynam@ext+1
  2134  0571  300C               	movlw	12
  2135  0572  00BE               	movwf	dynam@smd
  2136  0573  3000               	movlw	0
  2137  0574  00BF               	movwf	dynam@smd+1
  2138  0575  083E               	movf	dynam@smd,w
  2139  0576  008D               	movwf	13	;volatile
  2140  0577                     l2240:
  2141                           
  2142                           ;Q1.c: 241:                 if((ccw==3)&&(ext==0)){ccw=0;cw=1;ext=1;PORTB=smd=0x09;}
  2143  0577  3003               	movlw	3
  2144  0578  062E               	xorwf	_ccw,w
  2145  0579  042F               	iorwf	_ccw+1,w
  2146  057A  1D03               	btfss	3,2
  2147  057B  2D7D               	goto	u1911
  2148  057C  2D7E               	goto	u1910
  2149  057D                     u1911:
  2150  057D  2C93               	goto	l2160
  2151  057E                     u1910:
  2152  057E                     l2242:
  2153  057E  0844               	movf	dynam@ext,w
  2154  057F  0445               	iorwf	dynam@ext+1,w
  2155  0580  1D03               	btfss	3,2
  2156  0581  2D83               	goto	u1921
  2157  0582  2D84               	goto	u1920
  2158  0583                     u1921:
  2159  0583  2C93               	goto	l2160
  2160  0584                     u1920:
  2161  0584                     l2244:
  2162  0584  01AE               	clrf	_ccw
  2163  0585  01AF               	clrf	_ccw+1
  2164  0586                     l2246:
  2165  0586  3001               	movlw	1
  2166  0587  00B0               	movwf	_cw
  2167  0588  3000               	movlw	0
  2168  0589  00B1               	movwf	_cw+1
  2169  058A                     l2248:
  2170  058A                     l2250:
  2171  058A  3009               	movlw	9
  2172  058B  00BE               	movwf	dynam@smd
  2173  058C  3000               	movlw	0
  2174  058D  00BF               	movwf	dynam@smd+1
  2175  058E  083E               	movf	dynam@smd,w
  2176  058F  008D               	movwf	13	;volatile
  2177  0590  2C93               	goto	l2160
  2178  0591                     l2258:
  2179                           
  2180                           ;Q1.c: 245:                 cw=ccw=0;
  2181  0591  01AE               	clrf	_ccw
  2182  0592  01AF               	clrf	_ccw+1
  2183  0593  01B0               	clrf	_cw
  2184  0594  01B1               	clrf	_cw+1
  2185                           
  2186                           ;Q1.c: 246:                 break;
  2187  0595  2DA6               	goto	l135
  2188  0596                     l2262:
  2189                           
  2190                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2191                           ; Switch size 1, requested type "simple"
  2192                           ; Number of cases is 1, Range of values is 0 to 0
  2193                           ; switch strategies available:
  2194                           ; Name         Instructions Cycles
  2195                           ; simple_byte            4     3 (average)
  2196                           ; direct_byte            8     6 (fixed)
  2197                           ; jumptable            260     6 (fixed)
  2198                           ;	Chosen strategy is simple_byte
  2199  0596  0875               	movf	dynam@smdata+1,w
  2200  0597  3A00               	xorlw	0	; case 0
  2201  0598  1903               	skipnz
  2202  0599  2D9B               	goto	l3284
  2203  059A  2D91               	goto	l2258
  2204  059B                     l3284:
  2205                           
  2206                           ; Switch size 1, requested type "simple"
  2207                           ; Number of cases is 3, Range of values is 0 to 2
  2208                           ; switch strategies available:
  2209                           ; Name         Instructions Cycles
  2210                           ; simple_byte           10     6 (average)
  2211                           ; direct_byte           12     6 (fixed)
  2212                           ; jumptable            260     6 (fixed)
  2213                           ;	Chosen strategy is simple_byte
  2214  059B  0874               	movf	dynam@smdata,w
  2215  059C  3A00               	xorlw	0	; case 0
  2216  059D  1903               	skipnz
  2217  059E  2C92               	goto	l2156
  2218  059F  3A01               	xorlw	1	; case 1
  2219  05A0  1903               	skipnz
  2220  05A1  2C97               	goto	l2166
  2221  05A2  3A03               	xorlw	3	; case 2
  2222  05A3  1903               	skipnz
  2223  05A4  2D14               	goto	l2212
  2224  05A5  2D91               	goto	l2258
  2225  05A6                     l135:
  2226  05A6  0008               	return
  2227  05A7                     __end_of_dynam:
  2228                           
  2229                           	psect	text4
  2230  0103                     __ptext4:	
  2231 ;; *************** function ___wmul *****************
  2232 ;; Defined at:
  2233 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  2234 ;; Parameters:    Size  Location     Type
  2235 ;;  multiplier      2    8[COMMON] unsigned int 
  2236 ;;  multiplicand    2   10[COMMON] unsigned int 
  2237 ;; Auto vars:     Size  Location     Type
  2238 ;;  product         2   12[COMMON] unsigned int 
  2239 ;; Return value:  Size  Location     Type
  2240 ;;                  2    8[COMMON] unsigned int 
  2241 ;; Registers used:
  2242 ;;		wreg, status,2, status,0
  2243 ;; Tracked objects:
  2244 ;;		On entry : 0/0
  2245 ;;		On exit  : 0/0
  2246 ;;		Unchanged: 0/0
  2247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2248 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2249 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2251 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2252 ;;Total ram usage:        6 bytes
  2253 ;; Hardware stack levels used:    1
  2254 ;; This function calls:
  2255 ;;		Nothing
  2256 ;; This function is called by:
  2257 ;;		_waitSEGStop
  2258 ;;		_wait
  2259 ;;		_hen7
  2260 ;;		_hens
  2261 ;; This function uses a non-reentrant model
  2262 ;;
  2263                           
  2264                           
  2265                           ;psect for function ___wmul
  2266  0103                     ___wmul:
  2267  0103                     l2358:	
  2268                           ;incstack = 0
  2269                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2270                           
  2271  0103  01FC               	clrf	___wmul@product
  2272  0104  01FD               	clrf	___wmul@product+1
  2273  0105                     l2360:
  2274  0105  1C78               	btfss	___wmul@multiplier,0
  2275  0106  2908               	goto	u2021
  2276  0107  2909               	goto	u2020
  2277  0108                     u2021:
  2278  0108  290D               	goto	l518
  2279  0109                     u2020:
  2280  0109                     l2362:
  2281  0109  087A               	movf	___wmul@multiplicand,w
  2282  010A  07FC               	addwf	___wmul@product,f
  2283  010B  087B               	movf	___wmul@multiplicand+1,w
  2284  010C  3DFD               	addwfc	___wmul@product+1,f
  2285  010D                     l518:
  2286  010D  3001               	movlw	1
  2287  010E                     u2035:
  2288  010E  35FA               	lslf	___wmul@multiplicand,f
  2289  010F  0DFB               	rlf	___wmul@multiplicand+1,f
  2290  0110  0B89               	decfsz	9,f
  2291  0111  290E               	goto	u2035
  2292  0112                     l2364:
  2293  0112  3001               	movlw	1
  2294  0113                     u2045:
  2295  0113  36F9               	lsrf	___wmul@multiplier+1,f
  2296  0114  0CF8               	rrf	___wmul@multiplier,f
  2297  0115  0B89               	decfsz	9,f
  2298  0116  2913               	goto	u2045
  2299  0117                     l2366:
  2300  0117  0878               	movf	___wmul@multiplier,w
  2301  0118  0479               	iorwf	___wmul@multiplier+1,w
  2302  0119  1D03               	btfss	3,2
  2303  011A  291C               	goto	u2051
  2304  011B  291D               	goto	u2050
  2305  011C                     u2051:
  2306  011C  2905               	goto	l2360
  2307  011D                     u2050:
  2308  011D                     l2368:
  2309  011D  087D               	movf	___wmul@product+1,w
  2310  011E  00F9               	movwf	?___wmul+1
  2311  011F  087C               	movf	___wmul@product,w
  2312  0120  00F8               	movwf	?___wmul
  2313  0121                     l520:
  2314  0121  0008               	return
  2315  0122                     __end_of___wmul:
  2316                           
  2317                           	psect	text5
  2318  01D6                     __ptext5:	
  2319 ;; *************** function ___lwdiv *****************
  2320 ;; Defined at:
  2321 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\lwdiv.c"
  2322 ;; Parameters:    Size  Location     Type
  2323 ;;  divisor         2    0[COMMON] unsigned int 
  2324 ;;  dividend        2    2[COMMON] unsigned int 
  2325 ;; Auto vars:     Size  Location     Type
  2326 ;;  quotient        2    5[COMMON] unsigned int 
  2327 ;;  counter         1    7[COMMON] unsigned char 
  2328 ;; Return value:  Size  Location     Type
  2329 ;;                  2    0[COMMON] unsigned int 
  2330 ;; Registers used:
  2331 ;;		wreg, status,2, status,0
  2332 ;; Tracked objects:
  2333 ;;		On entry : 0/0
  2334 ;;		On exit  : 0/0
  2335 ;;		Unchanged: 0/0
  2336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2337 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2338 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2339 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2340 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2341 ;;Total ram usage:        8 bytes
  2342 ;; Hardware stack levels used:    1
  2343 ;; This function calls:
  2344 ;;		Nothing
  2345 ;; This function is called by:
  2346 ;;		_waitSEGStop
  2347 ;;		_waitSEG
  2348 ;; This function uses a non-reentrant model
  2349 ;;
  2350                           
  2351                           
  2352                           ;psect for function ___lwdiv
  2353  01D6                     ___lwdiv:
  2354  01D6                     l2372:	
  2355                           ;incstack = 0
  2356                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2357                           
  2358  01D6  01F5               	clrf	___lwdiv@quotient
  2359  01D7  01F6               	clrf	___lwdiv@quotient+1
  2360  01D8                     l2374:
  2361  01D8  0870               	movf	___lwdiv@divisor,w
  2362  01D9  0471               	iorwf	___lwdiv@divisor+1,w
  2363  01DA  1903               	btfsc	3,2
  2364  01DB  29DD               	goto	u2061
  2365  01DC  29DE               	goto	u2060
  2366  01DD                     u2061:
  2367  01DD  2A0D               	goto	l2394
  2368  01DE                     u2060:
  2369  01DE                     l2376:
  2370  01DE  01F7               	clrf	___lwdiv@counter
  2371  01DF  0AF7               	incf	___lwdiv@counter,f
  2372  01E0  29EA               	goto	l2382
  2373  01E1                     l2378:
  2374  01E1  3001               	movlw	1
  2375  01E2                     u2075:
  2376  01E2  35F0               	lslf	___lwdiv@divisor,f
  2377  01E3  0DF1               	rlf	___lwdiv@divisor+1,f
  2378  01E4  0B89               	decfsz	9,f
  2379  01E5  29E2               	goto	u2075
  2380  01E6                     l2380:
  2381  01E6  3001               	movlw	1
  2382  01E7  00F4               	movwf	??___lwdiv
  2383  01E8  0874               	movf	??___lwdiv,w
  2384  01E9  07F7               	addwf	___lwdiv@counter,f
  2385  01EA                     l2382:
  2386  01EA  1FF1               	btfss	___lwdiv@divisor+1,7
  2387  01EB  29ED               	goto	u2081
  2388  01EC  29EE               	goto	u2080
  2389  01ED                     u2081:
  2390  01ED  29E1               	goto	l2378
  2391  01EE                     u2080:
  2392  01EE                     l2384:
  2393  01EE  3001               	movlw	1
  2394  01EF                     u2095:
  2395  01EF  35F5               	lslf	___lwdiv@quotient,f
  2396  01F0  0DF6               	rlf	___lwdiv@quotient+1,f
  2397  01F1  0B89               	decfsz	9,f
  2398  01F2  29EF               	goto	u2095
  2399  01F3  0871               	movf	___lwdiv@divisor+1,w
  2400  01F4  0273               	subwf	___lwdiv@dividend+1,w
  2401  01F5  1D03               	skipz
  2402  01F6  29F9               	goto	u2105
  2403  01F7  0870               	movf	___lwdiv@divisor,w
  2404  01F8  0272               	subwf	___lwdiv@dividend,w
  2405  01F9                     u2105:
  2406  01F9  1C03               	skipc
  2407  01FA  29FC               	goto	u2101
  2408  01FB  29FD               	goto	u2100
  2409  01FC                     u2101:
  2410  01FC  2A02               	goto	l2390
  2411  01FD                     u2100:
  2412  01FD                     l2386:
  2413  01FD  0870               	movf	___lwdiv@divisor,w
  2414  01FE  02F2               	subwf	___lwdiv@dividend,f
  2415  01FF  0871               	movf	___lwdiv@divisor+1,w
  2416  0200  3BF3               	subwfb	___lwdiv@dividend+1,f
  2417  0201                     l2388:
  2418  0201  1475               	bsf	___lwdiv@quotient,0
  2419  0202                     l2390:
  2420  0202  3001               	movlw	1
  2421  0203                     u2115:
  2422  0203  36F1               	lsrf	___lwdiv@divisor+1,f
  2423  0204  0CF0               	rrf	___lwdiv@divisor,f
  2424  0205  0B89               	decfsz	9,f
  2425  0206  2A03               	goto	u2115
  2426  0207                     l2392:
  2427  0207  3001               	movlw	1
  2428  0208  02F7               	subwf	___lwdiv@counter,f
  2429  0209  1D03               	btfss	3,2
  2430  020A  2A0C               	goto	u2121
  2431  020B  2A0D               	goto	u2120
  2432  020C                     u2121:
  2433  020C  29EE               	goto	l2384
  2434  020D                     u2120:
  2435  020D                     l2394:
  2436  020D  0876               	movf	___lwdiv@quotient+1,w
  2437  020E  00F1               	movwf	?___lwdiv+1
  2438  020F  0875               	movf	___lwdiv@quotient,w
  2439  0210  00F0               	movwf	?___lwdiv
  2440  0211                     l798:
  2441  0211  0008               	return
  2442  0212                     __end_of___lwdiv:
  2443                           
  2444                           	psect	text6
  2445  00F0                     __ptext6:	
  2446 ;; *************** function _portinit *****************
  2447 ;; Defined at:
  2448 ;;		line 160 in file "Q1.c"
  2449 ;; Parameters:    Size  Location     Type
  2450 ;;		None
  2451 ;; Auto vars:     Size  Location     Type
  2452 ;;		None
  2453 ;; Return value:  Size  Location     Type
  2454 ;;                  1    wreg      void 
  2455 ;; Registers used:
  2456 ;;		wreg, status,2
  2457 ;; Tracked objects:
  2458 ;;		On entry : 0/0
  2459 ;;		On exit  : 0/0
  2460 ;;		Unchanged: 0/0
  2461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2466 ;;Total ram usage:        0 bytes
  2467 ;; Hardware stack levels used:    1
  2468 ;; This function calls:
  2469 ;;		Nothing
  2470 ;; This function is called by:
  2471 ;;		_main
  2472 ;; This function uses a non-reentrant model
  2473 ;;
  2474                           
  2475                           
  2476                           ;psect for function _portinit
  2477  00F0                     _portinit:
  2478  00F0                     l2398:	
  2479                           ;incstack = 0
  2480                           ; Regs used in _portinit: [wreg+status,2]
  2481                           
  2482                           
  2483                           ;Q1.c: 163:     ANSELA=0x00;
  2484  00F0  0023               	movlb	3	; select bank3
  2485  00F1  018C               	clrf	12	;volatile
  2486                           
  2487                           ;Q1.c: 164:     ANSELB=0x00;
  2488  00F2  018D               	clrf	13	;volatile
  2489  00F3                     l2400:
  2490                           
  2491                           ;Q1.c: 166:     PORTA=0x07;
  2492  00F3  3007               	movlw	7
  2493  00F4  0020               	movlb	0	; select bank0
  2494  00F5  008C               	movwf	12	;volatile
  2495  00F6                     l2402:
  2496                           
  2497                           ;Q1.c: 167:     TRISA=0x07;
  2498  00F6  3007               	movlw	7
  2499  00F7  0021               	movlb	1	; select bank1
  2500  00F8  008C               	movwf	12	;volatile
  2501                           
  2502                           ;Q1.c: 168:     PORTB=0x00;
  2503  00F9  0020               	movlb	0	; select bank0
  2504  00FA  018D               	clrf	13	;volatile
  2505                           
  2506                           ;Q1.c: 169:     TRISB=0x00;
  2507  00FB  0021               	movlb	1	; select bank1
  2508  00FC  018D               	clrf	13	;volatile
  2509  00FD                     l2404:
  2510                           
  2511                           ;Q1.c: 170:     PORTC=0x07;
  2512  00FD  3007               	movlw	7
  2513  00FE  0020               	movlb	0	; select bank0
  2514  00FF  008E               	movwf	14	;volatile
  2515  0100                     l2406:
  2516                           
  2517                           ;Q1.c: 171:     TRISC=0x00;
  2518  0100  0021               	movlb	1	; select bank1
  2519  0101  018E               	clrf	14	;volatile
  2520  0102                     l95:
  2521  0102  0008               	return
  2522  0103                     __end_of_portinit:
  2523                           
  2524                           	psect	text7
  2525  05A7                     __ptext7:	
  2526 ;; *************** function _buzzStop *****************
  2527 ;; Defined at:
  2528 ;;		line 594 in file "Q1.c"
  2529 ;; Parameters:    Size  Location     Type
  2530 ;;  dousa           2    0[BANK0 ] int 
  2531 ;;  time            2    2[BANK0 ] int 
  2532 ;;  rokku           2    4[BANK0 ] int 
  2533 ;; Auto vars:     Size  Location     Type
  2534 ;;  i               2   14[BANK0 ] int 
  2535 ;;  j               2   12[BANK0 ] int 
  2536 ;;  cpSW3           2   10[BANK0 ] int 
  2537 ;;  cpSW2           2    8[BANK0 ] int 
  2538 ;;  cpSW1           2    6[BANK0 ] int 
  2539 ;; Return value:  Size  Location     Type
  2540 ;;                  2    0[BANK0 ] int 
  2541 ;; Registers used:
  2542 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2543 ;; Tracked objects:
  2544 ;;		On entry : 0/0
  2545 ;;		On exit  : 0/0
  2546 ;;		Unchanged: 0/0
  2547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2548 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2549 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2550 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2551 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2552 ;;Total ram usage:       18 bytes
  2553 ;; Hardware stack levels used:    1
  2554 ;; Hardware stack levels required when called:    2
  2555 ;; This function calls:
  2556 ;;		_buzzof
  2557 ;;		_buzzon
  2558 ;;		_fclr
  2559 ;;		_tact
  2560 ;; This function is called by:
  2561 ;;		_main
  2562 ;; This function uses a non-reentrant model
  2563 ;;
  2564                           
  2565                           
  2566                           ;psect for function _buzzStop
  2567  05A7                     _buzzStop:
  2568  05A7                     l2486:	
  2569                           ;incstack = 0
  2570                           ; Regs used in _buzzStop: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2571                           
  2572                           
  2573                           ;Q1.c: 597:     int j = 0;
  2574  05A7  0020               	movlb	0	; select bank0
  2575  05A8  01CA               	clrf	buzzStop@j
  2576  05A9  01CB               	clrf	buzzStop@j+1
  2577  05AA                     l2488:
  2578                           
  2579                           ;Q1.c: 600:     int cpSW1 = RA0;
  2580  05AA  1003               	clrc
  2581  05AB  180C               	btfsc	12,0	;volatile
  2582  05AC  1403               	setc
  2583  05AD  3000               	movlw	0
  2584  05AE  3D09               	addwfc	9,w
  2585  05AF  00FA               	movwf	??_buzzStop
  2586  05B0  01FB               	clrf	??_buzzStop+1
  2587  05B1  087A               	movf	??_buzzStop,w
  2588  05B2  00C4               	movwf	buzzStop@cpSW1
  2589  05B3  087B               	movf	??_buzzStop+1,w
  2590  05B4  00C5               	movwf	buzzStop@cpSW1+1
  2591  05B5                     l2490:
  2592                           
  2593                           ;Q1.c: 601:     int cpSW2 = RA1;
  2594  05B5  1003               	clrc
  2595  05B6  188C               	btfsc	12,1	;volatile
  2596  05B7  1403               	setc
  2597  05B8  3000               	movlw	0
  2598  05B9  3D09               	addwfc	9,w
  2599  05BA  00FA               	movwf	??_buzzStop
  2600  05BB  01FB               	clrf	??_buzzStop+1
  2601  05BC  087A               	movf	??_buzzStop,w
  2602  05BD  00C6               	movwf	buzzStop@cpSW2
  2603  05BE  087B               	movf	??_buzzStop+1,w
  2604  05BF  00C7               	movwf	buzzStop@cpSW2+1
  2605  05C0                     l2492:
  2606                           
  2607                           ;Q1.c: 602:     int cpSW3 = RA2;
  2608  05C0  1003               	clrc
  2609  05C1  190C               	btfsc	12,2	;volatile
  2610  05C2  1403               	setc
  2611  05C3  3000               	movlw	0
  2612  05C4  3D09               	addwfc	9,w
  2613  05C5  00FA               	movwf	??_buzzStop
  2614  05C6  01FB               	clrf	??_buzzStop+1
  2615  05C7  087A               	movf	??_buzzStop,w
  2616  05C8  00C8               	movwf	buzzStop@cpSW3
  2617  05C9  087B               	movf	??_buzzStop+1,w
  2618  05CA  00C9               	movwf	buzzStop@cpSW3+1
  2619  05CB                     l2494:
  2620                           
  2621                           ;Q1.c: 604:     for(j=time;j>0;j--){
  2622  05CB  0841               	movf	buzzStop@time+1,w
  2623  05CC  00CB               	movwf	buzzStop@j+1
  2624  05CD  0840               	movf	buzzStop@time,w
  2625  05CE  00CA               	movwf	buzzStop@j
  2626  05CF                     l2496:
  2627  05CF  084B               	movf	buzzStop@j+1,w
  2628  05D0  3A80               	xorlw	128
  2629  05D1  00FA               	movwf	??_buzzStop
  2630  05D2  3080               	movlw	128
  2631  05D3  027A               	subwf	??_buzzStop,w
  2632  05D4  1D03               	skipz
  2633  05D5  2DD8               	goto	u2255
  2634  05D6  3001               	movlw	1
  2635  05D7  024A               	subwf	buzzStop@j,w
  2636  05D8                     u2255:
  2637  05D8  1803               	skipnc
  2638  05D9  2DDB               	goto	u2251
  2639  05DA  2DDC               	goto	u2250
  2640  05DB                     u2251:
  2641  05DB  2DDD               	goto	l2500
  2642  05DC                     u2250:
  2643  05DC  2E0C               	goto	l2518
  2644  05DD                     l2500:
  2645                           
  2646                           ;Q1.c: 606:         if(dousa == 1){
  2647  05DD  0020               	movlb	0	; select bank0
  2648  05DE  033E               	decf	buzzStop@dousa,w
  2649  05DF  043F               	iorwf	buzzStop@dousa+1,w
  2650  05E0  1D03               	btfss	3,2
  2651  05E1  2DE3               	goto	u2261
  2652  05E2  2DE4               	goto	u2260
  2653  05E3                     u2261:
  2654  05E3  2ECF               	goto	l2606
  2655  05E4                     u2260:
  2656  05E4                     l2502:
  2657                           
  2658                           ;Q1.c: 607:             for(i=0;i<=2500;i++){
  2659  05E4  01CC               	clrf	buzzStop@i
  2660  05E5  01CD               	clrf	buzzStop@i+1
  2661  05E6                     l2508:
  2662                           
  2663                           ;Q1.c: 608:                 buzzon();
  2664  05E6  3181  2142  3185   	fcall	_buzzon
  2665  05E9                     l2510:
  2666                           
  2667                           ;Q1.c: 610:                 tact(0);
  2668  05E9  3000               	movlw	0
  2669  05EA  00F8               	movwf	tact@mode
  2670  05EB  00F9               	movwf	tact@mode+1
  2671  05EC  3182  2297  3185   	fcall	_tact
  2672  05EF                     l2512:
  2673                           
  2674                           ;Q1.c: 612:                 if(cpSW1 != RA0){
  2675  05EF  1003               	clrc
  2676  05F0  0020               	movlb	0	; select bank0
  2677  05F1  180C               	btfsc	12,0	;volatile
  2678  05F2  1403               	setc
  2679  05F3  3000               	movlw	0
  2680  05F4  3D09               	addwfc	9,w
  2681  05F5  00FA               	movwf	??_buzzStop
  2682  05F6  01FB               	clrf	??_buzzStop+1
  2683  05F7  0845               	movf	buzzStop@cpSW1+1,w
  2684  05F8  067B               	xorwf	??_buzzStop+1,w
  2685  05F9  1D03               	skipz
  2686  05FA  2DFD               	goto	u2275
  2687  05FB  0844               	movf	buzzStop@cpSW1,w
  2688  05FC  067A               	xorwf	??_buzzStop,w
  2689  05FD                     u2275:
  2690  05FD  1903               	skipnz
  2691  05FE  2E00               	goto	u2271
  2692  05FF  2E01               	goto	u2270
  2693  0600                     u2271:
  2694  0600  2E10               	goto	l2522
  2695  0601                     u2270:
  2696  0601                     l2514:
  2697                           
  2698                           ;Q1.c: 613:                     if((0b100 & rokku) == 0b100){
  2699  0601  1D42               	btfss	buzzStop@rokku,2
  2700  0602  2E04               	goto	u2281
  2701  0603  2E05               	goto	u2280
  2702  0604                     u2281:
  2703  0604  2E10               	goto	l2522
  2704  0605                     u2280:
  2705  0605                     l2516:
  2706                           
  2707                           ;Q1.c: 615:                         fclr(2);
  2708  0605  3002               	movlw	2
  2709  0606  00F0               	movwf	fclr@flg
  2710  0607  3000               	movlw	0
  2711  0608  00F1               	movwf	fclr@flg+1
  2712  0609  3181  2162  3185   	fcall	_fclr
  2713  060C                     l2518:
  2714                           
  2715                           ;Q1.c: 616:                         buzzof();
  2716  060C  3181  2122  3185   	fcall	_buzzof
  2717  060F  2FCB               	goto	l314
  2718  0610                     l2522:
  2719                           
  2720                           ;Q1.c: 620:                 if(cpSW2 != RA1){
  2721  0610  1003               	clrc
  2722  0611  188C               	btfsc	12,1	;volatile
  2723  0612  1403               	setc
  2724  0613  3000               	movlw	0
  2725  0614  3D09               	addwfc	9,w
  2726  0615  00FA               	movwf	??_buzzStop
  2727  0616  01FB               	clrf	??_buzzStop+1
  2728  0617  0847               	movf	buzzStop@cpSW2+1,w
  2729  0618  067B               	xorwf	??_buzzStop+1,w
  2730  0619  1D03               	skipz
  2731  061A  2E1D               	goto	u2295
  2732  061B  0846               	movf	buzzStop@cpSW2,w
  2733  061C  067A               	xorwf	??_buzzStop,w
  2734  061D                     u2295:
  2735  061D  1903               	skipnz
  2736  061E  2E20               	goto	u2291
  2737  061F  2E21               	goto	u2290
  2738  0620                     u2291:
  2739  0620  2E26               	goto	l2532
  2740  0621                     u2290:
  2741  0621                     l2524:
  2742                           
  2743                           ;Q1.c: 621:                     if((0b010 & rokku) == 0b010){
  2744  0621  1CC2               	btfss	buzzStop@rokku,1
  2745  0622  2E24               	goto	u2301
  2746  0623  2E25               	goto	u2300
  2747  0624                     u2301:
  2748  0624  2E26               	goto	l2532
  2749  0625                     u2300:
  2750  0625  2E05               	goto	l2516
  2751  0626                     l2532:
  2752                           
  2753                           ;Q1.c: 628:                 if(((flag_sw3==1)&&(flag_R==1))){
  2754  0626  0338               	decf	_flag_sw3,w
  2755  0627  0439               	iorwf	_flag_sw3+1,w
  2756  0628  1D03               	btfss	3,2
  2757  0629  2E2B               	goto	u2311
  2758  062A  2E2C               	goto	u2310
  2759  062B                     u2311:
  2760  062B  2E37               	goto	l2544
  2761  062C                     u2310:
  2762  062C                     l2534:
  2763  062C  0336               	decf	_flag_R,w
  2764  062D  0437               	iorwf	_flag_R+1,w
  2765  062E  1D03               	btfss	3,2
  2766  062F  2E31               	goto	u2321
  2767  0630  2E32               	goto	u2320
  2768  0631                     u2321:
  2769  0631  2E37               	goto	l2544
  2770  0632                     u2320:
  2771  0632                     l2536:
  2772                           
  2773                           ;Q1.c: 629:                     if((0b001 & rokku) == 0b001){
  2774  0632  1C42               	btfss	buzzStop@rokku,0
  2775  0633  2E35               	goto	u2331
  2776  0634  2E36               	goto	u2330
  2777  0635                     u2331:
  2778  0635  2E37               	goto	l2544
  2779  0636                     u2330:
  2780  0636  2E05               	goto	l2516
  2781  0637                     l2544:
  2782                           
  2783                           ;Q1.c: 636:                 if(RA2 != cpSW3){
  2784  0637  1003               	clrc
  2785  0638  190C               	btfsc	12,2	;volatile
  2786  0639  1403               	setc
  2787  063A  3000               	movlw	0
  2788  063B  3D09               	addwfc	9,w
  2789  063C  00FA               	movwf	??_buzzStop
  2790  063D  01FB               	clrf	??_buzzStop+1
  2791  063E  0849               	movf	buzzStop@cpSW3+1,w
  2792  063F  067B               	xorwf	??_buzzStop+1,w
  2793  0640  1D03               	skipz
  2794  0641  2E44               	goto	u2345
  2795  0642  0848               	movf	buzzStop@cpSW3,w
  2796  0643  067A               	xorwf	??_buzzStop,w
  2797  0644                     u2345:
  2798  0644  1903               	skipnz
  2799  0645  2E47               	goto	u2341
  2800  0646  2E48               	goto	u2340
  2801  0647                     u2341:
  2802  0647  2E4D               	goto	l2552
  2803  0648                     u2340:
  2804  0648                     l2546:
  2805                           
  2806                           ;Q1.c: 637:                     if((0b001 & rokku) == 0b001){
  2807  0648  1C42               	btfss	buzzStop@rokku,0
  2808  0649  2E4B               	goto	u2351
  2809  064A  2E4C               	goto	u2350
  2810  064B                     u2351:
  2811  064B  2E4D               	goto	l2552
  2812  064C                     u2350:
  2813  064C  2E0C               	goto	l2518
  2814  064D                     l2552:
  2815                           
  2816                           ;Q1.c: 643:             }
  2817  064D  3001               	movlw	1
  2818  064E  07CC               	addwf	buzzStop@i,f
  2819  064F  3000               	movlw	0
  2820  0650  3DCD               	addwfc	buzzStop@i+1,f
  2821  0651  084D               	movf	buzzStop@i+1,w
  2822  0652  3A80               	xorlw	128
  2823  0653  00FA               	movwf	??_buzzStop
  2824  0654  3089               	movlw	137
  2825  0655  027A               	subwf	??_buzzStop,w
  2826  0656  1D03               	skipz
  2827  0657  2E5A               	goto	u2365
  2828  0658  30C5               	movlw	197
  2829  0659  024C               	subwf	buzzStop@i,w
  2830  065A                     u2365:
  2831  065A  1C03               	skipc
  2832  065B  2E5D               	goto	u2361
  2833  065C  2E5E               	goto	u2360
  2834  065D                     u2361:
  2835  065D  2DE6               	goto	l2508
  2836  065E                     u2360:
  2837  065E                     l2554:
  2838                           
  2839                           ;Q1.c: 644:             for(i=0;i<=2500;i++){
  2840  065E  0020               	movlb	0	; select bank0
  2841  065F  01CC               	clrf	buzzStop@i
  2842  0660  01CD               	clrf	buzzStop@i+1
  2843  0661                     l2560:
  2844                           
  2845                           ;Q1.c: 645:                 buzzof();
  2846  0661  3181  2122  3185   	fcall	_buzzof
  2847  0664                     l2562:
  2848                           
  2849                           ;Q1.c: 647:                 tact(0);
  2850  0664  3000               	movlw	0
  2851  0665  00F8               	movwf	tact@mode
  2852  0666  00F9               	movwf	tact@mode+1
  2853  0667  3182  2297  3185   	fcall	_tact
  2854  066A                     l2564:
  2855                           
  2856                           ;Q1.c: 649:                 if(cpSW1 != RA0){
  2857  066A  1003               	clrc
  2858  066B  0020               	movlb	0	; select bank0
  2859  066C  180C               	btfsc	12,0	;volatile
  2860  066D  1403               	setc
  2861  066E  3000               	movlw	0
  2862  066F  3D09               	addwfc	9,w
  2863  0670  00FA               	movwf	??_buzzStop
  2864  0671  01FB               	clrf	??_buzzStop+1
  2865  0672  0845               	movf	buzzStop@cpSW1+1,w
  2866  0673  067B               	xorwf	??_buzzStop+1,w
  2867  0674  1D03               	skipz
  2868  0675  2E78               	goto	u2375
  2869  0676  0844               	movf	buzzStop@cpSW1,w
  2870  0677  067A               	xorwf	??_buzzStop,w
  2871  0678                     u2375:
  2872  0678  1903               	skipnz
  2873  0679  2E7B               	goto	u2371
  2874  067A  2E7C               	goto	u2370
  2875  067B                     u2371:
  2876  067B  2E81               	goto	l2574
  2877  067C                     u2370:
  2878  067C                     l2566:
  2879                           
  2880                           ;Q1.c: 650:                     if((0b100 & rokku) == 0b100){
  2881  067C  1D42               	btfss	buzzStop@rokku,2
  2882  067D  2E7F               	goto	u2381
  2883  067E  2E80               	goto	u2380
  2884  067F                     u2381:
  2885  067F  2E81               	goto	l2574
  2886  0680                     u2380:
  2887  0680  2E05               	goto	l2516
  2888  0681                     l2574:
  2889                           
  2890                           ;Q1.c: 657:                 if(cpSW2 != RA1){
  2891  0681  1003               	clrc
  2892  0682  188C               	btfsc	12,1	;volatile
  2893  0683  1403               	setc
  2894  0684  3000               	movlw	0
  2895  0685  3D09               	addwfc	9,w
  2896  0686  00FA               	movwf	??_buzzStop
  2897  0687  01FB               	clrf	??_buzzStop+1
  2898  0688  0847               	movf	buzzStop@cpSW2+1,w
  2899  0689  067B               	xorwf	??_buzzStop+1,w
  2900  068A  1D03               	skipz
  2901  068B  2E8E               	goto	u2395
  2902  068C  0846               	movf	buzzStop@cpSW2,w
  2903  068D  067A               	xorwf	??_buzzStop,w
  2904  068E                     u2395:
  2905  068E  1903               	skipnz
  2906  068F  2E91               	goto	u2391
  2907  0690  2E92               	goto	u2390
  2908  0691                     u2391:
  2909  0691  2E97               	goto	l2584
  2910  0692                     u2390:
  2911  0692                     l2576:
  2912                           
  2913                           ;Q1.c: 658:                     if((0b010 & rokku) == 0b010){
  2914  0692  1CC2               	btfss	buzzStop@rokku,1
  2915  0693  2E95               	goto	u2401
  2916  0694  2E96               	goto	u2400
  2917  0695                     u2401:
  2918  0695  2E97               	goto	l2584
  2919  0696                     u2400:
  2920  0696  2E05               	goto	l2516
  2921  0697                     l2584:
  2922                           
  2923                           ;Q1.c: 665:                 if(((flag_sw3==1)&&(flag_R==1))){
  2924  0697  0338               	decf	_flag_sw3,w
  2925  0698  0439               	iorwf	_flag_sw3+1,w
  2926  0699  1D03               	btfss	3,2
  2927  069A  2E9C               	goto	u2411
  2928  069B  2E9D               	goto	u2410
  2929  069C                     u2411:
  2930  069C  2EA8               	goto	l2596
  2931  069D                     u2410:
  2932  069D                     l2586:
  2933  069D  0336               	decf	_flag_R,w
  2934  069E  0437               	iorwf	_flag_R+1,w
  2935  069F  1D03               	btfss	3,2
  2936  06A0  2EA2               	goto	u2421
  2937  06A1  2EA3               	goto	u2420
  2938  06A2                     u2421:
  2939  06A2  2EA8               	goto	l2596
  2940  06A3                     u2420:
  2941  06A3                     l2588:
  2942                           
  2943                           ;Q1.c: 666:                     if((0b001 & rokku) == 0b001){
  2944  06A3  1C42               	btfss	buzzStop@rokku,0
  2945  06A4  2EA6               	goto	u2431
  2946  06A5  2EA7               	goto	u2430
  2947  06A6                     u2431:
  2948  06A6  2EA8               	goto	l2596
  2949  06A7                     u2430:
  2950  06A7  2E05               	goto	l2516
  2951  06A8                     l2596:
  2952                           
  2953                           ;Q1.c: 673:                 if(RA2 != cpSW3){
  2954  06A8  1003               	clrc
  2955  06A9  190C               	btfsc	12,2	;volatile
  2956  06AA  1403               	setc
  2957  06AB  3000               	movlw	0
  2958  06AC  3D09               	addwfc	9,w
  2959  06AD  00FA               	movwf	??_buzzStop
  2960  06AE  01FB               	clrf	??_buzzStop+1
  2961  06AF  0849               	movf	buzzStop@cpSW3+1,w
  2962  06B0  067B               	xorwf	??_buzzStop+1,w
  2963  06B1  1D03               	skipz
  2964  06B2  2EB5               	goto	u2445
  2965  06B3  0848               	movf	buzzStop@cpSW3,w
  2966  06B4  067A               	xorwf	??_buzzStop,w
  2967  06B5                     u2445:
  2968  06B5  1903               	skipnz
  2969  06B6  2EB8               	goto	u2441
  2970  06B7  2EB9               	goto	u2440
  2971  06B8                     u2441:
  2972  06B8  2EBE               	goto	l2604
  2973  06B9                     u2440:
  2974  06B9                     l2598:
  2975                           
  2976                           ;Q1.c: 674:                     if((0b001 & rokku) == 0b001){
  2977  06B9  1C42               	btfss	buzzStop@rokku,0
  2978  06BA  2EBC               	goto	u2451
  2979  06BB  2EBD               	goto	u2450
  2980  06BC                     u2451:
  2981  06BC  2EBE               	goto	l2604
  2982  06BD                     u2450:
  2983  06BD  2E0C               	goto	l2518
  2984  06BE                     l2604:
  2985                           
  2986                           ;Q1.c: 680:             }
  2987  06BE  3001               	movlw	1
  2988  06BF  07CC               	addwf	buzzStop@i,f
  2989  06C0  3000               	movlw	0
  2990  06C1  3DCD               	addwfc	buzzStop@i+1,f
  2991  06C2  084D               	movf	buzzStop@i+1,w
  2992  06C3  3A80               	xorlw	128
  2993  06C4  00FA               	movwf	??_buzzStop
  2994  06C5  3089               	movlw	137
  2995  06C6  027A               	subwf	??_buzzStop,w
  2996  06C7  1D03               	skipz
  2997  06C8  2ECB               	goto	u2465
  2998  06C9  30C5               	movlw	197
  2999  06CA  024C               	subwf	buzzStop@i,w
  3000  06CB                     u2465:
  3001  06CB  1C03               	skipc
  3002  06CC  2ECE               	goto	u2461
  3003  06CD  2ECF               	goto	u2460
  3004  06CE                     u2461:
  3005  06CE  2E61               	goto	l2560
  3006  06CF                     u2460:
  3007  06CF                     l2606:
  3008                           
  3009                           ;Q1.c: 683:         if(dousa == 5){
  3010  06CF  3005               	movlw	5
  3011  06D0  0020               	movlb	0	; select bank0
  3012  06D1  063E               	xorwf	buzzStop@dousa,w
  3013  06D2  043F               	iorwf	buzzStop@dousa+1,w
  3014  06D3  1D03               	btfss	3,2
  3015  06D4  2ED6               	goto	u2471
  3016  06D5  2ED7               	goto	u2470
  3017  06D6                     u2471:
  3018  06D6  2FB8               	goto	l2712
  3019  06D7                     u2470:
  3020  06D7                     l2608:
  3021                           
  3022                           ;Q1.c: 684:             for(i=0;i<=7500;i++){
  3023  06D7  01CC               	clrf	buzzStop@i
  3024  06D8  01CD               	clrf	buzzStop@i+1
  3025  06D9                     l2614:
  3026                           
  3027                           ;Q1.c: 685:                 buzzon();
  3028  06D9  3181  2142  3185   	fcall	_buzzon
  3029  06DC                     l2616:
  3030                           
  3031                           ;Q1.c: 687:                 tact(0);
  3032  06DC  3000               	movlw	0
  3033  06DD  00F8               	movwf	tact@mode
  3034  06DE  00F9               	movwf	tact@mode+1
  3035  06DF  3182  2297  3185   	fcall	_tact
  3036  06E2                     l2618:
  3037                           
  3038                           ;Q1.c: 689:                 if(cpSW1 != RA0){
  3039  06E2  1003               	clrc
  3040  06E3  0020               	movlb	0	; select bank0
  3041  06E4  180C               	btfsc	12,0	;volatile
  3042  06E5  1403               	setc
  3043  06E6  3000               	movlw	0
  3044  06E7  3D09               	addwfc	9,w
  3045  06E8  00FA               	movwf	??_buzzStop
  3046  06E9  01FB               	clrf	??_buzzStop+1
  3047  06EA  0845               	movf	buzzStop@cpSW1+1,w
  3048  06EB  067B               	xorwf	??_buzzStop+1,w
  3049  06EC  1D03               	skipz
  3050  06ED  2EF0               	goto	u2485
  3051  06EE  0844               	movf	buzzStop@cpSW1,w
  3052  06EF  067A               	xorwf	??_buzzStop,w
  3053  06F0                     u2485:
  3054  06F0  1903               	skipnz
  3055  06F1  2EF3               	goto	u2481
  3056  06F2  2EF4               	goto	u2480
  3057  06F3                     u2481:
  3058  06F3  2EF9               	goto	l2628
  3059  06F4                     u2480:
  3060  06F4                     l2620:
  3061                           
  3062                           ;Q1.c: 690:                     if((0b100 & rokku) == 0b100){
  3063  06F4  1D42               	btfss	buzzStop@rokku,2
  3064  06F5  2EF7               	goto	u2491
  3065  06F6  2EF8               	goto	u2490
  3066  06F7                     u2491:
  3067  06F7  2EF9               	goto	l2628
  3068  06F8                     u2490:
  3069  06F8  2E05               	goto	l2516
  3070  06F9                     l2628:
  3071                           
  3072                           ;Q1.c: 697:                 if(cpSW2 != RA1){
  3073  06F9  1003               	clrc
  3074  06FA  188C               	btfsc	12,1	;volatile
  3075  06FB  1403               	setc
  3076  06FC  3000               	movlw	0
  3077  06FD  3D09               	addwfc	9,w
  3078  06FE  00FA               	movwf	??_buzzStop
  3079  06FF  01FB               	clrf	??_buzzStop+1
  3080  0700  0847               	movf	buzzStop@cpSW2+1,w
  3081  0701  067B               	xorwf	??_buzzStop+1,w
  3082  0702  1D03               	skipz
  3083  0703  2F06               	goto	u2505
  3084  0704  0846               	movf	buzzStop@cpSW2,w
  3085  0705  067A               	xorwf	??_buzzStop,w
  3086  0706                     u2505:
  3087  0706  1903               	skipnz
  3088  0707  2F09               	goto	u2501
  3089  0708  2F0A               	goto	u2500
  3090  0709                     u2501:
  3091  0709  2F0F               	goto	l2638
  3092  070A                     u2500:
  3093  070A                     l2630:
  3094                           
  3095                           ;Q1.c: 698:                     if((0b010 & rokku) == 0b010){
  3096  070A  1CC2               	btfss	buzzStop@rokku,1
  3097  070B  2F0D               	goto	u2511
  3098  070C  2F0E               	goto	u2510
  3099  070D                     u2511:
  3100  070D  2F0F               	goto	l2638
  3101  070E                     u2510:
  3102  070E  2E05               	goto	l2516
  3103  070F                     l2638:
  3104                           
  3105                           ;Q1.c: 705:                 if(((flag_sw3==1)&&(flag_R==1))){
  3106  070F  0338               	decf	_flag_sw3,w
  3107  0710  0439               	iorwf	_flag_sw3+1,w
  3108  0711  1D03               	btfss	3,2
  3109  0712  2F14               	goto	u2521
  3110  0713  2F15               	goto	u2520
  3111  0714                     u2521:
  3112  0714  2F20               	goto	l2650
  3113  0715                     u2520:
  3114  0715                     l2640:
  3115  0715  0336               	decf	_flag_R,w
  3116  0716  0437               	iorwf	_flag_R+1,w
  3117  0717  1D03               	btfss	3,2
  3118  0718  2F1A               	goto	u2531
  3119  0719  2F1B               	goto	u2530
  3120  071A                     u2531:
  3121  071A  2F20               	goto	l2650
  3122  071B                     u2530:
  3123  071B                     l2642:
  3124                           
  3125                           ;Q1.c: 706:                     if((0b001 & rokku) == 0b001){
  3126  071B  1C42               	btfss	buzzStop@rokku,0
  3127  071C  2F1E               	goto	u2541
  3128  071D  2F1F               	goto	u2540
  3129  071E                     u2541:
  3130  071E  2F20               	goto	l2650
  3131  071F                     u2540:
  3132  071F  2E05               	goto	l2516
  3133  0720                     l2650:
  3134                           
  3135                           ;Q1.c: 713:                 if(RA2 != cpSW3){
  3136  0720  1003               	clrc
  3137  0721  190C               	btfsc	12,2	;volatile
  3138  0722  1403               	setc
  3139  0723  3000               	movlw	0
  3140  0724  3D09               	addwfc	9,w
  3141  0725  00FA               	movwf	??_buzzStop
  3142  0726  01FB               	clrf	??_buzzStop+1
  3143  0727  0849               	movf	buzzStop@cpSW3+1,w
  3144  0728  067B               	xorwf	??_buzzStop+1,w
  3145  0729  1D03               	skipz
  3146  072A  2F2D               	goto	u2555
  3147  072B  0848               	movf	buzzStop@cpSW3,w
  3148  072C  067A               	xorwf	??_buzzStop,w
  3149  072D                     u2555:
  3150  072D  1903               	skipnz
  3151  072E  2F30               	goto	u2551
  3152  072F  2F31               	goto	u2550
  3153  0730                     u2551:
  3154  0730  2F36               	goto	l2658
  3155  0731                     u2550:
  3156  0731                     l2652:
  3157                           
  3158                           ;Q1.c: 714:                     if((0b001 & rokku) == 0b001){
  3159  0731  1C42               	btfss	buzzStop@rokku,0
  3160  0732  2F34               	goto	u2561
  3161  0733  2F35               	goto	u2560
  3162  0734                     u2561:
  3163  0734  2F36               	goto	l2658
  3164  0735                     u2560:
  3165  0735  2E0C               	goto	l2518
  3166  0736                     l2658:
  3167                           
  3168                           ;Q1.c: 720:             }
  3169  0736  3001               	movlw	1
  3170  0737  07CC               	addwf	buzzStop@i,f
  3171  0738  3000               	movlw	0
  3172  0739  3DCD               	addwfc	buzzStop@i+1,f
  3173  073A  084D               	movf	buzzStop@i+1,w
  3174  073B  3A80               	xorlw	128
  3175  073C  00FA               	movwf	??_buzzStop
  3176  073D  309D               	movlw	157
  3177  073E  027A               	subwf	??_buzzStop,w
  3178  073F  1D03               	skipz
  3179  0740  2F43               	goto	u2575
  3180  0741  304D               	movlw	77
  3181  0742  024C               	subwf	buzzStop@i,w
  3182  0743                     u2575:
  3183  0743  1C03               	skipc
  3184  0744  2F46               	goto	u2571
  3185  0745  2F47               	goto	u2570
  3186  0746                     u2571:
  3187  0746  2ED9               	goto	l2614
  3188  0747                     u2570:
  3189  0747                     l2660:
  3190                           
  3191                           ;Q1.c: 721:             for(i=0;i<=7500;i++){
  3192  0747  0020               	movlb	0	; select bank0
  3193  0748  01CC               	clrf	buzzStop@i
  3194  0749  01CD               	clrf	buzzStop@i+1
  3195  074A                     l2666:
  3196                           
  3197                           ;Q1.c: 722:                 buzzof();
  3198  074A  3181  2122  3185   	fcall	_buzzof
  3199  074D                     l2668:
  3200                           
  3201                           ;Q1.c: 724:                 tact(0);
  3202  074D  3000               	movlw	0
  3203  074E  00F8               	movwf	tact@mode
  3204  074F  00F9               	movwf	tact@mode+1
  3205  0750  3182  2297  3185   	fcall	_tact
  3206  0753                     l2670:
  3207                           
  3208                           ;Q1.c: 726:                 if(cpSW1 != RA0){
  3209  0753  1003               	clrc
  3210  0754  0020               	movlb	0	; select bank0
  3211  0755  180C               	btfsc	12,0	;volatile
  3212  0756  1403               	setc
  3213  0757  3000               	movlw	0
  3214  0758  3D09               	addwfc	9,w
  3215  0759  00FA               	movwf	??_buzzStop
  3216  075A  01FB               	clrf	??_buzzStop+1
  3217  075B  0845               	movf	buzzStop@cpSW1+1,w
  3218  075C  067B               	xorwf	??_buzzStop+1,w
  3219  075D  1D03               	skipz
  3220  075E  2F61               	goto	u2585
  3221  075F  0844               	movf	buzzStop@cpSW1,w
  3222  0760  067A               	xorwf	??_buzzStop,w
  3223  0761                     u2585:
  3224  0761  1903               	skipnz
  3225  0762  2F64               	goto	u2581
  3226  0763  2F65               	goto	u2580
  3227  0764                     u2581:
  3228  0764  2F6A               	goto	l2680
  3229  0765                     u2580:
  3230  0765                     l2672:
  3231                           
  3232                           ;Q1.c: 727:                     if((0b100 & rokku) == 0b100){
  3233  0765  1D42               	btfss	buzzStop@rokku,2
  3234  0766  2F68               	goto	u2591
  3235  0767  2F69               	goto	u2590
  3236  0768                     u2591:
  3237  0768  2F6A               	goto	l2680
  3238  0769                     u2590:
  3239  0769  2E05               	goto	l2516
  3240  076A                     l2680:
  3241                           
  3242                           ;Q1.c: 734:                 if(cpSW2 != RA1){
  3243  076A  1003               	clrc
  3244  076B  188C               	btfsc	12,1	;volatile
  3245  076C  1403               	setc
  3246  076D  3000               	movlw	0
  3247  076E  3D09               	addwfc	9,w
  3248  076F  00FA               	movwf	??_buzzStop
  3249  0770  01FB               	clrf	??_buzzStop+1
  3250  0771  0847               	movf	buzzStop@cpSW2+1,w
  3251  0772  067B               	xorwf	??_buzzStop+1,w
  3252  0773  1D03               	skipz
  3253  0774  2F77               	goto	u2605
  3254  0775  0846               	movf	buzzStop@cpSW2,w
  3255  0776  067A               	xorwf	??_buzzStop,w
  3256  0777                     u2605:
  3257  0777  1903               	skipnz
  3258  0778  2F7A               	goto	u2601
  3259  0779  2F7B               	goto	u2600
  3260  077A                     u2601:
  3261  077A  2F80               	goto	l2690
  3262  077B                     u2600:
  3263  077B                     l2682:
  3264                           
  3265                           ;Q1.c: 735:                     if((0b010 & rokku) == 0b010){
  3266  077B  1CC2               	btfss	buzzStop@rokku,1
  3267  077C  2F7E               	goto	u2611
  3268  077D  2F7F               	goto	u2610
  3269  077E                     u2611:
  3270  077E  2F80               	goto	l2690
  3271  077F                     u2610:
  3272  077F  2E05               	goto	l2516
  3273  0780                     l2690:
  3274                           
  3275                           ;Q1.c: 742:                 if(((flag_sw3==1)&&(flag_R==1))){
  3276  0780  0338               	decf	_flag_sw3,w
  3277  0781  0439               	iorwf	_flag_sw3+1,w
  3278  0782  1D03               	btfss	3,2
  3279  0783  2F85               	goto	u2621
  3280  0784  2F86               	goto	u2620
  3281  0785                     u2621:
  3282  0785  2F91               	goto	l2702
  3283  0786                     u2620:
  3284  0786                     l2692:
  3285  0786  0336               	decf	_flag_R,w
  3286  0787  0437               	iorwf	_flag_R+1,w
  3287  0788  1D03               	btfss	3,2
  3288  0789  2F8B               	goto	u2631
  3289  078A  2F8C               	goto	u2630
  3290  078B                     u2631:
  3291  078B  2F91               	goto	l2702
  3292  078C                     u2630:
  3293  078C                     l2694:
  3294                           
  3295                           ;Q1.c: 743:                     if((0b001 & rokku) == 0b001){
  3296  078C  1C42               	btfss	buzzStop@rokku,0
  3297  078D  2F8F               	goto	u2641
  3298  078E  2F90               	goto	u2640
  3299  078F                     u2641:
  3300  078F  2F91               	goto	l2702
  3301  0790                     u2640:
  3302  0790  2E05               	goto	l2516
  3303  0791                     l2702:
  3304                           
  3305                           ;Q1.c: 750:                 if(RA2 != cpSW3){
  3306  0791  1003               	clrc
  3307  0792  190C               	btfsc	12,2	;volatile
  3308  0793  1403               	setc
  3309  0794  3000               	movlw	0
  3310  0795  3D09               	addwfc	9,w
  3311  0796  00FA               	movwf	??_buzzStop
  3312  0797  01FB               	clrf	??_buzzStop+1
  3313  0798  0849               	movf	buzzStop@cpSW3+1,w
  3314  0799  067B               	xorwf	??_buzzStop+1,w
  3315  079A  1D03               	skipz
  3316  079B  2F9E               	goto	u2655
  3317  079C  0848               	movf	buzzStop@cpSW3,w
  3318  079D  067A               	xorwf	??_buzzStop,w
  3319  079E                     u2655:
  3320  079E  1903               	skipnz
  3321  079F  2FA1               	goto	u2651
  3322  07A0  2FA2               	goto	u2650
  3323  07A1                     u2651:
  3324  07A1  2FA7               	goto	l2710
  3325  07A2                     u2650:
  3326  07A2                     l2704:
  3327                           
  3328                           ;Q1.c: 751:                     if((0b001 & rokku) == 0b001){
  3329  07A2  1C42               	btfss	buzzStop@rokku,0
  3330  07A3  2FA5               	goto	u2661
  3331  07A4  2FA6               	goto	u2660
  3332  07A5                     u2661:
  3333  07A5  2FA7               	goto	l2710
  3334  07A6                     u2660:
  3335  07A6  2E0C               	goto	l2518
  3336  07A7                     l2710:
  3337                           
  3338                           ;Q1.c: 757:             }
  3339  07A7  3001               	movlw	1
  3340  07A8  07CC               	addwf	buzzStop@i,f
  3341  07A9  3000               	movlw	0
  3342  07AA  3DCD               	addwfc	buzzStop@i+1,f
  3343  07AB  084D               	movf	buzzStop@i+1,w
  3344  07AC  3A80               	xorlw	128
  3345  07AD  00FA               	movwf	??_buzzStop
  3346  07AE  309D               	movlw	157
  3347  07AF  027A               	subwf	??_buzzStop,w
  3348  07B0  1D03               	skipz
  3349  07B1  2FB4               	goto	u2675
  3350  07B2  304D               	movlw	77
  3351  07B3  024C               	subwf	buzzStop@i,w
  3352  07B4                     u2675:
  3353  07B4  1C03               	skipc
  3354  07B5  2FB7               	goto	u2671
  3355  07B6  2FB8               	goto	u2670
  3356  07B7                     u2671:
  3357  07B7  2F4A               	goto	l2666
  3358  07B8                     u2670:
  3359  07B8                     l2712:
  3360                           
  3361                           ;Q1.c: 760:     }
  3362  07B8  30FF               	movlw	255
  3363  07B9  0020               	movlb	0	; select bank0
  3364  07BA  07CA               	addwf	buzzStop@j,f
  3365  07BB  30FF               	movlw	255
  3366  07BC  3DCB               	addwfc	buzzStop@j+1,f
  3367  07BD  084B               	movf	buzzStop@j+1,w
  3368  07BE  3A80               	xorlw	128
  3369  07BF  00FA               	movwf	??_buzzStop
  3370  07C0  3080               	movlw	128
  3371  07C1  027A               	subwf	??_buzzStop,w
  3372  07C2  1D03               	skipz
  3373  07C3  2FC6               	goto	u2685
  3374  07C4  3001               	movlw	1
  3375  07C5  024A               	subwf	buzzStop@j,w
  3376  07C6                     u2685:
  3377  07C6  1803               	skipnc
  3378  07C7  2FC9               	goto	u2681
  3379  07C8  2FCA               	goto	u2680
  3380  07C9                     u2681:
  3381  07C9  2DDD               	goto	l2500
  3382  07CA                     u2680:
  3383  07CA  2E0C               	goto	l2518
  3384  07CB                     l314:
  3385  07CB  0008               	return
  3386  07CC                     __end_of_buzzStop:
  3387                           
  3388                           	psect	text8
  3389  0297                     __ptext8:	
  3390 ;; *************** function _tact *****************
  3391 ;; Defined at:
  3392 ;;		line 346 in file "Q1.c"
  3393 ;; Parameters:    Size  Location     Type
  3394 ;;  mode            2    8[COMMON] unsigned short 
  3395 ;; Auto vars:     Size  Location     Type
  3396 ;;		None
  3397 ;; Return value:  Size  Location     Type
  3398 ;;                  1    wreg      void 
  3399 ;; Registers used:
  3400 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3401 ;; Tracked objects:
  3402 ;;		On entry : 0/0
  3403 ;;		On exit  : 0/0
  3404 ;;		Unchanged: 0/0
  3405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3406 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3409 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3410 ;;Total ram usage:        2 bytes
  3411 ;; Hardware stack levels used:    1
  3412 ;; Hardware stack levels required when called:    1
  3413 ;; This function calls:
  3414 ;;		_tactsw
  3415 ;; This function is called by:
  3416 ;;		_waitSEGStop
  3417 ;;		_buzzStop
  3418 ;;		_kaisu
  3419 ;;		_motorStop
  3420 ;; This function uses a non-reentrant model
  3421 ;;
  3422                           
  3423                           
  3424                           ;psect for function _tact
  3425  0297                     _tact:
  3426  0297                     l2268:	
  3427                           ;incstack = 0
  3428                           ; Regs used in _tact: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3429                           
  3430                           
  3431                           ;Q1.c: 346: void tact(unsigned short mode);Q1.c: 347: {;Q1.c: 348:     switch(mode){
  3432  0297  2AD1               	goto	l2296
  3433  0298                     l2270:
  3434                           
  3435                           ;Q1.c: 350:                 tactsw();
  3436  0298  3182  2212  3182   	fcall	_tactsw
  3437  029B                     l2272:
  3438                           
  3439                           ;Q1.c: 351:                 if(flag_sw3==0)flag_R=1;
  3440  029B  0020               	movlb	0	; select bank0
  3441  029C  0838               	movf	_flag_sw3,w
  3442  029D  0439               	iorwf	_flag_sw3+1,w
  3443  029E  1D03               	btfss	3,2
  3444  029F  2AA1               	goto	u1931
  3445  02A0  2AA2               	goto	u1930
  3446  02A1                     u1931:
  3447  02A1  2AE1               	goto	l208
  3448  02A2                     u1930:
  3449  02A2                     l2274:
  3450  02A2  3001               	movlw	1
  3451  02A3  00B6               	movwf	_flag_R
  3452  02A4  3000               	movlw	0
  3453  02A5  00B7               	movwf	_flag_R+1
  3454  02A6  2AE1               	goto	l208
  3455  02A7                     l2276:
  3456                           
  3457                           ;Q1.c: 354:                 tactsw();
  3458  02A7  3182  2212  3182   	fcall	_tactsw
  3459  02AA                     l2278:
  3460                           
  3461                           ;Q1.c: 355:                 if(flag_sw3==1)flag_P=1;
  3462  02AA  0020               	movlb	0	; select bank0
  3463  02AB  0338               	decf	_flag_sw3,w
  3464  02AC  0439               	iorwf	_flag_sw3+1,w
  3465  02AD  1D03               	btfss	3,2
  3466  02AE  2AB0               	goto	u1941
  3467  02AF  2AB1               	goto	u1940
  3468  02B0                     u1941:
  3469  02B0  2AE1               	goto	l208
  3470  02B1                     u1940:
  3471  02B1                     l2280:
  3472  02B1  3001               	movlw	1
  3473  02B2  00B4               	movwf	_flag_P
  3474  02B3  3000               	movlw	0
  3475  02B4  00B5               	movwf	_flag_P+1
  3476  02B5  2AE1               	goto	l208
  3477  02B6                     l2282:
  3478                           
  3479                           ;Q1.c: 358:                 tactsw();
  3480  02B6  3182  2212  3182   	fcall	_tactsw
  3481  02B9                     l2284:
  3482                           
  3483                           ;Q1.c: 359:                 if(flag_sw3==0)flag_R=1;
  3484  02B9  0020               	movlb	0	; select bank0
  3485  02BA  0838               	movf	_flag_sw3,w
  3486  02BB  0439               	iorwf	_flag_sw3+1,w
  3487  02BC  1D03               	btfss	3,2
  3488  02BD  2ABF               	goto	u1951
  3489  02BE  2AC0               	goto	u1950
  3490  02BF                     u1951:
  3491  02BF  2AC4               	goto	l2288
  3492  02C0                     u1950:
  3493  02C0                     l2286:
  3494  02C0  3001               	movlw	1
  3495  02C1  00B6               	movwf	_flag_R
  3496  02C2  3000               	movlw	0
  3497  02C3  00B7               	movwf	_flag_R+1
  3498  02C4                     l2288:
  3499                           
  3500                           ;Q1.c: 360:                 if((flag_sw3==1)&&(flag_R==1))flag_P=1;
  3501  02C4  0338               	decf	_flag_sw3,w
  3502  02C5  0439               	iorwf	_flag_sw3+1,w
  3503  02C6  1D03               	btfss	3,2
  3504  02C7  2AC9               	goto	u1961
  3505  02C8  2ACA               	goto	u1960
  3506  02C9                     u1961:
  3507  02C9  2AE1               	goto	l208
  3508  02CA                     u1960:
  3509  02CA                     l2290:
  3510  02CA  0336               	decf	_flag_R,w
  3511  02CB  0437               	iorwf	_flag_R+1,w
  3512  02CC  1D03               	btfss	3,2
  3513  02CD  2ACF               	goto	u1971
  3514  02CE  2AD0               	goto	u1970
  3515  02CF                     u1971:
  3516  02CF  2AE1               	goto	l208
  3517  02D0                     u1970:
  3518  02D0  2AB1               	goto	l2280
  3519  02D1                     l2296:
  3520                           
  3521                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3522                           ; Switch size 1, requested type "simple"
  3523                           ; Number of cases is 1, Range of values is 0 to 0
  3524                           ; switch strategies available:
  3525                           ; Name         Instructions Cycles
  3526                           ; simple_byte            4     3 (average)
  3527                           ; direct_byte            8     6 (fixed)
  3528                           ; jumptable            260     6 (fixed)
  3529                           ;	Chosen strategy is simple_byte
  3530  02D1  0879               	movf	tact@mode+1,w
  3531  02D2  3A00               	xorlw	0	; case 0
  3532  02D3  1903               	skipnz
  3533  02D4  2AD6               	goto	l3286
  3534  02D5  2AE1               	goto	l208
  3535  02D6                     l3286:
  3536                           
  3537                           ; Switch size 1, requested type "simple"
  3538                           ; Number of cases is 3, Range of values is 0 to 2
  3539                           ; switch strategies available:
  3540                           ; Name         Instructions Cycles
  3541                           ; simple_byte           10     6 (average)
  3542                           ; direct_byte           12     6 (fixed)
  3543                           ; jumptable            260     6 (fixed)
  3544                           ;	Chosen strategy is simple_byte
  3545  02D6  0878               	movf	tact@mode,w
  3546  02D7  3A00               	xorlw	0	; case 0
  3547  02D8  1903               	skipnz
  3548  02D9  2A98               	goto	l2270
  3549  02DA  3A01               	xorlw	1	; case 1
  3550  02DB  1903               	skipnz
  3551  02DC  2AA7               	goto	l2276
  3552  02DD  3A03               	xorlw	3	; case 2
  3553  02DE  1903               	skipnz
  3554  02DF  2AB6               	goto	l2282
  3555  02E0  2AE1               	goto	l208
  3556  02E1                     l208:
  3557  02E1  0008               	return
  3558  02E2                     __end_of_tact:
  3559                           
  3560                           	psect	text9
  3561  0212                     __ptext9:	
  3562 ;; *************** function _tactsw *****************
  3563 ;; Defined at:
  3564 ;;		line 331 in file "Q1.c"
  3565 ;; Parameters:    Size  Location     Type
  3566 ;;		None
  3567 ;; Auto vars:     Size  Location     Type
  3568 ;;  a               2    6[COMMON] unsigned short 
  3569 ;;  c               2    4[COMMON] unsigned short 
  3570 ;;  b               2    2[COMMON] unsigned short 
  3571 ;; Return value:  Size  Location     Type
  3572 ;;                  1    wreg      void 
  3573 ;; Registers used:
  3574 ;;		wreg, status,2, status,0
  3575 ;; Tracked objects:
  3576 ;;		On entry : 0/0
  3577 ;;		On exit  : 0/0
  3578 ;;		Unchanged: 0/0
  3579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3581 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3582 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3583 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3584 ;;Total ram usage:        8 bytes
  3585 ;; Hardware stack levels used:    1
  3586 ;; This function calls:
  3587 ;;		Nothing
  3588 ;; This function is called by:
  3589 ;;		_tact
  3590 ;; This function uses a non-reentrant model
  3591 ;;
  3592                           
  3593                           
  3594                           ;psect for function _tactsw
  3595  0212                     _tactsw:
  3596  0212                     l2094:	
  3597                           ;incstack = 0
  3598                           ; Regs used in _tactsw: [wreg+status,2+status,0]
  3599                           
  3600                           
  3601                           ;Q1.c: 333:     unsigned short a,b,c;;Q1.c: 334:     b=c=0;
  3602  0212  01F4               	clrf	tactsw@c
  3603  0213  01F5               	clrf	tactsw@c+1
  3604  0214  01F2               	clrf	tactsw@b
  3605  0215  01F3               	clrf	tactsw@b+1
  3606  0216                     l2096:
  3607                           
  3608                           ;Q1.c: 336:             a=RA2;
  3609  0216  1003               	clrc
  3610  0217  0020               	movlb	0	; select bank0
  3611  0218  190C               	btfsc	12,2	;volatile
  3612  0219  1403               	setc
  3613  021A  3000               	movlw	0
  3614  021B  3D09               	addwfc	9,w
  3615  021C  00F0               	movwf	??_tactsw
  3616  021D  01F1               	clrf	??_tactsw+1
  3617  021E  0870               	movf	??_tactsw,w
  3618  021F  00F6               	movwf	tactsw@a
  3619  0220  0871               	movf	??_tactsw+1,w
  3620  0221  00F7               	movwf	tactsw@a+1
  3621  0222                     l2098:
  3622                           
  3623                           ;Q1.c: 337:             if(b==a)++c;
  3624  0222  0877               	movf	tactsw@a+1,w
  3625  0223  0673               	xorwf	tactsw@b+1,w
  3626  0224  1D03               	skipz
  3627  0225  2A28               	goto	u1695
  3628  0226  0876               	movf	tactsw@a,w
  3629  0227  0672               	xorwf	tactsw@b,w
  3630  0228                     u1695:
  3631  0228  1D03               	skipz
  3632  0229  2A2B               	goto	u1691
  3633  022A  2A2C               	goto	u1690
  3634  022B                     u1691:
  3635  022B  2A31               	goto	l2102
  3636  022C                     u1690:
  3637  022C                     l2100:
  3638  022C  3001               	movlw	1
  3639  022D  07F4               	addwf	tactsw@c,f
  3640  022E  3000               	movlw	0
  3641  022F  3DF5               	addwfc	tactsw@c+1,f
  3642  0230  2A33               	goto	l2104
  3643  0231                     l2102:
  3644  0231  01F4               	clrf	tactsw@c
  3645  0232  01F5               	clrf	tactsw@c+1
  3646  0233                     l2104:
  3647                           
  3648                           ;Q1.c: 339:             if(c>10){flag_sw3=(~a)&0x01;return;}
  3649  0233  3000               	movlw	0
  3650  0234  0275               	subwf	tactsw@c+1,w
  3651  0235  300B               	movlw	11
  3652  0236  1903               	skipnz
  3653  0237  0274               	subwf	tactsw@c,w
  3654  0238  1C03               	skipc
  3655  0239  2A3B               	goto	u1701
  3656  023A  2A3C               	goto	u1700
  3657  023B                     u1701:
  3658  023B  2A49               	goto	l2110
  3659  023C                     u1700:
  3660  023C                     l2106:
  3661  023C  0877               	movf	tactsw@a+1,w
  3662  023D  00F1               	movwf	??_tactsw+1
  3663  023E  0876               	movf	tactsw@a,w
  3664  023F  00F0               	movwf	??_tactsw
  3665  0240  09F0               	comf	??_tactsw,f
  3666  0241  09F1               	comf	??_tactsw+1,f
  3667  0242  3001               	movlw	1
  3668  0243  0570               	andwf	??_tactsw,w
  3669  0244  00B8               	movwf	_flag_sw3
  3670  0245  3000               	movlw	0
  3671  0246  0571               	andwf	??_tactsw+1,w
  3672  0247  00B9               	movwf	_flag_sw3+1
  3673  0248  2A4E               	goto	l193
  3674  0249                     l2110:
  3675                           
  3676                           ;Q1.c: 340:             b=a;
  3677  0249  0877               	movf	tactsw@a+1,w
  3678  024A  00F3               	movwf	tactsw@b+1
  3679  024B  0876               	movf	tactsw@a,w
  3680  024C  00F2               	movwf	tactsw@b
  3681  024D  2A16               	goto	l2096
  3682  024E                     l193:
  3683  024E  0008               	return
  3684  024F                     __end_of_tactsw:
  3685                           
  3686                           	psect	text10
  3687  0162                     __ptext10:	
  3688 ;; *************** function _fclr *****************
  3689 ;; Defined at:
  3690 ;;		line 369 in file "Q1.c"
  3691 ;; Parameters:    Size  Location     Type
  3692 ;;  flg             2    0[COMMON] unsigned short 
  3693 ;; Auto vars:     Size  Location     Type
  3694 ;;		None
  3695 ;; Return value:  Size  Location     Type
  3696 ;;                  1    wreg      void 
  3697 ;; Registers used:
  3698 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3699 ;; Tracked objects:
  3700 ;;		On entry : 0/0
  3701 ;;		On exit  : 0/0
  3702 ;;		Unchanged: 0/0
  3703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3704 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3707 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3708 ;;Total ram usage:        2 bytes
  3709 ;; Hardware stack levels used:    1
  3710 ;; This function calls:
  3711 ;;		Nothing
  3712 ;; This function is called by:
  3713 ;;		_waitSEGStop
  3714 ;;		_buzzStop
  3715 ;;		_main
  3716 ;;		_kaisu
  3717 ;;		_motorStop
  3718 ;; This function uses a non-reentrant model
  3719 ;;
  3720                           
  3721                           
  3722                           ;psect for function _fclr
  3723  0162                     _fclr:
  3724  0162                     l2302:	
  3725                           ;incstack = 0
  3726                           ; Regs used in _fclr: [wreg-fsr0h+status,2+status,0]
  3727                           
  3728                           
  3729                           ;Q1.c: 369: void fclr(unsigned short flg);Q1.c: 370: {;Q1.c: 371:     switch(flg){
  3730  0162  2971               	goto	l2312
  3731  0163                     l2304:
  3732                           
  3733                           ;Q1.c: 373:                     flag_R=0;
  3734  0163  0020               	movlb	0	; select bank0
  3735  0164  01B6               	clrf	_flag_R
  3736  0165  01B7               	clrf	_flag_R+1
  3737                           
  3738                           ;Q1.c: 374:                     break;
  3739  0166  2981               	goto	l217
  3740  0167                     l2306:
  3741                           
  3742                           ;Q1.c: 376:                     flag_P=0;
  3743  0167  0020               	movlb	0	; select bank0
  3744  0168  01B4               	clrf	_flag_P
  3745  0169  01B5               	clrf	_flag_P+1
  3746                           
  3747                           ;Q1.c: 377:                     break;
  3748  016A  2981               	goto	l217
  3749  016B                     l2308:
  3750                           
  3751                           ;Q1.c: 379:                     flag_P=flag_R=0;
  3752  016B  0020               	movlb	0	; select bank0
  3753  016C  01B6               	clrf	_flag_R
  3754  016D  01B7               	clrf	_flag_R+1
  3755  016E  01B4               	clrf	_flag_P
  3756  016F  01B5               	clrf	_flag_P+1
  3757                           
  3758                           ;Q1.c: 380:                     break;
  3759  0170  2981               	goto	l217
  3760  0171                     l2312:
  3761                           
  3762                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3763                           ; Switch size 1, requested type "simple"
  3764                           ; Number of cases is 1, Range of values is 0 to 0
  3765                           ; switch strategies available:
  3766                           ; Name         Instructions Cycles
  3767                           ; simple_byte            4     3 (average)
  3768                           ; direct_byte            8     6 (fixed)
  3769                           ; jumptable            260     6 (fixed)
  3770                           ;	Chosen strategy is simple_byte
  3771  0171  0871               	movf	fclr@flg+1,w
  3772  0172  3A00               	xorlw	0	; case 0
  3773  0173  1903               	skipnz
  3774  0174  2976               	goto	l3288
  3775  0175  2981               	goto	l217
  3776  0176                     l3288:
  3777                           
  3778                           ; Switch size 1, requested type "simple"
  3779                           ; Number of cases is 3, Range of values is 0 to 2
  3780                           ; switch strategies available:
  3781                           ; Name         Instructions Cycles
  3782                           ; simple_byte           10     6 (average)
  3783                           ; direct_byte           12     6 (fixed)
  3784                           ; jumptable            260     6 (fixed)
  3785                           ;	Chosen strategy is simple_byte
  3786  0176  0870               	movf	fclr@flg,w
  3787  0177  3A00               	xorlw	0	; case 0
  3788  0178  1903               	skipnz
  3789  0179  2963               	goto	l2304
  3790  017A  3A01               	xorlw	1	; case 1
  3791  017B  1903               	skipnz
  3792  017C  2967               	goto	l2306
  3793  017D  3A03               	xorlw	3	; case 2
  3794  017E  1903               	skipnz
  3795  017F  296B               	goto	l2308
  3796  0180  2981               	goto	l217
  3797  0181                     l217:
  3798  0181  0008               	return
  3799  0182                     __end_of_fclr:
  3800                           
  3801                           	psect	text11
  3802  0142                     __ptext11:	
  3803 ;; *************** function _buzzon *****************
  3804 ;; Defined at:
  3805 ;;		line 414 in file "Q1.c"
  3806 ;; Parameters:    Size  Location     Type
  3807 ;;		None
  3808 ;; Auto vars:     Size  Location     Type
  3809 ;;  t               2    0[COMMON] unsigned short 
  3810 ;; Return value:  Size  Location     Type
  3811 ;;                  1    wreg      void 
  3812 ;; Registers used:
  3813 ;;		wreg, status,2, status,0
  3814 ;; Tracked objects:
  3815 ;;		On entry : 0/0
  3816 ;;		On exit  : 0/0
  3817 ;;		Unchanged: 0/0
  3818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3820 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3822 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3823 ;;Total ram usage:        2 bytes
  3824 ;; Hardware stack levels used:    1
  3825 ;; This function calls:
  3826 ;;		Nothing
  3827 ;; This function is called by:
  3828 ;;		_buzzStop
  3829 ;;		_main
  3830 ;;		_buzz
  3831 ;; This function uses a non-reentrant model
  3832 ;;
  3833                           
  3834                           
  3835                           ;psect for function _buzzon
  3836  0142                     _buzzon:
  3837  0142                     l2318:	
  3838                           ;incstack = 0
  3839                           ; Regs used in _buzzon: [wreg+status,2+status,0]
  3840                           
  3841                           
  3842                           ;Q1.c: 416:     unsigned short t;;Q1.c: 417:     for(t=30;t>0;t--){
  3843  0142  301E               	movlw	30
  3844  0143  00F0               	movwf	buzzon@t
  3845  0144  3000               	movlw	0
  3846  0145  00F1               	movwf	buzzon@t+1
  3847  0146                     l235:
  3848                           
  3849                           ;Q1.c: 418:         RC0=1;
  3850  0146  0020               	movlb	0	; select bank0
  3851  0147  140E               	bsf	14,0	;volatile
  3852  0148                     l2324:
  3853                           
  3854                           ;Q1.c: 419:     }
  3855  0148  3001               	movlw	1
  3856  0149  02F0               	subwf	buzzon@t,f
  3857  014A  3000               	movlw	0
  3858  014B  3BF1               	subwfb	buzzon@t+1,f
  3859  014C                     l2326:
  3860  014C  0870               	movf	buzzon@t,w
  3861  014D  0471               	iorwf	buzzon@t+1,w
  3862  014E  1D03               	btfss	3,2
  3863  014F  2951               	goto	u1981
  3864  0150  2952               	goto	u1980
  3865  0151                     u1981:
  3866  0151  2946               	goto	l235
  3867  0152                     u1980:
  3868  0152                     l2328:
  3869                           
  3870                           ;Q1.c: 420:     for(t=30;t>0;t--){
  3871  0152  301E               	movlw	30
  3872  0153  00F0               	movwf	buzzon@t
  3873  0154  3000               	movlw	0
  3874  0155  00F1               	movwf	buzzon@t+1
  3875  0156                     l237:
  3876                           
  3877                           ;Q1.c: 421:         RC0=0;
  3878  0156  100E               	bcf	14,0	;volatile
  3879  0157                     l2334:
  3880                           
  3881                           ;Q1.c: 422:     }
  3882  0157  3001               	movlw	1
  3883  0158  02F0               	subwf	buzzon@t,f
  3884  0159  3000               	movlw	0
  3885  015A  3BF1               	subwfb	buzzon@t+1,f
  3886  015B                     l2336:
  3887  015B  0870               	movf	buzzon@t,w
  3888  015C  0471               	iorwf	buzzon@t+1,w
  3889  015D  1D03               	btfss	3,2
  3890  015E  2960               	goto	u1991
  3891  015F  2961               	goto	u1990
  3892  0160                     u1991:
  3893  0160  2956               	goto	l237
  3894  0161                     u1990:
  3895  0161                     l239:
  3896  0161  0008               	return
  3897  0162                     __end_of_buzzon:
  3898                           
  3899                           	psect	text12
  3900  0122                     __ptext12:	
  3901 ;; *************** function _buzzof *****************
  3902 ;; Defined at:
  3903 ;;		line 427 in file "Q1.c"
  3904 ;; Parameters:    Size  Location     Type
  3905 ;;		None
  3906 ;; Auto vars:     Size  Location     Type
  3907 ;;  t               2    0[COMMON] unsigned short 
  3908 ;;  n               2    0        unsigned short 
  3909 ;; Return value:  Size  Location     Type
  3910 ;;                  1    wreg      void 
  3911 ;; Registers used:
  3912 ;;		wreg, status,2, status,0
  3913 ;; Tracked objects:
  3914 ;;		On entry : 0/0
  3915 ;;		On exit  : 0/0
  3916 ;;		Unchanged: 0/0
  3917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3919 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3921 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3922 ;;Total ram usage:        2 bytes
  3923 ;; Hardware stack levels used:    1
  3924 ;; This function calls:
  3925 ;;		Nothing
  3926 ;; This function is called by:
  3927 ;;		_buzzStop
  3928 ;;		_main
  3929 ;;		_buzz
  3930 ;; This function uses a non-reentrant model
  3931 ;;
  3932                           
  3933                           
  3934                           ;psect for function _buzzof
  3935  0122                     _buzzof:
  3936  0122                     l2338:	
  3937                           ;incstack = 0
  3938                           ; Regs used in _buzzof: [wreg+status,2+status,0]
  3939                           
  3940                           
  3941                           ;Q1.c: 429: unsigned short n,t;;Q1.c: 430:     for(t=30;t>0;t--){
  3942  0122  301E               	movlw	30
  3943  0123  00F0               	movwf	buzzof@t
  3944  0124  3000               	movlw	0
  3945  0125  00F1               	movwf	buzzof@t+1
  3946  0126                     l242:
  3947                           
  3948                           ;Q1.c: 431:         RC0=1;
  3949  0126  0020               	movlb	0	; select bank0
  3950  0127  140E               	bsf	14,0	;volatile
  3951  0128                     l2344:
  3952                           
  3953                           ;Q1.c: 432:     }
  3954  0128  3001               	movlw	1
  3955  0129  02F0               	subwf	buzzof@t,f
  3956  012A  3000               	movlw	0
  3957  012B  3BF1               	subwfb	buzzof@t+1,f
  3958  012C                     l2346:
  3959  012C  0870               	movf	buzzof@t,w
  3960  012D  0471               	iorwf	buzzof@t+1,w
  3961  012E  1D03               	btfss	3,2
  3962  012F  2931               	goto	u2001
  3963  0130  2932               	goto	u2000
  3964  0131                     u2001:
  3965  0131  2926               	goto	l242
  3966  0132                     u2000:
  3967  0132                     l2348:
  3968                           
  3969                           ;Q1.c: 433:     for(t=30;t>0;t--){
  3970  0132  301E               	movlw	30
  3971  0133  00F0               	movwf	buzzof@t
  3972  0134  3000               	movlw	0
  3973  0135  00F1               	movwf	buzzof@t+1
  3974  0136                     l244:
  3975                           
  3976                           ;Q1.c: 434:         RC0=1;
  3977  0136  140E               	bsf	14,0	;volatile
  3978  0137                     l2354:
  3979                           
  3980                           ;Q1.c: 435:     }
  3981  0137  3001               	movlw	1
  3982  0138  02F0               	subwf	buzzof@t,f
  3983  0139  3000               	movlw	0
  3984  013A  3BF1               	subwfb	buzzof@t+1,f
  3985  013B                     l2356:
  3986  013B  0870               	movf	buzzof@t,w
  3987  013C  0471               	iorwf	buzzof@t+1,w
  3988  013D  1D03               	btfss	3,2
  3989  013E  2940               	goto	u2011
  3990  013F  2941               	goto	u2010
  3991  0140                     u2011:
  3992  0140  2936               	goto	l244
  3993  0141                     u2010:
  3994  0141                     l246:
  3995  0141  0008               	return
  3996  0142                     __end_of_buzzof:
  3997  007E                     btemp	set	126	;btemp
  3998  007E                     wtemp0	set	126
  3999                           
  4000                           	psect	config
  4001                           
  4002                           ;Config register CONFIG1 @ 0x8007
  4003                           ;	Oscillator Selection
  4004                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  4005                           ;	Watchdog Timer Enable
  4006                           ;	WDTE = OFF, WDT disabled
  4007                           ;	Power-up Timer Enable
  4008                           ;	PWRTE = OFF, PWRT disabled
  4009                           ;	MCLR Pin Function Select
  4010                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  4011                           ;	Flash Program Memory Code Protection
  4012                           ;	CP = OFF, Program memory code protection is disabled
  4013                           ;	Data Memory Code Protection
  4014                           ;	CPD = OFF, Data memory code protection is disabled
  4015                           ;	Brown-out Reset Enable
  4016                           ;	BOREN = OFF, Brown-out Reset disabled
  4017                           ;	Clock Out Enable
  4018                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  4019                           ;	Internal/External Switchover
  4020                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4021                           ;	Fail-Safe Clock Monitor Enable
  4022                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4023  8007                     	org	32775
  4024  8007  09E4               	dw	2532
  4025                           
  4026                           ;Config register CONFIG2 @ 0x8008
  4027                           ;	Flash Memory Self-Write Protection
  4028                           ;	WRT = OFF, Write protection off
  4029                           ;	Voltage Regulator Capacitor Enable
  4030                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
  4031                           ;	PLL Enable
  4032                           ;	PLLEN = OFF, 4x PLL disabled
  4033                           ;	Stack Overflow/Underflow Reset Enable
  4034                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  4035                           ;	Brown-out Reset Voltage Selection
  4036                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  4037                           ;	Low-Voltage Programming Enable
  4038                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  4039  8008                     	org	32776
  4040  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    0
    Data        156
    BSS         34
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     50      80
    BANK1            80      0      76
    BANK2            80      0      52
    BANK3            80      0      32
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _waitSEGStop->___wmul
    ___wmul->___lwdiv
    _buzzStop->_tact
    _tact->_tactsw

Critical Paths under _main in BANK0

    _main->_waitSEGStop
    _waitSEGStop->_dynam

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                24    24      0   12174
                                             26 BANK0     24    24      0
                           _buzzStop
                             _buzzof
                             _buzzon
                               _fclr
                           _portinit
                        _waitSEGStop
                             _zenoff
 ---------------------------------------------------------------------------------
 (1) _zenoff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _waitSEGStop                                         18    10      8    6571
                                              8 BANK0     18    10      8
                            ___lwdiv
                             ___wmul
                              _dynam
                               _fclr
                               _tact
 ---------------------------------------------------------------------------------
 (2) _dynam                                               16     8      8    1967
                                              0 COMMON     8     0      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     700
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     618
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _portinit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buzzStop                                            18    12      6    3789
                                             10 COMMON     2     2      0
                                              0 BANK0     16    10      6
                             _buzzof
                             _buzzon
                               _fclr
                               _tact
 ---------------------------------------------------------------------------------
 (2) _tact                                                 2     0      2     746
                                              8 COMMON     2     0      2
                             _tactsw
 ---------------------------------------------------------------------------------
 (3) _tactsw                                               8     8      0     116
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 (2) _fclr                                                 2     0      2    1618
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _buzzon                                               2     2      0      92
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _buzzof                                               4     4      0      92
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _buzzStop
     _buzzof
     _buzzon
     _fclr
     _tact
       _tactsw
   _buzzof
   _buzzon
   _fclr
   _portinit
   _waitSEGStop
     ___lwdiv
     ___wmul
       ___lwdiv (ARG)
     _dynam
     _fclr
     _tact
       _tactsw
   _zenoff

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     32      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      4C       7       95.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      34       9       65.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      20      11       40.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      FE      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      FE      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Jun 03 17:48:22 2021

                     l95 0102                       _cw 0030      ___wmul@multiplicand 007A  
          buzzStop@cpSW1 0044            buzzStop@cpSW2 0046            buzzStop@cpSW3 0048  
                    l112 0459                      l114 0469                      l123 049F  
                    l116 047F                      l108 00EF                      l118 048F  
                    l135 05A6                      l208 02E1                      l217 0181  
                    l129 051C                      l242 0126                      l314 07CB  
                    l235 0146                      l244 0136                      l237 0156  
                    l246 0141                      l239 0161                      l520 0121  
                    l193 024E                      l265 043C                      l356 02EB  
                    l518 010D                      l358 02F8                      l798 0211  
                    _RA0 0060                      _RA1 0061                      _RA2 0062  
                    _RC0 0070                      _RC1 0071                      _RC2 0072  
                    _RC5 0075                      _RC6 0076                      _RC7 0077  
          buzzStop@dousa 003E                      _ccw 002E                      _flg 0032  
          buzzStop@rokku 0042                      wreg 0009                     l2100 022C  
                   l2110 0249                     l2102 0231                     l2104 0233  
                   l2200 0509                     l2120 0448                     l2112 043D  
                   l2106 023C                     l2202 050D                     l2122 0449  
                   l2114 0444                     l2220 052A                     l2212 0514  
                   l2204 050D                     l2140 046E                     l2132 0464  
                   l2124 0450                     l2116 0445                     l3100 02EB  
                   l2302 0162                     l2230 0540                     l2222 052E  
                   l2214 051A                     l2142 046F                     l2126 0455  
                   l2118 0447                     l3110 0310                     l3102 02F0  
                   l2304 0163                     l2312 0171                     l2400 00F3  
                   l2240 0577                     l2232 0546                     l2224 0530  
                   l2216 051E                     l2160 0493                     l2152 048A  
                   l2144 0476                     l2136 046B                     l2128 045D  
                   l3120 0310                     l3112 0310                     l3104 02F4  
                   l2306 0167                     l2402 00F6                     l2250 058A  
                   l2242 057E                     l2234 0558                     l2226 0534  
                   l2218 0524                     l2170 04A1                     l2162 0494  
                   l2146 047B                     l2138 046D                     l3130 0320  
                   l3122 0310                     l3114 0310                     l3106 0309  
                   l2324 0148                     l2308 016B                     l2500 05DD  
                   l2404 00FD                     l2244 0584                     l2236 055F  
                   l2228 053A                     l2180 04B7                     l2172 04A7  
                   l2164 0495                     l2156 0492                     l2148 0483  
                   l3140 0341                     l3132 0325                     l3124 0315  
                   l3116 0310                     l3108 0310                     l2334 0157  
                   l2326 014C                     l2318 0142                     l2094 0212  
                   l2270 0298                     l2510 05E9                     l2502 05E4  
                   l2406 0100                     l2246 0586                     l2238 0565  
                   l2190 04E2                     l2174 04AD                     l2182 04BD  
                   l2166 0497                     l2158 0493                     l2262 0596  
                   l2430 00EB                     l3134 0329                     l3126 0318  
                   l3118 0310                     l2344 0128                     l2336 015B  
                   l2328 0152                     l2096 0216                     l2280 02B1  
                   l2272 029B                     l2512 05EF                     l2360 0105  
                   l2248 058A                     l2192 04E8                     l2184 04C3  
                   l2176 04B1                     l2168 049D                     l2440 038D  
                   l2432 00EC                     l3136 032D                     l3128 031D  
                   l2354 0137                     l2346 012C                     l2338 0122  
                   l2098 0222                     l2290 02CA                     l2282 02B6  
                   l2274 02A2                     l2514 0601                     l2522 0610  
                   l2362 0109                     l2258 0591                     l2194 04FA  
                   l2186 04C9                     l2178 04B3                     l2450 03DC  
                   l2442 03BA                     l2434 00ED                     l3138 033C  
                   l3090 02E5                     l2356 013B                     l2348 0132  
                   l2284 02B9                     l2276 02A7                     l2268 0297  
                   l2620 06F4                     l2604 06BE                     l2524 0621  
                   l2532 0626                     l2516 0605                     l2508 05E6  
                   l2380 01E6                     l2372 01D6                     l2364 0112  
                   l2196 0501                     l2188 04DB                     l2460 040B  
                   l2452 03EE                     l2444 03BE                     l2436 00EE  
                   l2428 00E7                     l3092 02EB                     l2286 02C0  
                   l2278 02AA                     l2710 07A7                     l2702 0791  
                   l2630 070A                     l2614 06D9                     l2534 062C  
                   l2606 06CF                     l2518 060C                     l2390 0202  
                   l2382 01EA                     l2374 01D8                     l2366 0117  
                   l2358 0103                     l2198 0507                     l2470 041C  
                   l2454 03F2                     l2438 036B                     l3094 02EB  
                   l2288 02C4                     l2296 02D1                     l2704 07A2  
                   l2640 0715                     l2616 06DC                     l2608 06D7  
                   l2712 07B8                     l2560 0661                     l2552 064D  
                   l2536 0632                     l2544 0637                     l2392 0207  
                   l2384 01EE                     l2376 01DE                     l2368 011D  
                   l2448 03C5                     l3096 02EB                     l3088 02E2  
                   l2642 071B                     l2650 0720                     l2618 06E2  
                   l2562 0664                     l2554 065E                     l2546 0648  
                   l2490 05B5                     l2386 01FD                     l2378 01E1  
                   l2394 020D                     l2482 0437                     l2466 0410  
                   l2458 03FA                     l3098 02EB                     l2660 0747  
                   l2652 0731                     l2628 06F9                     l2564 066A  
                   l2492 05C0                     l2388 0201                     l3284 059B  
                   l2468 0416                     l2476 0421                     l3286 02D6  
                   l2670 0753                     l2638 070F                     l2566 067C  
                   l2574 0681                     l2494 05CB                     l2486 05A7  
                   l2398 00F0                     l2478 0432                     l3288 0176  
                   l2672 0765                     l2680 076A                     l2576 0692  
                   l2584 0697                     l2496 05CF                     l2488 05AA  
                   l2682 077B                     l2690 0780                     l2666 074A  
                   l2658 0736                     l2586 069D                     l2692 0786  
                   l2668 074D                     l2588 06A3                     l2596 06A8  
                   l2694 078C                     l2598 06B9                     u2000 0132  
                   u2001 0131                     u2010 0141                     u2011 0140  
                   u2100 01FD                     u2020 0109                     u2101 01FC  
                   u2021 0108                     u2120 020D                     u2200 0416  
                   u2121 020C                     u2105 01F9                     u2201 0415  
                   u2050 011D                     u2210 041C                     u2115 0203  
                   u2051 011C                     u2035 010E                     u2211 041B  
                   u2300 0625                     u2060 01DE                     u2220 0420  
                   u2301 0624                     u2061 01DD                     u2045 0113  
                   u2221 041F                     u2310 062C                     u2230 0432  
                   u2150 03C4                     u2311 062B                     u2231 0431  
                   u2151 03C3                     u2400 0696                     u2320 0632  
                   u2080 01EE                     u2240 0436                     u2160 03EE  
                   u2401 0695                     u2321 0631                     u2081 01ED  
                   u2241 0435                     u2161 03ED                     u2410 069D  
                   u2330 0636                     u2250 05DC                     u2170 03F2  
                   u2411 069C                     u2331 0635                     u2251 05DB  
                   u2075 01E2                     u2235 042E                     u2171 03F1  
                   u1700 023C                     u2500 070A                     u2420 06A3  
                   u2340 0648                     u2260 05E4                     u2180 040B  
                   u1701 023B                     u2501 0709                     u2421 06A2  
                   u2341 0647                     u2261 05E3                     u2181 040A  
                   u2165 03EA                     u2510 070E                     u2430 06A7  
                   u2350 064C                     u2270 0601                     u1710 0450  
                   u2190 040F                     u3310 0315                     u2511 070D  
                   u2431 06A6                     u2351 064B                     u2271 0600  
                   u2255 05D8                     u2095 01EF                     u1711 044F  
                   u2191 040E                     u3311 0314                     u2600 077B  
                   u2520 0715                     u2440 06B9                     u2360 065E  
                   u2280 0605                     u1800 04E2                     u1720 0463  
                   u3320 031D                     u3304 0309                     u2601 077A  
                   u2521 0714                     u2505 0706                     u2441 06B8  
                   u2361 065D                     u2345 0644                     u2281 0604  
                   u1801 04E1                     u1721 0462                     u2185 0407  
                   u3321 031C                     u2610 077F                     u2530 071B  
                   u2450 06BD                     u2370 067C                     u2290 0621  
                   u1810 04E8                     u1730 0476                     u3330 0325  
                   u3250 02F0                     u2611 077E                     u2531 071A  
                   u2451 06BC                     u2371 067B                     u2291 0620  
                   u2275 05FD                     u1811 04E7                     u1731 0475  
                   u3331 0324                     u3251 02EF                     u2620 0786  
                   u2540 071F                     u2460 06CF                     u2380 0680  
                   u1900 0565                     u1820 0501                     u1740 0489  
                   u3340 0329                     u3260 02F4                     u2621 0785  
                   u2605 0777                     u2541 071E                     u2461 06CE  
                   u2445 06B5                     u2381 067F                     u2365 065A  
                   u1901 0564                     u1821 0500                     u1741 0488  
                   u3341 0328                     u3261 02F3                     u2630 078C  
                   u2550 0731                     u2470 06D7                     u2390 0692  
                   u1910 057E                     u1830 0507                     u1750 049D  
                   u3350 032D                     u3270 02F8                     u2631 078B  
                   u2551 0730                     u2471 06D6                     u2391 0691  
                   u2375 0678                     u2295 061D                     u1911 057D  
                   u1831 0506                     u1751 049C                     u3351 032C  
                   u3271 02F7                     u2640 0790                     u2560 0735  
                   u2480 06F4                     u1920 0584                     u1840 051A  
                   u1760 04A7                     u3360 0341                     u3280 02FF  
                   u2641 078F                     u2561 0734                     u2481 06F3  
                   u2465 06CB                     u1921 0583                     u1841 0519  
                   u1761 04A6                     u3361 0340                     u3281 02FC  
                   u1690 022C                     u1930 02A2                     u2650 07A2  
                   u2570 0747                     u2490 06F8                     u1850 0524  
                   u1770 04AD                     u3290 0307                     u1691 022B  
                   u1931 02A1                     u2651 07A1                     u2571 0746  
                   u2555 072D                     u2491 06F7                     u2395 068E  
                   u1851 0523                     u1771 04AC                     u3291 0304  
                   u1940 02B1                     u2660 07A6                     u2580 0765  
                   u1860 052A                     u1780 04C3                     u1941 02B0  
                   u2661 07A5                     u2581 0764                     u2485 06F0  
                   u1861 0529                     u1781 04C2                     u1950 02C0  
                   u2670 07B8                     u2590 0769                     u1870 0540  
                   u1790 04C9                     u3294 0301                     u1695 0228  
                   u1951 02BF                     u2671 07B7                     u2655 079E  
                   u2591 0768                     u2575 0743                     u1871 053F  
                   u1791 04C8                     u1960 02CA                     u2680 07CA  
                   u1880 0546                     u1961 02C9                     u2681 07C9  
                   u2585 0761                     u1881 0545                     u1970 02D0  
                   u1890 055F                     u1971 02CF                     u2675 07B4  
                   u1891 055E                     u1980 0152                     u1981 0151  
                   u2685 07C6                     u1990 0161                     u1991 0160  
                   _atai 0028                     _fclr 0162                     _main 02E2  
                   _num0 0134                     _kisu 00CC                     _moja 00C0  
                   _samf 01A0                     _mojf 0148                     _tact 0297  
                   _mojh 00E4                     _moji 0120                     _mojn 00E0  
                   _samp 00A0                     _gusu 00D6                     fsr0h 0005  
                   fsr1h 0007                     indf0 0000                     fsr0l 0004  
                   fsr1l 0006                     btemp 007E                     start 0002  
                  ?_fclr 0070                    ?_main 0070                    ?_tact 0078  
        __end_of___lwdiv 0212                    _PORTA 000C                    _PORTB 000D  
                  _PORTC 000E                    _TRISA 008C                    _TRISB 008D  
                  _TRISC 008E                    _code1 00E8                    _atai1 002A  
                  _count 0026                    _dynam 043D                    _fugou 0020  
                  status 0003                    wtemp0 007E          __initialization 07CC  
           __end_of_fclr 0182             __end_of_main 036B             __end_of_tact 02E2  
                 ??_fclr 0072                   ??_main 007E                   ??_tact 007A  
                 ?_dynam 0070             ?_waitSEGStop 0046                   _ANSELA 018C  
                 _ANSELB 018D                   _OSCCON 0099              dynam@smdata 0074  
        waitSEGStop@seg1 0046          waitSEGStop@seg2 0048                   ___wmul 0103  
                 _code10 00EA                   _atai10 002C                   _flag_P 0034  
                 _flag_R 0036                ??___lwdiv 0074                   _buzzof 0122  
                 _buzzon 0142                   _tactsw 0212         __end_of_buzzStop 07CC  
                 _zenoff 00E7                   dynam@j 0042         __end_of_portinit 0103  
__end_of__initialization 07FD           __pcstackCOMMON 0070             __pidataBANK1 024F  
           __pidataBANK2 01A2             __pidataBANK3 0182            __end_of_dynam 05A7  
                ??_dynam 0078               __pbssBANK0 0020               __pbssBANK1 00E8  
             __pmaintext 02E2                  ?___wmul 0078                  ?_buzzof 0070  
                ?_buzzon 0070                  ?_tactsw 0070                  ?_zenoff 0070  
   __size_of_waitSEGStop 00D2                ?_buzzStop 003E         waitSEGStop@cpSW1 0050  
       waitSEGStop@cpSW2 0052         waitSEGStop@cpSW3 0054         waitSEGStop@dousa 004C  
        __size_of___wmul 001F                ?_portinit 0070                  ___lwdiv 01D6  
                _code100 0022          __size_of_buzzof 0020          __size_of_buzzon 0020  
        __size_of_tactsw 003D                  __ptext1 00E7                  __ptext2 036B  
                __ptext3 043D                  __ptext4 0103                  __ptext5 01D6  
                __ptext6 00F0                  __ptext7 05A7                  __ptext8 0297  
                __ptext9 0212          __size_of_zenoff 0009                  fclr@flg 0070  
                clrloop0 00DC     end_of_initialization 07FD                  dynam@tm 0040  
                dynam@tr 0076                  init_ram 00E1                  initloop 00E2  
                buzzof@t 0070               ??_buzzStop 007A                  buzzon@t 0070  
                tactsw@a 0076                  tactsw@b 0072                  tactsw@c 0074  
             ??_portinit 0070             buzzStop@time 0040           __end_of___wmul 0122  
          waitSEGStop@wt 004A           __end_of_buzzof 0142           __end_of_buzzon 0162  
         __end_of_tactsw 024F           __end_of_zenoff 00F0      start_initialization 07CC  
               ??___wmul 007C              __pdataBANK1 00A0              __pdataBANK2 0120  
            __pdataBANK3 01A0                 ??_buzzof 0070                 ??_buzzon 0070  
               ??_tactsw 0070                 ??_zenoff 0070                ___latbits 0003  
          __pcstackBANK0 003E         ___lwdiv@dividend 0072        __size_of_buzzStop 0225  
               ?___lwdiv 0070        __size_of_portinit 0013         ___lwdiv@quotient 0075  
          ??_waitSEGStop 004E           __size_of_dynam 016A            dynam@dig1data 0070  
          dynam@dig2data 0072           ___wmul@product 007C                clear_ram0 00DB  
      ___wmul@multiplier 0078             waitSEGStop@i 0056      __end_of_waitSEGStop 043D  
              buzzStop@i 004C                buzzStop@j 004A         __size_of___lwdiv 003C  
               _code1000 0024          ___lwdiv@divisor 0070          ___lwdiv@counter 0077  
               __ptext10 0162                 __ptext11 0142                 _flag_sw1 003C  
               __ptext12 0122                 _flag_sw2 003A                 _flag_sw3 0038  
          __size_of_fclr 0020            __size_of_main 0089            __size_of_tact 004B  
               _buzzStop 05A7                 _portinit 00F0                 dynam@ext 0044  
               dynam@smd 003E                 tact@mode 0078              _waitSEGStop 036B  
