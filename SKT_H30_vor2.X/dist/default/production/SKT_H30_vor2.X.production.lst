

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Jun 05 08:12:00 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F1938
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.20
    31                           ; Generated 12/02/2020 GMT
    32                           ; 
    33                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F1938 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  0010                     	;# 
    80  0011                     	;# 
    81  0012                     	;# 
    82  0013                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  010C                     	;# 
   113  010D                     	;# 
   114  010E                     	;# 
   115  0110                     	;# 
   116  0111                     	;# 
   117  0112                     	;# 
   118  0113                     	;# 
   119  0114                     	;# 
   120  0115                     	;# 
   121  0116                     	;# 
   122  0117                     	;# 
   123  0118                     	;# 
   124  0119                     	;# 
   125  011A                     	;# 
   126  011B                     	;# 
   127  011D                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0191                     	;# 
   131  0191                     	;# 
   132  0192                     	;# 
   133  0193                     	;# 
   134  0193                     	;# 
   135  0193                     	;# 
   136  0194                     	;# 
   137  0195                     	;# 
   138  0196                     	;# 
   139  0199                     	;# 
   140  019A                     	;# 
   141  019B                     	;# 
   142  019B                     	;# 
   143  019B                     	;# 
   144  019B                     	;# 
   145  019C                     	;# 
   146  019C                     	;# 
   147  019D                     	;# 
   148  019E                     	;# 
   149  019F                     	;# 
   150  020D                     	;# 
   151  0210                     	;# 
   152  0211                     	;# 
   153  0212                     	;# 
   154  0213                     	;# 
   155  0214                     	;# 
   156  0215                     	;# 
   157  0215                     	;# 
   158  0216                     	;# 
   159  0217                     	;# 
   160  0291                     	;# 
   161  0291                     	;# 
   162  0292                     	;# 
   163  0293                     	;# 
   164  0294                     	;# 
   165  0295                     	;# 
   166  0295                     	;# 
   167  0296                     	;# 
   168  0298                     	;# 
   169  0298                     	;# 
   170  0299                     	;# 
   171  029A                     	;# 
   172  029B                     	;# 
   173  029C                     	;# 
   174  029C                     	;# 
   175  029D                     	;# 
   176  029E                     	;# 
   177  029F                     	;# 
   178  0311                     	;# 
   179  0311                     	;# 
   180  0312                     	;# 
   181  0313                     	;# 
   182  0314                     	;# 
   183  0315                     	;# 
   184  0315                     	;# 
   185  0316                     	;# 
   186  0318                     	;# 
   187  0318                     	;# 
   188  0319                     	;# 
   189  031A                     	;# 
   190  031C                     	;# 
   191  031C                     	;# 
   192  031D                     	;# 
   193  031E                     	;# 
   194  0394                     	;# 
   195  0395                     	;# 
   196  0396                     	;# 
   197  0415                     	;# 
   198  0416                     	;# 
   199  0417                     	;# 
   200  041C                     	;# 
   201  041D                     	;# 
   202  041E                     	;# 
   203  0791                     	;# 
   204  0792                     	;# 
   205  0793                     	;# 
   206  0794                     	;# 
   207  0795                     	;# 
   208  0798                     	;# 
   209  0799                     	;# 
   210  07A0                     	;# 
   211  07A1                     	;# 
   212  07A3                     	;# 
   213  07A4                     	;# 
   214  07A6                     	;# 
   215  07A7                     	;# 
   216  07A9                     	;# 
   217  07AA                     	;# 
   218  0FE4                     	;# 
   219  0FE5                     	;# 
   220  0FE6                     	;# 
   221  0FE7                     	;# 
   222  0FE8                     	;# 
   223  0FE9                     	;# 
   224  0FEA                     	;# 
   225  0FEB                     	;# 
   226  0FED                     	;# 
   227  0FEE                     	;# 
   228  0FEF                     	;# 
   229  0000                     	;# 
   230  0001                     	;# 
   231  0002                     	;# 
   232  0003                     	;# 
   233  0004                     	;# 
   234  0005                     	;# 
   235  0006                     	;# 
   236  0007                     	;# 
   237  0008                     	;# 
   238  0009                     	;# 
   239  000A                     	;# 
   240  000B                     	;# 
   241  000C                     	;# 
   242  000D                     	;# 
   243  000E                     	;# 
   244  0010                     	;# 
   245  0011                     	;# 
   246  0012                     	;# 
   247  0013                     	;# 
   248  0015                     	;# 
   249  0016                     	;# 
   250  0016                     	;# 
   251  0017                     	;# 
   252  0018                     	;# 
   253  0019                     	;# 
   254  001A                     	;# 
   255  001B                     	;# 
   256  001C                     	;# 
   257  001E                     	;# 
   258  001F                     	;# 
   259  008C                     	;# 
   260  008D                     	;# 
   261  008E                     	;# 
   262  0090                     	;# 
   263  0091                     	;# 
   264  0092                     	;# 
   265  0093                     	;# 
   266  0095                     	;# 
   267  0096                     	;# 
   268  0097                     	;# 
   269  0098                     	;# 
   270  0099                     	;# 
   271  009A                     	;# 
   272  009B                     	;# 
   273  009B                     	;# 
   274  009C                     	;# 
   275  009D                     	;# 
   276  009E                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  0110                     	;# 
   281  0111                     	;# 
   282  0112                     	;# 
   283  0113                     	;# 
   284  0114                     	;# 
   285  0115                     	;# 
   286  0116                     	;# 
   287  0117                     	;# 
   288  0118                     	;# 
   289  0119                     	;# 
   290  011A                     	;# 
   291  011B                     	;# 
   292  011D                     	;# 
   293  018C                     	;# 
   294  018D                     	;# 
   295  0191                     	;# 
   296  0191                     	;# 
   297  0192                     	;# 
   298  0193                     	;# 
   299  0193                     	;# 
   300  0193                     	;# 
   301  0194                     	;# 
   302  0195                     	;# 
   303  0196                     	;# 
   304  0199                     	;# 
   305  019A                     	;# 
   306  019B                     	;# 
   307  019B                     	;# 
   308  019B                     	;# 
   309  019B                     	;# 
   310  019C                     	;# 
   311  019C                     	;# 
   312  019D                     	;# 
   313  019E                     	;# 
   314  019F                     	;# 
   315  020D                     	;# 
   316  0210                     	;# 
   317  0211                     	;# 
   318  0212                     	;# 
   319  0213                     	;# 
   320  0214                     	;# 
   321  0215                     	;# 
   322  0215                     	;# 
   323  0216                     	;# 
   324  0217                     	;# 
   325  0291                     	;# 
   326  0291                     	;# 
   327  0292                     	;# 
   328  0293                     	;# 
   329  0294                     	;# 
   330  0295                     	;# 
   331  0295                     	;# 
   332  0296                     	;# 
   333  0298                     	;# 
   334  0298                     	;# 
   335  0299                     	;# 
   336  029A                     	;# 
   337  029B                     	;# 
   338  029C                     	;# 
   339  029C                     	;# 
   340  029D                     	;# 
   341  029E                     	;# 
   342  029F                     	;# 
   343  0311                     	;# 
   344  0311                     	;# 
   345  0312                     	;# 
   346  0313                     	;# 
   347  0314                     	;# 
   348  0315                     	;# 
   349  0315                     	;# 
   350  0316                     	;# 
   351  0318                     	;# 
   352  0318                     	;# 
   353  0319                     	;# 
   354  031A                     	;# 
   355  031C                     	;# 
   356  031C                     	;# 
   357  031D                     	;# 
   358  031E                     	;# 
   359  0394                     	;# 
   360  0395                     	;# 
   361  0396                     	;# 
   362  0415                     	;# 
   363  0416                     	;# 
   364  0417                     	;# 
   365  041C                     	;# 
   366  041D                     	;# 
   367  041E                     	;# 
   368  0791                     	;# 
   369  0792                     	;# 
   370  0793                     	;# 
   371  0794                     	;# 
   372  0795                     	;# 
   373  0798                     	;# 
   374  0799                     	;# 
   375  07A0                     	;# 
   376  07A1                     	;# 
   377  07A3                     	;# 
   378  07A4                     	;# 
   379  07A6                     	;# 
   380  07A7                     	;# 
   381  07A9                     	;# 
   382  07AA                     	;# 
   383  0FE4                     	;# 
   384  0FE5                     	;# 
   385  0FE6                     	;# 
   386  0FE7                     	;# 
   387  0FE8                     	;# 
   388  0FE9                     	;# 
   389  0FEA                     	;# 
   390  0FEB                     	;# 
   391  0FED                     	;# 
   392  0FEE                     	;# 
   393  0FEF                     	;# 
   394                           
   395                           	psect	idataBANK0
   396  030F                     __pidataBANK0:
   397                           
   398                           ;initializer for _mojn
   399  030F  3454               	retlw	84
   400  0310  3400               	retlw	0
   401  0311  3473               	retlw	115
   402  0312  3400               	retlw	0
   403                           
   404                           ;initializer for _mojh
   405  0313  3476               	retlw	118
   406  0314  3400               	retlw	0
   407  0315  3438               	retlw	56
   408  0316  3400               	retlw	0
   409                           
   410                           	psect	idataBANK1
   411  04A0                     __pidataBANK1:
   412                           
   413                           ;initializer for _samp
   414  04A0  343F               	retlw	63
   415  04A1  3400               	retlw	0
   416  04A2  3406               	retlw	6
   417  04A3  3400               	retlw	0
   418  04A4  345B               	retlw	91
   419  04A5  3400               	retlw	0
   420  04A6  344F               	retlw	79
   421  04A7  3400               	retlw	0
   422  04A8  3466               	retlw	102
   423  04A9  3400               	retlw	0
   424  04AA  346D               	retlw	109
   425  04AB  3400               	retlw	0
   426  04AC  347D               	retlw	125
   427  04AD  3400               	retlw	0
   428  04AE  3427               	retlw	39
   429  04AF  3400               	retlw	0
   430  04B0  347F               	retlw	127
   431  04B1  3400               	retlw	0
   432  04B2  346F               	retlw	111
   433  04B3  3400               	retlw	0
   434  04B4  345F               	retlw	95
   435  04B5  3400               	retlw	0
   436  04B6  347C               	retlw	124
   437  04B7  3400               	retlw	0
   438  04B8  3458               	retlw	88
   439  04B9  3400               	retlw	0
   440  04BA  345E               	retlw	94
   441  04BB  3400               	retlw	0
   442  04BC  3479               	retlw	121
   443  04BD  3400               	retlw	0
   444  04BE  3471               	retlw	113
   445  04BF  3400               	retlw	0
   446                           
   447                           ;initializer for _mojf
   448  04C0  3471               	retlw	113
   449  04C1  3400               	retlw	0
   450  04C2  3479               	retlw	121
   451  04C3  3400               	retlw	0
   452  04C4  345E               	retlw	94
   453  04C5  3400               	retlw	0
   454  04C6  3458               	retlw	88
   455  04C7  3400               	retlw	0
   456  04C8  347C               	retlw	124
   457  04C9  3400               	retlw	0
   458  04CA  345F               	retlw	95
   459  04CB  3400               	retlw	0
   460                           
   461                           ;initializer for _moja
   462  04CC  345F               	retlw	95
   463  04CD  3400               	retlw	0
   464  04CE  347C               	retlw	124
   465  04CF  3400               	retlw	0
   466  04D0  3458               	retlw	88
   467  04D1  3400               	retlw	0
   468  04D2  345E               	retlw	94
   469  04D3  3400               	retlw	0
   470  04D4  3479               	retlw	121
   471  04D5  3400               	retlw	0
   472  04D6  3471               	retlw	113
   473  04D7  3400               	retlw	0
   474                           
   475                           ;initializer for _kisu
   476  04D8  3406               	retlw	6
   477  04D9  3400               	retlw	0
   478  04DA  344F               	retlw	79
   479  04DB  3400               	retlw	0
   480  04DC  346D               	retlw	109
   481  04DD  3400               	retlw	0
   482  04DE  3427               	retlw	39
   483  04DF  3400               	retlw	0
   484  04E0  346F               	retlw	111
   485  04E1  3400               	retlw	0
   486                           
   487                           ;initializer for _gusu
   488  04E2  343F               	retlw	63
   489  04E3  3400               	retlw	0
   490  04E4  345B               	retlw	91
   491  04E5  3400               	retlw	0
   492  04E6  3466               	retlw	102
   493  04E7  3400               	retlw	0
   494  04E8  347D               	retlw	125
   495  04E9  3400               	retlw	0
   496  04EA  347F               	retlw	127
   497  04EB  3400               	retlw	0
   498                           
   499                           	psect	idataBANK2
   500  040D                     __pidataBANK2:
   501                           
   502                           ;initializer for _samf
   503  040D  3471               	retlw	113
   504  040E  3400               	retlw	0
   505  040F  3479               	retlw	121
   506  0410  3400               	retlw	0
   507  0411  345E               	retlw	94
   508  0412  3400               	retlw	0
   509  0413  3458               	retlw	88
   510  0414  3400               	retlw	0
   511  0415  347C               	retlw	124
   512  0416  3400               	retlw	0
   513  0417  345F               	retlw	95
   514  0418  3400               	retlw	0
   515  0419  346F               	retlw	111
   516  041A  3400               	retlw	0
   517  041B  347F               	retlw	127
   518  041C  3400               	retlw	0
   519  041D  3427               	retlw	39
   520  041E  3400               	retlw	0
   521  041F  347D               	retlw	125
   522  0420  3400               	retlw	0
   523  0421  346D               	retlw	109
   524  0422  3400               	retlw	0
   525  0423  3466               	retlw	102
   526  0424  3400               	retlw	0
   527  0425  344F               	retlw	79
   528  0426  3400               	retlw	0
   529  0427  345B               	retlw	91
   530  0428  3400               	retlw	0
   531  0429  3406               	retlw	6
   532  042A  3400               	retlw	0
   533  042B  343F               	retlw	63
   534  042C  3400               	retlw	0
   535                           
   536                           ;initializer for _moji
   537  042D  345F               	retlw	95
   538  042E  3400               	retlw	0
   539  042F  347C               	retlw	124
   540  0430  3400               	retlw	0
   541  0431  3458               	retlw	88
   542  0432  3400               	retlw	0
   543  0433  345E               	retlw	94
   544  0434  3400               	retlw	0
   545  0435  3479               	retlw	121
   546  0436  3400               	retlw	0
   547  0437  3471               	retlw	113
   548  0438  3400               	retlw	0
   549  0439  3476               	retlw	118
   550  043A  3400               	retlw	0
   551  043B  3438               	retlw	56
   552  043C  3400               	retlw	0
   553  043D  3454               	retlw	84
   554  043E  3400               	retlw	0
   555  043F  3473               	retlw	115
   556  0440  3400               	retlw	0
   557                           
   558                           ;initializer for _num0
   559  0441  343F               	retlw	63
   560  0442  3400               	retlw	0
   561  0443  3406               	retlw	6
   562  0444  3400               	retlw	0
   563  0445  345B               	retlw	91
   564  0446  3400               	retlw	0
   565  0447  344F               	retlw	79
   566  0448  3400               	retlw	0
   567  0449  3466               	retlw	102
   568  044A  3400               	retlw	0
   569  044B  346D               	retlw	109
   570  044C  3400               	retlw	0
   571  044D  347D               	retlw	125
   572  044E  3400               	retlw	0
   573  044F  3427               	retlw	39
   574  0450  3400               	retlw	0
   575  0451  347F               	retlw	127
   576  0452  3400               	retlw	0
   577  0453  346F               	retlw	111
   578  0454  3400               	retlw	0
   579  000E                     _PORTC	set	14
   580  000D                     _PORTB	set	13
   581  000C                     _PORTA	set	12
   582  0061                     _RA1	set	97
   583  0060                     _RA0	set	96
   584  0062                     _RA2	set	98
   585  0077                     _RC7	set	119
   586  0070                     _RC0	set	112
   587  0071                     _RC1	set	113
   588  0072                     _RC2	set	114
   589  0076                     _RC6	set	118
   590  0075                     _RC5	set	117
   591  0099                     _OSCCON	set	153
   592  008E                     _TRISC	set	142
   593  008D                     _TRISB	set	141
   594  008C                     _TRISA	set	140
   595  018D                     _ANSELB	set	397
   596  018C                     _ANSELA	set	396
   597                           
   598                           	psect	cinit
   599  07D1                     start_initialization:	
   600                           ; #config settings
   601                           
   602  07D1                     __initialization:
   603                           
   604                           ; Initialize objects allocated to BANK0
   605  07D1  300F               	movlw	low __pidataBANK0
   606  07D2  0084               	movwf	4
   607  07D3  3083               	movlw	(high __pidataBANK0)| (0+128)
   608  07D4  0085               	movwf	5
   609  07D5  3068               	movlw	low __pdataBANK0
   610  07D6  0086               	movwf	6
   611  07D7  3000               	movlw	high __pdataBANK0
   612  07D8  0087               	movwf	7
   613  07D9  3008               	movlw	8
   614  07DA  3183  2309  3187   	fcall	init_ram
   615                           
   616                           ; Initialize objects allocated to BANK1
   617  07DD  30A0               	movlw	low __pidataBANK1
   618  07DE  0084               	movwf	4
   619  07DF  3084               	movlw	(high __pidataBANK1)| (0+128)
   620  07E0  0085               	movwf	5
   621  07E1  30A0               	movlw	low __pdataBANK1
   622  07E2  0086               	movwf	6
   623  07E3  3000               	movlw	high __pdataBANK1
   624  07E4  0087               	movwf	7
   625  07E5  304C               	movlw	76
   626  07E6  3183  2309  3187   	fcall	init_ram
   627                           
   628                           ; Initialize objects allocated to BANK2
   629  07E9  300D               	movlw	low __pidataBANK2
   630  07EA  0084               	movwf	4
   631  07EB  3084               	movlw	(high __pidataBANK2)| (0+128)
   632  07EC  0085               	movwf	5
   633  07ED  3020               	movlw	low __pdataBANK2
   634  07EE  0086               	movwf	6
   635  07EF  3001               	movlw	high __pdataBANK2
   636  07F0  0087               	movwf	7
   637  07F1  3048               	movlw	72
   638  07F2  3183  2309  3187   	fcall	init_ram
   639                           
   640                           ; Clear objects allocated to BANK0
   641  07F5  3046               	movlw	low __pbssBANK0
   642  07F6  0084               	movwf	4
   643  07F7  3000               	movlw	high __pbssBANK0
   644  07F8  0085               	movwf	5
   645  07F9  3022               	movlw	34
   646  07FA  3183  2303  3187   	fcall	clear_ram0
   647  07FD                     end_of_initialization:	
   648                           ;End of C runtime variable initialization code
   649                           
   650  07FD                     __end_of__initialization:
   651  07FD  0020               	movlb	0
   652  07FE  3185  2D39         	ljmp	_main	;jump to C main() function
   653                           
   654                           	psect	bssBANK0
   655  0046                     __pbssBANK0:
   656  0046                     _fugou:
   657  0046                     	ds	2
   658  0048                     _code1:
   659  0048                     	ds	2
   660  004A                     _code10:
   661  004A                     	ds	2
   662  004C                     _code100:
   663  004C                     	ds	2
   664  004E                     _code1000:
   665  004E                     	ds	2
   666  0050                     _count:
   667  0050                     	ds	2
   668  0052                     _atai:
   669  0052                     	ds	2
   670  0054                     _atai1:
   671  0054                     	ds	2
   672  0056                     _atai10:
   673  0056                     	ds	2
   674  0058                     _ccw:
   675  0058                     	ds	2
   676  005A                     _cw:
   677  005A                     	ds	2
   678  005C                     _flg:
   679  005C                     	ds	2
   680  005E                     _flag_P:
   681  005E                     	ds	2
   682  0060                     _flag_R:
   683  0060                     	ds	2
   684  0062                     _flag_sw3:
   685  0062                     	ds	2
   686  0064                     _flag_sw2:
   687  0064                     	ds	2
   688  0066                     _flag_sw1:
   689  0066                     	ds	2
   690                           
   691                           	psect	dataBANK0
   692  0068                     __pdataBANK0:
   693  0068                     _mojn:
   694  0068                     	ds	4
   695  006C                     _mojh:
   696  006C                     	ds	4
   697                           
   698                           	psect	dataBANK1
   699  00A0                     __pdataBANK1:
   700  00A0                     _samp:
   701  00A0                     	ds	32
   702  00C0                     _mojf:
   703  00C0                     	ds	12
   704  00CC                     _moja:
   705  00CC                     	ds	12
   706  00D8                     _kisu:
   707  00D8                     	ds	10
   708  00E2                     _gusu:
   709  00E2                     	ds	10
   710                           
   711                           	psect	dataBANK2
   712  0120                     __pdataBANK2:
   713  0120                     _samf:
   714  0120                     	ds	32
   715  0140                     _moji:
   716  0140                     	ds	20
   717  0154                     _num0:
   718  0154                     	ds	20
   719                           
   720                           	psect	inittext
   721  0309                     init_ram:
   722  0309  00FE               	movwf	btemp
   723  030A                     initloop:
   724  030A  0012               	moviw fsr0++
   725  030B  001E               	movwi fsr1++
   726  030C  0BFE               	decfsz	btemp,f
   727  030D  2B0A               	goto	initloop
   728  030E  3400               	retlw	0
   729                           
   730                           	psect	clrtext
   731  0303                     clear_ram0:	
   732                           ;	Called with FSR0 containing the base address, and
   733                           ;	WREG with the size to clear
   734                           
   735  0303  0064               	clrwdt	;clear the watchdog before getting into this loop
   736  0304                     clrloop0:
   737  0304  0180               	clrf	0	;clear RAM location pointed to by FSR
   738  0305  3101               	addfsr 0,1
   739  0306  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   740  0307  2B04               	goto	clrloop0	;have we reached the end yet?
   741  0308  3400               	retlw	0	;all done for this memory range, return
   742                           
   743                           	psect	cstackCOMMON
   744  0070                     __pcstackCOMMON:
   745  0070                     ?_portinit:
   746  0070                     ??_portinit:	
   747                           ; 1 bytes @ 0x0
   748                           
   749  0070                     ?_zenoff:	
   750                           ; 1 bytes @ 0x0
   751                           
   752  0070                     ??_zenoff:	
   753                           ; 1 bytes @ 0x0
   754                           
   755  0070                     ?_dynam:	
   756                           ; 1 bytes @ 0x0
   757                           
   758  0070                     ?_tactsw:	
   759                           ; 1 bytes @ 0x0
   760                           
   761  0070                     ??_tactsw:	
   762                           ; 1 bytes @ 0x0
   763                           
   764  0070                     ?_fclr:	
   765                           ; 1 bytes @ 0x0
   766                           
   767  0070                     ?_jikan:	
   768                           ; 1 bytes @ 0x0
   769                           
   770  0070                     ??_jikan:	
   771                           ; 1 bytes @ 0x0
   772                           
   773  0070                     ?_main:	
   774                           ; 1 bytes @ 0x0
   775                           
   776  0070                     ?___lwdiv:	
   777                           ; 1 bytes @ 0x0
   778                           
   779  0070                     dynam@dig1data:	
   780                           ; 2 bytes @ 0x0
   781                           
   782  0070                     fclr@flg:	
   783                           ; 2 bytes @ 0x0
   784                           
   785  0070                     ___lwdiv@divisor:	
   786                           ; 2 bytes @ 0x0
   787                           
   788                           
   789                           ; 2 bytes @ 0x0
   790  0070                     	ds	2
   791  0072                     ??_fclr:
   792  0072                     dynam@dig2data:	
   793                           ; 1 bytes @ 0x2
   794                           
   795  0072                     tactsw@b:	
   796                           ; 2 bytes @ 0x2
   797                           
   798  0072                     ___lwdiv@dividend:	
   799                           ; 2 bytes @ 0x2
   800                           
   801                           
   802                           ; 2 bytes @ 0x2
   803  0072                     	ds	2
   804  0074                     ??___lwdiv:
   805  0074                     dynam@smdata:	
   806                           ; 1 bytes @ 0x4
   807                           
   808  0074                     tactsw@c:	
   809                           ; 2 bytes @ 0x4
   810                           
   811                           
   812                           ; 2 bytes @ 0x4
   813  0074                     	ds	1
   814  0075                     ___lwdiv@quotient:
   815                           
   816                           ; 2 bytes @ 0x5
   817  0075                     	ds	1
   818  0076                     dynam@tr:
   819  0076                     tactsw@a:	
   820                           ; 2 bytes @ 0x6
   821                           
   822                           
   823                           ; 2 bytes @ 0x6
   824  0076                     	ds	1
   825  0077                     ___lwdiv@counter:
   826                           
   827                           ; 1 bytes @ 0x7
   828  0077                     	ds	1
   829  0078                     ??_dynam:
   830  0078                     ?_tact:	
   831                           ; 1 bytes @ 0x8
   832                           
   833  0078                     ??_waitSEG:	
   834                           ; 1 bytes @ 0x8
   835                           
   836  0078                     tact@mode:	
   837                           ; 1 bytes @ 0x8
   838                           
   839  0078                     waitSEG@i:	
   840                           ; 2 bytes @ 0x8
   841                           
   842                           
   843                           ; 2 bytes @ 0x8
   844  0078                     	ds	2
   845  007A                     ??_tact:
   846  007A                     ?_kaisu:	
   847                           ; 1 bytes @ 0xA
   848                           
   849  007A                     kaisu@mode1:	
   850                           ; 1 bytes @ 0xA
   851                           
   852                           
   853                           ; 2 bytes @ 0xA
   854  007A                     	ds	2
   855  007C                     ??_kaisu:
   856  007C                     ??_main:	
   857                           ; 1 bytes @ 0xC
   858                           
   859                           
   860                           ; 1 bytes @ 0xC
   861  007C                     	ds	1
   862                           
   863                           	psect	cstackBANK0
   864  0020                     __pcstackBANK0:
   865  0020                     dynam@smd:
   866                           
   867                           ; 2 bytes @ 0x0
   868  0020                     	ds	2
   869  0022                     dynam@tm:
   870                           
   871                           ; 2 bytes @ 0x2
   872  0022                     	ds	2
   873  0024                     dynam@j:
   874                           
   875                           ; 2 bytes @ 0x4
   876  0024                     	ds	2
   877  0026                     dynam@ext:
   878                           
   879                           ; 2 bytes @ 0x6
   880  0026                     	ds	2
   881  0028                     ?_waitSEG:
   882  0028                     waitSEG@seg1:	
   883                           ; 1 bytes @ 0x8
   884                           
   885                           
   886                           ; 2 bytes @ 0x8
   887  0028                     	ds	2
   888  002A                     waitSEG@seg2:
   889                           
   890                           ; 2 bytes @ 0xA
   891  002A                     	ds	2
   892  002C                     waitSEG@wt:
   893                           
   894                           ; 2 bytes @ 0xC
   895  002C                     	ds	24
   896  0044                     main@segL:
   897                           
   898                           ; 2 bytes @ 0x24
   899  0044                     	ds	2
   900                           
   901                           	psect	maintext
   902  0539                     __pmaintext:	
   903 ;;
   904 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   905 ;;
   906 ;; *************** function _main *****************
   907 ;; Defined at:
   908 ;;		line 768 in file "Q5.c"
   909 ;; Parameters:    Size  Location     Type
   910 ;;		None
   911 ;; Auto vars:     Size  Location     Type
   912 ;;  segL            2   36[BANK0 ] unsigned short 
   913 ;;  zyoutai         2    0        int 
   914 ;;  ataiR           2    0        int 
   915 ;;  ataiL           2    0        int 
   916 ;;  segR            2    0        unsigned short 
   917 ;;  ans             2    0        int 
   918 ;;  time            2    0        int 
   919 ;;  n               2    0        int 
   920 ;;  m               2    0        int 
   921 ;;  k               2    0        int 
   922 ;;  j               2    0        int 
   923 ;;  i               2    0        int 
   924 ;; Return value:  Size  Location     Type
   925 ;;                  1    wreg      void 
   926 ;; Registers used:
   927 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   928 ;; Tracked objects:
   929 ;;		On entry : B1F/0
   930 ;;		On exit  : 0/0
   931 ;;		Unchanged: 0/0
   932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   934 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
   935 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   936 ;;      Totals:         1      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
   937 ;;Total ram usage:       25 bytes
   938 ;; Hardware stack levels required when called:    3
   939 ;; This function calls:
   940 ;;		_dynam
   941 ;;		_fclr
   942 ;;		_jikan
   943 ;;		_kaisu
   944 ;;		_portinit
   945 ;;		_waitSEG
   946 ;;		_zenoff
   947 ;; This function is called by:
   948 ;;		Startup code after reset
   949 ;; This function uses a non-reentrant model
   950 ;;
   951                           
   952                           
   953                           ;psect for function _main
   954  0539                     _main:
   955  0539                     l3153:	
   956                           ;incstack = 0
   957                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   958                           
   959                           
   960                           ;Q5.c: 771:     OSCCON=0x7A;
   961  0539  307A               	movlw	122
   962  053A  0021               	movlb	1	; select bank1
   963  053B  0099               	movwf	25	;volatile
   964  053C                     l3155:
   965                           
   966                           ;Q5.c: 773:     portinit();
   967  053C  3183  232D  3185   	fcall	_portinit
   968                           
   969                           ;Q5.c: 775:     zenoff();
   970  053F  3183  2317  3185   	fcall	_zenoff
   971  0542                     l3157:
   972  0542                     l3159:
   973  0542                     l3161:
   974  0542                     l3163:
   975  0542                     l3165:
   976  0542                     l356:	
   977                           ;Q5.c: 780:     while((RA0!=1)||(RA1!=1)||(RA2!=1));
   978                           
   979  0542  0020               	movlb	0	; select bank0
   980  0543  1C0C               	btfss	12,0	;volatile
   981  0544  2D46               	goto	u3231
   982  0545  2D47               	goto	u3230
   983  0546                     u3231:
   984  0546  2D42               	goto	l356
   985  0547                     u3230:
   986  0547                     l3167:
   987  0547  1C8C               	btfss	12,1	;volatile
   988  0548  2D4A               	goto	u3241
   989  0549  2D4B               	goto	u3240
   990  054A                     u3241:
   991  054A  2D42               	goto	l356
   992  054B                     u3240:
   993  054B                     l3169:
   994  054B  1D0C               	btfss	12,2	;volatile
   995  054C  2D4E               	goto	u3251
   996  054D  2D4F               	goto	u3250
   997  054E                     u3251:
   998  054E  2D42               	goto	l356
   999  054F                     u3250:
  1000  054F                     l359:	
  1001                           ;Q5.c: 784:     hukki:
  1002                           
  1003                           
  1004                           ;Q5.c: 787:     RC2=RC0=RC1=1;
  1005  054F  148E               	bsf	14,1	;volatile
  1006  0550  188E               	btfsc	14,1	;volatile
  1007  0551  2D53               	goto	u3261
  1008  0552  2D56               	goto	u3260
  1009  0553                     u3261:
  1010  0553  0020               	movlb	0	; select bank0
  1011  0554  140E               	bsf	14,0	;volatile
  1012  0555  2D58               	goto	u3274
  1013  0556                     u3260:
  1014  0556  0020               	movlb	0	; select bank0
  1015  0557  100E               	bcf	14,0	;volatile
  1016  0558                     u3274:
  1017  0558  180E               	btfsc	14,0	;volatile
  1018  0559  2D5B               	goto	u3271
  1019  055A  2D5E               	goto	u3270
  1020  055B                     u3271:
  1021  055B  0020               	movlb	0	; select bank0
  1022  055C  150E               	bsf	14,2	;volatile
  1023  055D  2D60               	goto	u3284
  1024  055E                     u3270:
  1025  055E  0020               	movlb	0	; select bank0
  1026  055F  110E               	bcf	14,2	;volatile
  1027  0560                     u3284:
  1028  0560                     l3171:
  1029                           
  1030                           ;Q5.c: 790:     fclr(2);
  1031  0560  3002               	movlw	2
  1032  0561  00F0               	movwf	fclr@flg
  1033  0562  3000               	movlw	0
  1034  0563  00F1               	movwf	fclr@flg+1
  1035  0564  3183  2340  3185   	fcall	_fclr
  1036  0567                     l3173:
  1037  0567                     l3175:
  1038  0567                     l3177:
  1039                           
  1040                           ;Q5.c: 804:     unsigned short segL = 0;
  1041  0567  0020               	movlb	0	; select bank0
  1042  0568  01C4               	clrf	main@segL
  1043  0569  01C5               	clrf	main@segL+1
  1044  056A                     l3179:
  1045  056A                     l3181:
  1046  056A                     l3183:
  1047  056A                     l3185:
  1048  056A                     l3187:
  1049                           
  1050                           ;Q5.c: 817:         dynam(segL,0,0,0);
  1051  056A  0020               	movlb	0	; select bank0
  1052  056B  0845               	movf	main@segL+1,w
  1053  056C  00F1               	movwf	dynam@dig1data+1
  1054  056D  0844               	movf	main@segL,w
  1055  056E  00F0               	movwf	dynam@dig1data
  1056  056F  3000               	movlw	0
  1057  0570  00F2               	movwf	dynam@dig2data
  1058  0571  00F3               	movwf	dynam@dig2data+1
  1059  0572  3000               	movlw	0
  1060  0573  00F4               	movwf	dynam@smdata
  1061  0574  00F5               	movwf	dynam@smdata+1
  1062  0575  3000               	movlw	0
  1063  0576  00F6               	movwf	dynam@tr
  1064  0577  00F7               	movwf	dynam@tr+1
  1065  0578  3186  2667  3185   	fcall	_dynam
  1066  057B                     l3189:
  1067                           
  1068                           ;Q5.c: 819:         kaisu(0);
  1069  057B  3000               	movlw	0
  1070  057C  00FA               	movwf	kaisu@mode1
  1071  057D  00FB               	movwf	kaisu@mode1+1
  1072  057E  3184  24EC  3185   	fcall	_kaisu
  1073                           
  1074                           ;Q5.c: 821:         switch(count){
  1075  0581  2D95               	goto	l3199
  1076  0582                     l3191:
  1077  0582  3008               	movlw	8
  1078  0583  00C4               	movwf	main@segL
  1079  0584  3000               	movlw	0
  1080  0585  00C5               	movwf	main@segL+1
  1081                           
  1082                           ;Q5.c: 823:                     break;
  1083  0586  2DA6               	goto	l3201
  1084  0587                     l3193:
  1085  0587  3001               	movlw	1
  1086  0588  00C4               	movwf	main@segL
  1087  0589  3000               	movlw	0
  1088  058A  00C5               	movwf	main@segL+1
  1089                           
  1090                           ;Q5.c: 826:                     break;
  1091  058B  2DA6               	goto	l3201
  1092  058C                     l3195:
  1093  058C  3009               	movlw	9
  1094  058D  00C4               	movwf	main@segL
  1095  058E  3000               	movlw	0
  1096  058F  00C5               	movwf	main@segL+1
  1097                           
  1098                           ;Q5.c: 829:                     count = 1;
  1099  0590  3001               	movlw	1
  1100  0591  00D0               	movwf	_count
  1101  0592  3000               	movlw	0
  1102  0593  00D1               	movwf	_count+1
  1103                           
  1104                           ;Q5.c: 830:                     break;
  1105  0594  2DA6               	goto	l3201
  1106  0595                     l3199:
  1107                           
  1108                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1109                           ; Switch size 1, requested type "simple"
  1110                           ; Number of cases is 1, Range of values is 0 to 0
  1111                           ; switch strategies available:
  1112                           ; Name         Instructions Cycles
  1113                           ; simple_byte            4     3 (average)
  1114                           ; direct_byte            8     6 (fixed)
  1115                           ; jumptable            260     6 (fixed)
  1116                           ;	Chosen strategy is simple_byte
  1117  0595  0020               	movlb	0	; select bank0
  1118  0596  0851               	movf	_count+1,w
  1119  0597  3A00               	xorlw	0	; case 0
  1120  0598  1903               	skipnz
  1121  0599  2D9B               	goto	l3449
  1122  059A  2DA6               	goto	l3201
  1123  059B                     l3449:
  1124                           
  1125                           ; Switch size 1, requested type "simple"
  1126                           ; Number of cases is 3, Range of values is 1 to 3
  1127                           ; switch strategies available:
  1128                           ; Name         Instructions Cycles
  1129                           ; simple_byte           10     6 (average)
  1130                           ; direct_byte           15     9 (fixed)
  1131                           ; jumptable            263     9 (fixed)
  1132                           ;	Chosen strategy is simple_byte
  1133  059B  0850               	movf	_count,w
  1134  059C  3A01               	xorlw	1	; case 1
  1135  059D  1903               	skipnz
  1136  059E  2D82               	goto	l3191
  1137  059F  3A03               	xorlw	3	; case 2
  1138  05A0  1903               	skipnz
  1139  05A1  2D87               	goto	l3193
  1140  05A2  3A01               	xorlw	1	; case 3
  1141  05A3  1903               	skipnz
  1142  05A4  2D8C               	goto	l3195
  1143  05A5  2DA6               	goto	l3201
  1144  05A6                     l3201:
  1145                           
  1146                           ;Q5.c: 836:         if(segL != 0 && RA0 ==0 &&RA1 ==1){
  1147  05A6  0844               	movf	main@segL,w
  1148  05A7  0445               	iorwf	main@segL+1,w
  1149  05A8  1903               	btfsc	3,2
  1150  05A9  2DAB               	goto	u3291
  1151  05AA  2DAC               	goto	u3290
  1152  05AB                     u3291:
  1153  05AB  2DE4               	goto	l3213
  1154  05AC                     u3290:
  1155  05AC                     l3203:
  1156  05AC  180C               	btfsc	12,0	;volatile
  1157  05AD  2DAF               	goto	u3301
  1158  05AE  2DB0               	goto	u3300
  1159  05AF                     u3301:
  1160  05AF  2DE4               	goto	l3213
  1161  05B0                     u3300:
  1162  05B0                     l3205:
  1163  05B0  1C8C               	btfss	12,1	;volatile
  1164  05B1  2DB3               	goto	u3311
  1165  05B2  2DB4               	goto	u3310
  1166  05B3                     u3311:
  1167  05B3  2DE4               	goto	l3213
  1168  05B4                     u3310:
  1169  05B4                     l3207:
  1170                           
  1171                           ;Q5.c: 837:             jikan();
  1172  05B4  3183  2320  3185   	fcall	_jikan
  1173  05B7                     l3209:
  1174                           
  1175                           ;Q5.c: 838:             if(count >= 500){
  1176  05B7  0020               	movlb	0	; select bank0
  1177  05B8  0851               	movf	_count+1,w
  1178  05B9  3A80               	xorlw	128
  1179  05BA  00FC               	movwf	??_main
  1180  05BB  3081               	movlw	129
  1181  05BC  027C               	subwf	??_main,w
  1182  05BD  1D03               	skipz
  1183  05BE  2DC1               	goto	u3325
  1184  05BF  30F4               	movlw	244
  1185  05C0  0250               	subwf	_count,w
  1186  05C1                     u3325:
  1187  05C1  1C03               	skipc
  1188  05C2  2DC4               	goto	u3321
  1189  05C3  2DC5               	goto	u3320
  1190  05C4                     u3321:
  1191  05C4  2DE4               	goto	l3213
  1192  05C5                     u3320:
  1193  05C5                     l3211:
  1194                           
  1195                           ;Q5.c: 839:                 waitSEG(segL,0x04|0x10|0x40,1000);
  1196  05C5  0020               	movlb	0	; select bank0
  1197  05C6  0845               	movf	main@segL+1,w
  1198  05C7  00A9               	movwf	waitSEG@seg1+1
  1199  05C8  0844               	movf	main@segL,w
  1200  05C9  00A8               	movwf	waitSEG@seg1
  1201  05CA  3054               	movlw	84
  1202  05CB  00AA               	movwf	waitSEG@seg2
  1203  05CC  3000               	movlw	0
  1204  05CD  00AB               	movwf	waitSEG@seg2+1
  1205  05CE  30E8               	movlw	232
  1206  05CF  00AC               	movwf	waitSEG@wt
  1207  05D0  3003               	movlw	3
  1208  05D1  00AD               	movwf	waitSEG@wt+1
  1209  05D2  3183  2360  3185   	fcall	_waitSEG
  1210                           
  1211                           ;Q5.c: 840:                 waitSEG(segL,0,1000);
  1212  05D5  0020               	movlb	0	; select bank0
  1213  05D6  0845               	movf	main@segL+1,w
  1214  05D7  00A9               	movwf	waitSEG@seg1+1
  1215  05D8  0844               	movf	main@segL,w
  1216  05D9  00A8               	movwf	waitSEG@seg1
  1217  05DA  3000               	movlw	0
  1218  05DB  00AA               	movwf	waitSEG@seg2
  1219  05DC  00AB               	movwf	waitSEG@seg2+1
  1220  05DD  30E8               	movlw	232
  1221  05DE  00AC               	movwf	waitSEG@wt
  1222  05DF  3003               	movlw	3
  1223  05E0  00AD               	movwf	waitSEG@wt+1
  1224  05E1  3183  2360  3185   	fcall	_waitSEG
  1225  05E4                     l3213:
  1226                           
  1227                           ;Q5.c: 845:         if(segL != 0 && RA0 ==1 &&RA1 ==0){
  1228  05E4  0020               	movlb	0	; select bank0
  1229  05E5  0844               	movf	main@segL,w
  1230  05E6  0445               	iorwf	main@segL+1,w
  1231  05E7  1903               	btfsc	3,2
  1232  05E8  2DEA               	goto	u3331
  1233  05E9  2DEB               	goto	u3330
  1234  05EA                     u3331:
  1235  05EA  2E23               	goto	l3225
  1236  05EB                     u3330:
  1237  05EB                     l3215:
  1238  05EB  1C0C               	btfss	12,0	;volatile
  1239  05EC  2DEE               	goto	u3341
  1240  05ED  2DEF               	goto	u3340
  1241  05EE                     u3341:
  1242  05EE  2E23               	goto	l3225
  1243  05EF                     u3340:
  1244  05EF                     l3217:
  1245  05EF  188C               	btfsc	12,1	;volatile
  1246  05F0  2DF2               	goto	u3351
  1247  05F1  2DF3               	goto	u3350
  1248  05F2                     u3351:
  1249  05F2  2E23               	goto	l3225
  1250  05F3                     u3350:
  1251  05F3                     l3219:
  1252                           
  1253                           ;Q5.c: 846:             jikan();
  1254  05F3  3183  2320  3185   	fcall	_jikan
  1255  05F6                     l3221:
  1256                           
  1257                           ;Q5.c: 847:             if(count >= 500){
  1258  05F6  0020               	movlb	0	; select bank0
  1259  05F7  0851               	movf	_count+1,w
  1260  05F8  3A80               	xorlw	128
  1261  05F9  00FC               	movwf	??_main
  1262  05FA  3081               	movlw	129
  1263  05FB  027C               	subwf	??_main,w
  1264  05FC  1D03               	skipz
  1265  05FD  2E00               	goto	u3365
  1266  05FE  30F4               	movlw	244
  1267  05FF  0250               	subwf	_count,w
  1268  0600                     u3365:
  1269  0600  1C03               	skipc
  1270  0601  2E03               	goto	u3361
  1271  0602  2E04               	goto	u3360
  1272  0603                     u3361:
  1273  0603  2E23               	goto	l3225
  1274  0604                     u3360:
  1275  0604                     l3223:
  1276                           
  1277                           ;Q5.c: 848:                 waitSEG(segL,0x02|0x20|0x40,1000);
  1278  0604  0020               	movlb	0	; select bank0
  1279  0605  0845               	movf	main@segL+1,w
  1280  0606  00A9               	movwf	waitSEG@seg1+1
  1281  0607  0844               	movf	main@segL,w
  1282  0608  00A8               	movwf	waitSEG@seg1
  1283  0609  3062               	movlw	98
  1284  060A  00AA               	movwf	waitSEG@seg2
  1285  060B  3000               	movlw	0
  1286  060C  00AB               	movwf	waitSEG@seg2+1
  1287  060D  30E8               	movlw	232
  1288  060E  00AC               	movwf	waitSEG@wt
  1289  060F  3003               	movlw	3
  1290  0610  00AD               	movwf	waitSEG@wt+1
  1291  0611  3183  2360  3185   	fcall	_waitSEG
  1292                           
  1293                           ;Q5.c: 849:                 waitSEG(segL,0,1000);
  1294  0614  0020               	movlb	0	; select bank0
  1295  0615  0845               	movf	main@segL+1,w
  1296  0616  00A9               	movwf	waitSEG@seg1+1
  1297  0617  0844               	movf	main@segL,w
  1298  0618  00A8               	movwf	waitSEG@seg1
  1299  0619  3000               	movlw	0
  1300  061A  00AA               	movwf	waitSEG@seg2
  1301  061B  00AB               	movwf	waitSEG@seg2+1
  1302  061C  30E8               	movlw	232
  1303  061D  00AC               	movwf	waitSEG@wt
  1304  061E  3003               	movlw	3
  1305  061F  00AD               	movwf	waitSEG@wt+1
  1306  0620  3183  2360  3185   	fcall	_waitSEG
  1307  0623                     l3225:
  1308                           
  1309                           ;Q5.c: 854:         if(segL != 0 && RA0 ==0 &&RA1 ==0){
  1310  0623  0020               	movlb	0	; select bank0
  1311  0624  0844               	movf	main@segL,w
  1312  0625  0445               	iorwf	main@segL+1,w
  1313  0626  1903               	btfsc	3,2
  1314  0627  2E29               	goto	u3371
  1315  0628  2E2A               	goto	u3370
  1316  0629                     u3371:
  1317  0629  2D6A               	goto	l3187
  1318  062A                     u3370:
  1319  062A                     l3227:
  1320  062A  180C               	btfsc	12,0	;volatile
  1321  062B  2E2D               	goto	u3381
  1322  062C  2E2E               	goto	u3380
  1323  062D                     u3381:
  1324  062D  2D6A               	goto	l3187
  1325  062E                     u3380:
  1326  062E                     l3229:
  1327  062E  188C               	btfsc	12,1	;volatile
  1328  062F  2E31               	goto	u3391
  1329  0630  2E32               	goto	u3390
  1330  0631                     u3391:
  1331  0631  2D6A               	goto	l3187
  1332  0632                     u3390:
  1333  0632                     l3231:
  1334                           
  1335                           ;Q5.c: 855:             jikan();
  1336  0632  3183  2320  3185   	fcall	_jikan
  1337  0635                     l3233:
  1338                           
  1339                           ;Q5.c: 856:             if(count >= 500){
  1340  0635  0020               	movlb	0	; select bank0
  1341  0636  0851               	movf	_count+1,w
  1342  0637  3A80               	xorlw	128
  1343  0638  00FC               	movwf	??_main
  1344  0639  3081               	movlw	129
  1345  063A  027C               	subwf	??_main,w
  1346  063B  1D03               	skipz
  1347  063C  2E3F               	goto	u3405
  1348  063D  30F4               	movlw	244
  1349  063E  0250               	subwf	_count,w
  1350  063F                     u3405:
  1351  063F  1C03               	skipc
  1352  0640  2E42               	goto	u3401
  1353  0641  2E43               	goto	u3400
  1354  0642                     u3401:
  1355  0642  2D6A               	goto	l3187
  1356  0643                     u3400:
  1357  0643                     l3235:
  1358                           
  1359                           ;Q5.c: 857:                 waitSEG(segL,0x02|0x04|0x10|0x20,1000);
  1360  0643  0020               	movlb	0	; select bank0
  1361  0644  0845               	movf	main@segL+1,w
  1362  0645  00A9               	movwf	waitSEG@seg1+1
  1363  0646  0844               	movf	main@segL,w
  1364  0647  00A8               	movwf	waitSEG@seg1
  1365  0648  3036               	movlw	54
  1366  0649  00AA               	movwf	waitSEG@seg2
  1367  064A  3000               	movlw	0
  1368  064B  00AB               	movwf	waitSEG@seg2+1
  1369  064C  30E8               	movlw	232
  1370  064D  00AC               	movwf	waitSEG@wt
  1371  064E  3003               	movlw	3
  1372  064F  00AD               	movwf	waitSEG@wt+1
  1373  0650  3183  2360  3185   	fcall	_waitSEG
  1374                           
  1375                           ;Q5.c: 858:                 waitSEG(segL|0x01,0,1000);
  1376  0653  3001               	movlw	1
  1377  0654  0020               	movlb	0	; select bank0
  1378  0655  0444               	iorwf	main@segL,w
  1379  0656  00A8               	movwf	waitSEG@seg1
  1380  0657  3000               	movlw	0
  1381  0658  0445               	iorwf	main@segL+1,w
  1382  0659  00A9               	movwf	waitSEG@seg1+1
  1383  065A  3000               	movlw	0
  1384  065B  00AA               	movwf	waitSEG@seg2
  1385  065C  00AB               	movwf	waitSEG@seg2+1
  1386  065D  30E8               	movlw	232
  1387  065E  00AC               	movwf	waitSEG@wt
  1388  065F  3003               	movlw	3
  1389  0660  00AD               	movwf	waitSEG@wt+1
  1390  0661  3183  2360  3185   	fcall	_waitSEG
  1391  0664  2D6A               	goto	l3187
  1392  0665  3180  2802         	ljmp	start
  1393  0667                     __end_of_main:
  1394                           
  1395                           	psect	text1
  1396  0317                     __ptext1:	
  1397 ;; *************** function _zenoff *****************
  1398 ;; Defined at:
  1399 ;;		line 195 in file "Q5.c"
  1400 ;; Parameters:    Size  Location     Type
  1401 ;;		None
  1402 ;; Auto vars:     Size  Location     Type
  1403 ;;		None
  1404 ;; Return value:  Size  Location     Type
  1405 ;;                  1    wreg      void 
  1406 ;; Registers used:
  1407 ;;		status,2
  1408 ;; Tracked objects:
  1409 ;;		On entry : 0/0
  1410 ;;		On exit  : 0/0
  1411 ;;		Unchanged: 0/0
  1412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1417 ;;Total ram usage:        0 bytes
  1418 ;; Hardware stack levels used:    1
  1419 ;; This function calls:
  1420 ;;		Nothing
  1421 ;; This function is called by:
  1422 ;;		_main
  1423 ;; This function uses a non-reentrant model
  1424 ;;
  1425                           
  1426                           
  1427                           ;psect for function _zenoff
  1428  0317                     _zenoff:
  1429  0317                     l2453:	
  1430                           ;incstack = 0
  1431                           ; Regs used in _zenoff: [status,2]
  1432                           
  1433                           
  1434                           ;Q5.c: 197:     RC2=1;
  1435  0317  0020               	movlb	0	; select bank0
  1436  0318  150E               	bsf	14,2	;volatile
  1437                           
  1438                           ;Q5.c: 198:     RC1=1;
  1439  0319  148E               	bsf	14,1	;volatile
  1440                           
  1441                           ;Q5.c: 199:     RC0=1;
  1442  031A  140E               	bsf	14,0	;volatile
  1443  031B                     l2455:
  1444                           
  1445                           ;Q5.c: 200:     PORTB=0x00;
  1446  031B  018D               	clrf	13	;volatile
  1447  031C                     l2457:
  1448                           
  1449                           ;Q5.c: 201:     RC7=0;RC7=1;RC7=0;
  1450  031C  138E               	bcf	14,7	;volatile
  1451  031D                     l2459:
  1452  031D  178E               	bsf	14,7	;volatile
  1453  031E                     l2461:
  1454  031E  138E               	bcf	14,7	;volatile
  1455  031F                     l108:
  1456  031F  0008               	return
  1457  0320                     __end_of_zenoff:
  1458                           
  1459                           	psect	text2
  1460  0360                     __ptext2:	
  1461 ;; *************** function _waitSEG *****************
  1462 ;; Defined at:
  1463 ;;		line 451 in file "Q5.c"
  1464 ;; Parameters:    Size  Location     Type
  1465 ;;  seg1            2    8[BANK0 ] unsigned short 
  1466 ;;  seg2            2   10[BANK0 ] unsigned short 
  1467 ;;  wt              2   12[BANK0 ] unsigned short 
  1468 ;; Auto vars:     Size  Location     Type
  1469 ;;  i               2    8[COMMON] unsigned int 
  1470 ;; Return value:  Size  Location     Type
  1471 ;;                  1    wreg      void 
  1472 ;; Registers used:
  1473 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1474 ;; Tracked objects:
  1475 ;;		On entry : 0/0
  1476 ;;		On exit  : 0/0
  1477 ;;		Unchanged: 0/0
  1478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1479 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1480 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1482 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1483 ;;Total ram usage:        8 bytes
  1484 ;; Hardware stack levels used:    1
  1485 ;; Hardware stack levels required when called:    1
  1486 ;; This function calls:
  1487 ;;		___lwdiv
  1488 ;;		_dynam
  1489 ;; This function is called by:
  1490 ;;		_main
  1491 ;; This function uses a non-reentrant model
  1492 ;;
  1493                           
  1494                           
  1495                           ;psect for function _waitSEG
  1496  0360                     _waitSEG:
  1497  0360                     l2539:	
  1498                           ;incstack = 0
  1499                           ; Regs used in _waitSEG: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1500                           
  1501                           
  1502                           ;Q5.c: 451: void waitSEG(unsigned short seg1,unsigned short seg2,unsigned short wt);Q5.c
      +                          : 452: {;Q5.c: 454:     wt = wt / 10;
  1503  0360  300A               	movlw	10
  1504  0361  00F0               	movwf	___lwdiv@divisor
  1505  0362  3000               	movlw	0
  1506  0363  00F1               	movwf	___lwdiv@divisor+1
  1507  0364  0020               	movlb	0	; select bank0
  1508  0365  082D               	movf	waitSEG@wt+1,w
  1509  0366  00F3               	movwf	___lwdiv@dividend+1
  1510  0367  082C               	movf	waitSEG@wt,w
  1511  0368  00F2               	movwf	___lwdiv@dividend
  1512  0369  3183  2394  3183   	fcall	___lwdiv
  1513  036C  0871               	movf	?___lwdiv+1,w
  1514  036D  0020               	movlb	0	; select bank0
  1515  036E  00AD               	movwf	waitSEG@wt+1
  1516  036F  0870               	movf	?___lwdiv,w
  1517  0370  00AC               	movwf	waitSEG@wt
  1518  0371                     l2541:
  1519                           
  1520                           ;Q5.c: 455:     unsigned int i;;Q5.c: 457:     for(i=wt;i>0;--i){
  1521  0371  082D               	movf	waitSEG@wt+1,w
  1522  0372  00F9               	movwf	waitSEG@i+1
  1523  0373  082C               	movf	waitSEG@wt,w
  1524  0374  00F8               	movwf	waitSEG@i
  1525  0375                     l2543:
  1526  0375  0878               	movf	waitSEG@i,w
  1527  0376  0479               	iorwf	waitSEG@i+1,w
  1528  0377  1D03               	btfss	3,2
  1529  0378  2B7A               	goto	u2181
  1530  0379  2B7B               	goto	u2180
  1531  037A                     u2181:
  1532  037A  2B7C               	goto	l2547
  1533  037B                     u2180:
  1534  037B  2B93               	goto	l258
  1535  037C                     l2547:
  1536                           
  1537                           ;Q5.c: 458:         dynam(seg1,seg2,0,0);
  1538  037C  0020               	movlb	0	; select bank0
  1539  037D  0829               	movf	waitSEG@seg1+1,w
  1540  037E  00F1               	movwf	dynam@dig1data+1
  1541  037F  0828               	movf	waitSEG@seg1,w
  1542  0380  00F0               	movwf	dynam@dig1data
  1543  0381  082B               	movf	waitSEG@seg2+1,w
  1544  0382  00F3               	movwf	dynam@dig2data+1
  1545  0383  082A               	movf	waitSEG@seg2,w
  1546  0384  00F2               	movwf	dynam@dig2data
  1547  0385  3000               	movlw	0
  1548  0386  00F4               	movwf	dynam@smdata
  1549  0387  00F5               	movwf	dynam@smdata+1
  1550  0388  3000               	movlw	0
  1551  0389  00F6               	movwf	dynam@tr
  1552  038A  00F7               	movwf	dynam@tr+1
  1553  038B  3186  2667  3183   	fcall	_dynam
  1554  038E                     l2549:
  1555                           
  1556                           ;Q5.c: 459:     }
  1557  038E  3001               	movlw	1
  1558  038F  02F8               	subwf	waitSEG@i,f
  1559  0390  3000               	movlw	0
  1560  0391  3BF9               	subwfb	waitSEG@i+1,f
  1561  0392  2B75               	goto	l2543
  1562  0393                     l258:
  1563  0393  0008               	return
  1564  0394                     __end_of_waitSEG:
  1565                           
  1566                           	psect	text3
  1567  0667                     __ptext3:	
  1568 ;; *************** function _dynam *****************
  1569 ;; Defined at:
  1570 ;;		line 206 in file "Q5.c"
  1571 ;; Parameters:    Size  Location     Type
  1572 ;;  dig1data        2    0[COMMON] unsigned short 
  1573 ;;  dig2data        2    2[COMMON] unsigned short 
  1574 ;;  smdata          2    4[COMMON] unsigned short 
  1575 ;;  tr              2    6[COMMON] unsigned int 
  1576 ;; Auto vars:     Size  Location     Type
  1577 ;;  ext             2    6[BANK0 ] unsigned short 
  1578 ;;  j               2    4[BANK0 ] unsigned int 
  1579 ;;  tm              2    2[BANK0 ] unsigned int 
  1580 ;;  smd             2    0[BANK0 ] unsigned short 
  1581 ;; Return value:  Size  Location     Type
  1582 ;;                  1    wreg      void 
  1583 ;; Registers used:
  1584 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1585 ;; Tracked objects:
  1586 ;;		On entry : 0/0
  1587 ;;		On exit  : 0/0
  1588 ;;		Unchanged: 0/0
  1589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1590 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1591 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1593 ;;      Totals:         8       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1594 ;;Total ram usage:       16 bytes
  1595 ;; Hardware stack levels used:    1
  1596 ;; This function calls:
  1597 ;;		Nothing
  1598 ;; This function is called by:
  1599 ;;		_waitSEG
  1600 ;;		_main
  1601 ;;		_clear
  1602 ;;		_waitSEGStop
  1603 ;;		_motor
  1604 ;;		_motorStop
  1605 ;; This function uses a non-reentrant model
  1606 ;;
  1607                           
  1608                           
  1609                           ;psect for function _dynam
  1610  0667                     _dynam:
  1611  0667                     l2191:	
  1612                           ;incstack = 0
  1613                           ; Regs used in _dynam: [wreg-fsr0h+status,2+status,0]
  1614                           
  1615  0667  0020               	movlb	0	; select bank0
  1616  0668  01A2               	clrf	dynam@tm
  1617  0669  01A3               	clrf	dynam@tm+1
  1618                           
  1619                           ;Q5.c: 209:     unsigned short ext=0,smd=0;
  1620  066A  01A6               	clrf	dynam@ext
  1621  066B  01A7               	clrf	dynam@ext+1
  1622  066C  01A0               	clrf	dynam@smd
  1623  066D  01A1               	clrf	dynam@smd+1
  1624  066E                     l2193:
  1625                           
  1626                           ;Q5.c: 210:     RC7=0;
  1627  066E  138E               	bcf	14,7	;volatile
  1628  066F                     l2195:
  1629                           
  1630                           ;Q5.c: 211:     PORTB=dig1data;
  1631  066F  0870               	movf	dynam@dig1data,w
  1632  0670  008D               	movwf	13	;volatile
  1633  0671                     l2197:
  1634                           
  1635                           ;Q5.c: 212:     RC5=0;RC6=1;
  1636  0671  128E               	bcf	14,5	;volatile
  1637  0672                     l2199:
  1638  0672  170E               	bsf	14,6	;volatile
  1639  0673                     l2201:
  1640                           
  1641                           ;Q5.c: 213:     if(tr==5){tm=3000;}
  1642  0673  3005               	movlw	5
  1643  0674  0676               	xorwf	dynam@tr,w
  1644  0675  0477               	iorwf	dynam@tr+1,w
  1645  0676  1D03               	btfss	3,2
  1646  0677  2E79               	goto	u1731
  1647  0678  2E7A               	goto	u1730
  1648  0679                     u1731:
  1649  0679  2E7F               	goto	l2205
  1650  067A                     u1730:
  1651  067A                     l2203:
  1652  067A  30B8               	movlw	184
  1653  067B  00A2               	movwf	dynam@tm
  1654  067C  300B               	movlw	11
  1655  067D  00A3               	movwf	dynam@tm+1
  1656  067E  2E83               	goto	l112
  1657  067F                     l2205:
  1658  067F  30E8               	movlw	232
  1659  0680  00A2               	movwf	dynam@tm
  1660  0681  3003               	movlw	3
  1661  0682  00A3               	movwf	dynam@tm+1
  1662  0683                     l112:
  1663                           
  1664                           ;Q5.c: 215:     for(j=tm;j>0;--j);
  1665  0683  0823               	movf	dynam@tm+1,w
  1666  0684  00A5               	movwf	dynam@j+1
  1667  0685  0822               	movf	dynam@tm,w
  1668  0686  00A4               	movwf	dynam@j
  1669  0687                     l2207:
  1670  0687  0824               	movf	dynam@j,w
  1671  0688  0425               	iorwf	dynam@j+1,w
  1672  0689  1D03               	btfss	3,2
  1673  068A  2E8C               	goto	u1741
  1674  068B  2E8D               	goto	u1740
  1675  068C                     u1741:
  1676  068C  2E8E               	goto	l2211
  1677  068D                     u1740:
  1678  068D  2E93               	goto	l114
  1679  068E                     l2211:
  1680  068E  3001               	movlw	1
  1681  068F  02A4               	subwf	dynam@j,f
  1682  0690  3000               	movlw	0
  1683  0691  3BA5               	subwfb	dynam@j+1,f
  1684  0692  2E87               	goto	l2207
  1685  0693                     l114:
  1686                           
  1687                           ;Q5.c: 216:     RC5=0;RC6=0;
  1688  0693  128E               	bcf	14,5	;volatile
  1689  0694  130E               	bcf	14,6	;volatile
  1690  0695                     l2215:
  1691                           
  1692                           ;Q5.c: 217:     PORTB=dig2data;
  1693  0695  0872               	movf	dynam@dig2data,w
  1694  0696  008D               	movwf	13	;volatile
  1695  0697                     l2217:
  1696                           
  1697                           ;Q5.c: 218:     RC6=0;RC5=1;
  1698  0697  130E               	bcf	14,6	;volatile
  1699  0698                     l2219:
  1700  0698  168E               	bsf	14,5	;volatile
  1701  0699                     l2221:
  1702                           
  1703                           ;Q5.c: 219:     if(tr==5){tm=3000;}
  1704  0699  3005               	movlw	5
  1705  069A  0676               	xorwf	dynam@tr,w
  1706  069B  0477               	iorwf	dynam@tr+1,w
  1707  069C  1D03               	btfss	3,2
  1708  069D  2E9F               	goto	u1751
  1709  069E  2EA0               	goto	u1750
  1710  069F                     u1751:
  1711  069F  2EA5               	goto	l2225
  1712  06A0                     u1750:
  1713  06A0                     l2223:
  1714  06A0  30B8               	movlw	184
  1715  06A1  00A2               	movwf	dynam@tm
  1716  06A2  300B               	movlw	11
  1717  06A3  00A3               	movwf	dynam@tm+1
  1718  06A4  2EA9               	goto	l116
  1719  06A5                     l2225:
  1720  06A5  30E8               	movlw	232
  1721  06A6  00A2               	movwf	dynam@tm
  1722  06A7  3003               	movlw	3
  1723  06A8  00A3               	movwf	dynam@tm+1
  1724  06A9                     l116:
  1725                           
  1726                           ;Q5.c: 221:     for(j=tm;j>0;--j);
  1727  06A9  0823               	movf	dynam@tm+1,w
  1728  06AA  00A5               	movwf	dynam@j+1
  1729  06AB  0822               	movf	dynam@tm,w
  1730  06AC  00A4               	movwf	dynam@j
  1731  06AD                     l2227:
  1732  06AD  0824               	movf	dynam@j,w
  1733  06AE  0425               	iorwf	dynam@j+1,w
  1734  06AF  1D03               	btfss	3,2
  1735  06B0  2EB2               	goto	u1761
  1736  06B1  2EB3               	goto	u1760
  1737  06B2                     u1761:
  1738  06B2  2EB4               	goto	l2231
  1739  06B3                     u1760:
  1740  06B3  2EB9               	goto	l118
  1741  06B4                     l2231:
  1742  06B4  3001               	movlw	1
  1743  06B5  02A4               	subwf	dynam@j,f
  1744  06B6  3000               	movlw	0
  1745  06B7  3BA5               	subwfb	dynam@j+1,f
  1746  06B8  2EAD               	goto	l2227
  1747  06B9                     l118:
  1748                           
  1749                           ;Q5.c: 222:     RC5=0;RC6=0;
  1750  06B9  128E               	bcf	14,5	;volatile
  1751  06BA  130E               	bcf	14,6	;volatile
  1752                           
  1753                           ;Q5.c: 223:     switch(smdata){
  1754  06BB  2FC0               	goto	l2341
  1755  06BC                     l2235:
  1756                           
  1757                           ;Q5.c: 225:                 PORTB=0x00;smd=(0x01|0x02|0x04|0x08|0x10|0x20);
  1758  06BC  018D               	clrf	13	;volatile
  1759  06BD                     l2237:
  1760  06BD                     l2239:
  1761                           
  1762                           ;Q5.c: 226:                 RC7=0;RC7=1;RC7=0;
  1763  06BD  138E               	bcf	14,7	;volatile
  1764  06BE                     l2241:
  1765  06BE  178E               	bsf	14,7	;volatile
  1766  06BF                     l2243:
  1767  06BF  138E               	bcf	14,7	;volatile
  1768                           
  1769                           ;Q5.c: 227:                 break;
  1770  06C0  2FD0               	goto	l135
  1771  06C1                     l2245:
  1772                           
  1773                           ;Q5.c: 229:                 if(flg==1)cw=0;flg=0;
  1774  06C1  035C               	decf	_flg,w
  1775  06C2  045D               	iorwf	_flg+1,w
  1776  06C3  1D03               	btfss	3,2
  1777  06C4  2EC6               	goto	u1771
  1778  06C5  2EC7               	goto	u1770
  1779  06C6                     u1771:
  1780  06C6  2EC9               	goto	l123
  1781  06C7                     u1770:
  1782  06C7                     l2247:
  1783  06C7  01DA               	clrf	_cw
  1784  06C8  01DB               	clrf	_cw+1
  1785  06C9                     l123:
  1786  06C9  01DC               	clrf	_flg
  1787  06CA  01DD               	clrf	_flg+1
  1788  06CB                     l2249:
  1789                           
  1790                           ;Q5.c: 230:                 if((cw==0)&&(ext==0)){cw=1;ccw=0;ext=1;PORTB=smd=0x09;}
  1791  06CB  085A               	movf	_cw,w
  1792  06CC  045B               	iorwf	_cw+1,w
  1793  06CD  1D03               	btfss	3,2
  1794  06CE  2ED0               	goto	u1781
  1795  06CF  2ED1               	goto	u1780
  1796  06D0                     u1781:
  1797  06D0  2EE7               	goto	l2261
  1798  06D1                     u1780:
  1799  06D1                     l2251:
  1800  06D1  0826               	movf	dynam@ext,w
  1801  06D2  0427               	iorwf	dynam@ext+1,w
  1802  06D3  1D03               	btfss	3,2
  1803  06D4  2ED6               	goto	u1791
  1804  06D5  2ED7               	goto	u1790
  1805  06D6                     u1791:
  1806  06D6  2EE7               	goto	l2261
  1807  06D7                     u1790:
  1808  06D7                     l2253:
  1809  06D7  3001               	movlw	1
  1810  06D8  00DA               	movwf	_cw
  1811  06D9  3000               	movlw	0
  1812  06DA  00DB               	movwf	_cw+1
  1813  06DB                     l2255:
  1814  06DB  01D8               	clrf	_ccw
  1815  06DC  01D9               	clrf	_ccw+1
  1816  06DD                     l2257:
  1817  06DD  3001               	movlw	1
  1818  06DE  00A6               	movwf	dynam@ext
  1819  06DF  3000               	movlw	0
  1820  06E0  00A7               	movwf	dynam@ext+1
  1821  06E1                     l2259:
  1822  06E1  3009               	movlw	9
  1823  06E2  00A0               	movwf	dynam@smd
  1824  06E3  3000               	movlw	0
  1825  06E4  00A1               	movwf	dynam@smd+1
  1826  06E5  0820               	movf	dynam@smd,w
  1827  06E6  008D               	movwf	13	;volatile
  1828  06E7                     l2261:
  1829                           
  1830                           ;Q5.c: 231:                 if((cw==1)&&(ext==0)){cw=2;ccw=3;ext=1;PORTB=smd=0x0C;}
  1831  06E7  035A               	decf	_cw,w
  1832  06E8  045B               	iorwf	_cw+1,w
  1833  06E9  1D03               	btfss	3,2
  1834  06EA  2EEC               	goto	u1801
  1835  06EB  2EED               	goto	u1800
  1836  06EC                     u1801:
  1837  06EC  2F05               	goto	l2267
  1838  06ED                     u1800:
  1839  06ED                     l2263:
  1840  06ED  0826               	movf	dynam@ext,w
  1841  06EE  0427               	iorwf	dynam@ext+1,w
  1842  06EF  1D03               	btfss	3,2
  1843  06F0  2EF2               	goto	u1811
  1844  06F1  2EF3               	goto	u1810
  1845  06F2                     u1811:
  1846  06F2  2F05               	goto	l2267
  1847  06F3                     u1810:
  1848  06F3                     l2265:
  1849  06F3  3002               	movlw	2
  1850  06F4  00DA               	movwf	_cw
  1851  06F5  3000               	movlw	0
  1852  06F6  00DB               	movwf	_cw+1
  1853  06F7  3003               	movlw	3
  1854  06F8  00D8               	movwf	_ccw
  1855  06F9  3000               	movlw	0
  1856  06FA  00D9               	movwf	_ccw+1
  1857  06FB  3001               	movlw	1
  1858  06FC  00A6               	movwf	dynam@ext
  1859  06FD  3000               	movlw	0
  1860  06FE  00A7               	movwf	dynam@ext+1
  1861  06FF  300C               	movlw	12
  1862  0700  00A0               	movwf	dynam@smd
  1863  0701  3000               	movlw	0
  1864  0702  00A1               	movwf	dynam@smd+1
  1865  0703  0820               	movf	dynam@smd,w
  1866  0704  008D               	movwf	13	;volatile
  1867  0705                     l2267:
  1868                           
  1869                           ;Q5.c: 232:                 if((cw==2)&&(ext==0)){cw=3;ccw=2;ext=1;PORTB=smd=0x06;}
  1870  0705  3002               	movlw	2
  1871  0706  065A               	xorwf	_cw,w
  1872  0707  045B               	iorwf	_cw+1,w
  1873  0708  1D03               	btfss	3,2
  1874  0709  2F0B               	goto	u1821
  1875  070A  2F0C               	goto	u1820
  1876  070B                     u1821:
  1877  070B  2F24               	goto	l2273
  1878  070C                     u1820:
  1879  070C                     l2269:
  1880  070C  0826               	movf	dynam@ext,w
  1881  070D  0427               	iorwf	dynam@ext+1,w
  1882  070E  1D03               	btfss	3,2
  1883  070F  2F11               	goto	u1831
  1884  0710  2F12               	goto	u1830
  1885  0711                     u1831:
  1886  0711  2F24               	goto	l2273
  1887  0712                     u1830:
  1888  0712                     l2271:
  1889  0712  3003               	movlw	3
  1890  0713  00DA               	movwf	_cw
  1891  0714  3000               	movlw	0
  1892  0715  00DB               	movwf	_cw+1
  1893  0716  3002               	movlw	2
  1894  0717  00D8               	movwf	_ccw
  1895  0718  3000               	movlw	0
  1896  0719  00D9               	movwf	_ccw+1
  1897  071A  3001               	movlw	1
  1898  071B  00A6               	movwf	dynam@ext
  1899  071C  3000               	movlw	0
  1900  071D  00A7               	movwf	dynam@ext+1
  1901  071E  3006               	movlw	6
  1902  071F  00A0               	movwf	dynam@smd
  1903  0720  3000               	movlw	0
  1904  0721  00A1               	movwf	dynam@smd+1
  1905  0722  0820               	movf	dynam@smd,w
  1906  0723  008D               	movwf	13	;volatile
  1907  0724                     l2273:
  1908                           
  1909                           ;Q5.c: 233:                 if((cw==3)&&(ext==0)){cw=0;ccw=1;ext=1;PORTB=smd=0x03;}
  1910  0724  3003               	movlw	3
  1911  0725  065A               	xorwf	_cw,w
  1912  0726  045B               	iorwf	_cw+1,w
  1913  0727  1D03               	btfss	3,2
  1914  0728  2F2A               	goto	u1841
  1915  0729  2F2B               	goto	u1840
  1916  072A                     u1841:
  1917  072A  2EBD               	goto	l2239
  1918  072B                     u1840:
  1919  072B                     l2275:
  1920  072B  0826               	movf	dynam@ext,w
  1921  072C  0427               	iorwf	dynam@ext+1,w
  1922  072D  1D03               	btfss	3,2
  1923  072E  2F30               	goto	u1851
  1924  072F  2F31               	goto	u1850
  1925  0730                     u1851:
  1926  0730  2EBD               	goto	l2239
  1927  0731                     u1850:
  1928  0731                     l2277:
  1929  0731  01DA               	clrf	_cw
  1930  0732  01DB               	clrf	_cw+1
  1931  0733                     l2279:
  1932  0733  3001               	movlw	1
  1933  0734  00D8               	movwf	_ccw
  1934  0735  3000               	movlw	0
  1935  0736  00D9               	movwf	_ccw+1
  1936  0737                     l2281:
  1937  0737                     l2283:
  1938  0737  3003               	movlw	3
  1939  0738  00A0               	movwf	dynam@smd
  1940  0739  3000               	movlw	0
  1941  073A  00A1               	movwf	dynam@smd+1
  1942  073B  0820               	movf	dynam@smd,w
  1943  073C  008D               	movwf	13	;volatile
  1944  073D  2EBD               	goto	l2239
  1945  073E                     l2291:
  1946                           
  1947                           ;Q5.c: 237:                 if(flg==1)ccw=0;flg=0;
  1948  073E  035C               	decf	_flg,w
  1949  073F  045D               	iorwf	_flg+1,w
  1950  0740  1D03               	btfss	3,2
  1951  0741  2F43               	goto	u1861
  1952  0742  2F44               	goto	u1860
  1953  0743                     u1861:
  1954  0743  2F46               	goto	l129
  1955  0744                     u1860:
  1956  0744                     l2293:
  1957  0744  01D8               	clrf	_ccw
  1958  0745  01D9               	clrf	_ccw+1
  1959  0746                     l129:
  1960  0746  01DC               	clrf	_flg
  1961  0747  01DD               	clrf	_flg+1
  1962  0748                     l2295:
  1963                           
  1964                           ;Q5.c: 238:                 if((ccw==0)&&(ext==0)){ccw=1;cw=0;ext=1;PORTB=smd=0x03;}
  1965  0748  0858               	movf	_ccw,w
  1966  0749  0459               	iorwf	_ccw+1,w
  1967  074A  1D03               	btfss	3,2
  1968  074B  2F4D               	goto	u1871
  1969  074C  2F4E               	goto	u1870
  1970  074D                     u1871:
  1971  074D  2F64               	goto	l2307
  1972  074E                     u1870:
  1973  074E                     l2297:
  1974  074E  0826               	movf	dynam@ext,w
  1975  074F  0427               	iorwf	dynam@ext+1,w
  1976  0750  1D03               	btfss	3,2
  1977  0751  2F53               	goto	u1881
  1978  0752  2F54               	goto	u1880
  1979  0753                     u1881:
  1980  0753  2F64               	goto	l2307
  1981  0754                     u1880:
  1982  0754                     l2299:
  1983  0754  3001               	movlw	1
  1984  0755  00D8               	movwf	_ccw
  1985  0756  3000               	movlw	0
  1986  0757  00D9               	movwf	_ccw+1
  1987  0758                     l2301:
  1988  0758  01DA               	clrf	_cw
  1989  0759  01DB               	clrf	_cw+1
  1990  075A                     l2303:
  1991  075A  3001               	movlw	1
  1992  075B  00A6               	movwf	dynam@ext
  1993  075C  3000               	movlw	0
  1994  075D  00A7               	movwf	dynam@ext+1
  1995  075E                     l2305:
  1996  075E  3003               	movlw	3
  1997  075F  00A0               	movwf	dynam@smd
  1998  0760  3000               	movlw	0
  1999  0761  00A1               	movwf	dynam@smd+1
  2000  0762  0820               	movf	dynam@smd,w
  2001  0763  008D               	movwf	13	;volatile
  2002  0764                     l2307:
  2003                           
  2004                           ;Q5.c: 239:                 if((ccw==1)&&(ext==0)){ccw=2;cw=3;ext=1;PORTB=smd=0x06;}
  2005  0764  0358               	decf	_ccw,w
  2006  0765  0459               	iorwf	_ccw+1,w
  2007  0766  1D03               	btfss	3,2
  2008  0767  2F69               	goto	u1891
  2009  0768  2F6A               	goto	u1890
  2010  0769                     u1891:
  2011  0769  2F82               	goto	l2313
  2012  076A                     u1890:
  2013  076A                     l2309:
  2014  076A  0826               	movf	dynam@ext,w
  2015  076B  0427               	iorwf	dynam@ext+1,w
  2016  076C  1D03               	btfss	3,2
  2017  076D  2F6F               	goto	u1901
  2018  076E  2F70               	goto	u1900
  2019  076F                     u1901:
  2020  076F  2F82               	goto	l2313
  2021  0770                     u1900:
  2022  0770                     l2311:
  2023  0770  3002               	movlw	2
  2024  0771  00D8               	movwf	_ccw
  2025  0772  3000               	movlw	0
  2026  0773  00D9               	movwf	_ccw+1
  2027  0774  3003               	movlw	3
  2028  0775  00DA               	movwf	_cw
  2029  0776  3000               	movlw	0
  2030  0777  00DB               	movwf	_cw+1
  2031  0778  3001               	movlw	1
  2032  0779  00A6               	movwf	dynam@ext
  2033  077A  3000               	movlw	0
  2034  077B  00A7               	movwf	dynam@ext+1
  2035  077C  3006               	movlw	6
  2036  077D  00A0               	movwf	dynam@smd
  2037  077E  3000               	movlw	0
  2038  077F  00A1               	movwf	dynam@smd+1
  2039  0780  0820               	movf	dynam@smd,w
  2040  0781  008D               	movwf	13	;volatile
  2041  0782                     l2313:
  2042                           
  2043                           ;Q5.c: 240:                 if((ccw==2)&&(ext==0)){ccw=3;cw=2;ext=1;PORTB=smd=0x0C;}
  2044  0782  3002               	movlw	2
  2045  0783  0658               	xorwf	_ccw,w
  2046  0784  0459               	iorwf	_ccw+1,w
  2047  0785  1D03               	btfss	3,2
  2048  0786  2F88               	goto	u1911
  2049  0787  2F89               	goto	u1910
  2050  0788                     u1911:
  2051  0788  2FA1               	goto	l2319
  2052  0789                     u1910:
  2053  0789                     l2315:
  2054  0789  0826               	movf	dynam@ext,w
  2055  078A  0427               	iorwf	dynam@ext+1,w
  2056  078B  1D03               	btfss	3,2
  2057  078C  2F8E               	goto	u1921
  2058  078D  2F8F               	goto	u1920
  2059  078E                     u1921:
  2060  078E  2FA1               	goto	l2319
  2061  078F                     u1920:
  2062  078F                     l2317:
  2063  078F  3003               	movlw	3
  2064  0790  00D8               	movwf	_ccw
  2065  0791  3000               	movlw	0
  2066  0792  00D9               	movwf	_ccw+1
  2067  0793  3002               	movlw	2
  2068  0794  00DA               	movwf	_cw
  2069  0795  3000               	movlw	0
  2070  0796  00DB               	movwf	_cw+1
  2071  0797  3001               	movlw	1
  2072  0798  00A6               	movwf	dynam@ext
  2073  0799  3000               	movlw	0
  2074  079A  00A7               	movwf	dynam@ext+1
  2075  079B  300C               	movlw	12
  2076  079C  00A0               	movwf	dynam@smd
  2077  079D  3000               	movlw	0
  2078  079E  00A1               	movwf	dynam@smd+1
  2079  079F  0820               	movf	dynam@smd,w
  2080  07A0  008D               	movwf	13	;volatile
  2081  07A1                     l2319:
  2082                           
  2083                           ;Q5.c: 241:                 if((ccw==3)&&(ext==0)){ccw=0;cw=1;ext=1;PORTB=smd=0x09;}
  2084  07A1  3003               	movlw	3
  2085  07A2  0658               	xorwf	_ccw,w
  2086  07A3  0459               	iorwf	_ccw+1,w
  2087  07A4  1D03               	btfss	3,2
  2088  07A5  2FA7               	goto	u1931
  2089  07A6  2FA8               	goto	u1930
  2090  07A7                     u1931:
  2091  07A7  2EBD               	goto	l2239
  2092  07A8                     u1930:
  2093  07A8                     l2321:
  2094  07A8  0826               	movf	dynam@ext,w
  2095  07A9  0427               	iorwf	dynam@ext+1,w
  2096  07AA  1D03               	btfss	3,2
  2097  07AB  2FAD               	goto	u1941
  2098  07AC  2FAE               	goto	u1940
  2099  07AD                     u1941:
  2100  07AD  2EBD               	goto	l2239
  2101  07AE                     u1940:
  2102  07AE                     l2323:
  2103  07AE  01D8               	clrf	_ccw
  2104  07AF  01D9               	clrf	_ccw+1
  2105  07B0                     l2325:
  2106  07B0  3001               	movlw	1
  2107  07B1  00DA               	movwf	_cw
  2108  07B2  3000               	movlw	0
  2109  07B3  00DB               	movwf	_cw+1
  2110  07B4                     l2327:
  2111  07B4                     l2329:
  2112  07B4  3009               	movlw	9
  2113  07B5  00A0               	movwf	dynam@smd
  2114  07B6  3000               	movlw	0
  2115  07B7  00A1               	movwf	dynam@smd+1
  2116  07B8  0820               	movf	dynam@smd,w
  2117  07B9  008D               	movwf	13	;volatile
  2118  07BA  2EBD               	goto	l2239
  2119  07BB                     l2337:
  2120                           
  2121                           ;Q5.c: 245:                 cw=ccw=0;
  2122  07BB  01D8               	clrf	_ccw
  2123  07BC  01D9               	clrf	_ccw+1
  2124  07BD  01DA               	clrf	_cw
  2125  07BE  01DB               	clrf	_cw+1
  2126                           
  2127                           ;Q5.c: 246:                 break;
  2128  07BF  2FD0               	goto	l135
  2129  07C0                     l2341:
  2130                           
  2131                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2132                           ; Switch size 1, requested type "simple"
  2133                           ; Number of cases is 1, Range of values is 0 to 0
  2134                           ; switch strategies available:
  2135                           ; Name         Instructions Cycles
  2136                           ; simple_byte            4     3 (average)
  2137                           ; direct_byte            8     6 (fixed)
  2138                           ; jumptable            260     6 (fixed)
  2139                           ;	Chosen strategy is simple_byte
  2140  07C0  0875               	movf	dynam@smdata+1,w
  2141  07C1  3A00               	xorlw	0	; case 0
  2142  07C2  1903               	skipnz
  2143  07C3  2FC5               	goto	l3451
  2144  07C4  2FBB               	goto	l2337
  2145  07C5                     l3451:
  2146                           
  2147                           ; Switch size 1, requested type "simple"
  2148                           ; Number of cases is 3, Range of values is 0 to 2
  2149                           ; switch strategies available:
  2150                           ; Name         Instructions Cycles
  2151                           ; simple_byte           10     6 (average)
  2152                           ; direct_byte           12     6 (fixed)
  2153                           ; jumptable            260     6 (fixed)
  2154                           ;	Chosen strategy is simple_byte
  2155  07C5  0874               	movf	dynam@smdata,w
  2156  07C6  3A00               	xorlw	0	; case 0
  2157  07C7  1903               	skipnz
  2158  07C8  2EBC               	goto	l2235
  2159  07C9  3A01               	xorlw	1	; case 1
  2160  07CA  1903               	skipnz
  2161  07CB  2EC1               	goto	l2245
  2162  07CC  3A03               	xorlw	3	; case 2
  2163  07CD  1903               	skipnz
  2164  07CE  2F3E               	goto	l2291
  2165  07CF  2FBB               	goto	l2337
  2166  07D0                     l135:
  2167  07D0  0008               	return
  2168  07D1                     __end_of_dynam:
  2169                           
  2170                           	psect	text4
  2171  0394                     __ptext4:	
  2172 ;; *************** function ___lwdiv *****************
  2173 ;; Defined at:
  2174 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\lwdiv.c"
  2175 ;; Parameters:    Size  Location     Type
  2176 ;;  divisor         2    0[COMMON] unsigned int 
  2177 ;;  dividend        2    2[COMMON] unsigned int 
  2178 ;; Auto vars:     Size  Location     Type
  2179 ;;  quotient        2    5[COMMON] unsigned int 
  2180 ;;  counter         1    7[COMMON] unsigned char 
  2181 ;; Return value:  Size  Location     Type
  2182 ;;                  2    0[COMMON] unsigned int 
  2183 ;; Registers used:
  2184 ;;		wreg, status,2, status,0
  2185 ;; Tracked objects:
  2186 ;;		On entry : 0/0
  2187 ;;		On exit  : 0/0
  2188 ;;		Unchanged: 0/0
  2189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2190 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2191 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2192 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2193 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2194 ;;Total ram usage:        8 bytes
  2195 ;; Hardware stack levels used:    1
  2196 ;; This function calls:
  2197 ;;		Nothing
  2198 ;; This function is called by:
  2199 ;;		_waitSEG
  2200 ;;		_waitSEGStop
  2201 ;; This function uses a non-reentrant model
  2202 ;;
  2203                           
  2204                           
  2205                           ;psect for function ___lwdiv
  2206  0394                     ___lwdiv:
  2207  0394                     l2397:	
  2208                           ;incstack = 0
  2209                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2210                           
  2211  0394  01F5               	clrf	___lwdiv@quotient
  2212  0395  01F6               	clrf	___lwdiv@quotient+1
  2213  0396                     l2399:
  2214  0396  0870               	movf	___lwdiv@divisor,w
  2215  0397  0471               	iorwf	___lwdiv@divisor+1,w
  2216  0398  1903               	btfsc	3,2
  2217  0399  2B9B               	goto	u2001
  2218  039A  2B9C               	goto	u2000
  2219  039B                     u2001:
  2220  039B  2BCB               	goto	l2419
  2221  039C                     u2000:
  2222  039C                     l2401:
  2223  039C  01F7               	clrf	___lwdiv@counter
  2224  039D  0AF7               	incf	___lwdiv@counter,f
  2225  039E  2BA8               	goto	l2407
  2226  039F                     l2403:
  2227  039F  3001               	movlw	1
  2228  03A0                     u2015:
  2229  03A0  35F0               	lslf	___lwdiv@divisor,f
  2230  03A1  0DF1               	rlf	___lwdiv@divisor+1,f
  2231  03A2  0B89               	decfsz	9,f
  2232  03A3  2BA0               	goto	u2015
  2233  03A4                     l2405:
  2234  03A4  3001               	movlw	1
  2235  03A5  00F4               	movwf	??___lwdiv
  2236  03A6  0874               	movf	??___lwdiv,w
  2237  03A7  07F7               	addwf	___lwdiv@counter,f
  2238  03A8                     l2407:
  2239  03A8  1FF1               	btfss	___lwdiv@divisor+1,7
  2240  03A9  2BAB               	goto	u2021
  2241  03AA  2BAC               	goto	u2020
  2242  03AB                     u2021:
  2243  03AB  2B9F               	goto	l2403
  2244  03AC                     u2020:
  2245  03AC                     l2409:
  2246  03AC  3001               	movlw	1
  2247  03AD                     u2035:
  2248  03AD  35F5               	lslf	___lwdiv@quotient,f
  2249  03AE  0DF6               	rlf	___lwdiv@quotient+1,f
  2250  03AF  0B89               	decfsz	9,f
  2251  03B0  2BAD               	goto	u2035
  2252  03B1  0871               	movf	___lwdiv@divisor+1,w
  2253  03B2  0273               	subwf	___lwdiv@dividend+1,w
  2254  03B3  1D03               	skipz
  2255  03B4  2BB7               	goto	u2045
  2256  03B5  0870               	movf	___lwdiv@divisor,w
  2257  03B6  0272               	subwf	___lwdiv@dividend,w
  2258  03B7                     u2045:
  2259  03B7  1C03               	skipc
  2260  03B8  2BBA               	goto	u2041
  2261  03B9  2BBB               	goto	u2040
  2262  03BA                     u2041:
  2263  03BA  2BC0               	goto	l2415
  2264  03BB                     u2040:
  2265  03BB                     l2411:
  2266  03BB  0870               	movf	___lwdiv@divisor,w
  2267  03BC  02F2               	subwf	___lwdiv@dividend,f
  2268  03BD  0871               	movf	___lwdiv@divisor+1,w
  2269  03BE  3BF3               	subwfb	___lwdiv@dividend+1,f
  2270  03BF                     l2413:
  2271  03BF  1475               	bsf	___lwdiv@quotient,0
  2272  03C0                     l2415:
  2273  03C0  3001               	movlw	1
  2274  03C1                     u2055:
  2275  03C1  36F1               	lsrf	___lwdiv@divisor+1,f
  2276  03C2  0CF0               	rrf	___lwdiv@divisor,f
  2277  03C3  0B89               	decfsz	9,f
  2278  03C4  2BC1               	goto	u2055
  2279  03C5                     l2417:
  2280  03C5  3001               	movlw	1
  2281  03C6  02F7               	subwf	___lwdiv@counter,f
  2282  03C7  1D03               	btfss	3,2
  2283  03C8  2BCA               	goto	u2061
  2284  03C9  2BCB               	goto	u2060
  2285  03CA                     u2061:
  2286  03CA  2BAC               	goto	l2409
  2287  03CB                     u2060:
  2288  03CB                     l2419:
  2289  03CB  0876               	movf	___lwdiv@quotient+1,w
  2290  03CC  00F1               	movwf	?___lwdiv+1
  2291  03CD  0875               	movf	___lwdiv@quotient,w
  2292  03CE  00F0               	movwf	?___lwdiv
  2293  03CF                     l805:
  2294  03CF  0008               	return
  2295  03D0                     __end_of___lwdiv:
  2296                           
  2297                           	psect	text5
  2298  032D                     __ptext5:	
  2299 ;; *************** function _portinit *****************
  2300 ;; Defined at:
  2301 ;;		line 160 in file "Q5.c"
  2302 ;; Parameters:    Size  Location     Type
  2303 ;;		None
  2304 ;; Auto vars:     Size  Location     Type
  2305 ;;		None
  2306 ;; Return value:  Size  Location     Type
  2307 ;;                  1    wreg      void 
  2308 ;; Registers used:
  2309 ;;		wreg, status,2
  2310 ;; Tracked objects:
  2311 ;;		On entry : 0/0
  2312 ;;		On exit  : 0/0
  2313 ;;		Unchanged: 0/0
  2314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2319 ;;Total ram usage:        0 bytes
  2320 ;; Hardware stack levels used:    1
  2321 ;; This function calls:
  2322 ;;		Nothing
  2323 ;; This function is called by:
  2324 ;;		_main
  2325 ;; This function uses a non-reentrant model
  2326 ;;
  2327                           
  2328                           
  2329                           ;psect for function _portinit
  2330  032D                     _portinit:
  2331  032D                     l2423:	
  2332                           ;incstack = 0
  2333                           ; Regs used in _portinit: [wreg+status,2]
  2334                           
  2335                           
  2336                           ;Q5.c: 163:     ANSELA=0x00;
  2337  032D  0023               	movlb	3	; select bank3
  2338  032E  018C               	clrf	12	;volatile
  2339                           
  2340                           ;Q5.c: 164:     ANSELB=0x00;
  2341  032F  018D               	clrf	13	;volatile
  2342  0330                     l2425:
  2343                           
  2344                           ;Q5.c: 166:     PORTA=0x07;
  2345  0330  3007               	movlw	7
  2346  0331  0020               	movlb	0	; select bank0
  2347  0332  008C               	movwf	12	;volatile
  2348  0333                     l2427:
  2349                           
  2350                           ;Q5.c: 167:     TRISA=0x07;
  2351  0333  3007               	movlw	7
  2352  0334  0021               	movlb	1	; select bank1
  2353  0335  008C               	movwf	12	;volatile
  2354                           
  2355                           ;Q5.c: 168:     PORTB=0x00;
  2356  0336  0020               	movlb	0	; select bank0
  2357  0337  018D               	clrf	13	;volatile
  2358                           
  2359                           ;Q5.c: 169:     TRISB=0x00;
  2360  0338  0021               	movlb	1	; select bank1
  2361  0339  018D               	clrf	13	;volatile
  2362  033A                     l2429:
  2363                           
  2364                           ;Q5.c: 170:     PORTC=0x07;
  2365  033A  3007               	movlw	7
  2366  033B  0020               	movlb	0	; select bank0
  2367  033C  008E               	movwf	14	;volatile
  2368  033D                     l2431:
  2369                           
  2370                           ;Q5.c: 171:     TRISC=0x00;
  2371  033D  0021               	movlb	1	; select bank1
  2372  033E  018E               	clrf	14	;volatile
  2373  033F                     l95:
  2374  033F  0008               	return
  2375  0340                     __end_of_portinit:
  2376                           
  2377                           	psect	text6
  2378  04EC                     __ptext6:	
  2379 ;; *************** function _kaisu *****************
  2380 ;; Defined at:
  2381 ;;		line 388 in file "Q5.c"
  2382 ;; Parameters:    Size  Location     Type
  2383 ;;  mode1           2   10[COMMON] unsigned short 
  2384 ;; Auto vars:     Size  Location     Type
  2385 ;;		None
  2386 ;; Return value:  Size  Location     Type
  2387 ;;                  1    wreg      void 
  2388 ;; Registers used:
  2389 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2390 ;; Tracked objects:
  2391 ;;		On entry : 0/0
  2392 ;;		On exit  : 0/0
  2393 ;;		Unchanged: 0/0
  2394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2395 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2398 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2399 ;;Total ram usage:        2 bytes
  2400 ;; Hardware stack levels used:    1
  2401 ;; Hardware stack levels required when called:    2
  2402 ;; This function calls:
  2403 ;;		_fclr
  2404 ;;		_tact
  2405 ;; This function is called by:
  2406 ;;		_main
  2407 ;; This function uses a non-reentrant model
  2408 ;;
  2409                           
  2410                           
  2411                           ;psect for function _kaisu
  2412  04EC                     _kaisu:
  2413  04EC                     l2463:	
  2414                           ;incstack = 0
  2415                           ; Regs used in _kaisu: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2416                           
  2417                           
  2418                           ;Q5.c: 388: void kaisu(unsigned short mode1);Q5.c: 389: {;Q5.c: 390:     switch(mode1){
  2419  04EC  2D2B               	goto	l2487
  2420  04ED                     l2465:
  2421                           
  2422                           ;Q5.c: 392:                     tact(0);
  2423  04ED  3000               	movlw	0
  2424  04EE  00F8               	movwf	tact@mode
  2425  04EF  00F9               	movwf	tact@mode+1
  2426  04F0  3184  2455  3184   	fcall	_tact
  2427  04F3                     l2467:
  2428                           
  2429                           ;Q5.c: 393:                     if(((flag_sw3==1)&&(flag_R==1))){++count;fclr(0);}
  2430  04F3  0020               	movlb	0	; select bank0
  2431  04F4  0362               	decf	_flag_sw3,w
  2432  04F5  0463               	iorwf	_flag_sw3+1,w
  2433  04F6  1D03               	btfss	3,2
  2434  04F7  2CF9               	goto	u2091
  2435  04F8  2CFA               	goto	u2090
  2436  04F9                     u2091:
  2437  04F9  2D38               	goto	l227
  2438  04FA                     u2090:
  2439  04FA                     l2469:
  2440  04FA  0360               	decf	_flag_R,w
  2441  04FB  0461               	iorwf	_flag_R+1,w
  2442  04FC  1D03               	btfss	3,2
  2443  04FD  2CFF               	goto	u2101
  2444  04FE  2D00               	goto	u2100
  2445  04FF                     u2101:
  2446  04FF  2D38               	goto	l227
  2447  0500                     u2100:
  2448  0500                     l2471:
  2449  0500  3001               	movlw	1
  2450  0501  07D0               	addwf	_count,f
  2451  0502  3000               	movlw	0
  2452  0503  3DD1               	addwfc	_count+1,f
  2453  0504                     l2473:
  2454  0504  3000               	movlw	0
  2455  0505  00F0               	movwf	fclr@flg
  2456  0506  00F1               	movwf	fclr@flg+1
  2457  0507  3183  2340  3184   	fcall	_fclr
  2458  050A  2D38               	goto	l227
  2459  050B                     l2475:
  2460                           
  2461                           ;Q5.c: 396:                     tact(1);
  2462  050B  3001               	movlw	1
  2463  050C  00F8               	movwf	tact@mode
  2464  050D  3000               	movlw	0
  2465  050E  00F9               	movwf	tact@mode+1
  2466  050F  3184  2455  3184   	fcall	_tact
  2467  0512                     l2477:
  2468                           
  2469                           ;Q5.c: 397:                     if(((flag_sw3==0)&&(flag_P==1))){++count;fclr(1);}
  2470  0512  0020               	movlb	0	; select bank0
  2471  0513  0862               	movf	_flag_sw3,w
  2472  0514  0463               	iorwf	_flag_sw3+1,w
  2473  0515  1D03               	btfss	3,2
  2474  0516  2D18               	goto	u2111
  2475  0517  2D19               	goto	u2110
  2476  0518                     u2111:
  2477  0518  2D38               	goto	l227
  2478  0519                     u2110:
  2479  0519                     l2479:
  2480  0519  035E               	decf	_flag_P,w
  2481  051A  045F               	iorwf	_flag_P+1,w
  2482  051B  1D03               	btfss	3,2
  2483  051C  2D1E               	goto	u2121
  2484  051D  2D1F               	goto	u2120
  2485  051E                     u2121:
  2486  051E  2D38               	goto	l227
  2487  051F                     u2120:
  2488  051F                     l2481:
  2489  051F  3001               	movlw	1
  2490  0520  07D0               	addwf	_count,f
  2491  0521  3000               	movlw	0
  2492  0522  3DD1               	addwfc	_count+1,f
  2493  0523                     l2483:
  2494  0523  3001               	movlw	1
  2495  0524  00F0               	movwf	fclr@flg
  2496  0525  3000               	movlw	0
  2497  0526  00F1               	movwf	fclr@flg+1
  2498  0527  3183  2340  3184   	fcall	_fclr
  2499  052A  2D38               	goto	l227
  2500  052B                     l2487:
  2501                           
  2502                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2503                           ; Switch size 1, requested type "simple"
  2504                           ; Number of cases is 1, Range of values is 0 to 0
  2505                           ; switch strategies available:
  2506                           ; Name         Instructions Cycles
  2507                           ; simple_byte            4     3 (average)
  2508                           ; direct_byte            8     6 (fixed)
  2509                           ; jumptable            260     6 (fixed)
  2510                           ;	Chosen strategy is simple_byte
  2511  052B  087B               	movf	kaisu@mode1+1,w
  2512  052C  3A00               	xorlw	0	; case 0
  2513  052D  1903               	skipnz
  2514  052E  2D30               	goto	l3453
  2515  052F  2D38               	goto	l227
  2516  0530                     l3453:
  2517                           
  2518                           ; Switch size 1, requested type "simple"
  2519                           ; Number of cases is 2, Range of values is 0 to 1
  2520                           ; switch strategies available:
  2521                           ; Name         Instructions Cycles
  2522                           ; simple_byte            7     4 (average)
  2523                           ; direct_byte           10     6 (fixed)
  2524                           ; jumptable            260     6 (fixed)
  2525                           ;	Chosen strategy is simple_byte
  2526  0530  087A               	movf	kaisu@mode1,w
  2527  0531  3A00               	xorlw	0	; case 0
  2528  0532  1903               	skipnz
  2529  0533  2CED               	goto	l2465
  2530  0534  3A01               	xorlw	1	; case 1
  2531  0535  1903               	skipnz
  2532  0536  2D0B               	goto	l2475
  2533  0537  2D38               	goto	l227
  2534  0538                     l227:
  2535  0538  0008               	return
  2536  0539                     __end_of_kaisu:
  2537                           
  2538                           	psect	text7
  2539  0455                     __ptext7:	
  2540 ;; *************** function _tact *****************
  2541 ;; Defined at:
  2542 ;;		line 346 in file "Q5.c"
  2543 ;; Parameters:    Size  Location     Type
  2544 ;;  mode            2    8[COMMON] unsigned short 
  2545 ;; Auto vars:     Size  Location     Type
  2546 ;;		None
  2547 ;; Return value:  Size  Location     Type
  2548 ;;                  1    wreg      void 
  2549 ;; Registers used:
  2550 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2551 ;; Tracked objects:
  2552 ;;		On entry : 0/0
  2553 ;;		On exit  : 0/0
  2554 ;;		Unchanged: 0/0
  2555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2556 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2559 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2560 ;;Total ram usage:        2 bytes
  2561 ;; Hardware stack levels used:    1
  2562 ;; Hardware stack levels required when called:    1
  2563 ;; This function calls:
  2564 ;;		_tactsw
  2565 ;; This function is called by:
  2566 ;;		_kaisu
  2567 ;;		_waitSEGStop
  2568 ;;		_motorStop
  2569 ;;		_buzzStop
  2570 ;; This function uses a non-reentrant model
  2571 ;;
  2572                           
  2573                           
  2574                           ;psect for function _tact
  2575  0455                     _tact:
  2576  0455                     l2347:	
  2577                           ;incstack = 0
  2578                           ; Regs used in _tact: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2579                           
  2580                           
  2581                           ;Q5.c: 346: void tact(unsigned short mode);Q5.c: 347: {;Q5.c: 348:     switch(mode){
  2582  0455  2C8F               	goto	l2375
  2583  0456                     l2349:
  2584                           
  2585                           ;Q5.c: 350:                 tactsw();
  2586  0456  3183  23D0  3184   	fcall	_tactsw
  2587  0459                     l2351:
  2588                           
  2589                           ;Q5.c: 351:                 if(flag_sw3==0)flag_R=1;
  2590  0459  0020               	movlb	0	; select bank0
  2591  045A  0862               	movf	_flag_sw3,w
  2592  045B  0463               	iorwf	_flag_sw3+1,w
  2593  045C  1D03               	btfss	3,2
  2594  045D  2C5F               	goto	u1951
  2595  045E  2C60               	goto	u1950
  2596  045F                     u1951:
  2597  045F  2C9F               	goto	l208
  2598  0460                     u1950:
  2599  0460                     l2353:
  2600  0460  3001               	movlw	1
  2601  0461  00E0               	movwf	_flag_R
  2602  0462  3000               	movlw	0
  2603  0463  00E1               	movwf	_flag_R+1
  2604  0464  2C9F               	goto	l208
  2605  0465                     l2355:
  2606                           
  2607                           ;Q5.c: 354:                 tactsw();
  2608  0465  3183  23D0  3184   	fcall	_tactsw
  2609  0468                     l2357:
  2610                           
  2611                           ;Q5.c: 355:                 if(flag_sw3==1)flag_P=1;
  2612  0468  0020               	movlb	0	; select bank0
  2613  0469  0362               	decf	_flag_sw3,w
  2614  046A  0463               	iorwf	_flag_sw3+1,w
  2615  046B  1D03               	btfss	3,2
  2616  046C  2C6E               	goto	u1961
  2617  046D  2C6F               	goto	u1960
  2618  046E                     u1961:
  2619  046E  2C9F               	goto	l208
  2620  046F                     u1960:
  2621  046F                     l2359:
  2622  046F  3001               	movlw	1
  2623  0470  00DE               	movwf	_flag_P
  2624  0471  3000               	movlw	0
  2625  0472  00DF               	movwf	_flag_P+1
  2626  0473  2C9F               	goto	l208
  2627  0474                     l2361:
  2628                           
  2629                           ;Q5.c: 358:                 tactsw();
  2630  0474  3183  23D0  3184   	fcall	_tactsw
  2631  0477                     l2363:
  2632                           
  2633                           ;Q5.c: 359:                 if(flag_sw3==0)flag_R=1;
  2634  0477  0020               	movlb	0	; select bank0
  2635  0478  0862               	movf	_flag_sw3,w
  2636  0479  0463               	iorwf	_flag_sw3+1,w
  2637  047A  1D03               	btfss	3,2
  2638  047B  2C7D               	goto	u1971
  2639  047C  2C7E               	goto	u1970
  2640  047D                     u1971:
  2641  047D  2C82               	goto	l2367
  2642  047E                     u1970:
  2643  047E                     l2365:
  2644  047E  3001               	movlw	1
  2645  047F  00E0               	movwf	_flag_R
  2646  0480  3000               	movlw	0
  2647  0481  00E1               	movwf	_flag_R+1
  2648  0482                     l2367:
  2649                           
  2650                           ;Q5.c: 360:                 if((flag_sw3==1)&&(flag_R==1))flag_P=1;
  2651  0482  0362               	decf	_flag_sw3,w
  2652  0483  0463               	iorwf	_flag_sw3+1,w
  2653  0484  1D03               	btfss	3,2
  2654  0485  2C87               	goto	u1981
  2655  0486  2C88               	goto	u1980
  2656  0487                     u1981:
  2657  0487  2C9F               	goto	l208
  2658  0488                     u1980:
  2659  0488                     l2369:
  2660  0488  0360               	decf	_flag_R,w
  2661  0489  0461               	iorwf	_flag_R+1,w
  2662  048A  1D03               	btfss	3,2
  2663  048B  2C8D               	goto	u1991
  2664  048C  2C8E               	goto	u1990
  2665  048D                     u1991:
  2666  048D  2C9F               	goto	l208
  2667  048E                     u1990:
  2668  048E  2C6F               	goto	l2359
  2669  048F                     l2375:
  2670                           
  2671                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2672                           ; Switch size 1, requested type "simple"
  2673                           ; Number of cases is 1, Range of values is 0 to 0
  2674                           ; switch strategies available:
  2675                           ; Name         Instructions Cycles
  2676                           ; simple_byte            4     3 (average)
  2677                           ; direct_byte            8     6 (fixed)
  2678                           ; jumptable            260     6 (fixed)
  2679                           ;	Chosen strategy is simple_byte
  2680  048F  0879               	movf	tact@mode+1,w
  2681  0490  3A00               	xorlw	0	; case 0
  2682  0491  1903               	skipnz
  2683  0492  2C94               	goto	l3455
  2684  0493  2C9F               	goto	l208
  2685  0494                     l3455:
  2686                           
  2687                           ; Switch size 1, requested type "simple"
  2688                           ; Number of cases is 3, Range of values is 0 to 2
  2689                           ; switch strategies available:
  2690                           ; Name         Instructions Cycles
  2691                           ; simple_byte           10     6 (average)
  2692                           ; direct_byte           12     6 (fixed)
  2693                           ; jumptable            260     6 (fixed)
  2694                           ;	Chosen strategy is simple_byte
  2695  0494  0878               	movf	tact@mode,w
  2696  0495  3A00               	xorlw	0	; case 0
  2697  0496  1903               	skipnz
  2698  0497  2C56               	goto	l2349
  2699  0498  3A01               	xorlw	1	; case 1
  2700  0499  1903               	skipnz
  2701  049A  2C65               	goto	l2355
  2702  049B  3A03               	xorlw	3	; case 2
  2703  049C  1903               	skipnz
  2704  049D  2C74               	goto	l2361
  2705  049E  2C9F               	goto	l208
  2706  049F                     l208:
  2707  049F  0008               	return
  2708  04A0                     __end_of_tact:
  2709                           
  2710                           	psect	text8
  2711  03D0                     __ptext8:	
  2712 ;; *************** function _tactsw *****************
  2713 ;; Defined at:
  2714 ;;		line 331 in file "Q5.c"
  2715 ;; Parameters:    Size  Location     Type
  2716 ;;		None
  2717 ;; Auto vars:     Size  Location     Type
  2718 ;;  a               2    6[COMMON] unsigned short 
  2719 ;;  c               2    4[COMMON] unsigned short 
  2720 ;;  b               2    2[COMMON] unsigned short 
  2721 ;; Return value:  Size  Location     Type
  2722 ;;                  1    wreg      void 
  2723 ;; Registers used:
  2724 ;;		wreg, status,2, status,0
  2725 ;; Tracked objects:
  2726 ;;		On entry : 0/0
  2727 ;;		On exit  : 0/0
  2728 ;;		Unchanged: 0/0
  2729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2731 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2732 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2733 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2734 ;;Total ram usage:        8 bytes
  2735 ;; Hardware stack levels used:    1
  2736 ;; This function calls:
  2737 ;;		Nothing
  2738 ;; This function is called by:
  2739 ;;		_tact
  2740 ;; This function uses a non-reentrant model
  2741 ;;
  2742                           
  2743                           
  2744                           ;psect for function _tactsw
  2745  03D0                     _tactsw:
  2746  03D0                     l2173:	
  2747                           ;incstack = 0
  2748                           ; Regs used in _tactsw: [wreg+status,2+status,0]
  2749                           
  2750                           
  2751                           ;Q5.c: 333:     unsigned short a,b,c;;Q5.c: 334:     b=c=0;
  2752  03D0  01F4               	clrf	tactsw@c
  2753  03D1  01F5               	clrf	tactsw@c+1
  2754  03D2  01F2               	clrf	tactsw@b
  2755  03D3  01F3               	clrf	tactsw@b+1
  2756  03D4                     l2175:
  2757                           
  2758                           ;Q5.c: 336:             a=RA2;
  2759  03D4  1003               	clrc
  2760  03D5  0020               	movlb	0	; select bank0
  2761  03D6  190C               	btfsc	12,2	;volatile
  2762  03D7  1403               	setc
  2763  03D8  3000               	movlw	0
  2764  03D9  3D09               	addwfc	9,w
  2765  03DA  00F0               	movwf	??_tactsw
  2766  03DB  01F1               	clrf	??_tactsw+1
  2767  03DC  0870               	movf	??_tactsw,w
  2768  03DD  00F6               	movwf	tactsw@a
  2769  03DE  0871               	movf	??_tactsw+1,w
  2770  03DF  00F7               	movwf	tactsw@a+1
  2771  03E0                     l2177:
  2772                           
  2773                           ;Q5.c: 337:             if(b==a)++c;
  2774  03E0  0877               	movf	tactsw@a+1,w
  2775  03E1  0673               	xorwf	tactsw@b+1,w
  2776  03E2  1D03               	skipz
  2777  03E3  2BE6               	goto	u1715
  2778  03E4  0876               	movf	tactsw@a,w
  2779  03E5  0672               	xorwf	tactsw@b,w
  2780  03E6                     u1715:
  2781  03E6  1D03               	skipz
  2782  03E7  2BE9               	goto	u1711
  2783  03E8  2BEA               	goto	u1710
  2784  03E9                     u1711:
  2785  03E9  2BEF               	goto	l2181
  2786  03EA                     u1710:
  2787  03EA                     l2179:
  2788  03EA  3001               	movlw	1
  2789  03EB  07F4               	addwf	tactsw@c,f
  2790  03EC  3000               	movlw	0
  2791  03ED  3DF5               	addwfc	tactsw@c+1,f
  2792  03EE  2BF1               	goto	l2183
  2793  03EF                     l2181:
  2794  03EF  01F4               	clrf	tactsw@c
  2795  03F0  01F5               	clrf	tactsw@c+1
  2796  03F1                     l2183:
  2797                           
  2798                           ;Q5.c: 339:             if(c>10){flag_sw3=(~a)&0x01;return;}
  2799  03F1  3000               	movlw	0
  2800  03F2  0275               	subwf	tactsw@c+1,w
  2801  03F3  300B               	movlw	11
  2802  03F4  1903               	skipnz
  2803  03F5  0274               	subwf	tactsw@c,w
  2804  03F6  1C03               	skipc
  2805  03F7  2BF9               	goto	u1721
  2806  03F8  2BFA               	goto	u1720
  2807  03F9                     u1721:
  2808  03F9  2C07               	goto	l2189
  2809  03FA                     u1720:
  2810  03FA                     l2185:
  2811  03FA  0877               	movf	tactsw@a+1,w
  2812  03FB  00F1               	movwf	??_tactsw+1
  2813  03FC  0876               	movf	tactsw@a,w
  2814  03FD  00F0               	movwf	??_tactsw
  2815  03FE  09F0               	comf	??_tactsw,f
  2816  03FF  09F1               	comf	??_tactsw+1,f
  2817  0400  3001               	movlw	1
  2818  0401  0570               	andwf	??_tactsw,w
  2819  0402  00E2               	movwf	_flag_sw3
  2820  0403  3000               	movlw	0
  2821  0404  0571               	andwf	??_tactsw+1,w
  2822  0405  00E3               	movwf	_flag_sw3+1
  2823  0406  2C0C               	goto	l193
  2824  0407                     l2189:
  2825                           
  2826                           ;Q5.c: 340:             b=a;
  2827  0407  0877               	movf	tactsw@a+1,w
  2828  0408  00F3               	movwf	tactsw@b+1
  2829  0409  0876               	movf	tactsw@a,w
  2830  040A  00F2               	movwf	tactsw@b
  2831  040B  2BD4               	goto	l2175
  2832  040C                     l193:
  2833  040C  0008               	return
  2834  040D                     __end_of_tactsw:
  2835                           
  2836                           	psect	text9
  2837  0340                     __ptext9:	
  2838 ;; *************** function _fclr *****************
  2839 ;; Defined at:
  2840 ;;		line 369 in file "Q5.c"
  2841 ;; Parameters:    Size  Location     Type
  2842 ;;  flg             2    0[COMMON] unsigned short 
  2843 ;; Auto vars:     Size  Location     Type
  2844 ;;		None
  2845 ;; Return value:  Size  Location     Type
  2846 ;;                  1    wreg      void 
  2847 ;; Registers used:
  2848 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2849 ;; Tracked objects:
  2850 ;;		On entry : 0/0
  2851 ;;		On exit  : 0/0
  2852 ;;		Unchanged: 0/0
  2853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2854 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2857 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2858 ;;Total ram usage:        2 bytes
  2859 ;; Hardware stack levels used:    1
  2860 ;; This function calls:
  2861 ;;		Nothing
  2862 ;; This function is called by:
  2863 ;;		_kaisu
  2864 ;;		_main
  2865 ;;		_waitSEGStop
  2866 ;;		_motorStop
  2867 ;;		_buzzStop
  2868 ;; This function uses a non-reentrant model
  2869 ;;
  2870                           
  2871                           
  2872                           ;psect for function _fclr
  2873  0340                     _fclr:
  2874  0340                     l2381:	
  2875                           ;incstack = 0
  2876                           ; Regs used in _fclr: [wreg-fsr0h+status,2+status,0]
  2877                           
  2878                           
  2879                           ;Q5.c: 369: void fclr(unsigned short flg);Q5.c: 370: {;Q5.c: 371:     switch(flg){
  2880  0340  2B4F               	goto	l2391
  2881  0341                     l2383:
  2882                           
  2883                           ;Q5.c: 373:                     flag_R=0;
  2884  0341  0020               	movlb	0	; select bank0
  2885  0342  01E0               	clrf	_flag_R
  2886  0343  01E1               	clrf	_flag_R+1
  2887                           
  2888                           ;Q5.c: 374:                     break;
  2889  0344  2B5F               	goto	l217
  2890  0345                     l2385:
  2891                           
  2892                           ;Q5.c: 376:                     flag_P=0;
  2893  0345  0020               	movlb	0	; select bank0
  2894  0346  01DE               	clrf	_flag_P
  2895  0347  01DF               	clrf	_flag_P+1
  2896                           
  2897                           ;Q5.c: 377:                     break;
  2898  0348  2B5F               	goto	l217
  2899  0349                     l2387:
  2900                           
  2901                           ;Q5.c: 379:                     flag_P=flag_R=0;
  2902  0349  0020               	movlb	0	; select bank0
  2903  034A  01E0               	clrf	_flag_R
  2904  034B  01E1               	clrf	_flag_R+1
  2905  034C  01DE               	clrf	_flag_P
  2906  034D  01DF               	clrf	_flag_P+1
  2907                           
  2908                           ;Q5.c: 380:                     break;
  2909  034E  2B5F               	goto	l217
  2910  034F                     l2391:
  2911                           
  2912                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2913                           ; Switch size 1, requested type "simple"
  2914                           ; Number of cases is 1, Range of values is 0 to 0
  2915                           ; switch strategies available:
  2916                           ; Name         Instructions Cycles
  2917                           ; simple_byte            4     3 (average)
  2918                           ; direct_byte            8     6 (fixed)
  2919                           ; jumptable            260     6 (fixed)
  2920                           ;	Chosen strategy is simple_byte
  2921  034F  0871               	movf	fclr@flg+1,w
  2922  0350  3A00               	xorlw	0	; case 0
  2923  0351  1903               	skipnz
  2924  0352  2B54               	goto	l3457
  2925  0353  2B5F               	goto	l217
  2926  0354                     l3457:
  2927                           
  2928                           ; Switch size 1, requested type "simple"
  2929                           ; Number of cases is 3, Range of values is 0 to 2
  2930                           ; switch strategies available:
  2931                           ; Name         Instructions Cycles
  2932                           ; simple_byte           10     6 (average)
  2933                           ; direct_byte           12     6 (fixed)
  2934                           ; jumptable            260     6 (fixed)
  2935                           ;	Chosen strategy is simple_byte
  2936  0354  0870               	movf	fclr@flg,w
  2937  0355  3A00               	xorlw	0	; case 0
  2938  0356  1903               	skipnz
  2939  0357  2B41               	goto	l2383
  2940  0358  3A01               	xorlw	1	; case 1
  2941  0359  1903               	skipnz
  2942  035A  2B45               	goto	l2385
  2943  035B  3A03               	xorlw	3	; case 2
  2944  035C  1903               	skipnz
  2945  035D  2B49               	goto	l2387
  2946  035E  2B5F               	goto	l217
  2947  035F                     l217:
  2948  035F  0008               	return
  2949  0360                     __end_of_fclr:
  2950                           
  2951                           	psect	text10
  2952  0320                     __ptext10:	
  2953 ;; *************** function _jikan *****************
  2954 ;; Defined at:
  2955 ;;		line 406 in file "Q5.c"
  2956 ;; Parameters:    Size  Location     Type
  2957 ;;		None
  2958 ;; Auto vars:     Size  Location     Type
  2959 ;;		None
  2960 ;; Return value:  Size  Location     Type
  2961 ;;                  1    wreg      void 
  2962 ;; Registers used:
  2963 ;;		wreg, status,2
  2964 ;; Tracked objects:
  2965 ;;		On entry : 0/0
  2966 ;;		On exit  : 0/0
  2967 ;;		Unchanged: 0/0
  2968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2973 ;;Total ram usage:        0 bytes
  2974 ;; Hardware stack levels used:    1
  2975 ;; This function calls:
  2976 ;;		Nothing
  2977 ;; This function is called by:
  2978 ;;		_main
  2979 ;; This function uses a non-reentrant model
  2980 ;;
  2981                           
  2982                           
  2983                           ;psect for function _jikan
  2984  0320                     _jikan:
  2985  0320                     l2493:	
  2986                           ;incstack = 0
  2987                           ; Regs used in _jikan: [wreg+status,2]
  2988                           
  2989                           
  2990                           ;Q5.c: 408:     if(RA2==0){++count;}
  2991  0320  0020               	movlb	0	; select bank0
  2992  0321  190C               	btfsc	12,2	;volatile
  2993  0322  2B24               	goto	u2131
  2994  0323  2B25               	goto	u2130
  2995  0324                     u2131:
  2996  0324  2B2A               	goto	l2497
  2997  0325                     u2130:
  2998  0325                     l2495:
  2999  0325  3001               	movlw	1
  3000  0326  07D0               	addwf	_count,f
  3001  0327  3000               	movlw	0
  3002  0328  3DD1               	addwfc	_count+1,f
  3003  0329  2B2C               	goto	l232
  3004  032A                     l2497:
  3005  032A  01D0               	clrf	_count
  3006  032B  01D1               	clrf	_count+1
  3007  032C                     l232:
  3008  032C  0008               	return
  3009  032D                     __end_of_jikan:
  3010  007E                     btemp	set	126	;btemp
  3011  007E                     wtemp0	set	126
  3012                           
  3013                           	psect	config
  3014                           
  3015                           ;Config register CONFIG1 @ 0x8007
  3016                           ;	Oscillator Selection
  3017                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  3018                           ;	Watchdog Timer Enable
  3019                           ;	WDTE = OFF, WDT disabled
  3020                           ;	Power-up Timer Enable
  3021                           ;	PWRTE = OFF, PWRT disabled
  3022                           ;	MCLR Pin Function Select
  3023                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  3024                           ;	Flash Program Memory Code Protection
  3025                           ;	CP = OFF, Program memory code protection is disabled
  3026                           ;	Data Memory Code Protection
  3027                           ;	CPD = OFF, Data memory code protection is disabled
  3028                           ;	Brown-out Reset Enable
  3029                           ;	BOREN = OFF, Brown-out Reset disabled
  3030                           ;	Clock Out Enable
  3031                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  3032                           ;	Internal/External Switchover
  3033                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3034                           ;	Fail-Safe Clock Monitor Enable
  3035                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3036  8007                     	org	32775
  3037  8007  09E4               	dw	2532
  3038                           
  3039                           ;Config register CONFIG2 @ 0x8008
  3040                           ;	Flash Memory Self-Write Protection
  3041                           ;	WRT = OFF, Write protection off
  3042                           ;	Voltage Regulator Capacitor Enable
  3043                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
  3044                           ;	PLL Enable
  3045                           ;	PLLEN = OFF, 4x PLL disabled
  3046                           ;	Stack Overflow/Underflow Reset Enable
  3047                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  3048                           ;	Brown-out Reset Voltage Selection
  3049                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  3050                           ;	Low-Voltage Programming Enable
  3051                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  3052  8008                     	org	32776
  3053  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    0
    Data        156
    BSS         34
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     38      80
    BANK1            80      0      76
    BANK2            80      0      72
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_kaisu
    _waitSEG->___lwdiv
    _waitSEG->_dynam
    _kaisu->_tact
    _tact->_tactsw

Critical Paths under _main in BANK0

    _main->_waitSEG
    _waitSEG->_dynam

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                25    25      0   10978
                                             12 COMMON     1     1      0
                                             14 BANK0     24    24      0
                              _dynam
                               _fclr
                              _jikan
                              _kaisu
                           _portinit
                            _waitSEG
                             _zenoff
 ---------------------------------------------------------------------------------
 (1) _zenoff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _waitSEG                                              8     2      6    4392
                                              8 COMMON     2     2      0
                                              8 BANK0      6     0      6
                            ___lwdiv
                              _dynam
 ---------------------------------------------------------------------------------
 (2) _dynam                                               16     8      8    2271
                                              0 COMMON     8     0      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     618
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _portinit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _kaisu                                                2     0      2    2462
                                             10 COMMON     2     0      2
                               _fclr
                               _tact
 ---------------------------------------------------------------------------------
 (2) _tact                                                 2     0      2     746
                                              8 COMMON     2     0      2
                             _tactsw
 ---------------------------------------------------------------------------------
 (3) _tactsw                                               8     8      0     116
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 (2) _fclr                                                 2     0      2    1618
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _jikan                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _dynam
   _fclr
   _jikan
   _kaisu
     _fclr
     _tact
       _tactsw
   _portinit
   _waitSEG
     ___lwdiv
     _dynam
   _zenoff

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     26      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      4C       7       95.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      48       9       90.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      F1      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      F1      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Jun 05 08:12:00 2021

                     l95 033F                       _cw 005A                      l112 0683  
                    l114 0693                      l123 06C9                      l116 06A9  
                    l108 031F                      l118 06B9                      l135 07D0  
                    l232 032C                      l208 049F                      l217 035F  
                    l129 0746                      l227 0538                      l193 040C  
                    l258 0393                      l356 0542                      l359 054F  
                    l805 03CF                      _RA0 0060                      _RA1 0061  
                    _RA2 0062                      _RC0 0070                      _RC1 0071  
                    _RC2 0072                      _RC5 0075                      _RC6 0076  
                    _RC7 0077                      _ccw 0058                      _flg 005C  
                    wreg 0009                     l2201 0673                     l2211 068E  
                   l2203 067A                     l2301 0758                     l2221 0699  
                   l2205 067F                     l2311 0770                     l2303 075A  
                   l2231 06B4                     l2223 06A0                     l2215 0695  
                   l2207 0687                     l2401 039C                     l2321 07A8  
                   l2313 0782                     l2305 075E                     l2241 06BE  
                   l2225 06A5                     l2217 0697                     l3201 05A6  
                   l2411 03BB                     l2403 039F                     l2323 07AE  
                   l2315 0789                     l2307 0764                     l2251 06D1  
                   l2243 06BF                     l2235 06BC                     l2227 06AD  
                   l2219 0698                     l3211 05C5                     l3203 05AC  
                   l2181 03EF                     l2173 03D0                     l2413 03BF  
                   l2405 03A4                     l2325 07B0                     l2317 078F  
                   l2309 076A                     l2253 06D7                     l2261 06E7  
                   l2245 06C1                     l2237 06BD                     l2341 07C0  
                   l3221 05F6                     l3205 05B0                     l3213 05E4  
                   l2183 03F1                     l2175 03D4                     l2351 0459  
                   l2431 033D                     l2423 032D                     l2415 03C0  
                   l2407 03A8                     l2327 07B4                     l2319 07A1  
                   l2271 0712                     l2263 06ED                     l2255 06DB  
                   l2247 06C7                     l2239 06BD                     l2191 0667  
                   l3231 0632                     l3223 0604                     l3215 05EB  
                   l3207 05B4                     l2185 03FA                     l2177 03E0  
                   l2361 0474                     l2353 0460                     l2425 0330  
                   l2417 03C5                     l2409 03AC                     l2337 07BB  
                   l2329 07B4                     l2281 0737                     l2273 0724  
                   l2265 06F3                     l2257 06DD                     l2249 06CB  
                   l2193 066E                     l3233 0635                     l3217 05EF  
                   l3225 0623                     l3209 05B7                     l3161 0542  
                   l3153 0539                     l2179 03EA                     l2363 0477  
                   l2355 0465                     l2347 0455                     l2427 0333  
                   l2419 03CB                     l2291 073E                     l2283 0737  
                   l2275 072B                     l2267 0705                     l2259 06E1  
                   l2195 066F                     l3235 0643                     l3227 062A  
                   l3219 05F3                     l3171 0560                     l3163 0542  
                   l3155 053C                     l2381 0340                     l2189 0407  
                   l2365 047E                     l2357 0468                     l2349 0456  
                   l2429 033A                     l2293 0744                     l2277 0731  
                   l2269 070C                     l2197 0671                     l2541 0371  
                   l2461 031E                     l2453 0317                     l3229 062E  
                   l3181 056A                     l3173 0567                     l3165 0542  
                   l3157 0542                     l2383 0341                     l2391 034F  
                   l2367 0482                     l2359 046F                     l2375 048F  
                   l2471 0500                     l2463 04EC                     l2295 0748  
                   l2279 0733                     l2199 0672                     l2543 0375  
                   l2455 031B                     l3191 0582                     l3183 056A  
                   l3175 0567                     l3167 0547                     l3159 0542  
                   l2385 0345                     l2369 0488                     l2481 051F  
                   l2473 0504                     l2465 04ED                     l2297 074E  
                   l2457 031C                     l3193 0587                     l3185 056A  
                   l3177 0567                     l3169 054B                     l2387 0349  
                   l2483 0523                     l2475 050B                     l2467 04F3  
                   l3451 07C5                     l2299 0754                     l2547 037C  
                   l2539 0360                     l2459 031D                     l3195 058C  
                   l3187 056A                     l3179 056A                     l2493 0320  
                   l3453 0530                     l2477 0512                     l2469 04FA  
                   l2397 0394                     l2549 038E                     l3189 057B  
                   l2495 0325                     l3455 0494                     l2479 0519  
                   l2487 052B                     l2399 0396                     l3199 0595  
                   l2497 032A                     l3457 0354                     l3449 059B  
                   u2000 039C                     u2001 039B                     u2100 0500  
                   u2020 03AC                     u2101 04FF                     u2021 03AB  
                   u2110 0519                     u2111 0518                     u2015 03A0  
                   u2120 051F                     u2040 03BB                     u2121 051E  
                   u2041 03BA                     u2130 0325                     u2131 0324  
                   u2035 03AD                     u2060 03CB                     u2061 03CA  
                   u2045 03B7                     u2055 03C1                     u2090 04FA  
                   u2091 04F9                     u2180 037B                     u3300 05B0  
                   u2181 037A                     u3301 05AF                     u1710 03EA  
                   u3310 05B4                     u3230 0547                     u1711 03E9  
                   u3311 05B3                     u3231 0546                     u1720 03FA  
                   u1800 06ED                     u3400 0643                     u3320 05C5  
                   u3240 054B                     u1721 03F9                     u1801 06EC  
                   u3401 0642                     u3321 05C4                     u3241 054A  
                   u1810 06F3                     u1730 067A                     u3330 05EB  
                   u3250 054F                     u1715 03E6                     u1811 06F2  
                   u1731 0679                     u3331 05EA                     u3251 054E  
                   u1900 0770                     u1820 070C                     u1740 068D  
                   u3340 05EF                     u3260 0556                     u1901 076F  
                   u1821 070B                     u1741 068C                     u3405 063F  
                   u3341 05EE                     u3325 05C1                     u3261 0553  
                   u1910 0789                     u1830 0712                     u1750 06A0  
                   u3350 05F3                     u3270 055E                     u1911 0788  
                   u1831 0711                     u1751 069F                     u3351 05F2  
                   u3271 055B                     u1920 078F                     u1840 072B  
                   u1760 06B3                     u3360 0604                     u1921 078E  
                   u1841 072A                     u1761 06B2                     u3361 0603  
                   u1930 07A8                     u1850 0731                     u1770 06C7  
                   u3370 062A                     u3290 05AC                     u3274 0558  
                   u1931 07A7                     u1851 0730                     u1771 06C6  
                   u3371 0629                     u3291 05AB                     u1940 07AE  
                   u1860 0744                     u1780 06D1                     u3380 062E  
                   u3284 0560                     u1941 07AD                     u1861 0743  
                   u1781 06D0                     u3381 062D                     u3365 0600  
                   u1950 0460                     u1870 074E                     u1790 06D7  
                   u3390 0632                     u1951 045F                     u1871 074D  
                   u1791 06D6                     u3391 0631                     u1960 046F  
                   u1880 0754                     u1961 046E                     u1881 0753  
                   u1970 047E                     u1890 076A                     u1971 047D  
                   u1891 0769                     u1980 0488                     u1981 0487  
                   u1990 048E                     u1991 048D                     _atai 0052  
                   _fclr 0340                     _main 0539                     _num0 0154  
                   _kisu 00D8                     _moja 00CC                     _samf 0120  
                   _mojf 00C0                     _tact 0455                     _mojh 006C  
                   _moji 0140                     _mojn 0068                     _samp 00A0  
                   _gusu 00E2                     fsr0h 0005                     fsr1h 0007  
                   indf0 0000                     fsr0l 0004                     fsr1l 0006  
                   btemp 007E                     start 0002                    ?_fclr 0070  
                  ?_main 0070                    ?_tact 0078          __end_of___lwdiv 03D0  
                  _PORTA 000C                    _PORTB 000D                    _PORTC 000E  
                  _TRISA 008C                    _TRISB 008D                    _TRISC 008E  
                  _code1 0048                    _atai1 0054                    _kaisu 04EC  
                  _jikan 0320                    _count 0050                    _dynam 0667  
                  _fugou 0046          __end_of_waitSEG 0394                    status 0003  
                  wtemp0 007E          __initialization 07D1             __end_of_fclr 0360  
           __end_of_main 0667             __end_of_tact 04A0                   ??_fclr 0072  
                 ??_main 007C                   ??_tact 007A                   ?_kaisu 007A  
                 ?_jikan 0070                   ?_dynam 0070                   _ANSELA 018C  
                 _ANSELB 018D                   _OSCCON 0099              dynam@smdata 0074  
                 _code10 004A                   _atai10 0056                   _flag_P 005E  
                 _flag_R 0060                ??___lwdiv 0074                   _tactsw 03D0  
                 _zenoff 0317                   dynam@j 0024                ??_waitSEG 0078  
       __end_of_portinit 0340  __end_of__initialization 07FD           __pcstackCOMMON 0070  
           __pidataBANK0 030F             __pidataBANK1 04A0             __pidataBANK2 040D  
          __end_of_kaisu 0539            __end_of_jikan 032D            __end_of_dynam 07D1  
                ??_kaisu 007C                  ??_jikan 0070                  ??_dynam 0078  
             __pbssBANK0 0046               __pmaintext 0539                  ?_tactsw 0070  
                ?_zenoff 0070              waitSEG@seg1 0028              waitSEG@seg2 002A  
              ?_portinit 0070                  ___lwdiv 0394                  _code100 004C  
        __size_of_tactsw 003D                  __ptext1 0317                  __ptext2 0360  
                __ptext3 0667                  __ptext4 0394                  __ptext5 032D  
                __ptext6 04EC                  __ptext7 0455                  __ptext8 03D0  
                __ptext9 0340          __size_of_zenoff 0009                  fclr@flg 0070  
                _waitSEG 0360                  clrloop0 0304     end_of_initialization 07FD  
                dynam@tm 0022                  dynam@tr 0076                  init_ram 0309  
                initloop 030A                  tactsw@a 0076                  tactsw@b 0072  
                tactsw@c 0074               ??_portinit 0070               kaisu@mode1 007A  
         __end_of_tactsw 040D           __end_of_zenoff 0320      start_initialization 07D1  
            __pdataBANK0 0068              __pdataBANK1 00A0              __pdataBANK2 0120  
               ??_tactsw 0070                 ??_zenoff 0070                ___latbits 0003  
          __pcstackBANK0 0020         ___lwdiv@dividend 0072                 ?___lwdiv 0070  
      __size_of_portinit 0013                 ?_waitSEG 0028         ___lwdiv@quotient 0075  
         __size_of_kaisu 004D           __size_of_jikan 000D           __size_of_dynam 016A  
          dynam@dig1data 0070            dynam@dig2data 0072                clear_ram0 0303  
       __size_of___lwdiv 003C                 _code1000 004E          ___lwdiv@divisor 0070  
        ___lwdiv@counter 0077         __size_of_waitSEG 0034                 __ptext10 0320  
               _flag_sw1 0066                 _flag_sw2 0064                 _flag_sw3 0062  
              waitSEG@wt 002C            __size_of_fclr 0020            __size_of_main 012E  
          __size_of_tact 004B                 _portinit 032D                 main@segL 0044  
               dynam@ext 0026                 dynam@smd 0020                 tact@mode 0078  
               waitSEG@i 0078  
