

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Jun 05 08:16:28 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F1938
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.20
    31                           ; Generated 12/02/2020 GMT
    32                           ; 
    33                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F1938 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  0010                     	;# 
    80  0011                     	;# 
    81  0012                     	;# 
    82  0013                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  010C                     	;# 
   113  010D                     	;# 
   114  010E                     	;# 
   115  0110                     	;# 
   116  0111                     	;# 
   117  0112                     	;# 
   118  0113                     	;# 
   119  0114                     	;# 
   120  0115                     	;# 
   121  0116                     	;# 
   122  0117                     	;# 
   123  0118                     	;# 
   124  0119                     	;# 
   125  011A                     	;# 
   126  011B                     	;# 
   127  011D                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0191                     	;# 
   131  0191                     	;# 
   132  0192                     	;# 
   133  0193                     	;# 
   134  0193                     	;# 
   135  0193                     	;# 
   136  0194                     	;# 
   137  0195                     	;# 
   138  0196                     	;# 
   139  0199                     	;# 
   140  019A                     	;# 
   141  019B                     	;# 
   142  019B                     	;# 
   143  019B                     	;# 
   144  019B                     	;# 
   145  019C                     	;# 
   146  019C                     	;# 
   147  019D                     	;# 
   148  019E                     	;# 
   149  019F                     	;# 
   150  020D                     	;# 
   151  0210                     	;# 
   152  0211                     	;# 
   153  0212                     	;# 
   154  0213                     	;# 
   155  0214                     	;# 
   156  0215                     	;# 
   157  0215                     	;# 
   158  0216                     	;# 
   159  0217                     	;# 
   160  0291                     	;# 
   161  0291                     	;# 
   162  0292                     	;# 
   163  0293                     	;# 
   164  0294                     	;# 
   165  0295                     	;# 
   166  0295                     	;# 
   167  0296                     	;# 
   168  0298                     	;# 
   169  0298                     	;# 
   170  0299                     	;# 
   171  029A                     	;# 
   172  029B                     	;# 
   173  029C                     	;# 
   174  029C                     	;# 
   175  029D                     	;# 
   176  029E                     	;# 
   177  029F                     	;# 
   178  0311                     	;# 
   179  0311                     	;# 
   180  0312                     	;# 
   181  0313                     	;# 
   182  0314                     	;# 
   183  0315                     	;# 
   184  0315                     	;# 
   185  0316                     	;# 
   186  0318                     	;# 
   187  0318                     	;# 
   188  0319                     	;# 
   189  031A                     	;# 
   190  031C                     	;# 
   191  031C                     	;# 
   192  031D                     	;# 
   193  031E                     	;# 
   194  0394                     	;# 
   195  0395                     	;# 
   196  0396                     	;# 
   197  0415                     	;# 
   198  0416                     	;# 
   199  0417                     	;# 
   200  041C                     	;# 
   201  041D                     	;# 
   202  041E                     	;# 
   203  0791                     	;# 
   204  0792                     	;# 
   205  0793                     	;# 
   206  0794                     	;# 
   207  0795                     	;# 
   208  0798                     	;# 
   209  0799                     	;# 
   210  07A0                     	;# 
   211  07A1                     	;# 
   212  07A3                     	;# 
   213  07A4                     	;# 
   214  07A6                     	;# 
   215  07A7                     	;# 
   216  07A9                     	;# 
   217  07AA                     	;# 
   218  0FE4                     	;# 
   219  0FE5                     	;# 
   220  0FE6                     	;# 
   221  0FE7                     	;# 
   222  0FE8                     	;# 
   223  0FE9                     	;# 
   224  0FEA                     	;# 
   225  0FEB                     	;# 
   226  0FED                     	;# 
   227  0FEE                     	;# 
   228  0FEF                     	;# 
   229  0000                     	;# 
   230  0001                     	;# 
   231  0002                     	;# 
   232  0003                     	;# 
   233  0004                     	;# 
   234  0005                     	;# 
   235  0006                     	;# 
   236  0007                     	;# 
   237  0008                     	;# 
   238  0009                     	;# 
   239  000A                     	;# 
   240  000B                     	;# 
   241  000C                     	;# 
   242  000D                     	;# 
   243  000E                     	;# 
   244  0010                     	;# 
   245  0011                     	;# 
   246  0012                     	;# 
   247  0013                     	;# 
   248  0015                     	;# 
   249  0016                     	;# 
   250  0016                     	;# 
   251  0017                     	;# 
   252  0018                     	;# 
   253  0019                     	;# 
   254  001A                     	;# 
   255  001B                     	;# 
   256  001C                     	;# 
   257  001E                     	;# 
   258  001F                     	;# 
   259  008C                     	;# 
   260  008D                     	;# 
   261  008E                     	;# 
   262  0090                     	;# 
   263  0091                     	;# 
   264  0092                     	;# 
   265  0093                     	;# 
   266  0095                     	;# 
   267  0096                     	;# 
   268  0097                     	;# 
   269  0098                     	;# 
   270  0099                     	;# 
   271  009A                     	;# 
   272  009B                     	;# 
   273  009B                     	;# 
   274  009C                     	;# 
   275  009D                     	;# 
   276  009E                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  0110                     	;# 
   281  0111                     	;# 
   282  0112                     	;# 
   283  0113                     	;# 
   284  0114                     	;# 
   285  0115                     	;# 
   286  0116                     	;# 
   287  0117                     	;# 
   288  0118                     	;# 
   289  0119                     	;# 
   290  011A                     	;# 
   291  011B                     	;# 
   292  011D                     	;# 
   293  018C                     	;# 
   294  018D                     	;# 
   295  0191                     	;# 
   296  0191                     	;# 
   297  0192                     	;# 
   298  0193                     	;# 
   299  0193                     	;# 
   300  0193                     	;# 
   301  0194                     	;# 
   302  0195                     	;# 
   303  0196                     	;# 
   304  0199                     	;# 
   305  019A                     	;# 
   306  019B                     	;# 
   307  019B                     	;# 
   308  019B                     	;# 
   309  019B                     	;# 
   310  019C                     	;# 
   311  019C                     	;# 
   312  019D                     	;# 
   313  019E                     	;# 
   314  019F                     	;# 
   315  020D                     	;# 
   316  0210                     	;# 
   317  0211                     	;# 
   318  0212                     	;# 
   319  0213                     	;# 
   320  0214                     	;# 
   321  0215                     	;# 
   322  0215                     	;# 
   323  0216                     	;# 
   324  0217                     	;# 
   325  0291                     	;# 
   326  0291                     	;# 
   327  0292                     	;# 
   328  0293                     	;# 
   329  0294                     	;# 
   330  0295                     	;# 
   331  0295                     	;# 
   332  0296                     	;# 
   333  0298                     	;# 
   334  0298                     	;# 
   335  0299                     	;# 
   336  029A                     	;# 
   337  029B                     	;# 
   338  029C                     	;# 
   339  029C                     	;# 
   340  029D                     	;# 
   341  029E                     	;# 
   342  029F                     	;# 
   343  0311                     	;# 
   344  0311                     	;# 
   345  0312                     	;# 
   346  0313                     	;# 
   347  0314                     	;# 
   348  0315                     	;# 
   349  0315                     	;# 
   350  0316                     	;# 
   351  0318                     	;# 
   352  0318                     	;# 
   353  0319                     	;# 
   354  031A                     	;# 
   355  031C                     	;# 
   356  031C                     	;# 
   357  031D                     	;# 
   358  031E                     	;# 
   359  0394                     	;# 
   360  0395                     	;# 
   361  0396                     	;# 
   362  0415                     	;# 
   363  0416                     	;# 
   364  0417                     	;# 
   365  041C                     	;# 
   366  041D                     	;# 
   367  041E                     	;# 
   368  0791                     	;# 
   369  0792                     	;# 
   370  0793                     	;# 
   371  0794                     	;# 
   372  0795                     	;# 
   373  0798                     	;# 
   374  0799                     	;# 
   375  07A0                     	;# 
   376  07A1                     	;# 
   377  07A3                     	;# 
   378  07A4                     	;# 
   379  07A6                     	;# 
   380  07A7                     	;# 
   381  07A9                     	;# 
   382  07AA                     	;# 
   383  0FE4                     	;# 
   384  0FE5                     	;# 
   385  0FE6                     	;# 
   386  0FE7                     	;# 
   387  0FE8                     	;# 
   388  0FE9                     	;# 
   389  0FEA                     	;# 
   390  0FEB                     	;# 
   391  0FED                     	;# 
   392  0FEE                     	;# 
   393  0FEF                     	;# 
   394                           
   395                           	psect	idataBANK0
   396  0305                     __pidataBANK0:
   397                           
   398                           ;initializer for _mojn
   399  0305  3454               	retlw	84
   400  0306  3400               	retlw	0
   401  0307  3473               	retlw	115
   402  0308  3400               	retlw	0
   403                           
   404                           ;initializer for _mojh
   405  0309  3476               	retlw	118
   406  030A  3400               	retlw	0
   407  030B  3438               	retlw	56
   408  030C  3400               	retlw	0
   409                           
   410                           	psect	idataBANK1
   411  0496                     __pidataBANK1:
   412                           
   413                           ;initializer for _samp
   414  0496  343F               	retlw	63
   415  0497  3400               	retlw	0
   416  0498  3406               	retlw	6
   417  0499  3400               	retlw	0
   418  049A  345B               	retlw	91
   419  049B  3400               	retlw	0
   420  049C  344F               	retlw	79
   421  049D  3400               	retlw	0
   422  049E  3466               	retlw	102
   423  049F  3400               	retlw	0
   424  04A0  346D               	retlw	109
   425  04A1  3400               	retlw	0
   426  04A2  347D               	retlw	125
   427  04A3  3400               	retlw	0
   428  04A4  3427               	retlw	39
   429  04A5  3400               	retlw	0
   430  04A6  347F               	retlw	127
   431  04A7  3400               	retlw	0
   432  04A8  346F               	retlw	111
   433  04A9  3400               	retlw	0
   434  04AA  345F               	retlw	95
   435  04AB  3400               	retlw	0
   436  04AC  347C               	retlw	124
   437  04AD  3400               	retlw	0
   438  04AE  3458               	retlw	88
   439  04AF  3400               	retlw	0
   440  04B0  345E               	retlw	94
   441  04B1  3400               	retlw	0
   442  04B2  3479               	retlw	121
   443  04B3  3400               	retlw	0
   444  04B4  3471               	retlw	113
   445  04B5  3400               	retlw	0
   446                           
   447                           ;initializer for _mojf
   448  04B6  3471               	retlw	113
   449  04B7  3400               	retlw	0
   450  04B8  3479               	retlw	121
   451  04B9  3400               	retlw	0
   452  04BA  345E               	retlw	94
   453  04BB  3400               	retlw	0
   454  04BC  3458               	retlw	88
   455  04BD  3400               	retlw	0
   456  04BE  347C               	retlw	124
   457  04BF  3400               	retlw	0
   458  04C0  345F               	retlw	95
   459  04C1  3400               	retlw	0
   460                           
   461                           ;initializer for _moja
   462  04C2  345F               	retlw	95
   463  04C3  3400               	retlw	0
   464  04C4  347C               	retlw	124
   465  04C5  3400               	retlw	0
   466  04C6  3458               	retlw	88
   467  04C7  3400               	retlw	0
   468  04C8  345E               	retlw	94
   469  04C9  3400               	retlw	0
   470  04CA  3479               	retlw	121
   471  04CB  3400               	retlw	0
   472  04CC  3471               	retlw	113
   473  04CD  3400               	retlw	0
   474                           
   475                           ;initializer for _kisu
   476  04CE  3406               	retlw	6
   477  04CF  3400               	retlw	0
   478  04D0  344F               	retlw	79
   479  04D1  3400               	retlw	0
   480  04D2  346D               	retlw	109
   481  04D3  3400               	retlw	0
   482  04D4  3427               	retlw	39
   483  04D5  3400               	retlw	0
   484  04D6  346F               	retlw	111
   485  04D7  3400               	retlw	0
   486                           
   487                           ;initializer for _gusu
   488  04D8  343F               	retlw	63
   489  04D9  3400               	retlw	0
   490  04DA  345B               	retlw	91
   491  04DB  3400               	retlw	0
   492  04DC  3466               	retlw	102
   493  04DD  3400               	retlw	0
   494  04DE  347D               	retlw	125
   495  04DF  3400               	retlw	0
   496  04E0  347F               	retlw	127
   497  04E1  3400               	retlw	0
   498                           
   499                           	psect	idataBANK2
   500  0403                     __pidataBANK2:
   501                           
   502                           ;initializer for _samf
   503  0403  3471               	retlw	113
   504  0404  3400               	retlw	0
   505  0405  3479               	retlw	121
   506  0406  3400               	retlw	0
   507  0407  345E               	retlw	94
   508  0408  3400               	retlw	0
   509  0409  3458               	retlw	88
   510  040A  3400               	retlw	0
   511  040B  347C               	retlw	124
   512  040C  3400               	retlw	0
   513  040D  345F               	retlw	95
   514  040E  3400               	retlw	0
   515  040F  346F               	retlw	111
   516  0410  3400               	retlw	0
   517  0411  347F               	retlw	127
   518  0412  3400               	retlw	0
   519  0413  3427               	retlw	39
   520  0414  3400               	retlw	0
   521  0415  347D               	retlw	125
   522  0416  3400               	retlw	0
   523  0417  346D               	retlw	109
   524  0418  3400               	retlw	0
   525  0419  3466               	retlw	102
   526  041A  3400               	retlw	0
   527  041B  344F               	retlw	79
   528  041C  3400               	retlw	0
   529  041D  345B               	retlw	91
   530  041E  3400               	retlw	0
   531  041F  3406               	retlw	6
   532  0420  3400               	retlw	0
   533  0421  343F               	retlw	63
   534  0422  3400               	retlw	0
   535                           
   536                           ;initializer for _moji
   537  0423  345F               	retlw	95
   538  0424  3400               	retlw	0
   539  0425  347C               	retlw	124
   540  0426  3400               	retlw	0
   541  0427  3458               	retlw	88
   542  0428  3400               	retlw	0
   543  0429  345E               	retlw	94
   544  042A  3400               	retlw	0
   545  042B  3479               	retlw	121
   546  042C  3400               	retlw	0
   547  042D  3471               	retlw	113
   548  042E  3400               	retlw	0
   549  042F  3476               	retlw	118
   550  0430  3400               	retlw	0
   551  0431  3438               	retlw	56
   552  0432  3400               	retlw	0
   553  0433  3454               	retlw	84
   554  0434  3400               	retlw	0
   555  0435  3473               	retlw	115
   556  0436  3400               	retlw	0
   557                           
   558                           ;initializer for _num0
   559  0437  343F               	retlw	63
   560  0438  3400               	retlw	0
   561  0439  3406               	retlw	6
   562  043A  3400               	retlw	0
   563  043B  345B               	retlw	91
   564  043C  3400               	retlw	0
   565  043D  344F               	retlw	79
   566  043E  3400               	retlw	0
   567  043F  3466               	retlw	102
   568  0440  3400               	retlw	0
   569  0441  346D               	retlw	109
   570  0442  3400               	retlw	0
   571  0443  347D               	retlw	125
   572  0444  3400               	retlw	0
   573  0445  3427               	retlw	39
   574  0446  3400               	retlw	0
   575  0447  347F               	retlw	127
   576  0448  3400               	retlw	0
   577  0449  346F               	retlw	111
   578  044A  3400               	retlw	0
   579  000E                     _PORTC	set	14
   580  000D                     _PORTB	set	13
   581  000C                     _PORTA	set	12
   582  0061                     _RA1	set	97
   583  0060                     _RA0	set	96
   584  0062                     _RA2	set	98
   585  0077                     _RC7	set	119
   586  0070                     _RC0	set	112
   587  0071                     _RC1	set	113
   588  0072                     _RC2	set	114
   589  0076                     _RC6	set	118
   590  0075                     _RC5	set	117
   591  0099                     _OSCCON	set	153
   592  008E                     _TRISC	set	142
   593  008D                     _TRISB	set	141
   594  008C                     _TRISA	set	140
   595  018D                     _ANSELB	set	397
   596  018C                     _ANSELA	set	396
   597                           
   598                           	psect	cinit
   599  07D1                     start_initialization:	
   600                           ; #config settings
   601                           
   602  07D1                     __initialization:
   603                           
   604                           ; Initialize objects allocated to BANK0
   605  07D1  3005               	movlw	low __pidataBANK0
   606  07D2  0084               	movwf	4
   607  07D3  3083               	movlw	(high __pidataBANK0)| (0+128)
   608  07D4  0085               	movwf	5
   609  07D5  3068               	movlw	low __pdataBANK0
   610  07D6  0086               	movwf	6
   611  07D7  3000               	movlw	high __pdataBANK0
   612  07D8  0087               	movwf	7
   613  07D9  3008               	movlw	8
   614  07DA  3182  22FF  3187   	fcall	init_ram
   615                           
   616                           ; Initialize objects allocated to BANK1
   617  07DD  3096               	movlw	low __pidataBANK1
   618  07DE  0084               	movwf	4
   619  07DF  3084               	movlw	(high __pidataBANK1)| (0+128)
   620  07E0  0085               	movwf	5
   621  07E1  30A0               	movlw	low __pdataBANK1
   622  07E2  0086               	movwf	6
   623  07E3  3000               	movlw	high __pdataBANK1
   624  07E4  0087               	movwf	7
   625  07E5  304C               	movlw	76
   626  07E6  3182  22FF  3187   	fcall	init_ram
   627                           
   628                           ; Initialize objects allocated to BANK2
   629  07E9  3003               	movlw	low __pidataBANK2
   630  07EA  0084               	movwf	4
   631  07EB  3084               	movlw	(high __pidataBANK2)| (0+128)
   632  07EC  0085               	movwf	5
   633  07ED  3020               	movlw	low __pdataBANK2
   634  07EE  0086               	movwf	6
   635  07EF  3001               	movlw	high __pdataBANK2
   636  07F0  0087               	movwf	7
   637  07F1  3048               	movlw	72
   638  07F2  3182  22FF  3187   	fcall	init_ram
   639                           
   640                           ; Clear objects allocated to BANK0
   641  07F5  3046               	movlw	low __pbssBANK0
   642  07F6  0084               	movwf	4
   643  07F7  3000               	movlw	high __pbssBANK0
   644  07F8  0085               	movwf	5
   645  07F9  3022               	movlw	34
   646  07FA  3182  22F9  3187   	fcall	clear_ram0
   647  07FD                     end_of_initialization:	
   648                           ;End of C runtime variable initialization code
   649                           
   650  07FD                     __end_of__initialization:
   651  07FD  0020               	movlb	0
   652  07FE  3185  2D2F         	ljmp	_main	;jump to C main() function
   653                           
   654                           	psect	bssBANK0
   655  0046                     __pbssBANK0:
   656  0046                     _fugou:
   657  0046                     	ds	2
   658  0048                     _code1:
   659  0048                     	ds	2
   660  004A                     _code10:
   661  004A                     	ds	2
   662  004C                     _code100:
   663  004C                     	ds	2
   664  004E                     _code1000:
   665  004E                     	ds	2
   666  0050                     _count:
   667  0050                     	ds	2
   668  0052                     _atai:
   669  0052                     	ds	2
   670  0054                     _atai1:
   671  0054                     	ds	2
   672  0056                     _atai10:
   673  0056                     	ds	2
   674  0058                     _ccw:
   675  0058                     	ds	2
   676  005A                     _cw:
   677  005A                     	ds	2
   678  005C                     _flg:
   679  005C                     	ds	2
   680  005E                     _flag_P:
   681  005E                     	ds	2
   682  0060                     _flag_R:
   683  0060                     	ds	2
   684  0062                     _flag_sw3:
   685  0062                     	ds	2
   686  0064                     _flag_sw2:
   687  0064                     	ds	2
   688  0066                     _flag_sw1:
   689  0066                     	ds	2
   690                           
   691                           	psect	dataBANK0
   692  0068                     __pdataBANK0:
   693  0068                     _mojn:
   694  0068                     	ds	4
   695  006C                     _mojh:
   696  006C                     	ds	4
   697                           
   698                           	psect	dataBANK1
   699  00A0                     __pdataBANK1:
   700  00A0                     _samp:
   701  00A0                     	ds	32
   702  00C0                     _mojf:
   703  00C0                     	ds	12
   704  00CC                     _moja:
   705  00CC                     	ds	12
   706  00D8                     _kisu:
   707  00D8                     	ds	10
   708  00E2                     _gusu:
   709  00E2                     	ds	10
   710                           
   711                           	psect	dataBANK2
   712  0120                     __pdataBANK2:
   713  0120                     _samf:
   714  0120                     	ds	32
   715  0140                     _moji:
   716  0140                     	ds	20
   717  0154                     _num0:
   718  0154                     	ds	20
   719                           
   720                           	psect	inittext
   721  02FF                     init_ram:
   722  02FF  00FE               	movwf	btemp
   723  0300                     initloop:
   724  0300  0012               	moviw fsr0++
   725  0301  001E               	movwi fsr1++
   726  0302  0BFE               	decfsz	btemp,f
   727  0303  2B00               	goto	initloop
   728  0304  3400               	retlw	0
   729                           
   730                           	psect	clrtext
   731  02F9                     clear_ram0:	
   732                           ;	Called with FSR0 containing the base address, and
   733                           ;	WREG with the size to clear
   734                           
   735  02F9  0064               	clrwdt	;clear the watchdog before getting into this loop
   736  02FA                     clrloop0:
   737  02FA  0180               	clrf	0	;clear RAM location pointed to by FSR
   738  02FB  3101               	addfsr 0,1
   739  02FC  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   740  02FD  2AFA               	goto	clrloop0	;have we reached the end yet?
   741  02FE  3400               	retlw	0	;all done for this memory range, return
   742                           
   743                           	psect	cstackCOMMON
   744  0070                     __pcstackCOMMON:
   745  0070                     ?_portinit:
   746  0070                     ??_portinit:	
   747                           ; 1 bytes @ 0x0
   748                           
   749  0070                     ?_zenoff:	
   750                           ; 1 bytes @ 0x0
   751                           
   752  0070                     ??_zenoff:	
   753                           ; 1 bytes @ 0x0
   754                           
   755  0070                     ?_dynam:	
   756                           ; 1 bytes @ 0x0
   757                           
   758  0070                     ?_tactsw:	
   759                           ; 1 bytes @ 0x0
   760                           
   761  0070                     ??_tactsw:	
   762                           ; 1 bytes @ 0x0
   763                           
   764  0070                     ?_fclr:	
   765                           ; 1 bytes @ 0x0
   766                           
   767  0070                     ?_jikan:	
   768                           ; 1 bytes @ 0x0
   769                           
   770  0070                     ??_jikan:	
   771                           ; 1 bytes @ 0x0
   772                           
   773  0070                     ?_main:	
   774                           ; 1 bytes @ 0x0
   775                           
   776  0070                     ?___lwdiv:	
   777                           ; 1 bytes @ 0x0
   778                           
   779  0070                     dynam@dig1data:	
   780                           ; 2 bytes @ 0x0
   781                           
   782  0070                     fclr@flg:	
   783                           ; 2 bytes @ 0x0
   784                           
   785  0070                     ___lwdiv@divisor:	
   786                           ; 2 bytes @ 0x0
   787                           
   788                           
   789                           ; 2 bytes @ 0x0
   790  0070                     	ds	2
   791  0072                     ??_fclr:
   792  0072                     dynam@dig2data:	
   793                           ; 1 bytes @ 0x2
   794                           
   795  0072                     tactsw@b:	
   796                           ; 2 bytes @ 0x2
   797                           
   798  0072                     ___lwdiv@dividend:	
   799                           ; 2 bytes @ 0x2
   800                           
   801                           
   802                           ; 2 bytes @ 0x2
   803  0072                     	ds	2
   804  0074                     ??___lwdiv:
   805  0074                     dynam@smdata:	
   806                           ; 1 bytes @ 0x4
   807                           
   808  0074                     tactsw@c:	
   809                           ; 2 bytes @ 0x4
   810                           
   811                           
   812                           ; 2 bytes @ 0x4
   813  0074                     	ds	1
   814  0075                     ___lwdiv@quotient:
   815                           
   816                           ; 2 bytes @ 0x5
   817  0075                     	ds	1
   818  0076                     dynam@tr:
   819  0076                     tactsw@a:	
   820                           ; 2 bytes @ 0x6
   821                           
   822                           
   823                           ; 2 bytes @ 0x6
   824  0076                     	ds	1
   825  0077                     ___lwdiv@counter:
   826                           
   827                           ; 1 bytes @ 0x7
   828  0077                     	ds	1
   829  0078                     ??_dynam:
   830  0078                     ?_tact:	
   831                           ; 1 bytes @ 0x8
   832                           
   833  0078                     ??_waitSEG:	
   834                           ; 1 bytes @ 0x8
   835                           
   836  0078                     tact@mode:	
   837                           ; 1 bytes @ 0x8
   838                           
   839  0078                     waitSEG@i:	
   840                           ; 2 bytes @ 0x8
   841                           
   842                           
   843                           ; 2 bytes @ 0x8
   844  0078                     	ds	2
   845  007A                     ??_tact:
   846  007A                     ?_kaisu:	
   847                           ; 1 bytes @ 0xA
   848                           
   849  007A                     kaisu@mode1:	
   850                           ; 1 bytes @ 0xA
   851                           
   852                           
   853                           ; 2 bytes @ 0xA
   854  007A                     	ds	2
   855  007C                     ??_kaisu:
   856  007C                     ??_main:	
   857                           ; 1 bytes @ 0xC
   858                           
   859                           
   860                           ; 1 bytes @ 0xC
   861  007C                     	ds	1
   862                           
   863                           	psect	cstackBANK0
   864  0020                     __pcstackBANK0:
   865  0020                     dynam@smd:
   866                           
   867                           ; 2 bytes @ 0x0
   868  0020                     	ds	2
   869  0022                     dynam@tm:
   870                           
   871                           ; 2 bytes @ 0x2
   872  0022                     	ds	2
   873  0024                     dynam@j:
   874                           
   875                           ; 2 bytes @ 0x4
   876  0024                     	ds	2
   877  0026                     dynam@ext:
   878                           
   879                           ; 2 bytes @ 0x6
   880  0026                     	ds	2
   881  0028                     ?_waitSEG:
   882  0028                     waitSEG@seg1:	
   883                           ; 1 bytes @ 0x8
   884                           
   885                           
   886                           ; 2 bytes @ 0x8
   887  0028                     	ds	2
   888  002A                     waitSEG@seg2:
   889                           
   890                           ; 2 bytes @ 0xA
   891  002A                     	ds	2
   892  002C                     waitSEG@wt:
   893                           
   894                           ; 2 bytes @ 0xC
   895  002C                     	ds	24
   896  0044                     main@segL:
   897                           
   898                           ; 2 bytes @ 0x24
   899  0044                     	ds	2
   900                           
   901                           	psect	maintext
   902  052F                     __pmaintext:	
   903 ;;
   904 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   905 ;;
   906 ;; *************** function _main *****************
   907 ;; Defined at:
   908 ;;		line 768 in file "Q5.c"
   909 ;; Parameters:    Size  Location     Type
   910 ;;		None
   911 ;; Auto vars:     Size  Location     Type
   912 ;;  segL            2   36[BANK0 ] unsigned short 
   913 ;;  zyoutai         2    0        int 
   914 ;;  ataiR           2    0        int 
   915 ;;  ataiL           2    0        int 
   916 ;;  segR            2    0        unsigned short 
   917 ;;  ans             2    0        int 
   918 ;;  time            2    0        int 
   919 ;;  n               2    0        int 
   920 ;;  m               2    0        int 
   921 ;;  k               2    0        int 
   922 ;;  j               2    0        int 
   923 ;;  i               2    0        int 
   924 ;; Return value:  Size  Location     Type
   925 ;;                  1    wreg      void 
   926 ;; Registers used:
   927 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   928 ;; Tracked objects:
   929 ;;		On entry : B1F/0
   930 ;;		On exit  : 0/0
   931 ;;		Unchanged: 0/0
   932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   934 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
   935 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   936 ;;      Totals:         1      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
   937 ;;Total ram usage:       25 bytes
   938 ;; Hardware stack levels required when called:    3
   939 ;; This function calls:
   940 ;;		_dynam
   941 ;;		_fclr
   942 ;;		_jikan
   943 ;;		_kaisu
   944 ;;		_portinit
   945 ;;		_waitSEG
   946 ;;		_zenoff
   947 ;; This function is called by:
   948 ;;		Startup code after reset
   949 ;; This function uses a non-reentrant model
   950 ;;
   951                           
   952                           
   953                           ;psect for function _main
   954  052F                     _main:
   955  052F                     l3168:	
   956                           ;incstack = 0
   957                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   958                           
   959                           
   960                           ;Q5.c: 771:     OSCCON=0x7A;
   961  052F  307A               	movlw	122
   962  0530  0021               	movlb	1	; select bank1
   963  0531  0099               	movwf	25	;volatile
   964  0532                     l3170:
   965                           
   966                           ;Q5.c: 773:     portinit();
   967  0532  3183  2323  3185   	fcall	_portinit
   968                           
   969                           ;Q5.c: 775:     zenoff();
   970  0535  3183  230D  3185   	fcall	_zenoff
   971  0538                     l3172:
   972  0538                     l3174:
   973  0538                     l3176:
   974  0538                     l3178:
   975  0538                     l3180:
   976  0538                     l356:	
   977                           ;Q5.c: 780:     while((RA0!=1)||(RA1!=1)||(RA2!=1));
   978                           
   979  0538  0020               	movlb	0	; select bank0
   980  0539  1C0C               	btfss	12,0	;volatile
   981  053A  2D3C               	goto	u3251
   982  053B  2D3D               	goto	u3250
   983  053C                     u3251:
   984  053C  2D38               	goto	l356
   985  053D                     u3250:
   986  053D                     l3182:
   987  053D  1C8C               	btfss	12,1	;volatile
   988  053E  2D40               	goto	u3261
   989  053F  2D41               	goto	u3260
   990  0540                     u3261:
   991  0540  2D38               	goto	l356
   992  0541                     u3260:
   993  0541                     l3184:
   994  0541  1D0C               	btfss	12,2	;volatile
   995  0542  2D44               	goto	u3271
   996  0543  2D45               	goto	u3270
   997  0544                     u3271:
   998  0544  2D38               	goto	l356
   999  0545                     u3270:
  1000  0545                     l359:	
  1001                           ;Q5.c: 784:     hukki:
  1002                           
  1003                           
  1004                           ;Q5.c: 787:     RC2=RC0=RC1=1;
  1005  0545  148E               	bsf	14,1	;volatile
  1006  0546  188E               	btfsc	14,1	;volatile
  1007  0547  2D49               	goto	u3281
  1008  0548  2D4C               	goto	u3280
  1009  0549                     u3281:
  1010  0549  0020               	movlb	0	; select bank0
  1011  054A  140E               	bsf	14,0	;volatile
  1012  054B  2D4E               	goto	u3294
  1013  054C                     u3280:
  1014  054C  0020               	movlb	0	; select bank0
  1015  054D  100E               	bcf	14,0	;volatile
  1016  054E                     u3294:
  1017  054E  180E               	btfsc	14,0	;volatile
  1018  054F  2D51               	goto	u3291
  1019  0550  2D54               	goto	u3290
  1020  0551                     u3291:
  1021  0551  0020               	movlb	0	; select bank0
  1022  0552  150E               	bsf	14,2	;volatile
  1023  0553  2D56               	goto	u3304
  1024  0554                     u3290:
  1025  0554  0020               	movlb	0	; select bank0
  1026  0555  110E               	bcf	14,2	;volatile
  1027  0556                     u3304:
  1028  0556                     l3186:
  1029                           
  1030                           ;Q5.c: 790:     fclr(2);
  1031  0556  3002               	movlw	2
  1032  0557  00F0               	movwf	fclr@flg
  1033  0558  3000               	movlw	0
  1034  0559  00F1               	movwf	fclr@flg+1
  1035  055A  3183  2336  3185   	fcall	_fclr
  1036  055D                     l3188:
  1037  055D                     l3190:
  1038  055D                     l3192:
  1039                           
  1040                           ;Q5.c: 804:     unsigned short segL = 0;
  1041  055D  0020               	movlb	0	; select bank0
  1042  055E  01C4               	clrf	main@segL
  1043  055F  01C5               	clrf	main@segL+1
  1044  0560                     l3194:
  1045  0560                     l3196:
  1046  0560                     l3198:
  1047  0560                     l3200:
  1048  0560                     l3202:
  1049                           
  1050                           ;Q5.c: 817:         dynam(segL,0,0,0);
  1051  0560  0845               	movf	main@segL+1,w
  1052  0561  00F1               	movwf	dynam@dig1data+1
  1053  0562  0844               	movf	main@segL,w
  1054  0563  00F0               	movwf	dynam@dig1data
  1055  0564  3000               	movlw	0
  1056  0565  00F2               	movwf	dynam@dig2data
  1057  0566  00F3               	movwf	dynam@dig2data+1
  1058  0567  3000               	movlw	0
  1059  0568  00F4               	movwf	dynam@smdata
  1060  0569  00F5               	movwf	dynam@smdata+1
  1061  056A  3000               	movlw	0
  1062  056B  00F6               	movwf	dynam@tr
  1063  056C  00F7               	movwf	dynam@tr+1
  1064  056D  3186  2667  3185   	fcall	_dynam
  1065  0570                     l3204:
  1066                           
  1067                           ;Q5.c: 819:         kaisu(0);
  1068  0570  3000               	movlw	0
  1069  0571  00FA               	movwf	kaisu@mode1
  1070  0572  00FB               	movwf	kaisu@mode1+1
  1071  0573  3184  24E2  3185   	fcall	_kaisu
  1072                           
  1073                           ;Q5.c: 821:         switch(count){
  1074  0576  2D8A               	goto	l3214
  1075  0577                     l3206:
  1076  0577  3008               	movlw	8
  1077  0578  00C4               	movwf	main@segL
  1078  0579  3000               	movlw	0
  1079  057A  00C5               	movwf	main@segL+1
  1080                           
  1081                           ;Q5.c: 823:                     break;
  1082  057B  2D9B               	goto	l3216
  1083  057C                     l3208:
  1084  057C  3001               	movlw	1
  1085  057D  00C4               	movwf	main@segL
  1086  057E  3000               	movlw	0
  1087  057F  00C5               	movwf	main@segL+1
  1088                           
  1089                           ;Q5.c: 826:                     break;
  1090  0580  2D9B               	goto	l3216
  1091  0581                     l3210:
  1092  0581  3009               	movlw	9
  1093  0582  00C4               	movwf	main@segL
  1094  0583  3000               	movlw	0
  1095  0584  00C5               	movwf	main@segL+1
  1096                           
  1097                           ;Q5.c: 829:                     count = 1;
  1098  0585  3001               	movlw	1
  1099  0586  00D0               	movwf	_count
  1100  0587  3000               	movlw	0
  1101  0588  00D1               	movwf	_count+1
  1102                           
  1103                           ;Q5.c: 830:                     break;
  1104  0589  2D9B               	goto	l3216
  1105  058A                     l3214:
  1106                           
  1107                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1108                           ; Switch size 1, requested type "simple"
  1109                           ; Number of cases is 1, Range of values is 0 to 0
  1110                           ; switch strategies available:
  1111                           ; Name         Instructions Cycles
  1112                           ; simple_byte            4     3 (average)
  1113                           ; direct_byte            8     6 (fixed)
  1114                           ; jumptable            260     6 (fixed)
  1115                           ;	Chosen strategy is simple_byte
  1116  058A  0020               	movlb	0	; select bank0
  1117  058B  0851               	movf	_count+1,w
  1118  058C  3A00               	xorlw	0	; case 0
  1119  058D  1903               	skipnz
  1120  058E  2D90               	goto	l3478
  1121  058F  2D9B               	goto	l3216
  1122  0590                     l3478:
  1123                           
  1124                           ; Switch size 1, requested type "simple"
  1125                           ; Number of cases is 3, Range of values is 1 to 3
  1126                           ; switch strategies available:
  1127                           ; Name         Instructions Cycles
  1128                           ; simple_byte           10     6 (average)
  1129                           ; direct_byte           15     9 (fixed)
  1130                           ; jumptable            263     9 (fixed)
  1131                           ;	Chosen strategy is simple_byte
  1132  0590  0850               	movf	_count,w
  1133  0591  3A01               	xorlw	1	; case 1
  1134  0592  1903               	skipnz
  1135  0593  2D77               	goto	l3206
  1136  0594  3A03               	xorlw	3	; case 2
  1137  0595  1903               	skipnz
  1138  0596  2D7C               	goto	l3208
  1139  0597  3A01               	xorlw	1	; case 3
  1140  0598  1903               	skipnz
  1141  0599  2D81               	goto	l3210
  1142  059A  2D9B               	goto	l3216
  1143  059B                     l3216:
  1144                           
  1145                           ;Q5.c: 836:         if(segL != 0 && RA0 ==0 &&RA1 ==1){
  1146  059B  0844               	movf	main@segL,w
  1147  059C  0445               	iorwf	main@segL+1,w
  1148  059D  1903               	btfsc	3,2
  1149  059E  2DA0               	goto	u3311
  1150  059F  2DA1               	goto	u3310
  1151  05A0                     u3311:
  1152  05A0  2DD9               	goto	l3230
  1153  05A1                     u3310:
  1154  05A1                     l3218:
  1155  05A1  180C               	btfsc	12,0	;volatile
  1156  05A2  2DA4               	goto	u3321
  1157  05A3  2DA5               	goto	u3320
  1158  05A4                     u3321:
  1159  05A4  2DD9               	goto	l3230
  1160  05A5                     u3320:
  1161  05A5                     l3220:
  1162  05A5  1C8C               	btfss	12,1	;volatile
  1163  05A6  2DA8               	goto	u3331
  1164  05A7  2DA9               	goto	u3330
  1165  05A8                     u3331:
  1166  05A8  2DD9               	goto	l3230
  1167  05A9                     u3330:
  1168  05A9                     l3222:
  1169                           
  1170                           ;Q5.c: 837:             jikan();
  1171  05A9  3183  2316  3185   	fcall	_jikan
  1172  05AC                     l3224:
  1173                           
  1174                           ;Q5.c: 838:             if(count >= 500){
  1175  05AC  0020               	movlb	0	; select bank0
  1176  05AD  0851               	movf	_count+1,w
  1177  05AE  3A80               	xorlw	128
  1178  05AF  00FC               	movwf	??_main
  1179  05B0  3081               	movlw	129
  1180  05B1  027C               	subwf	??_main,w
  1181  05B2  1D03               	skipz
  1182  05B3  2DB6               	goto	u3345
  1183  05B4  30F4               	movlw	244
  1184  05B5  0250               	subwf	_count,w
  1185  05B6                     u3345:
  1186  05B6  1C03               	skipc
  1187  05B7  2DB9               	goto	u3341
  1188  05B8  2DBA               	goto	u3340
  1189  05B9                     u3341:
  1190  05B9  2DD9               	goto	l3230
  1191  05BA                     u3340:
  1192  05BA                     l3226:
  1193                           
  1194                           ;Q5.c: 839:                 waitSEG(segL,0x04|0x10|0x40,1000);
  1195  05BA  0020               	movlb	0	; select bank0
  1196  05BB  0845               	movf	main@segL+1,w
  1197  05BC  00A9               	movwf	waitSEG@seg1+1
  1198  05BD  0844               	movf	main@segL,w
  1199  05BE  00A8               	movwf	waitSEG@seg1
  1200  05BF  3054               	movlw	84
  1201  05C0  00AA               	movwf	waitSEG@seg2
  1202  05C1  3000               	movlw	0
  1203  05C2  00AB               	movwf	waitSEG@seg2+1
  1204  05C3  30E8               	movlw	232
  1205  05C4  00AC               	movwf	waitSEG@wt
  1206  05C5  3003               	movlw	3
  1207  05C6  00AD               	movwf	waitSEG@wt+1
  1208  05C7  3183  2356  3185   	fcall	_waitSEG
  1209                           
  1210                           ;Q5.c: 840:                 waitSEG(segL,0,1000);
  1211  05CA  0020               	movlb	0	; select bank0
  1212  05CB  0845               	movf	main@segL+1,w
  1213  05CC  00A9               	movwf	waitSEG@seg1+1
  1214  05CD  0844               	movf	main@segL,w
  1215  05CE  00A8               	movwf	waitSEG@seg1
  1216  05CF  3000               	movlw	0
  1217  05D0  00AA               	movwf	waitSEG@seg2
  1218  05D1  00AB               	movwf	waitSEG@seg2+1
  1219  05D2  30E8               	movlw	232
  1220  05D3  00AC               	movwf	waitSEG@wt
  1221  05D4  3003               	movlw	3
  1222  05D5  00AD               	movwf	waitSEG@wt+1
  1223  05D6  3183  2356  3185   	fcall	_waitSEG
  1224  05D9                     l3228:
  1225  05D9                     l3230:
  1226                           
  1227                           ;Q5.c: 847:         if(segL != 0 && RA0 ==1 &&RA1 ==0){
  1228  05D9  0020               	movlb	0	; select bank0
  1229  05DA  0844               	movf	main@segL,w
  1230  05DB  0445               	iorwf	main@segL+1,w
  1231  05DC  1903               	btfsc	3,2
  1232  05DD  2DDF               	goto	u3351
  1233  05DE  2DE0               	goto	u3350
  1234  05DF                     u3351:
  1235  05DF  2E18               	goto	l3244
  1236  05E0                     u3350:
  1237  05E0                     l3232:
  1238  05E0  1C0C               	btfss	12,0	;volatile
  1239  05E1  2DE3               	goto	u3361
  1240  05E2  2DE4               	goto	u3360
  1241  05E3                     u3361:
  1242  05E3  2E18               	goto	l3244
  1243  05E4                     u3360:
  1244  05E4                     l3234:
  1245  05E4  188C               	btfsc	12,1	;volatile
  1246  05E5  2DE7               	goto	u3371
  1247  05E6  2DE8               	goto	u3370
  1248  05E7                     u3371:
  1249  05E7  2E18               	goto	l3244
  1250  05E8                     u3370:
  1251  05E8                     l3236:
  1252                           
  1253                           ;Q5.c: 848:             jikan();
  1254  05E8  3183  2316  3185   	fcall	_jikan
  1255  05EB                     l3238:
  1256                           
  1257                           ;Q5.c: 849:             if(count >= 500){
  1258  05EB  0020               	movlb	0	; select bank0
  1259  05EC  0851               	movf	_count+1,w
  1260  05ED  3A80               	xorlw	128
  1261  05EE  00FC               	movwf	??_main
  1262  05EF  3081               	movlw	129
  1263  05F0  027C               	subwf	??_main,w
  1264  05F1  1D03               	skipz
  1265  05F2  2DF5               	goto	u3385
  1266  05F3  30F4               	movlw	244
  1267  05F4  0250               	subwf	_count,w
  1268  05F5                     u3385:
  1269  05F5  1C03               	skipc
  1270  05F6  2DF8               	goto	u3381
  1271  05F7  2DF9               	goto	u3380
  1272  05F8                     u3381:
  1273  05F8  2E18               	goto	l3244
  1274  05F9                     u3380:
  1275  05F9                     l3240:
  1276                           
  1277                           ;Q5.c: 850:                 waitSEG(segL,0x02|0x20|0x40,1000);
  1278  05F9  0020               	movlb	0	; select bank0
  1279  05FA  0845               	movf	main@segL+1,w
  1280  05FB  00A9               	movwf	waitSEG@seg1+1
  1281  05FC  0844               	movf	main@segL,w
  1282  05FD  00A8               	movwf	waitSEG@seg1
  1283  05FE  3062               	movlw	98
  1284  05FF  00AA               	movwf	waitSEG@seg2
  1285  0600  3000               	movlw	0
  1286  0601  00AB               	movwf	waitSEG@seg2+1
  1287  0602  30E8               	movlw	232
  1288  0603  00AC               	movwf	waitSEG@wt
  1289  0604  3003               	movlw	3
  1290  0605  00AD               	movwf	waitSEG@wt+1
  1291  0606  3183  2356  3185   	fcall	_waitSEG
  1292                           
  1293                           ;Q5.c: 851:                 waitSEG(segL,0,1000);
  1294  0609  0020               	movlb	0	; select bank0
  1295  060A  0845               	movf	main@segL+1,w
  1296  060B  00A9               	movwf	waitSEG@seg1+1
  1297  060C  0844               	movf	main@segL,w
  1298  060D  00A8               	movwf	waitSEG@seg1
  1299  060E  3000               	movlw	0
  1300  060F  00AA               	movwf	waitSEG@seg2
  1301  0610  00AB               	movwf	waitSEG@seg2+1
  1302  0611  30E8               	movlw	232
  1303  0612  00AC               	movwf	waitSEG@wt
  1304  0613  3003               	movlw	3
  1305  0614  00AD               	movwf	waitSEG@wt+1
  1306  0615  3183  2356  3185   	fcall	_waitSEG
  1307  0618                     l3242:
  1308  0618                     l3244:
  1309                           
  1310                           ;Q5.c: 859:         if(segL != 0 && RA0 ==0 &&RA1 ==0){
  1311  0618  0020               	movlb	0	; select bank0
  1312  0619  0844               	movf	main@segL,w
  1313  061A  0445               	iorwf	main@segL+1,w
  1314  061B  1903               	btfsc	3,2
  1315  061C  2E1E               	goto	u3391
  1316  061D  2E1F               	goto	u3390
  1317  061E                     u3391:
  1318  061E  2E59               	goto	l3258
  1319  061F                     u3390:
  1320  061F                     l3246:
  1321  061F  180C               	btfsc	12,0	;volatile
  1322  0620  2E22               	goto	u3401
  1323  0621  2E23               	goto	u3400
  1324  0622                     u3401:
  1325  0622  2E59               	goto	l3258
  1326  0623                     u3400:
  1327  0623                     l3248:
  1328  0623  188C               	btfsc	12,1	;volatile
  1329  0624  2E26               	goto	u3411
  1330  0625  2E27               	goto	u3410
  1331  0626                     u3411:
  1332  0626  2E59               	goto	l3258
  1333  0627                     u3410:
  1334  0627                     l3250:
  1335                           
  1336                           ;Q5.c: 860:             jikan();
  1337  0627  3183  2316  3185   	fcall	_jikan
  1338  062A                     l3252:
  1339                           
  1340                           ;Q5.c: 861:             if(count >= 500){
  1341  062A  0020               	movlb	0	; select bank0
  1342  062B  0851               	movf	_count+1,w
  1343  062C  3A80               	xorlw	128
  1344  062D  00FC               	movwf	??_main
  1345  062E  3081               	movlw	129
  1346  062F  027C               	subwf	??_main,w
  1347  0630  1D03               	skipz
  1348  0631  2E34               	goto	u3425
  1349  0632  30F4               	movlw	244
  1350  0633  0250               	subwf	_count,w
  1351  0634                     u3425:
  1352  0634  1C03               	skipc
  1353  0635  2E37               	goto	u3421
  1354  0636  2E38               	goto	u3420
  1355  0637                     u3421:
  1356  0637  2E59               	goto	l3258
  1357  0638                     u3420:
  1358  0638                     l3254:
  1359                           
  1360                           ;Q5.c: 862:                 waitSEG(segL,0x02|0x04|0x10|0x20,1000);
  1361  0638  0020               	movlb	0	; select bank0
  1362  0639  0845               	movf	main@segL+1,w
  1363  063A  00A9               	movwf	waitSEG@seg1+1
  1364  063B  0844               	movf	main@segL,w
  1365  063C  00A8               	movwf	waitSEG@seg1
  1366  063D  3036               	movlw	54
  1367  063E  00AA               	movwf	waitSEG@seg2
  1368  063F  3000               	movlw	0
  1369  0640  00AB               	movwf	waitSEG@seg2+1
  1370  0641  30E8               	movlw	232
  1371  0642  00AC               	movwf	waitSEG@wt
  1372  0643  3003               	movlw	3
  1373  0644  00AD               	movwf	waitSEG@wt+1
  1374  0645  3183  2356  3185   	fcall	_waitSEG
  1375                           
  1376                           ;Q5.c: 863:                 waitSEG(segL|0x01,0,1000);
  1377  0648  3001               	movlw	1
  1378  0649  0020               	movlb	0	; select bank0
  1379  064A  0444               	iorwf	main@segL,w
  1380  064B  00A8               	movwf	waitSEG@seg1
  1381  064C  3000               	movlw	0
  1382  064D  0445               	iorwf	main@segL+1,w
  1383  064E  00A9               	movwf	waitSEG@seg1+1
  1384  064F  3000               	movlw	0
  1385  0650  00AA               	movwf	waitSEG@seg2
  1386  0651  00AB               	movwf	waitSEG@seg2+1
  1387  0652  30E8               	movlw	232
  1388  0653  00AC               	movwf	waitSEG@wt
  1389  0654  3003               	movlw	3
  1390  0655  00AD               	movwf	waitSEG@wt+1
  1391  0656  3183  2356  3185   	fcall	_waitSEG
  1392  0659                     l3256:
  1393  0659                     l3258:
  1394                           
  1395                           ;Q5.c: 872:         if(segL != 0 && RA0 ==1 && RA1 ==1 && zyoutai != 0){
  1396  0659  0020               	movlb	0	; select bank0
  1397  065A  0844               	movf	main@segL,w
  1398  065B  0445               	iorwf	main@segL+1,w
  1399  065C  1903               	btfsc	3,2
  1400  065D  2E5F               	goto	u3431
  1401  065E  2E60               	goto	u3430
  1402  065F                     u3431:
  1403  065F  2D60               	goto	l3202
  1404  0660                     u3430:
  1405  0660                     l3260:
  1406  0660  1C0C               	btfss	12,0	;volatile
  1407  0661  2E63               	goto	u3441
  1408  0662  2E64               	goto	u3440
  1409  0663                     u3441:
  1410  0663  2D60               	goto	l3202
  1411  0664                     u3440:
  1412  0664                     l3262:
  1413  0664  2D60               	goto	l3202
  1414  0665  3180  2802         	ljmp	start
  1415  0667                     __end_of_main:
  1416                           
  1417                           	psect	text1
  1418  030D                     __ptext1:	
  1419 ;; *************** function _zenoff *****************
  1420 ;; Defined at:
  1421 ;;		line 195 in file "Q5.c"
  1422 ;; Parameters:    Size  Location     Type
  1423 ;;		None
  1424 ;; Auto vars:     Size  Location     Type
  1425 ;;		None
  1426 ;; Return value:  Size  Location     Type
  1427 ;;                  1    wreg      void 
  1428 ;; Registers used:
  1429 ;;		status,2
  1430 ;; Tracked objects:
  1431 ;;		On entry : 0/0
  1432 ;;		On exit  : 0/0
  1433 ;;		Unchanged: 0/0
  1434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1439 ;;Total ram usage:        0 bytes
  1440 ;; Hardware stack levels used:    1
  1441 ;; This function calls:
  1442 ;;		Nothing
  1443 ;; This function is called by:
  1444 ;;		_main
  1445 ;; This function uses a non-reentrant model
  1446 ;;
  1447                           
  1448                           
  1449                           ;psect for function _zenoff
  1450  030D                     _zenoff:
  1451  030D                     l2468:	
  1452                           ;incstack = 0
  1453                           ; Regs used in _zenoff: [status,2]
  1454                           
  1455                           
  1456                           ;Q5.c: 197:     RC2=1;
  1457  030D  0020               	movlb	0	; select bank0
  1458  030E  150E               	bsf	14,2	;volatile
  1459                           
  1460                           ;Q5.c: 198:     RC1=1;
  1461  030F  148E               	bsf	14,1	;volatile
  1462                           
  1463                           ;Q5.c: 199:     RC0=1;
  1464  0310  140E               	bsf	14,0	;volatile
  1465  0311                     l2470:
  1466                           
  1467                           ;Q5.c: 200:     PORTB=0x00;
  1468  0311  018D               	clrf	13	;volatile
  1469  0312                     l2472:
  1470                           
  1471                           ;Q5.c: 201:     RC7=0;RC7=1;RC7=0;
  1472  0312  138E               	bcf	14,7	;volatile
  1473  0313                     l2474:
  1474  0313  178E               	bsf	14,7	;volatile
  1475  0314                     l2476:
  1476  0314  138E               	bcf	14,7	;volatile
  1477  0315                     l108:
  1478  0315  0008               	return
  1479  0316                     __end_of_zenoff:
  1480                           
  1481                           	psect	text2
  1482  0356                     __ptext2:	
  1483 ;; *************** function _waitSEG *****************
  1484 ;; Defined at:
  1485 ;;		line 451 in file "Q5.c"
  1486 ;; Parameters:    Size  Location     Type
  1487 ;;  seg1            2    8[BANK0 ] unsigned short 
  1488 ;;  seg2            2   10[BANK0 ] unsigned short 
  1489 ;;  wt              2   12[BANK0 ] unsigned short 
  1490 ;; Auto vars:     Size  Location     Type
  1491 ;;  i               2    8[COMMON] unsigned int 
  1492 ;; Return value:  Size  Location     Type
  1493 ;;                  1    wreg      void 
  1494 ;; Registers used:
  1495 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1496 ;; Tracked objects:
  1497 ;;		On entry : 0/0
  1498 ;;		On exit  : 0/0
  1499 ;;		Unchanged: 0/0
  1500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1501 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1502 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1504 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1505 ;;Total ram usage:        8 bytes
  1506 ;; Hardware stack levels used:    1
  1507 ;; Hardware stack levels required when called:    1
  1508 ;; This function calls:
  1509 ;;		___lwdiv
  1510 ;;		_dynam
  1511 ;; This function is called by:
  1512 ;;		_main
  1513 ;; This function uses a non-reentrant model
  1514 ;;
  1515                           
  1516                           
  1517                           ;psect for function _waitSEG
  1518  0356                     _waitSEG:
  1519  0356                     l2554:	
  1520                           ;incstack = 0
  1521                           ; Regs used in _waitSEG: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1522                           
  1523                           
  1524                           ;Q5.c: 451: void waitSEG(unsigned short seg1,unsigned short seg2,unsigned short wt);Q5.c
      +                          : 452: {;Q5.c: 454:     wt = wt / 10;
  1525  0356  300A               	movlw	10
  1526  0357  00F0               	movwf	___lwdiv@divisor
  1527  0358  3000               	movlw	0
  1528  0359  00F1               	movwf	___lwdiv@divisor+1
  1529  035A  0020               	movlb	0	; select bank0
  1530  035B  082D               	movf	waitSEG@wt+1,w
  1531  035C  00F3               	movwf	___lwdiv@dividend+1
  1532  035D  082C               	movf	waitSEG@wt,w
  1533  035E  00F2               	movwf	___lwdiv@dividend
  1534  035F  3183  238A  3183   	fcall	___lwdiv
  1535  0362  0871               	movf	?___lwdiv+1,w
  1536  0363  0020               	movlb	0	; select bank0
  1537  0364  00AD               	movwf	waitSEG@wt+1
  1538  0365  0870               	movf	?___lwdiv,w
  1539  0366  00AC               	movwf	waitSEG@wt
  1540  0367                     l2556:
  1541                           
  1542                           ;Q5.c: 455:     unsigned int i;;Q5.c: 457:     for(i=wt;i>0;--i){
  1543  0367  082D               	movf	waitSEG@wt+1,w
  1544  0368  00F9               	movwf	waitSEG@i+1
  1545  0369  082C               	movf	waitSEG@wt,w
  1546  036A  00F8               	movwf	waitSEG@i
  1547  036B                     l2558:
  1548  036B  0878               	movf	waitSEG@i,w
  1549  036C  0479               	iorwf	waitSEG@i+1,w
  1550  036D  1D03               	btfss	3,2
  1551  036E  2B70               	goto	u2201
  1552  036F  2B71               	goto	u2200
  1553  0370                     u2201:
  1554  0370  2B72               	goto	l2562
  1555  0371                     u2200:
  1556  0371  2B89               	goto	l258
  1557  0372                     l2562:
  1558                           
  1559                           ;Q5.c: 458:         dynam(seg1,seg2,0,0);
  1560  0372  0020               	movlb	0	; select bank0
  1561  0373  0829               	movf	waitSEG@seg1+1,w
  1562  0374  00F1               	movwf	dynam@dig1data+1
  1563  0375  0828               	movf	waitSEG@seg1,w
  1564  0376  00F0               	movwf	dynam@dig1data
  1565  0377  082B               	movf	waitSEG@seg2+1,w
  1566  0378  00F3               	movwf	dynam@dig2data+1
  1567  0379  082A               	movf	waitSEG@seg2,w
  1568  037A  00F2               	movwf	dynam@dig2data
  1569  037B  3000               	movlw	0
  1570  037C  00F4               	movwf	dynam@smdata
  1571  037D  00F5               	movwf	dynam@smdata+1
  1572  037E  3000               	movlw	0
  1573  037F  00F6               	movwf	dynam@tr
  1574  0380  00F7               	movwf	dynam@tr+1
  1575  0381  3186  2667  3183   	fcall	_dynam
  1576  0384                     l2564:
  1577                           
  1578                           ;Q5.c: 459:     }
  1579  0384  3001               	movlw	1
  1580  0385  02F8               	subwf	waitSEG@i,f
  1581  0386  3000               	movlw	0
  1582  0387  3BF9               	subwfb	waitSEG@i+1,f
  1583  0388  2B6B               	goto	l2558
  1584  0389                     l258:
  1585  0389  0008               	return
  1586  038A                     __end_of_waitSEG:
  1587                           
  1588                           	psect	text3
  1589  0667                     __ptext3:	
  1590 ;; *************** function _dynam *****************
  1591 ;; Defined at:
  1592 ;;		line 206 in file "Q5.c"
  1593 ;; Parameters:    Size  Location     Type
  1594 ;;  dig1data        2    0[COMMON] unsigned short 
  1595 ;;  dig2data        2    2[COMMON] unsigned short 
  1596 ;;  smdata          2    4[COMMON] unsigned short 
  1597 ;;  tr              2    6[COMMON] unsigned int 
  1598 ;; Auto vars:     Size  Location     Type
  1599 ;;  ext             2    6[BANK0 ] unsigned short 
  1600 ;;  j               2    4[BANK0 ] unsigned int 
  1601 ;;  tm              2    2[BANK0 ] unsigned int 
  1602 ;;  smd             2    0[BANK0 ] unsigned short 
  1603 ;; Return value:  Size  Location     Type
  1604 ;;                  1    wreg      void 
  1605 ;; Registers used:
  1606 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1607 ;; Tracked objects:
  1608 ;;		On entry : 0/0
  1609 ;;		On exit  : 0/0
  1610 ;;		Unchanged: 0/0
  1611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1612 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1613 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1615 ;;      Totals:         8       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1616 ;;Total ram usage:       16 bytes
  1617 ;; Hardware stack levels used:    1
  1618 ;; This function calls:
  1619 ;;		Nothing
  1620 ;; This function is called by:
  1621 ;;		_waitSEG
  1622 ;;		_main
  1623 ;;		_clear
  1624 ;;		_waitSEGStop
  1625 ;;		_motor
  1626 ;;		_motorStop
  1627 ;; This function uses a non-reentrant model
  1628 ;;
  1629                           
  1630                           
  1631                           ;psect for function _dynam
  1632  0667                     _dynam:
  1633  0667                     l2206:	
  1634                           ;incstack = 0
  1635                           ; Regs used in _dynam: [wreg-fsr0h+status,2+status,0]
  1636                           
  1637  0667  0020               	movlb	0	; select bank0
  1638  0668  01A2               	clrf	dynam@tm
  1639  0669  01A3               	clrf	dynam@tm+1
  1640                           
  1641                           ;Q5.c: 209:     unsigned short ext=0,smd=0;
  1642  066A  01A6               	clrf	dynam@ext
  1643  066B  01A7               	clrf	dynam@ext+1
  1644  066C  01A0               	clrf	dynam@smd
  1645  066D  01A1               	clrf	dynam@smd+1
  1646  066E                     l2208:
  1647                           
  1648                           ;Q5.c: 210:     RC7=0;
  1649  066E  138E               	bcf	14,7	;volatile
  1650  066F                     l2210:
  1651                           
  1652                           ;Q5.c: 211:     PORTB=dig1data;
  1653  066F  0870               	movf	dynam@dig1data,w
  1654  0670  008D               	movwf	13	;volatile
  1655  0671                     l2212:
  1656                           
  1657                           ;Q5.c: 212:     RC5=0;RC6=1;
  1658  0671  128E               	bcf	14,5	;volatile
  1659  0672                     l2214:
  1660  0672  170E               	bsf	14,6	;volatile
  1661  0673                     l2216:
  1662                           
  1663                           ;Q5.c: 213:     if(tr==5){tm=3000;}
  1664  0673  3005               	movlw	5
  1665  0674  0676               	xorwf	dynam@tr,w
  1666  0675  0477               	iorwf	dynam@tr+1,w
  1667  0676  1D03               	btfss	3,2
  1668  0677  2E79               	goto	u1751
  1669  0678  2E7A               	goto	u1750
  1670  0679                     u1751:
  1671  0679  2E7F               	goto	l2220
  1672  067A                     u1750:
  1673  067A                     l2218:
  1674  067A  30B8               	movlw	184
  1675  067B  00A2               	movwf	dynam@tm
  1676  067C  300B               	movlw	11
  1677  067D  00A3               	movwf	dynam@tm+1
  1678  067E  2E83               	goto	l112
  1679  067F                     l2220:
  1680  067F  30E8               	movlw	232
  1681  0680  00A2               	movwf	dynam@tm
  1682  0681  3003               	movlw	3
  1683  0682  00A3               	movwf	dynam@tm+1
  1684  0683                     l112:
  1685                           
  1686                           ;Q5.c: 215:     for(j=tm;j>0;--j);
  1687  0683  0823               	movf	dynam@tm+1,w
  1688  0684  00A5               	movwf	dynam@j+1
  1689  0685  0822               	movf	dynam@tm,w
  1690  0686  00A4               	movwf	dynam@j
  1691  0687                     l2222:
  1692  0687  0824               	movf	dynam@j,w
  1693  0688  0425               	iorwf	dynam@j+1,w
  1694  0689  1D03               	btfss	3,2
  1695  068A  2E8C               	goto	u1761
  1696  068B  2E8D               	goto	u1760
  1697  068C                     u1761:
  1698  068C  2E8E               	goto	l2226
  1699  068D                     u1760:
  1700  068D  2E93               	goto	l114
  1701  068E                     l2226:
  1702  068E  3001               	movlw	1
  1703  068F  02A4               	subwf	dynam@j,f
  1704  0690  3000               	movlw	0
  1705  0691  3BA5               	subwfb	dynam@j+1,f
  1706  0692  2E87               	goto	l2222
  1707  0693                     l114:
  1708                           
  1709                           ;Q5.c: 216:     RC5=0;RC6=0;
  1710  0693  128E               	bcf	14,5	;volatile
  1711  0694  130E               	bcf	14,6	;volatile
  1712  0695                     l2230:
  1713                           
  1714                           ;Q5.c: 217:     PORTB=dig2data;
  1715  0695  0872               	movf	dynam@dig2data,w
  1716  0696  008D               	movwf	13	;volatile
  1717  0697                     l2232:
  1718                           
  1719                           ;Q5.c: 218:     RC6=0;RC5=1;
  1720  0697  130E               	bcf	14,6	;volatile
  1721  0698                     l2234:
  1722  0698  168E               	bsf	14,5	;volatile
  1723  0699                     l2236:
  1724                           
  1725                           ;Q5.c: 219:     if(tr==5){tm=3000;}
  1726  0699  3005               	movlw	5
  1727  069A  0676               	xorwf	dynam@tr,w
  1728  069B  0477               	iorwf	dynam@tr+1,w
  1729  069C  1D03               	btfss	3,2
  1730  069D  2E9F               	goto	u1771
  1731  069E  2EA0               	goto	u1770
  1732  069F                     u1771:
  1733  069F  2EA5               	goto	l2240
  1734  06A0                     u1770:
  1735  06A0                     l2238:
  1736  06A0  30B8               	movlw	184
  1737  06A1  00A2               	movwf	dynam@tm
  1738  06A2  300B               	movlw	11
  1739  06A3  00A3               	movwf	dynam@tm+1
  1740  06A4  2EA9               	goto	l116
  1741  06A5                     l2240:
  1742  06A5  30E8               	movlw	232
  1743  06A6  00A2               	movwf	dynam@tm
  1744  06A7  3003               	movlw	3
  1745  06A8  00A3               	movwf	dynam@tm+1
  1746  06A9                     l116:
  1747                           
  1748                           ;Q5.c: 221:     for(j=tm;j>0;--j);
  1749  06A9  0823               	movf	dynam@tm+1,w
  1750  06AA  00A5               	movwf	dynam@j+1
  1751  06AB  0822               	movf	dynam@tm,w
  1752  06AC  00A4               	movwf	dynam@j
  1753  06AD                     l2242:
  1754  06AD  0824               	movf	dynam@j,w
  1755  06AE  0425               	iorwf	dynam@j+1,w
  1756  06AF  1D03               	btfss	3,2
  1757  06B0  2EB2               	goto	u1781
  1758  06B1  2EB3               	goto	u1780
  1759  06B2                     u1781:
  1760  06B2  2EB4               	goto	l2246
  1761  06B3                     u1780:
  1762  06B3  2EB9               	goto	l118
  1763  06B4                     l2246:
  1764  06B4  3001               	movlw	1
  1765  06B5  02A4               	subwf	dynam@j,f
  1766  06B6  3000               	movlw	0
  1767  06B7  3BA5               	subwfb	dynam@j+1,f
  1768  06B8  2EAD               	goto	l2242
  1769  06B9                     l118:
  1770                           
  1771                           ;Q5.c: 222:     RC5=0;RC6=0;
  1772  06B9  128E               	bcf	14,5	;volatile
  1773  06BA  130E               	bcf	14,6	;volatile
  1774                           
  1775                           ;Q5.c: 223:     switch(smdata){
  1776  06BB  2FC0               	goto	l2356
  1777  06BC                     l2250:
  1778                           
  1779                           ;Q5.c: 225:                 PORTB=0x00;smd=(0x01|0x02|0x04|0x08|0x10|0x20);
  1780  06BC  018D               	clrf	13	;volatile
  1781  06BD                     l2252:
  1782  06BD                     l2254:
  1783                           
  1784                           ;Q5.c: 226:                 RC7=0;RC7=1;RC7=0;
  1785  06BD  138E               	bcf	14,7	;volatile
  1786  06BE                     l2256:
  1787  06BE  178E               	bsf	14,7	;volatile
  1788  06BF                     l2258:
  1789  06BF  138E               	bcf	14,7	;volatile
  1790                           
  1791                           ;Q5.c: 227:                 break;
  1792  06C0  2FD0               	goto	l135
  1793  06C1                     l2260:
  1794                           
  1795                           ;Q5.c: 229:                 if(flg==1)cw=0;flg=0;
  1796  06C1  035C               	decf	_flg,w
  1797  06C2  045D               	iorwf	_flg+1,w
  1798  06C3  1D03               	btfss	3,2
  1799  06C4  2EC6               	goto	u1791
  1800  06C5  2EC7               	goto	u1790
  1801  06C6                     u1791:
  1802  06C6  2EC9               	goto	l123
  1803  06C7                     u1790:
  1804  06C7                     l2262:
  1805  06C7  01DA               	clrf	_cw
  1806  06C8  01DB               	clrf	_cw+1
  1807  06C9                     l123:
  1808  06C9  01DC               	clrf	_flg
  1809  06CA  01DD               	clrf	_flg+1
  1810  06CB                     l2264:
  1811                           
  1812                           ;Q5.c: 230:                 if((cw==0)&&(ext==0)){cw=1;ccw=0;ext=1;PORTB=smd=0x09;}
  1813  06CB  085A               	movf	_cw,w
  1814  06CC  045B               	iorwf	_cw+1,w
  1815  06CD  1D03               	btfss	3,2
  1816  06CE  2ED0               	goto	u1801
  1817  06CF  2ED1               	goto	u1800
  1818  06D0                     u1801:
  1819  06D0  2EE7               	goto	l2276
  1820  06D1                     u1800:
  1821  06D1                     l2266:
  1822  06D1  0826               	movf	dynam@ext,w
  1823  06D2  0427               	iorwf	dynam@ext+1,w
  1824  06D3  1D03               	btfss	3,2
  1825  06D4  2ED6               	goto	u1811
  1826  06D5  2ED7               	goto	u1810
  1827  06D6                     u1811:
  1828  06D6  2EE7               	goto	l2276
  1829  06D7                     u1810:
  1830  06D7                     l2268:
  1831  06D7  3001               	movlw	1
  1832  06D8  00DA               	movwf	_cw
  1833  06D9  3000               	movlw	0
  1834  06DA  00DB               	movwf	_cw+1
  1835  06DB                     l2270:
  1836  06DB  01D8               	clrf	_ccw
  1837  06DC  01D9               	clrf	_ccw+1
  1838  06DD                     l2272:
  1839  06DD  3001               	movlw	1
  1840  06DE  00A6               	movwf	dynam@ext
  1841  06DF  3000               	movlw	0
  1842  06E0  00A7               	movwf	dynam@ext+1
  1843  06E1                     l2274:
  1844  06E1  3009               	movlw	9
  1845  06E2  00A0               	movwf	dynam@smd
  1846  06E3  3000               	movlw	0
  1847  06E4  00A1               	movwf	dynam@smd+1
  1848  06E5  0820               	movf	dynam@smd,w
  1849  06E6  008D               	movwf	13	;volatile
  1850  06E7                     l2276:
  1851                           
  1852                           ;Q5.c: 231:                 if((cw==1)&&(ext==0)){cw=2;ccw=3;ext=1;PORTB=smd=0x0C;}
  1853  06E7  035A               	decf	_cw,w
  1854  06E8  045B               	iorwf	_cw+1,w
  1855  06E9  1D03               	btfss	3,2
  1856  06EA  2EEC               	goto	u1821
  1857  06EB  2EED               	goto	u1820
  1858  06EC                     u1821:
  1859  06EC  2F05               	goto	l2282
  1860  06ED                     u1820:
  1861  06ED                     l2278:
  1862  06ED  0826               	movf	dynam@ext,w
  1863  06EE  0427               	iorwf	dynam@ext+1,w
  1864  06EF  1D03               	btfss	3,2
  1865  06F0  2EF2               	goto	u1831
  1866  06F1  2EF3               	goto	u1830
  1867  06F2                     u1831:
  1868  06F2  2F05               	goto	l2282
  1869  06F3                     u1830:
  1870  06F3                     l2280:
  1871  06F3  3002               	movlw	2
  1872  06F4  00DA               	movwf	_cw
  1873  06F5  3000               	movlw	0
  1874  06F6  00DB               	movwf	_cw+1
  1875  06F7  3003               	movlw	3
  1876  06F8  00D8               	movwf	_ccw
  1877  06F9  3000               	movlw	0
  1878  06FA  00D9               	movwf	_ccw+1
  1879  06FB  3001               	movlw	1
  1880  06FC  00A6               	movwf	dynam@ext
  1881  06FD  3000               	movlw	0
  1882  06FE  00A7               	movwf	dynam@ext+1
  1883  06FF  300C               	movlw	12
  1884  0700  00A0               	movwf	dynam@smd
  1885  0701  3000               	movlw	0
  1886  0702  00A1               	movwf	dynam@smd+1
  1887  0703  0820               	movf	dynam@smd,w
  1888  0704  008D               	movwf	13	;volatile
  1889  0705                     l2282:
  1890                           
  1891                           ;Q5.c: 232:                 if((cw==2)&&(ext==0)){cw=3;ccw=2;ext=1;PORTB=smd=0x06;}
  1892  0705  3002               	movlw	2
  1893  0706  065A               	xorwf	_cw,w
  1894  0707  045B               	iorwf	_cw+1,w
  1895  0708  1D03               	btfss	3,2
  1896  0709  2F0B               	goto	u1841
  1897  070A  2F0C               	goto	u1840
  1898  070B                     u1841:
  1899  070B  2F24               	goto	l2288
  1900  070C                     u1840:
  1901  070C                     l2284:
  1902  070C  0826               	movf	dynam@ext,w
  1903  070D  0427               	iorwf	dynam@ext+1,w
  1904  070E  1D03               	btfss	3,2
  1905  070F  2F11               	goto	u1851
  1906  0710  2F12               	goto	u1850
  1907  0711                     u1851:
  1908  0711  2F24               	goto	l2288
  1909  0712                     u1850:
  1910  0712                     l2286:
  1911  0712  3003               	movlw	3
  1912  0713  00DA               	movwf	_cw
  1913  0714  3000               	movlw	0
  1914  0715  00DB               	movwf	_cw+1
  1915  0716  3002               	movlw	2
  1916  0717  00D8               	movwf	_ccw
  1917  0718  3000               	movlw	0
  1918  0719  00D9               	movwf	_ccw+1
  1919  071A  3001               	movlw	1
  1920  071B  00A6               	movwf	dynam@ext
  1921  071C  3000               	movlw	0
  1922  071D  00A7               	movwf	dynam@ext+1
  1923  071E  3006               	movlw	6
  1924  071F  00A0               	movwf	dynam@smd
  1925  0720  3000               	movlw	0
  1926  0721  00A1               	movwf	dynam@smd+1
  1927  0722  0820               	movf	dynam@smd,w
  1928  0723  008D               	movwf	13	;volatile
  1929  0724                     l2288:
  1930                           
  1931                           ;Q5.c: 233:                 if((cw==3)&&(ext==0)){cw=0;ccw=1;ext=1;PORTB=smd=0x03;}
  1932  0724  3003               	movlw	3
  1933  0725  065A               	xorwf	_cw,w
  1934  0726  045B               	iorwf	_cw+1,w
  1935  0727  1D03               	btfss	3,2
  1936  0728  2F2A               	goto	u1861
  1937  0729  2F2B               	goto	u1860
  1938  072A                     u1861:
  1939  072A  2EBD               	goto	l2254
  1940  072B                     u1860:
  1941  072B                     l2290:
  1942  072B  0826               	movf	dynam@ext,w
  1943  072C  0427               	iorwf	dynam@ext+1,w
  1944  072D  1D03               	btfss	3,2
  1945  072E  2F30               	goto	u1871
  1946  072F  2F31               	goto	u1870
  1947  0730                     u1871:
  1948  0730  2EBD               	goto	l2254
  1949  0731                     u1870:
  1950  0731                     l2292:
  1951  0731  01DA               	clrf	_cw
  1952  0732  01DB               	clrf	_cw+1
  1953  0733                     l2294:
  1954  0733  3001               	movlw	1
  1955  0734  00D8               	movwf	_ccw
  1956  0735  3000               	movlw	0
  1957  0736  00D9               	movwf	_ccw+1
  1958  0737                     l2296:
  1959  0737                     l2298:
  1960  0737  3003               	movlw	3
  1961  0738  00A0               	movwf	dynam@smd
  1962  0739  3000               	movlw	0
  1963  073A  00A1               	movwf	dynam@smd+1
  1964  073B  0820               	movf	dynam@smd,w
  1965  073C  008D               	movwf	13	;volatile
  1966  073D  2EBD               	goto	l2254
  1967  073E                     l2306:
  1968                           
  1969                           ;Q5.c: 237:                 if(flg==1)ccw=0;flg=0;
  1970  073E  035C               	decf	_flg,w
  1971  073F  045D               	iorwf	_flg+1,w
  1972  0740  1D03               	btfss	3,2
  1973  0741  2F43               	goto	u1881
  1974  0742  2F44               	goto	u1880
  1975  0743                     u1881:
  1976  0743  2F46               	goto	l129
  1977  0744                     u1880:
  1978  0744                     l2308:
  1979  0744  01D8               	clrf	_ccw
  1980  0745  01D9               	clrf	_ccw+1
  1981  0746                     l129:
  1982  0746  01DC               	clrf	_flg
  1983  0747  01DD               	clrf	_flg+1
  1984  0748                     l2310:
  1985                           
  1986                           ;Q5.c: 238:                 if((ccw==0)&&(ext==0)){ccw=1;cw=0;ext=1;PORTB=smd=0x03;}
  1987  0748  0858               	movf	_ccw,w
  1988  0749  0459               	iorwf	_ccw+1,w
  1989  074A  1D03               	btfss	3,2
  1990  074B  2F4D               	goto	u1891
  1991  074C  2F4E               	goto	u1890
  1992  074D                     u1891:
  1993  074D  2F64               	goto	l2322
  1994  074E                     u1890:
  1995  074E                     l2312:
  1996  074E  0826               	movf	dynam@ext,w
  1997  074F  0427               	iorwf	dynam@ext+1,w
  1998  0750  1D03               	btfss	3,2
  1999  0751  2F53               	goto	u1901
  2000  0752  2F54               	goto	u1900
  2001  0753                     u1901:
  2002  0753  2F64               	goto	l2322
  2003  0754                     u1900:
  2004  0754                     l2314:
  2005  0754  3001               	movlw	1
  2006  0755  00D8               	movwf	_ccw
  2007  0756  3000               	movlw	0
  2008  0757  00D9               	movwf	_ccw+1
  2009  0758                     l2316:
  2010  0758  01DA               	clrf	_cw
  2011  0759  01DB               	clrf	_cw+1
  2012  075A                     l2318:
  2013  075A  3001               	movlw	1
  2014  075B  00A6               	movwf	dynam@ext
  2015  075C  3000               	movlw	0
  2016  075D  00A7               	movwf	dynam@ext+1
  2017  075E                     l2320:
  2018  075E  3003               	movlw	3
  2019  075F  00A0               	movwf	dynam@smd
  2020  0760  3000               	movlw	0
  2021  0761  00A1               	movwf	dynam@smd+1
  2022  0762  0820               	movf	dynam@smd,w
  2023  0763  008D               	movwf	13	;volatile
  2024  0764                     l2322:
  2025                           
  2026                           ;Q5.c: 239:                 if((ccw==1)&&(ext==0)){ccw=2;cw=3;ext=1;PORTB=smd=0x06;}
  2027  0764  0358               	decf	_ccw,w
  2028  0765  0459               	iorwf	_ccw+1,w
  2029  0766  1D03               	btfss	3,2
  2030  0767  2F69               	goto	u1911
  2031  0768  2F6A               	goto	u1910
  2032  0769                     u1911:
  2033  0769  2F82               	goto	l2328
  2034  076A                     u1910:
  2035  076A                     l2324:
  2036  076A  0826               	movf	dynam@ext,w
  2037  076B  0427               	iorwf	dynam@ext+1,w
  2038  076C  1D03               	btfss	3,2
  2039  076D  2F6F               	goto	u1921
  2040  076E  2F70               	goto	u1920
  2041  076F                     u1921:
  2042  076F  2F82               	goto	l2328
  2043  0770                     u1920:
  2044  0770                     l2326:
  2045  0770  3002               	movlw	2
  2046  0771  00D8               	movwf	_ccw
  2047  0772  3000               	movlw	0
  2048  0773  00D9               	movwf	_ccw+1
  2049  0774  3003               	movlw	3
  2050  0775  00DA               	movwf	_cw
  2051  0776  3000               	movlw	0
  2052  0777  00DB               	movwf	_cw+1
  2053  0778  3001               	movlw	1
  2054  0779  00A6               	movwf	dynam@ext
  2055  077A  3000               	movlw	0
  2056  077B  00A7               	movwf	dynam@ext+1
  2057  077C  3006               	movlw	6
  2058  077D  00A0               	movwf	dynam@smd
  2059  077E  3000               	movlw	0
  2060  077F  00A1               	movwf	dynam@smd+1
  2061  0780  0820               	movf	dynam@smd,w
  2062  0781  008D               	movwf	13	;volatile
  2063  0782                     l2328:
  2064                           
  2065                           ;Q5.c: 240:                 if((ccw==2)&&(ext==0)){ccw=3;cw=2;ext=1;PORTB=smd=0x0C;}
  2066  0782  3002               	movlw	2
  2067  0783  0658               	xorwf	_ccw,w
  2068  0784  0459               	iorwf	_ccw+1,w
  2069  0785  1D03               	btfss	3,2
  2070  0786  2F88               	goto	u1931
  2071  0787  2F89               	goto	u1930
  2072  0788                     u1931:
  2073  0788  2FA1               	goto	l2334
  2074  0789                     u1930:
  2075  0789                     l2330:
  2076  0789  0826               	movf	dynam@ext,w
  2077  078A  0427               	iorwf	dynam@ext+1,w
  2078  078B  1D03               	btfss	3,2
  2079  078C  2F8E               	goto	u1941
  2080  078D  2F8F               	goto	u1940
  2081  078E                     u1941:
  2082  078E  2FA1               	goto	l2334
  2083  078F                     u1940:
  2084  078F                     l2332:
  2085  078F  3003               	movlw	3
  2086  0790  00D8               	movwf	_ccw
  2087  0791  3000               	movlw	0
  2088  0792  00D9               	movwf	_ccw+1
  2089  0793  3002               	movlw	2
  2090  0794  00DA               	movwf	_cw
  2091  0795  3000               	movlw	0
  2092  0796  00DB               	movwf	_cw+1
  2093  0797  3001               	movlw	1
  2094  0798  00A6               	movwf	dynam@ext
  2095  0799  3000               	movlw	0
  2096  079A  00A7               	movwf	dynam@ext+1
  2097  079B  300C               	movlw	12
  2098  079C  00A0               	movwf	dynam@smd
  2099  079D  3000               	movlw	0
  2100  079E  00A1               	movwf	dynam@smd+1
  2101  079F  0820               	movf	dynam@smd,w
  2102  07A0  008D               	movwf	13	;volatile
  2103  07A1                     l2334:
  2104                           
  2105                           ;Q5.c: 241:                 if((ccw==3)&&(ext==0)){ccw=0;cw=1;ext=1;PORTB=smd=0x09;}
  2106  07A1  3003               	movlw	3
  2107  07A2  0658               	xorwf	_ccw,w
  2108  07A3  0459               	iorwf	_ccw+1,w
  2109  07A4  1D03               	btfss	3,2
  2110  07A5  2FA7               	goto	u1951
  2111  07A6  2FA8               	goto	u1950
  2112  07A7                     u1951:
  2113  07A7  2EBD               	goto	l2254
  2114  07A8                     u1950:
  2115  07A8                     l2336:
  2116  07A8  0826               	movf	dynam@ext,w
  2117  07A9  0427               	iorwf	dynam@ext+1,w
  2118  07AA  1D03               	btfss	3,2
  2119  07AB  2FAD               	goto	u1961
  2120  07AC  2FAE               	goto	u1960
  2121  07AD                     u1961:
  2122  07AD  2EBD               	goto	l2254
  2123  07AE                     u1960:
  2124  07AE                     l2338:
  2125  07AE  01D8               	clrf	_ccw
  2126  07AF  01D9               	clrf	_ccw+1
  2127  07B0                     l2340:
  2128  07B0  3001               	movlw	1
  2129  07B1  00DA               	movwf	_cw
  2130  07B2  3000               	movlw	0
  2131  07B3  00DB               	movwf	_cw+1
  2132  07B4                     l2342:
  2133  07B4                     l2344:
  2134  07B4  3009               	movlw	9
  2135  07B5  00A0               	movwf	dynam@smd
  2136  07B6  3000               	movlw	0
  2137  07B7  00A1               	movwf	dynam@smd+1
  2138  07B8  0820               	movf	dynam@smd,w
  2139  07B9  008D               	movwf	13	;volatile
  2140  07BA  2EBD               	goto	l2254
  2141  07BB                     l2352:
  2142                           
  2143                           ;Q5.c: 245:                 cw=ccw=0;
  2144  07BB  01D8               	clrf	_ccw
  2145  07BC  01D9               	clrf	_ccw+1
  2146  07BD  01DA               	clrf	_cw
  2147  07BE  01DB               	clrf	_cw+1
  2148                           
  2149                           ;Q5.c: 246:                 break;
  2150  07BF  2FD0               	goto	l135
  2151  07C0                     l2356:
  2152                           
  2153                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2154                           ; Switch size 1, requested type "simple"
  2155                           ; Number of cases is 1, Range of values is 0 to 0
  2156                           ; switch strategies available:
  2157                           ; Name         Instructions Cycles
  2158                           ; simple_byte            4     3 (average)
  2159                           ; direct_byte            8     6 (fixed)
  2160                           ; jumptable            260     6 (fixed)
  2161                           ;	Chosen strategy is simple_byte
  2162  07C0  0875               	movf	dynam@smdata+1,w
  2163  07C1  3A00               	xorlw	0	; case 0
  2164  07C2  1903               	skipnz
  2165  07C3  2FC5               	goto	l3480
  2166  07C4  2FBB               	goto	l2352
  2167  07C5                     l3480:
  2168                           
  2169                           ; Switch size 1, requested type "simple"
  2170                           ; Number of cases is 3, Range of values is 0 to 2
  2171                           ; switch strategies available:
  2172                           ; Name         Instructions Cycles
  2173                           ; simple_byte           10     6 (average)
  2174                           ; direct_byte           12     6 (fixed)
  2175                           ; jumptable            260     6 (fixed)
  2176                           ;	Chosen strategy is simple_byte
  2177  07C5  0874               	movf	dynam@smdata,w
  2178  07C6  3A00               	xorlw	0	; case 0
  2179  07C7  1903               	skipnz
  2180  07C8  2EBC               	goto	l2250
  2181  07C9  3A01               	xorlw	1	; case 1
  2182  07CA  1903               	skipnz
  2183  07CB  2EC1               	goto	l2260
  2184  07CC  3A03               	xorlw	3	; case 2
  2185  07CD  1903               	skipnz
  2186  07CE  2F3E               	goto	l2306
  2187  07CF  2FBB               	goto	l2352
  2188  07D0                     l135:
  2189  07D0  0008               	return
  2190  07D1                     __end_of_dynam:
  2191                           
  2192                           	psect	text4
  2193  038A                     __ptext4:	
  2194 ;; *************** function ___lwdiv *****************
  2195 ;; Defined at:
  2196 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\lwdiv.c"
  2197 ;; Parameters:    Size  Location     Type
  2198 ;;  divisor         2    0[COMMON] unsigned int 
  2199 ;;  dividend        2    2[COMMON] unsigned int 
  2200 ;; Auto vars:     Size  Location     Type
  2201 ;;  quotient        2    5[COMMON] unsigned int 
  2202 ;;  counter         1    7[COMMON] unsigned char 
  2203 ;; Return value:  Size  Location     Type
  2204 ;;                  2    0[COMMON] unsigned int 
  2205 ;; Registers used:
  2206 ;;		wreg, status,2, status,0
  2207 ;; Tracked objects:
  2208 ;;		On entry : 0/0
  2209 ;;		On exit  : 0/0
  2210 ;;		Unchanged: 0/0
  2211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2212 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2213 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2214 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2215 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2216 ;;Total ram usage:        8 bytes
  2217 ;; Hardware stack levels used:    1
  2218 ;; This function calls:
  2219 ;;		Nothing
  2220 ;; This function is called by:
  2221 ;;		_waitSEG
  2222 ;;		_waitSEGStop
  2223 ;; This function uses a non-reentrant model
  2224 ;;
  2225                           
  2226                           
  2227                           ;psect for function ___lwdiv
  2228  038A                     ___lwdiv:
  2229  038A                     l2412:	
  2230                           ;incstack = 0
  2231                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2232                           
  2233  038A  01F5               	clrf	___lwdiv@quotient
  2234  038B  01F6               	clrf	___lwdiv@quotient+1
  2235  038C                     l2414:
  2236  038C  0870               	movf	___lwdiv@divisor,w
  2237  038D  0471               	iorwf	___lwdiv@divisor+1,w
  2238  038E  1903               	btfsc	3,2
  2239  038F  2B91               	goto	u2021
  2240  0390  2B92               	goto	u2020
  2241  0391                     u2021:
  2242  0391  2BC1               	goto	l2434
  2243  0392                     u2020:
  2244  0392                     l2416:
  2245  0392  01F7               	clrf	___lwdiv@counter
  2246  0393  0AF7               	incf	___lwdiv@counter,f
  2247  0394  2B9E               	goto	l2422
  2248  0395                     l2418:
  2249  0395  3001               	movlw	1
  2250  0396                     u2035:
  2251  0396  35F0               	lslf	___lwdiv@divisor,f
  2252  0397  0DF1               	rlf	___lwdiv@divisor+1,f
  2253  0398  0B89               	decfsz	9,f
  2254  0399  2B96               	goto	u2035
  2255  039A                     l2420:
  2256  039A  3001               	movlw	1
  2257  039B  00F4               	movwf	??___lwdiv
  2258  039C  0874               	movf	??___lwdiv,w
  2259  039D  07F7               	addwf	___lwdiv@counter,f
  2260  039E                     l2422:
  2261  039E  1FF1               	btfss	___lwdiv@divisor+1,7
  2262  039F  2BA1               	goto	u2041
  2263  03A0  2BA2               	goto	u2040
  2264  03A1                     u2041:
  2265  03A1  2B95               	goto	l2418
  2266  03A2                     u2040:
  2267  03A2                     l2424:
  2268  03A2  3001               	movlw	1
  2269  03A3                     u2055:
  2270  03A3  35F5               	lslf	___lwdiv@quotient,f
  2271  03A4  0DF6               	rlf	___lwdiv@quotient+1,f
  2272  03A5  0B89               	decfsz	9,f
  2273  03A6  2BA3               	goto	u2055
  2274  03A7  0871               	movf	___lwdiv@divisor+1,w
  2275  03A8  0273               	subwf	___lwdiv@dividend+1,w
  2276  03A9  1D03               	skipz
  2277  03AA  2BAD               	goto	u2065
  2278  03AB  0870               	movf	___lwdiv@divisor,w
  2279  03AC  0272               	subwf	___lwdiv@dividend,w
  2280  03AD                     u2065:
  2281  03AD  1C03               	skipc
  2282  03AE  2BB0               	goto	u2061
  2283  03AF  2BB1               	goto	u2060
  2284  03B0                     u2061:
  2285  03B0  2BB6               	goto	l2430
  2286  03B1                     u2060:
  2287  03B1                     l2426:
  2288  03B1  0870               	movf	___lwdiv@divisor,w
  2289  03B2  02F2               	subwf	___lwdiv@dividend,f
  2290  03B3  0871               	movf	___lwdiv@divisor+1,w
  2291  03B4  3BF3               	subwfb	___lwdiv@dividend+1,f
  2292  03B5                     l2428:
  2293  03B5  1475               	bsf	___lwdiv@quotient,0
  2294  03B6                     l2430:
  2295  03B6  3001               	movlw	1
  2296  03B7                     u2075:
  2297  03B7  36F1               	lsrf	___lwdiv@divisor+1,f
  2298  03B8  0CF0               	rrf	___lwdiv@divisor,f
  2299  03B9  0B89               	decfsz	9,f
  2300  03BA  2BB7               	goto	u2075
  2301  03BB                     l2432:
  2302  03BB  3001               	movlw	1
  2303  03BC  02F7               	subwf	___lwdiv@counter,f
  2304  03BD  1D03               	btfss	3,2
  2305  03BE  2BC0               	goto	u2081
  2306  03BF  2BC1               	goto	u2080
  2307  03C0                     u2081:
  2308  03C0  2BA2               	goto	l2424
  2309  03C1                     u2080:
  2310  03C1                     l2434:
  2311  03C1  0876               	movf	___lwdiv@quotient+1,w
  2312  03C2  00F1               	movwf	?___lwdiv+1
  2313  03C3  0875               	movf	___lwdiv@quotient,w
  2314  03C4  00F0               	movwf	?___lwdiv
  2315  03C5                     l806:
  2316  03C5  0008               	return
  2317  03C6                     __end_of___lwdiv:
  2318                           
  2319                           	psect	text5
  2320  0323                     __ptext5:	
  2321 ;; *************** function _portinit *****************
  2322 ;; Defined at:
  2323 ;;		line 160 in file "Q5.c"
  2324 ;; Parameters:    Size  Location     Type
  2325 ;;		None
  2326 ;; Auto vars:     Size  Location     Type
  2327 ;;		None
  2328 ;; Return value:  Size  Location     Type
  2329 ;;                  1    wreg      void 
  2330 ;; Registers used:
  2331 ;;		wreg, status,2
  2332 ;; Tracked objects:
  2333 ;;		On entry : 0/0
  2334 ;;		On exit  : 0/0
  2335 ;;		Unchanged: 0/0
  2336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2341 ;;Total ram usage:        0 bytes
  2342 ;; Hardware stack levels used:    1
  2343 ;; This function calls:
  2344 ;;		Nothing
  2345 ;; This function is called by:
  2346 ;;		_main
  2347 ;; This function uses a non-reentrant model
  2348 ;;
  2349                           
  2350                           
  2351                           ;psect for function _portinit
  2352  0323                     _portinit:
  2353  0323                     l2438:	
  2354                           ;incstack = 0
  2355                           ; Regs used in _portinit: [wreg+status,2]
  2356                           
  2357                           
  2358                           ;Q5.c: 163:     ANSELA=0x00;
  2359  0323  0023               	movlb	3	; select bank3
  2360  0324  018C               	clrf	12	;volatile
  2361                           
  2362                           ;Q5.c: 164:     ANSELB=0x00;
  2363  0325  018D               	clrf	13	;volatile
  2364  0326                     l2440:
  2365                           
  2366                           ;Q5.c: 166:     PORTA=0x07;
  2367  0326  3007               	movlw	7
  2368  0327  0020               	movlb	0	; select bank0
  2369  0328  008C               	movwf	12	;volatile
  2370  0329                     l2442:
  2371                           
  2372                           ;Q5.c: 167:     TRISA=0x07;
  2373  0329  3007               	movlw	7
  2374  032A  0021               	movlb	1	; select bank1
  2375  032B  008C               	movwf	12	;volatile
  2376                           
  2377                           ;Q5.c: 168:     PORTB=0x00;
  2378  032C  0020               	movlb	0	; select bank0
  2379  032D  018D               	clrf	13	;volatile
  2380                           
  2381                           ;Q5.c: 169:     TRISB=0x00;
  2382  032E  0021               	movlb	1	; select bank1
  2383  032F  018D               	clrf	13	;volatile
  2384  0330                     l2444:
  2385                           
  2386                           ;Q5.c: 170:     PORTC=0x07;
  2387  0330  3007               	movlw	7
  2388  0331  0020               	movlb	0	; select bank0
  2389  0332  008E               	movwf	14	;volatile
  2390  0333                     l2446:
  2391                           
  2392                           ;Q5.c: 171:     TRISC=0x00;
  2393  0333  0021               	movlb	1	; select bank1
  2394  0334  018E               	clrf	14	;volatile
  2395  0335                     l95:
  2396  0335  0008               	return
  2397  0336                     __end_of_portinit:
  2398                           
  2399                           	psect	text6
  2400  04E2                     __ptext6:	
  2401 ;; *************** function _kaisu *****************
  2402 ;; Defined at:
  2403 ;;		line 388 in file "Q5.c"
  2404 ;; Parameters:    Size  Location     Type
  2405 ;;  mode1           2   10[COMMON] unsigned short 
  2406 ;; Auto vars:     Size  Location     Type
  2407 ;;		None
  2408 ;; Return value:  Size  Location     Type
  2409 ;;                  1    wreg      void 
  2410 ;; Registers used:
  2411 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2412 ;; Tracked objects:
  2413 ;;		On entry : 0/0
  2414 ;;		On exit  : 0/0
  2415 ;;		Unchanged: 0/0
  2416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2417 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2420 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2421 ;;Total ram usage:        2 bytes
  2422 ;; Hardware stack levels used:    1
  2423 ;; Hardware stack levels required when called:    2
  2424 ;; This function calls:
  2425 ;;		_fclr
  2426 ;;		_tact
  2427 ;; This function is called by:
  2428 ;;		_main
  2429 ;; This function uses a non-reentrant model
  2430 ;;
  2431                           
  2432                           
  2433                           ;psect for function _kaisu
  2434  04E2                     _kaisu:
  2435  04E2                     l2478:	
  2436                           ;incstack = 0
  2437                           ; Regs used in _kaisu: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2438                           
  2439                           
  2440                           ;Q5.c: 388: void kaisu(unsigned short mode1);Q5.c: 389: {;Q5.c: 390:     switch(mode1){
  2441  04E2  2D21               	goto	l2502
  2442  04E3                     l2480:
  2443                           
  2444                           ;Q5.c: 392:                     tact(0);
  2445  04E3  3000               	movlw	0
  2446  04E4  00F8               	movwf	tact@mode
  2447  04E5  00F9               	movwf	tact@mode+1
  2448  04E6  3184  244B  3184   	fcall	_tact
  2449  04E9                     l2482:
  2450                           
  2451                           ;Q5.c: 393:                     if(((flag_sw3==1)&&(flag_R==1))){++count;fclr(0);}
  2452  04E9  0020               	movlb	0	; select bank0
  2453  04EA  0362               	decf	_flag_sw3,w
  2454  04EB  0463               	iorwf	_flag_sw3+1,w
  2455  04EC  1D03               	btfss	3,2
  2456  04ED  2CEF               	goto	u2111
  2457  04EE  2CF0               	goto	u2110
  2458  04EF                     u2111:
  2459  04EF  2D2E               	goto	l227
  2460  04F0                     u2110:
  2461  04F0                     l2484:
  2462  04F0  0360               	decf	_flag_R,w
  2463  04F1  0461               	iorwf	_flag_R+1,w
  2464  04F2  1D03               	btfss	3,2
  2465  04F3  2CF5               	goto	u2121
  2466  04F4  2CF6               	goto	u2120
  2467  04F5                     u2121:
  2468  04F5  2D2E               	goto	l227
  2469  04F6                     u2120:
  2470  04F6                     l2486:
  2471  04F6  3001               	movlw	1
  2472  04F7  07D0               	addwf	_count,f
  2473  04F8  3000               	movlw	0
  2474  04F9  3DD1               	addwfc	_count+1,f
  2475  04FA                     l2488:
  2476  04FA  3000               	movlw	0
  2477  04FB  00F0               	movwf	fclr@flg
  2478  04FC  00F1               	movwf	fclr@flg+1
  2479  04FD  3183  2336  3184   	fcall	_fclr
  2480  0500  2D2E               	goto	l227
  2481  0501                     l2490:
  2482                           
  2483                           ;Q5.c: 396:                     tact(1);
  2484  0501  3001               	movlw	1
  2485  0502  00F8               	movwf	tact@mode
  2486  0503  3000               	movlw	0
  2487  0504  00F9               	movwf	tact@mode+1
  2488  0505  3184  244B  3184   	fcall	_tact
  2489  0508                     l2492:
  2490                           
  2491                           ;Q5.c: 397:                     if(((flag_sw3==0)&&(flag_P==1))){++count;fclr(1);}
  2492  0508  0020               	movlb	0	; select bank0
  2493  0509  0862               	movf	_flag_sw3,w
  2494  050A  0463               	iorwf	_flag_sw3+1,w
  2495  050B  1D03               	btfss	3,2
  2496  050C  2D0E               	goto	u2131
  2497  050D  2D0F               	goto	u2130
  2498  050E                     u2131:
  2499  050E  2D2E               	goto	l227
  2500  050F                     u2130:
  2501  050F                     l2494:
  2502  050F  035E               	decf	_flag_P,w
  2503  0510  045F               	iorwf	_flag_P+1,w
  2504  0511  1D03               	btfss	3,2
  2505  0512  2D14               	goto	u2141
  2506  0513  2D15               	goto	u2140
  2507  0514                     u2141:
  2508  0514  2D2E               	goto	l227
  2509  0515                     u2140:
  2510  0515                     l2496:
  2511  0515  3001               	movlw	1
  2512  0516  07D0               	addwf	_count,f
  2513  0517  3000               	movlw	0
  2514  0518  3DD1               	addwfc	_count+1,f
  2515  0519                     l2498:
  2516  0519  3001               	movlw	1
  2517  051A  00F0               	movwf	fclr@flg
  2518  051B  3000               	movlw	0
  2519  051C  00F1               	movwf	fclr@flg+1
  2520  051D  3183  2336  3184   	fcall	_fclr
  2521  0520  2D2E               	goto	l227
  2522  0521                     l2502:
  2523                           
  2524                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2525                           ; Switch size 1, requested type "simple"
  2526                           ; Number of cases is 1, Range of values is 0 to 0
  2527                           ; switch strategies available:
  2528                           ; Name         Instructions Cycles
  2529                           ; simple_byte            4     3 (average)
  2530                           ; direct_byte            8     6 (fixed)
  2531                           ; jumptable            260     6 (fixed)
  2532                           ;	Chosen strategy is simple_byte
  2533  0521  087B               	movf	kaisu@mode1+1,w
  2534  0522  3A00               	xorlw	0	; case 0
  2535  0523  1903               	skipnz
  2536  0524  2D26               	goto	l3482
  2537  0525  2D2E               	goto	l227
  2538  0526                     l3482:
  2539                           
  2540                           ; Switch size 1, requested type "simple"
  2541                           ; Number of cases is 2, Range of values is 0 to 1
  2542                           ; switch strategies available:
  2543                           ; Name         Instructions Cycles
  2544                           ; simple_byte            7     4 (average)
  2545                           ; direct_byte           10     6 (fixed)
  2546                           ; jumptable            260     6 (fixed)
  2547                           ;	Chosen strategy is simple_byte
  2548  0526  087A               	movf	kaisu@mode1,w
  2549  0527  3A00               	xorlw	0	; case 0
  2550  0528  1903               	skipnz
  2551  0529  2CE3               	goto	l2480
  2552  052A  3A01               	xorlw	1	; case 1
  2553  052B  1903               	skipnz
  2554  052C  2D01               	goto	l2490
  2555  052D  2D2E               	goto	l227
  2556  052E                     l227:
  2557  052E  0008               	return
  2558  052F                     __end_of_kaisu:
  2559                           
  2560                           	psect	text7
  2561  044B                     __ptext7:	
  2562 ;; *************** function _tact *****************
  2563 ;; Defined at:
  2564 ;;		line 346 in file "Q5.c"
  2565 ;; Parameters:    Size  Location     Type
  2566 ;;  mode            2    8[COMMON] unsigned short 
  2567 ;; Auto vars:     Size  Location     Type
  2568 ;;		None
  2569 ;; Return value:  Size  Location     Type
  2570 ;;                  1    wreg      void 
  2571 ;; Registers used:
  2572 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2573 ;; Tracked objects:
  2574 ;;		On entry : 0/0
  2575 ;;		On exit  : 0/0
  2576 ;;		Unchanged: 0/0
  2577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2578 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2581 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2582 ;;Total ram usage:        2 bytes
  2583 ;; Hardware stack levels used:    1
  2584 ;; Hardware stack levels required when called:    1
  2585 ;; This function calls:
  2586 ;;		_tactsw
  2587 ;; This function is called by:
  2588 ;;		_kaisu
  2589 ;;		_waitSEGStop
  2590 ;;		_motorStop
  2591 ;;		_buzzStop
  2592 ;; This function uses a non-reentrant model
  2593 ;;
  2594                           
  2595                           
  2596                           ;psect for function _tact
  2597  044B                     _tact:
  2598  044B                     l2362:	
  2599                           ;incstack = 0
  2600                           ; Regs used in _tact: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2601                           
  2602                           
  2603                           ;Q5.c: 346: void tact(unsigned short mode);Q5.c: 347: {;Q5.c: 348:     switch(mode){
  2604  044B  2C85               	goto	l2390
  2605  044C                     l2364:
  2606                           
  2607                           ;Q5.c: 350:                 tactsw();
  2608  044C  3183  23C6  3184   	fcall	_tactsw
  2609  044F                     l2366:
  2610                           
  2611                           ;Q5.c: 351:                 if(flag_sw3==0)flag_R=1;
  2612  044F  0020               	movlb	0	; select bank0
  2613  0450  0862               	movf	_flag_sw3,w
  2614  0451  0463               	iorwf	_flag_sw3+1,w
  2615  0452  1D03               	btfss	3,2
  2616  0453  2C55               	goto	u1971
  2617  0454  2C56               	goto	u1970
  2618  0455                     u1971:
  2619  0455  2C95               	goto	l208
  2620  0456                     u1970:
  2621  0456                     l2368:
  2622  0456  3001               	movlw	1
  2623  0457  00E0               	movwf	_flag_R
  2624  0458  3000               	movlw	0
  2625  0459  00E1               	movwf	_flag_R+1
  2626  045A  2C95               	goto	l208
  2627  045B                     l2370:
  2628                           
  2629                           ;Q5.c: 354:                 tactsw();
  2630  045B  3183  23C6  3184   	fcall	_tactsw
  2631  045E                     l2372:
  2632                           
  2633                           ;Q5.c: 355:                 if(flag_sw3==1)flag_P=1;
  2634  045E  0020               	movlb	0	; select bank0
  2635  045F  0362               	decf	_flag_sw3,w
  2636  0460  0463               	iorwf	_flag_sw3+1,w
  2637  0461  1D03               	btfss	3,2
  2638  0462  2C64               	goto	u1981
  2639  0463  2C65               	goto	u1980
  2640  0464                     u1981:
  2641  0464  2C95               	goto	l208
  2642  0465                     u1980:
  2643  0465                     l2374:
  2644  0465  3001               	movlw	1
  2645  0466  00DE               	movwf	_flag_P
  2646  0467  3000               	movlw	0
  2647  0468  00DF               	movwf	_flag_P+1
  2648  0469  2C95               	goto	l208
  2649  046A                     l2376:
  2650                           
  2651                           ;Q5.c: 358:                 tactsw();
  2652  046A  3183  23C6  3184   	fcall	_tactsw
  2653  046D                     l2378:
  2654                           
  2655                           ;Q5.c: 359:                 if(flag_sw3==0)flag_R=1;
  2656  046D  0020               	movlb	0	; select bank0
  2657  046E  0862               	movf	_flag_sw3,w
  2658  046F  0463               	iorwf	_flag_sw3+1,w
  2659  0470  1D03               	btfss	3,2
  2660  0471  2C73               	goto	u1991
  2661  0472  2C74               	goto	u1990
  2662  0473                     u1991:
  2663  0473  2C78               	goto	l2382
  2664  0474                     u1990:
  2665  0474                     l2380:
  2666  0474  3001               	movlw	1
  2667  0475  00E0               	movwf	_flag_R
  2668  0476  3000               	movlw	0
  2669  0477  00E1               	movwf	_flag_R+1
  2670  0478                     l2382:
  2671                           
  2672                           ;Q5.c: 360:                 if((flag_sw3==1)&&(flag_R==1))flag_P=1;
  2673  0478  0362               	decf	_flag_sw3,w
  2674  0479  0463               	iorwf	_flag_sw3+1,w
  2675  047A  1D03               	btfss	3,2
  2676  047B  2C7D               	goto	u2001
  2677  047C  2C7E               	goto	u2000
  2678  047D                     u2001:
  2679  047D  2C95               	goto	l208
  2680  047E                     u2000:
  2681  047E                     l2384:
  2682  047E  0360               	decf	_flag_R,w
  2683  047F  0461               	iorwf	_flag_R+1,w
  2684  0480  1D03               	btfss	3,2
  2685  0481  2C83               	goto	u2011
  2686  0482  2C84               	goto	u2010
  2687  0483                     u2011:
  2688  0483  2C95               	goto	l208
  2689  0484                     u2010:
  2690  0484  2C65               	goto	l2374
  2691  0485                     l2390:
  2692                           
  2693                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2694                           ; Switch size 1, requested type "simple"
  2695                           ; Number of cases is 1, Range of values is 0 to 0
  2696                           ; switch strategies available:
  2697                           ; Name         Instructions Cycles
  2698                           ; simple_byte            4     3 (average)
  2699                           ; direct_byte            8     6 (fixed)
  2700                           ; jumptable            260     6 (fixed)
  2701                           ;	Chosen strategy is simple_byte
  2702  0485  0879               	movf	tact@mode+1,w
  2703  0486  3A00               	xorlw	0	; case 0
  2704  0487  1903               	skipnz
  2705  0488  2C8A               	goto	l3484
  2706  0489  2C95               	goto	l208
  2707  048A                     l3484:
  2708                           
  2709                           ; Switch size 1, requested type "simple"
  2710                           ; Number of cases is 3, Range of values is 0 to 2
  2711                           ; switch strategies available:
  2712                           ; Name         Instructions Cycles
  2713                           ; simple_byte           10     6 (average)
  2714                           ; direct_byte           12     6 (fixed)
  2715                           ; jumptable            260     6 (fixed)
  2716                           ;	Chosen strategy is simple_byte
  2717  048A  0878               	movf	tact@mode,w
  2718  048B  3A00               	xorlw	0	; case 0
  2719  048C  1903               	skipnz
  2720  048D  2C4C               	goto	l2364
  2721  048E  3A01               	xorlw	1	; case 1
  2722  048F  1903               	skipnz
  2723  0490  2C5B               	goto	l2370
  2724  0491  3A03               	xorlw	3	; case 2
  2725  0492  1903               	skipnz
  2726  0493  2C6A               	goto	l2376
  2727  0494  2C95               	goto	l208
  2728  0495                     l208:
  2729  0495  0008               	return
  2730  0496                     __end_of_tact:
  2731                           
  2732                           	psect	text8
  2733  03C6                     __ptext8:	
  2734 ;; *************** function _tactsw *****************
  2735 ;; Defined at:
  2736 ;;		line 331 in file "Q5.c"
  2737 ;; Parameters:    Size  Location     Type
  2738 ;;		None
  2739 ;; Auto vars:     Size  Location     Type
  2740 ;;  a               2    6[COMMON] unsigned short 
  2741 ;;  c               2    4[COMMON] unsigned short 
  2742 ;;  b               2    2[COMMON] unsigned short 
  2743 ;; Return value:  Size  Location     Type
  2744 ;;                  1    wreg      void 
  2745 ;; Registers used:
  2746 ;;		wreg, status,2, status,0
  2747 ;; Tracked objects:
  2748 ;;		On entry : 0/0
  2749 ;;		On exit  : 0/0
  2750 ;;		Unchanged: 0/0
  2751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2753 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2754 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2755 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2756 ;;Total ram usage:        8 bytes
  2757 ;; Hardware stack levels used:    1
  2758 ;; This function calls:
  2759 ;;		Nothing
  2760 ;; This function is called by:
  2761 ;;		_tact
  2762 ;; This function uses a non-reentrant model
  2763 ;;
  2764                           
  2765                           
  2766                           ;psect for function _tactsw
  2767  03C6                     _tactsw:
  2768  03C6                     l2188:	
  2769                           ;incstack = 0
  2770                           ; Regs used in _tactsw: [wreg+status,2+status,0]
  2771                           
  2772                           
  2773                           ;Q5.c: 333:     unsigned short a,b,c;;Q5.c: 334:     b=c=0;
  2774  03C6  01F4               	clrf	tactsw@c
  2775  03C7  01F5               	clrf	tactsw@c+1
  2776  03C8  01F2               	clrf	tactsw@b
  2777  03C9  01F3               	clrf	tactsw@b+1
  2778  03CA                     l2190:
  2779                           
  2780                           ;Q5.c: 336:             a=RA2;
  2781  03CA  1003               	clrc
  2782  03CB  0020               	movlb	0	; select bank0
  2783  03CC  190C               	btfsc	12,2	;volatile
  2784  03CD  1403               	setc
  2785  03CE  3000               	movlw	0
  2786  03CF  3D09               	addwfc	9,w
  2787  03D0  00F0               	movwf	??_tactsw
  2788  03D1  01F1               	clrf	??_tactsw+1
  2789  03D2  0870               	movf	??_tactsw,w
  2790  03D3  00F6               	movwf	tactsw@a
  2791  03D4  0871               	movf	??_tactsw+1,w
  2792  03D5  00F7               	movwf	tactsw@a+1
  2793  03D6                     l2192:
  2794                           
  2795                           ;Q5.c: 337:             if(b==a)++c;
  2796  03D6  0877               	movf	tactsw@a+1,w
  2797  03D7  0673               	xorwf	tactsw@b+1,w
  2798  03D8  1D03               	skipz
  2799  03D9  2BDC               	goto	u1735
  2800  03DA  0876               	movf	tactsw@a,w
  2801  03DB  0672               	xorwf	tactsw@b,w
  2802  03DC                     u1735:
  2803  03DC  1D03               	skipz
  2804  03DD  2BDF               	goto	u1731
  2805  03DE  2BE0               	goto	u1730
  2806  03DF                     u1731:
  2807  03DF  2BE5               	goto	l2196
  2808  03E0                     u1730:
  2809  03E0                     l2194:
  2810  03E0  3001               	movlw	1
  2811  03E1  07F4               	addwf	tactsw@c,f
  2812  03E2  3000               	movlw	0
  2813  03E3  3DF5               	addwfc	tactsw@c+1,f
  2814  03E4  2BE7               	goto	l2198
  2815  03E5                     l2196:
  2816  03E5  01F4               	clrf	tactsw@c
  2817  03E6  01F5               	clrf	tactsw@c+1
  2818  03E7                     l2198:
  2819                           
  2820                           ;Q5.c: 339:             if(c>10){flag_sw3=(~a)&0x01;return;}
  2821  03E7  3000               	movlw	0
  2822  03E8  0275               	subwf	tactsw@c+1,w
  2823  03E9  300B               	movlw	11
  2824  03EA  1903               	skipnz
  2825  03EB  0274               	subwf	tactsw@c,w
  2826  03EC  1C03               	skipc
  2827  03ED  2BEF               	goto	u1741
  2828  03EE  2BF0               	goto	u1740
  2829  03EF                     u1741:
  2830  03EF  2BFD               	goto	l2204
  2831  03F0                     u1740:
  2832  03F0                     l2200:
  2833  03F0  0877               	movf	tactsw@a+1,w
  2834  03F1  00F1               	movwf	??_tactsw+1
  2835  03F2  0876               	movf	tactsw@a,w
  2836  03F3  00F0               	movwf	??_tactsw
  2837  03F4  09F0               	comf	??_tactsw,f
  2838  03F5  09F1               	comf	??_tactsw+1,f
  2839  03F6  3001               	movlw	1
  2840  03F7  0570               	andwf	??_tactsw,w
  2841  03F8  00E2               	movwf	_flag_sw3
  2842  03F9  3000               	movlw	0
  2843  03FA  0571               	andwf	??_tactsw+1,w
  2844  03FB  00E3               	movwf	_flag_sw3+1
  2845  03FC  2C02               	goto	l193
  2846  03FD                     l2204:
  2847                           
  2848                           ;Q5.c: 340:             b=a;
  2849  03FD  0877               	movf	tactsw@a+1,w
  2850  03FE  00F3               	movwf	tactsw@b+1
  2851  03FF  0876               	movf	tactsw@a,w
  2852  0400  00F2               	movwf	tactsw@b
  2853  0401  2BCA               	goto	l2190
  2854  0402                     l193:
  2855  0402  0008               	return
  2856  0403                     __end_of_tactsw:
  2857                           
  2858                           	psect	text9
  2859  0336                     __ptext9:	
  2860 ;; *************** function _fclr *****************
  2861 ;; Defined at:
  2862 ;;		line 369 in file "Q5.c"
  2863 ;; Parameters:    Size  Location     Type
  2864 ;;  flg             2    0[COMMON] unsigned short 
  2865 ;; Auto vars:     Size  Location     Type
  2866 ;;		None
  2867 ;; Return value:  Size  Location     Type
  2868 ;;                  1    wreg      void 
  2869 ;; Registers used:
  2870 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2871 ;; Tracked objects:
  2872 ;;		On entry : 0/0
  2873 ;;		On exit  : 0/0
  2874 ;;		Unchanged: 0/0
  2875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2876 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2879 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2880 ;;Total ram usage:        2 bytes
  2881 ;; Hardware stack levels used:    1
  2882 ;; This function calls:
  2883 ;;		Nothing
  2884 ;; This function is called by:
  2885 ;;		_kaisu
  2886 ;;		_main
  2887 ;;		_waitSEGStop
  2888 ;;		_motorStop
  2889 ;;		_buzzStop
  2890 ;; This function uses a non-reentrant model
  2891 ;;
  2892                           
  2893                           
  2894                           ;psect for function _fclr
  2895  0336                     _fclr:
  2896  0336                     l2396:	
  2897                           ;incstack = 0
  2898                           ; Regs used in _fclr: [wreg-fsr0h+status,2+status,0]
  2899                           
  2900                           
  2901                           ;Q5.c: 369: void fclr(unsigned short flg);Q5.c: 370: {;Q5.c: 371:     switch(flg){
  2902  0336  2B45               	goto	l2406
  2903  0337                     l2398:
  2904                           
  2905                           ;Q5.c: 373:                     flag_R=0;
  2906  0337  0020               	movlb	0	; select bank0
  2907  0338  01E0               	clrf	_flag_R
  2908  0339  01E1               	clrf	_flag_R+1
  2909                           
  2910                           ;Q5.c: 374:                     break;
  2911  033A  2B55               	goto	l217
  2912  033B                     l2400:
  2913                           
  2914                           ;Q5.c: 376:                     flag_P=0;
  2915  033B  0020               	movlb	0	; select bank0
  2916  033C  01DE               	clrf	_flag_P
  2917  033D  01DF               	clrf	_flag_P+1
  2918                           
  2919                           ;Q5.c: 377:                     break;
  2920  033E  2B55               	goto	l217
  2921  033F                     l2402:
  2922                           
  2923                           ;Q5.c: 379:                     flag_P=flag_R=0;
  2924  033F  0020               	movlb	0	; select bank0
  2925  0340  01E0               	clrf	_flag_R
  2926  0341  01E1               	clrf	_flag_R+1
  2927  0342  01DE               	clrf	_flag_P
  2928  0343  01DF               	clrf	_flag_P+1
  2929                           
  2930                           ;Q5.c: 380:                     break;
  2931  0344  2B55               	goto	l217
  2932  0345                     l2406:
  2933                           
  2934                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2935                           ; Switch size 1, requested type "simple"
  2936                           ; Number of cases is 1, Range of values is 0 to 0
  2937                           ; switch strategies available:
  2938                           ; Name         Instructions Cycles
  2939                           ; simple_byte            4     3 (average)
  2940                           ; direct_byte            8     6 (fixed)
  2941                           ; jumptable            260     6 (fixed)
  2942                           ;	Chosen strategy is simple_byte
  2943  0345  0871               	movf	fclr@flg+1,w
  2944  0346  3A00               	xorlw	0	; case 0
  2945  0347  1903               	skipnz
  2946  0348  2B4A               	goto	l3486
  2947  0349  2B55               	goto	l217
  2948  034A                     l3486:
  2949                           
  2950                           ; Switch size 1, requested type "simple"
  2951                           ; Number of cases is 3, Range of values is 0 to 2
  2952                           ; switch strategies available:
  2953                           ; Name         Instructions Cycles
  2954                           ; simple_byte           10     6 (average)
  2955                           ; direct_byte           12     6 (fixed)
  2956                           ; jumptable            260     6 (fixed)
  2957                           ;	Chosen strategy is simple_byte
  2958  034A  0870               	movf	fclr@flg,w
  2959  034B  3A00               	xorlw	0	; case 0
  2960  034C  1903               	skipnz
  2961  034D  2B37               	goto	l2398
  2962  034E  3A01               	xorlw	1	; case 1
  2963  034F  1903               	skipnz
  2964  0350  2B3B               	goto	l2400
  2965  0351  3A03               	xorlw	3	; case 2
  2966  0352  1903               	skipnz
  2967  0353  2B3F               	goto	l2402
  2968  0354  2B55               	goto	l217
  2969  0355                     l217:
  2970  0355  0008               	return
  2971  0356                     __end_of_fclr:
  2972                           
  2973                           	psect	text10
  2974  0316                     __ptext10:	
  2975 ;; *************** function _jikan *****************
  2976 ;; Defined at:
  2977 ;;		line 406 in file "Q5.c"
  2978 ;; Parameters:    Size  Location     Type
  2979 ;;		None
  2980 ;; Auto vars:     Size  Location     Type
  2981 ;;		None
  2982 ;; Return value:  Size  Location     Type
  2983 ;;                  1    wreg      void 
  2984 ;; Registers used:
  2985 ;;		wreg, status,2
  2986 ;; Tracked objects:
  2987 ;;		On entry : 0/0
  2988 ;;		On exit  : 0/0
  2989 ;;		Unchanged: 0/0
  2990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2995 ;;Total ram usage:        0 bytes
  2996 ;; Hardware stack levels used:    1
  2997 ;; This function calls:
  2998 ;;		Nothing
  2999 ;; This function is called by:
  3000 ;;		_main
  3001 ;; This function uses a non-reentrant model
  3002 ;;
  3003                           
  3004                           
  3005                           ;psect for function _jikan
  3006  0316                     _jikan:
  3007  0316                     l2508:	
  3008                           ;incstack = 0
  3009                           ; Regs used in _jikan: [wreg+status,2]
  3010                           
  3011                           
  3012                           ;Q5.c: 408:     if(RA2==0){++count;}
  3013  0316  0020               	movlb	0	; select bank0
  3014  0317  190C               	btfsc	12,2	;volatile
  3015  0318  2B1A               	goto	u2151
  3016  0319  2B1B               	goto	u2150
  3017  031A                     u2151:
  3018  031A  2B20               	goto	l2512
  3019  031B                     u2150:
  3020  031B                     l2510:
  3021  031B  3001               	movlw	1
  3022  031C  07D0               	addwf	_count,f
  3023  031D  3000               	movlw	0
  3024  031E  3DD1               	addwfc	_count+1,f
  3025  031F  2B22               	goto	l232
  3026  0320                     l2512:
  3027  0320  01D0               	clrf	_count
  3028  0321  01D1               	clrf	_count+1
  3029  0322                     l232:
  3030  0322  0008               	return
  3031  0323                     __end_of_jikan:
  3032  007E                     btemp	set	126	;btemp
  3033  007E                     wtemp0	set	126
  3034                           
  3035                           	psect	config
  3036                           
  3037                           ;Config register CONFIG1 @ 0x8007
  3038                           ;	Oscillator Selection
  3039                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  3040                           ;	Watchdog Timer Enable
  3041                           ;	WDTE = OFF, WDT disabled
  3042                           ;	Power-up Timer Enable
  3043                           ;	PWRTE = OFF, PWRT disabled
  3044                           ;	MCLR Pin Function Select
  3045                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  3046                           ;	Flash Program Memory Code Protection
  3047                           ;	CP = OFF, Program memory code protection is disabled
  3048                           ;	Data Memory Code Protection
  3049                           ;	CPD = OFF, Data memory code protection is disabled
  3050                           ;	Brown-out Reset Enable
  3051                           ;	BOREN = OFF, Brown-out Reset disabled
  3052                           ;	Clock Out Enable
  3053                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  3054                           ;	Internal/External Switchover
  3055                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3056                           ;	Fail-Safe Clock Monitor Enable
  3057                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3058  8007                     	org	32775
  3059  8007  09E4               	dw	2532
  3060                           
  3061                           ;Config register CONFIG2 @ 0x8008
  3062                           ;	Flash Memory Self-Write Protection
  3063                           ;	WRT = OFF, Write protection off
  3064                           ;	Voltage Regulator Capacitor Enable
  3065                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
  3066                           ;	PLL Enable
  3067                           ;	PLLEN = OFF, 4x PLL disabled
  3068                           ;	Stack Overflow/Underflow Reset Enable
  3069                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  3070                           ;	Brown-out Reset Voltage Selection
  3071                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  3072                           ;	Low-Voltage Programming Enable
  3073                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  3074  8008                     	org	32776
  3075  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    0
    Data        156
    BSS         34
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     38      80
    BANK1            80      0      76
    BANK2            80      0      72
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_kaisu
    _waitSEG->___lwdiv
    _waitSEG->_dynam
    _kaisu->_tact
    _tact->_tactsw

Critical Paths under _main in BANK0

    _main->_waitSEG
    _waitSEG->_dynam

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                25    25      0   11025
                                             12 COMMON     1     1      0
                                             14 BANK0     24    24      0
                              _dynam
                               _fclr
                              _jikan
                              _kaisu
                           _portinit
                            _waitSEG
                             _zenoff
 ---------------------------------------------------------------------------------
 (1) _zenoff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _waitSEG                                              8     2      6    4392
                                              8 COMMON     2     2      0
                                              8 BANK0      6     0      6
                            ___lwdiv
                              _dynam
 ---------------------------------------------------------------------------------
 (2) _dynam                                               16     8      8    2271
                                              0 COMMON     8     0      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     618
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _portinit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _kaisu                                                2     0      2    2462
                                             10 COMMON     2     0      2
                               _fclr
                               _tact
 ---------------------------------------------------------------------------------
 (2) _tact                                                 2     0      2     746
                                              8 COMMON     2     0      2
                             _tactsw
 ---------------------------------------------------------------------------------
 (3) _tactsw                                               8     8      0     116
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 (2) _fclr                                                 2     0      2    1618
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _jikan                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _dynam
   _fclr
   _jikan
   _kaisu
     _fclr
     _tact
       _tactsw
   _portinit
   _waitSEG
     ___lwdiv
     _dynam
   _zenoff

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     26      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      4C       7       95.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      48       9       90.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      F1      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      F1      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Jun 05 08:16:28 2021

                     l95 0335                       _cw 005A                      l112 0683  
                    l114 0693                      l123 06C9                      l116 06A9  
                    l108 0315                      l118 06B9                      l135 07D0  
                    l232 0322                      l208 0495                      l217 0355  
                    l129 0746                      l227 052E                      l193 0402  
                    l258 0389                      l356 0538                      l359 0545  
                    l806 03C5                      _RA0 0060                      _RA1 0061  
                    _RA2 0062                      _RC0 0070                      _RC1 0071  
                    _RC2 0072                      _RC5 0075                      _RC6 0076  
                    _RC7 0077                      _ccw 0058                      _flg 005C  
                    wreg 0009                     l2200 03F0                     l2210 066F  
                   l2204 03FD                     l2220 067F                     l2212 0671  
                   l2310 0748                     l2230 0695                     l2222 0687  
                   l2214 0672                     l2206 0667                     l2400 033B  
                   l2320 075E                     l2312 074E                     l2240 06A5  
                   l2232 0697                     l2216 0673                     l2208 066E  
                   l3200 0560                     l2402 033F                     l2330 0789  
                   l2314 0754                     l2322 0764                     l2306 073E  
                   l2250 06BC                     l2242 06AD                     l2234 0698  
                   l2226 068E                     l2218 067A                     l3210 0581  
                   l3202 0560                     l2420 039A                     l2412 038A  
                   l2340 07B0                     l2332 078F                     l2324 076A  
                   l2316 0758                     l2308 0744                     l2260 06C1  
                   l2252 06BD                     l2236 0699                     l3220 05A5  
                   l3204 0570                     l2510 031B                     l2406 0345  
                   l2190 03CA                     l2502 0521                     l2430 03B6  
                   l2422 039E                     l2414 038C                     l2342 07B4  
                   l2334 07A1                     l2326 0770                     l2318 075A  
                   l2270 06DB                     l2262 06C7                     l2254 06BD  
                   l2246 06B4                     l2238 06A0                     l3222 05A9  
                   l3230 05D9                     l3206 0577                     l3214 058A  
                   l2512 0320                     l2192 03D6                     l2440 0326  
                   l2432 03BB                     l2424 03A2                     l2416 0392  
                   l2352 07BB                     l2344 07B4                     l2336 07A8  
                   l2328 0782                     l2280 06F3                     l2272 06DD  
                   l2264 06CB                     l2256 06BE                     l3240 05F9  
                   l3232 05E0                     l3224 05AC                     l3208 057C  
                   l3216 059B                     l2194 03E0                     l2370 045B  
                   l2362 044B                     l2442 0329                     l2426 03B1  
                   l2418 0395                     l2434 03C1                     l2338 07AE  
                   l2290 072B                     l2282 0705                     l2274 06E1  
                   l2266 06D1                     l2258 06BF                     l3250 0627  
                   l3242 0618                     l3234 05E4                     l3226 05BA  
                   l3218 05A1                     l3170 0532                     l2508 0316  
                   l2196 03E5                     l2188 03C6                     l2380 0474  
                   l2372 045E                     l2364 044C                     l2444 0330  
                   l2428 03B5                     l2292 0731                     l2284 070C  
                   l2268 06D7                     l2276 06E7                     l2356 07C0  
                   l3260 0660                     l3252 062A                     l3236 05E8  
                   l3244 0618                     l3228 05D9                     l3180 0538  
                   l3172 0538                     l2198 03E7                     l2382 0478  
                   l2374 0465                     l2366 044F                     l2390 0485  
                   l2446 0333                     l2438 0323                     l2294 0733  
                   l2286 0712                     l2278 06ED                     l2470 0311  
                   l3262 0664                     l3254 0638                     l3246 061F  
                   l3238 05EB                     l3190 055D                     l3182 053D  
                   l3174 0538                     l2384 047E                     l2376 046A  
                   l2368 0456                     l2480 04E3                     l2296 0737  
                   l2288 0724                     l2472 0312                     l3256 0659  
                   l3248 0623                     l3192 055D                     l3184 0541  
                   l3176 0538                     l3168 052F                     l2378 046D  
                   l2490 0501                     l2482 04E9                     l2298 0737  
                   l2562 0372                     l2554 0356                     l2474 0313  
                   l3258 0659                     l3194 0560                     l3186 0556  
                   l3178 0538                     l2396 0336                     l2492 0508  
                   l2484 04F0                     l2564 0384                     l2556 0367  
                   l2476 0314                     l2468 030D                     l3196 0560  
                   l3188 055D                     l2398 0337                     l2494 050F  
                   l2486 04F6                     l2478 04E2                     l2558 036B  
                   l3198 0560                     l2496 0515                     l2488 04FA  
                   l3480 07C5                     l3482 0526                     l2498 0519  
                   l3484 048A                     l3486 034A                     l3478 0590  
                   u2000 047E                     u2001 047D                     u2010 0484  
                   u2011 0483                     u2020 0392                     u2021 0391  
                   u2110 04F0                     u2111 04EF                     u2120 04F6  
                   u2040 03A2                     u2200 0371                     u2121 04F5  
                   u2041 03A1                     u2201 0370                     u2130 050F  
                   u2131 050E                     u2035 0396                     u2140 0515  
                   u2060 03B1                     u2141 0514                     u2061 03B0  
                   u2150 031B                     u2151 031A                     u2055 03A3  
                   u2080 03C1                     u2081 03C0                     u2065 03AD  
                   u2075 03B7                     u3310 05A1                     u3311 05A0  
                   u1800 06D1                     u3400 0623                     u3320 05A5  
                   u3304 0556                     u1801 06D0                     u3401 0622  
                   u3321 05A4                     u1730 03E0                     u1810 06D7  
                   u3410 0627                     u3330 05A9                     u3250 053D  
                   u1731 03DF                     u1811 06D6                     u3411 0626  
                   u3331 05A8                     u3251 053C                     u1740 03F0  
                   u1900 0754                     u1820 06ED                     u3420 0638  
                   u3340 05BA                     u3260 0541                     u1741 03EF  
                   u1901 0753                     u1821 06EC                     u3421 0637  
                   u3341 05B9                     u3261 0540                     u1910 076A  
                   u1830 06F3                     u1750 067A                     u3430 0660  
                   u3350 05E0                     u3270 0545                     u1735 03DC  
                   u1911 0769                     u1831 06F2                     u1751 0679  
                   u3431 065F                     u3351 05DF                     u3271 0544  
                   u1920 0770                     u1840 070C                     u1760 068D  
                   u3440 0664                     u3360 05E4                     u3280 054C  
                   u1921 076F                     u1841 070B                     u1761 068C  
                   u3441 0663                     u3425 0634                     u3361 05E3  
                   u3345 05B6                     u3281 0549                     u1930 0789  
                   u1850 0712                     u1770 06A0                     u3370 05E8  
                   u3290 0554                     u1931 0788                     u1851 0711  
                   u1771 069F                     u3371 05E7                     u3291 0551  
                   u1940 078F                     u1860 072B                     u1780 06B3  
                   u3380 05F9                     u1941 078E                     u1861 072A  
                   u1781 06B2                     u3381 05F8                     u1950 07A8  
                   u1870 0731                     u1790 06C7                     u3390 061F  
                   u3294 054E                     u1951 07A7                     u1871 0730  
                   u1791 06C6                     u3391 061E                     u1960 07AE  
                   u1880 0744                     u1961 07AD                     u1881 0743  
                   u3385 05F5                     u1970 0456                     u1890 074E  
                   u1971 0455                     u1891 074D                     u1980 0465  
                   u1981 0464                     u1990 0474                     u1991 0473  
                   _atai 0052                     _fclr 0336                     _main 052F  
                   _num0 0154                     _kisu 00D8                     _moja 00CC  
                   _samf 0120                     _mojf 00C0                     _tact 044B  
                   _mojh 006C                     _moji 0140                     _mojn 0068  
                   _samp 00A0                     _gusu 00E2                     fsr0h 0005  
                   fsr1h 0007                     indf0 0000                     fsr0l 0004  
                   fsr1l 0006                     btemp 007E                     start 0002  
                  ?_fclr 0070                    ?_main 0070                    ?_tact 0078  
        __end_of___lwdiv 03C6                    _PORTA 000C                    _PORTB 000D  
                  _PORTC 000E                    _TRISA 008C                    _TRISB 008D  
                  _TRISC 008E                    _code1 0048                    _atai1 0054  
                  _kaisu 04E2                    _jikan 0316                    _count 0050  
                  _dynam 0667                    _fugou 0046          __end_of_waitSEG 038A  
                  status 0003                    wtemp0 007E          __initialization 07D1  
           __end_of_fclr 0356             __end_of_main 0667             __end_of_tact 0496  
                 ??_fclr 0072                   ??_main 007C                   ??_tact 007A  
                 ?_kaisu 007A                   ?_jikan 0070                   ?_dynam 0070  
                 _ANSELA 018C                   _ANSELB 018D                   _OSCCON 0099  
            dynam@smdata 0074                   _code10 004A                   _atai10 0056  
                 _flag_P 005E                   _flag_R 0060                ??___lwdiv 0074  
                 _tactsw 03C6                   _zenoff 030D                   dynam@j 0024  
              ??_waitSEG 0078         __end_of_portinit 0336  __end_of__initialization 07FD  
         __pcstackCOMMON 0070             __pidataBANK0 0305             __pidataBANK1 0496  
           __pidataBANK2 0403            __end_of_kaisu 052F            __end_of_jikan 0323  
          __end_of_dynam 07D1                  ??_kaisu 007C                  ??_jikan 0070  
                ??_dynam 0078               __pbssBANK0 0046               __pmaintext 052F  
                ?_tactsw 0070                  ?_zenoff 0070              waitSEG@seg1 0028  
            waitSEG@seg2 002A                ?_portinit 0070                  ___lwdiv 038A  
                _code100 004C          __size_of_tactsw 003D                  __ptext1 030D  
                __ptext2 0356                  __ptext3 0667                  __ptext4 038A  
                __ptext5 0323                  __ptext6 04E2                  __ptext7 044B  
                __ptext8 03C6                  __ptext9 0336          __size_of_zenoff 0009  
                fclr@flg 0070                  _waitSEG 0356                  clrloop0 02FA  
   end_of_initialization 07FD                  dynam@tm 0022                  dynam@tr 0076  
                init_ram 02FF                  initloop 0300                  tactsw@a 0076  
                tactsw@b 0072                  tactsw@c 0074               ??_portinit 0070  
             kaisu@mode1 007A           __end_of_tactsw 0403           __end_of_zenoff 0316  
    start_initialization 07D1              __pdataBANK0 0068              __pdataBANK1 00A0  
            __pdataBANK2 0120                 ??_tactsw 0070                 ??_zenoff 0070  
              ___latbits 0003            __pcstackBANK0 0020         ___lwdiv@dividend 0072  
               ?___lwdiv 0070        __size_of_portinit 0013                 ?_waitSEG 0028  
       ___lwdiv@quotient 0075           __size_of_kaisu 004D           __size_of_jikan 000D  
         __size_of_dynam 016A            dynam@dig1data 0070            dynam@dig2data 0072  
              clear_ram0 02F9         __size_of___lwdiv 003C                 _code1000 004E  
        ___lwdiv@divisor 0070          ___lwdiv@counter 0077         __size_of_waitSEG 0034  
               __ptext10 0316                 _flag_sw1 0066                 _flag_sw2 0064  
               _flag_sw3 0062                waitSEG@wt 002C            __size_of_fclr 0020  
          __size_of_main 0138            __size_of_tact 004B                 _portinit 0323  
               main@segL 0044                 dynam@ext 0026                 dynam@smd 0020  
               tact@mode 0078                 waitSEG@i 0078  
