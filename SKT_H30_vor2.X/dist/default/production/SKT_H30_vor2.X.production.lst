

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Jun 05 09:15:38 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F1938
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.20
    32                           ; Generated 12/02/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F1938 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0016                     	;# 
    87  0017                     	;# 
    88  0018                     	;# 
    89  0019                     	;# 
    90  001A                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  010C                     	;# 
   114  010D                     	;# 
   115  010E                     	;# 
   116  0110                     	;# 
   117  0111                     	;# 
   118  0112                     	;# 
   119  0113                     	;# 
   120  0114                     	;# 
   121  0115                     	;# 
   122  0116                     	;# 
   123  0117                     	;# 
   124  0118                     	;# 
   125  0119                     	;# 
   126  011A                     	;# 
   127  011B                     	;# 
   128  011D                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0191                     	;# 
   132  0191                     	;# 
   133  0192                     	;# 
   134  0193                     	;# 
   135  0193                     	;# 
   136  0193                     	;# 
   137  0194                     	;# 
   138  0195                     	;# 
   139  0196                     	;# 
   140  0199                     	;# 
   141  019A                     	;# 
   142  019B                     	;# 
   143  019B                     	;# 
   144  019B                     	;# 
   145  019B                     	;# 
   146  019C                     	;# 
   147  019C                     	;# 
   148  019D                     	;# 
   149  019E                     	;# 
   150  019F                     	;# 
   151  020D                     	;# 
   152  0210                     	;# 
   153  0211                     	;# 
   154  0212                     	;# 
   155  0213                     	;# 
   156  0214                     	;# 
   157  0215                     	;# 
   158  0215                     	;# 
   159  0216                     	;# 
   160  0217                     	;# 
   161  0291                     	;# 
   162  0291                     	;# 
   163  0292                     	;# 
   164  0293                     	;# 
   165  0294                     	;# 
   166  0295                     	;# 
   167  0295                     	;# 
   168  0296                     	;# 
   169  0298                     	;# 
   170  0298                     	;# 
   171  0299                     	;# 
   172  029A                     	;# 
   173  029B                     	;# 
   174  029C                     	;# 
   175  029C                     	;# 
   176  029D                     	;# 
   177  029E                     	;# 
   178  029F                     	;# 
   179  0311                     	;# 
   180  0311                     	;# 
   181  0312                     	;# 
   182  0313                     	;# 
   183  0314                     	;# 
   184  0315                     	;# 
   185  0315                     	;# 
   186  0316                     	;# 
   187  0318                     	;# 
   188  0318                     	;# 
   189  0319                     	;# 
   190  031A                     	;# 
   191  031C                     	;# 
   192  031C                     	;# 
   193  031D                     	;# 
   194  031E                     	;# 
   195  0394                     	;# 
   196  0395                     	;# 
   197  0396                     	;# 
   198  0415                     	;# 
   199  0416                     	;# 
   200  0417                     	;# 
   201  041C                     	;# 
   202  041D                     	;# 
   203  041E                     	;# 
   204  0791                     	;# 
   205  0792                     	;# 
   206  0793                     	;# 
   207  0794                     	;# 
   208  0795                     	;# 
   209  0798                     	;# 
   210  0799                     	;# 
   211  07A0                     	;# 
   212  07A1                     	;# 
   213  07A3                     	;# 
   214  07A4                     	;# 
   215  07A6                     	;# 
   216  07A7                     	;# 
   217  07A9                     	;# 
   218  07AA                     	;# 
   219  0FE4                     	;# 
   220  0FE5                     	;# 
   221  0FE6                     	;# 
   222  0FE7                     	;# 
   223  0FE8                     	;# 
   224  0FE9                     	;# 
   225  0FEA                     	;# 
   226  0FEB                     	;# 
   227  0FED                     	;# 
   228  0FEE                     	;# 
   229  0FEF                     	;# 
   230  0000                     	;# 
   231  0001                     	;# 
   232  0002                     	;# 
   233  0003                     	;# 
   234  0004                     	;# 
   235  0005                     	;# 
   236  0006                     	;# 
   237  0007                     	;# 
   238  0008                     	;# 
   239  0009                     	;# 
   240  000A                     	;# 
   241  000B                     	;# 
   242  000C                     	;# 
   243  000D                     	;# 
   244  000E                     	;# 
   245  0010                     	;# 
   246  0011                     	;# 
   247  0012                     	;# 
   248  0013                     	;# 
   249  0015                     	;# 
   250  0016                     	;# 
   251  0016                     	;# 
   252  0017                     	;# 
   253  0018                     	;# 
   254  0019                     	;# 
   255  001A                     	;# 
   256  001B                     	;# 
   257  001C                     	;# 
   258  001E                     	;# 
   259  001F                     	;# 
   260  008C                     	;# 
   261  008D                     	;# 
   262  008E                     	;# 
   263  0090                     	;# 
   264  0091                     	;# 
   265  0092                     	;# 
   266  0093                     	;# 
   267  0095                     	;# 
   268  0096                     	;# 
   269  0097                     	;# 
   270  0098                     	;# 
   271  0099                     	;# 
   272  009A                     	;# 
   273  009B                     	;# 
   274  009B                     	;# 
   275  009C                     	;# 
   276  009D                     	;# 
   277  009E                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  0110                     	;# 
   282  0111                     	;# 
   283  0112                     	;# 
   284  0113                     	;# 
   285  0114                     	;# 
   286  0115                     	;# 
   287  0116                     	;# 
   288  0117                     	;# 
   289  0118                     	;# 
   290  0119                     	;# 
   291  011A                     	;# 
   292  011B                     	;# 
   293  011D                     	;# 
   294  018C                     	;# 
   295  018D                     	;# 
   296  0191                     	;# 
   297  0191                     	;# 
   298  0192                     	;# 
   299  0193                     	;# 
   300  0193                     	;# 
   301  0193                     	;# 
   302  0194                     	;# 
   303  0195                     	;# 
   304  0196                     	;# 
   305  0199                     	;# 
   306  019A                     	;# 
   307  019B                     	;# 
   308  019B                     	;# 
   309  019B                     	;# 
   310  019B                     	;# 
   311  019C                     	;# 
   312  019C                     	;# 
   313  019D                     	;# 
   314  019E                     	;# 
   315  019F                     	;# 
   316  020D                     	;# 
   317  0210                     	;# 
   318  0211                     	;# 
   319  0212                     	;# 
   320  0213                     	;# 
   321  0214                     	;# 
   322  0215                     	;# 
   323  0215                     	;# 
   324  0216                     	;# 
   325  0217                     	;# 
   326  0291                     	;# 
   327  0291                     	;# 
   328  0292                     	;# 
   329  0293                     	;# 
   330  0294                     	;# 
   331  0295                     	;# 
   332  0295                     	;# 
   333  0296                     	;# 
   334  0298                     	;# 
   335  0298                     	;# 
   336  0299                     	;# 
   337  029A                     	;# 
   338  029B                     	;# 
   339  029C                     	;# 
   340  029C                     	;# 
   341  029D                     	;# 
   342  029E                     	;# 
   343  029F                     	;# 
   344  0311                     	;# 
   345  0311                     	;# 
   346  0312                     	;# 
   347  0313                     	;# 
   348  0314                     	;# 
   349  0315                     	;# 
   350  0315                     	;# 
   351  0316                     	;# 
   352  0318                     	;# 
   353  0318                     	;# 
   354  0319                     	;# 
   355  031A                     	;# 
   356  031C                     	;# 
   357  031C                     	;# 
   358  031D                     	;# 
   359  031E                     	;# 
   360  0394                     	;# 
   361  0395                     	;# 
   362  0396                     	;# 
   363  0415                     	;# 
   364  0416                     	;# 
   365  0417                     	;# 
   366  041C                     	;# 
   367  041D                     	;# 
   368  041E                     	;# 
   369  0791                     	;# 
   370  0792                     	;# 
   371  0793                     	;# 
   372  0794                     	;# 
   373  0795                     	;# 
   374  0798                     	;# 
   375  0799                     	;# 
   376  07A0                     	;# 
   377  07A1                     	;# 
   378  07A3                     	;# 
   379  07A4                     	;# 
   380  07A6                     	;# 
   381  07A7                     	;# 
   382  07A9                     	;# 
   383  07AA                     	;# 
   384  0FE4                     	;# 
   385  0FE5                     	;# 
   386  0FE6                     	;# 
   387  0FE7                     	;# 
   388  0FE8                     	;# 
   389  0FE9                     	;# 
   390  0FEA                     	;# 
   391  0FEB                     	;# 
   392  0FED                     	;# 
   393  0FEE                     	;# 
   394  0FEF                     	;# 
   395                           
   396                           	psect	idataBANK0
   397  0246                     __pidataBANK0:
   398                           
   399                           ;initializer for _mojh
   400  0246  3476               	retlw	118
   401  0247  3400               	retlw	0
   402  0248  3438               	retlw	56
   403  0249  3400               	retlw	0
   404                           
   405                           	psect	idataBANK1
   406  0408                     __pidataBANK1:
   407                           
   408                           ;initializer for _samp
   409  0408  343F               	retlw	63
   410  0409  3400               	retlw	0
   411  040A  3406               	retlw	6
   412  040B  3400               	retlw	0
   413  040C  345B               	retlw	91
   414  040D  3400               	retlw	0
   415  040E  344F               	retlw	79
   416  040F  3400               	retlw	0
   417  0410  3466               	retlw	102
   418  0411  3400               	retlw	0
   419  0412  346D               	retlw	109
   420  0413  3400               	retlw	0
   421  0414  347D               	retlw	125
   422  0415  3400               	retlw	0
   423  0416  3427               	retlw	39
   424  0417  3400               	retlw	0
   425  0418  347F               	retlw	127
   426  0419  3400               	retlw	0
   427  041A  346F               	retlw	111
   428  041B  3400               	retlw	0
   429  041C  345F               	retlw	95
   430  041D  3400               	retlw	0
   431  041E  347C               	retlw	124
   432  041F  3400               	retlw	0
   433  0420  3458               	retlw	88
   434  0421  3400               	retlw	0
   435  0422  345E               	retlw	94
   436  0423  3400               	retlw	0
   437  0424  3479               	retlw	121
   438  0425  3400               	retlw	0
   439  0426  3471               	retlw	113
   440  0427  3400               	retlw	0
   441                           
   442                           ;initializer for _moji
   443  0428  345F               	retlw	95
   444  0429  3400               	retlw	0
   445  042A  347C               	retlw	124
   446  042B  3400               	retlw	0
   447  042C  3458               	retlw	88
   448  042D  3400               	retlw	0
   449  042E  345E               	retlw	94
   450  042F  3400               	retlw	0
   451  0430  3479               	retlw	121
   452  0431  3400               	retlw	0
   453  0432  3471               	retlw	113
   454  0433  3400               	retlw	0
   455  0434  3476               	retlw	118
   456  0435  3400               	retlw	0
   457  0436  3438               	retlw	56
   458  0437  3400               	retlw	0
   459  0438  3454               	retlw	84
   460  0439  3400               	retlw	0
   461  043A  3473               	retlw	115
   462  043B  3400               	retlw	0
   463                           
   464                           ;initializer for _num0
   465  043C  343F               	retlw	63
   466  043D  3400               	retlw	0
   467  043E  3406               	retlw	6
   468  043F  3400               	retlw	0
   469  0440  345B               	retlw	91
   470  0441  3400               	retlw	0
   471  0442  344F               	retlw	79
   472  0443  3400               	retlw	0
   473  0444  3466               	retlw	102
   474  0445  3400               	retlw	0
   475  0446  346D               	retlw	109
   476  0447  3400               	retlw	0
   477  0448  347D               	retlw	125
   478  0449  3400               	retlw	0
   479  044A  3427               	retlw	39
   480  044B  3400               	retlw	0
   481  044C  347F               	retlw	127
   482  044D  3400               	retlw	0
   483  044E  346F               	retlw	111
   484  044F  3400               	retlw	0
   485                           
   486                           ;initializer for _mojn
   487  0450  3454               	retlw	84
   488  0451  3400               	retlw	0
   489  0452  3473               	retlw	115
   490  0453  3400               	retlw	0
   491                           
   492                           	psect	idataBANK2
   493  03BC                     __pidataBANK2:
   494                           
   495                           ;initializer for _samf
   496  03BC  3471               	retlw	113
   497  03BD  3400               	retlw	0
   498  03BE  3479               	retlw	121
   499  03BF  3400               	retlw	0
   500  03C0  345E               	retlw	94
   501  03C1  3400               	retlw	0
   502  03C2  3458               	retlw	88
   503  03C3  3400               	retlw	0
   504  03C4  347C               	retlw	124
   505  03C5  3400               	retlw	0
   506  03C6  345F               	retlw	95
   507  03C7  3400               	retlw	0
   508  03C8  346F               	retlw	111
   509  03C9  3400               	retlw	0
   510  03CA  347F               	retlw	127
   511  03CB  3400               	retlw	0
   512  03CC  3427               	retlw	39
   513  03CD  3400               	retlw	0
   514  03CE  347D               	retlw	125
   515  03CF  3400               	retlw	0
   516  03D0  346D               	retlw	109
   517  03D1  3400               	retlw	0
   518  03D2  3466               	retlw	102
   519  03D3  3400               	retlw	0
   520  03D4  344F               	retlw	79
   521  03D5  3400               	retlw	0
   522  03D6  345B               	retlw	91
   523  03D7  3400               	retlw	0
   524  03D8  3406               	retlw	6
   525  03D9  3400               	retlw	0
   526  03DA  343F               	retlw	63
   527  03DB  3400               	retlw	0
   528                           
   529                           ;initializer for _mojf
   530  03DC  3471               	retlw	113
   531  03DD  3400               	retlw	0
   532  03DE  3479               	retlw	121
   533  03DF  3400               	retlw	0
   534  03E0  345E               	retlw	94
   535  03E1  3400               	retlw	0
   536  03E2  3458               	retlw	88
   537  03E3  3400               	retlw	0
   538  03E4  347C               	retlw	124
   539  03E5  3400               	retlw	0
   540  03E6  345F               	retlw	95
   541  03E7  3400               	retlw	0
   542                           
   543                           ;initializer for _moja
   544  03E8  345F               	retlw	95
   545  03E9  3400               	retlw	0
   546  03EA  347C               	retlw	124
   547  03EB  3400               	retlw	0
   548  03EC  3458               	retlw	88
   549  03ED  3400               	retlw	0
   550  03EE  345E               	retlw	94
   551  03EF  3400               	retlw	0
   552  03F0  3479               	retlw	121
   553  03F1  3400               	retlw	0
   554  03F2  3471               	retlw	113
   555  03F3  3400               	retlw	0
   556                           
   557                           ;initializer for _kisu
   558  03F4  3406               	retlw	6
   559  03F5  3400               	retlw	0
   560  03F6  344F               	retlw	79
   561  03F7  3400               	retlw	0
   562  03F8  346D               	retlw	109
   563  03F9  3400               	retlw	0
   564  03FA  3427               	retlw	39
   565  03FB  3400               	retlw	0
   566  03FC  346F               	retlw	111
   567  03FD  3400               	retlw	0
   568                           
   569                           ;initializer for _gusu
   570  03FE  343F               	retlw	63
   571  03FF  3400               	retlw	0
   572  0400  345B               	retlw	91
   573  0401  3400               	retlw	0
   574  0402  3466               	retlw	102
   575  0403  3400               	retlw	0
   576  0404  347D               	retlw	125
   577  0405  3400               	retlw	0
   578  0406  347F               	retlw	127
   579  0407  3400               	retlw	0
   580  000E                     _PORTC	set	14
   581  000D                     _PORTB	set	13
   582  000C                     _PORTA	set	12
   583  0061                     _RA1	set	97
   584  0060                     _RA0	set	96
   585  0062                     _RA2	set	98
   586  0077                     _RC7	set	119
   587  0070                     _RC0	set	112
   588  0071                     _RC1	set	113
   589  0072                     _RC2	set	114
   590  0076                     _RC6	set	118
   591  0075                     _RC5	set	117
   592  0099                     _OSCCON	set	153
   593  008E                     _TRISC	set	142
   594  008D                     _TRISB	set	141
   595  008C                     _TRISA	set	140
   596  018D                     _ANSELB	set	397
   597  018C                     _ANSELA	set	396
   598                           
   599                           	psect	cinit
   600  07CF                     start_initialization:	
   601                           ; #config settings
   602                           
   603  07CF                     __initialization:
   604                           
   605                           ; Initialize objects allocated to BANK0
   606  07CF  3046               	movlw	low __pidataBANK0
   607  07D0  0084               	movwf	4
   608  07D1  3082               	movlw	(high __pidataBANK0)| (0+128)
   609  07D2  0085               	movwf	5
   610  07D3  306A               	movlw	low __pdataBANK0
   611  07D4  0086               	movwf	6
   612  07D5  3000               	movlw	high __pdataBANK0
   613  07D6  0087               	movwf	7
   614  07D7  3004               	movlw	4
   615  07D8  3182  2250  3187   	fcall	init_ram
   616                           
   617                           ; Initialize objects allocated to BANK1
   618  07DB  3008               	movlw	low __pidataBANK1
   619  07DC  0084               	movwf	4
   620  07DD  3084               	movlw	(high __pidataBANK1)| (0+128)
   621  07DE  0085               	movwf	5
   622  07DF  30A0               	movlw	low __pdataBANK1
   623  07E0  0086               	movwf	6
   624  07E1  3000               	movlw	high __pdataBANK1
   625  07E2  0087               	movwf	7
   626  07E3  304C               	movlw	76
   627  07E4  3182  2250  3187   	fcall	init_ram
   628                           
   629                           ; Initialize objects allocated to BANK2
   630  07E7  30BC               	movlw	low __pidataBANK2
   631  07E8  0084               	movwf	4
   632  07E9  3083               	movlw	(high __pidataBANK2)| (0+128)
   633  07EA  0085               	movwf	5
   634  07EB  3020               	movlw	low __pdataBANK2
   635  07EC  0086               	movwf	6
   636  07ED  3001               	movlw	high __pdataBANK2
   637  07EE  0087               	movwf	7
   638  07EF  304C               	movlw	76
   639  07F0  3182  2250  3187   	fcall	init_ram
   640                           
   641                           ; Clear objects allocated to COMMON
   642  07F3  01FC               	clrf	__pbssCOMMON& (0+127)
   643  07F4  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   644                           
   645                           ; Clear objects allocated to BANK0
   646  07F5  304A               	movlw	low __pbssBANK0
   647  07F6  0084               	movwf	4
   648  07F7  3000               	movlw	high __pbssBANK0
   649  07F8  0085               	movwf	5
   650  07F9  3020               	movlw	32
   651  07FA  3182  224A  3187   	fcall	clear_ram0
   652  07FD                     end_of_initialization:	
   653                           ;End of C runtime variable initialization code
   654                           
   655  07FD                     __end_of__initialization:
   656  07FD  0020               	movlb	0
   657  07FE  3185  2DBE         	ljmp	_main	;jump to C main() function
   658                           
   659                           	psect	bssCOMMON
   660  007C                     __pbssCOMMON:
   661  007C                     _flag_sw3:
   662  007C                     	ds	2
   663                           
   664                           	psect	bssBANK0
   665  004A                     __pbssBANK0:
   666  004A                     _fugou:
   667  004A                     	ds	2
   668  004C                     _code1:
   669  004C                     	ds	2
   670  004E                     _code10:
   671  004E                     	ds	2
   672  0050                     _code100:
   673  0050                     	ds	2
   674  0052                     _code1000:
   675  0052                     	ds	2
   676  0054                     _count:
   677  0054                     	ds	2
   678  0056                     _atai:
   679  0056                     	ds	2
   680  0058                     _atai1:
   681  0058                     	ds	2
   682  005A                     _atai10:
   683  005A                     	ds	2
   684  005C                     _ccw:
   685  005C                     	ds	2
   686  005E                     _cw:
   687  005E                     	ds	2
   688  0060                     _flg:
   689  0060                     	ds	2
   690  0062                     _flag_P:
   691  0062                     	ds	2
   692  0064                     _flag_R:
   693  0064                     	ds	2
   694  0066                     _flag_sw2:
   695  0066                     	ds	2
   696  0068                     _flag_sw1:
   697  0068                     	ds	2
   698                           
   699                           	psect	dataBANK0
   700  006A                     __pdataBANK0:
   701  006A                     _mojh:
   702  006A                     	ds	4
   703                           
   704                           	psect	dataBANK1
   705  00A0                     __pdataBANK1:
   706  00A0                     _samp:
   707  00A0                     	ds	32
   708  00C0                     _moji:
   709  00C0                     	ds	20
   710  00D4                     _num0:
   711  00D4                     	ds	20
   712  00E8                     _mojn:
   713  00E8                     	ds	4
   714                           
   715                           	psect	dataBANK2
   716  0120                     __pdataBANK2:
   717  0120                     _samf:
   718  0120                     	ds	32
   719  0140                     _mojf:
   720  0140                     	ds	12
   721  014C                     _moja:
   722  014C                     	ds	12
   723  0158                     _kisu:
   724  0158                     	ds	10
   725  0162                     _gusu:
   726  0162                     	ds	10
   727                           
   728                           	psect	inittext
   729  0250                     init_ram:
   730  0250  00FE               	movwf	btemp
   731  0251                     initloop:
   732  0251  0012               	moviw fsr0++
   733  0252  001E               	movwi fsr1++
   734  0253  0BFE               	decfsz	btemp,f
   735  0254  2A51               	goto	initloop
   736  0255  3400               	retlw	0
   737                           
   738                           	psect	clrtext
   739  024A                     clear_ram0:	
   740                           ;	Called with FSR0 containing the base address, and
   741                           ;	WREG with the size to clear
   742                           
   743  024A  0064               	clrwdt	;clear the watchdog before getting into this loop
   744  024B                     clrloop0:
   745  024B  0180               	clrf	0	;clear RAM location pointed to by FSR
   746  024C  3101               	addfsr 0,1
   747  024D  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   748  024E  2A4B               	goto	clrloop0	;have we reached the end yet?
   749  024F  3400               	retlw	0	;all done for this memory range, return
   750                           
   751                           	psect	cstackCOMMON
   752  0070                     __pcstackCOMMON:
   753  0070                     ?_portinit:
   754  0070                     ??_portinit:	
   755                           ; 1 bytes @ 0x0
   756                           
   757  0070                     ?_zenoff:	
   758                           ; 1 bytes @ 0x0
   759                           
   760  0070                     ??_zenoff:	
   761                           ; 1 bytes @ 0x0
   762                           
   763  0070                     ?_dynam:	
   764                           ; 1 bytes @ 0x0
   765                           
   766  0070                     ?_tactsw:	
   767                           ; 1 bytes @ 0x0
   768                           
   769  0070                     ??_tactsw:	
   770                           ; 1 bytes @ 0x0
   771                           
   772  0070                     ?_fclr:	
   773                           ; 1 bytes @ 0x0
   774                           
   775  0070                     ?_jikan:	
   776                           ; 1 bytes @ 0x0
   777                           
   778  0070                     ??_jikan:	
   779                           ; 1 bytes @ 0x0
   780                           
   781  0070                     ?_main:	
   782                           ; 1 bytes @ 0x0
   783                           
   784  0070                     ?___lwdiv:	
   785                           ; 1 bytes @ 0x0
   786                           
   787  0070                     dynam@dig1data:	
   788                           ; 2 bytes @ 0x0
   789                           
   790  0070                     fclr@flg:	
   791                           ; 2 bytes @ 0x0
   792                           
   793  0070                     ___lwdiv@divisor:	
   794                           ; 2 bytes @ 0x0
   795                           
   796                           
   797                           ; 2 bytes @ 0x0
   798  0070                     	ds	2
   799  0072                     ??_fclr:
   800  0072                     dynam@dig2data:	
   801                           ; 1 bytes @ 0x2
   802                           
   803  0072                     tactsw@b:	
   804                           ; 2 bytes @ 0x2
   805                           
   806  0072                     ___lwdiv@dividend:	
   807                           ; 2 bytes @ 0x2
   808                           
   809                           
   810                           ; 2 bytes @ 0x2
   811  0072                     	ds	2
   812  0074                     ??___lwdiv:
   813  0074                     dynam@smdata:	
   814                           ; 1 bytes @ 0x4
   815                           
   816  0074                     tactsw@c:	
   817                           ; 2 bytes @ 0x4
   818                           
   819                           
   820                           ; 2 bytes @ 0x4
   821  0074                     	ds	1
   822  0075                     ___lwdiv@quotient:
   823                           
   824                           ; 2 bytes @ 0x5
   825  0075                     	ds	1
   826  0076                     dynam@tr:
   827  0076                     tactsw@a:	
   828                           ; 2 bytes @ 0x6
   829                           
   830                           
   831                           ; 2 bytes @ 0x6
   832  0076                     	ds	1
   833  0077                     ___lwdiv@counter:
   834                           
   835                           ; 1 bytes @ 0x7
   836  0077                     	ds	1
   837  0078                     ??_dynam:
   838  0078                     ?_tact:	
   839                           ; 1 bytes @ 0x8
   840                           
   841  0078                     ??_waitSEG:	
   842                           ; 1 bytes @ 0x8
   843                           
   844  0078                     ??_motor:	
   845                           ; 1 bytes @ 0x8
   846                           
   847  0078                     tact@mode:	
   848                           ; 1 bytes @ 0x8
   849                           
   850  0078                     waitSEG@i:	
   851                           ; 2 bytes @ 0x8
   852                           
   853  0078                     motor@i:	
   854                           ; 2 bytes @ 0x8
   855                           
   856                           
   857                           ; 2 bytes @ 0x8
   858  0078                     	ds	2
   859  007A                     ??_tact:
   860  007A                     ??_main:	
   861                           ; 1 bytes @ 0xA
   862                           
   863                           
   864                           ; 1 bytes @ 0xA
   865  007A                     	ds	2
   866                           
   867                           	psect	cstackBANK0
   868  0020                     __pcstackBANK0:
   869  0020                     dynam@smd:
   870                           
   871                           ; 2 bytes @ 0x0
   872  0020                     	ds	2
   873  0022                     dynam@tm:
   874                           
   875                           ; 2 bytes @ 0x2
   876  0022                     	ds	2
   877  0024                     dynam@j:
   878                           
   879                           ; 2 bytes @ 0x4
   880  0024                     	ds	2
   881  0026                     dynam@ext:
   882                           
   883                           ; 2 bytes @ 0x6
   884  0026                     	ds	2
   885  0028                     ?_waitSEG:
   886  0028                     ?_motor:	
   887                           ; 1 bytes @ 0x8
   888                           
   889  0028                     waitSEG@seg1:	
   890                           ; 1 bytes @ 0x8
   891                           
   892  0028                     motor@kakudo:	
   893                           ; 2 bytes @ 0x8
   894                           
   895                           
   896                           ; 2 bytes @ 0x8
   897  0028                     	ds	2
   898  002A                     waitSEG@seg2:
   899  002A                     motor@dig1data:	
   900                           ; 2 bytes @ 0xA
   901                           
   902                           
   903                           ; 2 bytes @ 0xA
   904  002A                     	ds	2
   905  002C                     waitSEG@wt:
   906  002C                     motor@dig2data:	
   907                           ; 2 bytes @ 0xC
   908                           
   909                           
   910                           ; 2 bytes @ 0xC
   911  002C                     	ds	2
   912  002E                     motor@smdata:
   913                           
   914                           ; 2 bytes @ 0xE
   915  002E                     	ds	2
   916  0030                     motor@tr:
   917                           
   918                           ; 2 bytes @ 0x10
   919  0030                     	ds	24
   920  0048                     main@i:
   921                           
   922                           ; 2 bytes @ 0x28
   923  0048                     	ds	2
   924                           
   925                           	psect	maintext
   926  05BE                     __pmaintext:	
   927 ;;
   928 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   929 ;;
   930 ;; *************** function _main *****************
   931 ;; Defined at:
   932 ;;		line 768 in file "Q3.c"
   933 ;; Parameters:    Size  Location     Type
   934 ;;		None
   935 ;; Auto vars:     Size  Location     Type
   936 ;;  i               2   40[BANK0 ] int 
   937 ;;  zyoutai         2    0        int 
   938 ;;  ataiR           2    0        int 
   939 ;;  ataiL           2    0        int 
   940 ;;  segR            2    0        unsigned short 
   941 ;;  segL            2    0        unsigned short 
   942 ;;  ans             2    0        int 
   943 ;;  time            2    0        int 
   944 ;;  n               2    0        int 
   945 ;;  m               2    0        int 
   946 ;;  k               2    0        int 
   947 ;;  j               2    0        int 
   948 ;; Return value:  Size  Location     Type
   949 ;;                  1    wreg      void 
   950 ;; Registers used:
   951 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   952 ;; Tracked objects:
   953 ;;		On entry : B1F/0
   954 ;;		On exit  : 0/0
   955 ;;		Unchanged: 0/0
   956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   958 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
   959 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   960 ;;      Totals:         2      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
   961 ;;Total ram usage:       26 bytes
   962 ;; Hardware stack levels required when called:    2
   963 ;; This function calls:
   964 ;;		_dynam
   965 ;;		_fclr
   966 ;;		_jikan
   967 ;;		_motor
   968 ;;		_portinit
   969 ;;		_tact
   970 ;;		_waitSEG
   971 ;;		_zenoff
   972 ;; This function is called by:
   973 ;;		Startup code after reset
   974 ;; This function uses a non-reentrant model
   975 ;;
   976                           
   977                           
   978                           ;psect for function _main
   979  05BE                     _main:
   980  05BE                     l3172:	
   981                           ;incstack = 0
   982                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   983                           
   984                           
   985                           ;Q3.c: 771:     OSCCON=0x7A;
   986  05BE  307A               	movlw	122
   987  05BF  0021               	movlb	1	; select bank1
   988  05C0  0099               	movwf	25	;volatile
   989  05C1                     l3174:
   990                           
   991                           ;Q3.c: 773:     portinit();
   992  05C1  3182  226C  3185   	fcall	_portinit
   993                           
   994                           ;Q3.c: 775:     zenoff();
   995  05C4  3182  2256  3185   	fcall	_zenoff
   996  05C7                     l3176:
   997  05C7                     l3178:
   998  05C7                     l3180:
   999  05C7                     l3182:
  1000  05C7                     l3184:
  1001  05C7                     l356:	
  1002                           ;Q3.c: 780:     while((RA0!=1)||(RA1!=1)||(RA2!=1));
  1003                           
  1004  05C7  0020               	movlb	0	; select bank0
  1005  05C8  1C0C               	btfss	12,0	;volatile
  1006  05C9  2DCB               	goto	u3311
  1007  05CA  2DCC               	goto	u3310
  1008  05CB                     u3311:
  1009  05CB  2DC7               	goto	l356
  1010  05CC                     u3310:
  1011  05CC                     l3186:
  1012  05CC  1C8C               	btfss	12,1	;volatile
  1013  05CD  2DCF               	goto	u3321
  1014  05CE  2DD0               	goto	u3320
  1015  05CF                     u3321:
  1016  05CF  2DC7               	goto	l356
  1017  05D0                     u3320:
  1018  05D0                     l3188:
  1019  05D0  1D0C               	btfss	12,2	;volatile
  1020  05D1  2DD3               	goto	u3331
  1021  05D2  2DD4               	goto	u3330
  1022  05D3                     u3331:
  1023  05D3  2DC7               	goto	l356
  1024  05D4                     u3330:
  1025  05D4                     l359:	
  1026                           ;Q3.c: 784:     hukki:
  1027                           
  1028                           
  1029                           ;Q3.c: 787:     RC2=RC0=RC1=1;
  1030  05D4  0020               	movlb	0	; select bank0
  1031  05D5  148E               	bsf	14,1	;volatile
  1032  05D6  188E               	btfsc	14,1	;volatile
  1033  05D7  2DD9               	goto	u3341
  1034  05D8  2DDC               	goto	u3340
  1035  05D9                     u3341:
  1036  05D9  0020               	movlb	0	; select bank0
  1037  05DA  140E               	bsf	14,0	;volatile
  1038  05DB  2DDE               	goto	u3354
  1039  05DC                     u3340:
  1040  05DC  0020               	movlb	0	; select bank0
  1041  05DD  100E               	bcf	14,0	;volatile
  1042  05DE                     u3354:
  1043  05DE  180E               	btfsc	14,0	;volatile
  1044  05DF  2DE1               	goto	u3351
  1045  05E0  2DE4               	goto	u3350
  1046  05E1                     u3351:
  1047  05E1  0020               	movlb	0	; select bank0
  1048  05E2  150E               	bsf	14,2	;volatile
  1049  05E3  2DE6               	goto	u3364
  1050  05E4                     u3350:
  1051  05E4  0020               	movlb	0	; select bank0
  1052  05E5  110E               	bcf	14,2	;volatile
  1053  05E6                     u3364:
  1054  05E6                     l3190:
  1055                           
  1056                           ;Q3.c: 790:     fclr(2);
  1057  05E6  3002               	movlw	2
  1058  05E7  00F0               	movwf	fclr@flg
  1059  05E8  3000               	movlw	0
  1060  05E9  00F1               	movwf	fclr@flg+1
  1061  05EA  3182  227F  3185   	fcall	_fclr
  1062  05ED                     l3192:
  1063  05ED                     l3194:
  1064  05ED                     l3196:
  1065  05ED                     l3198:
  1066  05ED                     l3200:
  1067  05ED                     l3202:
  1068  05ED                     l3204:
  1069  05ED                     l3206:
  1070                           
  1071                           ;Q3.c: 814:     _delay((unsigned long)((2000)*(16000000/4000UL)));
  1072  05ED  3029               	movlw	41
  1073  05EE  00FB               	movwf	??_main+1
  1074  05EF  3096               	movlw	150
  1075  05F0  00FA               	movwf	??_main
  1076  05F1  307F               	movlw	127
  1077  05F2                     u3807:
  1078  05F2  0B89               	decfsz	9,f
  1079  05F3  2DF2               	goto	u3807
  1080  05F4  0BFA               	decfsz	??_main,f
  1081  05F5  2DF2               	goto	u3807
  1082  05F6  0BFB               	decfsz	??_main+1,f
  1083  05F7  2DF2               	goto	u3807
  1084  05F8  0000               	nop
  1085  05F9                     l3208:
  1086                           
  1087                           ;Q3.c: 817:         if(RA0 == 1 && RA1 ==1){
  1088  05F9  0020               	movlb	0	; select bank0
  1089  05FA  1C0C               	btfss	12,0	;volatile
  1090  05FB  2DFD               	goto	u3371
  1091  05FC  2DFE               	goto	u3370
  1092  05FD                     u3371:
  1093  05FD  2DF9               	goto	l3208
  1094  05FE                     u3370:
  1095  05FE                     l3210:
  1096  05FE  1C8C               	btfss	12,1	;volatile
  1097  05FF  2E01               	goto	u3381
  1098  0600  2E02               	goto	u3380
  1099  0601                     u3381:
  1100  0601  2DF9               	goto	l3208
  1101  0602                     u3380:
  1102  0602                     l3212:
  1103                           
  1104                           ;Q3.c: 818:             waitSEG((0x02|0x04|0x08|0x10|0x20),(0x01|0x02|0x10|0x20|0x40),30
      +                          00);
  1105  0602  303E               	movlw	62
  1106  0603  00A8               	movwf	waitSEG@seg1
  1107  0604  3000               	movlw	0
  1108  0605  00A9               	movwf	waitSEG@seg1+1
  1109  0606  3073               	movlw	115
  1110  0607  00AA               	movwf	waitSEG@seg2
  1111  0608  3000               	movlw	0
  1112  0609  00AB               	movwf	waitSEG@seg2+1
  1113  060A  30B8               	movlw	184
  1114  060B  00AC               	movwf	waitSEG@wt
  1115  060C  300B               	movlw	11
  1116  060D  00AD               	movwf	waitSEG@wt+1
  1117  060E  3182  22C3  3185   	fcall	_waitSEG
  1118  0611                     l362:	
  1119                           ;Q3.c: 819:             while(1){
  1120                           
  1121                           
  1122                           ;Q3.c: 821:                 tact(2);
  1123  0611  3002               	movlw	2
  1124  0612  00F8               	movwf	tact@mode
  1125  0613  3000               	movlw	0
  1126  0614  00F9               	movwf	tact@mode+1
  1127  0615  3183  2370  3185   	fcall	_tact
  1128  0618                     l3214:
  1129                           
  1130                           ;Q3.c: 822:                 if(((flag_sw3==0)&&(flag_P==1))){
  1131  0618  087C               	movf	_flag_sw3,w
  1132  0619  047D               	iorwf	_flag_sw3+1,w
  1133  061A  1D03               	btfss	3,2
  1134  061B  2E1D               	goto	u3391
  1135  061C  2E1E               	goto	u3390
  1136  061D                     u3391:
  1137  061D  2E11               	goto	l362
  1138  061E                     u3390:
  1139  061E                     l3216:
  1140  061E  0020               	movlb	0	; select bank0
  1141  061F  0362               	decf	_flag_P,w
  1142  0620  0463               	iorwf	_flag_P+1,w
  1143  0621  1D03               	btfss	3,2
  1144  0622  2E24               	goto	u3401
  1145  0623  2E25               	goto	u3400
  1146  0624                     u3401:
  1147  0624  2E11               	goto	l362
  1148  0625                     u3400:
  1149  0625                     l3218:
  1150                           
  1151                           ;Q3.c: 823:                     fclr(2);
  1152  0625  3002               	movlw	2
  1153  0626  00F0               	movwf	fclr@flg
  1154  0627  3000               	movlw	0
  1155  0628  00F1               	movwf	fclr@flg+1
  1156  0629  3182  227F  3185   	fcall	_fclr
  1157  062C                     l3220:
  1158                           
  1159                           ;Q3.c: 825:                     if(RA0 == 1 && RA1 == 1){
  1160  062C  0020               	movlb	0	; select bank0
  1161  062D  1C0C               	btfss	12,0	;volatile
  1162  062E  2E30               	goto	u3411
  1163  062F  2E31               	goto	u3410
  1164  0630                     u3411:
  1165  0630  2E95               	goto	l364
  1166  0631                     u3410:
  1167  0631                     l3222:
  1168  0631  1C8C               	btfss	12,1	;volatile
  1169  0632  2E34               	goto	u3421
  1170  0633  2E35               	goto	u3420
  1171  0634                     u3421:
  1172  0634  2E95               	goto	l364
  1173  0635                     u3420:
  1174  0635                     l3224:
  1175                           
  1176                           ;Q3.c: 827:                         for(i = 0; i <= 9; i++){
  1177  0635  01C8               	clrf	main@i
  1178  0636  01C9               	clrf	main@i+1
  1179  0637                     l3230:
  1180                           
  1181                           ;Q3.c: 828:                             motor(36,num0[i],num0[i],1,5);
  1182  0637  3024               	movlw	36
  1183  0638  0020               	movlb	0	; select bank0
  1184  0639  00A8               	movwf	motor@kakudo
  1185  063A  3000               	movlw	0
  1186  063B  00A9               	movwf	motor@kakudo+1
  1187  063C  3548               	lslf	main@i,w
  1188  063D  3ED4               	addlw	(low (_num0| 0))& (0+255)
  1189  063E  0086               	movwf	6
  1190  063F  0187               	clrf	7
  1191  0640  3F40               	moviw [0]fsr1
  1192  0641  00AA               	movwf	motor@dig1data
  1193  0642  3F41               	moviw [1]fsr1
  1194  0643  00AB               	movwf	motor@dig1data+1
  1195  0644  3548               	lslf	main@i,w
  1196  0645  3ED4               	addlw	(low (_num0| 0))& (0+255)
  1197  0646  0086               	movwf	6
  1198  0647  0187               	clrf	7
  1199  0648  3F40               	moviw [0]fsr1
  1200  0649  00AC               	movwf	motor@dig2data
  1201  064A  3F41               	moviw [1]fsr1
  1202  064B  00AD               	movwf	motor@dig2data+1
  1203  064C  3001               	movlw	1
  1204  064D  00AE               	movwf	motor@smdata
  1205  064E  3000               	movlw	0
  1206  064F  00AF               	movwf	motor@smdata+1
  1207  0650  3005               	movlw	5
  1208  0651  00B0               	movwf	motor@tr
  1209  0652  3000               	movlw	0
  1210  0653  00B1               	movwf	motor@tr+1
  1211  0654  3182  229F  3185   	fcall	_motor
  1212  0657                     l3232:
  1213                           
  1214                           ;Q3.c: 829:                         }
  1215  0657  3001               	movlw	1
  1216  0658  0020               	movlb	0	; select bank0
  1217  0659  07C8               	addwf	main@i,f
  1218  065A  3000               	movlw	0
  1219  065B  3DC9               	addwfc	main@i+1,f
  1220  065C                     l3234:
  1221  065C  0849               	movf	main@i+1,w
  1222  065D  3A80               	xorlw	128
  1223  065E  00FA               	movwf	??_main
  1224  065F  3080               	movlw	128
  1225  0660  027A               	subwf	??_main,w
  1226  0661  1D03               	skipz
  1227  0662  2E65               	goto	u3435
  1228  0663  300A               	movlw	10
  1229  0664  0248               	subwf	main@i,w
  1230  0665                     u3435:
  1231  0665  1C03               	skipc
  1232  0666  2E68               	goto	u3431
  1233  0667  2E69               	goto	u3430
  1234  0668                     u3431:
  1235  0668  2E37               	goto	l3230
  1236  0669                     u3430:
  1237  0669                     l3236:
  1238                           
  1239                           ;Q3.c: 831:                             dynam(num0[i],num0[i],0,0);
  1240  0669  0020               	movlb	0	; select bank0
  1241  066A  3548               	lslf	main@i,w
  1242  066B  3ED4               	addlw	(low (_num0| 0))& (0+255)
  1243  066C  0086               	movwf	6
  1244  066D  0187               	clrf	7
  1245  066E  3F40               	moviw [0]fsr1
  1246  066F  00F0               	movwf	dynam@dig1data
  1247  0670  3F41               	moviw [1]fsr1
  1248  0671  00F1               	movwf	dynam@dig1data+1
  1249  0672  3548               	lslf	main@i,w
  1250  0673  3ED4               	addlw	(low (_num0| 0))& (0+255)
  1251  0674  0086               	movwf	6
  1252  0675  0187               	clrf	7
  1253  0676  3F40               	moviw [0]fsr1
  1254  0677  00F2               	movwf	dynam@dig2data
  1255  0678  3F41               	moviw [1]fsr1
  1256  0679  00F3               	movwf	dynam@dig2data+1
  1257  067A  3000               	movlw	0
  1258  067B  00F4               	movwf	dynam@smdata
  1259  067C  00F5               	movwf	dynam@smdata+1
  1260  067D  3000               	movlw	0
  1261  067E  00F6               	movwf	dynam@tr
  1262  067F  00F7               	movwf	dynam@tr+1
  1263  0680  3184  2454  3185   	fcall	_dynam
  1264  0683                     l3238:
  1265                           
  1266                           ;Q3.c: 833:                             jikan();
  1267  0683  3182  225F  3185   	fcall	_jikan
  1268  0686                     l3240:
  1269                           
  1270                           ;Q3.c: 834:                             if(count >= 500){
  1271  0686  0020               	movlb	0	; select bank0
  1272  0687  0855               	movf	_count+1,w
  1273  0688  3A80               	xorlw	128
  1274  0689  00FA               	movwf	??_main
  1275  068A  3081               	movlw	129
  1276  068B  027A               	subwf	??_main,w
  1277  068C  1D03               	skipz
  1278  068D  2E90               	goto	u3445
  1279  068E  30F4               	movlw	244
  1280  068F  0254               	subwf	_count,w
  1281  0690                     u3445:
  1282  0690  1C03               	skipc
  1283  0691  2E93               	goto	u3441
  1284  0692  2E94               	goto	u3440
  1285  0693                     u3441:
  1286  0693  2E69               	goto	l3236
  1287  0694                     u3440:
  1288  0694  2DD4               	goto	l359
  1289  0695                     l364:	
  1290                           ;Q3.c: 838:                     }
  1291                           
  1292                           
  1293                           ;Q3.c: 840:                     if(RA0 == 0 && RA1 == 1){
  1294  0695  180C               	btfsc	12,0	;volatile
  1295  0696  2E98               	goto	u3451
  1296  0697  2E99               	goto	u3450
  1297  0698                     u3451:
  1298  0698  2EFD               	goto	l371
  1299  0699                     u3450:
  1300  0699                     l3244:
  1301  0699  1C8C               	btfss	12,1	;volatile
  1302  069A  2E9C               	goto	u3461
  1303  069B  2E9D               	goto	u3460
  1304  069C                     u3461:
  1305  069C  2EFD               	goto	l371
  1306  069D                     u3460:
  1307  069D                     l3246:
  1308                           
  1309                           ;Q3.c: 841:                         for(i = 0; i <= 9; i++){
  1310  069D  01C8               	clrf	main@i
  1311  069E  01C9               	clrf	main@i+1
  1312  069F                     l3252:
  1313                           
  1314                           ;Q3.c: 842:                             motor(40,moji[i],num0[i],2,5);
  1315  069F  3028               	movlw	40
  1316  06A0  0020               	movlb	0	; select bank0
  1317  06A1  00A8               	movwf	motor@kakudo
  1318  06A2  3000               	movlw	0
  1319  06A3  00A9               	movwf	motor@kakudo+1
  1320  06A4  3548               	lslf	main@i,w
  1321  06A5  3EC0               	addlw	(low (_moji| 0))& (0+255)
  1322  06A6  0086               	movwf	6
  1323  06A7  0187               	clrf	7
  1324  06A8  3F40               	moviw [0]fsr1
  1325  06A9  00AA               	movwf	motor@dig1data
  1326  06AA  3F41               	moviw [1]fsr1
  1327  06AB  00AB               	movwf	motor@dig1data+1
  1328  06AC  3548               	lslf	main@i,w
  1329  06AD  3ED4               	addlw	(low (_num0| 0))& (0+255)
  1330  06AE  0086               	movwf	6
  1331  06AF  0187               	clrf	7
  1332  06B0  3F40               	moviw [0]fsr1
  1333  06B1  00AC               	movwf	motor@dig2data
  1334  06B2  3F41               	moviw [1]fsr1
  1335  06B3  00AD               	movwf	motor@dig2data+1
  1336  06B4  3002               	movlw	2
  1337  06B5  00AE               	movwf	motor@smdata
  1338  06B6  3000               	movlw	0
  1339  06B7  00AF               	movwf	motor@smdata+1
  1340  06B8  3005               	movlw	5
  1341  06B9  00B0               	movwf	motor@tr
  1342  06BA  3000               	movlw	0
  1343  06BB  00B1               	movwf	motor@tr+1
  1344  06BC  3182  229F  3185   	fcall	_motor
  1345  06BF                     l3254:
  1346                           
  1347                           ;Q3.c: 843:                         }
  1348  06BF  3001               	movlw	1
  1349  06C0  0020               	movlb	0	; select bank0
  1350  06C1  07C8               	addwf	main@i,f
  1351  06C2  3000               	movlw	0
  1352  06C3  3DC9               	addwfc	main@i+1,f
  1353  06C4                     l3256:
  1354  06C4  0849               	movf	main@i+1,w
  1355  06C5  3A80               	xorlw	128
  1356  06C6  00FA               	movwf	??_main
  1357  06C7  3080               	movlw	128
  1358  06C8  027A               	subwf	??_main,w
  1359  06C9  1D03               	skipz
  1360  06CA  2ECD               	goto	u3475
  1361  06CB  300A               	movlw	10
  1362  06CC  0248               	subwf	main@i,w
  1363  06CD                     u3475:
  1364  06CD  1C03               	skipc
  1365  06CE  2ED0               	goto	u3471
  1366  06CF  2ED1               	goto	u3470
  1367  06D0                     u3471:
  1368  06D0  2E9F               	goto	l3252
  1369  06D1                     u3470:
  1370  06D1                     l3258:
  1371                           
  1372                           ;Q3.c: 845:                             dynam(moji[i],num0[i],0,0);
  1373  06D1  0020               	movlb	0	; select bank0
  1374  06D2  3548               	lslf	main@i,w
  1375  06D3  3EC0               	addlw	(low (_moji| 0))& (0+255)
  1376  06D4  0086               	movwf	6
  1377  06D5  0187               	clrf	7
  1378  06D6  3F40               	moviw [0]fsr1
  1379  06D7  00F0               	movwf	dynam@dig1data
  1380  06D8  3F41               	moviw [1]fsr1
  1381  06D9  00F1               	movwf	dynam@dig1data+1
  1382  06DA  3548               	lslf	main@i,w
  1383  06DB  3ED4               	addlw	(low (_num0| 0))& (0+255)
  1384  06DC  0086               	movwf	6
  1385  06DD  0187               	clrf	7
  1386  06DE  3F40               	moviw [0]fsr1
  1387  06DF  00F2               	movwf	dynam@dig2data
  1388  06E0  3F41               	moviw [1]fsr1
  1389  06E1  00F3               	movwf	dynam@dig2data+1
  1390  06E2  3000               	movlw	0
  1391  06E3  00F4               	movwf	dynam@smdata
  1392  06E4  00F5               	movwf	dynam@smdata+1
  1393  06E5  3000               	movlw	0
  1394  06E6  00F6               	movwf	dynam@tr
  1395  06E7  00F7               	movwf	dynam@tr+1
  1396  06E8  3184  2454  3185   	fcall	_dynam
  1397  06EB                     l3260:
  1398                           
  1399                           ;Q3.c: 847:                             jikan();
  1400  06EB  3182  225F  3185   	fcall	_jikan
  1401  06EE                     l3262:
  1402                           
  1403                           ;Q3.c: 848:                             if(count >= 500){
  1404  06EE  0020               	movlb	0	; select bank0
  1405  06EF  0855               	movf	_count+1,w
  1406  06F0  3A80               	xorlw	128
  1407  06F1  00FA               	movwf	??_main
  1408  06F2  3081               	movlw	129
  1409  06F3  027A               	subwf	??_main,w
  1410  06F4  1D03               	skipz
  1411  06F5  2EF8               	goto	u3485
  1412  06F6  30F4               	movlw	244
  1413  06F7  0254               	subwf	_count,w
  1414  06F8                     u3485:
  1415  06F8  1C03               	skipc
  1416  06F9  2EFB               	goto	u3481
  1417  06FA  2EFC               	goto	u3480
  1418  06FB                     u3481:
  1419  06FB  2ED1               	goto	l3258
  1420  06FC                     u3480:
  1421  06FC  2DD4               	goto	l359
  1422  06FD                     l371:	
  1423                           ;Q3.c: 853:                     }
  1424                           
  1425                           
  1426                           ;Q3.c: 855:                     if(RA0 == 1 && RA1 == 0){
  1427  06FD  1C0C               	btfss	12,0	;volatile
  1428  06FE  2F00               	goto	u3491
  1429  06FF  2F01               	goto	u3490
  1430  0700                     u3491:
  1431  0700  2F65               	goto	l378
  1432  0701                     u3490:
  1433  0701                     l3266:
  1434  0701  188C               	btfsc	12,1	;volatile
  1435  0702  2F04               	goto	u3501
  1436  0703  2F05               	goto	u3500
  1437  0704                     u3501:
  1438  0704  2F65               	goto	l378
  1439  0705                     u3500:
  1440  0705                     l3268:
  1441                           
  1442                           ;Q3.c: 856:                         for(i = 0; i <= 9; i++){
  1443  0705  01C8               	clrf	main@i
  1444  0706  01C9               	clrf	main@i+1
  1445  0707                     l3274:
  1446                           
  1447                           ;Q3.c: 857:                             motor(40,num0[i],moji[i],1,1);
  1448  0707  3028               	movlw	40
  1449  0708  0020               	movlb	0	; select bank0
  1450  0709  00A8               	movwf	motor@kakudo
  1451  070A  3000               	movlw	0
  1452  070B  00A9               	movwf	motor@kakudo+1
  1453  070C  3548               	lslf	main@i,w
  1454  070D  3ED4               	addlw	(low (_num0| 0))& (0+255)
  1455  070E  0086               	movwf	6
  1456  070F  0187               	clrf	7
  1457  0710  3F40               	moviw [0]fsr1
  1458  0711  00AA               	movwf	motor@dig1data
  1459  0712  3F41               	moviw [1]fsr1
  1460  0713  00AB               	movwf	motor@dig1data+1
  1461  0714  3548               	lslf	main@i,w
  1462  0715  3EC0               	addlw	(low (_moji| 0))& (0+255)
  1463  0716  0086               	movwf	6
  1464  0717  0187               	clrf	7
  1465  0718  3F40               	moviw [0]fsr1
  1466  0719  00AC               	movwf	motor@dig2data
  1467  071A  3F41               	moviw [1]fsr1
  1468  071B  00AD               	movwf	motor@dig2data+1
  1469  071C  3001               	movlw	1
  1470  071D  00AE               	movwf	motor@smdata
  1471  071E  3000               	movlw	0
  1472  071F  00AF               	movwf	motor@smdata+1
  1473  0720  3001               	movlw	1
  1474  0721  00B0               	movwf	motor@tr
  1475  0722  3000               	movlw	0
  1476  0723  00B1               	movwf	motor@tr+1
  1477  0724  3182  229F  3185   	fcall	_motor
  1478  0727                     l3276:
  1479                           
  1480                           ;Q3.c: 858:                         }
  1481  0727  3001               	movlw	1
  1482  0728  0020               	movlb	0	; select bank0
  1483  0729  07C8               	addwf	main@i,f
  1484  072A  3000               	movlw	0
  1485  072B  3DC9               	addwfc	main@i+1,f
  1486  072C                     l3278:
  1487  072C  0849               	movf	main@i+1,w
  1488  072D  3A80               	xorlw	128
  1489  072E  00FA               	movwf	??_main
  1490  072F  3080               	movlw	128
  1491  0730  027A               	subwf	??_main,w
  1492  0731  1D03               	skipz
  1493  0732  2F35               	goto	u3515
  1494  0733  300A               	movlw	10
  1495  0734  0248               	subwf	main@i,w
  1496  0735                     u3515:
  1497  0735  1C03               	skipc
  1498  0736  2F38               	goto	u3511
  1499  0737  2F39               	goto	u3510
  1500  0738                     u3511:
  1501  0738  2F07               	goto	l3274
  1502  0739                     u3510:
  1503  0739                     l3280:
  1504                           
  1505                           ;Q3.c: 860:                             dynam(num0[i],moji[i],0,0);
  1506  0739  0020               	movlb	0	; select bank0
  1507  073A  3548               	lslf	main@i,w
  1508  073B  3ED4               	addlw	(low (_num0| 0))& (0+255)
  1509  073C  0086               	movwf	6
  1510  073D  0187               	clrf	7
  1511  073E  3F40               	moviw [0]fsr1
  1512  073F  00F0               	movwf	dynam@dig1data
  1513  0740  3F41               	moviw [1]fsr1
  1514  0741  00F1               	movwf	dynam@dig1data+1
  1515  0742  3548               	lslf	main@i,w
  1516  0743  3EC0               	addlw	(low (_moji| 0))& (0+255)
  1517  0744  0086               	movwf	6
  1518  0745  0187               	clrf	7
  1519  0746  3F40               	moviw [0]fsr1
  1520  0747  00F2               	movwf	dynam@dig2data
  1521  0748  3F41               	moviw [1]fsr1
  1522  0749  00F3               	movwf	dynam@dig2data+1
  1523  074A  3000               	movlw	0
  1524  074B  00F4               	movwf	dynam@smdata
  1525  074C  00F5               	movwf	dynam@smdata+1
  1526  074D  3000               	movlw	0
  1527  074E  00F6               	movwf	dynam@tr
  1528  074F  00F7               	movwf	dynam@tr+1
  1529  0750  3184  2454  3185   	fcall	_dynam
  1530  0753                     l3282:
  1531                           
  1532                           ;Q3.c: 862:                             jikan();
  1533  0753  3182  225F  3185   	fcall	_jikan
  1534  0756                     l3284:
  1535                           
  1536                           ;Q3.c: 863:                             if(count >= 500){
  1537  0756  0020               	movlb	0	; select bank0
  1538  0757  0855               	movf	_count+1,w
  1539  0758  3A80               	xorlw	128
  1540  0759  00FA               	movwf	??_main
  1541  075A  3081               	movlw	129
  1542  075B  027A               	subwf	??_main,w
  1543  075C  1D03               	skipz
  1544  075D  2F60               	goto	u3525
  1545  075E  30F4               	movlw	244
  1546  075F  0254               	subwf	_count,w
  1547  0760                     u3525:
  1548  0760  1C03               	skipc
  1549  0761  2F63               	goto	u3521
  1550  0762  2F64               	goto	u3520
  1551  0763                     u3521:
  1552  0763  2F39               	goto	l3280
  1553  0764                     u3520:
  1554  0764  2DD4               	goto	l359
  1555  0765                     l378:	
  1556                           ;Q3.c: 868:                     }
  1557                           
  1558                           
  1559                           ;Q3.c: 870:                     if(RA0 == 0 && RA1 == 0){
  1560  0765  180C               	btfsc	12,0	;volatile
  1561  0766  2F68               	goto	u3531
  1562  0767  2F69               	goto	u3530
  1563  0768                     u3531:
  1564  0768  2E11               	goto	l362
  1565  0769                     u3530:
  1566  0769                     l3288:
  1567  0769  188C               	btfsc	12,1	;volatile
  1568  076A  2F6C               	goto	u3541
  1569  076B  2F6D               	goto	u3540
  1570  076C                     u3541:
  1571  076C  2E11               	goto	l362
  1572  076D                     u3540:
  1573  076D                     l3290:
  1574                           
  1575                           ;Q3.c: 871:                         for(i = 0; i <= 9; i++){
  1576  076D  01C8               	clrf	main@i
  1577  076E  01C9               	clrf	main@i+1
  1578  076F                     l3296:
  1579                           
  1580                           ;Q3.c: 872:                             motor(40,moji[i],moji[i],2,1);
  1581  076F  3028               	movlw	40
  1582  0770  0020               	movlb	0	; select bank0
  1583  0771  00A8               	movwf	motor@kakudo
  1584  0772  3000               	movlw	0
  1585  0773  00A9               	movwf	motor@kakudo+1
  1586  0774  3548               	lslf	main@i,w
  1587  0775  3EC0               	addlw	(low (_moji| 0))& (0+255)
  1588  0776  0086               	movwf	6
  1589  0777  0187               	clrf	7
  1590  0778  3F40               	moviw [0]fsr1
  1591  0779  00AA               	movwf	motor@dig1data
  1592  077A  3F41               	moviw [1]fsr1
  1593  077B  00AB               	movwf	motor@dig1data+1
  1594  077C  3548               	lslf	main@i,w
  1595  077D  3EC0               	addlw	(low (_moji| 0))& (0+255)
  1596  077E  0086               	movwf	6
  1597  077F  0187               	clrf	7
  1598  0780  3F40               	moviw [0]fsr1
  1599  0781  00AC               	movwf	motor@dig2data
  1600  0782  3F41               	moviw [1]fsr1
  1601  0783  00AD               	movwf	motor@dig2data+1
  1602  0784  3002               	movlw	2
  1603  0785  00AE               	movwf	motor@smdata
  1604  0786  3000               	movlw	0
  1605  0787  00AF               	movwf	motor@smdata+1
  1606  0788  3001               	movlw	1
  1607  0789  00B0               	movwf	motor@tr
  1608  078A  3000               	movlw	0
  1609  078B  00B1               	movwf	motor@tr+1
  1610  078C  3182  229F  3185   	fcall	_motor
  1611  078F                     l3298:
  1612                           
  1613                           ;Q3.c: 873:                         }
  1614  078F  3001               	movlw	1
  1615  0790  0020               	movlb	0	; select bank0
  1616  0791  07C8               	addwf	main@i,f
  1617  0792  3000               	movlw	0
  1618  0793  3DC9               	addwfc	main@i+1,f
  1619  0794                     l3300:
  1620  0794  0849               	movf	main@i+1,w
  1621  0795  3A80               	xorlw	128
  1622  0796  00FA               	movwf	??_main
  1623  0797  3080               	movlw	128
  1624  0798  027A               	subwf	??_main,w
  1625  0799  1D03               	skipz
  1626  079A  2F9D               	goto	u3555
  1627  079B  300A               	movlw	10
  1628  079C  0248               	subwf	main@i,w
  1629  079D                     u3555:
  1630  079D  1C03               	skipc
  1631  079E  2FA0               	goto	u3551
  1632  079F  2FA1               	goto	u3550
  1633  07A0                     u3551:
  1634  07A0  2F6F               	goto	l3296
  1635  07A1                     u3550:
  1636  07A1                     l3302:
  1637                           
  1638                           ;Q3.c: 875:                             dynam(moji[i],moji[i],0,0);
  1639  07A1  0020               	movlb	0	; select bank0
  1640  07A2  3548               	lslf	main@i,w
  1641  07A3  3EC0               	addlw	(low (_moji| 0))& (0+255)
  1642  07A4  0086               	movwf	6
  1643  07A5  0187               	clrf	7
  1644  07A6  3F40               	moviw [0]fsr1
  1645  07A7  00F0               	movwf	dynam@dig1data
  1646  07A8  3F41               	moviw [1]fsr1
  1647  07A9  00F1               	movwf	dynam@dig1data+1
  1648  07AA  3548               	lslf	main@i,w
  1649  07AB  3EC0               	addlw	(low (_moji| 0))& (0+255)
  1650  07AC  0086               	movwf	6
  1651  07AD  0187               	clrf	7
  1652  07AE  3F40               	moviw [0]fsr1
  1653  07AF  00F2               	movwf	dynam@dig2data
  1654  07B0  3F41               	moviw [1]fsr1
  1655  07B1  00F3               	movwf	dynam@dig2data+1
  1656  07B2  3000               	movlw	0
  1657  07B3  00F4               	movwf	dynam@smdata
  1658  07B4  00F5               	movwf	dynam@smdata+1
  1659  07B5  3000               	movlw	0
  1660  07B6  00F6               	movwf	dynam@tr
  1661  07B7  00F7               	movwf	dynam@tr+1
  1662  07B8  3184  2454  3185   	fcall	_dynam
  1663  07BB                     l3304:
  1664                           
  1665                           ;Q3.c: 877:                             jikan();
  1666  07BB  3182  225F  3185   	fcall	_jikan
  1667  07BE                     l3306:
  1668                           
  1669                           ;Q3.c: 878:                             if(count >= 500){
  1670  07BE  0020               	movlb	0	; select bank0
  1671  07BF  0855               	movf	_count+1,w
  1672  07C0  3A80               	xorlw	128
  1673  07C1  00FA               	movwf	??_main
  1674  07C2  3081               	movlw	129
  1675  07C3  027A               	subwf	??_main,w
  1676  07C4  1D03               	skipz
  1677  07C5  2FC8               	goto	u3565
  1678  07C6  30F4               	movlw	244
  1679  07C7  0254               	subwf	_count,w
  1680  07C8                     u3565:
  1681  07C8  1C03               	skipc
  1682  07C9  2FCB               	goto	u3561
  1683  07CA  2FCC               	goto	u3560
  1684  07CB                     u3561:
  1685  07CB  2FA1               	goto	l3302
  1686  07CC                     u3560:
  1687  07CC  2DD4               	goto	l359
  1688  07CD  3180  2802         	ljmp	start
  1689  07CF                     __end_of_main:
  1690                           
  1691                           	psect	text1
  1692  0256                     __ptext1:	
  1693 ;; *************** function _zenoff *****************
  1694 ;; Defined at:
  1695 ;;		line 195 in file "Q3.c"
  1696 ;; Parameters:    Size  Location     Type
  1697 ;;		None
  1698 ;; Auto vars:     Size  Location     Type
  1699 ;;		None
  1700 ;; Return value:  Size  Location     Type
  1701 ;;                  1    wreg      void 
  1702 ;; Registers used:
  1703 ;;		status,2
  1704 ;; Tracked objects:
  1705 ;;		On entry : 0/0
  1706 ;;		On exit  : 0/0
  1707 ;;		Unchanged: 0/0
  1708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1713 ;;Total ram usage:        0 bytes
  1714 ;; Hardware stack levels used:    1
  1715 ;; This function calls:
  1716 ;;		Nothing
  1717 ;; This function is called by:
  1718 ;;		_main
  1719 ;; This function uses a non-reentrant model
  1720 ;;
  1721                           
  1722                           
  1723                           ;psect for function _zenoff
  1724  0256                     _zenoff:
  1725  0256                     l2422:	
  1726                           ;incstack = 0
  1727                           ; Regs used in _zenoff: [status,2]
  1728                           
  1729                           
  1730                           ;Q3.c: 197:     RC2=1;
  1731  0256  0020               	movlb	0	; select bank0
  1732  0257  150E               	bsf	14,2	;volatile
  1733                           
  1734                           ;Q3.c: 198:     RC1=1;
  1735  0258  148E               	bsf	14,1	;volatile
  1736                           
  1737                           ;Q3.c: 199:     RC0=1;
  1738  0259  140E               	bsf	14,0	;volatile
  1739  025A                     l2424:
  1740                           
  1741                           ;Q3.c: 200:     PORTB=0x00;
  1742  025A  018D               	clrf	13	;volatile
  1743  025B                     l2426:
  1744                           
  1745                           ;Q3.c: 201:     RC7=0;RC7=1;RC7=0;
  1746  025B  138E               	bcf	14,7	;volatile
  1747  025C                     l2428:
  1748  025C  178E               	bsf	14,7	;volatile
  1749  025D                     l2430:
  1750  025D  138E               	bcf	14,7	;volatile
  1751  025E                     l108:
  1752  025E  0008               	return
  1753  025F                     __end_of_zenoff:
  1754                           
  1755                           	psect	text2
  1756  02C3                     __ptext2:	
  1757 ;; *************** function _waitSEG *****************
  1758 ;; Defined at:
  1759 ;;		line 451 in file "Q3.c"
  1760 ;; Parameters:    Size  Location     Type
  1761 ;;  seg1            2    8[BANK0 ] unsigned short 
  1762 ;;  seg2            2   10[BANK0 ] unsigned short 
  1763 ;;  wt              2   12[BANK0 ] unsigned short 
  1764 ;; Auto vars:     Size  Location     Type
  1765 ;;  i               2    8[COMMON] unsigned int 
  1766 ;; Return value:  Size  Location     Type
  1767 ;;                  1    wreg      void 
  1768 ;; Registers used:
  1769 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1770 ;; Tracked objects:
  1771 ;;		On entry : 0/0
  1772 ;;		On exit  : 0/0
  1773 ;;		Unchanged: 0/0
  1774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1775 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1776 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1778 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1779 ;;Total ram usage:        8 bytes
  1780 ;; Hardware stack levels used:    1
  1781 ;; Hardware stack levels required when called:    1
  1782 ;; This function calls:
  1783 ;;		___lwdiv
  1784 ;;		_dynam
  1785 ;; This function is called by:
  1786 ;;		_main
  1787 ;; This function uses a non-reentrant model
  1788 ;;
  1789                           
  1790                           
  1791                           ;psect for function _waitSEG
  1792  02C3                     _waitSEG:
  1793  02C3                     l2528:	
  1794                           ;incstack = 0
  1795                           ; Regs used in _waitSEG: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1796                           
  1797                           
  1798                           ;Q3.c: 451: void waitSEG(unsigned short seg1,unsigned short seg2,unsigned short wt);Q3.c
      +                          : 452: {;Q3.c: 454:     wt = wt / 10;
  1799  02C3  300A               	movlw	10
  1800  02C4  00F0               	movwf	___lwdiv@divisor
  1801  02C5  3000               	movlw	0
  1802  02C6  00F1               	movwf	___lwdiv@divisor+1
  1803  02C7  0020               	movlb	0	; select bank0
  1804  02C8  082D               	movf	waitSEG@wt+1,w
  1805  02C9  00F3               	movwf	___lwdiv@dividend+1
  1806  02CA  082C               	movf	waitSEG@wt,w
  1807  02CB  00F2               	movwf	___lwdiv@dividend
  1808  02CC  3182  22F7  3182   	fcall	___lwdiv
  1809  02CF  0871               	movf	?___lwdiv+1,w
  1810  02D0  0020               	movlb	0	; select bank0
  1811  02D1  00AD               	movwf	waitSEG@wt+1
  1812  02D2  0870               	movf	?___lwdiv,w
  1813  02D3  00AC               	movwf	waitSEG@wt
  1814  02D4                     l2530:
  1815                           
  1816                           ;Q3.c: 455:     unsigned int i;;Q3.c: 457:     for(i=wt;i>0;--i){
  1817  02D4  082D               	movf	waitSEG@wt+1,w
  1818  02D5  00F9               	movwf	waitSEG@i+1
  1819  02D6  082C               	movf	waitSEG@wt,w
  1820  02D7  00F8               	movwf	waitSEG@i
  1821  02D8                     l2532:
  1822  02D8  0878               	movf	waitSEG@i,w
  1823  02D9  0479               	iorwf	waitSEG@i+1,w
  1824  02DA  1D03               	btfss	3,2
  1825  02DB  2ADD               	goto	u2221
  1826  02DC  2ADE               	goto	u2220
  1827  02DD                     u2221:
  1828  02DD  2ADF               	goto	l2536
  1829  02DE                     u2220:
  1830  02DE  2AF6               	goto	l258
  1831  02DF                     l2536:
  1832                           
  1833                           ;Q3.c: 458:         dynam(seg1,seg2,0,0);
  1834  02DF  0020               	movlb	0	; select bank0
  1835  02E0  0829               	movf	waitSEG@seg1+1,w
  1836  02E1  00F1               	movwf	dynam@dig1data+1
  1837  02E2  0828               	movf	waitSEG@seg1,w
  1838  02E3  00F0               	movwf	dynam@dig1data
  1839  02E4  082B               	movf	waitSEG@seg2+1,w
  1840  02E5  00F3               	movwf	dynam@dig2data+1
  1841  02E6  082A               	movf	waitSEG@seg2,w
  1842  02E7  00F2               	movwf	dynam@dig2data
  1843  02E8  3000               	movlw	0
  1844  02E9  00F4               	movwf	dynam@smdata
  1845  02EA  00F5               	movwf	dynam@smdata+1
  1846  02EB  3000               	movlw	0
  1847  02EC  00F6               	movwf	dynam@tr
  1848  02ED  00F7               	movwf	dynam@tr+1
  1849  02EE  3184  2454  3182   	fcall	_dynam
  1850  02F1                     l2538:
  1851                           
  1852                           ;Q3.c: 459:     }
  1853  02F1  3001               	movlw	1
  1854  02F2  02F8               	subwf	waitSEG@i,f
  1855  02F3  3000               	movlw	0
  1856  02F4  3BF9               	subwfb	waitSEG@i+1,f
  1857  02F5  2AD8               	goto	l2532
  1858  02F6                     l258:
  1859  02F6  0008               	return
  1860  02F7                     __end_of_waitSEG:
  1861                           
  1862                           	psect	text3
  1863  02F7                     __ptext3:	
  1864 ;; *************** function ___lwdiv *****************
  1865 ;; Defined at:
  1866 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\lwdiv.c"
  1867 ;; Parameters:    Size  Location     Type
  1868 ;;  divisor         2    0[COMMON] unsigned int 
  1869 ;;  dividend        2    2[COMMON] unsigned int 
  1870 ;; Auto vars:     Size  Location     Type
  1871 ;;  quotient        2    5[COMMON] unsigned int 
  1872 ;;  counter         1    7[COMMON] unsigned char 
  1873 ;; Return value:  Size  Location     Type
  1874 ;;                  2    0[COMMON] unsigned int 
  1875 ;; Registers used:
  1876 ;;		wreg, status,2, status,0
  1877 ;; Tracked objects:
  1878 ;;		On entry : 0/0
  1879 ;;		On exit  : 0/0
  1880 ;;		Unchanged: 0/0
  1881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1882 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1883 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1884 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1885 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1886 ;;Total ram usage:        8 bytes
  1887 ;; Hardware stack levels used:    1
  1888 ;; This function calls:
  1889 ;;		Nothing
  1890 ;; This function is called by:
  1891 ;;		_waitSEG
  1892 ;;		_waitSEGStop
  1893 ;; This function uses a non-reentrant model
  1894 ;;
  1895                           
  1896                           
  1897                           ;psect for function ___lwdiv
  1898  02F7                     ___lwdiv:
  1899  02F7                     l2366:	
  1900                           ;incstack = 0
  1901                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1902                           
  1903  02F7  01F5               	clrf	___lwdiv@quotient
  1904  02F8  01F6               	clrf	___lwdiv@quotient+1
  1905  02F9                     l2368:
  1906  02F9  0870               	movf	___lwdiv@divisor,w
  1907  02FA  0471               	iorwf	___lwdiv@divisor+1,w
  1908  02FB  1903               	btfsc	3,2
  1909  02FC  2AFE               	goto	u2031
  1910  02FD  2AFF               	goto	u2030
  1911  02FE                     u2031:
  1912  02FE  2B2E               	goto	l2388
  1913  02FF                     u2030:
  1914  02FF                     l2370:
  1915  02FF  01F7               	clrf	___lwdiv@counter
  1916  0300  0AF7               	incf	___lwdiv@counter,f
  1917  0301  2B0B               	goto	l2376
  1918  0302                     l2372:
  1919  0302  3001               	movlw	1
  1920  0303                     u2045:
  1921  0303  35F0               	lslf	___lwdiv@divisor,f
  1922  0304  0DF1               	rlf	___lwdiv@divisor+1,f
  1923  0305  0B89               	decfsz	9,f
  1924  0306  2B03               	goto	u2045
  1925  0307                     l2374:
  1926  0307  3001               	movlw	1
  1927  0308  00F4               	movwf	??___lwdiv
  1928  0309  0874               	movf	??___lwdiv,w
  1929  030A  07F7               	addwf	___lwdiv@counter,f
  1930  030B                     l2376:
  1931  030B  1FF1               	btfss	___lwdiv@divisor+1,7
  1932  030C  2B0E               	goto	u2051
  1933  030D  2B0F               	goto	u2050
  1934  030E                     u2051:
  1935  030E  2B02               	goto	l2372
  1936  030F                     u2050:
  1937  030F                     l2378:
  1938  030F  3001               	movlw	1
  1939  0310                     u2065:
  1940  0310  35F5               	lslf	___lwdiv@quotient,f
  1941  0311  0DF6               	rlf	___lwdiv@quotient+1,f
  1942  0312  0B89               	decfsz	9,f
  1943  0313  2B10               	goto	u2065
  1944  0314  0871               	movf	___lwdiv@divisor+1,w
  1945  0315  0273               	subwf	___lwdiv@dividend+1,w
  1946  0316  1D03               	skipz
  1947  0317  2B1A               	goto	u2075
  1948  0318  0870               	movf	___lwdiv@divisor,w
  1949  0319  0272               	subwf	___lwdiv@dividend,w
  1950  031A                     u2075:
  1951  031A  1C03               	skipc
  1952  031B  2B1D               	goto	u2071
  1953  031C  2B1E               	goto	u2070
  1954  031D                     u2071:
  1955  031D  2B23               	goto	l2384
  1956  031E                     u2070:
  1957  031E                     l2380:
  1958  031E  0870               	movf	___lwdiv@divisor,w
  1959  031F  02F2               	subwf	___lwdiv@dividend,f
  1960  0320  0871               	movf	___lwdiv@divisor+1,w
  1961  0321  3BF3               	subwfb	___lwdiv@dividend+1,f
  1962  0322                     l2382:
  1963  0322  1475               	bsf	___lwdiv@quotient,0
  1964  0323                     l2384:
  1965  0323  3001               	movlw	1
  1966  0324                     u2085:
  1967  0324  36F1               	lsrf	___lwdiv@divisor+1,f
  1968  0325  0CF0               	rrf	___lwdiv@divisor,f
  1969  0326  0B89               	decfsz	9,f
  1970  0327  2B24               	goto	u2085
  1971  0328                     l2386:
  1972  0328  3001               	movlw	1
  1973  0329  02F7               	subwf	___lwdiv@counter,f
  1974  032A  1D03               	btfss	3,2
  1975  032B  2B2D               	goto	u2091
  1976  032C  2B2E               	goto	u2090
  1977  032D                     u2091:
  1978  032D  2B0F               	goto	l2378
  1979  032E                     u2090:
  1980  032E                     l2388:
  1981  032E  0876               	movf	___lwdiv@quotient+1,w
  1982  032F  00F1               	movwf	?___lwdiv+1
  1983  0330  0875               	movf	___lwdiv@quotient,w
  1984  0331  00F0               	movwf	?___lwdiv
  1985  0332                     l826:
  1986  0332  0008               	return
  1987  0333                     __end_of___lwdiv:
  1988                           
  1989                           	psect	text4
  1990  0370                     __ptext4:	
  1991 ;; *************** function _tact *****************
  1992 ;; Defined at:
  1993 ;;		line 346 in file "Q3.c"
  1994 ;; Parameters:    Size  Location     Type
  1995 ;;  mode            2    8[COMMON] unsigned short 
  1996 ;; Auto vars:     Size  Location     Type
  1997 ;;		None
  1998 ;; Return value:  Size  Location     Type
  1999 ;;                  1    wreg      void 
  2000 ;; Registers used:
  2001 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2002 ;; Tracked objects:
  2003 ;;		On entry : 0/0
  2004 ;;		On exit  : 0/0
  2005 ;;		Unchanged: 0/0
  2006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2007 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2010 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2011 ;;Total ram usage:        2 bytes
  2012 ;; Hardware stack levels used:    1
  2013 ;; Hardware stack levels required when called:    1
  2014 ;; This function calls:
  2015 ;;		_tactsw
  2016 ;; This function is called by:
  2017 ;;		_main
  2018 ;;		_kaisu
  2019 ;;		_waitSEGStop
  2020 ;;		_motorStop
  2021 ;;		_buzzStop
  2022 ;; This function uses a non-reentrant model
  2023 ;;
  2024                           
  2025                           
  2026                           ;psect for function _tact
  2027  0370                     _tact:
  2028  0370                     l2432:	
  2029                           ;incstack = 0
  2030                           ; Regs used in _tact: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2031                           
  2032                           
  2033                           ;Q3.c: 346: void tact(unsigned short mode);Q3.c: 347: {;Q3.c: 348:     switch(mode){
  2034  0370  2BAB               	goto	l2460
  2035  0371                     l2434:
  2036                           
  2037                           ;Q3.c: 350:                 tactsw();
  2038  0371  3183  2333  3183   	fcall	_tactsw
  2039  0374                     l2436:
  2040                           
  2041                           ;Q3.c: 351:                 if(flag_sw3==0)flag_R=1;
  2042  0374  087C               	movf	_flag_sw3,w
  2043  0375  047D               	iorwf	_flag_sw3+1,w
  2044  0376  1D03               	btfss	3,2
  2045  0377  2B79               	goto	u2121
  2046  0378  2B7A               	goto	u2120
  2047  0379                     u2121:
  2048  0379  2BBB               	goto	l208
  2049  037A                     u2120:
  2050  037A                     l2438:
  2051  037A  3001               	movlw	1
  2052  037B  0020               	movlb	0	; select bank0
  2053  037C  00E4               	movwf	_flag_R
  2054  037D  3000               	movlw	0
  2055  037E  00E5               	movwf	_flag_R+1
  2056  037F  2BBB               	goto	l208
  2057  0380                     l2440:
  2058                           
  2059                           ;Q3.c: 354:                 tactsw();
  2060  0380  3183  2333  3183   	fcall	_tactsw
  2061  0383                     l2442:
  2062                           
  2063                           ;Q3.c: 355:                 if(flag_sw3==1)flag_P=1;
  2064  0383  037C               	decf	_flag_sw3,w
  2065  0384  047D               	iorwf	_flag_sw3+1,w
  2066  0385  1D03               	btfss	3,2
  2067  0386  2B88               	goto	u2131
  2068  0387  2B89               	goto	u2130
  2069  0388                     u2131:
  2070  0388  2BBB               	goto	l208
  2071  0389                     u2130:
  2072  0389                     l2444:
  2073  0389  3001               	movlw	1
  2074  038A  0020               	movlb	0	; select bank0
  2075  038B  00E2               	movwf	_flag_P
  2076  038C  3000               	movlw	0
  2077  038D  00E3               	movwf	_flag_P+1
  2078  038E  2BBB               	goto	l208
  2079  038F                     l2446:
  2080                           
  2081                           ;Q3.c: 358:                 tactsw();
  2082  038F  3183  2333  3183   	fcall	_tactsw
  2083  0392                     l2448:
  2084                           
  2085                           ;Q3.c: 359:                 if(flag_sw3==0)flag_R=1;
  2086  0392  087C               	movf	_flag_sw3,w
  2087  0393  047D               	iorwf	_flag_sw3+1,w
  2088  0394  1D03               	btfss	3,2
  2089  0395  2B97               	goto	u2141
  2090  0396  2B98               	goto	u2140
  2091  0397                     u2141:
  2092  0397  2B9D               	goto	l2452
  2093  0398                     u2140:
  2094  0398                     l2450:
  2095  0398  3001               	movlw	1
  2096  0399  0020               	movlb	0	; select bank0
  2097  039A  00E4               	movwf	_flag_R
  2098  039B  3000               	movlw	0
  2099  039C  00E5               	movwf	_flag_R+1
  2100  039D                     l2452:
  2101                           
  2102                           ;Q3.c: 360:                 if((flag_sw3==1)&&(flag_R==1))flag_P=1;
  2103  039D  037C               	decf	_flag_sw3,w
  2104  039E  047D               	iorwf	_flag_sw3+1,w
  2105  039F  1D03               	btfss	3,2
  2106  03A0  2BA2               	goto	u2151
  2107  03A1  2BA3               	goto	u2150
  2108  03A2                     u2151:
  2109  03A2  2BBB               	goto	l208
  2110  03A3                     u2150:
  2111  03A3                     l2454:
  2112  03A3  0020               	movlb	0	; select bank0
  2113  03A4  0364               	decf	_flag_R,w
  2114  03A5  0465               	iorwf	_flag_R+1,w
  2115  03A6  1D03               	btfss	3,2
  2116  03A7  2BA9               	goto	u2161
  2117  03A8  2BAA               	goto	u2160
  2118  03A9                     u2161:
  2119  03A9  2BBB               	goto	l208
  2120  03AA                     u2160:
  2121  03AA  2B89               	goto	l2444
  2122  03AB                     l2460:
  2123                           
  2124                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2125                           ; Switch size 1, requested type "simple"
  2126                           ; Number of cases is 1, Range of values is 0 to 0
  2127                           ; switch strategies available:
  2128                           ; Name         Instructions Cycles
  2129                           ; simple_byte            4     3 (average)
  2130                           ; direct_byte            8     6 (fixed)
  2131                           ; jumptable            260     6 (fixed)
  2132                           ;	Chosen strategy is simple_byte
  2133  03AB  0879               	movf	tact@mode+1,w
  2134  03AC  3A00               	xorlw	0	; case 0
  2135  03AD  1903               	skipnz
  2136  03AE  2BB0               	goto	l3466
  2137  03AF  2BBB               	goto	l208
  2138  03B0                     l3466:
  2139                           
  2140                           ; Switch size 1, requested type "simple"
  2141                           ; Number of cases is 3, Range of values is 0 to 2
  2142                           ; switch strategies available:
  2143                           ; Name         Instructions Cycles
  2144                           ; simple_byte           10     6 (average)
  2145                           ; direct_byte           12     6 (fixed)
  2146                           ; jumptable            260     6 (fixed)
  2147                           ;	Chosen strategy is simple_byte
  2148  03B0  0878               	movf	tact@mode,w
  2149  03B1  3A00               	xorlw	0	; case 0
  2150  03B2  1903               	skipnz
  2151  03B3  2B71               	goto	l2434
  2152  03B4  3A01               	xorlw	1	; case 1
  2153  03B5  1903               	skipnz
  2154  03B6  2B80               	goto	l2440
  2155  03B7  3A03               	xorlw	3	; case 2
  2156  03B8  1903               	skipnz
  2157  03B9  2B8F               	goto	l2446
  2158  03BA  2BBB               	goto	l208
  2159  03BB                     l208:
  2160  03BB  0008               	return
  2161  03BC                     __end_of_tact:
  2162                           
  2163                           	psect	text5
  2164  0333                     __ptext5:	
  2165 ;; *************** function _tactsw *****************
  2166 ;; Defined at:
  2167 ;;		line 331 in file "Q3.c"
  2168 ;; Parameters:    Size  Location     Type
  2169 ;;		None
  2170 ;; Auto vars:     Size  Location     Type
  2171 ;;  a               2    6[COMMON] unsigned short 
  2172 ;;  c               2    4[COMMON] unsigned short 
  2173 ;;  b               2    2[COMMON] unsigned short 
  2174 ;; Return value:  Size  Location     Type
  2175 ;;                  1    wreg      void 
  2176 ;; Registers used:
  2177 ;;		wreg, status,2, status,0
  2178 ;; Tracked objects:
  2179 ;;		On entry : 0/0
  2180 ;;		On exit  : 0/0
  2181 ;;		Unchanged: 0/0
  2182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2184 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2185 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2186 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2187 ;;Total ram usage:        8 bytes
  2188 ;; Hardware stack levels used:    1
  2189 ;; This function calls:
  2190 ;;		Nothing
  2191 ;; This function is called by:
  2192 ;;		_tact
  2193 ;; This function uses a non-reentrant model
  2194 ;;
  2195                           
  2196                           
  2197                           ;psect for function _tactsw
  2198  0333                     _tactsw:
  2199  0333                     l2348:	
  2200                           ;incstack = 0
  2201                           ; Regs used in _tactsw: [wreg+status,2+status,0]
  2202                           
  2203                           
  2204                           ;Q3.c: 333:     unsigned short a,b,c;;Q3.c: 334:     b=c=0;
  2205  0333  01F4               	clrf	tactsw@c
  2206  0334  01F5               	clrf	tactsw@c+1
  2207  0335  01F2               	clrf	tactsw@b
  2208  0336  01F3               	clrf	tactsw@b+1
  2209  0337                     l2350:
  2210                           
  2211                           ;Q3.c: 336:             a=RA2;
  2212  0337  1003               	clrc
  2213  0338  0020               	movlb	0	; select bank0
  2214  0339  190C               	btfsc	12,2	;volatile
  2215  033A  1403               	setc
  2216  033B  3000               	movlw	0
  2217  033C  3D09               	addwfc	9,w
  2218  033D  00F0               	movwf	??_tactsw
  2219  033E  01F1               	clrf	??_tactsw+1
  2220  033F  0870               	movf	??_tactsw,w
  2221  0340  00F6               	movwf	tactsw@a
  2222  0341  0871               	movf	??_tactsw+1,w
  2223  0342  00F7               	movwf	tactsw@a+1
  2224  0343                     l2352:
  2225                           
  2226                           ;Q3.c: 337:             if(b==a)++c;
  2227  0343  0877               	movf	tactsw@a+1,w
  2228  0344  0673               	xorwf	tactsw@b+1,w
  2229  0345  1D03               	skipz
  2230  0346  2B49               	goto	u2015
  2231  0347  0876               	movf	tactsw@a,w
  2232  0348  0672               	xorwf	tactsw@b,w
  2233  0349                     u2015:
  2234  0349  1D03               	skipz
  2235  034A  2B4C               	goto	u2011
  2236  034B  2B4D               	goto	u2010
  2237  034C                     u2011:
  2238  034C  2B52               	goto	l2356
  2239  034D                     u2010:
  2240  034D                     l2354:
  2241  034D  3001               	movlw	1
  2242  034E  07F4               	addwf	tactsw@c,f
  2243  034F  3000               	movlw	0
  2244  0350  3DF5               	addwfc	tactsw@c+1,f
  2245  0351  2B54               	goto	l2358
  2246  0352                     l2356:
  2247  0352  01F4               	clrf	tactsw@c
  2248  0353  01F5               	clrf	tactsw@c+1
  2249  0354                     l2358:
  2250                           
  2251                           ;Q3.c: 339:             if(c>10){flag_sw3=(~a)&0x01;return;}
  2252  0354  3000               	movlw	0
  2253  0355  0275               	subwf	tactsw@c+1,w
  2254  0356  300B               	movlw	11
  2255  0357  1903               	skipnz
  2256  0358  0274               	subwf	tactsw@c,w
  2257  0359  1C03               	skipc
  2258  035A  2B5C               	goto	u2021
  2259  035B  2B5D               	goto	u2020
  2260  035C                     u2021:
  2261  035C  2B6A               	goto	l2364
  2262  035D                     u2020:
  2263  035D                     l2360:
  2264  035D  0877               	movf	tactsw@a+1,w
  2265  035E  00F1               	movwf	??_tactsw+1
  2266  035F  0876               	movf	tactsw@a,w
  2267  0360  00F0               	movwf	??_tactsw
  2268  0361  09F0               	comf	??_tactsw,f
  2269  0362  09F1               	comf	??_tactsw+1,f
  2270  0363  3001               	movlw	1
  2271  0364  0570               	andwf	??_tactsw,w
  2272  0365  00FC               	movwf	_flag_sw3
  2273  0366  3000               	movlw	0
  2274  0367  0571               	andwf	??_tactsw+1,w
  2275  0368  00FD               	movwf	_flag_sw3+1
  2276  0369  2B6F               	goto	l193
  2277  036A                     l2364:
  2278                           
  2279                           ;Q3.c: 340:             b=a;
  2280  036A  0877               	movf	tactsw@a+1,w
  2281  036B  00F3               	movwf	tactsw@b+1
  2282  036C  0876               	movf	tactsw@a,w
  2283  036D  00F2               	movwf	tactsw@b
  2284  036E  2B37               	goto	l2350
  2285  036F                     l193:
  2286  036F  0008               	return
  2287  0370                     __end_of_tactsw:
  2288                           
  2289                           	psect	text6
  2290  026C                     __ptext6:	
  2291 ;; *************** function _portinit *****************
  2292 ;; Defined at:
  2293 ;;		line 160 in file "Q3.c"
  2294 ;; Parameters:    Size  Location     Type
  2295 ;;		None
  2296 ;; Auto vars:     Size  Location     Type
  2297 ;;		None
  2298 ;; Return value:  Size  Location     Type
  2299 ;;                  1    wreg      void 
  2300 ;; Registers used:
  2301 ;;		wreg, status,2
  2302 ;; Tracked objects:
  2303 ;;		On entry : 0/0
  2304 ;;		On exit  : 0/0
  2305 ;;		Unchanged: 0/0
  2306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2311 ;;Total ram usage:        0 bytes
  2312 ;; Hardware stack levels used:    1
  2313 ;; This function calls:
  2314 ;;		Nothing
  2315 ;; This function is called by:
  2316 ;;		_main
  2317 ;; This function uses a non-reentrant model
  2318 ;;
  2319                           
  2320                           
  2321                           ;psect for function _portinit
  2322  026C                     _portinit:
  2323  026C                     l2392:	
  2324                           ;incstack = 0
  2325                           ; Regs used in _portinit: [wreg+status,2]
  2326                           
  2327                           
  2328                           ;Q3.c: 163:     ANSELA=0x00;
  2329  026C  0023               	movlb	3	; select bank3
  2330  026D  018C               	clrf	12	;volatile
  2331                           
  2332                           ;Q3.c: 164:     ANSELB=0x00;
  2333  026E  018D               	clrf	13	;volatile
  2334  026F                     l2394:
  2335                           
  2336                           ;Q3.c: 166:     PORTA=0x07;
  2337  026F  3007               	movlw	7
  2338  0270  0020               	movlb	0	; select bank0
  2339  0271  008C               	movwf	12	;volatile
  2340  0272                     l2396:
  2341                           
  2342                           ;Q3.c: 167:     TRISA=0x07;
  2343  0272  3007               	movlw	7
  2344  0273  0021               	movlb	1	; select bank1
  2345  0274  008C               	movwf	12	;volatile
  2346                           
  2347                           ;Q3.c: 168:     PORTB=0x00;
  2348  0275  0020               	movlb	0	; select bank0
  2349  0276  018D               	clrf	13	;volatile
  2350                           
  2351                           ;Q3.c: 169:     TRISB=0x00;
  2352  0277  0021               	movlb	1	; select bank1
  2353  0278  018D               	clrf	13	;volatile
  2354  0279                     l2398:
  2355                           
  2356                           ;Q3.c: 170:     PORTC=0x07;
  2357  0279  3007               	movlw	7
  2358  027A  0020               	movlb	0	; select bank0
  2359  027B  008E               	movwf	14	;volatile
  2360  027C                     l2400:
  2361                           
  2362                           ;Q3.c: 171:     TRISC=0x00;
  2363  027C  0021               	movlb	1	; select bank1
  2364  027D  018E               	clrf	14	;volatile
  2365  027E                     l95:
  2366  027E  0008               	return
  2367  027F                     __end_of_portinit:
  2368                           
  2369                           	psect	text7
  2370  029F                     __ptext7:	
  2371 ;; *************** function _motor *****************
  2372 ;; Defined at:
  2373 ;;		line 513 in file "Q3.c"
  2374 ;; Parameters:    Size  Location     Type
  2375 ;;  kakudo          2    8[BANK0 ] int 
  2376 ;;  dig1data        2   10[BANK0 ] unsigned short 
  2377 ;;  dig2data        2   12[BANK0 ] unsigned short 
  2378 ;;  smdata          2   14[BANK0 ] unsigned short 
  2379 ;;  tr              2   16[BANK0 ] unsigned int 
  2380 ;; Auto vars:     Size  Location     Type
  2381 ;;  i               2    8[COMMON] int 
  2382 ;; Return value:  Size  Location     Type
  2383 ;;                  1    wreg      void 
  2384 ;; Registers used:
  2385 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2386 ;; Tracked objects:
  2387 ;;		On entry : 0/0
  2388 ;;		On exit  : 0/0
  2389 ;;		Unchanged: 0/0
  2390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2391 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2392 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2394 ;;      Totals:         2      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2395 ;;Total ram usage:       12 bytes
  2396 ;; Hardware stack levels used:    1
  2397 ;; Hardware stack levels required when called:    1
  2398 ;; This function calls:
  2399 ;;		_dynam
  2400 ;; This function is called by:
  2401 ;;		_main
  2402 ;; This function uses a non-reentrant model
  2403 ;;
  2404                           
  2405                           
  2406                           ;psect for function _motor
  2407  029F                     _motor:
  2408  029F                     l2542:	
  2409                           ;incstack = 0
  2410                           ; Regs used in _motor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2411                           
  2412                           
  2413                           ;Q3.c: 515:     for(int i = kakudo;i>=0;i--){
  2414  029F  0020               	movlb	0	; select bank0
  2415  02A0  0829               	movf	motor@kakudo+1,w
  2416  02A1  00F9               	movwf	motor@i+1
  2417  02A2  0828               	movf	motor@kakudo,w
  2418  02A3  00F8               	movwf	motor@i
  2419  02A4                     l2544:
  2420  02A4  1FF9               	btfss	motor@i+1,7
  2421  02A5  2AA7               	goto	u2231
  2422  02A6  2AA8               	goto	u2230
  2423  02A7                     u2231:
  2424  02A7  2AA9               	goto	l2548
  2425  02A8                     u2230:
  2426  02A8  2AC2               	goto	l276
  2427  02A9                     l2548:
  2428                           
  2429                           ;Q3.c: 516:         dynam(dig1data,dig2data,smdata,tr);
  2430  02A9  0020               	movlb	0	; select bank0
  2431  02AA  082B               	movf	motor@dig1data+1,w
  2432  02AB  00F1               	movwf	dynam@dig1data+1
  2433  02AC  082A               	movf	motor@dig1data,w
  2434  02AD  00F0               	movwf	dynam@dig1data
  2435  02AE  082D               	movf	motor@dig2data+1,w
  2436  02AF  00F3               	movwf	dynam@dig2data+1
  2437  02B0  082C               	movf	motor@dig2data,w
  2438  02B1  00F2               	movwf	dynam@dig2data
  2439  02B2  082F               	movf	motor@smdata+1,w
  2440  02B3  00F5               	movwf	dynam@smdata+1
  2441  02B4  082E               	movf	motor@smdata,w
  2442  02B5  00F4               	movwf	dynam@smdata
  2443  02B6  0831               	movf	motor@tr+1,w
  2444  02B7  00F7               	movwf	dynam@tr+1
  2445  02B8  0830               	movf	motor@tr,w
  2446  02B9  00F6               	movwf	dynam@tr
  2447  02BA  3184  2454  3182   	fcall	_dynam
  2448  02BD                     l2550:
  2449                           
  2450                           ;Q3.c: 517:     }
  2451  02BD  30FF               	movlw	255
  2452  02BE  07F8               	addwf	motor@i,f
  2453  02BF  30FF               	movlw	255
  2454  02C0  3DF9               	addwfc	motor@i+1,f
  2455  02C1  2AA4               	goto	l2544
  2456  02C2                     l276:
  2457  02C2  0008               	return
  2458  02C3                     __end_of_motor:
  2459                           
  2460                           	psect	text8
  2461  0454                     __ptext8:	
  2462 ;; *************** function _dynam *****************
  2463 ;; Defined at:
  2464 ;;		line 206 in file "Q3.c"
  2465 ;; Parameters:    Size  Location     Type
  2466 ;;  dig1data        2    0[COMMON] unsigned short 
  2467 ;;  dig2data        2    2[COMMON] unsigned short 
  2468 ;;  smdata          2    4[COMMON] unsigned short 
  2469 ;;  tr              2    6[COMMON] unsigned int 
  2470 ;; Auto vars:     Size  Location     Type
  2471 ;;  ext             2    6[BANK0 ] unsigned short 
  2472 ;;  j               2    4[BANK0 ] unsigned int 
  2473 ;;  tm              2    2[BANK0 ] unsigned int 
  2474 ;;  smd             2    0[BANK0 ] unsigned short 
  2475 ;; Return value:  Size  Location     Type
  2476 ;;                  1    wreg      void 
  2477 ;; Registers used:
  2478 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2479 ;; Tracked objects:
  2480 ;;		On entry : 0/0
  2481 ;;		On exit  : 0/0
  2482 ;;		Unchanged: 0/0
  2483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2484 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2485 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2487 ;;      Totals:         8       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2488 ;;Total ram usage:       16 bytes
  2489 ;; Hardware stack levels used:    1
  2490 ;; This function calls:
  2491 ;;		Nothing
  2492 ;; This function is called by:
  2493 ;;		_waitSEG
  2494 ;;		_motor
  2495 ;;		_main
  2496 ;;		_clear
  2497 ;;		_waitSEGStop
  2498 ;;		_motorStop
  2499 ;; This function uses a non-reentrant model
  2500 ;;
  2501                           
  2502                           
  2503                           ;psect for function _dynam
  2504  0454                     _dynam:
  2505  0454                     l2192:	
  2506                           ;incstack = 0
  2507                           ; Regs used in _dynam: [wreg-fsr0h+status,2+status,0]
  2508                           
  2509  0454  0020               	movlb	0	; select bank0
  2510  0455  01A2               	clrf	dynam@tm
  2511  0456  01A3               	clrf	dynam@tm+1
  2512                           
  2513                           ;Q3.c: 209:     unsigned short ext=0,smd=0;
  2514  0457  01A6               	clrf	dynam@ext
  2515  0458  01A7               	clrf	dynam@ext+1
  2516  0459  01A0               	clrf	dynam@smd
  2517  045A  01A1               	clrf	dynam@smd+1
  2518  045B                     l2194:
  2519                           
  2520                           ;Q3.c: 210:     RC7=0;
  2521  045B  138E               	bcf	14,7	;volatile
  2522  045C                     l2196:
  2523                           
  2524                           ;Q3.c: 211:     PORTB=dig1data;
  2525  045C  0870               	movf	dynam@dig1data,w
  2526  045D  008D               	movwf	13	;volatile
  2527  045E                     l2198:
  2528                           
  2529                           ;Q3.c: 212:     RC5=0;RC6=1;
  2530  045E  128E               	bcf	14,5	;volatile
  2531  045F                     l2200:
  2532  045F  170E               	bsf	14,6	;volatile
  2533  0460                     l2202:
  2534                           
  2535                           ;Q3.c: 213:     if(tr==5){tm=3000;}
  2536  0460  3005               	movlw	5
  2537  0461  0676               	xorwf	dynam@tr,w
  2538  0462  0477               	iorwf	dynam@tr+1,w
  2539  0463  1D03               	btfss	3,2
  2540  0464  2C66               	goto	u1791
  2541  0465  2C67               	goto	u1790
  2542  0466                     u1791:
  2543  0466  2C6C               	goto	l2206
  2544  0467                     u1790:
  2545  0467                     l2204:
  2546  0467  30B8               	movlw	184
  2547  0468  00A2               	movwf	dynam@tm
  2548  0469  300B               	movlw	11
  2549  046A  00A3               	movwf	dynam@tm+1
  2550  046B  2C70               	goto	l112
  2551  046C                     l2206:
  2552  046C  30E8               	movlw	232
  2553  046D  00A2               	movwf	dynam@tm
  2554  046E  3003               	movlw	3
  2555  046F  00A3               	movwf	dynam@tm+1
  2556  0470                     l112:
  2557                           
  2558                           ;Q3.c: 215:     for(j=tm;j>0;--j);
  2559  0470  0823               	movf	dynam@tm+1,w
  2560  0471  00A5               	movwf	dynam@j+1
  2561  0472  0822               	movf	dynam@tm,w
  2562  0473  00A4               	movwf	dynam@j
  2563  0474                     l2208:
  2564  0474  0824               	movf	dynam@j,w
  2565  0475  0425               	iorwf	dynam@j+1,w
  2566  0476  1D03               	btfss	3,2
  2567  0477  2C79               	goto	u1801
  2568  0478  2C7A               	goto	u1800
  2569  0479                     u1801:
  2570  0479  2C7B               	goto	l2212
  2571  047A                     u1800:
  2572  047A  2C80               	goto	l114
  2573  047B                     l2212:
  2574  047B  3001               	movlw	1
  2575  047C  02A4               	subwf	dynam@j,f
  2576  047D  3000               	movlw	0
  2577  047E  3BA5               	subwfb	dynam@j+1,f
  2578  047F  2C74               	goto	l2208
  2579  0480                     l114:
  2580                           
  2581                           ;Q3.c: 216:     RC5=0;RC6=0;
  2582  0480  128E               	bcf	14,5	;volatile
  2583  0481  130E               	bcf	14,6	;volatile
  2584  0482                     l2216:
  2585                           
  2586                           ;Q3.c: 217:     PORTB=dig2data;
  2587  0482  0872               	movf	dynam@dig2data,w
  2588  0483  008D               	movwf	13	;volatile
  2589  0484                     l2218:
  2590                           
  2591                           ;Q3.c: 218:     RC6=0;RC5=1;
  2592  0484  130E               	bcf	14,6	;volatile
  2593  0485                     l2220:
  2594  0485  168E               	bsf	14,5	;volatile
  2595  0486                     l2222:
  2596                           
  2597                           ;Q3.c: 219:     if(tr==5){tm=3000;}
  2598  0486  3005               	movlw	5
  2599  0487  0676               	xorwf	dynam@tr,w
  2600  0488  0477               	iorwf	dynam@tr+1,w
  2601  0489  1D03               	btfss	3,2
  2602  048A  2C8C               	goto	u1811
  2603  048B  2C8D               	goto	u1810
  2604  048C                     u1811:
  2605  048C  2C92               	goto	l2226
  2606  048D                     u1810:
  2607  048D                     l2224:
  2608  048D  30B8               	movlw	184
  2609  048E  00A2               	movwf	dynam@tm
  2610  048F  300B               	movlw	11
  2611  0490  00A3               	movwf	dynam@tm+1
  2612  0491  2C96               	goto	l116
  2613  0492                     l2226:
  2614  0492  30E8               	movlw	232
  2615  0493  00A2               	movwf	dynam@tm
  2616  0494  3003               	movlw	3
  2617  0495  00A3               	movwf	dynam@tm+1
  2618  0496                     l116:
  2619                           
  2620                           ;Q3.c: 221:     for(j=tm;j>0;--j);
  2621  0496  0823               	movf	dynam@tm+1,w
  2622  0497  00A5               	movwf	dynam@j+1
  2623  0498  0822               	movf	dynam@tm,w
  2624  0499  00A4               	movwf	dynam@j
  2625  049A                     l2228:
  2626  049A  0824               	movf	dynam@j,w
  2627  049B  0425               	iorwf	dynam@j+1,w
  2628  049C  1D03               	btfss	3,2
  2629  049D  2C9F               	goto	u1821
  2630  049E  2CA0               	goto	u1820
  2631  049F                     u1821:
  2632  049F  2CA1               	goto	l2232
  2633  04A0                     u1820:
  2634  04A0  2CA6               	goto	l118
  2635  04A1                     l2232:
  2636  04A1  3001               	movlw	1
  2637  04A2  02A4               	subwf	dynam@j,f
  2638  04A3  3000               	movlw	0
  2639  04A4  3BA5               	subwfb	dynam@j+1,f
  2640  04A5  2C9A               	goto	l2228
  2641  04A6                     l118:
  2642                           
  2643                           ;Q3.c: 222:     RC5=0;RC6=0;
  2644  04A6  128E               	bcf	14,5	;volatile
  2645  04A7  130E               	bcf	14,6	;volatile
  2646                           
  2647                           ;Q3.c: 223:     switch(smdata){
  2648  04A8  2DAD               	goto	l2342
  2649  04A9                     l2236:
  2650                           
  2651                           ;Q3.c: 225:                 PORTB=0x00;smd=(0x01|0x02|0x04|0x08|0x10|0x20);
  2652  04A9  018D               	clrf	13	;volatile
  2653  04AA                     l2238:
  2654  04AA                     l2240:
  2655                           
  2656                           ;Q3.c: 226:                 RC7=0;RC7=1;RC7=0;
  2657  04AA  138E               	bcf	14,7	;volatile
  2658  04AB                     l2242:
  2659  04AB  178E               	bsf	14,7	;volatile
  2660  04AC                     l2244:
  2661  04AC  138E               	bcf	14,7	;volatile
  2662                           
  2663                           ;Q3.c: 227:                 break;
  2664  04AD  2DBD               	goto	l135
  2665  04AE                     l2246:
  2666                           
  2667                           ;Q3.c: 229:                 if(flg==1)cw=0;flg=0;
  2668  04AE  0360               	decf	_flg,w
  2669  04AF  0461               	iorwf	_flg+1,w
  2670  04B0  1D03               	btfss	3,2
  2671  04B1  2CB3               	goto	u1831
  2672  04B2  2CB4               	goto	u1830
  2673  04B3                     u1831:
  2674  04B3  2CB6               	goto	l123
  2675  04B4                     u1830:
  2676  04B4                     l2248:
  2677  04B4  01DE               	clrf	_cw
  2678  04B5  01DF               	clrf	_cw+1
  2679  04B6                     l123:
  2680  04B6  01E0               	clrf	_flg
  2681  04B7  01E1               	clrf	_flg+1
  2682  04B8                     l2250:
  2683                           
  2684                           ;Q3.c: 230:                 if((cw==0)&&(ext==0)){cw=1;ccw=0;ext=1;PORTB=smd=0x09;}
  2685  04B8  085E               	movf	_cw,w
  2686  04B9  045F               	iorwf	_cw+1,w
  2687  04BA  1D03               	btfss	3,2
  2688  04BB  2CBD               	goto	u1841
  2689  04BC  2CBE               	goto	u1840
  2690  04BD                     u1841:
  2691  04BD  2CD4               	goto	l2262
  2692  04BE                     u1840:
  2693  04BE                     l2252:
  2694  04BE  0826               	movf	dynam@ext,w
  2695  04BF  0427               	iorwf	dynam@ext+1,w
  2696  04C0  1D03               	btfss	3,2
  2697  04C1  2CC3               	goto	u1851
  2698  04C2  2CC4               	goto	u1850
  2699  04C3                     u1851:
  2700  04C3  2CD4               	goto	l2262
  2701  04C4                     u1850:
  2702  04C4                     l2254:
  2703  04C4  3001               	movlw	1
  2704  04C5  00DE               	movwf	_cw
  2705  04C6  3000               	movlw	0
  2706  04C7  00DF               	movwf	_cw+1
  2707  04C8                     l2256:
  2708  04C8  01DC               	clrf	_ccw
  2709  04C9  01DD               	clrf	_ccw+1
  2710  04CA                     l2258:
  2711  04CA  3001               	movlw	1
  2712  04CB  00A6               	movwf	dynam@ext
  2713  04CC  3000               	movlw	0
  2714  04CD  00A7               	movwf	dynam@ext+1
  2715  04CE                     l2260:
  2716  04CE  3009               	movlw	9
  2717  04CF  00A0               	movwf	dynam@smd
  2718  04D0  3000               	movlw	0
  2719  04D1  00A1               	movwf	dynam@smd+1
  2720  04D2  0820               	movf	dynam@smd,w
  2721  04D3  008D               	movwf	13	;volatile
  2722  04D4                     l2262:
  2723                           
  2724                           ;Q3.c: 231:                 if((cw==1)&&(ext==0)){cw=2;ccw=3;ext=1;PORTB=smd=0x0C;}
  2725  04D4  035E               	decf	_cw,w
  2726  04D5  045F               	iorwf	_cw+1,w
  2727  04D6  1D03               	btfss	3,2
  2728  04D7  2CD9               	goto	u1861
  2729  04D8  2CDA               	goto	u1860
  2730  04D9                     u1861:
  2731  04D9  2CF2               	goto	l2268
  2732  04DA                     u1860:
  2733  04DA                     l2264:
  2734  04DA  0826               	movf	dynam@ext,w
  2735  04DB  0427               	iorwf	dynam@ext+1,w
  2736  04DC  1D03               	btfss	3,2
  2737  04DD  2CDF               	goto	u1871
  2738  04DE  2CE0               	goto	u1870
  2739  04DF                     u1871:
  2740  04DF  2CF2               	goto	l2268
  2741  04E0                     u1870:
  2742  04E0                     l2266:
  2743  04E0  3002               	movlw	2
  2744  04E1  00DE               	movwf	_cw
  2745  04E2  3000               	movlw	0
  2746  04E3  00DF               	movwf	_cw+1
  2747  04E4  3003               	movlw	3
  2748  04E5  00DC               	movwf	_ccw
  2749  04E6  3000               	movlw	0
  2750  04E7  00DD               	movwf	_ccw+1
  2751  04E8  3001               	movlw	1
  2752  04E9  00A6               	movwf	dynam@ext
  2753  04EA  3000               	movlw	0
  2754  04EB  00A7               	movwf	dynam@ext+1
  2755  04EC  300C               	movlw	12
  2756  04ED  00A0               	movwf	dynam@smd
  2757  04EE  3000               	movlw	0
  2758  04EF  00A1               	movwf	dynam@smd+1
  2759  04F0  0820               	movf	dynam@smd,w
  2760  04F1  008D               	movwf	13	;volatile
  2761  04F2                     l2268:
  2762                           
  2763                           ;Q3.c: 232:                 if((cw==2)&&(ext==0)){cw=3;ccw=2;ext=1;PORTB=smd=0x06;}
  2764  04F2  3002               	movlw	2
  2765  04F3  065E               	xorwf	_cw,w
  2766  04F4  045F               	iorwf	_cw+1,w
  2767  04F5  1D03               	btfss	3,2
  2768  04F6  2CF8               	goto	u1881
  2769  04F7  2CF9               	goto	u1880
  2770  04F8                     u1881:
  2771  04F8  2D11               	goto	l2274
  2772  04F9                     u1880:
  2773  04F9                     l2270:
  2774  04F9  0826               	movf	dynam@ext,w
  2775  04FA  0427               	iorwf	dynam@ext+1,w
  2776  04FB  1D03               	btfss	3,2
  2777  04FC  2CFE               	goto	u1891
  2778  04FD  2CFF               	goto	u1890
  2779  04FE                     u1891:
  2780  04FE  2D11               	goto	l2274
  2781  04FF                     u1890:
  2782  04FF                     l2272:
  2783  04FF  3003               	movlw	3
  2784  0500  00DE               	movwf	_cw
  2785  0501  3000               	movlw	0
  2786  0502  00DF               	movwf	_cw+1
  2787  0503  3002               	movlw	2
  2788  0504  00DC               	movwf	_ccw
  2789  0505  3000               	movlw	0
  2790  0506  00DD               	movwf	_ccw+1
  2791  0507  3001               	movlw	1
  2792  0508  00A6               	movwf	dynam@ext
  2793  0509  3000               	movlw	0
  2794  050A  00A7               	movwf	dynam@ext+1
  2795  050B  3006               	movlw	6
  2796  050C  00A0               	movwf	dynam@smd
  2797  050D  3000               	movlw	0
  2798  050E  00A1               	movwf	dynam@smd+1
  2799  050F  0820               	movf	dynam@smd,w
  2800  0510  008D               	movwf	13	;volatile
  2801  0511                     l2274:
  2802                           
  2803                           ;Q3.c: 233:                 if((cw==3)&&(ext==0)){cw=0;ccw=1;ext=1;PORTB=smd=0x03;}
  2804  0511  3003               	movlw	3
  2805  0512  065E               	xorwf	_cw,w
  2806  0513  045F               	iorwf	_cw+1,w
  2807  0514  1D03               	btfss	3,2
  2808  0515  2D17               	goto	u1901
  2809  0516  2D18               	goto	u1900
  2810  0517                     u1901:
  2811  0517  2CAA               	goto	l2240
  2812  0518                     u1900:
  2813  0518                     l2276:
  2814  0518  0826               	movf	dynam@ext,w
  2815  0519  0427               	iorwf	dynam@ext+1,w
  2816  051A  1D03               	btfss	3,2
  2817  051B  2D1D               	goto	u1911
  2818  051C  2D1E               	goto	u1910
  2819  051D                     u1911:
  2820  051D  2CAA               	goto	l2240
  2821  051E                     u1910:
  2822  051E                     l2278:
  2823  051E  01DE               	clrf	_cw
  2824  051F  01DF               	clrf	_cw+1
  2825  0520                     l2280:
  2826  0520  3001               	movlw	1
  2827  0521  00DC               	movwf	_ccw
  2828  0522  3000               	movlw	0
  2829  0523  00DD               	movwf	_ccw+1
  2830  0524                     l2282:
  2831  0524                     l2284:
  2832  0524  3003               	movlw	3
  2833  0525  00A0               	movwf	dynam@smd
  2834  0526  3000               	movlw	0
  2835  0527  00A1               	movwf	dynam@smd+1
  2836  0528  0820               	movf	dynam@smd,w
  2837  0529  008D               	movwf	13	;volatile
  2838  052A  2CAA               	goto	l2240
  2839  052B                     l2292:
  2840                           
  2841                           ;Q3.c: 237:                 if(flg==1)ccw=0;flg=0;
  2842  052B  0360               	decf	_flg,w
  2843  052C  0461               	iorwf	_flg+1,w
  2844  052D  1D03               	btfss	3,2
  2845  052E  2D30               	goto	u1921
  2846  052F  2D31               	goto	u1920
  2847  0530                     u1921:
  2848  0530  2D33               	goto	l129
  2849  0531                     u1920:
  2850  0531                     l2294:
  2851  0531  01DC               	clrf	_ccw
  2852  0532  01DD               	clrf	_ccw+1
  2853  0533                     l129:
  2854  0533  01E0               	clrf	_flg
  2855  0534  01E1               	clrf	_flg+1
  2856  0535                     l2296:
  2857                           
  2858                           ;Q3.c: 238:                 if((ccw==0)&&(ext==0)){ccw=1;cw=0;ext=1;PORTB=smd=0x03;}
  2859  0535  085C               	movf	_ccw,w
  2860  0536  045D               	iorwf	_ccw+1,w
  2861  0537  1D03               	btfss	3,2
  2862  0538  2D3A               	goto	u1931
  2863  0539  2D3B               	goto	u1930
  2864  053A                     u1931:
  2865  053A  2D51               	goto	l2308
  2866  053B                     u1930:
  2867  053B                     l2298:
  2868  053B  0826               	movf	dynam@ext,w
  2869  053C  0427               	iorwf	dynam@ext+1,w
  2870  053D  1D03               	btfss	3,2
  2871  053E  2D40               	goto	u1941
  2872  053F  2D41               	goto	u1940
  2873  0540                     u1941:
  2874  0540  2D51               	goto	l2308
  2875  0541                     u1940:
  2876  0541                     l2300:
  2877  0541  3001               	movlw	1
  2878  0542  00DC               	movwf	_ccw
  2879  0543  3000               	movlw	0
  2880  0544  00DD               	movwf	_ccw+1
  2881  0545                     l2302:
  2882  0545  01DE               	clrf	_cw
  2883  0546  01DF               	clrf	_cw+1
  2884  0547                     l2304:
  2885  0547  3001               	movlw	1
  2886  0548  00A6               	movwf	dynam@ext
  2887  0549  3000               	movlw	0
  2888  054A  00A7               	movwf	dynam@ext+1
  2889  054B                     l2306:
  2890  054B  3003               	movlw	3
  2891  054C  00A0               	movwf	dynam@smd
  2892  054D  3000               	movlw	0
  2893  054E  00A1               	movwf	dynam@smd+1
  2894  054F  0820               	movf	dynam@smd,w
  2895  0550  008D               	movwf	13	;volatile
  2896  0551                     l2308:
  2897                           
  2898                           ;Q3.c: 239:                 if((ccw==1)&&(ext==0)){ccw=2;cw=3;ext=1;PORTB=smd=0x06;}
  2899  0551  035C               	decf	_ccw,w
  2900  0552  045D               	iorwf	_ccw+1,w
  2901  0553  1D03               	btfss	3,2
  2902  0554  2D56               	goto	u1951
  2903  0555  2D57               	goto	u1950
  2904  0556                     u1951:
  2905  0556  2D6F               	goto	l2314
  2906  0557                     u1950:
  2907  0557                     l2310:
  2908  0557  0826               	movf	dynam@ext,w
  2909  0558  0427               	iorwf	dynam@ext+1,w
  2910  0559  1D03               	btfss	3,2
  2911  055A  2D5C               	goto	u1961
  2912  055B  2D5D               	goto	u1960
  2913  055C                     u1961:
  2914  055C  2D6F               	goto	l2314
  2915  055D                     u1960:
  2916  055D                     l2312:
  2917  055D  3002               	movlw	2
  2918  055E  00DC               	movwf	_ccw
  2919  055F  3000               	movlw	0
  2920  0560  00DD               	movwf	_ccw+1
  2921  0561  3003               	movlw	3
  2922  0562  00DE               	movwf	_cw
  2923  0563  3000               	movlw	0
  2924  0564  00DF               	movwf	_cw+1
  2925  0565  3001               	movlw	1
  2926  0566  00A6               	movwf	dynam@ext
  2927  0567  3000               	movlw	0
  2928  0568  00A7               	movwf	dynam@ext+1
  2929  0569  3006               	movlw	6
  2930  056A  00A0               	movwf	dynam@smd
  2931  056B  3000               	movlw	0
  2932  056C  00A1               	movwf	dynam@smd+1
  2933  056D  0820               	movf	dynam@smd,w
  2934  056E  008D               	movwf	13	;volatile
  2935  056F                     l2314:
  2936                           
  2937                           ;Q3.c: 240:                 if((ccw==2)&&(ext==0)){ccw=3;cw=2;ext=1;PORTB=smd=0x0C;}
  2938  056F  3002               	movlw	2
  2939  0570  065C               	xorwf	_ccw,w
  2940  0571  045D               	iorwf	_ccw+1,w
  2941  0572  1D03               	btfss	3,2
  2942  0573  2D75               	goto	u1971
  2943  0574  2D76               	goto	u1970
  2944  0575                     u1971:
  2945  0575  2D8E               	goto	l2320
  2946  0576                     u1970:
  2947  0576                     l2316:
  2948  0576  0826               	movf	dynam@ext,w
  2949  0577  0427               	iorwf	dynam@ext+1,w
  2950  0578  1D03               	btfss	3,2
  2951  0579  2D7B               	goto	u1981
  2952  057A  2D7C               	goto	u1980
  2953  057B                     u1981:
  2954  057B  2D8E               	goto	l2320
  2955  057C                     u1980:
  2956  057C                     l2318:
  2957  057C  3003               	movlw	3
  2958  057D  00DC               	movwf	_ccw
  2959  057E  3000               	movlw	0
  2960  057F  00DD               	movwf	_ccw+1
  2961  0580  3002               	movlw	2
  2962  0581  00DE               	movwf	_cw
  2963  0582  3000               	movlw	0
  2964  0583  00DF               	movwf	_cw+1
  2965  0584  3001               	movlw	1
  2966  0585  00A6               	movwf	dynam@ext
  2967  0586  3000               	movlw	0
  2968  0587  00A7               	movwf	dynam@ext+1
  2969  0588  300C               	movlw	12
  2970  0589  00A0               	movwf	dynam@smd
  2971  058A  3000               	movlw	0
  2972  058B  00A1               	movwf	dynam@smd+1
  2973  058C  0820               	movf	dynam@smd,w
  2974  058D  008D               	movwf	13	;volatile
  2975  058E                     l2320:
  2976                           
  2977                           ;Q3.c: 241:                 if((ccw==3)&&(ext==0)){ccw=0;cw=1;ext=1;PORTB=smd=0x09;}
  2978  058E  3003               	movlw	3
  2979  058F  065C               	xorwf	_ccw,w
  2980  0590  045D               	iorwf	_ccw+1,w
  2981  0591  1D03               	btfss	3,2
  2982  0592  2D94               	goto	u1991
  2983  0593  2D95               	goto	u1990
  2984  0594                     u1991:
  2985  0594  2CAA               	goto	l2240
  2986  0595                     u1990:
  2987  0595                     l2322:
  2988  0595  0826               	movf	dynam@ext,w
  2989  0596  0427               	iorwf	dynam@ext+1,w
  2990  0597  1D03               	btfss	3,2
  2991  0598  2D9A               	goto	u2001
  2992  0599  2D9B               	goto	u2000
  2993  059A                     u2001:
  2994  059A  2CAA               	goto	l2240
  2995  059B                     u2000:
  2996  059B                     l2324:
  2997  059B  01DC               	clrf	_ccw
  2998  059C  01DD               	clrf	_ccw+1
  2999  059D                     l2326:
  3000  059D  3001               	movlw	1
  3001  059E  00DE               	movwf	_cw
  3002  059F  3000               	movlw	0
  3003  05A0  00DF               	movwf	_cw+1
  3004  05A1                     l2328:
  3005  05A1                     l2330:
  3006  05A1  3009               	movlw	9
  3007  05A2  00A0               	movwf	dynam@smd
  3008  05A3  3000               	movlw	0
  3009  05A4  00A1               	movwf	dynam@smd+1
  3010  05A5  0820               	movf	dynam@smd,w
  3011  05A6  008D               	movwf	13	;volatile
  3012  05A7  2CAA               	goto	l2240
  3013  05A8                     l2338:
  3014                           
  3015                           ;Q3.c: 245:                 cw=ccw=0;
  3016  05A8  01DC               	clrf	_ccw
  3017  05A9  01DD               	clrf	_ccw+1
  3018  05AA  01DE               	clrf	_cw
  3019  05AB  01DF               	clrf	_cw+1
  3020                           
  3021                           ;Q3.c: 246:                 break;
  3022  05AC  2DBD               	goto	l135
  3023  05AD                     l2342:
  3024                           
  3025                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3026                           ; Switch size 1, requested type "simple"
  3027                           ; Number of cases is 1, Range of values is 0 to 0
  3028                           ; switch strategies available:
  3029                           ; Name         Instructions Cycles
  3030                           ; simple_byte            4     3 (average)
  3031                           ; direct_byte            8     6 (fixed)
  3032                           ; jumptable            260     6 (fixed)
  3033                           ;	Chosen strategy is simple_byte
  3034  05AD  0875               	movf	dynam@smdata+1,w
  3035  05AE  3A00               	xorlw	0	; case 0
  3036  05AF  1903               	skipnz
  3037  05B0  2DB2               	goto	l3468
  3038  05B1  2DA8               	goto	l2338
  3039  05B2                     l3468:
  3040                           
  3041                           ; Switch size 1, requested type "simple"
  3042                           ; Number of cases is 3, Range of values is 0 to 2
  3043                           ; switch strategies available:
  3044                           ; Name         Instructions Cycles
  3045                           ; simple_byte           10     6 (average)
  3046                           ; direct_byte           12     6 (fixed)
  3047                           ; jumptable            260     6 (fixed)
  3048                           ;	Chosen strategy is simple_byte
  3049  05B2  0874               	movf	dynam@smdata,w
  3050  05B3  3A00               	xorlw	0	; case 0
  3051  05B4  1903               	skipnz
  3052  05B5  2CA9               	goto	l2236
  3053  05B6  3A01               	xorlw	1	; case 1
  3054  05B7  1903               	skipnz
  3055  05B8  2CAE               	goto	l2246
  3056  05B9  3A03               	xorlw	3	; case 2
  3057  05BA  1903               	skipnz
  3058  05BB  2D2B               	goto	l2292
  3059  05BC  2DA8               	goto	l2338
  3060  05BD                     l135:
  3061  05BD  0008               	return
  3062  05BE                     __end_of_dynam:
  3063                           
  3064                           	psect	text9
  3065  025F                     __ptext9:	
  3066 ;; *************** function _jikan *****************
  3067 ;; Defined at:
  3068 ;;		line 406 in file "Q3.c"
  3069 ;; Parameters:    Size  Location     Type
  3070 ;;		None
  3071 ;; Auto vars:     Size  Location     Type
  3072 ;;		None
  3073 ;; Return value:  Size  Location     Type
  3074 ;;                  1    wreg      void 
  3075 ;; Registers used:
  3076 ;;		wreg, status,2
  3077 ;; Tracked objects:
  3078 ;;		On entry : 0/0
  3079 ;;		On exit  : 0/0
  3080 ;;		Unchanged: 0/0
  3081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3086 ;;Total ram usage:        0 bytes
  3087 ;; Hardware stack levels used:    1
  3088 ;; This function calls:
  3089 ;;		Nothing
  3090 ;; This function is called by:
  3091 ;;		_main
  3092 ;; This function uses a non-reentrant model
  3093 ;;
  3094                           
  3095                           
  3096                           ;psect for function _jikan
  3097  025F                     _jikan:
  3098  025F                     l2482:	
  3099                           ;incstack = 0
  3100                           ; Regs used in _jikan: [wreg+status,2]
  3101                           
  3102                           
  3103                           ;Q3.c: 408:     if(RA2==0){++count;}
  3104  025F  0020               	movlb	0	; select bank0
  3105  0260  190C               	btfsc	12,2	;volatile
  3106  0261  2A63               	goto	u2171
  3107  0262  2A64               	goto	u2170
  3108  0263                     u2171:
  3109  0263  2A69               	goto	l2486
  3110  0264                     u2170:
  3111  0264                     l2484:
  3112  0264  3001               	movlw	1
  3113  0265  07D4               	addwf	_count,f
  3114  0266  3000               	movlw	0
  3115  0267  3DD5               	addwfc	_count+1,f
  3116  0268  2A6B               	goto	l232
  3117  0269                     l2486:
  3118  0269  01D4               	clrf	_count
  3119  026A  01D5               	clrf	_count+1
  3120  026B                     l232:
  3121  026B  0008               	return
  3122  026C                     __end_of_jikan:
  3123                           
  3124                           	psect	text10
  3125  027F                     __ptext10:	
  3126 ;; *************** function _fclr *****************
  3127 ;; Defined at:
  3128 ;;		line 369 in file "Q3.c"
  3129 ;; Parameters:    Size  Location     Type
  3130 ;;  flg             2    0[COMMON] unsigned short 
  3131 ;; Auto vars:     Size  Location     Type
  3132 ;;		None
  3133 ;; Return value:  Size  Location     Type
  3134 ;;                  1    wreg      void 
  3135 ;; Registers used:
  3136 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3137 ;; Tracked objects:
  3138 ;;		On entry : 0/0
  3139 ;;		On exit  : 0/0
  3140 ;;		Unchanged: 0/0
  3141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3142 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3145 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3146 ;;Total ram usage:        2 bytes
  3147 ;; Hardware stack levels used:    1
  3148 ;; This function calls:
  3149 ;;		Nothing
  3150 ;; This function is called by:
  3151 ;;		_main
  3152 ;;		_kaisu
  3153 ;;		_waitSEGStop
  3154 ;;		_motorStop
  3155 ;;		_buzzStop
  3156 ;; This function uses a non-reentrant model
  3157 ;;
  3158                           
  3159                           
  3160                           ;psect for function _fclr
  3161  027F                     _fclr:
  3162  027F                     l2466:	
  3163                           ;incstack = 0
  3164                           ; Regs used in _fclr: [wreg-fsr0h+status,2+status,0]
  3165                           
  3166                           
  3167                           ;Q3.c: 369: void fclr(unsigned short flg);Q3.c: 370: {;Q3.c: 371:     switch(flg){
  3168  027F  2A8E               	goto	l2476
  3169  0280                     l2468:
  3170                           
  3171                           ;Q3.c: 373:                     flag_R=0;
  3172  0280  0020               	movlb	0	; select bank0
  3173  0281  01E4               	clrf	_flag_R
  3174  0282  01E5               	clrf	_flag_R+1
  3175                           
  3176                           ;Q3.c: 374:                     break;
  3177  0283  2A9E               	goto	l217
  3178  0284                     l2470:
  3179                           
  3180                           ;Q3.c: 376:                     flag_P=0;
  3181  0284  0020               	movlb	0	; select bank0
  3182  0285  01E2               	clrf	_flag_P
  3183  0286  01E3               	clrf	_flag_P+1
  3184                           
  3185                           ;Q3.c: 377:                     break;
  3186  0287  2A9E               	goto	l217
  3187  0288                     l2472:
  3188                           
  3189                           ;Q3.c: 379:                     flag_P=flag_R=0;
  3190  0288  0020               	movlb	0	; select bank0
  3191  0289  01E4               	clrf	_flag_R
  3192  028A  01E5               	clrf	_flag_R+1
  3193  028B  01E2               	clrf	_flag_P
  3194  028C  01E3               	clrf	_flag_P+1
  3195                           
  3196                           ;Q3.c: 380:                     break;
  3197  028D  2A9E               	goto	l217
  3198  028E                     l2476:
  3199                           
  3200                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3201                           ; Switch size 1, requested type "simple"
  3202                           ; Number of cases is 1, Range of values is 0 to 0
  3203                           ; switch strategies available:
  3204                           ; Name         Instructions Cycles
  3205                           ; simple_byte            4     3 (average)
  3206                           ; direct_byte            8     6 (fixed)
  3207                           ; jumptable            260     6 (fixed)
  3208                           ;	Chosen strategy is simple_byte
  3209  028E  0871               	movf	fclr@flg+1,w
  3210  028F  3A00               	xorlw	0	; case 0
  3211  0290  1903               	skipnz
  3212  0291  2A93               	goto	l3470
  3213  0292  2A9E               	goto	l217
  3214  0293                     l3470:
  3215                           
  3216                           ; Switch size 1, requested type "simple"
  3217                           ; Number of cases is 3, Range of values is 0 to 2
  3218                           ; switch strategies available:
  3219                           ; Name         Instructions Cycles
  3220                           ; simple_byte           10     6 (average)
  3221                           ; direct_byte           12     6 (fixed)
  3222                           ; jumptable            260     6 (fixed)
  3223                           ;	Chosen strategy is simple_byte
  3224  0293  0870               	movf	fclr@flg,w
  3225  0294  3A00               	xorlw	0	; case 0
  3226  0295  1903               	skipnz
  3227  0296  2A80               	goto	l2468
  3228  0297  3A01               	xorlw	1	; case 1
  3229  0298  1903               	skipnz
  3230  0299  2A84               	goto	l2470
  3231  029A  3A03               	xorlw	3	; case 2
  3232  029B  1903               	skipnz
  3233  029C  2A88               	goto	l2472
  3234  029D  2A9E               	goto	l217
  3235  029E                     l217:
  3236  029E  0008               	return
  3237  029F                     __end_of_fclr:
  3238  007E                     btemp	set	126	;btemp
  3239  007E                     wtemp0	set	126
  3240                           
  3241                           	psect	config
  3242                           
  3243                           ;Config register CONFIG1 @ 0x8007
  3244                           ;	Oscillator Selection
  3245                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  3246                           ;	Watchdog Timer Enable
  3247                           ;	WDTE = OFF, WDT disabled
  3248                           ;	Power-up Timer Enable
  3249                           ;	PWRTE = OFF, PWRT disabled
  3250                           ;	MCLR Pin Function Select
  3251                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  3252                           ;	Flash Program Memory Code Protection
  3253                           ;	CP = OFF, Program memory code protection is disabled
  3254                           ;	Data Memory Code Protection
  3255                           ;	CPD = OFF, Data memory code protection is disabled
  3256                           ;	Brown-out Reset Enable
  3257                           ;	BOREN = OFF, Brown-out Reset disabled
  3258                           ;	Clock Out Enable
  3259                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  3260                           ;	Internal/External Switchover
  3261                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3262                           ;	Fail-Safe Clock Monitor Enable
  3263                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3264  8007                     	org	32775
  3265  8007  09E4               	dw	2532
  3266                           
  3267                           ;Config register CONFIG2 @ 0x8008
  3268                           ;	Flash Memory Self-Write Protection
  3269                           ;	WRT = OFF, Write protection off
  3270                           ;	Voltage Regulator Capacitor Enable
  3271                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
  3272                           ;	PLL Enable
  3273                           ;	PLLEN = OFF, 4x PLL disabled
  3274                           ;	Stack Overflow/Underflow Reset Enable
  3275                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  3276                           ;	Brown-out Reset Voltage Selection
  3277                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  3278                           ;	Low-Voltage Programming Enable
  3279                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  3280  8008                     	org	32776
  3281  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    0
    Data        156
    BSS         34
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     42      78
    BANK1            80      0      76
    BANK2            80      0      76
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_motor
    _main->_tact
    _main->_waitSEG
    _waitSEG->___lwdiv
    _waitSEG->_dynam
    _tact->_tactsw
    _motor->_dynam

Critical Paths under _main in BANK0

    _main->_motor
    _waitSEG->_dynam
    _motor->_dynam

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                26    26      0   15270
                                             10 COMMON     2     2      0
                                             18 BANK0     24    24      0
                              _dynam
                               _fclr
                              _jikan
                              _motor
                           _portinit
                               _tact
                            _waitSEG
                             _zenoff
 ---------------------------------------------------------------------------------
 (1) _zenoff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _waitSEG                                              8     2      6    4164
                                              8 COMMON     2     2      0
                                              8 BANK0      6     0      6
                            ___lwdiv
                              _dynam
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     618
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _tact                                                 2     0      2     822
                                              8 COMMON     2     0      2
                             _tactsw
 ---------------------------------------------------------------------------------
 (2) _tactsw                                               8     8      0     116
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 (1) _portinit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motor                                               12     2     10    4859
                                              8 COMMON     2     2      0
                                              8 BANK0     10     0     10
                              _dynam
 ---------------------------------------------------------------------------------
 (2) _dynam                                               16     8      8    3183
                                              0 COMMON     8     0      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (1) _jikan                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _fclr                                                 2     0      2    1694
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _dynam
   _fclr
   _jikan
   _motor
     _dynam
   _portinit
   _tact
     _tactsw
   _waitSEG
     ___lwdiv
     _dynam
   _zenoff

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2A      4E       5       97.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      4C       7       95.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      4C       9       95.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      F4      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      F4      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Jun 05 09:15:38 2021

                     l95 027E                       _cw 005E                      l112 0470  
                    l114 0480                      l123 04B6                      l116 0496  
                    l108 025E                      l118 04A6                      l135 05BD  
                    l232 026B                      l208 03BB                      l217 029E  
                    l129 0533                      l193 036F                      l258 02F6  
                    l362 0611                      l371 06FD                      l276 02C2  
                    l364 0695                      l356 05C7                      l359 05D4  
                    l378 0765                      l826 0332                      _RA0 0060  
                    _RA1 0061                      _RA2 0062                      _RC0 0070  
                    _RC1 0071                      _RC2 0072                      _RC5 0075  
                    _RC6 0076                      _RC7 0077                      _ccw 005C  
                    _flg 0060                      wreg 0009                     l2200 045F  
                   l2202 0460                     l2300 0541                     l2220 0485  
                   l2212 047B                     l2204 0467                     l2310 0557  
                   l2302 0545                     l2222 0486                     l2206 046C  
                   l2320 058E                     l2312 055D                     l2304 0547  
                   l2240 04AA                     l2232 04A1                     l2224 048D  
                   l2216 0482                     l2208 0474                     l2400 027C  
                   l3200 05ED                     l2330 05A1                     l2322 0595  
                   l2314 056F                     l2306 054B                     l2250 04B8  
                   l2242 04AB                     l2226 0492                     l2218 0484  
                   l3210 05FE                     l3202 05ED                     l2324 059B  
                   l2316 0576                     l2308 0551                     l2260 04CE  
                   l2252 04BE                     l2244 04AC                     l2236 04A9  
                   l2228 049A                     l3300 0794                     l3220 062C  
                   l3212 0602                     l3204 05ED                     l2326 059D  
                   l2318 057C                     l2270 04F9                     l2254 04C4  
                   l2262 04D4                     l2246 04AE                     l2238 04AA  
                   l2342 05AD                     l2350 0337                     l2430 025D  
                   l2422 0256                     l3302 07A1                     l3230 0637  
                   l3222 0631                     l3214 0618                     l3206 05ED  
                   l2328 05A1                     l2280 0520                     l2272 04FF  
                   l2264 04DA                     l2256 04C8                     l2248 04B4  
                   l2192 0454                     l2360 035D                     l2352 0343  
                   l2440 0380                     l2432 0370                     l2424 025A  
                   l3304 07BB                     l3240 0686                     l3232 0657  
                   l3224 0635                     l3216 061E                     l3208 05F9  
                   l2338 05A8                     l2282 0524                     l2274 0511  
                   l2266 04E0                     l2258 04CA                     l2194 045B  
                   l2354 034D                     l2450 0398                     l2442 0383  
                   l2434 0371                     l2370 02FF                     l2530 02D4  
                   l2426 025B                     l3306 07BE                     l3234 065C  
                   l3218 0625                     l2292 052B                     l2284 0524  
                   l2276 0518                     l2268 04F2                     l2196 045C  
                   l2364 036A                     l2356 0352                     l2348 0333  
                   l2452 039D                     l2444 0389                     l2436 0374  
                   l2460 03AB                     l2380 031E                     l2372 0302  
                   l2532 02D8                     l2428 025C                     l3260 06EB  
                   l3252 069F                     l3244 0699                     l3236 0669  
                   l3180 05C7                     l3172 05BE                     l2470 0284  
                   l2294 0531                     l2278 051E                     l2198 045E  
                   l2550 02BD                     l2542 029F                     l2358 0354  
                   l2454 03A3                     l2446 038F                     l2438 037A  
                   l2382 0322                     l2374 0307                     l2366 02F7  
                   l3262 06EE                     l3254 06BF                     l3246 069D  
                   l3238 0683                     l3190 05E6                     l3182 05C7  
                   l3174 05C1                     l2472 0288                     l2296 0535  
                   l2544 02A4                     l2392 026C                     l2448 0392  
                   l2384 0323                     l2376 030B                     l2368 02F9  
                   l2536 02DF                     l2528 02C3                     l3280 0739  
                   l3256 06C4                     l3192 05ED                     l3184 05C7  
                   l3176 05C7                     l2466 027F                     l2482 025F  
                   l2298 053B                     l2394 026F                     l2386 0328  
                   l2378 030F                     l2538 02F1                     l3290 076D  
                   l3282 0753                     l3274 0707                     l3266 0701  
                   l3258 06D1                     l3194 05ED                     l3186 05CC  
                   l3178 05C7                     l2468 0280                     l2476 028E  
                   l2484 0264                     l2548 02A9                     l2396 0272  
                   l2388 032E                     l3284 0756                     l3276 0727  
                   l3268 0705                     l3196 05ED                     l3188 05D0  
                   l3470 0293                     l2486 0269                     l2398 0279  
                   l3278 072C                     l3198 05ED                     l3296 076F  
                   l3288 0769                     l3466 03B0                     l3298 078F  
                   l3468 05B2                     u2000 059B                     u2001 059A  
                   u2010 034D                     u2011 034C                     u2020 035D  
                   u2021 035C                     u2030 02FF                     u2015 0349  
                   u2031 02FE                     u2120 037A                     u2121 0379  
                   u2130 0389                     u2050 030F                     u2131 0388  
                   u2051 030E                     u2140 0398                     u2220 02DE  
                   u2141 0397                     u2045 0303                     u2221 02DD  
                   u2230 02A8                     u2150 03A3                     u2070 031E  
                   u2231 02A7                     u2151 03A2                     u2071 031D  
                   u2160 03AA                     u2161 03A9                     u2065 0310  
                   u2170 0264                     u2090 032E                     u2171 0263  
                   u2091 032D                     u2075 031A                     u2085 0324  
                   u3310 05CC                     u3311 05CB                     u1800 047A  
                   u3400 0625                     u3320 05D0                     u1801 0479  
                   u3401 0624                     u3321 05CF                     u1810 048D  
                   u3410 0631                     u3330 05D4                     u1811 048C  
                   u3411 0630                     u3331 05D3                     u1900 0518  
                   u1820 04A0                     u3500 0705                     u3420 0635  
                   u3340 05DC                     u1901 0517                     u1821 049F  
                   u3501 0704                     u3421 0634                     u3341 05D9  
                   u1910 051E                     u1830 04B4                     u3510 0739  
                   u3430 0669                     u3350 05E4                     u1911 051D  
                   u1831 04B3                     u3511 0738                     u3431 0668  
                   u3351 05E1                     u1920 0531                     u1840 04BE  
                   u3520 0764                     u3440 0694                     u1921 0530  
                   u1841 04BD                     u3521 0763                     u3441 0693  
                   u1930 053B                     u1850 04C4                     u3530 0769  
                   u3450 0699                     u3370 05FE                     u3354 05DE  
                   u1931 053A                     u1851 04C3                     u3531 0768  
                   u3515 0735                     u3451 0698                     u3435 0665  
                   u3371 05FD                     u1940 0541                     u1860 04DA  
                   u3540 076D                     u3460 069D                     u3380 0602  
                   u3364 05E6                     u1941 0540                     u1861 04D9  
                   u3541 076C                     u3525 0760                     u3461 069C  
                   u3445 0690                     u3381 0601                     u1950 0557  
                   u1870 04E0                     u1790 0467                     u3550 07A1  
                   u3470 06D1                     u3390 061E                     u1951 0556  
                   u1871 04DF                     u1791 0466                     u3551 07A0  
                   u3471 06D0                     u3391 061D                     u1960 055D  
                   u1880 04F9                     u3560 07CC                     u3480 06FC  
                   u1961 055C                     u1881 04F8                     u3561 07CB  
                   u3481 06FB                     u1970 0576                     u1890 04FF  
                   u3490 0701                     u1971 0575                     u1891 04FE  
                   u3555 079D                     u3491 0700                     u3475 06CD  
                   u1980 057C                     u1981 057B                     u3565 07C8  
                   u3485 06F8                     u1990 0595                     u1991 0594  
                   u3807 05F2                     _atai 0056                     _fclr 027F  
                   _main 05BE                     _num0 00D4                     _kisu 0158  
                   _moja 014C                     _samf 0120                     _mojf 0140  
                   _tact 0370                     _mojh 006A                     _moji 00C0  
                   _mojn 00E8                     _samp 00A0                     _gusu 0162  
                   fsr0h 0005                     fsr1h 0007                     indf0 0000  
                   fsr0l 0004                     fsr1l 0006                     btemp 007E  
                   start 0002                    ?_fclr 0070                    ?_main 0070  
                  ?_tact 0078          __end_of___lwdiv 0333                    _PORTA 000C  
                  _PORTB 000D                    _PORTC 000E                    _TRISA 008C  
                  _TRISB 008D                    _TRISC 008E                    _code1 004C  
                  _atai1 0058                    _jikan 025F                    _count 0054  
                  _dynam 0454                    _fugou 004A                    _motor 029F  
                  main@i 0048          __end_of_waitSEG 02F7                    status 0003  
                  wtemp0 007E          __initialization 07CF             __end_of_fclr 029F  
           __end_of_main 07CF             __end_of_tact 03BC                   ??_fclr 0072  
                 ??_main 007A                   ??_tact 007A                   ?_jikan 0070  
                 ?_dynam 0070                   ?_motor 0028                   _ANSELA 018C  
                 _ANSELB 018D                   _OSCCON 0099              dynam@smdata 0074  
                 _code10 004E                   _atai10 005A                   _flag_P 0062  
                 _flag_R 0064                ??___lwdiv 0074                   _tactsw 0333  
                 _zenoff 0256                   dynam@j 0024                ??_waitSEG 0078  
                 motor@i 0078         __end_of_portinit 027F  __end_of__initialization 07FD  
         __pcstackCOMMON 0070             __pidataBANK0 0246             __pidataBANK1 0408  
           __pidataBANK2 03BC            __end_of_jikan 026C            __end_of_dynam 05BE  
          __end_of_motor 02C3                  ??_jikan 0070                  ??_dynam 0078  
                ??_motor 0078               __pbssBANK0 004A               __pmaintext 05BE  
                ?_tactsw 0070                  ?_zenoff 0070              waitSEG@seg1 0028  
            waitSEG@seg2 002A                ?_portinit 0070                  ___lwdiv 02F7  
                _code100 0050          __size_of_tactsw 003D                  __ptext1 0256  
                __ptext2 02C3                  __ptext3 02F7                  __ptext4 0370  
                __ptext5 0333                  __ptext6 026C                  __ptext7 029F  
                __ptext8 0454                  __ptext9 025F          __size_of_zenoff 0009  
                fclr@flg 0070                  _waitSEG 02C3              motor@kakudo 0028  
                clrloop0 024B     end_of_initialization 07FD              motor@smdata 002E  
                dynam@tm 0022                  dynam@tr 0076                  init_ram 0250  
                initloop 0251                  tactsw@a 0076                  tactsw@b 0072  
                tactsw@c 0074                  motor@tr 0030               ??_portinit 0070  
         __end_of_tactsw 0370           __end_of_zenoff 025F      start_initialization 07CF  
            __pdataBANK0 006A              __pdataBANK1 00A0              __pdataBANK2 0120  
               ??_tactsw 0070                 ??_zenoff 0070              __pbssCOMMON 007C  
              ___latbits 0003            __pcstackBANK0 0020         ___lwdiv@dividend 0072  
               ?___lwdiv 0070        __size_of_portinit 0013                 ?_waitSEG 0028  
       ___lwdiv@quotient 0075           __size_of_jikan 000D           __size_of_dynam 016A  
         __size_of_motor 0024            dynam@dig1data 0070            dynam@dig2data 0072  
              clear_ram0 024A            motor@dig1data 002A            motor@dig2data 002C  
       __size_of___lwdiv 003C                 _code1000 0052          ___lwdiv@divisor 0070  
        ___lwdiv@counter 0077         __size_of_waitSEG 0034                 __ptext10 027F  
               _flag_sw1 0068                 _flag_sw2 0066                 _flag_sw3 007C  
              waitSEG@wt 002C            __size_of_fclr 0020            __size_of_main 0211  
          __size_of_tact 004C                 _portinit 026C                 dynam@ext 0026  
               dynam@smd 0020                 tact@mode 0078                 waitSEG@i 0078  
